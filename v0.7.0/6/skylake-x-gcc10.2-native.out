run_benchmark: v0.8.0~32 /home/jkeiser/simdjson_benchmark_results/v0.7.0/6/skylake-x-gcc10.2-native.json -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native
git reset --hard v0.8.0~32
HEAD is now at c90ee572 This might make the fuzzer error debuggable. (#1345)
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- git Version: v0.2.1-c90ee572
-- Version: 0.2.1
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 10
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
make[3]: Nothing to be done for '_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build'.
[ 80%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
make[3]: Nothing to be done for 'jsonexamples/generated/CMakeFiles/generated-data.dir/build'.
[ 80%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/g++-10  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/src  -march=native -O3 -DNDEBUG -fPIC   -pthread -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/g++-10 -fPIC -march=native -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.6 -o ../libsimdjson.so.6.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.6.0.0 ../libsimdjson.so.6 ../libsimdjson.so
[ 90%] Built target simdjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/g++-10  -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/g++-10  -march=native -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.6.0.0 ../_deps/google_benchmarks/src/libbenchmark.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/6/skylake-x-gcc10.2-native.json --benchmark_out_format=json
2021-01-24 23:58:46
Running benchmark/bench_ondemand
Run on (4 X 3200 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 1024 KiB (x4)
  L3 Unified 8448 KiB (x1)
Load Average: 1.00, 1.00, 1.00
***WARNING*** CPU scaling is enabled, the benchmark real time measurements may be noisy and will incur extra overhead.
On Demand implementation: haswell
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Benchmark                         Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
PartialTweets<OnDemand>      243795 ns       243789 ns         2867           2.405k           2.76923G               0         5.843k      728.3k              1.15326          4.38506k       3.19364G          2.21746M                    3.51134                     3.04471           438.506k    2.51538k   631.515k       2.41251G/s  0.0153471   5.94025k   732.275k         1.15955    4.1019k/s 3.00372G/s     2.21746M               3.51134                3.02819        100        410.19k/s [best: throughput=  2.77 GB/s doc_throughput=  4385 docs/s instructions=     2217464 cycles=      728300 branch_miss=    2405 cache_miss=       0 cache_ref=      5843 items=       100 avg_time=    229461 ns]
PartialTweets<Dom>           341646 ns       341618 ns         2051           3.793k           1.95755G               0         31.58k    1030.25k               1.6314          3.09977k       3.19355G          3.07043M                    4.86201                     2.98027           309.977k    3.92171k   631.515k       1.72164G/s    0.47294   31.8258k   1037.15k         1.64232   2.92724k/s 3.03599G/s     3.07043M               4.86201                2.96046        100       292.724k/s [best: throughput=  1.96 GB/s doc_throughput=  3099 docs/s instructions=     3070434 cycles=     1030254 branch_miss=    3793 cache_miss=       0 cache_ref=     31580 items=       100 avg_time=    325126 ns]
Creating a source file spanning 44921 KB 
LargeRandom<Dom>           98876320 ns     98873478 ns            7         850.309k           466.093M        6.80517M       6.89561M    314.673M              6.84091           10.1327        3.1885G          989.581M                    21.5132                     3.14479           10.1327M    850.673k   45.9988M       443.677M/s   6.81384M   6.89569M   315.154M         6.85135    10.1139/s 3.18744G/s     989.581M               21.5132                3.13999      1000k       10.1139M/s [best: throughput=  0.47 GB/s doc_throughput=    10 docs/s instructions=   989581014 cycles=   314673386 branch_miss=  850309 cache_miss= 6805171 cache_ref=   6895612 items=   1000000 avg_time=  98848151 ns]
LargeRandomSum<Dom>        98663490 ns     98654152 ns            7         850.676k           467.217M        6.37475M       6.51947M    313.935M              6.82486           10.1572       3.18869G          994.581M                    21.6219                     3.16811           10.1572M    851.021k   45.9988M       444.663M/s   6.42846M   6.51942M   314.439M         6.83582    10.1364/s 3.18729G/s     994.581M               21.6219                3.16303      1000k       10.1364M/s [best: throughput=  0.47 GB/s doc_throughput=    10 docs/s instructions=   994581027 cycles=   313935214 branch_miss=  850676 cache_miss= 6374752 cache_ref=   6519468 items=   1000000 avg_time=  98635181 ns]
LargeRandom<OnDemand>      65848752 ns     65846163 ns           11         866.985k           699.578M        3.45712M       3.57271M    209.672M              4.55821           15.2086       3.18882G          640.959M                    13.9343                     3.05696           15.2086M    866.894k   45.9988M       666.217M/s   3.48131M   3.57279M   209.862M         4.56233    15.1869/s 3.18715G/s     640.959M               13.9343                 3.0542      1000k       15.1869M/s [best: throughput=  0.70 GB/s doc_throughput=    15 docs/s instructions=   640958909 cycles=   209672212 branch_miss=  866985 cache_miss= 3457116 cache_ref=   3572705 items=   1000000 avg_time=  65821422 ns]
LargeRandomSum<OnDemand>   63455639 ns     63453847 ns           11         874.004k           726.297M        3.18604M       3.19661M    201.854M              4.38824           15.7895       3.18717G          594.958M                    12.9342                     2.94747           15.7895M    874.542k   45.9988M       691.335M/s   3.12801M   3.19657M   202.237M         4.39657    15.7595/s 3.18715G/s     594.958M               12.9342                2.94189      1000k       15.7595M/s [best: throughput=  0.73 GB/s doc_throughput=    15 docs/s instructions=   594958339 cycles=   201853685 branch_miss=  874004 cache_miss= 3186042 cache_ref=   3196607 items=   1000000 avg_time=  63428628 ns]
Creating a source file spanning 134087 KB 
Kostya<Dom>                98850576 ns     98846574 ns            7         479.319k           1.39102G        10.1919M       10.3148M    314.744M               2.2923           10.1309       3.18864G          972.126M                    7.08005                     3.08863           5.31151M    479.438k   137.305M       1.29367G/s   10.2262M   10.3151M   315.059M         2.29459    10.1167/s 3.18736G/s     972.126M               7.08005                3.08553   524.288k       5.30406M/s [best: throughput=  1.39 GB/s doc_throughput=    10 docs/s instructions=   972125797 cycles=   314743762 branch_miss=  479319 cache_miss=10191915 cache_ref=  10314815 items=    524288 avg_time=  98820144 ns]
KostyaSum<Dom>             98069652 ns     98067118 ns            7         479.684k           1.40349G        9.93446M       10.1184M    311.922M              2.27174           10.2217       3.18837G          974.747M                    7.09914                     3.12497           5.35911M    479.894k   137.305M       1.30396G/s   9.99988M   10.1181M   312.555M         2.27636    10.1971/s 3.18716G/s     974.747M               7.09914                3.11864   524.288k       5.34622M/s [best: throughput=  1.40 GB/s doc_throughput=    10 docs/s instructions=   974747251 cycles=   311921807 branch_miss=  479684 cache_miss= 9934457 cache_ref=  10118392 items=    524288 avg_time=  98039516 ns]
Kostya<OnDemand>           69705474 ns     69699908 ns           10          460.84k           1.97376G        6.34478M       6.47139M    221.817M              1.61551            14.375       3.18862G          685.012M                    4.98898                     3.08818           7.53663M    461.099k   137.305M       1.83465G/s   6.38502M   6.47141M   222.122M         1.61772    14.3472/s 3.18683G/s     685.012M               4.98898                3.08395   524.288k       7.52208M/s [best: throughput=  1.97 GB/s doc_throughput=    14 docs/s instructions=   685012177 cycles=   221817185 branch_miss=  460840 cache_miss= 6344780 cache_ref=   6471391 items=    524288 avg_time=  69677121 ns]
KostyaSum<OnDemand>        69414034 ns     69410822 ns           10         472.155k           1.97997G        6.16292M       6.27369M    221.116M               1.6104           14.4202       3.18855G          676.623M                    4.92789                     3.06003           7.56035M    472.082k   137.305M        1.8423G/s   6.19109M   6.27375M   221.198M           1.611     14.407/s  3.1868G/s     676.623M               4.92789                 3.0589   524.288k        7.5534M/s [best: throughput=  1.98 GB/s doc_throughput=    14 docs/s instructions=   676623278 cycles=   221116450 branch_miss=  472155 cache_miss= 6162919 cache_ref=   6273687 items=    524288 avg_time=  69383896 ns]
DistinctUserID<Dom>          340924 ns       340917 ns         2058           3.981k           1.97592G               4        31.507k    1020.62k              1.61614          3.12886k       3.19337G          3.02096M                    4.78367                     2.95994           359.819k    4.16945k   631.515k       1.72518G/s    4.38192   31.8019k   1029.08k         1.62954   2.93326k/s 3.01857G/s     3.02096M               4.78367                2.93559        115       337.325k/s [best: throughput=  1.98 GB/s doc_throughput=  3128 docs/s instructions=     3020962 cycles=     1020617 branch_miss=    3981 cache_miss=       4 cache_ref=     31507 items=       115 avg_time=    322582 ns]
On Demand implementation: haswell
DistinctUserID<OnDemand>     236977 ns       236973 ns         2975           2.121k           2.89217G               0          9.87k    697.398k              1.10433          4.57974k        3.1939G          2.17925M                    3.45083                     3.12483            526.67k    2.24854k   631.515k       2.48191G/s  0.0836975   9.89967k   702.112k         1.11179    4.2199k/s 2.96284G/s     2.17925M               3.45083                3.10386        115       485.288k/s [best: throughput=  2.89 GB/s doc_throughput=  4579 docs/s instructions=     2179253 cycles=      697398 branch_miss=    2121 cache_miss=       0 cache_ref=      9870 items=       115 avg_time=    219981 ns]
FindTweet<Dom>               323688 ns       323681 ns         2162           3.638k            2.0872G               2        28.176k    966.306k              1.53014          3.30506k        3.1937G          2.93086M                      4.641                     3.03306           3.30506k     3.7847k   631.515k       1.81705G/s    2.00694   27.9785k   972.067k         1.53926   3.08946k/s 3.00316G/s     2.93086M                 4.641                3.01508          1       3.08946k/s [best: throughput=  2.09 GB/s doc_throughput=  3305 docs/s instructions=     2930861 cycles=      966306 branch_miss=    3638 cache_miss=       2 cache_ref=     28176 items=         1 avg_time=    304677 ns]
On Demand implementation: haswell
FindTweet<OnDemand>          168208 ns       168205 ns         4119           1.235k           4.19759G               0         5.448k    480.587k             0.761006          6.64686k       3.19439G          1.57077M                     2.4873                     3.26844           6.64686k    1.27627k   631.515k       3.49659G/s   9.22554m   5.47826k    482.75k        0.764431   5.94512k/s    2.87G/s     1.57077M                2.4873                 3.2538          1       5.94512k/s [best: throughput=  4.20 GB/s doc_throughput=  6646 docs/s instructions=     1570770 cycles=      480587 branch_miss=    1235 cache_miss=       0 cache_ref=      5448 items=         1 avg_time=    151237 ns]
