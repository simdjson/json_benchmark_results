run_benchmark: v0.8.0~35 /home/jkeiser/simdjson_benchmark_results/v0.7.0/3/skylake-clang11-native.json -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native
git reset --hard v0.8.0~35
HEAD is now at 91b07ba0 Allow build without download (#1334)
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- git Version: v0.2.1-91b07ba0
-- Version: 0.2.1
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES -- failed to compile
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 10
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
make[3]: Nothing to be done for '_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build'.
[ 80%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
make[3]: Nothing to be done for 'jsonexamples/generated/CMakeFiles/generated-data.dir/build'.
[ 80%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/clang++-11  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/src  -march=native -O3 -DNDEBUG -fPIC   -pthread -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/clang++-11 -fPIC -march=native -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.6 -o ../libsimdjson.so.6.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.6.0.0 ../libsimdjson.so.6 ../libsimdjson.so
[ 90%] Built target simdjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/clang++-11  -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/clang++-11  -march=native -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.6.0.0 ../_deps/google_benchmarks/src/libbenchmark.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/3/skylake-clang11-native.json --benchmark_out_format=json
2021-01-24 21:12:38
Running benchmark/bench_ondemand
Run on (4 X 4000 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 256 KiB (x4)
  L3 Unified 8192 KiB (x1)
Load Average: 1.01, 1.01, 0.99
On Demand implementation: haswell
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Benchmark                         Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
PartialTweets<OnDemand>      164278 ns       164280 ns         4258           1.678k           4.06972G               0        54.671k    572.999k              0.90734          6.44438k       3.69262G          1.82725M                    2.89343                     3.18892           644.438k    1.80494k   631.515k       3.58014G/s  0.0401597   54.6827k   577.108k        0.913847   6.08719k/s 3.51297G/s     1.82725M               2.89343                3.16621        100       608.719k/s [best: throughput=  4.07 GB/s doc_throughput=  6444 docs/s instructions=     1827247 cycles=      572999 branch_miss=    1678 cache_miss=       0 cache_ref=     54671 items=       100 avg_time=    156355 ns]
PartialTweets<Dom>           281006 ns       281007 ns         2484           3.706k           2.32977G               0        87.674k    1000.75k              1.58467          3.68918k       3.69193G          2.99807M                    4.74742                     2.99584           368.918k     3.8436k   631.515k       2.09298G/s   0.252818   87.6553k   1006.97k         1.59454   3.55862k/s 3.58345G/s     2.99807M               4.74742                 2.9773        100       355.862k/s [best: throughput=  2.33 GB/s doc_throughput=  3689 docs/s instructions=     2998067 cycles=     1000745 branch_miss=    3706 cache_miss=       0 cache_ref=     87674 items=       100 avg_time=    272865 ns]
Creating a source file spanning 44921 KB 
LargeRandom<Dom>           88630608 ns     88631135 ns            8          914.52k            520.95M        10.9231M       15.2287M    325.748M              7.08167           11.3253       3.68919G          1034.69M                    22.4938                     3.17634           11.3253M     917.64k   45.9988M       494.949M/s   10.9718M   15.2299M   326.906M         7.10683    11.2827/s 3.68838G/s     1034.69M               22.4938                3.16509      1000k       11.2827M/s [best: throughput=  0.52 GB/s doc_throughput=    11 docs/s instructions=  1034686010 cycles=   325747933 branch_miss=  914520 cache_miss=10923146 cache_ref=  15228675 items=   1000000 avg_time=  88616654 ns]
LargeRandomSum<Dom>        88132950 ns     88133487 ns            8         919.641k            523.01M        10.3334M       14.3697M    324.442M              7.05328           11.3701       3.68893G          1027.69M                    22.3416                     3.16755           11.3701M    920.749k   45.9988M       497.743M/s   10.3398M   14.3743M   325.077M         7.06708    11.3464/s 3.68846G/s     1027.69M               22.3416                3.16136      1000k       11.3464M/s [best: throughput=  0.52 GB/s doc_throughput=    11 docs/s instructions=  1027686012 cycles=   324442235 branch_miss=  919641 cache_miss=10333364 cache_ref=  14369667 items=   1000000 avg_time=  88119248 ns]
LargeRandom<OnDemand>      62065444 ns     62065812 ns           11         901.414k           741.692M        5.57285M       7.89134M    228.772M              4.97343           16.1242       3.68876G          616.142M                    13.3948                     2.69326           16.1242M    902.365k   45.9988M       706.796M/s   5.64126M    7.8947M   228.903M         4.97629    16.1119/s 3.68807G/s     616.142M               13.3948                2.69172      1000k       16.1119M/s [best: throughput=  0.74 GB/s doc_throughput=    16 docs/s instructions=   616142125 cycles=   228771887 branch_miss=  901414 cache_miss= 5572851 cache_ref=   7891341 items=   1000000 avg_time=  62052839 ns]
LargeRandomSum<OnDemand>   62930838 ns     62931213 ns           11         894.812k           732.268M        4.95268M       7.03682M    231.744M              5.03804           15.9193       3.68919G          619.141M                      13.46                     2.67167           15.9193M     902.53k   45.9988M       697.076M/s   5.01878M   7.04091M   232.107M         5.04594    15.8904/s 3.68827G/s     619.141M                 13.46                2.66748      1000k       15.8904M/s [best: throughput=  0.73 GB/s doc_throughput=    15 docs/s instructions=   619141391 cycles=   231743543 branch_miss=  894812 cache_miss= 4952675 cache_ref=   7036824 items=   1000000 avg_time=  62917495 ns]
Creating a source file spanning 134087 KB 
Kostya<Dom>                94007104 ns     94006143 ns            7         1040.88k           1.46214G        15.8533M       22.1461M    346.428M              2.52305           10.6489       3.68906G          985.272M                    7.17579                     2.84409           5.58307M    1043.75k   137.305M       1.36029G/s   15.8924M   22.2356M   346.727M         2.52524    10.6376/s 3.68835G/s     985.272M               7.17579                2.84163   524.288k       5.57717M/s [best: throughput=  1.46 GB/s doc_throughput=    10 docs/s instructions=   985271657 cycles=   346427861 branch_miss= 1040875 cache_miss=15853301 cache_ref=  22146114 items=    524288 avg_time=  93992107 ns]
KostyaSum<Dom>             92587004 ns     92587566 ns            8         1045.98k           1.48514G        15.4883M       21.7208M    341.063M              2.48398           10.8164       3.68907G          982.126M                    7.15288                      2.8796            5.6709M    1047.45k   137.305M       1.38113G/s   15.5076M   21.6931M   341.494M         2.48712    10.8006/s 3.68834G/s     982.126M               7.15288                2.87597   524.288k       5.66262M/s [best: throughput=  1.49 GB/s doc_throughput=    10 docs/s instructions=   982125929 cycles=   341063044 branch_miss= 1045981 cache_miss=15488264 cache_ref=  21720784 items=    524288 avg_time=  92572177 ns]
Kostya<OnDemand>           59604588 ns     59603974 ns           12         492.449k           2.30579G        9.93648M       13.8064M    219.678M              1.59993           16.7932        3.6891G          608.546M                    4.43207                     2.77017           8.80448M     494.51k   137.305M       2.14541G/s   9.98628M   13.8072M   219.827M         1.60101    16.7774/s 3.68813G/s     608.546M               4.43207                2.76829   524.288k       8.79619M/s [best: throughput=  2.31 GB/s doc_throughput=    16 docs/s instructions=   608545795 cycles=   219677761 branch_miss=  492449 cache_miss= 9936483 cache_ref=  13806374 items=    524288 avg_time=  59591603 ns]
KostyaSum<OnDemand>        60672350 ns     60671811 ns           12         494.878k           2.26551G        9.62931M       13.3623M    223.579M              1.62834           16.4998       3.68901G          610.643M                    4.44735                     2.73122           8.65066M    499.944k   137.305M       2.10765G/s   9.66457M   13.3627M   223.756M         1.62963    16.4821/s 3.68797G/s     610.643M               4.44735                2.72906   524.288k       8.64138M/s [best: throughput=  2.27 GB/s doc_throughput=    16 docs/s instructions=   610642735 cycles=   223578656 branch_miss=  494878 cache_miss= 9629310 cache_ref=  13362307 items=    524288 avg_time=  60658997 ns]
DistinctUserID<Dom>          284576 ns       284578 ns         2459           4.089k            2.2968G               0        89.002k     1015.1k               1.6074          3.63697k       3.69189G            2.938M                     4.6523                     2.89429           418.252k    4.23926k   631.515k       2.06673G/s   0.108581   89.1582k    1020.3k         1.61564   3.51398k/s 3.58531G/s       2.938M                4.6523                2.87955        115       404.108k/s [best: throughput=  2.30 GB/s doc_throughput=  3636 docs/s instructions=     2937997 cycles=     1015100 branch_miss=    4089 cache_miss=       0 cache_ref=     89002 items=       115 avg_time=    276479 ns]
On Demand implementation: haswell
DistinctUserID<OnDemand>     180267 ns       180269 ns         3889            2.24k            3.7046G               0        53.461k    629.443k             0.996719           5.8662k       3.69244G          1.78913M                    2.83307                      2.8424           674.613k    2.43711k   631.515k        3.2626G/s   0.156853   53.3863k    635.98k         1.00707   5.54728k/s 3.52796G/s     1.78913M               2.83307                2.81318        115       637.937k/s [best: throughput=  3.70 GB/s doc_throughput=  5866 docs/s instructions=     1789128 cycles=      629443 branch_miss=    2240 cache_miss=       0 cache_ref=     53461 items=       115 avg_time=    172307 ns]
FindTweet<Dom>               270362 ns       270364 ns         2588           3.535k           2.42091G               0        78.841k    963.101k              1.52506           3.8335k       3.69205G          2.84343M                    4.50255                     2.95237            3.8335k    3.67109k   631.515k       2.17538G/s    1.64606   78.7507k   967.983k          1.5328   3.69872k/s  3.5803G/s     2.84343M               4.50256                2.93748          1       3.69872k/s [best: throughput=  2.42 GB/s doc_throughput=  3833 docs/s instructions=     2843431 cycles=      963101 branch_miss=    3535 cache_miss=       0 cache_ref=     78841 items=         1 avg_time=    262297 ns]
On Demand implementation: haswell
FindTweet<OnDemand>          124276 ns       124272 ns         5622              997           5.44875G               0        30.042k    428.045k             0.677807          8.62805k        3.6932G           1.3722M                    2.17287                     3.20574           8.62805k     1038.37   631.515k        4.7327G/s  0.0711491    29.732k   429.749k        0.680506   8.04683k/s 3.45812G/s      1.3722M               2.17287                3.19302          1       8.04683k/s [best: throughput=  5.45 GB/s doc_throughput=  8628 docs/s instructions=     1372199 cycles=      428045 branch_miss=     997 cache_miss=       0 cache_ref=     30042 items=         1 avg_time=    116438 ns]
