run_benchmark: v0.8.0~35 /home/jkeiser/simdjson_benchmark_results/v0.7.0/3/skylake-gcc10.2-native.json -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native
git reset --hard v0.8.0~35
HEAD is now at 91b07ba0 Allow build without download (#1334)
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- git Version: v0.2.1-91b07ba0
-- Version: 0.2.1
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 10
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
make[3]: Nothing to be done for '_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build'.
[ 80%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
make[3]: Nothing to be done for 'jsonexamples/generated/CMakeFiles/generated-data.dir/build'.
[ 80%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/g++-10  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/src  -march=native -O3 -DNDEBUG -fPIC   -pthread -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/g++-10 -fPIC -march=native -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.6 -o ../libsimdjson.so.6.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.6.0.0 ../libsimdjson.so.6 ../libsimdjson.so
[ 90%] Built target simdjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/g++-10  -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/g++-10  -march=native -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.6.0.0 ../_deps/google_benchmarks/src/libbenchmark.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/3/skylake-gcc10.2-native.json --benchmark_out_format=json
2021-01-24 21:21:13
Running benchmark/bench_ondemand
Run on (4 X 4000 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 256 KiB (x4)
  L3 Unified 8192 KiB (x1)
Load Average: 1.00, 1.00, 1.00
On Demand implementation: haswell
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Benchmark                         Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
PartialTweets<OnDemand>      172291 ns       172292 ns         4063           1.694k           3.86877G               0        54.845k    602.734k             0.954425          6.12617k       3.69245G          2.12486M                     3.3647                     3.52537           612.617k    1.79978k   631.515k       3.41365G/s   1.47674m   54.8509k   606.557k        0.960479   5.80411k/s 3.52052G/s     2.12486M                3.3647                3.50315        100       580.411k/s [best: throughput=  3.87 GB/s doc_throughput=  6126 docs/s instructions=     2124860 cycles=      602734 branch_miss=    1694 cache_miss=       0 cache_ref=     54845 items=       100 avg_time=    164350 ns]
PartialTweets<Dom>           265390 ns       265392 ns         2638           3.749k           2.47089G               0        87.486k    943.628k              1.49423          3.91264k       3.69208G          2.91501M                    4.61589                     3.08915           391.264k    3.87932k   631.515k       2.21613G/s  0.0314632   87.5796k   949.339k         1.50327   3.76801k/s 3.57712G/s     2.91501M               4.61589                3.07056        100       376.801k/s [best: throughput=  2.47 GB/s doc_throughput=  3912 docs/s instructions=     2915006 cycles=      943628 branch_miss=    3749 cache_miss=       0 cache_ref=     87486 items=       100 avg_time=    257251 ns]
Creating a source file spanning 44921 KB 
LargeRandom<Dom>           94318376 ns     94318938 ns            7         871.524k           488.185M        10.9301M       15.2793M    347.591M              7.55653            10.613       3.68899G          972.675M                    21.1457                     2.79833            10.613M      871.3k   45.9988M       465.101M/s   10.9573M   15.2805M   347.874M         7.56268    10.6023/s 3.68827G/s     972.675M               21.1457                2.79606      1000k       10.6023M/s [best: throughput=  0.49 GB/s doc_throughput=    10 docs/s instructions=   972674944 cycles=   347591319 branch_miss=  871524 cache_miss=10930113 cache_ref=  15279328 items=   1000000 avg_time=  94303945 ns]
LargeRandomSum<Dom>        94162119 ns     94162674 ns            7         870.923k           489.379M         10.436M       14.4322M    346.756M              7.53837            10.639       3.68912G          977.675M                    21.2544                     2.81949            10.639M      871.5k   45.9988M       465.873M/s   10.4054M   14.4314M   347.311M         7.55044    10.6199/s 3.68842G/s     977.675M               21.2544                2.81498      1000k       10.6199M/s [best: throughput=  0.49 GB/s doc_throughput=    10 docs/s instructions=   977674957 cycles=   346755606 branch_miss=  870923 cache_miss=10436038 cache_ref=  14432151 items=   1000000 avg_time=  94148039 ns]
LargeRandom<OnDemand>      58914426 ns     58914792 ns           12         869.497k           782.137M        5.57333M        7.9095M    216.976M              4.71701           17.0034       3.68935G          633.053M                    13.7624                     2.91761           17.0034M    869.737k   45.9988M       744.598M/s   5.61401M   7.91153M   217.298M           4.724    16.9737/s 3.68835G/s     633.053M               13.7624                2.91329      1000k       16.9737M/s [best: throughput=  0.78 GB/s doc_throughput=    17 docs/s instructions=   633052838 cycles=   216976484 branch_miss=  869497 cache_miss= 5573331 cache_ref=   7909503 items=   1000000 avg_time=  58901288 ns]
LargeRandomSum<OnDemand>   55419570 ns     55419914 ns           13         872.769k           830.846M        5.00223M       7.05192M    204.246M              4.44025           18.0623       3.68916G          587.052M                    12.7623                     2.87424           18.0623M    872.784k   45.9988M       791.554M/s   5.01108M   7.05197M     204.4M          4.4436    18.0441/s 3.68821G/s     587.052M               12.7623                2.87207      1000k       18.0441M/s [best: throughput=  0.83 GB/s doc_throughput=    18 docs/s instructions=   587052268 cycles=   204246035 branch_miss=  872769 cache_miss= 5002226 cache_ref=   7051917 items=   1000000 avg_time=  55406770 ns]
Creating a source file spanning 134087 KB 
Kostya<Dom>                85773191 ns     85773732 ns            8         448.534k           1.60341G        15.8132M       22.2226M    315.912M              2.30081           11.6777       3.68913G          937.516M                    6.82798                     2.96765           6.12247M    448.643k   137.305M       1.49084G/s   15.8591M   22.2128M   316.344M         2.30395    11.6586/s 3.68812G/s     937.516M               6.82798                 2.9636   524.288k       6.11245M/s [best: throughput=  1.60 GB/s doc_throughput=    11 docs/s instructions=   937516408 cycles=   315912419 branch_miss=  448534 cache_miss=15813225 cache_ref=  22222556 items=    524288 avg_time=  85758157 ns]
KostyaSum<Dom>             85559157 ns     85558318 ns            8         452.148k           1.60803G        15.5328M       21.7567M    314.993M              2.29411           11.7114       3.68901G          940.138M                    6.84708                     2.98463           6.14014M    448.986k   137.305M        1.4946G/s   15.5585M   21.7084M   315.556M         2.29821    11.6879/s  3.6882G/s     940.138M               6.84708                 2.9793   524.288k       6.12784M/s [best: throughput=  1.61 GB/s doc_throughput=    11 docs/s instructions=   940137862 cycles=   314993410 branch_miss=  452148 cache_miss=15532801 cache_ref=  21756680 items=    524288 avg_time=  85544836 ns]
Kostya<OnDemand>           60904267 ns     60904647 ns           11         458.083k           2.25978G        10.0401M         13.94M    224.141M              1.63243           16.4581       3.68894G          661.413M                    4.81711                     2.95088            8.6288M    457.957k   137.305M        2.0996G/s   10.1124M   13.9081M   224.612M         1.63586    16.4191/s 3.68793G/s     661.413M               4.81711                2.94469   524.288k       8.60834M/s [best: throughput=  2.26 GB/s doc_throughput=    16 docs/s instructions=   661412847 cycles=   224141244 branch_miss=  458083 cache_miss=10040056 cache_ref=  13940040 items=    524288 avg_time=  60890579 ns]
KostyaSum<OnDemand>        61389635 ns     61390027 ns           11         464.969k           2.23886G        9.74474M       13.4481M     226.25M              1.64779           16.3057       3.68916G          653.024M                    4.75601                      2.8863           8.54889M    465.104k   137.305M         2.083G/s   9.77701M   13.4652M   226.418M         1.64901    16.2893/s 3.68818G/s     653.024M               4.75601                2.88416   524.288k       8.54028M/s [best: throughput=  2.24 GB/s doc_throughput=    16 docs/s instructions=   653023947 cycles=   226249580 branch_miss=  464969 cache_miss= 9744738 cache_ref=  13448101 items=    524288 avg_time=  61376041 ns]
DistinctUserID<Dom>          269304 ns       269306 ns         2598           3.978k           2.43509G               0        88.868k     957.51k              1.51621          3.85594k        3.6921G          2.86553M                    4.53755                     2.99269           443.433k    4.17616k   631.515k       2.18393G/s   0.442263    89.002k   963.723k         1.52605   3.71325k/s 3.57855G/s     2.86553M               4.53756                 2.9734        115       427.024k/s [best: throughput=  2.44 GB/s doc_throughput=  3855 docs/s instructions=     2865534 cycles=      957510 branch_miss=    3978 cache_miss=       0 cache_ref=     88868 items=       115 avg_time=    261151 ns]
On Demand implementation: haswell
DistinctUserID<OnDemand>     185914 ns       185915 ns         3763           1.659k           3.57584G               0        53.368k    652.096k              1.03259          5.66232k       3.69238G          2.08894M                    3.30782                     3.20342           651.167k    1.86507k   631.515k       3.16351G/s   5.31491m   53.3995k   656.806k         1.04005   5.37879k/s 3.53282G/s     2.08894M               3.30782                3.18045        115       618.561k/s [best: throughput=  3.58 GB/s doc_throughput=  5662 docs/s instructions=     2088936 cycles=      652096 branch_miss=    1659 cache_miss=       0 cache_ref=     53368 items=       115 avg_time=    177962 ns]
FindTweet<Dom>               255809 ns       255810 ns         2736           3.488k           2.56701G               0        78.699k    908.242k               1.4382          4.06484k       3.69186G          2.77543M                    4.39488                     3.05583           4.06484k    3.64705k   631.515k       2.29914G/s  0.0449561    78.631k    913.99k          1.4473   3.90915k/s 3.57292G/s     2.77543M               4.39488                3.03661          1       3.90915k/s [best: throughput=  2.57 GB/s doc_throughput=  4064 docs/s instructions=     2775433 cycles=      908242 branch_miss=    3488 cache_miss=       0 cache_ref=     78699 items=         1 avg_time=    247669 ns]
On Demand implementation: haswell
FindTweet<OnDemand>          124597 ns       124597 ns         5613              661           5.43192G               0        27.863k    429.399k             0.679951          8.60141k       3.69344G          1.48024M                    2.34396                     3.44725           8.60141k     707.444   631.515k       4.72036G/s   0.169963   27.8534k   430.857k        0.682259   8.02585k/s 3.45799G/s     1.48024M               2.34396                3.43558          1       8.02585k/s [best: throughput=  5.43 GB/s doc_throughput=  8601 docs/s instructions=     1480244 cycles=      429399 branch_miss=     661 cache_miss=       0 cache_ref=     27863 items=         1 avg_time=    116725 ns]
