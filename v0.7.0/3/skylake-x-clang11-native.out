run_benchmark: v0.8.0~35 /home/jkeiser/simdjson_benchmark_results/v0.7.0/3/skylake-x-clang11-native.json -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native
git reset --hard v0.8.0~35
HEAD is now at 91b07ba0 Allow build without download (#1334)
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- git Version: v0.2.1-91b07ba0
-- Version: 0.2.1
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES -- failed to compile
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 10
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
make[3]: Nothing to be done for '_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build'.
[ 80%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
make[3]: Nothing to be done for 'jsonexamples/generated/CMakeFiles/generated-data.dir/build'.
[ 80%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/clang++-11  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/src  -march=native -O3 -DNDEBUG -fPIC   -pthread -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/clang++-11 -fPIC -march=native -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.6 -o ../libsimdjson.so.6.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.6.0.0 ../libsimdjson.so.6 ../libsimdjson.so
[ 90%] Built target simdjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/clang++-11  -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/clang++-11  -march=native -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.6.0.0 ../_deps/google_benchmarks/src/libbenchmark.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/3/skylake-x-clang11-native.json --benchmark_out_format=json
2021-01-24 21:22:05
Running benchmark/bench_ondemand
Run on (4 X 3200 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 1024 KiB (x4)
  L3 Unified 8448 KiB (x1)
Load Average: 1.00, 1.01, 1.00
***WARNING*** CPU scaling is enabled, the benchmark real time measurements may be noisy and will incur extra overhead.
On Demand implementation: haswell
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Benchmark                         Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
PartialTweets<OnDemand>      209767 ns       209761 ns         3332           1.918k           3.27663G               0         6.499k    615.617k             0.974826          5.18853k       3.19414G           1.7614M                    2.78917                      2.8612           518.853k    2.13482k   631.515k       2.80388G/s   7.20288m   6.53453k    623.49k        0.987293   4.76733k/s 2.97239G/s     1.76141M               2.78917                2.82507        100       476.733k/s [best: throughput=  3.28 GB/s doc_throughput=  5188 docs/s instructions=     1761405 cycles=      615617 branch_miss=    1918 cache_miss=       0 cache_ref=      6499 items=       100 avg_time=    195348 ns]
PartialTweets<Dom>           341100 ns       341082 ns         2053           3.722k            1.9574G               0        30.483k    1030.24k              1.63137          3.09953k       3.19324G          2.93688M                    4.65054                     2.85069           309.953k    3.82848k   631.515k       1.72435G/s  0.0823186   30.4264k   1035.82k         1.64021   2.93185k/s 3.03686G/s     2.93688M               4.65054                2.83533        100       293.185k/s [best: throughput=  1.96 GB/s doc_throughput=  3099 docs/s instructions=     2936884 cycles=     1030236 branch_miss=    3722 cache_miss=       0 cache_ref=     30483 items=       100 avg_time=    324678 ns]
Creating a source file spanning 44921 KB 
LargeRandom<Dom>          101855431 ns    101851633 ns            7         930.662k           452.815M        6.77573M       6.89607M    323.919M              7.04191           9.84407       3.18868G          1019.45M                    22.1626                     3.14724           9.84407M    938.703k   45.9988M       430.703M/s   6.80385M   6.89574M   324.677M         7.05837     9.8182/s 3.18774G/s     1019.45M               22.1626                 3.1399      1000k        9.8182M/s [best: throughput=  0.45 GB/s doc_throughput=     9 docs/s instructions=  1019451750 cycles=   323919293 branch_miss=  930662 cache_miss= 6775734 cache_ref=   6896068 items=   1000000 avg_time= 101827653 ns]
LargeRandomSum<Dom>       102265833 ns    102263166 ns            7         928.705k           453.644M        6.50111M        6.5197M    323.266M              7.02771           9.86209       3.18808G          1012.45M                    22.0104                     3.13195           9.86209M    939.016k   45.9988M        428.97M/s   6.42592M    6.5209M   325.129M         7.06822    9.77869/s 3.17934G/s     1012.45M               22.0104                  3.114      1000k       9.77869M/s [best: throughput=  0.45 GB/s doc_throughput=     9 docs/s instructions=  1012451748 cycles=   323265857 branch_miss=  928705 cache_miss= 6501113 cache_ref=   6519701 items=   1000000 avg_time= 102237274 ns]
LargeRandom<OnDemand>      68852549 ns     68846220 ns           10         936.368k           669.068M        3.45702M        3.5726M    219.243M              4.76628           14.5453       3.18897G          600.908M                    13.0636                     2.74083           14.5453M    940.258k   45.9988M       637.186M/s   3.49122M   3.57266M    219.41M         4.76992    14.5251/s 3.18696G/s     600.908M               13.0636                2.73874      1000k       14.5251M/s [best: throughput=  0.67 GB/s doc_throughput=    14 docs/s instructions=   600907858 cycles=   219243141 branch_miss=  936368 cache_miss= 3457019 cache_ref=   3572604 items=   1000000 avg_time=  68824660 ns]
LargeRandomSum<OnDemand>   69025235 ns     69022505 ns           10         904.747k           666.933M        3.12045M       3.19683M    219.959M              4.78184           14.4989       3.18917G          603.907M                    13.1288                     2.74555           14.4989M    905.825k   45.9988M       635.559M/s    3.1227M   3.19683M   220.014M         4.78303     14.488/s 3.18756G/s     603.907M               13.1288                2.74486      1000k        14.488M/s [best: throughput=  0.67 GB/s doc_throughput=    14 docs/s instructions=   603907124 cycles=   219958709 branch_miss=  904747 cache_miss= 3120448 cache_ref=   3196826 items=   1000000 avg_time=  68997213 ns]
Creating a source file spanning 134087 KB 
Kostya<Dom>               109327387 ns    109323840 ns            6         1025.31k           1.25836G        10.1517M       10.3165M    347.953M              2.53416           9.16469       3.18888G          971.471M                    7.07528                     2.79196           4.80493M    1024.69k   137.305M       1.16969G/s   10.2136M   10.3168M   348.501M         2.53815    9.14714/s 3.18778G/s     971.471M               7.07528                2.78757   524.288k       4.79573M/s [best: throughput=  1.26 GB/s doc_throughput=     9 docs/s instructions=   971471361 cycles=   347952954 branch_miss= 1025305 cache_miss=10151651 cache_ref=  10316514 items=    524288 avg_time= 109296630 ns]
KostyaSum<Dom>            108008215 ns    108007288 ns            6         1025.46k            1.2727G        10.0367M       10.1197M    343.996M              2.50534           9.26917       3.18856G          968.326M                    7.05237                     2.81493           4.85972M    1025.16k   137.305M       1.18395G/s   10.0345M   10.1198M     344.3M         2.50756    9.25863/s 3.18775G/s     968.326M               7.05237                2.81245   524.288k       4.85419M/s [best: throughput=  1.27 GB/s doc_throughput=     9 docs/s instructions=   968325633 cycles=   343995835 branch_miss= 1025456 cache_miss=10036719 cache_ref=  10119651 items=    524288 avg_time= 107977705 ns]
Kostya<OnDemand>           65265888 ns     65263946 ns           11          457.52k           2.10596G        6.39352M       6.47072M    207.891M              1.51408           15.3379        3.1886G          594.745M                    4.33156                     2.86085           8.04145M    457.469k   137.305M       1.95936G/s   6.39402M   6.47065M   208.003M         1.51489    15.3224/s  3.1871G/s     594.745M               4.33156                2.85932   524.288k       8.03335M/s [best: throughput=  2.11 GB/s doc_throughput=    15 docs/s instructions=   594745488 cycles=   207891108 branch_miss=  457520 cache_miss= 6393525 cache_ref=   6470716 items=    524288 avg_time=  65236782 ns]
KostyaSum<OnDemand>        66924626 ns     66922557 ns           10         459.838k           2.05353G         6.1769M       6.27285M    213.228M              1.55295            14.956       3.18902G          596.842M                    4.34684                     2.79909           7.84123M    460.204k   137.305M       1.91079G/s    6.1948M   6.27298M   213.292M         1.55341    14.9426/s 3.18714G/s     596.842M               4.34684                2.79825   524.288k       7.83425M/s [best: throughput=  2.05 GB/s doc_throughput=    14 docs/s instructions=   596842427 cycles=   213227620 branch_miss=  459838 cache_miss= 6176904 cache_ref=   6272854 items=    524288 avg_time=  66894560 ns]
DistinctUserID<Dom>          342749 ns       342742 ns         2051           3.917k           1.96109G               8        32.845k    1028.39k              1.62845          3.10537k       3.19354G          2.87669M                    4.55523                     2.79727           357.117k    4.06935k   631.515k         1.716G/s    8.15261   33.0912k   1035.73k         1.64007   2.91764k/s 3.02189G/s     2.87669M               4.55523                2.77746        115       335.529k/s [best: throughput=  1.96 GB/s doc_throughput=  3105 docs/s instructions=     2876694 cycles=     1028392 branch_miss=    3917 cache_miss=       8 cache_ref=     32845 items=       115 avg_time=    324612 ns]
On Demand implementation: haswell
DistinctUserID<OnDemand>     200571 ns       200567 ns         3461           2.421k           3.47028G               1         5.399k     581.17k             0.920279          5.49517k       3.19363G          1.72264M                    2.72779                     2.96409           631.945k    2.57388k   631.515k       2.93241G/s   0.620052   5.43406k   586.817k        0.929221   4.98587k/s 2.92579G/s     1.72264M               2.72779                2.93557        115       573.375k/s [best: throughput=  3.47 GB/s doc_throughput=  5495 docs/s instructions=     1722642 cycles=      581170 branch_miss=    2421 cache_miss=       1 cache_ref=      5399 items=       115 avg_time=    183856 ns]
FindTweet<Dom>               322263 ns       322257 ns         2152           3.468k           2.09497G               0        27.907k    962.731k              1.52448          3.31738k       3.19374G          2.78235M                    4.40583                     2.89006           3.31738k     3.6043k   631.515k       1.82508G/s  0.0120818   28.0553k   968.038k         1.53288   3.10311k/s 3.00393G/s     2.78235M               4.40583                2.87421          1       3.10311k/s [best: throughput=  2.09 GB/s doc_throughput=  3317 docs/s instructions=     2782348 cycles=      962731 branch_miss=    3468 cache_miss=       0 cache_ref=     27907 items=         1 avg_time=    303385 ns]
On Demand implementation: haswell
FindTweet<OnDemand>          147017 ns       147014 ns         4769             1073           4.87321G               0         2.986k    413.973k             0.655524           7.7167k       3.19451G          1.30572M                    2.06761                     3.15413            7.7167k    1.14545k   631.515k       4.00059G/s   0.117844   3.01089k   416.263k         0.65915   6.80206k/s 2.83145G/s     1.30572M               2.06761                3.13677          1       6.80206k/s [best: throughput=  4.87 GB/s doc_throughput=  7716 docs/s instructions=     1305724 cycles=      413973 branch_miss=    1073 cache_miss=       0 cache_ref=      2986 items=         1 avg_time=    130394 ns]
