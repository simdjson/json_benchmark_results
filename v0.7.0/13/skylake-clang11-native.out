run_benchmark: v0.8.0~25 /home/jkeiser/simdjson_benchmark_results/v0.7.0/13/skylake-clang11-native.json -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native
git reset --hard v0.8.0~25
HEAD is now at 158a3c53 Merge pull request #1351 from simdjson/jkeiser/unordered-lookup
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- git Version: v0.2.1-158a3c53
-- Version: 0.2.1
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES -- failed to compile
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 8
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
make[3]: Nothing to be done for '_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build'.
[ 87%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
make[3]: Nothing to be done for 'jsonexamples/generated/CMakeFiles/generated-data.dir/build'.
[ 87%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
make[3]: Nothing to be done for 'src/CMakeFiles/simdjson.dir/build'.
[ 87%] Built target simdjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/clang++-11  -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/clang++-11  -march=native -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.6.0.0 ../_deps/google_benchmarks/src/libbenchmark.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/13/skylake-clang11-native.json --benchmark_out_format=json
2021-01-24 21:11:36
Running benchmark/bench_ondemand
Run on (4 X 4000 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 256 KiB (x4)
  L3 Unified 8192 KiB (x1)
Load Average: 1.04, 1.02, 0.98
On Demand implementation: haswell
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Benchmark                               Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
PartialTweets<OnDemand>            175868 ns       175867 ns         3981           1.804k            3.7852G               0        55.077k     616.07k             0.975543          5.99384k       3.69262G          1.88201M                    2.98015                     3.05487           599.384k    1.91434k   631.515k       3.34425G/s  0.0271289   55.1347k   619.725k        0.981331   5.68611k/s 3.52383G/s     1.88201M               2.98015                3.03685        100       568.611k/s [best: throughput=  3.79 GB/s doc_throughput=  5993 docs/s instructions=     1882011 cycles=      616070 branch_miss=    1804 cache_miss=       0 cache_ref=     55077 items=       100 avg_time=    167909 ns]
PartialTweets<Dom>                 284702 ns       284704 ns         2458           3.768k           2.29815G               2        87.769k    1014.63k              1.60667           3.6391k       3.69236G          2.99807M                    4.74742                     2.95483            363.91k    3.93261k   631.515k       2.06581G/s   0.936941   87.8636k   1020.38k         1.61577   3.51242k/s 3.58401G/s     2.99807M               4.74742                2.93818        100       351.242k/s [best: throughput=  2.30 GB/s doc_throughput=  3639 docs/s instructions=     2998067 cycles=     1014634 branch_miss=    3768 cache_miss=       2 cache_ref=     87769 items=       100 avg_time=    276510 ns]
Creating a source file spanning 44921 KB 
LargeRandom<Dom>                 88323857 ns     88324367 ns            8         920.865k           522.067M        11.0092M       15.2727M    325.003M              7.06547           11.3496       3.68865G          1034.69M                    22.4938                     3.18362           11.3496M    919.887k   45.9988M       496.668M/s   11.0269M   15.2793M   325.771M         7.08216    11.3219/s 3.68835G/s     1034.69M               22.4938                3.17612      1000k       11.3219M/s [best: throughput=  0.52 GB/s doc_throughput=    11 docs/s instructions=  1034686010 cycles=   325003152 branch_miss=  920865 cache_miss=11009196 cache_ref=  15272713 items=   1000000 avg_time=  88309617 ns]
LargeRandom<OnDemand>            61971847 ns     61972228 ns           11         892.792k           743.031M        5.54718M       7.91217M    228.356M              4.96438           16.1533       3.68869G          623.142M                    13.5469                     2.72882           16.1533M    893.829k   45.9988M       707.863M/s   5.62825M   7.91621M   228.557M         4.96876    16.1363/s 3.68805G/s     623.142M               13.5469                2.72642      1000k       16.1363M/s [best: throughput=  0.74 GB/s doc_throughput=    16 docs/s instructions=   623142099 cycles=   228355552 branch_miss=  892792 cache_miss= 5547179 cache_ref=   7912173 items=   1000000 avg_time=  61958736 ns]
LargeRandom<OnDemandUnordered>   63118140 ns     63118508 ns           11         888.279k           729.408M        5.57582M       7.91254M    232.648M              5.05769           15.8571       3.68912G          635.142M                    13.8078                     2.73006           15.8571M    889.141k   45.9988M       695.008M/s   5.63035M   7.91485M   232.797M         5.06095    15.8432/s 3.68826G/s     635.142M               13.8078                 2.7283      1000k       15.8432M/s [best: throughput=  0.73 GB/s doc_throughput=    15 docs/s instructions=   635141906 cycles=   232647524 branch_miss=  888279 cache_miss= 5575823 cache_ref=   7912543 items=   1000000 avg_time=  63104992 ns]
Creating a source file spanning 134087 KB 
Kostya<Dom>                      92609988 ns     92610546 ns            8         1044.43k           1.48531G        15.9526M       22.4064M    341.024M              2.48369           10.8176       3.68906G          985.272M                    7.17579                     2.88916           5.67153M    1044.99k   137.305M       1.38078G/s   15.9587M   22.3013M   341.551M         2.48754    10.7979/s 3.68804G/s     985.272M               7.17579                2.88469   524.288k       5.66121M/s [best: throughput=  1.49 GB/s doc_throughput=    10 docs/s instructions=   985271657 cycles=   341023693 branch_miss= 1044435 cache_miss=15952630 cache_ref=  22406438 items=    524288 avg_time=  92595406 ns]
KostyaSum<Dom>                   93388156 ns     93388669 ns            7         1044.85k           1.47177G        15.7124M       21.9729M    344.167M              2.50659            10.719       3.68913G          982.126M                    7.15288                     2.85363           5.61984M    1043.08k   137.305M       1.36928G/s   15.7345M   21.8941M   344.453M         2.50867    10.7079/s 3.68839G/s     982.126M               7.15288                2.85126   524.288k       5.61404M/s [best: throughput=  1.47 GB/s doc_throughput=    10 docs/s instructions=   982125929 cycles=   344167281 branch_miss= 1044853 cache_miss=15712414 cache_ref=  21972867 items=    524288 avg_time=  93373501 ns]
Kostya<OnDemand>                 60258242 ns     60258578 ns           12         481.408k           2.28127G         10.035M       13.9137M    222.037M              1.61711           16.6146       3.68906G          632.663M                    4.60772                     2.84936           8.71085M    483.062k   137.305M       2.12211G/s   10.0786M   13.9137M   222.235M         1.61855    16.5951/s 3.68802G/s     632.663M               4.60772                2.84682   524.288k       8.70064M/s [best: throughput=  2.28 GB/s doc_throughput=    16 docs/s instructions=   632663010 cycles=   222036820 branch_miss=  481408 cache_miss=10035008 cache_ref=  13913727 items=    524288 avg_time=  60244445 ns]
KostyaSum<OnDemand>              61507614 ns     61507946 ns           11          476.23k           2.23469G        9.74044M       13.4613M    226.659M              1.65077           16.2754       3.68896G          632.663M                    4.60772                     2.79126           8.53299M    476.412k   137.305M         2.079G/s   9.78014M   13.4743M   226.837M         1.65207    16.2581/s 3.68793G/s     632.663M               4.60772                2.78906   524.288k       8.52391M/s [best: throughput=  2.23 GB/s doc_throughput=    16 docs/s instructions=   632663123 cycles=   226658900 branch_miss=  476230 cache_miss= 9740441 cache_ref=  13461281 items=    524288 avg_time=  61493975 ns]
DistinctUserID<Dom>                280053 ns       280055 ns         2485           3.935k           2.33641G               0        89.124k    997.878k              1.58013          3.69969k       3.69184G            2.938M                     4.6523                     2.94424           425.464k    4.12239k   631.515k        2.1001G/s  0.0591549   89.1949k    1003.6k         1.58919   3.57073k/s 3.58357G/s       2.938M                4.6523                2.92747        115       410.634k/s [best: throughput=  2.34 GB/s doc_throughput=  3699 docs/s instructions=     2937997 cycles=      997878 branch_miss=    3935 cache_miss=       0 cache_ref=     89124 items=       115 avg_time=    271955 ns]
On Demand implementation: haswell
DistinctUserID<OnDemand>           167316 ns       167317 ns         4185           1.785k           3.99387G               0        53.267k    583.874k             0.924561          6.32427k       3.69258G          1.88465M                    2.98434                     3.22784           727.291k    1.91549k   631.515k       3.51515G/s   0.221505   53.3571k   588.199k        0.931409   5.97668k/s 3.51548G/s     1.88465M               2.98434                3.20411        115       687.318k/s [best: throughput=  3.99 GB/s doc_throughput=  6324 docs/s instructions=     1884654 cycles=      583874 branch_miss=    1785 cache_miss=       0 cache_ref=     53267 items=       115 avg_time=    159367 ns]
FindTweet<Dom>                     267928 ns       267930 ns         2612           3.595k           2.44792G               0        78.802k    952.523k              1.50831          3.87627k       3.69224G          2.84343M                    4.50255                     2.98516           3.87627k    3.76406k   631.515k       2.19514G/s    2.14816   78.7698k   958.726k         1.51814   3.73232k/s 3.57828G/s     2.84343M               4.50256                2.96584          1       3.73232k/s [best: throughput=  2.45 GB/s doc_throughput=  3876 docs/s instructions=     2843431 cycles=      952523 branch_miss=    3595 cache_miss=       0 cache_ref=     78802 items=         1 avg_time=    259788 ns]
On Demand implementation: haswell
FindTweet<OnDemand>                120350 ns       120351 ns         5675             1017           5.65028G               0        27.919k    412.692k             0.653495          8.94718k       3.69243G          1.37956M                    2.18452                     3.34283           8.94718k     1073.13   631.515k       4.88692G/s  0.0359471   27.9318k   415.142k        0.657375   8.30905k/s 3.44944G/s     1.37956M               2.18452                 3.3231          1       8.30905k/s [best: throughput=  5.65 GB/s doc_throughput=  8947 docs/s instructions=     1379559 cycles=      412692 branch_miss=    1017 cache_miss=       0 cache_ref=     27919 items=         1 avg_time=    112466 ns]
