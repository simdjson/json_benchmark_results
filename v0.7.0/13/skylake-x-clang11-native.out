run_benchmark: v0.8.0~25 /home/jkeiser/simdjson_benchmark_results/v0.7.0/13/skylake-x-clang11-native.json -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native
git reset --hard v0.8.0~25
HEAD is now at 158a3c53 Merge pull request #1351 from simdjson/jkeiser/unordered-lookup
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- git Version: v0.2.1-158a3c53
-- Version: 0.2.1
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES -- failed to compile
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 8
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
make[3]: Nothing to be done for '_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build'.
[ 87%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
make[3]: Nothing to be done for 'jsonexamples/generated/CMakeFiles/generated-data.dir/build'.
[ 87%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
make[3]: Nothing to be done for 'src/CMakeFiles/simdjson.dir/build'.
[ 87%] Built target simdjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/clang++-11  -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/clang++-11  -march=native -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.6.0.0 ../_deps/google_benchmarks/src/libbenchmark.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/13/skylake-x-clang11-native.json --benchmark_out_format=json
2021-01-24 21:20:55
Running benchmark/bench_ondemand
Run on (4 X 3200 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 1024 KiB (x4)
  L3 Unified 8448 KiB (x1)
Load Average: 1.00, 1.02, 1.00
***WARNING*** CPU scaling is enabled, the benchmark real time measurements may be noisy and will incur extra overhead.
On Demand implementation: haswell
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Benchmark                               Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
PartialTweets<OnDemand>            200798 ns       200796 ns         3466           1.929k           3.41686G               0         6.669k    590.234k             0.934632          5.41058k       3.19351G          1.81627M                    2.87605                      3.0772           541.058k    2.04797k   631.515k       2.92906G/s   2.88517m   6.69161k   594.898k        0.942017   4.98018k/s  2.9627G/s     1.81627M               2.87605                3.05308        100       498.018k/s [best: throughput=  3.42 GB/s doc_throughput=  5410 docs/s instructions=     1816269 cycles=      590234 branch_miss=    1929 cache_miss=       0 cache_ref=      6669 items=       100 avg_time=    186382 ns]
PartialTweets<Dom>                 341805 ns       341799 ns         2051           3.803k           1.95244G               0        31.299k    1032.91k              1.63561          3.09168k       3.19343G          2.93688M                    4.65054                     2.84331           309.168k    3.89734k   631.515k       1.72073G/s   0.014627   31.4205k   1039.03k          1.6453   2.92569k/s 3.03988G/s     2.93688M               4.65054                2.82657        100       292.569k/s [best: throughput=  1.95 GB/s doc_throughput=  3091 docs/s instructions=     2936884 cycles=     1032912 branch_miss=    3803 cache_miss=       0 cache_ref=     31299 items=       100 avg_time=    325641 ns]
Creating a source file spanning 44921 KB 
LargeRandom<Dom>                102682918 ns    102680163 ns            7         942.106k           448.974M        6.80274M       6.89587M      326.7M              7.10236           9.76056       3.18877G          1019.45M                    22.1626                     3.12046           9.76056M    941.976k   45.9988M       427.228M/s   6.80532M   6.89585M   327.323M         7.11592    9.73898/s  3.1878G/s     1019.45M               22.1626                3.11451      1000k       9.73898M/s [best: throughput=  0.45 GB/s doc_throughput=     9 docs/s instructions=  1019451749 cycles=   326699653 branch_miss=  942106 cache_miss= 6802744 cache_ref=   6895872 items=   1000000 avg_time= 102655186 ns]
LargeRandom<OnDemand>            68736848 ns     68736229 ns           10          910.93k           670.123M        3.46101M       3.57289M    218.866M              4.75808           14.5683        3.1885G          607.908M                    13.2157                     2.77753           14.5683M    914.713k   45.9988M       638.206M/s   3.48789M   3.57291M   219.086M         4.76286    14.5484/s 3.18734G/s     607.908M               13.2157                2.77475      1000k       14.5484M/s [best: throughput=  0.67 GB/s doc_throughput=    14 docs/s instructions=   607907831 cycles=   218866079 branch_miss=  910930 cache_miss= 3461011 cache_ref=   3572889 items=   1000000 avg_time=  68710627 ns]
LargeRandom<OnDemandUnordered>   69870204 ns     69868149 ns           10          905.26k           659.047M        3.45696M       3.57293M     222.58M              4.83883           14.3275       3.18902G          619.908M                    13.4766                      2.7851           14.3275M    905.445k   45.9988M       627.866M/s   3.49698M   3.57309M   222.706M         4.84156    14.3127/s 3.18752G/s     619.908M               13.4766                2.78352      1000k       14.3127M/s [best: throughput=  0.66 GB/s doc_throughput=    14 docs/s instructions=   619907639 cycles=   222580119 branch_miss=  905260 cache_miss= 3456963 cache_ref=   3572932 items=   1000000 avg_time=  69843360 ns]
Creating a source file spanning 134087 KB 
Kostya<Dom>                     108628165 ns    108623312 ns            6         1022.33k           1.26647G        10.2238M       10.3191M     345.68M               2.5176           9.22377       3.18847G          971.471M                    7.07528                     2.81032           4.83591M    1022.38k   137.305M       1.17724G/s   10.2191M   10.3193M   346.234M         2.52164    9.20613/s 3.18747G/s     971.471M               7.07528                2.80583   524.288k       4.82666M/s [best: throughput=  1.27 GB/s doc_throughput=     9 docs/s instructions=   971471361 cycles=   345679611 branch_miss= 1022334 cache_miss=10223765 cache_ref=  10319144 items=    524288 avg_time= 108598501 ns]
KostyaSum<Dom>                  108788453 ns    108778853 ns            6         1022.91k           1.26407G        9.99486M        10.121M    346.356M              2.52253           9.20627       3.18865G          968.326M                    7.05237                     2.79575           4.82674M     1022.3k   137.305M       1.17555G/s   10.0215M   10.1216M   346.705M         2.52507    9.19296/s 3.18725G/s     968.326M               7.05237                2.79294   524.288k       4.81976M/s [best: throughput=  1.26 GB/s doc_throughput=     9 docs/s instructions=   968325633 cycles=   346355779 branch_miss= 1022910 cache_miss= 9994862 cache_ref=  10121048 items=    524288 avg_time= 108759118 ns]
Kostya<OnDemand>                 66910487 ns     66909862 ns           10         468.239k           2.05424G        6.36001M       6.47038M    213.137M              1.55229           14.9611       3.18877G          618.863M                    4.50721                     2.90359           7.84395M    468.195k   137.305M       1.91116G/s   6.39005M   6.47044M    213.25M         1.55311    14.9455/s 3.18712G/s     618.863M               4.50721                2.90206   524.288k       7.83574M/s [best: throughput=  2.05 GB/s doc_throughput=    14 docs/s instructions=   618862703 cycles=   213137015 branch_miss=  468239 cache_miss= 6360005 cache_ref=   6470380 items=    524288 avg_time=  66882787 ns]
KostyaSum<OnDemand>              69070422 ns     69067562 ns           10         466.069k           1.99342G        6.23088M       6.27307M    219.615M              1.59947           14.5182        3.1884G          618.863M                    4.50721                     2.81795           7.61169M    465.832k   137.305M       1.85145G/s   6.20062M   6.27312M   220.116M         1.60312    14.4786/s 3.18696G/s     618.863M               4.50721                2.81153   524.288k       7.59094M/s [best: throughput=  1.99 GB/s doc_throughput=    14 docs/s instructions=   618862817 cycles=   219614612 branch_miss=  466069 cache_miss= 6230878 cache_ref=   6273074 items=    524288 avg_time=  69041878 ns]
DistinctUserID<Dom>                342798 ns       342785 ns         2053           3.881k           1.96773G               0        32.728k    1024.94k              1.62298          3.11589k       3.19359G          2.87669M                    4.55523                      2.8067           358.327k    4.06451k   631.515k       1.71578G/s   0.476863   32.9719k   1033.79k           1.637   2.91728k/s 3.01586G/s     2.87669M               4.55523                2.78266        115       335.487k/s [best: throughput=  1.97 GB/s doc_throughput=  3115 docs/s instructions=     2876694 cycles=     1024937 branch_miss=    3881 cache_miss=       0 cache_ref=     32728 items=       115 avg_time=    324819 ns]
On Demand implementation: haswell
DistinctUserID<OnDemand>           198742 ns       198738 ns         3569           1.873k           3.49713G               0         4.444k    576.747k             0.913275          5.53768k       3.19384G          1.81817M                    2.87906                     3.15245           636.833k    2.00082k   631.515k       2.95939G/s    0.26478   4.39358k    581.99k        0.921577   5.03174k/s 2.92842G/s     1.81817M               2.87906                3.12405        115        578.65k/s [best: throughput=  3.50 GB/s doc_throughput=  5537 docs/s instructions=     1818168 cycles=      576747 branch_miss=    1873 cache_miss=       0 cache_ref=      4444 items=       115 avg_time=    182334 ns]
FindTweet<Dom>                     324934 ns       324915 ns         2164           3.532k           2.08046G               1        27.399k    969.387k              1.53502          3.29439k       3.19354G          2.78235M                    4.40583                     2.87021           3.29439k    3.67471k   631.515k       1.81015G/s    1.10998   27.5372k   977.268k          1.5475   3.07772k/s 3.00776G/s     2.78235M               4.40583                2.84707          1       3.07772k/s [best: throughput=  2.08 GB/s doc_throughput=  3294 docs/s instructions=     2782348 cycles=      969387 branch_miss=    3532 cache_miss=       1 cache_ref=     27399 items=         1 avg_time=    306326 ns]
On Demand implementation: haswell
FindTweet<OnDemand>                148714 ns       148711 ns         4766             1064           4.81129G               0         3.141k    419.388k             0.664098          7.61864k       3.19517G          1.31308M                    2.07926                     3.13095           7.61864k    1.12208k   631.515k       3.95496G/s   4.19639m     3.158k   422.119k        0.668423   6.72447k/s 2.83853G/s     1.31308M               2.07926                 3.1107          1       6.72447k/s [best: throughput=  4.81 GB/s doc_throughput=  7618 docs/s instructions=     1313084 cycles=      419388 branch_miss=    1064 cache_miss=       0 cache_ref=      3141 items=         1 avg_time=    132230 ns]
