run_benchmark: v0.8.0~25 /home/jkeiser/simdjson_benchmark_results/v0.7.0/13/skylake-clang11-native.json -DCMAKE_CXX_FLAGS=-march=native
git reset --hard v0.8.0~25
HEAD is now at 158a3c53 Merge pull request #1351 from simdjson/jkeiser/unordered-lookup
cmake -DCMAKE_CXX_FLAGS=-march=native ..
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- git Version: v0.2.1-158a3c53
-- Version: 0.2.1
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES -- failed to compile
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
make[1]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[2]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 87%] Built target benchmark
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 87%] Built target generated-data
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 87%] Built target simdjson
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
Scanning dependencies of target bench_ondemand
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 87%] Building CXX object benchmark/CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o
[100%] Linking CXX executable bench_ondemand
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[100%] Built target bench_ondemand
make[2]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[1]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/13/skylake-clang11-native.json --benchmark_out_format=json
2021-01-23 04:59:20
Running benchmark/bench_ondemand
Run on (4 X 3200 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 1024 KiB (x4)
  L3 Unified 8448 KiB (x1)
Load Average: 1.02, 1.01, 1.00
***WARNING*** CPU scaling is enabled, the benchmark real time measurements may be noisy and will incur extra overhead.
On Demand implementation: haswell
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Benchmark                               Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
PartialTweets<OnDemand>            200996 ns       200994 ns         3462           1.951k           3.41295G               1         7.294k    591.075k             0.935964          5.40438k        3.1944G          1.81627M                    2.87605                     3.07282           540.438k     2.0707k   631.515k       2.92618G/s    3.76054   7.35389k   595.353k        0.942738   4.97527k/s 2.96204G/s     1.81627M               2.87605                3.05074        100       497.527k/s [best: throughput=  3.41 GB/s doc_throughput=  5404 docs/s instructions=     1816269 cycles=      591075 branch_miss=    1951 cache_miss=       1 cache_ref=      7294 items=       100 avg_time=    186539 ns]
PartialTweets<Dom>                 340596 ns       340575 ns         2055           3.693k           1.96054G               0        32.762k    1028.76k              1.62904          3.10451k        3.1938G          2.93688M                    4.65054                     2.85477           310.451k    3.82208k   631.515k       1.72691G/s  0.0233577   32.7897k    1034.9k         1.63876   2.93621k/s 3.03869G/s     2.93688M               4.65054                2.83784        100       293.621k/s [best: throughput=  1.96 GB/s doc_throughput=  3104 docs/s instructions=     2936884 cycles=     1028762 branch_miss=    3693 cache_miss=       0 cache_ref=     32762 items=       100 avg_time=    324383 ns]
Creating a source file spanning 44921 KB 
LargeRandom<Dom>                101649528 ns    101648602 ns            7         906.358k           456.035M        6.84608M       6.89504M     321.64M              6.99237           9.91407       3.18877G          1019.45M                    22.1626                     3.16954           9.91407M    908.247k   45.9988M       431.564M/s   6.79663M   6.89499M   324.048M          7.0447    9.83781/s 3.18792G/s     1019.45M               22.1626                3.14599      1000k       9.83781M/s [best: throughput=  0.46 GB/s doc_throughput=     9 docs/s instructions=  1019451749 cycles=   321640414 branch_miss=  906358 cache_miss= 6846080 cache_ref=   6895045 items=   1000000 avg_time= 101621754 ns]
LargeRandom<OnDemand>            68723477 ns     68720631 ns           10         910.765k           670.329M        3.43724M       3.57273M    218.823M              4.75716           14.5728       3.18886G          607.908M                    13.2157                     2.77807           14.5728M    913.456k   45.9988M       638.351M/s   3.48301M   3.57276M    219.04M         4.76186    14.5517/s 3.18739G/s     607.908M               13.2157                2.77533      1000k       14.5517M/s [best: throughput=  0.67 GB/s doc_throughput=    14 docs/s instructions=   607907830 cycles=   218823480 branch_miss=  910765 cache_miss= 3437244 cache_ref=   3572732 items=   1000000 avg_time=  68697118 ns]
LargeRandom<OnDemandUnordered>   69871399 ns     69865503 ns           10         903.093k           659.166M          3.453M       3.57306M    222.532M              4.83778           14.3301        3.1889G          619.908M                    13.4766                      2.7857           14.3301M    905.272k   45.9988M        627.89M/s   3.48528M   3.57302M   222.685M         4.84111    14.3132/s 3.18734G/s     619.908M               13.4766                2.78379      1000k       14.3132M/s [best: throughput=  0.66 GB/s doc_throughput=    14 docs/s instructions=   619907640 cycles=   222532059 branch_miss=  903093 cache_miss= 3453001 cache_ref=   3573056 items=   1000000 avg_time=  69845405 ns]
Creating a source file spanning 134087 KB 
Kostya<Dom>                     107778136 ns    107773605 ns            6         1025.02k           1.27759G        10.2576M       10.3184M    342.711M              2.49598           9.30477       3.18885G          971.471M                    7.07528                     2.83467           4.87838M    1025.19k   137.305M       1.18652G/s   10.2105M   10.3188M   343.551M          2.5021    9.27871/s 3.18771G/s     971.471M               7.07528                2.82773   524.288k       4.86472M/s [best: throughput=  1.28 GB/s doc_throughput=     9 docs/s instructions=   971471361 cycles=   342710827 branch_miss= 1025023 cache_miss=10257630 cache_ref=  10318350 items=    524288 avg_time= 107749722 ns]
KostyaSum<Dom>                  107916426 ns    107913308 ns            6         1025.05k           1.27571G        9.99022M       10.1212M    343.231M              2.49977           9.29108       3.18899G          968.326M                    7.05237                     2.82121            4.8712M    1025.06k   137.305M       1.18498G/s   10.0309M   10.1213M   344.004M          2.5054     9.2667/s 3.18778G/s     968.326M               7.05237                2.81487   524.288k       4.85842M/s [best: throughput=  1.28 GB/s doc_throughput=     9 docs/s instructions=   968325632 cycles=   343231089 branch_miss= 1025050 cache_miss= 9990223 cache_ref=  10121190 items=    524288 avg_time= 107887187 ns]
Kostya<OnDemand>                 66588392 ns     66582363 ns           11         469.643k           2.06427G        6.33764M       6.47066M    212.082M               1.5446           15.0342       3.18848G          618.863M                    4.50721                     2.91804           7.88224M    469.841k   137.305M       1.92056G/s   6.37953M    6.4705M   212.192M         1.54541     15.019/s 3.18691G/s     618.863M               4.50721                2.91652   524.288k       7.87428M/s [best: throughput=  2.06 GB/s doc_throughput=    15 docs/s instructions=   618862704 cycles=   212081857 branch_miss=  469643 cache_miss= 6337639 cache_ref=   6470660 items=    524288 avg_time=  66559677 ns]
KostyaSum<OnDemand>              68775556 ns     68774938 ns           10         463.636k           1.99811G        6.20868M       6.27266M    219.127M              1.59592           14.5523       3.18882G          618.863M                    4.50721                     2.82421           7.62962M    466.443k   137.305M       1.85933G/s   6.20566M   6.27278M   219.204M         1.59647    14.5402/s 3.18726G/s     618.863M               4.50721                2.82323   524.288k       7.62324M/s [best: throughput=  2.00 GB/s doc_throughput=    14 docs/s instructions=   618862817 cycles=   219127499 branch_miss=  463636 cache_miss= 6208677 cache_ref=   6272662 items=    524288 avg_time=  68747360 ns]
DistinctUserID<Dom>                337582 ns       337579 ns         2059           3.824k           1.99332G               0        32.867k    1011.78k              1.60214          3.15642k       3.19359G          2.87669M                    4.55523                     2.84321           362.988k    4.00263k   631.515k       1.74224G/s  0.0189412    32.867k   1020.36k         1.61573   2.96227k/s 3.02257G/s     2.87669M               4.55523                2.81931        115       340.661k/s [best: throughput=  1.99 GB/s doc_throughput=  3156 docs/s instructions=     2876694 cycles=     1011776 branch_miss=    3824 cache_miss=       0 cache_ref=     32867 items=       115 avg_time=    319780 ns]
On Demand implementation: haswell
DistinctUserID<OnDemand>           200232 ns       200228 ns         3543           1.856k           3.47724G               0        11.488k     580.06k             0.918521          5.50618k       3.19392G          1.81817M                    2.87906                     3.13445           633.211k     2.0095k   631.515k       2.93738G/s   1.69348m   11.6015k   585.921k        0.927803   4.99432k/s 2.92628G/s     1.81817M               2.87906                3.10309        115       574.347k/s [best: throughput=  3.48 GB/s doc_throughput=  5506 docs/s instructions=     1818168 cycles=      580060 branch_miss=    1856 cache_miss=       0 cache_ref=     11488 items=       115 avg_time=    183586 ns]
FindTweet<Dom>                     324398 ns       324395 ns         2176           3.459k           2.08346G               2        28.546k    967.955k              1.53275          3.29914k       3.19342G          2.78235M                    4.40583                     2.87446           3.29914k    3.63186k   631.515k       1.81305G/s    2.07353   28.3543k   976.139k         1.54571   3.08266k/s 3.00911G/s     2.78235M               4.40583                2.85036          1       3.08266k/s [best: throughput=  2.08 GB/s doc_throughput=  3299 docs/s instructions=     2782348 cycles=      967955 branch_miss=    3459 cache_miss=       2 cache_ref=     28546 items=         1 avg_time=    305920 ns]
On Demand implementation: haswell
FindTweet<OnDemand>                150356 ns       150348 ns         4739             1071           4.77928G               0         6.162k    422.115k             0.668416          7.56796k       3.19455G          1.31308M                    2.07926                     3.11073           7.56796k    1.12934k   631.515k       3.91188G/s  0.0246888   6.27907k   425.423k        0.673654   6.65123k/s 2.82958G/s     1.31308M               2.07926                3.08654          1       6.65123k/s [best: throughput=  4.78 GB/s doc_throughput=  7567 docs/s instructions=     1313084 cycles=      422115 branch_miss=    1071 cache_miss=       0 cache_ref=      6162 items=         1 avg_time=    133557 ns]
