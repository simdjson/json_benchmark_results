run_benchmark: v0.8.0~25 /home/jkeiser/simdjson_benchmark_results/v0.7.0/13/skylake-x-gcc10.2-native.json -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native
git reset --hard v0.8.0~25
HEAD is now at 158a3c53 Merge pull request #1351 from simdjson/jkeiser/unordered-lookup
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- git Version: v0.2.1-158a3c53
-- Version: 0.2.1
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 8
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
make[3]: Nothing to be done for '_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build'.
[ 87%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
make[3]: Nothing to be done for 'jsonexamples/generated/CMakeFiles/generated-data.dir/build'.
[ 87%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
make[3]: Nothing to be done for 'src/CMakeFiles/simdjson.dir/build'.
[ 87%] Built target simdjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/g++-10  -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/g++-10  -march=native -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.6.0.0 ../_deps/google_benchmarks/src/libbenchmark.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/13/skylake-x-gcc10.2-native.json --benchmark_out_format=json
2021-01-24 21:30:21
Running benchmark/bench_ondemand
Run on (4 X 3200 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 1024 KiB (x4)
  L3 Unified 8448 KiB (x1)
Load Average: 1.04, 1.01, 1.00
***WARNING*** CPU scaling is enabled, the benchmark real time measurements may be noisy and will incur extra overhead.
On Demand implementation: haswell
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Benchmark                               Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
PartialTweets<OnDemand>            245832 ns       245825 ns         2842           2.425k           2.74334G               0         2.846k    735.183k              1.16416          4.34407k       3.19368G          2.24017M                     3.5473                      3.0471           434.407k    2.57673k   631.515k       2.39253G/s  0.0137227   2.88141k    739.59k         1.17114   4.06794k/s  3.0086G/s     2.24017M                3.5473                3.02894        100       406.794k/s [best: throughput=  2.74 GB/s doc_throughput=  4344 docs/s instructions=     2240173 cycles=      735183 branch_miss=    2425 cache_miss=       0 cache_ref=      2846 items=       100 avg_time=    231757 ns]
PartialTweets<Dom>                 340255 ns       340248 ns         2063           3.712k           1.96452G               0         31.83k    1026.56k              1.62555          3.11081k       3.19344G          3.07033M                    4.86185                     2.99089           311.081k    3.91049k   631.515k       1.72857G/s  0.0145419   31.8969k   1033.31k         1.63624   2.93903k/s 3.03693G/s     3.07033M               4.86185                2.97136        100       293.903k/s [best: throughput=  1.96 GB/s doc_throughput=  3110 docs/s instructions=     3070334 cycles=     1026562 branch_miss=    3712 cache_miss=       0 cache_ref=     31830 items=       100 avg_time=    323898 ns]
Creating a source file spanning 44921 KB 
LargeRandom<Dom>                 99095553 ns     99091827 ns            7         854.613k           464.809M        6.78082M       6.89672M    315.499M              6.85885           10.1048       3.18805G          989.581M                    21.5132                     3.13656           10.1048M    854.117k   45.9988M       442.699M/s      6.82M   6.89628M   315.856M         6.86661    10.0916/s 3.18751G/s     989.581M               21.5132                3.13301      1000k       10.0916M/s [best: throughput=  0.46 GB/s doc_throughput=    10 docs/s instructions=   989581015 cycles=   315498842 branch_miss=  854613 cache_miss= 6780820 cache_ref=   6896720 items=   1000000 avg_time=  99068850 ns]
LargeRandom<OnDemand>            68113479 ns     68111406 ns           10         866.786k           678.303M        3.45885M       3.57294M    216.249M               4.7012           14.7461       3.18883G          651.959M                    14.1734                     3.01485           14.7461M    868.547k   45.9988M        644.06M/s   3.49848M   3.57304M    217.09M         4.71947    14.6818/s 3.18728G/s     651.959M               14.1734                3.00317      1000k       14.6818M/s [best: throughput=  0.68 GB/s doc_throughput=    14 docs/s instructions=   651958634 cycles=   216249264 branch_miss=  866786 cache_miss= 3458853 cache_ref=   3572944 items=   1000000 avg_time=  68087779 ns]
LargeRandom<OnDemandUnordered>   70860984 ns     70860433 ns           10         860.291k           649.576M        3.45551M       3.57362M    225.828M              4.90944           14.1216       3.18905G          655.959M                    14.2603                     2.90468           14.1216M    860.407k   45.9988M       619.074M/s   3.48826M   3.57356M   225.875M         4.91046    14.1122/s 3.18761G/s     655.959M               14.2603                2.90407      1000k       14.1122M/s [best: throughput=  0.65 GB/s doc_throughput=    14 docs/s instructions=   655958636 cycles=   225828281 branch_miss=  860291 cache_miss= 3455507 cache_ref=   3573622 items=   1000000 avg_time=  70833937 ns]
Creating a source file spanning 134087 KB 
Kostya<Dom>                      98913659 ns     98911196 ns            7         481.215k           1.39159G        10.1733M       10.3164M    314.612M              2.29134            10.135       3.18859G          972.126M                    7.08005                     3.08992           5.31366M     481.55k   137.305M       1.29283G/s   10.2204M   10.3165M    315.27M         2.29613    10.1101/s 3.18741G/s     972.126M               7.08005                3.08347   524.288k       5.30059M/s [best: throughput=  1.39 GB/s doc_throughput=    10 docs/s instructions=   972125802 cycles=   314612004 branch_miss=  481215 cache_miss=10173292 cache_ref=  10316363 items=    524288 avg_time=  98884757 ns]
KostyaSum<Dom>                   98216314 ns     98213187 ns            7         481.212k           1.40066G        9.99317M        10.119M     312.57M              2.27647           10.2011       3.18855G          974.747M                    7.09914                     3.11849            5.3483M    481.437k   137.305M       1.30202G/s    10.021M    10.119M   313.036M         2.27986    10.1819/s 3.18731G/s     974.747M               7.09914                3.11385   524.288k       5.33826M/s [best: throughput=  1.40 GB/s doc_throughput=    10 docs/s instructions=   974747256 cycles=   312570379 branch_miss=  481212 cache_miss= 9993168 cache_ref=  10118997 items=    524288 avg_time=  98186648 ns]
Kostya<OnDemand>                 74332325 ns     74329107 ns            9         471.332k           1.85075G         6.3847M       6.47193M    236.425M              1.72189           13.4792        3.1868G          711.226M                     5.1799                     3.00826           7.06696M    471.714k   137.305M       1.72039G/s    6.3935M   6.47174M   236.898M         1.72534    13.4537/s 3.18715G/s     711.226M                5.1799                3.00224   524.288k        7.0536M/s [best: throughput=  1.85 GB/s doc_throughput=    13 docs/s instructions=   711226456 cycles=   236424671 branch_miss=  471332 cache_miss= 6384697 cache_ref=   6471933 items=    524288 avg_time=  74304093 ns]
KostyaSum<OnDemand>              72575356 ns     72573424 ns           10         465.991k           1.89768G        6.17728M       6.27323M    230.731M              1.68043           13.8209       3.18891G          708.081M                    5.15699                     3.06885           7.24613M      467.5k   137.305M       1.76201G/s   6.20173M   6.27333M    231.31M         1.68464    13.7791/s 3.18725G/s     708.081M               5.15699                3.06118   524.288k       7.22424M/s [best: throughput=  1.90 GB/s doc_throughput=    13 docs/s instructions=   708080724 cycles=   230731350 branch_miss=  465991 cache_miss= 6177277 cache_ref=   6273230 items=    524288 avg_time=  72546552 ns]
DistinctUserID<Dom>                338402 ns       338399 ns         2054           4.145k           1.98638G               0        30.627k    1015.28k              1.60769          3.14543k       3.19348G          3.02096M                    4.78367                      2.9755           361.724k     4.3227k   631.515k       1.73802G/s  0.0326193   30.9379k   1022.45k         1.61904   2.95509k/s 3.02142G/s     3.02096M               4.78367                2.95464        115       339.835k/s [best: throughput=  1.99 GB/s doc_throughput=  3145 docs/s instructions=     3020962 cycles=     1015278 branch_miss=    4145 cache_miss=       0 cache_ref=     30627 items=       115 avg_time=    320489 ns]
On Demand implementation: haswell
DistinctUserID<OnDemand>           241575 ns       241573 ns         2914           2.435k           2.82806G               0         2.955k    713.123k              1.12923          4.47822k       3.19352G          2.20408M                    3.49015                     3.09074           514.995k    2.62802k   631.515k       2.43465G/s   0.394303   3.02977k   720.009k         1.14013   4.13954k/s  2.9805G/s     2.20408M               3.49015                3.06119        115       476.047k/s [best: throughput=  2.83 GB/s doc_throughput=  4478 docs/s instructions=     2204080 cycles=      713123 branch_miss=    2435 cache_miss=       0 cache_ref=      2955 items=       115 avg_time=    225640 ns]
FindTweet<Dom>                     324704 ns       324702 ns         2168           3.614k           2.08078G               0        27.001k    969.185k               1.5347           3.2949k       3.19337G          2.93044M                    4.64034                     3.02361            3.2949k    3.74478k   631.515k       1.81134G/s  0.0106089   26.9943k    975.75k         1.54509   3.07975k/s 3.00507G/s     2.93044M               4.64034                3.00327          1       3.07975k/s [best: throughput=  2.08 GB/s doc_throughput=  3294 docs/s instructions=     2930442 cycles=      969185 branch_miss=    3614 cache_miss=       0 cache_ref=     27001 items=         1 avg_time=    305873 ns]
On Demand implementation: haswell
FindTweet<OnDemand>                168005 ns       168002 ns         4205           1.326k           4.18738G               0         2.212k    481.686k             0.762747          6.63068k       3.19391G          1.57111M                    2.48784                     3.26169           6.63068k    1.39365k   631.515k       3.50081G/s   6.42093m    2.2048k   484.413k        0.767065    5.9523k/s 2.88337G/s     1.57111M               2.48784                3.24332          1        5.9523k/s [best: throughput=  4.19 GB/s doc_throughput=  6630 docs/s instructions=     1571109 cycles=      481686 branch_miss=    1326 cache_miss=       0 cache_ref=      2212 items=         1 avg_time=    151773 ns]
