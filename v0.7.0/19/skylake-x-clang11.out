run_benchmark: v0.8.0~19 /home/jkeiser/simdjson_benchmark_results/v0.7.0/19/skylake-x-clang11.json -DCMAKE_BUILD_TYPE=Release
git reset --hard v0.8.0~19
HEAD is now at 920f5355 Reamalgamate
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- git Version: v0.2.1-920f5355
-- Version: 0.2.1
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES -- failed to compile
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 11
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
make[3]: Nothing to be done for '_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build'.
[ 72%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
make[3]: Nothing to be done for 'jsonexamples/generated/CMakeFiles/generated-data.dir/build'.
[ 72%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/clang++-11  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/src  -O3 -DNDEBUG -fPIC   -pthread -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/clang++-11 -fPIC -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.6 -o ../libsimdjson.so.6.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.6.0.0 ../libsimdjson.so.6 ../libsimdjson.so
[ 81%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
make[3]: Nothing to be done for 'dependencies/CMakeFiles/yyjson.dir/build'.
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/clang++-11  -DRAPIDJSON_HAS_STDSTRING -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_COMPETITION_RAPIDJSON -DSIMDJSON_COMPETITION_YYJSON -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/rapidjson/include  -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/clang++-11  -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.6.0.0 ../_deps/google_benchmarks/src/libbenchmark.a ../dependencies/libyyjson.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/19/skylake-x-clang11.json --benchmark_out_format=json
2021-01-24 23:05:59
Running benchmark/bench_ondemand
Run on (4 X 3200 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 1024 KiB (x4)
  L3 Unified 8448 KiB (x1)
Load Average: 1.01, 1.02, 1.00
***WARNING*** CPU scaling is enabled, the benchmark real time measurements may be noisy and will incur extra overhead.
simdjson::dom implementation:      haswell
simdjson::ondemand implementation: fallback

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                  310726 ns       380475 ns         2254           3.441k           2.04969G               0        33.129k    983.957k              1.55809          3.24568k       3.19361G          2.98281M                    4.72326                     3.03144           324.568k    3.65063k   631.515k       1.89281G/s   0.322538   33.3886k   991.507k         1.57004   3.21827k/s 3.19093G/s     2.98281M               4.72326                3.00836        100       321.827k/s [BEST: throughput=  2.05 GB/s doc_throughput=  3245 docs/s instructions=     2982809 cycles=      983957 branch_miss=    3441 cache_miss=       0 cache_ref=     33129 items=       100 avg_time=    310726 ns]
partial_tweets<simdjson_ondemand>/manual_time            1451208 ns      1505714 ns          483          32.894k           439.708M               2        10.741k     4.5854M              7.26096           696.275        3.1927G          10.9856M                    17.3956                     2.39577           69.6275k     34.172k   631.515k       415.006M/s    1.12629    11.001k   4.62937M         7.33058    689.081/s 3.19001G/s     10.9856M               17.3956                2.37301        100       68.9081k/s [BEST: throughput=  0.44 GB/s doc_throughput=   696 docs/s instructions=    10985555 cycles=     4585405 branch_miss=   32894 cache_miss=       2 cache_ref=     10741 items=       100 avg_time=   1451207 ns]
partial_tweets<yyjson>/manual_time                        786956 ns       865060 ns          889           9.951k            1.3813G             271        28.768k    1.41167M              2.23538          2.18728k       3.08773G          2.91999M                    4.62379                     2.06846           218.728k    7.69438k   631.515k       765.303M/s    651.265   23.6824k   1.55536M          2.4629   1.27072k/s 1.97642G/s      2.9204M               4.62443                1.87764        100       127.072k/s [BEST: throughput=  1.38 GB/s doc_throughput=  2187 docs/s instructions=     2919992 cycles=     1411673 branch_miss=    9951 cache_miss=     271 cache_ref=     28768 items=       100 avg_time=    786956 ns]
partial_tweets<yyjson_insitu>/manual_time                 512827 ns       572592 ns         1376           6.962k            1.7855G          1.746k        13.621k     1.1246M              1.78079          2.82733k       3.17961G          2.91959M                    4.62316                     2.59612           282.733k    7.38099k   631.515k       1.14687G/s    75.7456    9.2144k   1.24202M         1.96673   1.94997k/s 2.42191G/s     2.91986M               4.62358                2.35089        100       194.997k/s [BEST: throughput=  1.79 GB/s doc_throughput=  2827 docs/s instructions=     2919595 cycles=     1124598 branch_miss=    6962 cache_miss=    1746 cache_ref=     13621 items=       100 avg_time=    512827 ns]
partial_tweets<rapidjson>/manual_time                    2783585 ns      2846200 ns          252           29.34k           249.646M           9.72k         22.61k    8.07632M              12.7888           395.313       3.19268G          21.8948M                    34.6702                     2.71099           39.5313k    29.8658k   631.515k       216.361M/s    409.048   12.0526k   8.21683M         13.0113    359.249/s 2.95189G/s     21.8957M               34.6717                2.66474        100       35.9249k/s [BEST: throughput=  0.25 GB/s doc_throughput=   395 docs/s instructions=    21894782 cycles=     8076317 branch_miss=   29340 cache_miss=    9720 cache_ref=     22610 items=       100 avg_time=   2783584 ns]
partial_tweets<rapidjson_insitu>/manual_time             1817335 ns      1877392 ns          387           25.58k           381.412M             235        14.872k    5.28646M              8.37108           603.963       3.19283G          13.3567M                    21.1503                     2.52659           60.3963k    27.3027k   631.515k       331.397M/s    221.599   9.99492k   5.40356M         8.55651    550.256/s 2.97335G/s     13.3572M                21.151                2.47192        100       55.0256k/s [BEST: throughput=  0.38 GB/s doc_throughput=   603 docs/s instructions=    13356701 cycles=     5286461 branch_miss=   25580 cache_miss=     235 cache_ref=     14872 items=       100 avg_time=   1817334 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                 101534259 ns    107475484 ns            7         978.881k           453.668M        6.77977M       6.89517M    323.327M              7.02904            9.8626       3.18885G          1038.74M                    22.5819                     3.21265            9.8626M     981.05k   45.9988M        432.05M/s   6.81826M   6.89543M   323.756M         7.03837    9.84889/s 3.18864G/s     1038.74M               22.5819                3.20839      1000k       9.84889M/s [BEST: throughput=  0.45 GB/s doc_throughput=     9 docs/s instructions=  1038738117 cycles=   323327113 branch_miss=  978881 cache_miss= 6779771 cache_ref=   6895171 items=   1000000 avg_time= 101534259 ns]
large_random<simdjson_ondemand>/manual_time            121255925 ns    127210000 ns            6          1.3027M           380.693M        3.49701M       3.57349M     385.31M              8.37652           8.27615       3.18888G          1.21898G                    26.5002                     3.16363           8.27615M    1.29914M   45.9988M       361.779M/s    3.5197M   3.57362M   386.618M         8.40496    8.24702/s 3.18844G/s     1.21898G               26.5002                3.15292      1000k       8.24702M/s [BEST: throughput=  0.38 GB/s doc_throughput=     8 docs/s instructions=  1218976309 cycles=   385309577 branch_miss= 1302699 cache_miss= 3497011 cache_ref=   3573494 items=   1000000 avg_time= 121255925 ns]
large_random<simdjson_ondemand_unordered>/manual_time  120808983 ns    126746031 ns            6         1.30314M            382.62M        3.51206M       3.57411M    383.331M               8.3335           8.31805       3.18857G          1.22398G                    26.6089                       3.193           8.31805M    1.30155M   45.9988M       363.117M/s   3.52216M   3.57418M   385.251M         8.37526    8.27753/s 3.18893G/s     1.22398G               26.6089                3.17708      1000k       8.27753M/s [BEST: throughput=  0.38 GB/s doc_throughput=     8 docs/s instructions=  1223976309 cycles=   383331021 branch_miss= 1303139 cache_miss= 3512063 cache_ref=   3574113 items=   1000000 avg_time= 120808982 ns]
large_random<yyjson>/manual_time                       146540394 ns    152514928 ns            5         678.844k             314.5M         4.1997M        4.3473M    327.607M              7.12207           6.83713       2.23989G          855.681M                    18.6023                     2.61192           6.83713M     682.48k   45.9988M       299.357M/s   4.20248M   4.35373M   328.117M         7.13317    6.82406/s 2.23909G/s     855.681M               18.6023                2.60785      1000k       6.82406M/s [BEST: throughput=  0.31 GB/s doc_throughput=     6 docs/s instructions=   855680755 cycles=   327606642 branch_miss=  678844 cache_miss= 4199698 cache_ref=   4347303 items=   1000000 avg_time= 146540393 ns]
large_random<yyjson_insitu>/manual_time                120485206 ns    126494355 ns            6          678.78k           382.014M         3.4821M       3.63461M     285.19M              6.19995           8.30487       2.36847G           849.56M                    18.4692                     2.97893           8.30487M    682.066k   45.9988M       364.093M/s   3.48273M   3.63546M   285.459M         6.20579    8.29977/s 2.36924G/s      849.56M               18.4692                2.97612      1000k       8.29977M/s [BEST: throughput=  0.38 GB/s doc_throughput=     8 docs/s instructions=   849560196 cycles=   285190114 branch_miss=  678780 cache_miss= 3482096 cache_ref=   3634608 items=   1000000 avg_time= 120485205 ns]
large_random<rapidjson>/manual_time                    250122737 ns    256111564 ns            3         618.225k           189.634M        4.37092M       4.93288M    706.241M              15.3535           4.12258       2.91153G          2.01413G                    43.7865                     2.85189           4.12258M    598.865k   45.9988M       175.385M/s   4.11845M   4.72841M   708.819M         15.4095    3.99804/s 2.83388G/s     2.01413G               43.7867                2.84153      1000k       3.99804M/s [BEST: throughput=  0.19 GB/s doc_throughput=     4 docs/s instructions=  2014125038 cycles=   706241074 branch_miss=  618225 cache_miss= 4370919 cache_ref=   4932883 items=   1000000 avg_time= 250122737 ns]
large_random<rapidjson_lossless>/manual_time           285975693 ns    291947259 ns            2         587.737k           164.225M        4.36438M       4.92915M    825.929M              17.9555           3.57019       2.94873G          2.47909G                    53.8947                     3.00158           3.57019M    587.484k   45.9988M       153.397M/s   4.16697M   4.77419M   828.476M         18.0108     3.4968/s 2.89702G/s      2.4791G               53.8949                2.99236      1000k        3.4968M/s [BEST: throughput=  0.16 GB/s doc_throughput=     3 docs/s instructions=  2479092158 cycles=   825928921 branch_miss=  587737 cache_miss= 4364384 cache_ref=   4929153 items=   1000000 avg_time= 285975693 ns]
large_random<rapidjson_insitu>/manual_time             275340754 ns    281313546 ns            3         591.816k           171.814M        5.07742M       5.70387M    785.942M              17.0861           3.73519       2.93564G          1.73612G                    37.7428                     2.20897           3.73519M    591.971k   45.9988M       159.322M/s   4.81274M   5.53865M   788.379M         17.1391    3.63186/s 2.86328G/s     1.73613G                37.743                2.20216      1000k       3.63186M/s [BEST: throughput=  0.17 GB/s doc_throughput=     3 docs/s instructions=  1736124883 cycles=   785941685 branch_miss=  591816 cache_miss= 5077425 cache_ref=   5703867 items=   1000000 avg_time= 275340754 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                       107600441 ns    125920266 ns            7         1021.86k           1.27806G        10.2226M       10.3166M    342.597M              2.49515            9.3082       3.18896G          984.675M                    7.17144                     2.87415           4.88018M    1022.52k   137.305M       1.18843G/s   10.2552M   10.3168M   343.105M         2.49885    9.29364/s 3.18869G/s     984.675M               7.17144                2.86989   524.288k       4.87255M/s [BEST: throughput=  1.28 GB/s doc_throughput=     9 docs/s instructions=   984674902 cycles=   342597219 branch_miss= 1021864 cache_miss=10222602 cache_ref=  10316635 items=    524288 avg_time= 107600441 ns]
kostya<simdjson_ondemand>/manual_time                  226725993 ns    245341167 ns            3          689.62k           607.979M        6.43912M       6.47254M    720.421M              5.24687           4.42794       3.18998G          2.21249G                    16.1137                     3.07111           2.32152M    751.269k   137.305M       577.544M/s   6.44813M   6.47269M   723.243M         5.26742    4.41061/s 3.18994G/s     2.21249G               16.1137                3.05913   524.288k       2.31243M/s [BEST: throughput=  0.61 GB/s doc_throughput=     4 docs/s instructions=  2212492378 cycles=   720420792 branch_miss=  689620 cache_miss= 6439116 cache_ref=   6472539 items=    524288 avg_time= 226725993 ns]
kostya<yyjson>/manual_time                             226104614 ns    244810262 ns            3         417.251k           607.724M        8.49385M       8.67694M    490.805M              3.57456           4.42609       2.17235G          974.185M                    7.09504                     1.98487           2.32055M    415.402k   137.305M       579.131M/s   8.49639M   8.67441M    490.94M         3.57554    4.42273/s 2.17129G/s     974.185M               7.09504                1.98433   524.288k       2.31879M/s [BEST: throughput=  0.61 GB/s doc_throughput=     4 docs/s instructions=   974184698 cycles=   490805371 branch_miss=  417251 cache_miss= 8493852 cache_ref=   8676942 items=    524288 avg_time= 226104614 ns]
kostya<yyjson_insitu>/manual_time                      148738074 ns    167305556 ns            5         418.343k           923.558M        6.35652M       6.53453M    363.493M              2.64734           6.72632       2.44497G          955.915M                    6.96198                      2.6298           3.52653M    417.487k   137.305M       880.368M/s   6.35818M   6.54556M   363.618M         2.64825    6.72323/s 2.44469G/s     955.915M               6.96198                 2.6289   524.288k       3.52491M/s [BEST: throughput=  0.92 GB/s doc_throughput=     6 docs/s instructions=   955915029 cycles=   363492987 branch_miss=  418343 cache_miss= 6356519 cache_ref=   6534530 items=    524288 avg_time= 148738074 ns]
kostya<rapidjson>/manual_time                          321241470 ns    339781058 ns            2         959.835k           431.642M         5.2287M       6.13091M    918.208M              6.68736           3.14368       2.88655G          2.73711G                    19.9345                     2.98093           1.64819M    959.725k   137.305M       407.619M/s   5.10068M   6.06351M   920.173M         6.70167    3.11292/s 2.86443G/s     2.73711G               19.9346                2.97456   524.288k       1.63207M/s [BEST: throughput=  0.43 GB/s doc_throughput=     3 docs/s instructions=  2737113182 cycles=   918208332 branch_miss=  959835 cache_miss= 5228698 cache_ref=   6130908 items=    524288 avg_time= 321241470 ns]
kostya<rapidjson_lossless>/manual_time                 345838629 ns    364465711 ns            2         982.726k           400.865M        5.21711M       6.14599M     996.77M              7.25953           2.91953        2.9101G          3.00606G                    21.8933                      3.0158           1.53067M    977.943k   137.305M       378.628M/s   5.09306M   6.08408M    998.91M         7.27512    2.89152/s 2.88837G/s     3.00607G               21.8933                3.00934   524.288k       1.51599M/s [BEST: throughput=  0.40 GB/s doc_throughput=     2 docs/s instructions=  3006063737 cycles=   996770320 branch_miss=  982726 cache_miss= 5217115 cache_ref=   6145989 items=    524288 avg_time= 345838629 ns]
kostya<rapidjson_insitu>/manual_time                   316580582 ns    335048932 ns            2         1077.56k           438.047M        7.36876M       8.08121M    902.974M              6.57641           3.19032       2.88077G          2.21988G                    16.1675                     2.45841           1.67265M    1064.67k   137.305M       413.621M/s   7.25505M   8.00346M   904.338M         6.58635    3.15875/s 2.85658G/s     2.21988G               16.1675                 2.4547   524.288k        1.6561M/s [BEST: throughput=  0.44 GB/s doc_throughput=     3 docs/s instructions=  2219877898 cycles=   902973775 branch_miss= 1077558 cache_miss= 7368762 cache_ref=   8081207 items=    524288 avg_time= 316580582 ns]
distinct_user_id<simdjson_dom>/manual_time                304367 ns       381146 ns         2301           3.667k            2.0899G               2        33.706k    965.143k               1.5283          3.30934k       3.19399G          2.91783M                    4.62037                     3.02321           380.574k    3.79931k   631.515k       1.93235G/s    2.12734   33.7806k   971.255k         1.53798    3.2855k/s 3.19106G/s     2.91783M               4.62037                3.00419        115       377.833k/s [BEST: throughput=  2.09 GB/s doc_throughput=  3309 docs/s instructions=     2917832 cycles=      965143 branch_miss=    3667 cache_miss=       2 cache_ref=     33706 items=       115 avg_time=    304367 ns]
distinct_user_id<simdjson_ondemand>/manual_time          1401981 ns      1460905 ns          499          32.534k           454.816M               0          8.71k    4.43324M              7.02001           720.198       3.19281G          10.6053M                    16.7934                     2.39222           82.8227k    33.6346k   631.515k       429.578M/s   0.573146   8.82693k   4.47244M         7.08209    713.276/s 3.19009G/s     10.6053M               16.7934                2.37126        115       82.0268k/s [BEST: throughput=  0.45 GB/s doc_throughput=   720 docs/s instructions=    10605306 cycles=     4433241 branch_miss=   32534 cache_miss=       0 cache_ref=      8710 items=       115 avg_time=   1401980 ns]
distinct_user_id<yyjson>/manual_time                      781181 ns       868054 ns          984           9.975k           1.45338G             291        27.638k    1.38798M              2.19786          2.30141k       3.19432G          2.87785M                    4.55706                     2.07341           264.662k    7.79348k   631.515k        770.96M/s     433.69   23.6921k   1.54076M         2.43979   1.28011k/s 1.97235G/s     2.87855M               4.55816                1.86826        115       147.213k/s [BEST: throughput=  1.45 GB/s doc_throughput=  2301 docs/s instructions=     2877853 cycles=     1387982 branch_miss=    9975 cache_miss=     291 cache_ref=     27638 items=       115 avg_time=    781181 ns]
distinct_user_id<yyjson_insitu>/manual_time               508821 ns       577113 ns         1389           7.091k           1.80468G          1.153k         13.73k    1.11236M              1.76142          2.85771k       3.17881G          2.87754M                    4.55656                     2.58687           328.636k    7.52751k   631.515k        1.1559G/s    70.7581   9.30091k   1.22965M         1.94714   1.96533k/s 2.41667G/s      2.8778M               4.55698                2.34034        115       226.013k/s [BEST: throughput=  1.80 GB/s doc_throughput=  2857 docs/s instructions=     2877538 cycles=     1112363 branch_miss=    7091 cache_miss=    1153 cache_ref=     13730 items=       115 avg_time=    508820 ns]
distinct_user_id<rapidjson>/manual_time                  2745416 ns      2815203 ns          252          29.622k           250.941M          7.153k        22.921k     8.0347M              12.7229           397.363       3.19269G          21.8231M                    34.5568                     2.71611           45.6968k    29.7819k   631.515k       219.369M/s   1.72367k   13.3933k   8.16565M         12.9303    364.243/s 2.97428G/s     21.8237M               34.5578                2.67263        115        41.888k/s [BEST: throughput=  0.25 GB/s doc_throughput=   397 docs/s instructions=    21823118 cycles=     8034696 branch_miss=   29622 cache_miss=    7153 cache_ref=     22921 items=       115 avg_time=   2745416 ns]
distinct_user_id<rapidjson_insitu>/manual_time           1807418 ns      1875544 ns          382          25.203k           383.649M          3.335k        14.751k    5.25563M              8.32225           607.506       3.19282G          13.2888M                    21.0428                      2.5285           69.8632k    31.1022k   631.515k       333.216M/s   1.88451k   11.6768k   5.46766M         8.65801    553.276/s 3.02512G/s     13.2891M               21.0432                2.43049        115       63.6267k/s [BEST: throughput=  0.38 GB/s doc_throughput=   607 docs/s instructions=    13288825 cycles=     5255625 branch_miss=   25203 cache_miss=    3335 cache_ref=     14751 items=       115 avg_time=   1807417 ns]
find_tweet<simdjson_dom>/manual_time                      289528 ns       361245 ns         2415            3.37k           2.19842G               1        29.612k     917.49k              1.45284          3.48118k       3.19395G          2.83251M                    4.48526                     3.08724           3.48118k    3.49335k   631.515k       2.03139G/s   0.701863   29.7395k   923.948k         1.46307   3.45389k/s 3.19122G/s     2.83251M               4.48526                3.06566          1       3.45389k/s [BEST: throughput=  2.20 GB/s doc_throughput=  3481 docs/s instructions=     2832512 cycles=      917490 branch_miss=    3370 cache_miss=       1 cache_ref=     29612 items=         1 avg_time=    289528 ns]
find_tweet<simdjson_ondemand>/manual_time                1349177 ns      1410067 ns          519          31.855k           473.243M               0         7.579k    4.26065M              6.74671           749.377       3.19283G          10.0995M                    15.9925                     2.37041            749.377    33.1119k   631.515k        446.39M/s    1.29287   7.74018k   4.30415M          6.8156    741.192/s 3.19021G/s     10.0995M               15.9925                2.34646          1        741.192/s [BEST: throughput=  0.47 GB/s doc_throughput=   749 docs/s instructions=    10099506 cycles=     4260651 branch_miss=   31855 cache_miss=       0 cache_ref=      7579 items=         1 avg_time=   1349177 ns]
find_tweet<yyjson>/manual_time                            765314 ns       847968 ns          918           9.945k           1.47676G             224        27.263k     1.3659M              2.16289          2.33844k       3.19407G          2.81716M                    4.46095                     2.06249           2.33844k    7.50805k   631.515k       786.945M/s    335.339   20.1109k   1.49167M         2.36205   1.30665k/s  1.9491G/s     2.81764M               4.46172                1.88892          1       1.30665k/s [BEST: throughput=  1.48 GB/s doc_throughput=  2338 docs/s instructions=     2817155 cycles=     1365900 branch_miss=    9945 cache_miss=     224 cache_ref=     27263 items=         1 avg_time=    765313 ns]
find_tweet<yyjson_insitu>/manual_time                     494996 ns       555556 ns         1414           6.791k           1.85718G            1064        13.095k    1080.89k              1.71158          2.94083k       3.17871G          2.81684M                    4.46045                     2.60604           2.94083k    7.29444k   631.515k       1.18818G/s    6.84795   5.62833k   1.18625M         1.87842   2.02022k/s 2.39649G/s      2.8171M               4.46086                2.37479          1       2.02022k/s [BEST: throughput=  1.86 GB/s doc_throughput=  2940 docs/s instructions=     2816840 cycles=     1080890 branch_miss=    6791 cache_miss=    1064 cache_ref=     13095 items=         1 avg_time=    494995 ns]
find_tweet<rapidjson>/manual_time                        2731235 ns      2796356 ns          256          28.863k           252.311M         11.935k        21.054k    7.98115M              12.6381           399.533       3.18873G          21.7384M                    34.4226                     2.72372            399.533    29.6748k   631.515k       220.508M/s   1.48835k   10.5085k   8.12031M         12.8585    366.135/s 2.97313G/s      21.739M               34.4235                2.67711          1        366.135/s [BEST: throughput=  0.25 GB/s doc_throughput=   399 docs/s instructions=    21738398 cycles=     7981155 branch_miss=   28863 cache_miss=   11935 cache_ref=     21054 items=         1 avg_time=   2731235 ns]
find_tweet<rapidjson_insitu>/manual_time                 1793667 ns      1856655 ns          383          25.143k           386.315M               6        13.517k    5.21929M              8.26471           611.727       3.19278G          13.2105M                    20.9187                     2.53109            611.727    30.8927k   631.515k        335.77M/s   1.71818k   8.94434k   5.42364M          8.5883    557.517/s 3.02377G/s      13.211M               20.9195                2.43581          1        557.517/s [BEST: throughput=  0.39 GB/s doc_throughput=   611 docs/s instructions=    13210474 cycles=     5219286 branch_miss=   25143 cache_miss=       6 cache_ref=     13517 items=         1 avg_time=   1793666 ns]
