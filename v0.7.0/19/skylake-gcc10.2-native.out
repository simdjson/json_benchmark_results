run_benchmark: v0.8.0~19 /home/jkeiser/simdjson_benchmark_results/v0.7.0/19/skylake-gcc10.2-native.json -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native
git reset --hard v0.8.0~19
HEAD is now at 920f5355 Reamalgamate
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- git Version: v0.2.1-920f5355
-- Version: 0.2.1
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 11
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
make[3]: Nothing to be done for '_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build'.
[ 72%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
make[3]: Nothing to be done for 'jsonexamples/generated/CMakeFiles/generated-data.dir/build'.
[ 72%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/g++-10  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/src  -march=native -O3 -DNDEBUG -fPIC   -pthread -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/g++-10 -fPIC -march=native -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.6 -o ../libsimdjson.so.6.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.6.0.0 ../libsimdjson.so.6 ../libsimdjson.so
[ 81%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
make[3]: Nothing to be done for 'dependencies/CMakeFiles/yyjson.dir/build'.
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/g++-10  -DRAPIDJSON_HAS_STDSTRING -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_COMPETITION_RAPIDJSON -DSIMDJSON_COMPETITION_YYJSON -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/rapidjson/include  -march=native -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/g++-10  -march=native -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.6.0.0 ../_deps/google_benchmarks/src/libbenchmark.a ../dependencies/libyyjson.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/19/skylake-gcc10.2-native.json --benchmark_out_format=json
2021-01-25 02:15:47
Running benchmark/bench_ondemand
Run on (4 X 4000 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 256 KiB (x4)
  L3 Unified 8192 KiB (x1)
Load Average: 1.02, 1.01, 0.95
simdjson::dom implementation:      haswell
simdjson::ondemand implementation: haswell
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                  259766 ns       288484 ns         2690           3.676k           2.44628G               0         93.19k    953.282k              1.50952          3.87367k        3.6927G          2.91501M                     4.6159                     3.05787           387.367k    3.86781k   631.515k       2.26413G/s    1.67138   92.9844k   958.386k          1.5176   3.84962k/s 3.68942G/s     2.91501M                4.6159                3.04159        100       384.962k/s [BEST: throughput=  2.45 GB/s doc_throughput=  3873 docs/s instructions=     2915013 cycles=      953282 branch_miss=    3676 cache_miss=       0 cache_ref=     93190 items=       100 avg_time=    259766 ns]
partial_tweets<simdjson_ondemand>/manual_time             175718 ns       204382 ns         3983           1.623k           3.62116G               0        57.605k    644.085k               1.0199          5.73408k       3.69323G          2.14384M                    3.39475                      3.3285           573.408k    1.76036k   631.515k       3.34709G/s   0.184785   57.8749k   648.471k         1.02685   5.69093k/s  3.6904G/s     2.14384M               3.39475                3.30599        100       569.093k/s [BEST: throughput=  3.62 GB/s doc_throughput=  5734 docs/s instructions=     2143837 cycles=      644085 branch_miss=    1623 cache_miss=       0 cache_ref=     57605 items=       100 avg_time=    175718 ns]
partial_tweets<yyjson>/manual_time                        702882 ns       733469 ns          995          10.072k           1.52628G             401        77.231k    1.52783M              2.41932          2.41685k       3.69254G          2.90835M                    4.60536                     1.90358           241.685k    7.61912k   631.515k       856.843M/s    964.473   51.4237k   1.74237M         2.75903   1.42271k/s 2.47889G/s     2.90884M               4.60613                1.66947        100       142.271k/s [BEST: throughput=  1.53 GB/s doc_throughput=  2416 docs/s instructions=     2908354 cycles=     1527834 branch_miss=   10072 cache_miss=     401 cache_ref=     77231 items=       100 avg_time=    702881 ns]
partial_tweets<yyjson_insitu>/manual_time                 492010 ns       521541 ns         1423           7.665k           1.68965G               5        48.475k       1.38M              2.18522          2.67555k       3.69225G          2.90804M                    4.60486                     2.10728           267.555k    7.44038k   631.515k       1.19539G/s    134.249   33.4986k   1.46995M         2.32766   2.03248k/s 2.98765G/s      2.9083M               4.60528                 1.9785        100       203.248k/s [BEST: throughput=  1.69 GB/s doc_throughput=  2675 docs/s instructions=     2908037 cycles=     1379998 branch_miss=    7665 cache_miss=       5 cache_ref=     48475 items=       100 avg_time=    492009 ns]
partial_tweets<rapidjson>/manual_time                    1618022 ns      1647520 ns          433          26.365k            447.15M          9.963k        54.509k    5.21366M               8.2558           708.059       3.69158G          13.1234M                    20.7808                     2.51711           70.8059k     26.128k   631.515k        372.22M/s    527.984   35.3311k   5.37904M         8.51768    618.039/s 3.32446G/s     13.1241M               20.7819                2.43986        100       61.8039k/s [BEST: throughput=  0.45 GB/s doc_throughput=   708 docs/s instructions=    13123369 cycles=     5213664 branch_miss=   26365 cache_miss=    9963 cache_ref=     54509 items=       100 avg_time=   1618021 ns]
partial_tweets<rapidjson_insitu>/manual_time             1170421 ns      1199492 ns          601          23.706k             599.7M          7.904k        46.219k     3.8875M              6.15583           949.622       3.69165G          9.82434M                    15.5568                     2.52716           94.9622k    24.0295k   631.515k       514.567M/s    232.814   36.0783k   3.96849M         6.28408    854.394/s 3.39065G/s     9.82473M               15.5574                2.47569        100       85.4394k/s [BEST: throughput=  0.60 GB/s doc_throughput=   949 docs/s instructions=     9824339 cycles=     3887496 branch_miss=   23706 cache_miss=    7904 cache_ref=     46219 items=       100 avg_time=   1170420 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                  92159376 ns     95601706 ns            8         870.916k            500.98M        11.0296M       15.3938M    338.596M              7.36098           10.8912        3.6877G          981.675M                    21.3413                     2.89925           10.8912M    870.933k   45.9988M           476M/s   10.9258M    15.394M   339.384M         7.37811    10.8508/s 3.68258G/s     981.675M               21.3413                2.89252      1000k       10.8508M/s [BEST: throughput=  0.50 GB/s doc_throughput=    10 docs/s instructions=   981674937 cycles=   338595903 branch_miss=  870916 cache_miss=11029640 cache_ref=  15393751 items=   1000000 avg_time=  92159375 ns]
large_random<simdjson_ondemand>/manual_time             58852629 ns     62225179 ns           12           879.5k           782.662M        5.65599M       8.00244M    216.822M              4.71364           17.0148       3.68918G          643.053M                    13.9798                     2.96581           17.0148M    879.813k   45.9988M       745.385M/s   5.68012M    8.0034M   217.059M          4.7188    16.9916/s 3.68818G/s     643.053M               13.9798                2.96257      1000k       16.9916M/s [BEST: throughput=  0.78 GB/s doc_throughput=    17 docs/s instructions=   643052685 cycles=   216821598 branch_miss=  879500 cache_miss= 5655990 cache_ref=   8002435 items=   1000000 avg_time=  58852629 ns]
large_random<simdjson_ondemand_unordered>/manual_time   62487134 ns     65878837 ns           11         866.222k           737.242M        5.67403M        8.0004M    230.173M              5.00389           16.0274       3.68908G          647.053M                    14.0667                     2.81116           16.0274M    866.639k   45.9988M        702.03M/s   5.71188M   8.00178M   230.481M         5.01058    16.0033/s 3.68845G/s     647.053M               14.0667                2.80741      1000k       16.0033M/s [BEST: throughput=  0.74 GB/s doc_throughput=    16 docs/s instructions=   647052688 cycles=   230172993 branch_miss=  866222 cache_miss= 5674032 cache_ref=   8000400 items=   1000000 avg_time=  62487134 ns]
large_random<yyjson>/manual_time                       127647368 ns    131053292 ns            5         662.798k           360.557M        5.81147M        9.0465M    350.336M               7.6162            7.8384       2.74607G           942.15M                    20.4821                     2.68927            7.8384M    662.126k   45.9988M       343.664M/s   5.81707M   9.04825M   350.268M         7.61473    7.83408/s 2.74403G/s     942.149M               20.4821                2.68979      1000k       7.83408M/s [BEST: throughput=  0.36 GB/s doc_throughput=     7 docs/s instructions=   942149589 cycles=   350336033 branch_miss=  662798 cache_miss= 5811466 cache_ref=   9046496 items=   1000000 avg_time= 127647367 ns]
large_random<yyjson_insitu>/manual_time                109793576 ns    113214465 ns            6         662.389k           419.197M         4.9495M       7.69603M    318.778M              6.93014           9.11322       2.90509G          936.029M                     20.349                      2.9363           9.11322M    662.056k   45.9988M       399.548M/s    4.9424M   7.69617M   318.908M         6.93298      9.108/s 2.90462G/s     936.029M                20.349                 2.9351      1000k         9.108M/s [BEST: throughput=  0.42 GB/s doc_throughput=     9 docs/s instructions=   936028829 cycles=   318777804 branch_miss=  662389 cache_miss= 4949498 cache_ref=   7696033 items=   1000000 avg_time= 109793576 ns]
large_random<rapidjson>/manual_time                    178392574 ns    181805740 ns            4         592.428k            268.87M        7.01177M       10.8576M    573.096M              12.4589           5.84516       3.34984G          1.67014G                    36.3083                     2.91424           5.84516M    593.903k   45.9988M       245.906M/s   6.42255M   10.1193M    578.98M         12.5868    5.60561/s 3.24554G/s     1.67015G               36.3085                2.88464      1000k       5.60561M/s [BEST: throughput=  0.27 GB/s doc_throughput=     5 docs/s instructions=  1670138402 cycles=   573096108 branch_miss=  592428 cache_miss= 7011770 cache_ref=  10857592 items=   1000000 avg_time= 178392573 ns]
large_random<rapidjson_lossless>/manual_time           202658588 ns    206079693 ns            4         590.317k           234.812M        7.07324M       10.8318M    664.365M              14.4431           5.10474       3.39141G          2.03011G                     44.134                     3.05571           5.10474M    589.097k   45.9988M       216.462M/s   6.43801M   10.1077M   668.439M         14.5317    4.93441/s 3.29835G/s     2.03012G               44.1342                 3.0371      1000k       4.93441M/s [BEST: throughput=  0.23 GB/s doc_throughput=     5 docs/s instructions=  2030108185 cycles=   664364647 branch_miss=  590317 cache_miss= 7073236 cache_ref=  10831773 items=   1000000 avg_time= 202658588 ns]
large_random<rapidjson_insitu>/manual_time             161330849 ns    164740653 ns            5         600.853k           299.827M         8.0666M       12.3986M    507.939M              11.0425           6.51814       3.31082G          1.50214G                    32.6561                     2.95732           6.51814M    604.813k   45.9988M       271.912M/s   7.48919M   11.6019M   514.578M         11.1868    6.19844/s 3.18958G/s     1.50215G               32.6563                2.91919      1000k       6.19844M/s [BEST: throughput=  0.30 GB/s doc_throughput=     6 docs/s instructions=  1502138387 cycles=   507939242 branch_miss=  600853 cache_miss= 8066600 cache_ref=  12398599 items=   1000000 avg_time= 161330848 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                        86245997 ns     96600054 ns            8         448.882k           1.59379G        15.7026M       22.2198M    317.742M              2.31413           11.6077       3.68824G          938.041M                     6.8318                     2.95221           6.08576M    448.834k   137.305M       1.48268G/s   15.6957M    22.244M   318.076M         2.31657    11.5947/s 3.68801G/s     938.041M                6.8318                 2.9491   524.288k       6.07898M/s [BEST: throughput=  1.59 GB/s doc_throughput=    11 docs/s instructions=   938040602 cycles=   317741853 branch_miss=  448882 cache_miss=15702576 cache_ref=  22219786 items=    524288 avg_time=  86245997 ns]
kostya<simdjson_ondemand>/manual_time                   59545134 ns     69895301 ns           12         459.111k           2.30954G        10.0518M       14.0359M    219.302M              1.59719           16.8205       3.68877G          676.093M                    4.92402                     3.08293            8.8188M    458.934k   137.305M       2.14753G/s    10.069M   13.9954M   219.566M         1.59911     16.794/s 3.68738G/s     676.093M               4.92402                3.07923   524.288k       8.80488M/s [BEST: throughput=  2.31 GB/s doc_throughput=    16 docs/s instructions=   676092756 cycles=   219301890 branch_miss=  459111 cache_miss=10051825 cache_ref=  14035946 items=    524288 avg_time=  59545134 ns]
kostya<yyjson>/manual_time                             208128457 ns    218525724 ns            3         413.795k           660.308M        11.2438M       16.1213M    569.349M               4.1466           4.80906       2.73804G          984.045M                    7.16686                     1.72837           2.52133M    413.077k   137.305M       629.151M/s   11.2446M   16.1055M   569.312M         4.14633    4.80473/s 2.73539G/s     984.045M               7.16686                1.72848   524.288k       2.51906M/s [BEST: throughput=  0.66 GB/s doc_throughput=     4 docs/s instructions=   984045130 cycles=   569349271 branch_miss=  413795 cache_miss=11243766 cache_ref=  16121333 items=    524288 avg_time= 208128456 ns]
kostya<yyjson_insitu>/manual_time                      153981168 ns    164383906 ns            5         417.241k           892.052M        8.71566M       12.2555M     472.72M              3.44285           6.49687        3.0712G          965.775M                     7.0338                     2.04302           3.40623M     415.23k   137.305M       850.391M/s   8.71808M   12.2382M   472.675M         3.44252     6.4943/s 3.06969G/s     965.775M                7.0338                2.04321   524.288k       3.40488M/s [BEST: throughput=  0.89 GB/s doc_throughput=     6 docs/s instructions=   965775248 cycles=   472720075 branch_miss=  417241 cache_miss= 8715662 cache_ref=  12255542 items=    524288 avg_time= 153981168 ns]
kostya<rapidjson>/manual_time                          251051882 ns    261466521 ns            3         1027.51k           554.446M        8.08749M       12.0511M    831.644M              6.05691           4.03806       3.35823G          2.29616G                    16.7231                       2.761           2.11711M    1016.46k   137.305M       521.582M/s   7.78649M   11.7439M   834.867M         6.08039    3.98324/s 3.32548G/s     2.29617G               16.7231                2.75034   524.288k       2.08837M/s [BEST: throughput=  0.55 GB/s doc_throughput=     4 docs/s instructions=  2296164930 cycles=   831643979 branch_miss= 1027508 cache_miss= 8087490 cache_ref=  12051085 items=    524288 avg_time= 251051882 ns]
kostya<rapidjson_lossless>/manual_time                 273342910 ns    283747864 ns            3         950.207k           508.546M        8.09894M       12.0647M    914.397M              6.65961           3.70377       3.38672G          2.50115G                     18.216                      2.7353           1.94184M    950.945k   137.305M       479.048M/s   7.78195M   11.7058M   917.303M         6.68077    3.65841/s 3.35587G/s     2.50116G               18.2161                2.72664   524.288k       1.91806M/s [BEST: throughput=  0.51 GB/s doc_throughput=     3 docs/s instructions=  2501153645 cycles=   914397152 branch_miss=  950207 cache_miss= 8098943 cache_ref=  12064690 items=    524288 avg_time= 273342910 ns]
kostya<rapidjson_insitu>/manual_time                   236719636 ns    247407397 ns            3         978.199k           588.537M        11.1138M       15.7368M    779.017M              5.67362           4.28635       3.33913G          2.04643G                    14.9043                     2.62694           2.24728M    978.729k   137.305M       553.162M/s   10.8086M   15.3472M   782.174M         5.69661    4.22441/s 3.30422G/s     2.04643G               14.9043                2.61634   524.288k       2.21481M/s [BEST: throughput=  0.59 GB/s doc_throughput=     4 docs/s instructions=  2046429907 cycles=   779016628 branch_miss=  978199 cache_miss=11113771 cache_ref=  15736773 items=    524288 avg_time= 236719635 ns]
distinct_user_id<simdjson_dom>/manual_time                257962 ns       289045 ns         2712           3.871k           2.46455G               0        94.381k     946.16k              1.49824          3.90261k       3.69249G          2.85594M                    4.52236                     3.01845             448.8k    4.06066k   631.515k       2.27996G/s     1.1969   94.3438k    951.83k         1.50722   3.87654k/s  3.6898G/s     2.85594M               4.52236                3.00047        115       445.802k/s [BEST: throughput=  2.46 GB/s doc_throughput=  3902 docs/s instructions=     2855937 cycles=      946160 branch_miss=    3871 cache_miss=       0 cache_ref=     94381 items=       115 avg_time=    257962 ns]
distinct_user_id<simdjson_ondemand>/manual_time           163790 ns       193780 ns         4270           1.539k           3.88744G               0         56.54k    599.929k             0.949984          6.15574k       3.69301G          2.09786M                    3.32194                     3.49684            707.91k    1.69598k   631.515k       3.59083G/s   0.644028   56.4585k   604.528k        0.957266   6.10536k/s 3.69086G/s     2.09786M               3.32194                3.47024        115       702.117k/s [BEST: throughput=  3.89 GB/s doc_throughput=  6155 docs/s instructions=     2097858 cycles=      599929 branch_miss=    1539 cache_miss=       0 cache_ref=     56540 items=       115 avg_time=    163790 ns]
distinct_user_id<yyjson>/manual_time                      689296 ns       723771 ns         1187           9.932k           1.50276G             213        78.184k    1.51662M              2.40157           2.3796k       3.60897G          2.87489M                    4.55237                     1.89559           273.654k    7.76237k   631.515k       873.731M/s    1074.46   50.3811k   1.73566M         2.74841   1.45075k/s 2.51802G/s     2.87558M               4.55346                1.65676        115       166.837k/s [BEST: throughput=  1.50 GB/s doc_throughput=  2379 docs/s instructions=     2874893 cycles=     1516625 branch_miss=    9932 cache_miss=     213 cache_ref=     78184 items=       115 avg_time=    689296 ns]
distinct_user_id<yyjson_insitu>/manual_time               486900 ns       520173 ns         1437           7.126k           1.71904G             518         46.69k    1.35142M              2.13997          2.72209k       3.67869G          2.87457M                    4.55186                     2.12707            313.04k    7.62866k   631.515k       1.20794G/s    115.534   32.1899k   1.46369M         2.31775   2.05381k/s 3.00615G/s     2.87483M               4.55228                 1.9641        115       236.188k/s [BEST: throughput=  1.72 GB/s doc_throughput=  2722 docs/s instructions=     2874571 cycles=     1351421 branch_miss=    7126 cache_miss=     518 cache_ref=     46690 items=       115 avg_time=    486899 ns]
distinct_user_id<rapidjson>/manual_time                  1596060 ns      1627489 ns          439          26.401k           448.885M          9.078k        54.966k    5.19355M              8.22395           710.806        3.6916G          13.0651M                    20.6886                     2.51565           81.7427k    26.2984k   631.515k       377.341M/s   1.96272k   36.4558k   5.35682M         8.48248    626.543/s 3.35627G/s     13.0658M               20.6896                2.43909        115       72.0524k/s [BEST: throughput=  0.45 GB/s doc_throughput=   710 docs/s instructions=    13065132 cycles=     5193545 branch_miss=   26401 cache_miss=    9078 cache_ref=     54966 items=       115 avg_time=   1596060 ns]
distinct_user_id<rapidjson_insitu>/manual_time           1147311 ns      1177810 ns          645          23.675k            605.08M               7        44.913k    3.85304M              6.10126           958.141       3.69175G          9.77571M                    15.4798                     2.53714           110.186k    24.0478k   631.515k       524.931M/s   2.12757k   36.9297k   3.94529M         6.24734    871.603/s 3.43872G/s     9.77625M               15.4806                2.47796        115       100.234k/s [BEST: throughput=  0.61 GB/s doc_throughput=   958 docs/s instructions=     9775707 cycles=     3853039 branch_miss=   23675 cache_miss=       7 cache_ref=     44913 items=       115 avg_time=   1147311 ns]
find_tweet<simdjson_dom>/manual_time                      244199 ns       273370 ns         2867           3.598k           2.60184G               0        83.546k    896.292k              1.41927          4.11999k       3.69271G           2.7749M                    4.39404                     3.09598           4.11999k    3.71975k   631.515k       2.40846G/s    10.5549   83.4949k   900.978k         1.42669   4.09502k/s 3.68952G/s      2.7749M               4.39404                3.07988          1       4.09502k/s [BEST: throughput=  2.60 GB/s doc_throughput=  4119 docs/s instructions=     2774900 cycles=      896292 branch_miss=    3598 cache_miss=       0 cache_ref=     83546 items=         1 avg_time=    244199 ns]
find_tweet<simdjson_ondemand>/manual_time                 116366 ns       144888 ns         6012              702           5.45072G               0        32.568k    428.018k             0.677764          8.63118k        3.6943G          1.47888M                     2.3418                     3.45518           8.63118k     750.046   631.515k       5.05426G/s  0.0542249   32.6683k   429.581k        0.680238   8.59358k/s 3.69164G/s     1.47888M                2.3418                3.44261          1       8.59358k/s [BEST: throughput=  5.45 GB/s doc_throughput=  8631 docs/s instructions=     1478879 cycles=      428018 branch_miss=     702 cache_miss=       0 cache_ref=     32568 items=         1 avg_time=    116365 ns]
find_tweet<yyjson>/manual_time                            677540 ns       708283 ns         1083           9.666k           1.57538G             140        68.715k    1.48003M              2.34361          2.49461k       3.69209G          2.82414M                      4.472                     1.90816           2.49461k    7.51108k   631.515k       888.892M/s    1024.05   41.5122k   1.69913M         2.69057   1.47593k/s  2.5078G/s     2.82462M               4.47276                1.66239          1       1.47593k/s [BEST: throughput=  1.58 GB/s doc_throughput=  2494 docs/s instructions=     2824135 cycles=     1480028 branch_miss=    9666 cache_miss=     140 cache_ref=     68715 items=         1 avg_time=    677539 ns]
find_tweet<yyjson_insitu>/manual_time                     475861 ns       506309 ns         1470           7.523k           1.74702G              16        38.403k    1.33464M               2.1134           2.7664k       3.69216G          2.82381M                    4.47149                     2.11578            2.7664k    7.31252k   631.515k       1.23596G/s    15.7102   23.5396k   1.42411M         2.25506   2.10145k/s 2.99269G/s     2.82408M               4.47191                1.98305          1       2.10145k/s [BEST: throughput=  1.75 GB/s doc_throughput=  2766 docs/s instructions=     2823813 cycles=     1334644 branch_miss=    7523 cache_miss=      16 cache_ref=     38403 items=         1 avg_time=    475861 ns]
find_tweet<rapidjson>/manual_time                        1586764 ns      1616261 ns          441          25.898k           452.176M          9.118k        47.574k    5.15572M              8.16405           716.018       3.69159G          12.9975M                    20.5815                     2.52099            716.018    26.1329k   631.515k       379.552M/s   1.56887k   29.3592k   5.32209M          8.4275    630.213/s 3.35405G/s     12.9982M               20.5825                 2.4423          1        630.213/s [BEST: throughput=  0.45 GB/s doc_throughput=   716 docs/s instructions=    12997498 cycles=     5155722 branch_miss=   25898 cache_miss=    9118 cache_ref=     47574 items=         1 avg_time=   1586763 ns]
find_tweet<rapidjson_insitu>/manual_time                 1137911 ns      1167806 ns          655          23.603k           609.088M          2.521k        36.338k    3.82758M              6.06094           964.487       3.69165G          9.71882M                    15.3897                     2.53916            964.487    23.9056k   631.515k       529.268M/s   1.82238k   27.9981k   3.91057M         6.19236    878.803/s 3.43662G/s     9.71906M               15.3901                2.48533          1        878.803/s [BEST: throughput=  0.61 GB/s doc_throughput=   964 docs/s instructions=     9718816 cycles=     3827576 branch_miss=   23603 cache_miss=    2521 cache_ref=     36338 items=         1 avg_time=   1137910 ns]
