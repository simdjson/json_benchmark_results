run_benchmark: v0.8.0~19 /home/jkeiser/simdjson_benchmark_results/v0.7.0/19/skylake-gcc10.2.json -DCMAKE_BUILD_TYPE=Release
git reset --hard v0.8.0~19
HEAD is now at 920f5355 Reamalgamate
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- git Version: v0.2.1-920f5355
-- Version: 0.2.1
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 11
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
make[3]: Nothing to be done for '_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build'.
[ 72%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
make[3]: Nothing to be done for 'jsonexamples/generated/CMakeFiles/generated-data.dir/build'.
[ 72%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/g++-10  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/src  -O3 -DNDEBUG -fPIC   -pthread -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/g++-10 -fPIC -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.6 -o ../libsimdjson.so.6.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.6.0.0 ../libsimdjson.so.6 ../libsimdjson.so
[ 81%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
make[3]: Nothing to be done for 'dependencies/CMakeFiles/yyjson.dir/build'.
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/g++-10  -DRAPIDJSON_HAS_STDSTRING -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_COMPETITION_RAPIDJSON -DSIMDJSON_COMPETITION_YYJSON -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/rapidjson/include  -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/g++-10  -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.6.0.0 ../_deps/google_benchmarks/src/libbenchmark.a ../dependencies/libyyjson.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/19/skylake-gcc10.2.json --benchmark_out_format=json
2021-01-25 02:06:48
Running benchmark/bench_ondemand
Run on (4 X 4000 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 256 KiB (x4)
  L3 Unified 8192 KiB (x1)
Load Average: 1.00, 1.02, 0.87
simdjson::dom implementation:      haswell
simdjson::ondemand implementation: fallback
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
partial_tweets<simdjson_dom>/manual_time                  263054 ns       291823 ns         2662           3.885k           2.41509G               0        93.375k    965.548k              1.52894          3.82428k       3.69253G           2.9625M                     4.6911                     3.06821           382.428k    4.01625k   631.515k       2.23583G/s    1.59204   93.3538k   970.705k          1.5371   3.80151k/s 3.69014G/s      2.9625M                4.6911                3.05191        100       380.151k/s [BEST: throughput=  2.42 GB/s doc_throughput=  3824 docs/s instructions=     2962503 cycles=      965548 branch_miss=    3885 cache_miss=       0 cache_ref=     93375 items=       100 avg_time=    263053 ns]
partial_tweets<simdjson_ondemand>/manual_time            1112302 ns      1140862 ns          630          31.476k           570.954M               0        60.162k    4.08324M              6.46578           904.102       3.69166G          10.6861M                    16.9214                     2.61707           90.4102k    31.9837k   631.515k       541.453M/s   0.136508   60.1183k   4.10328M         6.49751    899.037/s   3.689G/s     10.6861M               16.9214                2.60429        100       89.9037k/s [BEST: throughput=  0.57 GB/s doc_throughput=   904 docs/s instructions=    10686117 cycles=     4083238 branch_miss=   31476 cache_miss=       0 cache_ref=     60162 items=       100 avg_time=   1112301 ns]
partial_tweets<yyjson>/manual_time                        666862 ns       698183 ns         1048           9.961k           1.66287G             375        79.655k    1.40233M              2.22059          2.63315k       3.69256G          2.90836M                    4.60537                     2.07394           263.315k    7.40303k   631.515k       903.125M/s    988.858   51.7987k   1.60963M         2.54883   1.49956k/s 2.41373G/s     2.90905M               4.60646                1.80728        100       149.956k/s [BEST: throughput=  1.66 GB/s doc_throughput=  2633 docs/s instructions=     2908359 cycles=     1402334 branch_miss=    9961 cache_miss=     375 cache_ref=     79655 items=       100 avg_time=    666862 ns]
partial_tweets<yyjson_insitu>/manual_time                 457092 ns       486596 ns         1533            6.92k           1.89625G             544        48.164k    1.22628M              1.94181          3.00271k       3.68216G          2.90804M                    4.60486                     2.37143           300.271k    7.27675k   631.515k       1.28671G/s    139.886   33.8722k   1.33937M         2.12088   2.18774k/s  2.9302G/s      2.9083M               4.60528                2.17139        100       218.774k/s [BEST: throughput=  1.90 GB/s doc_throughput=  3002 docs/s instructions=     2908038 cycles=     1226280 branch_miss=    6920 cache_miss=     544 cache_ref=     48164 items=       100 avg_time=    457091 ns]
partial_tweets<rapidjson>/manual_time                    1639436 ns      1668805 ns          428          26.904k           439.685M             324        53.937k    5.30229M              8.39615           696.238       3.69166G           13.409M                     21.233                      2.5289           69.6238k    26.6335k   631.515k       367.358M/s    495.082   34.1895k   5.46004M         8.64594    609.966/s 3.33044G/s     13.4097M               21.2342                2.45597        100       60.9966k/s [BEST: throughput=  0.44 GB/s doc_throughput=   696 docs/s instructions=    13408970 cycles=     5302293 branch_miss=   26904 cache_miss=     324 cache_ref=     53937 items=       100 avg_time=   1639435 ns]
partial_tweets<rapidjson_insitu>/manual_time             1189787 ns      1218843 ns          590          25.562k           587.149M              54        45.956k    3.97066M              6.28751           929.747       3.69171G          9.75515M                    15.4472                     2.45681           92.9747k    25.1283k   631.515k       506.191M/s    229.715   35.5274k   4.04514M         6.40545    840.486/s 3.39988G/s     9.75554M               15.4478                2.41167        100       84.0486k/s [BEST: throughput=  0.59 GB/s doc_throughput=   929 docs/s instructions=     9755151 cycles=     3970658 branch_miss=   25562 cache_miss=      54 cache_ref=     45956 items=       100 avg_time=   1189787 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                  88684644 ns     92102695 ns            8         900.398k           519.572M        10.9284M        15.389M    326.586M              7.09988           11.2953        3.6889G          983.113M                    21.3726                     3.01027           11.2953M    901.404k   45.9988M        494.65M/s   10.9358M    15.383M   327.074M          7.1105    11.2759/s 3.68806G/s     983.113M               21.3726                3.00578      1000k       11.2759M/s [BEST: throughput=  0.52 GB/s doc_throughput=    11 docs/s instructions=   983112679 cycles=   326585926 branch_miss=  900398 cache_miss=10928376 cache_ref=  15389047 items=   1000000 avg_time=  88684644 ns]
large_random<simdjson_ondemand>/manual_time            130359573 ns    133718777 ns            5         2.41353M           353.083M        5.72982M       8.07246M    480.651M              10.4492           7.67592       3.68944G          1.28297G                    27.8915                     2.66924           7.67592M    2.41133M   45.9988M       336.514M/s   5.76348M   8.07479M   480.781M          10.452    7.67109/s 3.68811G/s     1.28297G               27.8915                2.66852      1000k       7.67109M/s [BEST: throughput=  0.35 GB/s doc_throughput=     7 docs/s instructions=  1282973811 cycles=   480650627 branch_miss= 2413533 cache_miss= 5729817 cache_ref=   8072462 items=   1000000 avg_time= 130359572 ns]
large_random<simdjson_ondemand_unordered>/manual_time  135228956 ns    138626277 ns            5         2.37468M           340.337M        5.74564M       8.07491M    498.665M              10.8408           7.39883       3.68954G          1.28697G                    27.9784                     2.58084           7.39883M    2.37411M   45.9988M       324.397M/s   5.76762M   8.07551M   498.881M         10.8455    7.39487/s 3.68916G/s     1.28697G               27.9784                2.57972      1000k       7.39487M/s [BEST: throughput=  0.34 GB/s doc_throughput=     7 docs/s instructions=  1286973824 cycles=   498665459 branch_miss= 2374685 cache_miss= 5745636 cache_ref=   8074914 items=   1000000 avg_time= 135228956 ns]
large_random<yyjson>/manual_time                       127530214 ns    130948842 ns            5         662.984k           360.846M        5.84696M       8.95638M    350.834M              7.62703           7.84468       2.75218G           944.15M                    20.5255                     2.69116           7.84468M    662.643k   45.9988M        343.98M/s   5.84617M   8.95914M   350.803M         7.62636    7.84128/s 2.75075G/s     944.149M               20.5255                2.69139      1000k       7.84128M/s [BEST: throughput=  0.36 GB/s doc_throughput=     7 docs/s instructions=   944149590 cycles=   350834164 branch_miss=  662984 cache_miss= 5846963 cache_ref=   8956382 items=   1000000 avg_time= 127530214 ns]
large_random<yyjson_insitu>/manual_time                109452479 ns    112873327 ns            6         660.985k           420.453M         5.0132M        7.6265M    318.222M              6.91805           9.14052       2.90871G          938.029M                    20.3925                     2.94772           9.14052M     663.42k   45.9988M       400.794M/s   5.00486M   7.63339M   318.419M         6.92233    9.13639/s  2.9092G/s     938.029M               20.3925                 2.9459      1000k       9.13639M/s [BEST: throughput=  0.42 GB/s doc_throughput=     9 docs/s instructions=   938028830 cycles=   318221634 branch_miss=  660985 cache_miss= 5013199 cache_ref=   7626496 items=   1000000 avg_time= 109452479 ns]
large_random<rapidjson>/manual_time                    170895565 ns    174319310 ns            4         598.545k           281.297M        6.98888M       10.6423M    545.424M              11.8574           6.11532       3.33544G          1.65714G                    36.0258                     3.03826           6.11532M    599.027k   45.9988M       256.694M/s   6.42199M   9.88938M   551.713M         11.9941    5.85153/s 3.22836G/s     1.65715G                36.026                3.00365      1000k       5.85153M/s [BEST: throughput=  0.28 GB/s doc_throughput=     6 docs/s instructions=  1657141466 cycles=   545423652 branch_miss=  598545 cache_miss= 6988885 cache_ref=  10642310 items=   1000000 avg_time= 170895564 ns]
large_random<rapidjson_lossless>/manual_time           199651495 ns    203068685 ns            4         586.674k            238.89M        6.98839M        10.653M    652.386M              14.1827           5.19341       3.38811G          2.00811G                    43.6557                      3.0781           5.19341M    587.199k   45.9988M       219.722M/s    6.4147M   9.89688M   657.622M         14.2965    5.00873/s 3.29385G/s     2.00812G                43.656                3.05361      1000k       5.00873M/s [BEST: throughput=  0.24 GB/s doc_throughput=     5 docs/s instructions=  2008110857 cycles=   652385734 branch_miss=  586674 cache_miss= 6988388 cache_ref=  10652953 items=   1000000 avg_time= 199651495 ns]
large_random<rapidjson_insitu>/manual_time             158243885 ns    161658914 ns            5         629.716k           305.645M        8.07493M       12.1878M    497.357M              10.8124           6.64463       3.30475G          1.49214G                    32.4387                     3.00014           6.64463M    633.339k   45.9988M       277.217M/s   7.49003M   11.3898M   503.549M          10.947    6.31936/s 3.18211G/s     1.49215G               32.4389                2.96326      1000k       6.31936M/s [BEST: throughput=  0.31 GB/s doc_throughput=     6 docs/s instructions=  1492138957 cycles=   497357040 branch_miss=  629716 cache_miss= 8074929 cache_ref=  12187778 items=   1000000 avg_time= 158243884 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                        84152824 ns     94479849 ns            8         461.368k           1.63446G        15.6389M       22.0241M     309.89M              2.25695           11.9039        3.6889G          945.501M                    6.88614                     3.05108           6.24107M    461.597k   137.305M       1.51956G/s   15.6907M    21.985M   310.407M         2.26071    11.8831/s 3.68861G/s     945.501M               6.88614                3.04601   524.288k       6.23019M/s [BEST: throughput=  1.63 GB/s doc_throughput=    11 docs/s instructions=   945501380 cycles=   309890491 branch_miss=  461368 cache_miss=15638883 cache_ref=  22024134 items=    524288 avg_time=  84152823 ns]
kostya<simdjson_ondemand>/manual_time                  301606976 ns    311952945 ns            2         3.31729M           455.398M        10.3525M       14.1136M    1.11237G              8.10144           3.31669       3.68938G           2.8802G                    20.9767                     2.58925            1.7389M    3.31779M   137.305M       434.155M/s   10.3548M   14.1142M   1.11278G         8.10444    3.31557/s  3.6895G/s      2.8802G               20.9767                2.58829   524.288k       1.73832M/s [BEST: throughput=  0.46 GB/s doc_throughput=     3 docs/s instructions=  2880202946 cycles=  1112367601 branch_miss= 3317285 cache_miss=10352514 cache_ref=  14113647 items=    524288 avg_time= 301606975 ns]
kostya<yyjson>/manual_time                             200815674 ns    211192318 ns            3         436.327k           684.891M        11.3061M       16.0622M    542.126M              3.94833            4.9881       2.70417G          984.045M                    7.16686                     1.81516            2.6152M    426.132k   137.305M       652.062M/s   11.3263M   16.0455M   542.596M         3.95175    4.97969/s 2.70196G/s     984.045M               7.16686                1.81359   524.288k       2.61079M/s [BEST: throughput=  0.68 GB/s doc_throughput=     4 docs/s instructions=   984045125 cycles=   542125591 branch_miss=  436327 cache_miss=11306100 cache_ref=  16062224 items=    524288 avg_time= 200815673 ns]
kostya<yyjson_insitu>/manual_time                      146296504 ns    156662076 ns            5         413.273k           938.798M        8.80355M       12.1441M    444.873M              3.24003           6.83732       3.04174G          965.776M                     7.0338                      2.1709           3.58473M    416.684k   137.305M       895.061M/s   8.80504M    12.166M   444.894M         3.24019    6.83543/s 3.04105G/s     965.776M                7.0338                 2.1708   524.288k       3.58374M/s [BEST: throughput=  0.94 GB/s doc_throughput=     6 docs/s instructions=   965775558 cycles=   444872578 branch_miss=  413273 cache_miss= 8803552 cache_ref=  12144124 items=    524288 avg_time= 146296504 ns]
kostya<rapidjson>/manual_time                          244487297 ns    254850088 ns            3         968.764k           569.342M        8.16112M       11.8753M    808.372M              5.88742           4.14655       3.35196G          2.29716G                    16.7303                     2.84171           2.17399M    969.538k   137.305M       535.587M/s   7.85276M   11.5735M   811.236M         5.90828    4.09019/s 3.31811G/s     2.29716G               16.7303                2.83168   524.288k       2.14444M/s [BEST: throughput=  0.57 GB/s doc_throughput=     4 docs/s instructions=  2297155861 cycles=   808372386 branch_miss=  968764 cache_miss= 8161124 cache_ref=  11875262 items=    524288 avg_time= 244487297 ns]
kostya<rapidjson_lossless>/manual_time                 260498245 ns    270863942 ns            3         951.334k           534.089M        8.15621M       12.0239M    866.825M              6.31314            3.8898       3.37178G          2.49743G                    18.1889                     2.88112           2.03938M    951.481k   137.305M       502.668M/s   7.87113M    11.609M   869.994M         6.33622     3.8388/s 3.33973G/s     2.49743G               18.1889                2.87063   524.288k       2.01264M/s [BEST: throughput=  0.53 GB/s doc_throughput=     3 docs/s instructions=  2497426005 cycles=   866825162 branch_miss=  951334 cache_miss= 8156206 cache_ref=  12023935 items=    524288 avg_time= 260498244 ns]
kostya<rapidjson_insitu>/manual_time                   226118572 ns    236492652 ns            3         1026.92k           616.047M        11.2501M       15.6617M    741.172M                5.398            4.4867       3.32542G          2.03227G                    14.8012                     2.74197           2.35233M    1031.01k   137.305M       579.095M/s   10.9579M   15.2938M   743.684M         5.41629    4.42246/s 3.28891G/s     2.03228G               14.8012                2.73272   524.288k       2.31864M/s [BEST: throughput=  0.62 GB/s doc_throughput=     4 docs/s instructions=  2032274429 cycles=   741171780 branch_miss= 1026918 cache_miss=11250058 cache_ref=  15661679 items=    524288 avg_time= 226118572 ns]
distinct_user_id<simdjson_dom>/manual_time                258613 ns       289116 ns         2704           3.962k           2.45814G               0        88.315k    948.637k              1.50216          3.89244k       3.69252G          2.90343M                    4.59756                     3.06063           447.631k    4.12265k   631.515k       2.27422G/s    2.54216    88.382k   954.478k         1.51141   3.86678k/s 3.69075G/s     2.90343M               4.59756                 3.0419        115        444.68k/s [BEST: throughput=  2.46 GB/s doc_throughput=  3892 docs/s instructions=     2903428 cycles=      948637 branch_miss=    3962 cache_miss=       0 cache_ref=     88315 items=       115 avg_time=    258613 ns]
distinct_user_id<simdjson_ondemand>/manual_time          1104708 ns      1134853 ns          633          31.458k           574.422M               0        54.101k    4.05869M              6.42692           909.593       3.69176G          10.3431M                    16.3782                     2.54838           104.603k    31.7744k   631.515k       545.175M/s    4.98894   54.1831k   4.07613M         6.45453    905.216/s 3.68978G/s     10.3431M               16.3782                2.53748        115         104.1k/s [BEST: throughput=  0.57 GB/s doc_throughput=   909 docs/s instructions=    10343109 cycles=     4058694 branch_miss=   31458 cache_miss=       0 cache_ref=     54101 items=       115 avg_time=   1104708 ns]
distinct_user_id<yyjson>/manual_time                      651730 ns       685734 ns         1268           9.838k           1.69238G             621        73.639k    1.37789M              2.18188          2.67987k       3.69257G          2.87489M                    4.55237                     2.08644           308.185k    7.53756k   631.515k       924.093M/s    1078.31   47.9819k   1.59897M         2.53196   1.53438k/s 2.45342G/s     2.87558M               4.55346                1.79839        115       176.453k/s [BEST: throughput=  1.69 GB/s doc_throughput=  2679 docs/s instructions=     2874892 cycles=     1377891 branch_miss=    9838 cache_miss=     621 cache_ref=     73639 items=       115 avg_time=    651730 ns]
distinct_user_id<yyjson_insitu>/manual_time               450583 ns       483296 ns         1553           6.948k           1.91833G             314        43.956k    1.21229M              1.91965          3.03766k       3.68251G          2.87478M                    4.55219                     2.37137           349.331k    7.44581k   631.515k       1.30529G/s    112.503   30.5604k   1.33032M         2.10655   2.21935k/s 2.95244G/s     2.87504M               4.55261                2.16117        115       255.225k/s [BEST: throughput=  1.92 GB/s doc_throughput=  3037 docs/s instructions=     2874778 cycles=     1212286 branch_miss=    6948 cache_miss=     314 cache_ref=     43956 items=       115 avg_time=    450583 ns]
distinct_user_id<rapidjson>/manual_time                  1620291 ns      1650841 ns          434          26.493k           440.015M          9.048k        52.486k    5.29824M              8.38973           696.761       3.69161G          13.3496M                    21.1391                     2.51963           80.1275k    26.6187k   631.515k       371.698M/s   1.93152k   34.5487k   5.44879M         8.62812    617.173/s 3.36285G/s     13.3502M                 21.14                2.45013        115       70.9749k/s [BEST: throughput=  0.44 GB/s doc_throughput=   696 docs/s instructions=    13349628 cycles=     5298241 branch_miss=   26493 cache_miss=    9048 cache_ref=     52486 items=       115 avg_time=   1620291 ns]
distinct_user_id<rapidjson_insitu>/manual_time           1166530 ns      1196505 ns          628          24.957k           591.282M          3.121k        43.077k    3.94289M              6.24355           936.291        3.6917G           9.7055M                    15.3686                     2.46152           107.673k    25.1445k   631.515k       516.283M/s    2.0945k   35.0976k   4.02245M         6.36952    857.243/s 3.44822G/s     9.70574M                15.369                2.41289        115        98.583k/s [BEST: throughput=  0.59 GB/s doc_throughput=   936 docs/s instructions=     9705505 cycles=     3942894 branch_miss=   24957 cache_miss=    3121 cache_ref=     43077 items=       115 avg_time=   1166530 ns]
find_tweet<simdjson_dom>/manual_time                      247747 ns       276603 ns         2828           3.694k            2.5677G               0        78.263k    908.217k              1.43816          4.06593k       3.69275G          2.82239M                    4.46923                     3.10761           4.06593k    3.86971k   631.515k       2.37397G/s    2.44095   78.2997k   914.417k         1.44797   4.03638k/s 3.69093G/s     2.82239M               4.46923                3.08654          1       4.03638k/s [BEST: throughput=  2.57 GB/s doc_throughput=  4065 docs/s instructions=     2822388 cycles=      908217 branch_miss=    3694 cache_miss=       0 cache_ref=     78263 items=         1 avg_time=    247747 ns]
find_tweet<simdjson_ondemand>/manual_time                1034990 ns      1063322 ns          676          30.833k           612.957M               0        31.272k    3.80339M              6.02265           970.614       3.69163G          9.73047M                    15.4081                     2.55836            970.614    31.1018k   631.515k       581.899M/s    1.23225   31.2867k   3.81896M          6.0473    966.193/s 3.68985G/s     9.73047M               15.4081                2.54794          1        966.193/s [BEST: throughput=  0.61 GB/s doc_throughput=   970 docs/s instructions=     9730469 cycles=     3803394 branch_miss=   30833 cache_miss=       0 cache_ref=     31272 items=         1 avg_time=   1034990 ns]
find_tweet<yyjson>/manual_time                            640258 ns       670883 ns         1120           9.598k           1.74054G             263          64.1k    1.33972M              2.12144          2.75613k       3.69244G          2.82413M                      4.472                       2.108           2.75613k    7.25837k   631.515k       940.651M/s     1023.2   39.6656k   1.56247M         2.47417   1.56187k/s 2.44038G/s     2.82461M               4.47276                1.80778          1       1.56187k/s [BEST: throughput=  1.74 GB/s doc_throughput=  2756 docs/s instructions=     2824133 cycles=     1339722 branch_miss=    9598 cache_miss=     263 cache_ref=     64100 items=         1 avg_time=    640258 ns]
find_tweet<yyjson_insitu>/manual_time                     439582 ns       469496 ns         1593           6.852k           1.96362G             419        35.806k    1.18421M               1.8752          3.10938k       3.68217G          2.82381M                    4.47149                     2.38455           3.10938k    7.12623k   631.515k       1.33796G/s    15.6077   22.2807k   1.29059M         2.04364   2.27489k/s 2.93595G/s     2.82407M                4.4719                 2.1882          1       2.27489k/s [BEST: throughput=  1.96 GB/s doc_throughput=  3109 docs/s instructions=     2823812 cycles=     1184214 branch_miss=    6852 cache_miss=     419 cache_ref=     35806 items=         1 avg_time=    439581 ns]
find_tweet<rapidjson>/manual_time                        1609754 ns      1638472 ns          436          26.577k           443.703M             224        44.854k    5.25415M              8.31991             702.6       3.69157G          13.2811M                    21.0305                     2.52773              702.6    26.5816k   631.515k       374.131M/s   1.57437k   27.6617k   5.40896M         8.56505    621.213/s 3.36011G/s     13.2818M               21.0317                2.45553          1        621.213/s [BEST: throughput=  0.44 GB/s doc_throughput=   702 docs/s instructions=    13281070 cycles=     5254146 branch_miss=   26577 cache_miss=     224 cache_ref=     44854 items=         1 avg_time=   1609754 ns]
find_tweet<rapidjson_insitu>/manual_time                 1158100 ns      1187593 ns          635          24.703k           595.326M          8.144k        35.417k    3.91604M              6.20103           942.695       3.69163G          9.64738M                    15.2766                     2.46355            942.695    25.0717k   631.515k       520.041M/s   1.88032k   26.4453k   3.99152M         6.32055    863.483/s 3.44661G/s     9.64793M               15.2774                2.41711          1        863.483/s [BEST: throughput=  0.60 GB/s doc_throughput=   942 docs/s instructions=     9647382 cycles=     3916044 branch_miss=   24703 cache_miss=    8144 cache_ref=     35417 items=         1 avg_time=   1158100 ns]
