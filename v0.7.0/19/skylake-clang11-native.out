run_benchmark: v0.8.0~19 /home/jkeiser/simdjson_benchmark_results/v0.7.0/19/skylake-clang11-native.json -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native
git reset --hard v0.8.0~19
HEAD is now at 920f5355 Reamalgamate
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- git Version: v0.2.1-920f5355
-- Version: 0.2.1
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES -- failed to compile
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 11
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
make[3]: Nothing to be done for '_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build'.
[ 72%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
make[3]: Nothing to be done for 'jsonexamples/generated/CMakeFiles/generated-data.dir/build'.
[ 72%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/clang++-11  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/src  -march=native -O3 -DNDEBUG -fPIC   -pthread -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/clang++-11 -fPIC -march=native -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.6 -o ../libsimdjson.so.6.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.6.0.0 ../libsimdjson.so.6 ../libsimdjson.so
[ 81%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
make[3]: Nothing to be done for 'dependencies/CMakeFiles/yyjson.dir/build'.
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/clang++-11  -DRAPIDJSON_HAS_STDSTRING -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_COMPETITION_RAPIDJSON -DSIMDJSON_COMPETITION_YYJSON -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/rapidjson/include  -march=native -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/clang++-11  -march=native -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.6.0.0 ../_deps/google_benchmarks/src/libbenchmark.a ../dependencies/libyyjson.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/19/skylake-clang11-native.json --benchmark_out_format=json
2021-01-25 01:58:11
Running benchmark/bench_ondemand
Run on (4 X 4000 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 256 KiB (x4)
  L3 Unified 8192 KiB (x1)
Load Average: 1.19, 1.00, 0.73
simdjson::dom implementation:      haswell
simdjson::ondemand implementation: haswell
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                  272255 ns       300569 ns         2563           3.738k           2.33202G               0        87.663k    1000.01k              1.58351          3.69273k       3.69276G          2.99337M                    4.73999                     2.99335           369.273k     3.7964k   631.515k       2.16027G/s    8.35817   87.7464k   1004.79k         1.59107   3.67302k/s  3.6906G/s     2.99337M               4.73999                2.97912        100       367.302k/s [BEST: throughput=  2.33 GB/s doc_throughput=  3692 docs/s instructions=     2993372 cycles=     1000008 branch_miss=    3738 cache_miss=       0 cache_ref=     87663 items=       100 avg_time=    272255 ns]
partial_tweets<simdjson_ondemand>/manual_time             180450 ns       208412 ns         3888           2.008k           3.53681G               0        55.352k    659.444k              1.04423          5.60052k       3.69323G          1.94495M                    3.07982                     2.94938           560.052k    2.23083k   631.515k       3.25932G/s  0.0365226   55.3184k   666.074k         1.05472   5.54171k/s 3.69119G/s     1.94495M               3.07982                2.92002        100       554.171k/s [BEST: throughput=  3.54 GB/s doc_throughput=  5600 docs/s instructions=     1944950 cycles=      659444 branch_miss=    2008 cache_miss=       0 cache_ref=     55352 items=       100 avg_time=    180449 ns]
partial_tweets<yyjson>/manual_time                        636324 ns       666546 ns         1098           9.502k           1.83386G             179        73.711k    1.27169M              2.01371          2.90391k       3.69288G          2.91961M                    4.62318                     2.29585           290.391k    7.55539k   631.515k       946.468M/s    996.552   49.2672k   1.49856M         2.37296   1.57153k/s 2.35502G/s     2.92009M               4.62394                 1.9486        100       157.153k/s [BEST: throughput=  1.83 GB/s doc_throughput=  2903 docs/s instructions=     2919608 cycles=     1271691 branch_miss=    9502 cache_miss=     179 cache_ref=     73711 items=       100 avg_time=    636323 ns]
partial_tweets<yyjson_insitu>/manual_time                 425891 ns       454850 ns         1644           7.516k           2.04572G              56        45.419k    1.13985M              1.80495          3.23938k       3.69241G          2.91929M                    4.62267                     2.56111           323.938k    7.39177k   631.515k       1.38097G/s    145.749   31.7538k   1.22611M         1.94154   2.34802k/s 2.87893G/s     2.91955M               4.62309                2.38115        100       234.802k/s [BEST: throughput=  2.05 GB/s doc_throughput=  3239 docs/s instructions=     2919287 cycles=     1139852 branch_miss=    7516 cache_miss=      56 cache_ref=     45419 items=       100 avg_time=    425890 ns]
partial_tweets<rapidjson>/manual_time                    2191245 ns      2220135 ns          319          30.338k           317.468M             211        50.771k    7.34323M               11.628           502.708        3.6915G          21.8948M                    34.6703                     2.98163           50.2708k    30.3278k   631.515k       274.848M/s    597.436   32.8346k   7.49534M         11.8688    456.361/s 3.42058G/s     21.8957M               34.6718                2.92125        100       45.6361k/s [BEST: throughput=  0.32 GB/s doc_throughput=   502 docs/s instructions=    21894801 cycles=     7343225 branch_miss=   30338 cache_miss=     211 cache_ref=     50771 items=       100 avg_time=   2191245 ns]
partial_tweets<rapidjson_insitu>/manual_time             1596458 ns      1625173 ns          440          25.448k           424.794M              23        42.947k    5.48797M              8.69016           672.659       3.69153G          13.3198M                    21.0919                      2.4271           67.2659k    25.3439k   631.515k       377.247M/s    280.298   34.0316k   5.54892M         8.78667    626.387/s 3.47577G/s     13.3204M               21.0928                2.40055        100       62.6387k/s [BEST: throughput=  0.42 GB/s doc_throughput=   672 docs/s instructions=    13319833 cycles=     5487967 branch_miss=   25448 cache_miss=      23 cache_ref=     42947 items=       100 avg_time=   1596458 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                  87582351 ns     90975639 ns            8         918.549k           525.798M        10.9695M       15.2205M    322.718M              7.01579           11.4307       3.68889G          1035.69M                    22.5155                     3.20926           11.4307M    919.887k   45.9988M       500.875M/s   11.0079M   15.2176M   323.074M         7.02354    11.4178/s 3.68881G/s     1035.69M               22.5155                3.20572      1000k       11.4178M/s [BEST: throughput=  0.53 GB/s doc_throughput=    11 docs/s instructions=  1035686042 cycles=   322717737 branch_miss=  918549 cache_miss=10969513 cache_ref=  15220531 items=   1000000 avg_time=  87582350 ns]
large_random<simdjson_ondemand>/manual_time             66100529 ns     69474512 ns           11         920.132k           696.371M        5.67452M        7.8956M    243.662M              5.29714           15.1389       3.68878G          669.142M                     14.547                     2.74619           15.1389M    920.364k   45.9988M       663.654M/s   5.71709M   7.89493M   243.836M         5.30093    15.1285/s 3.68887G/s     669.142M                14.547                2.74423      1000k       15.1285M/s [BEST: throughput=  0.70 GB/s doc_throughput=    15 docs/s instructions=   669141950 cycles=   243661844 branch_miss=  920132 cache_miss= 5674521 cache_ref=   7895599 items=   1000000 avg_time=  66100528 ns]
large_random<simdjson_ondemand_unordered>/manual_time   66069935 ns     69444225 ns           11         897.731k           696.914M        5.70848M       7.89478M    243.493M              5.29346           15.1507       3.68908G          670.142M                    14.5687                     2.75221           15.1507M    898.581k   45.9988M       663.961M/s   5.71796M   7.89731M    243.73M         5.29861    15.1355/s 3.68897G/s     670.142M               14.5687                2.74953      1000k       15.1355M/s [BEST: throughput=  0.70 GB/s doc_throughput=    15 docs/s instructions=   670141947 cycles=   243492638 branch_miss=  897731 cache_miss= 5708484 cache_ref=   7894780 items=   1000000 avg_time=  66069934 ns]
large_random<yyjson>/manual_time                       115701860 ns    119126600 ns            6         678.687k           397.652M        5.76835M       8.92454M     306.89M              6.67169           8.64484       2.65301G          855.681M                    18.6023                     2.78824           8.64484M    679.361k   45.9988M       379.146M/s   5.77276M   8.92841M   307.002M         6.67413     8.6429/s 2.65339G/s     855.681M               18.6023                2.78722      1000k        8.6429M/s [BEST: throughput=  0.40 GB/s doc_throughput=     8 docs/s instructions=   855680954 cycles=   306889697 branch_miss=  678687 cache_miss= 5768355 cache_ref=   8924538 items=   1000000 avg_time= 115701860 ns]
large_random<yyjson_insitu>/manual_time                 97747306 ns    101196236 ns            7         674.602k           470.729M         4.8864M       7.56959M    275.241M              5.98366           10.2335       2.81668G           849.56M                    18.4692                      3.0866           10.2335M    676.598k   45.9988M       448.788M/s    4.8942M   7.58816M   275.296M         5.98486    10.2305/s 2.81641G/s      849.56M               18.4692                3.08598      1000k       10.2305M/s [BEST: throughput=  0.47 GB/s doc_throughput=    10 docs/s instructions=   849559978 cycles=   275241199 branch_miss=  674602 cache_miss= 4886401 cache_ref=   7569587 items=   1000000 avg_time=  97747305 ns]
large_random<rapidjson>/manual_time                    216648137 ns    220072181 ns            3         633.151k           218.308M        7.06376M       10.6876M    719.421M                15.64           4.74595       3.41434G          2.01014G                    43.6999                     2.79411           4.74595M    637.277k   45.9988M       202.484M/s   6.54841M   10.0423M   722.696M         15.7112    4.61578/s  3.3358G/s     2.01015G               43.7001                2.78146      1000k       4.61578M/s [BEST: throughput=  0.22 GB/s doc_throughput=     4 docs/s instructions=  2010142757 cycles=   719421350 branch_miss=  633151 cache_miss= 7063762 cache_ref=  10687617 items=   1000000 avg_time= 216648136 ns]
large_random<rapidjson_lossless>/manual_time           246255778 ns    249689763 ns            3         590.354k           191.281M        7.06349M        10.693M     829.22M               18.027            4.1584       3.44823G          2.47511G                    53.8082                     2.98486            4.1584M    591.272k   45.9988M       178.139M/s    6.5431M   10.0524M   831.909M         18.0855    4.06082/s 3.37823G/s     2.47512G               53.8084                2.97523      1000k       4.06082M/s [BEST: throughput=  0.19 GB/s doc_throughput=     4 docs/s instructions=  2475109890 cycles=   829220345 branch_miss=  590354 cache_miss= 7063493 cache_ref=  10692967 items=   1000000 avg_time= 246255778 ns]
large_random<rapidjson_insitu>/manual_time             235619169 ns    239037780 ns            3         589.119k           199.571M        8.15274M       12.2577M    792.389M              17.2263           4.33862       3.43787G          1.72014G                    37.3954                     2.17083           4.33862M    587.211k   45.9988M       186.181M/s   7.67476M   11.6236M   792.664M         17.2323    4.24414/s 3.36418G/s     1.72015G               37.3956                2.17009      1000k       4.24414M/s [BEST: throughput=  0.20 GB/s doc_throughput=     4 docs/s instructions=  1720142620 cycles=   792388763 branch_miss=  589119 cache_miss= 8152738 cache_ref=  12257716 items=   1000000 avg_time= 235619169 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                        93491265 ns    103842000 ns            7         1042.89k           1.47125G        15.9421M       22.2812M    344.223M                2.507           10.7152       3.68843G          985.796M                    7.17961                     2.86383           5.61786M    1043.99k   137.305M       1.36778G/s   15.9395M   22.1973M   344.842M          2.5115    10.6962/s 3.68849G/s     985.796M               7.17961                2.85869   524.288k       5.60788M/s [BEST: throughput=  1.47 GB/s doc_throughput=    10 docs/s instructions=   985795976 cycles=   344223028 branch_miss= 1042887 cache_miss=15942072 cache_ref=  22281215 items=    524288 avg_time=  93491265 ns]
kostya<simdjson_ondemand>/manual_time                   63548821 ns     73874152 ns           11         488.392k           2.16346G        10.1195M       13.8175M    234.117M              1.70509           15.7566       3.68889G          654.158M                    4.76427                     2.79415           8.26098M    489.206k   137.305M       2.01224G/s    10.152M    13.907M   234.406M         1.70719    15.7359/s  3.6886G/s     654.158M               4.76427                 2.7907   524.288k       8.25016M/s [BEST: throughput=  2.16 GB/s doc_throughput=    15 docs/s instructions=   654158322 cycles=   234117356 branch_miss=  488392 cache_miss=10119457 cache_ref=  13817509 items=    524288 avg_time=  63548820 ns]
kostya<yyjson>/manual_time                             173453830 ns    183830861 ns            4         419.468k           792.456M        11.3217M        16.432M     442.06M              3.21955            5.7715       2.55135G          974.185M                    7.09504                     2.20374           3.02593M    418.764k   137.305M       754.923M/s   11.3419M   16.3991M   442.686M         3.22411    5.76522/s 2.55218G/s     974.185M               7.09504                2.20062   524.288k       3.02264M/s [BEST: throughput=  0.79 GB/s doc_throughput=     5 docs/s instructions=   974184688 cycles=   442060168 branch_miss=  419468 cache_miss=11321657 cache_ref=  16431973 items=    524288 avg_time= 173453830 ns]
kostya<yyjson_insitu>/manual_time                      120044561 ns    130427218 ns            6         419.021k            1.1445G        8.70555M       12.3856M    348.255M              2.53636           8.33545       2.90286G          955.915M                    6.96198                     2.74487           4.37017M    419.423k   137.305M        1090.8M/s    8.7081M   12.3906M   348.468M         2.53791    8.33024/s 2.90282G/s     955.915M               6.96198                2.74319   524.288k       4.36744M/s [BEST: throughput=  1.14 GB/s doc_throughput=     8 docs/s instructions=   955914809 cycles=   348254874 branch_miss=  419021 cache_miss= 8705553 cache_ref=  12385553 items=    524288 avg_time= 120044561 ns]
kostya<rapidjson>/manual_time                          270536499 ns    280919529 ns            3         968.334k           513.516M        8.31678M       12.0649M    905.136M              6.59215           3.73996       3.38517G          2.73767G                    19.9386                      3.0246           1.96082M    968.208k   137.305M       484.017M/s   8.01756M   11.7547M   907.281M         6.60778    3.69636/s 3.35364G/s     2.73767G               19.9386                3.01745   524.288k       1.93796M/s [BEST: throughput=  0.51 GB/s doc_throughput=     3 docs/s instructions=  2737672085 cycles=   905135772 branch_miss=  968334 cache_miss= 8316777 cache_ref=  12064892 items=    524288 avg_time= 270536498 ns]
kostya<rapidjson_lossless>/manual_time                 290635109 ns    301013108 ns            2         966.991k           476.421M        8.31381M       12.0876M    981.678M              7.14961            3.4698       3.40623G          3.00662G                    21.8974                     3.06274           1.81918M    967.636k   137.305M       450.545M/s   8.13153M   11.8192M   983.504M         7.16292    3.44074/s 3.38398G/s     3.00662G               21.8974                3.05705   524.288k       1.80394M/s [BEST: throughput=  0.48 GB/s doc_throughput=     3 docs/s instructions=  3006622534 cycles=   981677758 branch_miss=  966991 cache_miss= 8313814 cache_ref=  12087583 items=    524288 avg_time= 290635109 ns]
kostya<rapidjson_insitu>/manual_time                   271157138 ns    281509655 ns            3         993.217k           512.143M        12.0052M       15.9766M    907.814M              6.61166           3.72996       3.38611G          2.21152G                    16.1067                      2.4361           1.95558M    991.717k   137.305M       482.909M/s   11.7216M   15.6687M   909.525M         6.62412     3.6879/s 3.35423G/s     2.21153G               16.1067                2.43152   524.288k       1.93352M/s [BEST: throughput=  0.51 GB/s doc_throughput=     3 docs/s instructions=  2211523797 cycles=   907814385 branch_miss=  993217 cache_miss=12005228 cache_ref=  15976586 items=    524288 avg_time= 271157138 ns]
distinct_user_id<simdjson_dom>/manual_time                268527 ns       298595 ns         2606           3.813k           2.36629G               0          88.3k    985.487k              1.56051            3.747k       3.69262G          2.92855M                    4.63734                     2.97168           430.905k    3.96377k   631.515k       2.19026G/s    2.25863   88.2877k   991.015k         1.56927   3.72401k/s 3.69055G/s     2.92855M               4.63734                 2.9551        115       428.262k/s [BEST: throughput=  2.37 GB/s doc_throughput=  3747 docs/s instructions=     2928548 cycles=      985487 branch_miss=    3813 cache_miss=       0 cache_ref=     88300 items=       115 avg_time=    268527 ns]
distinct_user_id<simdjson_ondemand>/manual_time           154032 ns       183346 ns         4542           1.822k           4.13699G               0        52.661k    563.811k             0.892791          6.55089k       3.69346G          1.89446M                    2.99986                     3.36009           753.352k    1.95961k   631.515k       3.81833G/s    1.07089   52.6589k   568.576k        0.900336   6.49216k/s 3.69129G/s     1.89446M               2.99986                3.33193        115       746.599k/s [BEST: throughput=  4.14 GB/s doc_throughput=  6550 docs/s instructions=     1894455 cycles=      563811 branch_miss=    1822 cache_miss=       0 cache_ref=     52661 items=       115 avg_time=    154031 ns]
distinct_user_id<yyjson>/manual_time                      620499 ns       653686 ns         1340          10.078k           1.82885G             665        72.288k    1.27533M              2.01948          2.89597k       3.69332G           2.8777M                    4.55683                     2.25644           333.037k     7.6669k   631.515k       970.605M/s   1.10578k   47.9489k   1.48526M          2.3519   1.61161k/s 2.39366G/s     2.87819M               4.55759                1.93783        115       185.335k/s [BEST: throughput=  1.83 GB/s doc_throughput=  2895 docs/s instructions=     2877705 cycles=     1275330 branch_miss=   10078 cache_miss=     665 cache_ref=     72288 items=       115 avg_time=    620498 ns]
distinct_user_id<yyjson_insitu>/manual_time               417934 ns       450220 ns         1674            6.98k           2.09606G             360        44.124k    1.10901M              1.75611          3.31911k       3.68091G          2.87759M                    4.55665                     2.59474           381.697k    7.43765k   631.515k       1.40727G/s    79.1762   30.2971k   1.21015M         1.91626   2.39272k/s 2.89555G/s     2.87785M               4.55706                 2.3781        115       275.163k/s [BEST: throughput=  2.10 GB/s doc_throughput=  3319 docs/s instructions=     2877592 cycles=     1109008 branch_miss=    6980 cache_miss=     360 cache_ref=     44124 items=       115 avg_time=    417933 ns]
distinct_user_id<rapidjson>/manual_time                  2165559 ns      2195715 ns          323          30.325k           318.213M             200        52.255k    7.32608M              11.6008           503.889       3.69153G          21.8228M                    34.5563                     2.97878           57.9472k    30.2976k   631.515k       278.108M/s   2.50794k   35.4034k    7.4702M          11.829    461.775/s 3.44955G/s     21.8236M               34.5576                2.92143        115       53.1041k/s [BEST: throughput=  0.32 GB/s doc_throughput=   503 docs/s instructions=    21822799 cycles=     7326076 branch_miss=   30325 cache_miss=     200 cache_ref=     52255 items=       115 avg_time=   2165558 ns]
distinct_user_id<rapidjson_insitu>/manual_time           1588097 ns      1618082 ns          433          24.933k           427.158M          2.639k        43.324k    5.45781M               8.6424           676.402       3.69167G          13.2532M                    20.9864                      2.4283           77.7862k    28.5961k   631.515k       379.234M/s   3.07314k   36.3927k   5.60216M         8.87099    629.685/s 3.52759G/s     13.2534M               20.9867                2.36577        115       72.4137k/s [BEST: throughput=  0.43 GB/s doc_throughput=   676 docs/s instructions=    13253214 cycles=     5457806 branch_miss=   24933 cache_miss=    2639 cache_ref=     43324 items=       115 avg_time=   1588096 ns]
find_tweet<simdjson_dom>/manual_time                      256739 ns       285445 ns         2727           3.532k           2.47336G               0        78.202k    942.788k               1.4929          3.91655k       3.69247G          2.84337M                    4.50246                     3.01592           3.91655k    3.64458k   631.515k       2.29082G/s    6.88155   78.2582k   947.469k         1.50031     3.895k/s 3.69039G/s     2.84337M               4.50246                3.00102          1         3.895k/s [BEST: throughput=  2.47 GB/s doc_throughput=  3916 docs/s instructions=     2843374 cycles=      942788 branch_miss=    3532 cache_miss=       0 cache_ref=     78202 items=         1 avg_time=    256739 ns]
find_tweet<simdjson_ondemand>/manual_time                 112604 ns       140630 ns         6209              987           5.62908G               0        30.273k    414.336k             0.656098          8.91361k       3.69323G          1.38745M                    2.19702                     3.34861           8.91361k     1023.76   631.515k        5.2231G/s   0.595587   30.2923k   415.736k        0.658316   8.88064k/s 3.69201G/s     1.38745M               2.19702                3.33733          1       8.88064k/s [BEST: throughput=  5.63 GB/s doc_throughput=  8913 docs/s instructions=     1387450 cycles=      414336 branch_miss=     987 cache_miss=       0 cache_ref=     30273 items=         1 avg_time=    112604 ns]
find_tweet<yyjson>/manual_time                            608549 ns       638932 ns         1248           9.141k           1.91852G              90        65.015k    1.21544M              1.92464          3.03797k       3.69248G          2.81715M                    4.46093                      2.3178           3.03797k    7.36974k   631.515k       989.665M/s    1010.65   39.3369k   1.44547M         2.28889   1.64325k/s 2.37527G/s     2.81763M                4.4617                1.94929          1       1.64325k/s [BEST: throughput=  1.92 GB/s doc_throughput=  3037 docs/s instructions=     2817147 cycles=     1215441 branch_miss=    9141 cache_miss=      90 cache_ref=     65015 items=         1 avg_time=    608548 ns]
find_tweet<yyjson_insitu>/manual_time                     407469 ns       437386 ns         1716           6.827k           2.16237G             540        35.904k    1075.12k              1.70244          3.42409k       3.68131G          2.81683M                    4.46044                     2.62002           3.42409k    7.21798k   631.515k       1.44341G/s    15.1614   21.8391k    1.1725M         1.85664   2.45417k/s 2.87752G/s      2.8171M               4.46085                2.40264          1       2.45417k/s [BEST: throughput=  2.16 GB/s doc_throughput=  3424 docs/s instructions=     2816832 cycles=     1075119 branch_miss=    6827 cache_miss=     540 cache_ref=     35904 items=         1 avg_time=    407469 ns]
find_tweet<rapidjson>/manual_time                        2207679 ns      2236389 ns          325          29.802k            311.46M             197        44.693k    7.48496M              11.8524           493.196       3.69155G          21.7388M                    34.4232                     2.90433            493.196    30.2284k   631.515k       272.802M/s   2.11097k   27.5126k   7.62495M         12.0741    452.964/s 3.45383G/s     21.7398M               34.4248                2.85114          1        452.964/s [BEST: throughput=  0.31 GB/s doc_throughput=   493 docs/s instructions=    21738767 cycles=     7484963 branch_miss=   29802 cache_miss=     197 cache_ref=     44693 items=         1 avg_time=   2207678 ns]
find_tweet<rapidjson_insitu>/manual_time                 1594569 ns      1624167 ns          426          24.909k           428.033M          12.96k        36.264k    5.44647M              8.62445           677.787       3.69155G          13.1749M                    20.8624                     2.41899            677.787    31.3366k   631.515k       377.694M/s   2.97225k   27.3752k   5.63077M         8.91628    627.129/s 3.53121G/s     13.1752M               20.8629                2.33987          1        627.129/s [BEST: throughput=  0.43 GB/s doc_throughput=   677 docs/s instructions=    13174939 cycles=     5446471 branch_miss=   24909 cache_miss=   12960 cache_ref=     36264 items=         1 avg_time=   1594569 ns]
