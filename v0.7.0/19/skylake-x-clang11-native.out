run_benchmark: v0.8.0~19 /home/jkeiser/simdjson_benchmark_results/v0.7.0/19/skylake-x-clang11-native.json -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native
git reset --hard v0.8.0~19
HEAD is now at 920f5355 Reamalgamate
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- git Version: v0.2.1-920f5355
-- Version: 0.2.1
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES -- failed to compile
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 11
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
make[3]: Nothing to be done for '_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build'.
[ 72%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
make[3]: Nothing to be done for 'jsonexamples/generated/CMakeFiles/generated-data.dir/build'.
[ 72%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/clang++-11  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/src  -march=native -O3 -DNDEBUG -fPIC   -pthread -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/clang++-11 -fPIC -march=native -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.6 -o ../libsimdjson.so.6.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.6.0.0 ../libsimdjson.so.6 ../libsimdjson.so
[ 81%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
make[3]: Nothing to be done for 'dependencies/CMakeFiles/yyjson.dir/build'.
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/clang++-11  -DRAPIDJSON_HAS_STDSTRING -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_COMPETITION_RAPIDJSON -DSIMDJSON_COMPETITION_YYJSON -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/rapidjson/include  -march=native -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/clang++-11  -march=native -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.6.0.0 ../_deps/google_benchmarks/src/libbenchmark.a ../dependencies/libyyjson.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/19/skylake-x-clang11-native.json --benchmark_out_format=json
2021-01-24 23:19:06
Running benchmark/bench_ondemand
Run on (4 X 3200 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 1024 KiB (x4)
  L3 Unified 8448 KiB (x1)
Load Average: 1.03, 0.93, 0.95
***WARNING*** CPU scaling is enabled, the benchmark real time measurements may be noisy and will incur extra overhead.
simdjson::dom implementation:      haswell
simdjson::ondemand implementation: haswell

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                  323905 ns       394476 ns         2165           3.633k           1.96331G               0        32.805k    1027.37k              1.62683          3.10888k       3.19397G          2.93219M                     4.6431                     2.85408           310.888k    3.82966k   631.515k       1.81579G/s   0.376905    32.942k   1033.38k         1.63636   3.08733k/s  3.1904G/s     2.93219M                4.6431                2.83746        100       308.733k/s [BEST: throughput=  1.96 GB/s doc_throughput=  3108 docs/s instructions=     2932189 cycles=     1027369 branch_miss=    3633 cache_miss=       0 cache_ref=     32805 items=       100 avg_time=    323904 ns]
partial_tweets<simdjson_ondemand>/manual_time             211644 ns       267784 ns         3304           2.212k           3.02288G               2        10.821k     667.48k              1.05695           4.7867k       3.19503G          1.87911M                    2.97556                     2.81523            478.67k    2.43579k   631.515k       2.77893G/s    2.02482   10.8423k   675.523k         1.06969   4.72492k/s 3.19179G/s     1.87911M               2.97556                2.78171        100       472.492k/s [BEST: throughput=  3.02 GB/s doc_throughput=  4786 docs/s instructions=     1879108 cycles=      667480 branch_miss=    2212 cache_miss=       2 cache_ref=     10821 items=       100 avg_time=    211643 ns]
partial_tweets<yyjson>/manual_time                        803618 ns       882989 ns          869           9.808k           1.40677G             170        28.361k    1.43378M              2.27038          2.22762k       3.19391G          2.91951M                    4.62303                     2.03624           222.762k    7.67249k   631.515k       749.435M/s    648.652    25.966k   1.59055M         2.51863   1.24437k/s 1.97924G/s        2.92M                4.6238                1.83584        100       124.437k/s [BEST: throughput=  1.41 GB/s doc_throughput=  2227 docs/s instructions=     2919511 cycles=     1433778 branch_miss=    9808 cache_miss=     170 cache_ref=     28361 items=       100 avg_time=    803617 ns]
partial_tweets<yyjson_insitu>/manual_time                 521994 ns       587879 ns         1355           6.769k           1.74121G          1.323k        14.562k    1.14986M              1.82079           2.7572k       3.17039G           2.9194M                    4.62286                     2.53893            275.72k    7.43577k   631.515k       1.12673G/s    109.218   11.9749k   1.26494M         2.00302   1.91573k/s 2.42328G/s     2.91967M               4.62327                2.30815        100       191.573k/s [BEST: throughput=  1.74 GB/s doc_throughput=  2757 docs/s instructions=     2919404 cycles=     1149858 branch_miss=    6769 cache_miss=    1323 cache_ref=     14562 items=       100 avg_time=    521993 ns]
partial_tweets<rapidjson>/manual_time                    2853719 ns      2921829 ns          246          29.081k           243.964M          9.775k        22.821k    8.26451M              13.0868           386.316       3.19272G          21.8948M                    34.6703                     2.64926           38.6316k    29.4738k   631.515k       211.044M/s    501.711   15.8976k   8.41948M         13.3322     350.42/s 2.95035G/s     21.8957M               34.6718                2.60061        100        35.042k/s [BEST: throughput=  0.24 GB/s doc_throughput=   386 docs/s instructions=    21894845 cycles=     8264515 branch_miss=   29081 cache_miss=    9775 cache_ref=     22821 items=       100 avg_time=   2853718 ns]
partial_tweets<rapidjson_insitu>/manual_time             1798439 ns      1861311 ns          390          26.914k           377.586M             598        17.517k    5.30077M              8.39374           597.905       3.16936G          13.3201M                    21.0922                     2.51285           59.7905k    25.9175k   631.515k       334.879M/s    246.562   10.3434k   5.33104M         8.44167    556.038/s 2.96426G/s     13.3205M               21.0929                2.49866        100       55.6038k/s [BEST: throughput=  0.38 GB/s doc_throughput=   597 docs/s instructions=    13320068 cycles=     5300771 branch_miss=   26914 cache_miss=     598 cache_ref=     17517 items=       100 avg_time=   1798439 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                 102204729 ns    108455092 ns            7         911.598k           451.422M        6.85199M       6.89638M    324.717M              7.05925           9.81378        3.1867G          1020.45M                    22.1843                     3.14259           9.81378M    911.137k   45.9988M       429.215M/s   6.80252M   6.89562M   325.841M          7.0837    9.78428/s 3.18813G/s     1020.45M               22.1843                3.13174      1000k       9.78428M/s [BEST: throughput=  0.45 GB/s doc_throughput=     9 docs/s instructions=  1020451782 cycles=   324716638 branch_miss=  911598 cache_miss= 6851995 cache_ref=   6896378 items=   1000000 avg_time= 102204729 ns]
large_random<simdjson_ondemand>/manual_time             72474511 ns     78665501 ns           10         951.255k           635.449M        3.52648M       3.57243M    230.841M              5.01841           13.8145       3.18894G          653.908M                    14.2158                     2.83272           13.8145M    953.542k   45.9988M       605.287M/s   3.51196M   3.57251M   231.062M         5.02323     13.798/s 3.18819G/s     653.908M               14.2158                   2.83      1000k        13.798M/s [BEST: throughput=  0.64 GB/s doc_throughput=    13 docs/s instructions=   653907679 cycles=   230840574 branch_miss=  951255 cache_miss= 3526479 cache_ref=   3572429 items=   1000000 avg_time=  72474510 ns]
large_random<simdjson_ondemand_unordered>/manual_time   72587481 ns     78827527 ns           10         898.168k           634.069M        3.50395M       3.57261M     231.26M              5.02753           13.7845        3.1878G          654.908M                    14.2375                     2.83191           13.7845M    899.983k   45.9988M       604.345M/s   3.51718M   3.57258M   231.445M         5.03154    13.7765/s  3.1885G/s     654.908M               14.2375                2.82965      1000k       13.7765M/s [BEST: throughput=  0.63 GB/s doc_throughput=    13 docs/s instructions=   654907678 cycles=   231260060 branch_miss=  898168 cache_miss= 3503953 cache_ref=   3572607 items=   1000000 avg_time=  72587481 ns]
large_random<yyjson>/manual_time                       155208407 ns    161467470 ns            5         707.654k           296.562M        4.21019M       5.43545M    354.062M               7.6972           6.44716        2.2827G          855.681M                    18.6023                     2.41676           6.44716M    708.361k   45.9988M       282.638M/s   4.21032M   5.43472M   354.323M         7.70287    6.44295/s 2.28288G/s     855.681M               18.6023                2.41498      1000k       6.44295M/s [BEST: throughput=  0.30 GB/s doc_throughput=     6 docs/s instructions=   855680955 cycles=   354061925 branch_miss=  707654 cache_miss= 4210193 cache_ref=   5435452 items=   1000000 avg_time= 155208407 ns]
large_random<yyjson_insitu>/manual_time                128725423 ns    134983378 ns            5         705.297k           357.592M        3.49316M       4.72256M    310.262M              6.74501           7.77395       2.41196G           849.56M                    18.4692                      2.7382           7.77395M    707.639k   45.9988M       340.786M/s   3.49506M   4.71468M   310.583M         6.75198    7.76847/s 2.41275G/s      849.56M               18.4692                2.73537      1000k       7.76847M/s [BEST: throughput=  0.36 GB/s doc_throughput=     7 docs/s instructions=   849559983 cycles=   310262416 branch_miss=  705297 cache_miss= 3493157 cache_ref=   4722561 items=   1000000 avg_time= 128725423 ns]
large_random<rapidjson>/manual_time                    250408310 ns    256666547 ns            3         587.276k           189.775M        4.36582M       5.19956M    704.196M               15.309           4.12565       2.90526G          2.00013G                    43.4822                      2.8403           4.12565M    586.658k   45.9988M       175.185M/s   4.09008M   5.12444M   707.846M         15.3884    3.99348/s 2.82677G/s     2.00014G               43.4824                2.82566      1000k       3.99348M/s [BEST: throughput=  0.19 GB/s doc_throughput=     4 docs/s instructions=  2000126348 cycles=   704195609 branch_miss=  587276 cache_miss= 4365817 cache_ref=   5199556 items=   1000000 avg_time= 250408310 ns]
large_random<rapidjson_lossless>/manual_time           286827922 ns    293142028 ns            2         593.648k           163.881M        4.37301M       5.19071M     826.12M              17.9596           3.56273       2.94324G          2.47709G                    53.8513                     2.99847           3.56273M    589.528k   45.9988M       152.941M/s   4.16913M   5.13134M   829.113M         18.0247    3.48641/s 2.89063G/s      2.4771G               53.8514                2.98765      1000k       3.48641M/s [BEST: throughput=  0.16 GB/s doc_throughput=     3 docs/s instructions=  2477094115 cycles=   826120378 branch_miss=  593648 cache_miss= 4373011 cache_ref=   5190712 items=   1000000 avg_time= 286827922 ns]
large_random<rapidjson_insitu>/manual_time             279836671 ns    286108593 ns            3         589.852k           169.253M         5.0306M       5.92686M    798.068M              17.3498           3.67951        2.9365G          1.72813G                     37.569                     2.16539           3.67951M     590.23k   45.9988M       156.762M/s    4.7731M   5.85457M    801.83M         17.4315    3.57351/s 2.86535G/s     1.72813G               37.5692                2.15524      1000k       3.57351M/s [BEST: throughput=  0.17 GB/s doc_throughput=     3 docs/s instructions=  1728126199 cycles=   798068116 branch_miss=  589852 cache_miss= 5030605 cache_ref=   5926857 items=   1000000 avg_time= 279836671 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                       109104218 ns    128580158 ns            6         1018.31k           1.25969G        10.2206M        10.318M    347.559M              2.53129           9.17442       3.18865G          971.996M                     7.0791                     2.79664           4.81004M    1019.12k   137.305M       1.17205G/s   10.2491M   10.3182M   347.878M         2.53361    9.16555/s 3.18849G/s     971.996M                7.0791                2.79407   524.288k       4.80539M/s [BEST: throughput=  1.26 GB/s doc_throughput=     9 docs/s instructions=   971995679 cycles=   347558571 branch_miss= 1018314 cache_miss=10220600 cache_ref=  10318013 items=    524288 avg_time= 109104218 ns]
kostya<simdjson_ondemand>/manual_time                   68192999 ns     87684797 ns           10          449.27k           2.01665G        6.43082M       6.47008M      217.1M              1.58115           14.6874       3.18864G          641.407M                     4.6714                     2.95442           7.70042M    449.555k   137.305M        1.8752G/s   6.43881M   6.47012M   217.396M         1.58331    14.6643/s 3.18795G/s     641.407M                4.6714                 2.9504   524.288k        7.6883M/s [BEST: throughput=  2.02 GB/s doc_throughput=    14 docs/s instructions=   641406589 cycles=   217100345 branch_miss=  449270 cache_miss= 6430820 cache_ref=   6470082 items=    524288 avg_time=  68192999 ns]
kostya<yyjson>/manual_time                             231984636 ns    251485848 ns            3         433.319k           592.692M        8.49246M       9.92297M    504.865M              3.67696           4.31661       2.17931G          974.185M                    7.09504                     1.92959           2.26315M    445.432k   137.305M       564.452M/s   8.49386M   9.93383M   505.619M         3.68245    4.31063/s 2.17954G/s     974.185M               7.09504                1.92672   524.288k       2.26001M/s [BEST: throughput=  0.59 GB/s doc_throughput=     4 docs/s instructions=   974184697 cycles=   504864978 branch_miss=  433319 cache_miss= 8492461 cache_ref=   9922967 items=    524288 avg_time= 231984635 ns]
kostya<yyjson_insitu>/manual_time                      152925511 ns    172277557 ns            5         415.227k           899.893M        6.35962M       7.79477M    374.238M               2.7256           6.55397       2.45275G          955.915M                    6.96198                     2.55429           3.43617M    439.939k   137.305M       856.262M/s    6.3588M   7.80594M   375.307M         2.73338    6.53913/s 2.45418G/s     955.915M               6.96198                2.54702   524.288k       3.42839M/s [BEST: throughput=  0.90 GB/s doc_throughput=     6 docs/s instructions=   955915027 cycles=   374238497 branch_miss=  415227 cache_miss= 6359621 cache_ref=   7794769 items=    524288 avg_time= 152925510 ns]
kostya<rapidjson>/manual_time                          321756502 ns    341214159 ns            2         973.342k           431.119M        5.19847M       6.45333M    918.191M              6.68723           3.13987         2.883G          2.73082G                    19.8887                     2.97413           1.64619M     971.77k   137.305M       406.967M/s   5.07328M   6.41369M   919.998M          6.7004    3.10794/s  2.8593G/s     2.73082G               19.8887                2.96829   524.288k       1.62946M/s [BEST: throughput=  0.43 GB/s doc_throughput=     3 docs/s instructions=  2730822485 cycles=   918190516 branch_miss=  973342 cache_miss= 5198473 cache_ref=   6453326 items=    524288 avg_time= 321756502 ns]
kostya<rapidjson_lossless>/manual_time                 348503434 ns    367962768 ns            2         977.126k           397.891M        5.19371M       6.44632M    1002.96M              7.30458           2.89786       2.90643G          3.00711G                     21.901                     2.99825           1.51931M    978.723k   137.305M       375.733M/s   5.07064M   6.40828M   1005.24M          7.3212    2.86941/s 2.88444G/s     3.00711G                21.901                2.99145   524.288k        1.5044M/s [BEST: throughput=  0.40 GB/s doc_throughput=     2 docs/s instructions=  3007113252 cycles=  1002955128 branch_miss=  977126 cache_miss= 5193713 cache_ref=   6446321 items=    524288 avg_time= 348503434 ns]
kostya<rapidjson_insitu>/manual_time                   317224199 ns    336770044 ns            2         891.555k            437.46M        7.32945M       8.60884M     902.97M              6.57638           3.18604        2.8769G          2.21411G                    16.1255                     2.45203            1.6704M    912.313k   137.305M       412.781M/s   7.20585M   8.57507M   905.195M         6.59258    3.15234/s 2.85349G/s     2.21411G               16.1255                2.44601   524.288k       1.65274M/s [BEST: throughput=  0.44 GB/s doc_throughput=     3 docs/s instructions=  2214111359 cycles=   902970436 branch_miss=  891555 cache_miss= 7329451 cache_ref=   8608842 items=    524288 avg_time= 317224199 ns]
distinct_user_id<simdjson_dom>/manual_time                317941 ns       396766 ns         2201           3.845k           2.00047G               0        33.643k    1008.49k              1.59693          3.16773k       3.19462G          2.86747M                    4.54061                     2.84334           364.289k    3.96112k   631.515k       1.84986G/s   0.616084   33.7503k    1014.6k         1.60662   3.14524k/s 3.19117G/s     2.86747M               4.54061                 2.8262        115       361.703k/s [BEST: throughput=  2.00 GB/s doc_throughput=  3167 docs/s instructions=     2867465 cycles=     1008486 branch_miss=    3845 cache_miss=       0 cache_ref=     33643 items=       115 avg_time=    317940 ns]
distinct_user_id<simdjson_ondemand>/manual_time           184238 ns       245604 ns         3798           2.064k           3.46927G               0         7.292k    581.429k             0.920689          5.49357k       3.19412G          1.82797M                    2.89458                     3.14392           631.761k    2.25845k   631.515k       3.19231G/s   0.115324   7.34041k    587.97k        0.931046   5.42776k/s 3.19136G/s     1.82797M               2.89458                3.10895        115       624.193k/s [BEST: throughput=  3.47 GB/s doc_throughput=  5493 docs/s instructions=     1827969 cycles=      581429 branch_miss=    2064 cache_miss=       0 cache_ref=      7292 items=       115 avg_time=    184238 ns]
distinct_user_id<yyjson>/manual_time                      797148 ns       885245 ns          962           9.727k           1.43142G             212        27.684k    1.40925M              2.23154          2.26665k       3.19428G           2.8778M                    4.55697                     2.04207           260.665k    7.70523k   631.515k       755.518M/s    485.711   25.7803k    1.5731M           2.491   1.25447k/s 1.97341G/s      2.8782M               4.55761                1.82963        115       144.264k/s [BEST: throughput=  1.43 GB/s doc_throughput=  2266 docs/s instructions=     2877798 cycles=     1409253 branch_miss=    9727 cache_miss=     212 cache_ref=     27684 items=       115 avg_time=    797147 ns]
distinct_user_id<yyjson_insitu>/manual_time               517578 ns       591638 ns         1365           7.374k            1.7598G             108        14.743k    1.14635M              1.81524          2.78663k       3.19445G          2.87739M                    4.55634                     2.51005           320.462k    7.49492k   631.515k       1.13634G/s    106.326   11.9473k   1.25051M         1.98017   1.93207k/s 2.41608G/s     2.87766M               4.55675                2.30119        115       222.189k/s [BEST: throughput=  1.76 GB/s doc_throughput=  2786 docs/s instructions=     2877394 cycles=     1146350 branch_miss=    7374 cache_miss=     108 cache_ref=     14743 items=       115 avg_time=    517578 ns]
distinct_user_id<rapidjson>/manual_time                  2820052 ns      2895458 ns          247          29.131k           244.311M         12.802k         22.94k    8.25275M              13.0682           386.865        3.1927G          21.8234M                    34.5572                     2.64438           44.4895k    29.3919k   631.515k       213.563M/s   1.84445k   16.8351k   8.38815M         13.2826    354.603/s 2.97447G/s      21.824M               34.5581                2.60176        115       40.7794k/s [BEST: throughput=  0.24 GB/s doc_throughput=   386 docs/s instructions=    21823372 cycles=     8252746 branch_miss=   29131 cache_miss=   12802 cache_ref=     22940 items=       115 avg_time=   2820051 ns]
distinct_user_id<rapidjson_insitu>/manual_time           1808635 ns      1879187 ns          382          24.863k           383.442M          7.197k        14.263k    5.25855M              8.32688           607.178       3.19288G          13.2535M                    20.9869                     2.52038           69.8255k     32.158k   631.515k       332.991M/s   1.92472k   12.0271k   5.46117M         8.64772    552.903/s  3.0195G/s     13.2537M               20.9872                 2.4269        115       63.5839k/s [BEST: throughput=  0.38 GB/s doc_throughput=   607 docs/s instructions=    13253531 cycles=     5258550 branch_miss=   24863 cache_miss=    7197 cache_ref=     14263 items=       115 avg_time=   1808634 ns]
find_tweet<simdjson_dom>/manual_time                      301622 ns       375882 ns         2319           3.529k           2.11035G              60        29.748k    955.866k              1.51361          3.34172k       3.19424G          2.78229M                    4.40574                     2.91075           3.34172k    3.68861k   631.515k       1.94994G/s    55.5735   29.7049k   962.478k         1.52408   3.31541k/s 3.19101G/s     2.78229M               4.40574                2.89076          1       3.31541k/s [BEST: throughput=  2.11 GB/s doc_throughput=  3341 docs/s instructions=     2782291 cycles=      955866 branch_miss=    3529 cache_miss=      60 cache_ref=     29748 items=         1 avg_time=    301621 ns]
find_tweet<simdjson_ondemand>/manual_time                 127972 ns       190834 ns         5449             1059           4.97095G               0         7.112k    405.951k             0.642821          7.87147k       3.19543G          1.32098M                    2.09176                     3.25403           7.87147k    1.12166k   631.515k       4.59588G/s   8.44192m   7.21609k   408.583k        0.646989   7.81421k/s 3.19275G/s     1.32098M               2.09176                3.23306          1       7.81421k/s [BEST: throughput=  4.97 GB/s doc_throughput=  7871 docs/s instructions=     1320975 cycles=      405951 branch_miss=    1059 cache_miss=       0 cache_ref=      7112 items=         1 avg_time=    127972 ns]
find_tweet<yyjson>/manual_time                            786401 ns       872497 ns          896           9.345k            1.4665G             219         27.28k     1.3756M              2.17825           2.3222k       3.19441G          2.81716M                    4.46095                     2.04795            2.3222k    7.45234k   631.515k       765.843M/s    460.215   24.9327k   1.54001M          2.4386   1.27162k/s  1.9583G/s     2.81785M               4.46205                1.82976          1       1.27162k/s [BEST: throughput=  1.47 GB/s doc_throughput=  2322 docs/s instructions=     2817159 cycles=     1375598 branch_miss=    9345 cache_miss=     219 cache_ref=     27280 items=         1 avg_time=    786400 ns]
find_tweet<yyjson_insitu>/manual_time                     505161 ns       574024 ns         1397           6.504k           1.82443G          2.118k        13.006k    1.10067M               1.7429          2.88898k       3.17981G          2.81684M                    4.46045                     2.55921           2.88898k    7.21932k   631.515k       1.16427G/s    7.71582   10.1857k   1.21164M         1.91862   1.97957k/s 2.39852G/s      2.8171M               4.46087                2.32504          1       1.97957k/s [BEST: throughput=  1.82 GB/s doc_throughput=  2888 docs/s instructions=     2816842 cycles=     1100668 branch_miss=    6504 cache_miss=    2118 cache_ref=     13006 items=         1 avg_time=    505160 ns]
find_tweet<rapidjson>/manual_time                        2800356 ns      2871366 ns          249          28.683k           246.079M         11.938k        21.127k    8.19351M              12.9744           389.664       3.19272G          21.7383M                    34.4225                     2.65311            389.664    29.2372k   631.515k       215.065M/s   1.53584k   13.7973k   8.32527M          13.183    357.097/s 2.97293G/s     21.7389M               34.4235                 2.6112          1        357.097/s [BEST: throughput=  0.25 GB/s doc_throughput=   389 docs/s instructions=    21738326 cycles=     8193514 branch_miss=   28683 cache_miss=   11938 cache_ref=     21127 items=         1 avg_time=   2800356 ns]
find_tweet<rapidjson_insitu>/manual_time                 1795151 ns      1860780 ns          382          24.604k           386.825M             318        13.313k    5.21237M              8.25376           612.536       3.19276G          13.1742M                    20.8612                     2.52748            612.536    31.9898k   631.515k       335.493M/s    1.7221k   9.10212k   5.41829M         8.57984    557.056/s  3.0183G/s     13.1747M                20.862                2.43152          1        557.056/s [BEST: throughput=  0.39 GB/s doc_throughput=   612 docs/s instructions=    13174186 cycles=     5212373 branch_miss=   24604 cache_miss=     318 cache_ref=     13313 items=         1 avg_time=   1795150 ns]
