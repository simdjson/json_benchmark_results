run_benchmark: v0.8.0~19 /home/jkeiser/simdjson_benchmark_results/v0.7.0/19/ampere-clang11.json -DCMAKE_BUILD_TYPE=Release
git reset --hard v0.8.0~19
HEAD is now at 920f5355 Reamalgamate
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- git Version: v0.2.1-920f5355
-- Version: 0.2.1
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES -- failed to compile
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 11
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
make[3]: Nothing to be done for '_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build'.
[ 72%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
make[3]: Nothing to be done for 'jsonexamples/generated/CMakeFiles/generated-data.dir/build'.
[ 72%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/clang++-11  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/src  -O3 -DNDEBUG -fPIC   -pthread -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/clang++-11 -fPIC -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.6 -o ../libsimdjson.so.6.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.6.0.0 ../libsimdjson.so.6 ../libsimdjson.so
[ 81%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
make[3]: Nothing to be done for 'dependencies/CMakeFiles/yyjson.dir/build'.
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/clang++-11  -DRAPIDJSON_HAS_STDSTRING -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_COMPETITION_RAPIDJSON -DSIMDJSON_COMPETITION_YYJSON -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/rapidjson/include  -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/clang++-11  -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.6.0.0 ../_deps/google_benchmarks/src/libbenchmark.a ../dependencies/libyyjson.a -pthread /usr/lib/aarch64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/19/ampere-clang11.json --benchmark_out_format=json
2021-01-25 00:51:54
Running benchmark/bench_ondemand
Run on (32 X 3300 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x32)
  L1 Instruction 32 KiB (x32)
  L2 Unified 256 KiB (x16)
Load Average: 1.07, 1.03, 1.00
simdjson::dom implementation:      arm64
simdjson::ondemand implementation: arm64

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                 1550519 ns      1618498 ns          452          13.532k           408.329M         25.974k       958.721k    4.95086M              7.83965           646.587       3.20116G          3.94988M                    6.25461                    0.797818           64.6587k    13.7044k   631.515k       388.424M/s    25.973k   959.594k   4.95853M          7.8518    644.945/s 3.19798G/s     3.94988M               6.25461               0.796583        100       64.4945k/s [BEST: throughput=  0.41 GB/s doc_throughput=   646 docs/s instructions=     3949882 cycles=     4950859 branch_miss=   13532 cache_miss=   25974 cache_ref=    958721 items=       100 avg_time=   1550519 ns]
partial_tweets<simdjson_ondemand>/manual_time            1049868 ns      1118558 ns          664           8.552k           603.224M         22.898k       445.814k    3.35174M              5.30746           955.202       3.20159G           2.7244M                    4.31407                    0.812831           95.5202k    8.77104k   631.515k       573.653M/s   22.9169k   446.526k   3.35777M           5.317    952.501/s 3.19828G/s      2.7244M               4.31406               0.811371        100       95.2501k/s [BEST: throughput=  0.60 GB/s doc_throughput=   955 docs/s instructions=     2724397 cycles=     3351738 branch_miss=    8552 cache_miss=   22898 cache_ref=    445814 items=       100 avg_time=   1049867 ns]
partial_tweets<yyjson>/manual_time                       1181834 ns      1252581 ns          594          45.323k           596.588M         24.267k       1.40735M    3.34215M              5.29227           944.694       3.15731G          3.27036M                     5.1786                     0.97852           94.4694k    45.2377k   631.515k       509.597M/s   24.2696k   1.40909M   3.55622M         5.63125    846.142/s 3.00906G/s     3.27059M               5.17896               0.919682        100       84.6142k/s [BEST: throughput=  0.60 GB/s doc_throughput=   944 docs/s instructions=     3270362 cycles=     3342150 branch_miss=   45323 cache_miss=   24267 cache_ref=   1407355 items=       100 avg_time=   1181834 ns]
partial_tweets<yyjson_insitu>/manual_time                1104191 ns      1176256 ns          637          45.288k            632.07M           14.4k       1.25059M    3.19892M              5.06547           1000.88       3.20173G          3.17167M                    5.02232                    0.991481           100.088k     45.281k   631.515k       545.431M/s   14.4243k   1.25043M    3.4192M         5.41429     905.64/s 3.09657G/s     3.17182M               5.02256                0.92765        100        90.564k/s [BEST: throughput=  0.63 GB/s doc_throughput=  1000 docs/s instructions=     3171670 cycles=     3198923 branch_miss=   45288 cache_miss=   14400 cache_ref=   1250589 items=       100 avg_time=   1104191 ns]
partial_tweets<rapidjson>/manual_time                    4577947 ns      4649942 ns          153          79.514k           139.969M         13.004k       13.3833M    14.3946M              22.7937            221.64       3.19042G            20.68M                    32.7467                     1.43665            22.164k    79.2488k   631.515k       131.557M/s   13.1714k    13.384M   14.4319M         22.8529    218.439/s 3.15249G/s     20.6804M               32.7474                1.43296        100       21.8439k/s [BEST: throughput=  0.14 GB/s doc_throughput=   221 docs/s instructions=    20680027 cycles=    14394590 branch_miss=   79514 cache_miss=   13004 cache_ref=  13383316 items=       100 avg_time=   4577947 ns]
partial_tweets<rapidjson_insitu>/manual_time             2982265 ns      3055337 ns          235          61.358k           217.179M         13.757k       5.86227M    9.30667M              14.7371           343.901       3.20058G          12.8216M                     20.303                     1.37768           34.3901k    61.1105k   631.515k       201.947M/s   13.9274k   5.86455M   9.38617M         14.8629    335.316/s 3.14733G/s     12.8222M               20.3038                1.36607        100       33.5316k/s [BEST: throughput=  0.22 GB/s doc_throughput=   343 docs/s instructions=    12821632 cycles=     9306671 branch_miss=   61358 cache_miss=   13757 cache_ref=   5862270 items=       100 avg_time=   2982265 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                 310245725 ns    313814724 ns            2         1.95056M           148.449M        3.98267M       231.981M    990.674M               21.537           3.22724       3.19714G          1040.92M                    22.6292                     1.05071           3.22724M    1.95122M   45.9988M       141.397M/s   3.98266M   231.983M   991.797M         21.5614    3.22325/s 3.19681G/s     1040.92M               22.6292                1.04953      1000k       3.22325M/s [BEST: throughput=  0.15 GB/s doc_throughput=     3 docs/s instructions=  1040915694 cycles=   990673788 branch_miss= 1950558 cache_miss= 3982669 cache_ref= 231981398 items=   1000000 avg_time= 310245725 ns]
large_random<simdjson_ondemand>/manual_time            197451933 ns    201086645 ns            4         1.20812M           232.979M        2.31856M       143.401M    631.256M              13.7233           5.06489       3.19725G          662.774M                    14.4085                     1.04993           5.06489M    1.20805M   45.9988M        222.17M/s   2.31857M   143.401M   631.251M         13.7232    5.06452/s 3.19699G/s     662.774M               14.4085                1.04994      1000k       5.06452M/s [BEST: throughput=  0.23 GB/s doc_throughput=     5 docs/s instructions=   662773948 cycles=   631256349 branch_miss= 1208124 cache_miss= 2318562 cache_ref= 143400693 items=   1000000 avg_time= 197451933 ns]
large_random<simdjson_ondemand_unordered>/manual_time  187889605 ns    191476084 ns            4         1.19063M           244.867M        2.31868M       141.211M    600.626M              13.0574           5.32333       3.19733G          674.774M                    14.6694                     1.12345           5.32333M    1.19069M   45.9988M       233.477M/s   2.31866M    141.21M   600.633M         13.0576    5.32227/s 3.19673G/s     674.774M               14.6694                1.12344      1000k       5.32227M/s [BEST: throughput=  0.24 GB/s doc_throughput=     5 docs/s instructions=   674773945 cycles=   600625977 branch_miss= 1190630 cache_miss= 2318681 cache_ref= 141210562 items=   1000000 avg_time= 187889604 ns]
large_random<yyjson>/manual_time                       205002297 ns    208579949 ns            3         1.72573M           224.551M        4.91464M       205.491M    629.804M              13.6918           4.88167        3.0745G          816.384M                     17.748                     1.29625           4.88167M    1.75023M   45.9988M       213.987M/s    4.9147M   205.532M   630.169M         13.6997    4.87799/s 3.07396G/s     816.384M                17.748                 1.2955      1000k       4.87799M/s [BEST: throughput=  0.22 GB/s doc_throughput=     4 docs/s instructions=   816384374 cycles=   629804494 branch_miss= 1725729 cache_miss= 4914642 cache_ref= 205490812 items=   1000000 avg_time= 205002297 ns]
large_random<yyjson_insitu>/manual_time                198931499 ns    202508401 ns            4         1.73585M           231.269M        4.19784M       194.008M    617.977M              13.4346           5.02773       3.10702G          809.197M                    17.5917                     1.30943           5.02773M    1.74414M   45.9988M       220.517M/s   4.19778M   194.013M    618.03M         13.4358    5.02686/s 3.10675G/s     809.197M               17.5917                1.30932      1000k       5.02686M/s [BEST: throughput=  0.23 GB/s doc_throughput=     5 docs/s instructions=   809196737 cycles=   617976624 branch_miss= 1735849 cache_miss= 4197841 cache_ref= 194007608 items=   1000000 avg_time= 198931499 ns]
large_random<rapidjson>/manual_time                    355914974 ns    359490546 ns            2         2.06276M           129.329M         4.9496M       779.127M    1.11098G              24.1524           2.81157        3.1236G          1.63051G                    35.4468                     1.46763           2.81157M    2.06328M   45.9988M       123.254M/s   4.95046M   779.133M   1.10956G         24.1214    2.80966/s 3.11747G/s     1.63051G               35.4469                1.46952      1000k       2.80966M/s [BEST: throughput=  0.13 GB/s doc_throughput=     2 docs/s instructions=  1630508475 cycles=  1110979647 branch_miss= 2062756 cache_miss= 4949603 cache_ref= 779127293 items=   1000000 avg_time= 355914973 ns]
large_random<rapidjson_lossless>/manual_time           411172388 ns    414756335 ns            2         1.40214M           112.054M        4.95109M       1021.11M     1.2855G              27.9464           2.43602       3.13151G          2.05348G                    44.6421                     1.59742           2.43602M     1.3979M   45.9988M        106.69M/s   4.95184M    1021.1M   1.28542G         27.9446    2.43207/s 3.12622G/s     2.05349G               44.6422                1.59753      1000k       2.43207M/s [BEST: throughput=  0.11 GB/s doc_throughput=     2 docs/s instructions=  2053481935 cycles=  1285501286 branch_miss= 1402142 cache_miss= 4951086 cache_ref=1021112945 items=   1000000 avg_time= 411172388 ns]
large_random<rapidjson_insitu>/manual_time             398970564 ns    356510413 ns            2         2.09737M             130.4M        5.67331M       696.346M    1096.27M              23.8327           2.83486       3.10778G          1.37952G                    29.9903                     1.25837           2.83486M    2.25171M   45.9988M       109.953M/s   5.67284M    696.35M   1099.13M         23.8947    2.50645/s 2.75491G/s     1.37951G               29.9902                 1.2551      1000k       2.50645M/s [BEST: throughput=  0.13 GB/s doc_throughput=     2 docs/s instructions=  1379518480 cycles=  1096273098 branch_miss= 2097370 cache_miss= 5673307 cache_ref= 696345780 items=   1000000 avg_time= 398970563 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                       377051184 ns    387673291 ns            2          880.57k           364.177M        6.95165M       248.839M     1.2052G              8.77752           2.65232       3.19657G           1.1314G                    8.24004                    0.938767           1.39058M    880.439k   137.305M       347.285M/s   6.95173M   248.838M   1.20523G         8.77773    2.65216/s 3.19645G/s      1.1314G               8.24004               0.938744   524.288k        1.3905M/s [BEST: throughput=  0.36 GB/s doc_throughput=     2 docs/s instructions=  1131399189 cycles=  1205196675 branch_miss=  880570 cache_miss= 6951646 cache_ref= 248838681 items=    524288 avg_time= 377051184 ns]
kostya<simdjson_ondemand>/manual_time                  256593743 ns    267207668 ns            3         898.196k           535.177M        5.28414M       145.071M    820.176M              5.97339           3.89772       3.19682G          791.061M                    5.76134                    0.964501           2.04353M    898.307k   137.305M       510.317M/s   5.28411M   145.073M   820.193M         5.97352    3.89721/s 3.19647G/s     791.061M               5.76134               0.964481   524.288k       2.04326M/s [BEST: throughput=  0.54 GB/s doc_throughput=     3 docs/s instructions=   791060730 cycles=   820176274 branch_miss=  898196 cache_miss= 5284144 cache_ref= 145071236 items=    524288 avg_time= 256593743 ns]
kostya<yyjson>/manual_time                             278123317 ns    288751298 ns            3         2.14776M           493.991M        7.98447M       326.045M     846.07M              6.16198           3.59776       3.04396G          948.794M                    6.91012                     1.12141           1.88626M    2.14689M   137.305M       470.814M/s   7.98504M   326.039M   846.623M           6.166    3.59553/s 3.04406G/s     948.794M               6.91012                1.12068   524.288k       1.88509M/s [BEST: throughput=  0.49 GB/s doc_throughput=     3 docs/s instructions=   948793739 cycles=   846070100 branch_miss= 2147763 cache_miss= 7984471 cache_ref= 326044886 items=    524288 avg_time= 278123316 ns]
kostya<yyjson_insitu>/manual_time                      260728851 ns    271376809 ns            3         2.15524M           527.105M        5.84362M       291.791M    810.665M              5.90412           3.83894       3.11209G          927.339M                    6.75387                     1.14392           2.01271M    2.15346M   137.305M       502.224M/s   5.84429M   291.756M   811.462M         5.90992     3.8354/s 3.11228G/s     927.339M               6.75387                 1.1428   524.288k       2.01086M/s [BEST: throughput=  0.53 GB/s doc_throughput=     3 docs/s instructions=   927339470 cycles=   810665434 branch_miss= 2155239 cache_miss= 5843617 cache_ref= 291791285 items=    524288 avg_time= 260728851 ns]
kostya<rapidjson>/manual_time                          590701774 ns    601319869 ns            1         6.30389M           232.444M        5.34171M       1.20966G    1.85403G               13.503            1.6929       3.13868G          2.46967G                    17.9868                     1.33206           887.568k    6.30389M   137.305M       221.676M/s   5.34171M   1.20966G   1.85403G          13.503     1.6929/s 3.13868G/s     2.46967G               17.9868                1.33206   524.288k       887.568k/s [BEST: throughput=  0.23 GB/s doc_throughput=     1 docs/s instructions=  2469674056 cycles=  1854025430 branch_miss= 6303891 cache_miss= 5341715 cache_ref=1209661230 items=    524288 avg_time= 590701774 ns]
kostya<rapidjson_lossless>/manual_time                 632284780 ns    642915315 ns            1         6.75815M           217.157M        5.34339M       1.35352G    1.98686G              14.4704           1.58157       3.14236G          2.71451G                    19.7699                     1.36623           829.196k    6.75815M   137.305M       207.097M/s   5.34339M   1.35352G   1.98686G         14.4704    1.58157/s 3.14236G/s     2.71451G               19.7699                1.36623   524.288k       829.196k/s [BEST: throughput=  0.22 GB/s doc_throughput=     1 docs/s instructions=  2714508718 cycles=  1986864976 branch_miss= 6758147 cache_miss= 5343386 cache_ref=1353518252 items=    524288 avg_time= 632284780 ns]
kostya<rapidjson_insitu>/manual_time                   527450129 ns    538086114 ns            1         4.45305M           260.318M        6.32707M       905.831M    1.65228G              12.0336           1.89591       3.13258G          1.99322G                    14.5167                     1.20634           994.005k    4.45305M   137.305M       248.259M/s   6.32707M   905.831M   1.65228G         12.0336    1.89591/s 3.13258G/s     1.99322G               14.5167                1.20634   524.288k       994.005k/s [BEST: throughput=  0.26 GB/s doc_throughput=     1 docs/s instructions=  1993216220 cycles=  1652278004 branch_miss= 4453051 cache_miss= 6327066 cache_ref= 905830614 items=    524288 avg_time= 527450129 ns]
distinct_user_id<simdjson_dom>/manual_time               1551698 ns      1637970 ns          452          13.202k           408.441M         26.536k       946.079k     4.9496M              7.83766           646.764       3.20122G          3.87901M                    6.14239                    0.783702           74.3778k    13.3649k   631.515k       388.129M/s   26.5537k   946.578k   4.96063M         7.85513    644.455/s 3.19691G/s     3.87901M               6.14239               0.781959        115       74.1123k/s [BEST: throughput=  0.41 GB/s doc_throughput=   646 docs/s instructions=     3879014 cycles=     4949602 branch_miss=   13202 cache_miss=   26536 cache_ref=    946079 items=       115 avg_time=   1551698 ns]
distinct_user_id<simdjson_ondemand>/manual_time          1046056 ns      1126594 ns          669           9.388k            608.95M         22.513k       428.534k    3.32018M              5.25749           964.269       3.20155G          2.66992M                    4.22779                    0.804147           110.891k    10.4998k   631.515k       575.743M/s   22.5146k   432.369k   3.34548M         5.29754    955.971/s 3.19818G/s     2.66992M                4.2278               0.798067        115       109.937k/s [BEST: throughput=  0.61 GB/s doc_throughput=   964 docs/s instructions=     2669915 cycles=     3320182 branch_miss=    9388 cache_miss=   22513 cache_ref=    428534 items=       115 avg_time=   1046056 ns]
distinct_user_id<yyjson>/manual_time                     1165633 ns      1249510 ns          608          45.859k           614.255M         24.208k       1.39625M    3.29176M              5.21248           972.669       3.20179G          3.23372M                    5.12058                     0.98237           111.857k    45.2705k   631.515k        516.68M/s   24.2651k   1.39613M   3.50633M         5.55226    857.903/s 3.00809G/s     3.23387M               5.12081               0.922294        115       98.6589k/s [BEST: throughput=  0.61 GB/s doc_throughput=   972 docs/s instructions=     3233725 cycles=     3291760 branch_miss=   45859 cache_miss=   24208 cache_ref=   1396251 items=       115 avg_time=   1165632 ns]
distinct_user_id<yyjson_insitu>/manual_time              1087383 ns      1171373 ns          647          45.314k           642.415M          14.34k       1.23704M    3.14761M              4.98422           1017.26       3.20194G          3.13482M                    4.96396                    0.995936           116.985k    45.3071k   631.515k       553.861M/s   14.3695k   1.23731M   3.36549M         5.32923    919.639/s 3.09503G/s     3.13481M               4.96395               0.931457        115       105.758k/s [BEST: throughput=  0.64 GB/s doc_throughput=  1017 docs/s instructions=     3134816 cycles=     3147609 branch_miss=   45314 cache_miss=   14340 cache_ref=   1237037 items=       115 avg_time=   1087383 ns]
distinct_user_id<rapidjson>/manual_time                  4559363 ns      4644211 ns          153          79.234k           140.774M         13.523k       13.3717M    14.3571M              22.7344           222.915       3.20042G          20.6314M                    32.6697                     1.43702           25.6352k    79.3028k   631.515k       132.093M/s   13.7367k   13.3637M    14.425M          22.842    219.329/s 3.16383G/s      20.632M               32.6706                1.43029        115       25.2228k/s [BEST: throughput=  0.14 GB/s doc_throughput=   222 docs/s instructions=    20631423 cycles=    14357117 branch_miss=   79234 cache_miss=   13523 cache_ref=  13371720 items=       115 avg_time=   4559362 ns]
distinct_user_id<rapidjson_insitu>/manual_time           2973617 ns      3059227 ns          238          61.239k           217.923M         13.986k       5.84966M    9.27489M              14.6867            345.08       3.20058G           12.775M                    20.2291                     1.37737           39.6842k    61.0764k   631.515k       202.534M/s   14.1967k   5.85109M   9.36332M         14.8268    336.291/s  3.1488G/s     12.7754M               20.2298                1.36441        115       38.6734k/s [BEST: throughput=  0.22 GB/s doc_throughput=   345 docs/s instructions=    12774952 cycles=     9274893 branch_miss=   61239 cache_miss=   13986 cache_ref=   5849662 items=       115 avg_time=   2973617 ns]
find_tweet<simdjson_dom>/manual_time                     1519398 ns      1600073 ns          461          13.195k           424.024M         23.492k       929.465k    4.76788M              7.54991           671.439       3.20134G           3.7886M                    5.99922                    0.794608            671.439    13.1838k   631.515k        396.38M/s   23.5004k    932.98k   4.85914M         7.69442    658.155/s 3.19807G/s      3.7886M               5.99922               0.779685          1        658.155/s [BEST: throughput=  0.42 GB/s doc_throughput=   671 docs/s instructions=     3788599 cycles=     4767882 branch_miss=   13195 cache_miss=   23492 cache_ref=    929465 items=         1 avg_time=   1519398 ns]
find_tweet<simdjson_ondemand>/manual_time                 903865 ns       985306 ns          774            4.53k           700.567M         11.552k       234.232k    2.88601M              4.56999          1.10934k       3.20158G          2.11682M                    3.35197                    0.733474           1.10934k    4.68856k   631.515k       666.316M/s   11.5554k    234.68k   2.89099M         4.57787   1.10636k/s 3.19848G/s     2.11682M               3.35197               0.732212          1       1.10636k/s [BEST: throughput=  0.70 GB/s doc_throughput=  1109 docs/s instructions=     2116817 cycles=     2886015 branch_miss=    4530 cache_miss=   11552 cache_ref=    234232 items=         1 avg_time=    903864 ns]
find_tweet<yyjson>/manual_time                           1115771 ns      1199866 ns          628           45.35k           645.376M          21.72k       1.37922M    3.13308M              4.96122           1021.95       3.20185G          3.17691M                    5.03061                     1.01399            1021.95    45.1959k   631.515k        539.77M/s   21.7519k    1.3809M   3.34884M         5.30286    896.241/s 3.00137G/s     3.17713M               5.03096               0.948725          1        896.241/s [BEST: throughput=  0.65 GB/s doc_throughput=  1021 docs/s instructions=     3176906 cycles=     3133083 branch_miss=   45350 cache_miss=   21720 cache_ref=   1379221 items=         1 avg_time=   1115770 ns]
find_tweet<yyjson_insitu>/manual_time                    1038369 ns      1123488 ns          676          45.093k           672.373M         11.808k       1.22167M    3.00708M              4.76169            1064.7       3.20163G          3.07792M                    4.87386                     1.02356             1064.7    45.1464k   631.515k       580.005M/s   11.8352k   1.22189M   3.20986M         5.08279    963.049/s 3.09125G/s     3.07806M                4.8741                0.95894          1        963.049/s [BEST: throughput=  0.67 GB/s doc_throughput=  1064 docs/s instructions=     3077916 cycles=     3007080 branch_miss=   45093 cache_miss=   11808 cache_ref=   1221675 items=         1 avg_time=   1038369 ns]
find_tweet<rapidjson>/manual_time                        5698599 ns      4907770 ns          154          79.112k           141.595M         10.813k         13.36M    14.2745M              22.6037           224.214       3.20056G          20.5749M                    32.5803                     1.44137            224.214    79.2187k   631.515k       105.686M/s   11.0107k   13.3539M   14.3146M         22.6671    175.482/s 2.51195G/s     20.5753M               32.5809                1.43736          1        175.482/s [BEST: throughput=  0.14 GB/s doc_throughput=   224 docs/s instructions=    20574942 cycles=    14274549 branch_miss=   79112 cache_miss=   10813 cache_ref=  13359983 items=         1 avg_time=   5698599 ns]
find_tweet<rapidjson_insitu>/manual_time                 2934868 ns      3021762 ns          241          60.837k           220.475M         10.618k       5.83006M    9.16821M              14.5178            349.12       3.20081G          12.7153M                    20.1346                     1.38689             349.12    60.9943k   631.515k       205.208M/s    10.808k    5.8392M   9.24256M         14.6355    340.731/s 3.14922G/s     12.7158M               20.1354                1.37579          1        340.731/s [BEST: throughput=  0.22 GB/s doc_throughput=   349 docs/s instructions=    12715305 cycles=     9168209 branch_miss=   60837 cache_miss=   10618 cache_ref=   5830059 items=         1 avg_time=   2934867 ns]
