run_benchmark: v0.8.0~19 /home/jkeiser/simdjson_benchmark_results/v0.7.0/19/ampere-gcc10.2.json -DCMAKE_BUILD_TYPE=Release
git reset --hard v0.8.0~19
HEAD is now at 920f5355 Reamalgamate
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- git Version: v0.2.1-920f5355
-- Version: 0.2.1
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 11
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
make[3]: Nothing to be done for '_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build'.
[ 72%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
make[3]: Nothing to be done for 'jsonexamples/generated/CMakeFiles/generated-data.dir/build'.
[ 72%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/g++-10  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/src  -O3 -DNDEBUG -fPIC   -pthread -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/g++-10 -fPIC -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.6 -o ../libsimdjson.so.6.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.6.0.0 ../libsimdjson.so.6 ../libsimdjson.so
[ 81%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
make[3]: Nothing to be done for 'dependencies/CMakeFiles/yyjson.dir/build'.
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/g++-10  -DRAPIDJSON_HAS_STDSTRING -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_COMPETITION_RAPIDJSON -DSIMDJSON_COMPETITION_YYJSON -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/rapidjson/include  -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/g++-10  -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.6.0.0 ../_deps/google_benchmarks/src/libbenchmark.a ../dependencies/libyyjson.a -pthread /usr/lib/aarch64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/19/ampere-gcc10.2.json --benchmark_out_format=json
2021-01-25 01:08:50
Running benchmark/bench_ondemand
Run on (32 X 3300 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x32)
  L1 Instruction 32 KiB (x32)
  L2 Unified 256 KiB (x16)
Load Average: 1.00, 1.00, 1.00
simdjson::dom implementation:      arm64
simdjson::ondemand implementation: arm64

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                 1590539 ns      1659469 ns          440          17.537k            398.47M          25.93k       902.524k    5.07369M              8.03416           630.975       3.20137G          3.92138M                    6.20949                    0.772885           63.0975k    17.6814k   631.515k       378.651M/s    25.946k   900.313k   5.08648M         8.05441    628.718/s 3.19796G/s     3.92138M               6.20949               0.770942        100       62.8718k/s [BEST: throughput=  0.40 GB/s doc_throughput=   630 docs/s instructions=     3921383 cycles=     5073694 branch_miss=   17537 cache_miss=   25930 cache_ref=    902524 items=       100 avg_time=   1590539 ns]
partial_tweets<simdjson_ondemand>/manual_time            1066089 ns      1135454 ns          657            6.56k           593.784M         22.758k        402.22k     3.4054M              5.39242           940.253       3.20193G          2.75991M                     4.3703                    0.810453           94.0253k    6.70925k   631.515k       564.924M/s   22.7699k   402.615k   3.40963M         5.39913    938.008/s 3.19826G/s     2.75992M               4.37031               0.809447        100       93.8008k/s [BEST: throughput=  0.59 GB/s doc_throughput=   940 docs/s instructions=     2759913 cycles=     3405397 branch_miss=    6560 cache_miss=   22758 cache_ref=    402220 items=       100 avg_time=   1066088 ns]
partial_tweets<yyjson>/manual_time                       1245965 ns      1317909 ns          564          48.329k           571.077M         24.332k       1.49165M    3.54048M              5.60632           904.296       3.20164G          3.54867M                    5.61929                     1.00231           90.4296k    48.3384k   631.515k       483.368M/s    24.368k   1.49198M   3.75254M         5.94212     802.59/s 3.01175G/s     3.54889M               5.61964               0.945729        100        80.259k/s [BEST: throughput=  0.57 GB/s doc_throughput=   904 docs/s instructions=     3548665 cycles=     3540476 branch_miss=   48329 cache_miss=   24332 cache_ref=   1491649 items=       100 avg_time=   1245965 ns]
partial_tweets<yyjson_insitu>/manual_time                1165907 ns      1238953 ns          601           48.34k           597.806M         14.531k       1.33309M    3.38282M              5.35667           946.622       3.20225G          3.44997M                    5.46301                     1.01985           94.6622k    48.3342k   631.515k       516.559M/s   14.5416k   1.33308M   3.61273M         5.72074    857.701/s 3.09865G/s     3.45012M               5.46325                0.95499        100       85.7701k/s [BEST: throughput=  0.60 GB/s doc_throughput=   946 docs/s instructions=     3449971 cycles=     3382816 branch_miss=   48340 cache_miss=   14531 cache_ref=   1333089 items=       100 avg_time=   1165906 ns]
partial_tweets<rapidjson>/manual_time                    2837544 ns      2910349 ns          247          80.406k           227.999M         12.953k       6.28822M    8.82833M              13.9796           361.035       3.18734G          13.4033M                    21.2241                     1.51822           36.1035k    80.1257k   631.515k       212.247M/s   13.1531k   6.28754M   8.86327M         14.0349    352.417/s 3.12357G/s     13.4038M               21.2248                1.51228        100       35.2417k/s [BEST: throughput=  0.23 GB/s doc_throughput=   361 docs/s instructions=    13403343 cycles=     8828331 branch_miss=   80406 cache_miss=   12953 cache_ref=   6288215 items=       100 avg_time=   2837544 ns]
partial_tweets<rapidjson_insitu>/manual_time             2131503 ns      2204802 ns          328          60.574k           304.923M         13.752k       3.48018M    6.62949M              10.4978           482.843         3.201G          9.78108M                    15.4883                     1.47539           48.2843k    60.6091k   631.515k       282.552M/s   13.9447k   3.47974M   6.66298M         10.5508    469.153/s 3.12596G/s     9.78153M                15.489                1.46804        100       46.9153k/s [BEST: throughput=  0.30 GB/s doc_throughput=   482 docs/s instructions=     9781075 cycles=     6629487 branch_miss=   60574 cache_miss=   13752 cache_ref=   3480181 items=       100 avg_time=   2131503 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                 311050693 ns    314649579 ns            2          1.9103M           147.893M        3.98293M        246.74M    994.347M              21.6168           3.21514       3.19697G          1.10647G                    24.0544                     1.11276           3.21514M    1.91021M   45.9988M       141.031M/s   3.98298M   246.739M    994.43M         21.6186    3.21491/s   3.197G/s     1.10647G               24.0544                1.11267      1000k       3.21491M/s [BEST: throughput=  0.15 GB/s doc_throughput=     3 docs/s instructions=  1106472994 cycles=   994347381 branch_miss= 1910295 cache_miss= 3982927 cache_ref= 246739753 items=   1000000 avg_time= 311050693 ns]
large_random<simdjson_ondemand>/manual_time            183751581 ns    187357751 ns            4          1.1924M           250.356M         2.3176M       134.456M    587.456M              12.7711           5.44268       3.19733G          689.959M                    14.9995                     1.17449           5.44268M    1.19279M   45.9988M       238.735M/s   2.31762M   134.456M   587.457M         12.7712    5.44213/s 3.19702G/s     689.959M               14.9995                1.17448      1000k       5.44213M/s [BEST: throughput=  0.25 GB/s doc_throughput=     5 docs/s instructions=   689958641 cycles=   587456304 branch_miss= 1192397 cache_miss= 2317604 cache_ref= 134455710 items=   1000000 avg_time= 183751581 ns]
large_random<simdjson_ondemand_unordered>/manual_time  184492162 ns    188095940 ns            4         1.20122M           249.384M        2.31817M       138.476M    589.759M              12.8212           5.42153        3.1974G          693.959M                    15.0865                     1.17668           5.42153M    1.20093M   45.9988M       237.776M/s   2.31817M   138.475M   589.791M         12.8219    5.42028/s 3.19683G/s     693.959M               15.0865                1.17662      1000k       5.42028M/s [BEST: throughput=  0.25 GB/s doc_throughput=     5 docs/s instructions=   693958641 cycles=   589759175 branch_miss= 1201217 cache_miss= 2318169 cache_ref= 138475560 items=   1000000 avg_time= 184492161 ns]
large_random<yyjson>/manual_time                       204558214 ns    208174401 ns            3         1.61511M           224.907M        4.91382M       235.107M    627.762M              13.6474           4.88942       3.06939G          908.191M                    19.7438                     1.44671           4.88942M    1.61453M   45.9988M       214.452M/s   4.91377M   235.106M   627.813M         13.6485    4.88858/s 3.06912G/s     908.191M               19.7438                 1.4466      1000k       4.88858M/s [BEST: throughput=  0.22 GB/s doc_throughput=     4 docs/s instructions=   908191194 cycles=   627762061 branch_miss= 1615114 cache_miss= 4913816 cache_ref= 235107110 items=   1000000 avg_time= 204558213 ns]
large_random<yyjson_insitu>/manual_time                198524567 ns    202144618 ns            4         1.61276M           231.788M         4.1966M       223.596M    615.599M              13.3829             5.039         3.102G          901.004M                    19.5876                     1.46362             5.039M    1.61391M   45.9988M       220.969M/s   4.19669M   223.598M   615.747M         13.3862    5.03716/s 3.10162G/s     901.004M               19.5876                1.46327      1000k       5.03716M/s [BEST: throughput=  0.23 GB/s doc_throughput=     5 docs/s instructions=   901003525 cycles=   615598955 branch_miss= 1612757 cache_miss= 4196600 cache_ref= 223595990 items=   1000000 avg_time= 198524566 ns]
large_random<rapidjson>/manual_time                    354504402 ns    358095012 ns            2         1.91371M           130.072M        4.95348M       764.762M    1.10313G              23.9818           2.82772       3.11935G          1.67651G                    36.4467                     1.51977           2.82772M    1.92311M   45.9988M       123.744M/s   4.95485M   764.766M    1.1034G         23.9876    2.82084/s 3.11252G/s     1.67651G               36.4469                 1.5194      1000k       2.82084M/s [BEST: throughput=  0.13 GB/s doc_throughput=     2 docs/s instructions=  1676505421 cycles=  1103133644 branch_miss= 1913714 cache_miss= 4953476 cache_ref= 764762211 items=   1000000 avg_time= 354504402 ns]
large_random<rapidjson_lossless>/manual_time           440173324 ns    421023257 ns            2         2.02966M           116.935M        4.95388M       955.334M    1.23034G              26.7472           2.54212       3.12768G          1.97648G                    42.9681                     1.60645           2.54212M    2.03884M   45.9988M       99.6604M/s   4.95542M    955.36M   1.23065G         26.7539    2.27183/s 2.79582G/s     1.97649G               42.9682                1.60606      1000k       2.27183M/s [BEST: throughput=  0.12 GB/s doc_throughput=     2 docs/s instructions=  1976481704 cycles=  1230340623 branch_miss= 2029657 cache_miss= 4953876 cache_ref= 955333689 items=   1000000 avg_time= 440173323 ns]
large_random<rapidjson_insitu>/manual_time             334928718 ns    338560412 ns            2          2.1483M           137.569M        5.67007M       749.483M    1041.74M              22.6472           2.99071       3.11554G           1.5665G                    34.0553                     1.50373           2.99071M    2.15316M   45.9988M       130.977M/s   5.67093M   749.509M   1041.17M         22.6347    2.98571/s 3.10863G/s     1.56651G               34.0554                1.50456      1000k       2.98571M/s [BEST: throughput=  0.14 GB/s doc_throughput=     2 docs/s instructions=  1566500975 cycles=  1041741811 branch_miss= 2148296 cache_miss= 5670072 cache_ref= 749483478 items=   1000000 avg_time= 334928717 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                       381347081 ns    392042957 ns            2         1099.65k           360.136M        6.94598M       246.871M    1.21883G              8.87677           2.62289       3.19685G          1.14604G                    8.34671                    0.940286           1.37515M    1098.77k   137.305M       343.373M/s   6.94601M    246.87M     1.219G         8.87802    2.62228/s 3.19655G/s     1.14604G               8.34671               0.940154   524.288k       1.37483M/s [BEST: throughput=  0.36 GB/s doc_throughput=     2 docs/s instructions=  1146044348 cycles=  1218825348 branch_miss= 1099647 cache_miss= 6945975 cache_ref= 246871273 items=    524288 avg_time= 381347081 ns]
kostya<simdjson_ondemand>/manual_time                  258228497 ns    268896794 ns            3         1.20396M           532.639M        5.28137M       137.077M    824.098M              6.00195           3.87924       3.19687G          796.072M                    5.79784                    0.965991           2.03384M    1.25213M   137.305M       507.087M/s   5.28137M   137.216M   825.387M         6.01134    3.87254/s 3.19634G/s     796.072M               5.79784               0.964483   524.288k       2.03033M/s [BEST: throughput=  0.53 GB/s doc_throughput=     3 docs/s instructions=   796071981 cycles=   824098385 branch_miss= 1203956 cache_miss= 5281367 cache_ref= 137076685 items=    524288 avg_time= 258228496 ns]
kostya<yyjson>/manual_time                             296805826 ns    307496613 ns            2         1.40968M            462.88M        7.97807M       346.025M    904.571M              6.58804           3.37118       3.04947G          1052.15M                    7.66288                     1.16315           1.76747M    1.39007M   137.305M       441.178M/s   7.97845M    345.95M   905.102M         6.59191    3.36921/s 3.04947G/s     1052.15M               7.66288                1.16247   524.288k       1.76643M/s [BEST: throughput=  0.46 GB/s doc_throughput=     3 docs/s instructions=  1052152278 cycles=   904570547 branch_miss= 1409685 cache_miss= 7978074 cache_ref= 346025233 items=    524288 avg_time= 296805825 ns]
kostya<yyjson_insitu>/manual_time                      278945880 ns    289654823 ns            3         1.37073M           492.467M        5.83905M       311.527M    868.522M               6.3255           3.58666        3.1151G           1030.7M                    7.50663                     1.18673           1.88045M     1.3792M   137.305M       469.425M/s   5.83921M   311.575M   868.983M         6.32885    3.58492/s 3.11524G/s      1030.7M               7.50663                 1.1861   524.288k       1.87953M/s [BEST: throughput=  0.49 GB/s doc_throughput=     3 docs/s instructions=  1030698155 cycles=   868522252 branch_miss= 1370733 cache_miss= 5839046 cache_ref= 311527054 items=    524288 avg_time= 278945880 ns]
kostya<rapidjson>/manual_time                          562193302 ns    572879736 ns            1         6.62412M           244.231M        5.38567M       972.852M    1.76173G              12.8308           1.77875       3.13368G          2.38981G                    17.4051                     1.35651           932.576k    6.62412M   137.305M       232.917M/s   5.38567M   972.852M   1.76173G         12.8308    1.77875/s 3.13368G/s     2.38981G               17.4051                1.35651   524.288k       932.576k/s [BEST: throughput=  0.24 GB/s doc_throughput=     1 docs/s instructions=  2389813588 cycles=  1761734982 branch_miss= 6624116 cache_miss= 5385669 cache_ref= 972851976 items=    524288 avg_time= 562193302 ns]
kostya<rapidjson_lossless>/manual_time                 590782683 ns    601436137 ns            1         7.16862M           232.412M        5.38884M       1094.17M     1.8531G              13.4962           1.69267       3.13668G          2.56492G                    18.6805                     1.38413           887.446k    7.16862M   137.305M       221.645M/s   5.38884M   1094.17M    1.8531G         13.4962    1.69267/s 3.13668G/s     2.56492G               18.6805                1.38413   524.288k       887.446k/s [BEST: throughput=  0.23 GB/s doc_throughput=     1 docs/s instructions=  2564919556 cycles=  1853097432 branch_miss= 7168621 cache_miss= 5388838 cache_ref=1094165915 items=    524288 avg_time= 590782683 ns]
kostya<rapidjson_insitu>/manual_time                   533434923 ns    544129402 ns            1         6.04942M           257.398M        6.36006M       873.779M    1.67014G              12.1637           1.87464       3.13092G          2.17945G                    15.8731                     1.30495           982.853k    6.04942M   137.305M       245.474M/s   6.36006M   873.779M   1.67014G         12.1637    1.87464/s 3.13092G/s     2.17945G               15.8731                1.30495   524.288k       982.853k/s [BEST: throughput=  0.26 GB/s doc_throughput=     1 docs/s instructions=  2179453241 cycles=  1670142104 branch_miss= 6049424 cache_miss= 6360064 cache_ref= 873778827 items=    524288 avg_time= 533434922 ns]
distinct_user_id<simdjson_dom>/manual_time               1582562 ns      1669288 ns          443          17.781k           401.573M          26.49k       891.015k    5.03464M              7.97233           635.888       3.20147G          3.85168M                    6.09911                    0.765035           73.1271k    17.7411k   631.515k        380.56M/s   26.5025k   885.918k   5.06035M         8.01303    631.887/s 3.19757G/s     3.85168M               6.09911               0.761149        115        72.667k/s [BEST: throughput=  0.40 GB/s doc_throughput=   635 docs/s instructions=     3851681 cycles=     5034644 branch_miss=   17781 cache_miss=   26490 cache_ref=    891015 items=       115 avg_time=   1582562 ns]
distinct_user_id<simdjson_ondemand>/manual_time          1052330 ns      1133622 ns          665           6.694k            601.45M         22.387k       379.403k    3.36229M              5.32416           952.392       3.20221G          2.69546M                    4.26824                    0.801675           109.525k    6.80649k   631.515k       572.311M/s   22.3868k   379.675k   3.36594M         5.32995    950.272/s 3.19856G/s     2.69546M               4.26824               0.800803        115       109.281k/s [BEST: throughput=  0.60 GB/s doc_throughput=   952 docs/s instructions=     2695459 cycles=     3362286 branch_miss=    6694 cache_miss=   22387 cache_ref=    379403 items=       115 avg_time=   1052329 ns]
distinct_user_id<yyjson>/manual_time                     1226438 ns      1311599 ns          576          48.433k            584.43M         24.216k       1.47658M    3.46019M              5.47919           925.441        3.2022G          3.51463M                     5.5654                     1.01573           106.426k    48.1961k   631.515k       491.064M/s   24.1907k   1.47775M   3.69463M         5.85042    815.369/s 3.01249G/s     3.51478M               5.56563               0.951322        115       93.7675k/s [BEST: throughput=  0.58 GB/s doc_throughput=   925 docs/s instructions=     3514631 cycles=     3460188 branch_miss=   48433 cache_miss=   24216 cache_ref=   1476576 items=       115 avg_time=   1226438 ns]
distinct_user_id<yyjson_insitu>/manual_time              1144418 ns      1230052 ns          614            48.1k           608.547M         14.233k       1.31871M    3.32344M              5.26265            963.63       3.20257G          3.41557M                    5.40853                     1.02772           110.817k    48.1675k   631.515k       526.259M/s   14.2891k   1.31869M   3.54455M         5.61278    873.807/s 3.09725G/s     3.41572M               5.40877               0.963654        115       100.488k/s [BEST: throughput=  0.61 GB/s doc_throughput=   963 docs/s instructions=     3415568 cycles=     3323440 branch_miss=   48100 cache_miss=   14233 cache_ref=   1318714 items=       115 avg_time=   1144417 ns]
distinct_user_id<rapidjson>/manual_time                  2819279 ns      2904856 ns          247          79.819k           230.147M         13.494k       6.27172M    8.78295M              13.9078           364.436       3.20082G          13.3655M                    21.1642                     1.52175           41.9101k    80.0497k   631.515k       213.622M/s   13.7116k   6.27073M   8.83774M         13.9945    354.701/s 3.13475G/s     13.3661M               21.1652                1.51239        115       40.7906k/s [BEST: throughput=  0.23 GB/s doc_throughput=   364 docs/s instructions=    13365502 cycles=     8782954 branch_miss=   79819 cache_miss=   13494 cache_ref=   6271720 items=       115 avg_time=   2819279 ns]
distinct_user_id<rapidjson_insitu>/manual_time           2119990 ns      2206619 ns          332          60.419k           306.445M         14.075k        3.4668M    6.59684M               10.446           485.254       3.20114G          9.74248M                    15.4272                     1.47684           55.8042k    60.5465k   631.515k       284.086M/s   14.2234k   3.46696M   6.63135M         10.5007      471.7/s 3.12801G/s     9.74308M               15.4281                1.46924        115       54.2455k/s [BEST: throughput=  0.31 GB/s doc_throughput=   485 docs/s instructions=     9742484 cycles=     6596835 branch_miss=   60419 cache_miss=   14075 cache_ref=   3466805 items=       115 avg_time=   2119990 ns]
find_tweet<simdjson_dom>/manual_time                     1529971 ns      1611892 ns          457          17.072k            415.81M         23.469k       875.961k    4.86198M              7.69892           658.432       3.20129G          3.76236M                    5.95767                    0.773832            658.432    17.1125k   631.515k       393.641M/s   23.4813k   869.034k   4.89283M         7.74777    653.607/s 3.19799G/s     3.76236M               5.95767               0.768953          1        653.607/s [BEST: throughput=  0.42 GB/s doc_throughput=   658 docs/s instructions=     3762360 cycles=     4861984 branch_miss=   17072 cache_miss=   23469 cache_ref=    875961 items=         1 avg_time=   1529970 ns]
find_tweet<simdjson_ondemand>/manual_time                 914547 ns       997282 ns          765           3.965k            691.92M         11.562k       193.938k    2.92235M              4.62752           1095.65       3.20187G          2.05902M                    3.26045                    0.704578            1095.65    4.09537k   631.515k       658.533M/s    11.561k   193.947k   2.92517M         4.63199    1093.44/s 3.19849G/s     2.05902M               3.26045               0.703899          1        1093.44/s [BEST: throughput=  0.69 GB/s doc_throughput=  1095 docs/s instructions=     2059024 cycles=     2922349 branch_miss=    3965 cache_miss=   11562 cache_ref=    193938 items=         1 avg_time=    914547 ns]
find_tweet<yyjson>/manual_time                           1188704 ns      1274292 ns          590           48.12k            602.93M         21.643k       1.46015M    3.35409M              5.31118           954.736       3.20227G          3.45928M                    5.47775                     1.03136            954.736    47.9882k   631.515k       506.652M/s   21.6964k   1.46104M   3.57517M         5.66125    841.252/s 3.00762G/s     3.45951M               5.47811               0.967649          1        841.252/s [BEST: throughput=  0.60 GB/s doc_throughput=   954 docs/s instructions=     3459283 cycles=     3354092 branch_miss=   48120 cache_miss=   21643 cache_ref=   1460145 items=         1 avg_time=   1188704 ns]
find_tweet<yyjson_insitu>/manual_time                    1110369 ns      1196901 ns          632          47.859k           628.936M         11.751k        1.3014M    3.21517M               5.0912           995.917       3.20204G           3.3603M                    5.32101                     1.04514            995.917    47.9339k   631.515k       542.396M/s   11.7851k    1.3016M   3.43547M         5.44004    900.601/s 3.09399G/s     3.36045M               5.32125               0.978163          1        900.601/s [BEST: throughput=  0.63 GB/s doc_throughput=   995 docs/s instructions=     3360299 cycles=     3215167 branch_miss=   47859 cache_miss=   11751 cache_ref=   1301399 items=         1 avg_time=   1110369 ns]
find_tweet<rapidjson>/manual_time                        2796947 ns      2885331 ns          250          80.002k           232.012M         10.865k        6.2641M    8.71182M              13.7951            367.39       3.20064G          13.3222M                    21.0956                     1.52921             367.39    79.9703k   631.515k       215.328M/s   11.0603k   6.25894M   8.76545M           13.88    357.533/s 3.13394G/s     13.3227M               21.0965                1.51991          1        357.533/s [BEST: throughput=  0.23 GB/s doc_throughput=   367 docs/s instructions=    13322204 cycles=     8711824 branch_miss=   80002 cache_miss=   10865 cache_ref=   6264101 items=         1 avg_time=   2796946 ns]
find_tweet<rapidjson_insitu>/manual_time                 2360029 ns      2312511 ns          337          60.454k           310.486M         10.646k       3.45308M    6.51082M              10.3098           491.653       3.20107G          9.69717M                    15.3554                     1.48939            491.653    60.4877k   631.515k       255.192M/s   10.8047k   3.45276M   6.53458M         10.3475    423.724/s 2.76886G/s     9.69762M               15.3561                1.48405          1        423.724/s [BEST: throughput=  0.31 GB/s doc_throughput=   491 docs/s instructions=     9697173 cycles=     6510821 branch_miss=   60454 cache_miss=   10646 cache_ref=   3453076 items=         1 avg_time=   2360029 ns]
