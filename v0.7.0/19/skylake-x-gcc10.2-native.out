run_benchmark: v0.8.0~19 /home/jkeiser/simdjson_benchmark_results/v0.7.0/19/skylake-x-gcc10.2-native.json -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native
git reset --hard v0.8.0~19
HEAD is now at 920f5355 Reamalgamate
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- git Version: v0.2.1-920f5355
-- Version: 0.2.1
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 11
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
make[3]: Nothing to be done for '_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build'.
[ 72%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
make[3]: Nothing to be done for 'jsonexamples/generated/CMakeFiles/generated-data.dir/build'.
[ 72%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/g++-10  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/src  -march=native -O3 -DNDEBUG -fPIC   -pthread -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/g++-10 -fPIC -march=native -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.6 -o ../libsimdjson.so.6.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.6.0.0 ../libsimdjson.so.6 ../libsimdjson.so
[ 81%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
make[3]: Nothing to be done for 'dependencies/CMakeFiles/yyjson.dir/build'.
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/g++-10  -DRAPIDJSON_HAS_STDSTRING -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_COMPETITION_RAPIDJSON -DSIMDJSON_COMPETITION_YYJSON -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/rapidjson/include  -march=native -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/g++-10  -march=native -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.6.0.0 ../_deps/google_benchmarks/src/libbenchmark.a ../dependencies/libyyjson.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/19/skylake-x-gcc10.2-native.json --benchmark_out_format=json
2021-01-24 23:38:55
Running benchmark/bench_ondemand
Run on (4 X 3200 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 1024 KiB (x4)
  L3 Unified 8448 KiB (x1)
Load Average: 1.00, 1.00, 1.00
***WARNING*** CPU scaling is enabled, the benchmark real time measurements may be noisy and will incur extra overhead.
simdjson::dom implementation:      haswell
simdjson::ondemand implementation: haswell

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                  322569 ns       393310 ns         2171            3.76k           1.97286G               0        33.324k    1022.46k              1.61905          3.12401k       3.19417G          3.07044M                    4.86202                       3.003           312.401k    3.86733k   631.515k       1.82331G/s   0.372639   33.5935k    1029.3k         1.62989   3.10011k/s 3.19094G/s     3.07044M               4.86202                2.98304        100       310.011k/s [BEST: throughput=  1.97 GB/s doc_throughput=  3124 docs/s instructions=     3070441 cycles=     1022457 branch_miss=    3760 cache_miss=       0 cache_ref=     33324 items=       100 avg_time=    322569 ns]
partial_tweets<simdjson_ondemand>/manual_time             223038 ns       279767 ns         3140           2.116k           2.85427G               0        12.225k    706.588k              1.11888          4.51971k       3.19357G          2.23694M                    3.54218                     3.16584           451.971k     2.2434k   631.515k       2.63697G/s  0.0665605    12.326k   711.795k         1.12712   4.48354k/s 3.19136G/s     2.23694M               3.54218                3.14268        100       448.354k/s [BEST: throughput=  2.85 GB/s doc_throughput=  4519 docs/s instructions=     2236942 cycles=      706588 branch_miss=    2116 cache_miss=       0 cache_ref=     12225 items=       100 avg_time=    223037 ns]
partial_tweets<yyjson>/manual_time                        853276 ns       933079 ns          820          10.033k           1.26869G             191        28.208k    1.58993M              2.51764          2.00897k       3.19411G          2.90836M                    4.60537                     1.82924           200.897k    7.76418k   631.515k       705.821M/s    635.851   25.6824k   1.75366M          2.7769   1.17195k/s  2.0552G/s     2.90885M               4.60614                1.65873        100       117.195k/s [BEST: throughput=  1.27 GB/s doc_throughput=  2008 docs/s instructions=     2908362 cycles=     1589927 branch_miss=   10033 cache_miss=     191 cache_ref=     28208 items=       100 avg_time=    853275 ns]
partial_tweets<yyjson_insitu>/manual_time                 574502 ns       639981 ns         1228           7.594k            1.5284G             115        14.998k    1.31944M              2.08933          2.42021k       3.19332G          2.90825M                     4.6052                     2.20415           242.021k    7.58457k   631.515k       1048.32M/s    120.814   11.7362k   1.43204M         2.26762   1.74064k/s 2.49266G/s     2.90852M               4.60562                2.03103        100       174.064k/s [BEST: throughput=  1.53 GB/s doc_throughput=  2420 docs/s instructions=     2908252 cycles=     1319443 branch_miss=    7594 cache_miss=     115 cache_ref=     14998 items=       100 avg_time=    574502 ns]
partial_tweets<rapidjson>/manual_time                    1906320 ns      1974209 ns          368          26.077k           386.631M         12.461k        22.707k    5.21501M              8.25794           612.228       3.19277G          13.1153M                     20.768                     2.51492           61.2228k    27.0163k   631.515k       315.928M/s    407.465   15.4674k   5.40119M         8.55274    524.571/s 2.83331G/s      13.116M               20.7691                2.42835        100       52.4571k/s [BEST: throughput=  0.39 GB/s doc_throughput=   612 docs/s instructions=    13115332 cycles=     5215011 branch_miss=   26077 cache_miss=   12461 cache_ref=     22707 items=       100 avg_time=   1906319 ns]
partial_tweets<rapidjson_insitu>/manual_time             1212260 ns      1275022 ns          579          25.036k           603.284M             194        14.788k     3.3424M              5.29267           955.297       3.19299G           9.8228M                    15.5543                     2.93884           95.5297k    26.0908k   631.515k       496.807M/s    190.943   9.78736k   3.46815M         5.49179    824.906/s  2.8609G/s     9.82319M                15.555                 2.8324        100       82.4906k/s [BEST: throughput=  0.60 GB/s doc_throughput=   955 docs/s instructions=     9822798 cycles=     3342402 branch_miss=   25036 cache_miss=     194 cache_ref=     14788 items=       100 avg_time=   1212259 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                 100803727 ns    106955116 ns            7         851.697k           456.987M        6.75538M       6.89464M    320.937M              6.97708           9.93477       3.18844G          998.581M                    21.7089                     3.11145           9.93477M     851.22k   45.9988M       435.181M/s   6.80113M   6.89485M   321.378M         6.98667    9.92027/s 3.18816G/s     998.581M               21.7089                3.10718      1000k       9.92027M/s [BEST: throughput=  0.46 GB/s doc_throughput=     9 docs/s instructions=   998581006 cycles=   320937030 branch_miss=  851697 cache_miss= 6755376 cache_ref=   6894635 items=   1000000 avg_time= 100803727 ns]
large_random<simdjson_ondemand>/manual_time             67494784 ns     73606492 ns           10         866.397k           682.098M        3.50726M       3.57267M    215.032M              4.67473           14.8286       3.18863G          650.959M                    14.1517                     3.02726           14.8286M    866.162k   45.9988M       649.944M/s   3.51567M   3.57269M   215.207M         4.67854     14.816/s  3.1885G/s     650.959M               14.1517                 3.0248      1000k        14.816M/s [BEST: throughput=  0.68 GB/s doc_throughput=    14 docs/s instructions=   650958757 cycles=   215031981 branch_miss=  866397 cache_miss= 3507261 cache_ref=   3572669 items=   1000000 avg_time=  67494783 ns]
large_random<simdjson_ondemand_unordered>/manual_time   70334270 ns     76435892 ns           10         865.075k           654.353M        3.50811M       3.57262M    224.164M              4.87325           14.2254       3.18883G          654.959M                    14.2386                     2.92179           14.2254M    864.859k   45.9988M       623.705M/s   3.51571M   3.57261M    224.25M         4.87512    14.2178/s 3.18834G/s     654.959M               14.2386                2.92067      1000k       14.2178M/s [BEST: throughput=  0.65 GB/s doc_throughput=    14 docs/s instructions=   654958759 cycles=   224163607 branch_miss=  865075 cache_miss= 3508114 cache_ref=   3572617 items=   1000000 avg_time=  70334270 ns]
large_random<yyjson>/manual_time                       157534764 ns    163692375 ns            4         658.082k            292.14M        4.20911M       5.25793M    362.673M              7.88441           6.35103       2.30335G           942.15M                    20.4821                     2.59779           6.35103M    661.338k   45.9988M       278.465M/s   4.20869M   5.26329M   362.962M         7.89068    6.34781/s 2.30401G/s      942.15M               20.4821                2.59573      1000k       6.34781M/s [BEST: throughput=  0.29 GB/s doc_throughput=     6 docs/s instructions=   942149603 cycles=   362673166 branch_miss=  658082 cache_miss= 4209110 cache_ref=   5257933 items=   1000000 avg_time= 157534763 ns]
large_random<yyjson_insitu>/manual_time                131432625 ns    137610295 ns            5         658.085k            350.14M        3.49168M       4.51759M    320.117M              6.95925           7.61195       2.43671G          936.029M                     20.349                     2.92402           7.61195M    660.335k   45.9988M       333.767M/s   3.49206M     4.531M   320.272M         6.96261    7.60846/s 2.43677G/s     936.029M                20.349                2.92261      1000k       7.60846M/s [BEST: throughput=  0.35 GB/s doc_throughput=     7 docs/s instructions=   936028838 cycles=   320116875 branch_miss=  658085 cache_miss= 3491682 cache_ref=   4517589 items=   1000000 avg_time= 131432625 ns]
large_random<rapidjson>/manual_time                    210566587 ns    216749013 ns            3          595.47k           227.528M        4.34535M       5.16614M    576.682M              12.5369           4.94639       2.85249G          1.66212G                     36.134                     2.88221           4.94639M    595.144k   45.9988M       208.332M/s   4.07949M   5.07327M    581.73M         12.6466    4.74909/s 2.76269G/s     1.66213G               36.1342                2.85722      1000k       4.74909M/s [BEST: throughput=  0.23 GB/s doc_throughput=     4 docs/s instructions=  1662121316 cycles=   576682316 branch_miss=  595470 cache_miss= 4345349 cache_ref=   5166140 items=   1000000 avg_time= 210566587 ns]
large_random<rapidjson_lossless>/manual_time           238482677 ns    244653990 ns            3         659.614k           199.752M        4.33299M       5.18473M    666.031M              14.4793           4.34254       2.89227G          2.01909G                    43.8945                     3.03153           4.34254M    659.615k   45.9988M       183.946M/s   4.07024M   5.10248M   670.418M         14.5747    4.19318/s 2.81118G/s      2.0191G               43.8946                 3.0117      1000k       4.19318M/s [BEST: throughput=  0.20 GB/s doc_throughput=     4 docs/s instructions=  2019091249 cycles=   666031062 branch_miss=  659614 cache_miss= 4332987 cache_ref=   5184730 items=   1000000 avg_time= 238482676 ns]
large_random<rapidjson_insitu>/manual_time             189948127 ns    196123774 ns            4          742.51k           257.022M        5.03576M       5.88297M    502.678M              10.9281           5.58758       2.80875G          1.49412G                    32.4818                     2.97232           5.58758M    859.663k   45.9988M       230.946M/s    4.7503M   5.78101M   513.079M         11.1542     5.2646/s 2.70115G/s     1.49413G                32.482                2.91209      1000k        5.2646M/s [BEST: throughput=  0.26 GB/s doc_throughput=     5 docs/s instructions=  1494121156 cycles=   502678112 branch_miss=  742510 cache_miss= 5035758 cache_ref=   5882973 items=   1000000 avg_time= 189948127 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                        98861014 ns    118089304 ns            7         447.562k           1.39095G        10.1903M       10.3149M     314.72M              2.29213           10.1304       3.18823G           972.65M                    7.08386                     3.09052           5.31122M    448.151k   137.305M       1.29349G/s    10.239M    10.315M   315.189M         2.29554    10.1152/s  3.1882G/s      972.65M               7.08386                3.08592   524.288k       5.30328M/s [BEST: throughput=  1.39 GB/s doc_throughput=    10 docs/s instructions=   972649989 cycles=   314720483 branch_miss=  447562 cache_miss=10190283 cache_ref=  10314949 items=    524288 avg_time=  98861014 ns]
kostya<simdjson_ondemand>/manual_time                   73841460 ns     92824135 ns            9         465.595k            1.8623G        6.42825M       6.47056M    235.077M              1.71208           13.5633       3.18842G          699.692M                     5.0959                     2.97643           7.11106M    466.401k   137.305M       1.73175G/s   6.44018M    6.4706M   235.436M         1.71469    13.5425/s  3.1884G/s     699.692M                5.0959                 2.9719   524.288k       7.10018M/s [BEST: throughput=  1.86 GB/s doc_throughput=    13 docs/s instructions=   699692089 cycles=   235077316 branch_miss=  465595 cache_miss= 6428251 cache_ref=   6470561 items=    524288 avg_time=  73841459 ns]
kostya<yyjson>/manual_time                             262971691 ns    282068473 ns            3         420.524k           522.191M        8.49257M       9.88482M    606.309M              4.41579           3.80314       2.30588G          983.521M                    7.16304                     1.62214           1.99394M      421.4k   137.305M        497.94M/s    8.4927M   9.88838M   606.601M         4.41791    3.80269/s 2.30672G/s     983.521M               7.16304                1.62136   524.288k       1.99371M/s [BEST: throughput=  0.52 GB/s doc_throughput=     3 docs/s instructions=   983520945 cycles=   606309392 branch_miss=  420524 cache_miss= 8492573 cache_ref=   9884821 items=    524288 avg_time= 262971690 ns]
kostya<yyjson_insitu>/manual_time                      185260830 ns    204467124 ns            4         418.686k           741.203M        6.35916M       7.76648M    479.554M              3.49262           5.39822       2.58874G          965.251M                    7.02998                     2.01281           2.83022M    417.151k   137.305M        706.81M/s   6.35871M   7.76465M   479.449M         3.49185     5.3978/s 2.58797G/s     965.251M               7.02998                2.01325   524.288k          2.83M/s [BEST: throughput=  0.74 GB/s doc_throughput=     5 docs/s instructions=   965251175 cycles=   479554351 branch_miss=  418686 cache_miss= 6359165 cache_ref=   7766484 items=    524288 avg_time= 185260830 ns]
kostya<rapidjson>/manual_time                          293282714 ns    312554379 ns            2         952.583k           473.716M        5.19096M       6.40056M    827.325M              6.02546            3.4501       2.85436G          2.28931G                    16.6732                     2.76713           1.80885M    952.945k   137.305M       446.478M/s   5.06592M   6.36251M   829.724M         6.04293    3.40968/s 2.82909G/s     2.28932G               16.6732                2.75913   524.288k       1.78765M/s [BEST: throughput=  0.47 GB/s doc_throughput=     3 docs/s instructions=  2289314844 cycles=   827325430 branch_miss=  952583 cache_miss= 5190956 cache_ref=   6400561 items=    524288 avg_time= 293282714 ns]
kostya<rapidjson_lossless>/manual_time                 329557968 ns    348841807 ns            2         2.34239M           420.821M        5.19332M       6.39824M    943.454M              6.87123           3.06486       2.89155G          2.49326G                    18.1585                     2.64269           1.60687M    2.34212M   137.305M       397.333M/s   5.06632M   6.35762M   945.399M          6.8854    3.03437/s 2.86869G/s     2.49326G               18.1585                2.63725   524.288k       1.59088M/s [BEST: throughput=  0.42 GB/s doc_throughput=     3 docs/s instructions=  2493255143 cycles=   943453895 branch_miss= 2342390 cache_miss= 5193325 cache_ref=   6398236 items=    524288 avg_time= 329557967 ns]
kostya<rapidjson_insitu>/manual_time                   276199882 ns    295464307 ns            3          1049.3k           505.235M         7.3286M       8.53004M    769.761M              5.60621           3.67965       2.83245G          2.03958G                    14.8544                     2.64963            1.9292M    1063.55k   137.305M       474.092M/s   7.15946M   8.48994M   772.514M         5.62626    3.62057/s 2.79694G/s     2.03958G               14.8544                2.64019   524.288k       1.89822M/s [BEST: throughput=  0.51 GB/s doc_throughput=     3 docs/s instructions=  2039579818 cycles=   769760976 branch_miss= 1049303 cache_miss= 7328604 cache_ref=   8530042 items=    524288 avg_time= 276199882 ns]
distinct_user_id<simdjson_dom>/manual_time                315527 ns       393922 ns         2219           3.888k           2.01582G               0        34.179k    1000.67k              1.58456          3.19204k       3.19419G          3.01136M                    4.76848                     3.00934           367.085k    4.01445k   631.515k       1.86401G/s   0.107706   34.1207k   1006.74k         1.59417    3.1693k/s 3.19067G/s     3.01137M               4.76848                 2.9912        115        364.47k/s [BEST: throughput=  2.02 GB/s doc_throughput=  3192 docs/s instructions=     3011365 cycles=     1000674 branch_miss=    3888 cache_miss=       0 cache_ref=     34179 items=       115 avg_time=    315526 ns]
distinct_user_id<simdjson_ondemand>/manual_time           230413 ns       292157 ns         3038           2.294k           2.75895G               0         7.025k    731.102k               1.1577          4.36878k       3.19402G          2.18818M                    3.46496                     2.99298           502.409k    2.42891k   631.515k       2.55257G/s  0.0490454   7.08489k     735.2k         1.16419   4.34003k/s 3.19079G/s     2.18818M               3.46496                 2.9763        115       499.104k/s [BEST: throughput=  2.76 GB/s doc_throughput=  4368 docs/s instructions=     2188175 cycles=      731102 branch_miss=    2294 cache_miss=       0 cache_ref=      7025 items=       115 avg_time=    230412 ns]
distinct_user_id<yyjson>/manual_time                      849353 ns       937957 ns          980          10.125k           1.27782G             201        27.549k    1.57869M              2.49985          2.02343k       3.19437G          2.87499M                    4.55252                     1.82112           232.694k    7.82084k   631.515k       709.081M/s    460.484   25.5098k   1.74425M         2.76201   1.17737k/s 2.05362G/s     2.87538M               4.55315                1.64849        115       135.397k/s [BEST: throughput=  1.28 GB/s doc_throughput=  2023 docs/s instructions=     2874985 cycles=     1578691 branch_miss=   10125 cache_miss=     201 cache_ref=     27549 items=       115 avg_time=    849352 ns]
distinct_user_id<yyjson_insitu>/manual_time               571701 ns       645535 ns         1234           7.169k           1.55077G          1.684k        14.029k    1.29507M              2.05073          2.45564k       3.18021G          2.87458M                    4.55188                     2.21964           282.398k    7.66068k   631.515k       1053.45M/s    120.408    11.641k   1.42283M         2.25304   1.74917k/s 2.48876G/s     2.87484M                4.5523                2.02051        115       201.154k/s [BEST: throughput=  1.55 GB/s doc_throughput=  2455 docs/s instructions=     2874581 cycles=     1295065 branch_miss=    7169 cache_miss=    1684 cache_ref=     14029 items=       115 avg_time=    571701 ns]
distinct_user_id<rapidjson>/manual_time                  1884018 ns      1958888 ns          372          26.643k            388.69M          7.561k        22.817k    5.18753M              8.21442           615.488       3.19286G          13.0567M                    20.6753                     2.51695           70.7812k    27.2267k   631.515k       319.668M/s   1.31171k   16.3202k   5.37801M         8.51605    530.781/s 2.85455G/s     13.0574M               20.6763                2.42793        115       61.0398k/s [BEST: throughput=  0.39 GB/s doc_throughput=   615 docs/s instructions=    13056744 cycles=     5187530 branch_miss=   26643 cache_miss=    7561 cache_ref=     22817 items=       115 avg_time=   1884017 ns]
distinct_user_id<rapidjson_insitu>/manual_time           1195108 ns      1265571 ns          634          25.323k           603.535M             361        14.544k    3.34097M               5.2904           955.694       3.19294G          9.77412M                    15.4773                     2.92554           109.905k    26.5825k   631.515k       503.937M/s   1.20554k   11.1549k   3.46984M         5.49446    836.744/s 2.90337G/s     9.77467M               15.4781                2.81704        115       96.2256k/s [BEST: throughput=  0.60 GB/s doc_throughput=   955 docs/s instructions=     9774120 cycles=     3340966 branch_miss=   25323 cache_miss=     361 cache_ref=     14544 items=       115 avg_time=   1195108 ns]
find_tweet<simdjson_dom>/manual_time                      300618 ns       374174 ns         2328           3.586k           2.11549G               0        29.951k    953.419k              1.50973          3.34987k       3.19383G          2.93033M                    4.64016                     3.07349           3.34987k    3.73356k   631.515k       1.95645G/s   0.421821   29.8621k   959.162k         1.51883   3.32648k/s 3.19063G/s     2.93033M               4.64016                3.05509          1       3.32648k/s [BEST: throughput=  2.12 GB/s doc_throughput=  3349 docs/s instructions=     2930328 cycles=      953419 branch_miss=    3586 cache_miss=       0 cache_ref=     29951 items=         1 avg_time=    300618 ns]
find_tweet<simdjson_ondemand>/manual_time                 147026 ns       210979 ns         4757           1.289k           4.32328G               0         6.991k    466.648k             0.738934          6.84589k       3.19462G          1.56922M                    2.48485                     3.36274           6.84589k    1.38422k   631.515k       4.00028G/s  0.0313223   7.09332k   469.222k         0.74301   6.80153k/s 3.19143G/s     1.56922M               2.48485                3.34429          1       6.80153k/s [BEST: throughput=  4.32 GB/s doc_throughput=  6845 docs/s instructions=     1569217 cycles=      466648 branch_miss=    1289 cache_miss=       0 cache_ref=      6991 items=         1 avg_time=    147025 ns]
find_tweet<yyjson>/manual_time                            838839 ns       925376 ns          862           9.462k           1.31103G             240        27.265k    1.53859M              2.43635            2.076k       3.19412G          2.82414M                    4.47201                     1.83554             2.076k     7.6097k   631.515k       717.968M/s    444.416   24.5312k   1.71204M           2.711   1.19212k/s 2.04096G/s     2.82483M               4.47311                1.64998          1       1.19212k/s [BEST: throughput=  1.31 GB/s doc_throughput=  2076 docs/s instructions=     2824142 cycles=     1538592 branch_miss=    9462 cache_miss=     240 cache_ref=     27265 items=         1 avg_time=    838839 ns]
find_tweet<yyjson_insitu>/manual_time                     560251 ns       629393 ns         1259           7.257k           1.58195G             161        14.001k    1.27493M              2.01885          2.50501k       3.19372G          2.82382M                    4.47151                     2.21488           2.50501k    7.43368k   631.515k       1074.98M/s    8.92216   9.84615k   1.38698M         2.19627   1.78492k/s 2.47564G/s     2.82409M               4.47192                2.03614          1       1.78492k/s [BEST: throughput=  1.58 GB/s doc_throughput=  2505 docs/s instructions=     2823823 cycles=     1274934 branch_miss=    7257 cache_miss=     161 cache_ref=     14001 items=         1 avg_time=    560250 ns]
find_tweet<rapidjson>/manual_time                        1866380 ns      1937591 ns          375          26.042k           391.799M          11.97k        21.091k    5.14633M              8.14917           620.411       3.19283G          12.9885M                    20.5673                     2.52385            620.411    26.9482k   631.515k       322.689M/s    1029.17   13.4411k   5.32227M         8.42778    535.796/s 2.85165G/s     12.9894M               20.5686                2.44057          1        535.796/s [BEST: throughput=  0.39 GB/s doc_throughput=   620 docs/s instructions=    12988540 cycles=     5146326 branch_miss=   26042 cache_miss=   11970 cache_ref=     21091 items=         1 avg_time=   1866380 ns]
find_tweet<rapidjson_insitu>/manual_time                 1171359 ns      1236988 ns          647          25.101k           608.817M              12        13.196k     3.3118M              5.24422           964.058       3.19277G           9.7167M                    15.3863                     2.93396            964.058    25.3096k   631.515k       514.155M/s    1016.86   8.26068k    3.3937M          5.3739     853.71/s 2.89723G/s     9.71704M               15.3869                2.86326          1         853.71/s [BEST: throughput=  0.61 GB/s doc_throughput=   964 docs/s instructions=     9716702 cycles=     3311801 branch_miss=   25101 cache_miss=      12 cache_ref=     13196 items=         1 avg_time=   1171358 ns]
