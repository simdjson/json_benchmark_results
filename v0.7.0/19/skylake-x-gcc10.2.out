run_benchmark: v0.8.0~19 /home/jkeiser/simdjson_benchmark_results/v0.7.0/19/skylake-x-gcc10.2.json -DCMAKE_BUILD_TYPE=Release
git reset --hard v0.8.0~19
HEAD is now at 920f5355 Reamalgamate
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- git Version: v0.2.1-920f5355
-- Version: 0.2.1
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 11
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
make[3]: Nothing to be done for '_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build'.
[ 72%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
make[3]: Nothing to be done for 'jsonexamples/generated/CMakeFiles/generated-data.dir/build'.
[ 72%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/g++-10  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/src  -O3 -DNDEBUG -fPIC   -pthread -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/g++-10 -fPIC -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.6 -o ../libsimdjson.so.6.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.6.0.0 ../libsimdjson.so.6 ../libsimdjson.so
[ 81%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
make[3]: Nothing to be done for 'dependencies/CMakeFiles/yyjson.dir/build'.
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/g++-10  -DRAPIDJSON_HAS_STDSTRING -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_COMPETITION_RAPIDJSON -DSIMDJSON_COMPETITION_YYJSON -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/rapidjson/include  -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/g++-10  -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.6.0.0 ../_deps/google_benchmarks/src/libbenchmark.a ../dependencies/libyyjson.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/19/skylake-x-gcc10.2.json --benchmark_out_format=json
2021-01-24 23:28:47
Running benchmark/bench_ondemand
Run on (4 X 3200 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 1024 KiB (x4)
  L3 Unified 8448 KiB (x1)
Load Average: 1.00, 1.00, 1.00
***WARNING*** CPU scaling is enabled, the benchmark real time measurements may be noisy and will incur extra overhead.
simdjson::dom implementation:      haswell
simdjson::ondemand implementation: fallback

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                  302265 ns       370154 ns         2310           3.865k           2.10297G               0        33.658k    959.177k              1.51885          3.33004k       3.19409G          2.96251M                    4.69112                      3.0886           333.004k    4.00659k   631.515k       1.94579G/s    1.55498   33.6008k   964.369k         1.52707   3.30835k/s 3.19047G/s     2.96251M               4.69112                3.07197        100       330.835k/s [BEST: throughput=  2.10 GB/s doc_throughput=  3330 docs/s instructions=     2962511 cycles=      959177 branch_miss=    3865 cache_miss=       0 cache_ref=     33658 items=       100 avg_time=    302265 ns]
partial_tweets<simdjson_ondemand>/manual_time            1290097 ns      1343812 ns          541          32.335k           492.209M               0        10.803k     4.0965M              6.48678            779.41       3.19286G          10.6861M                    16.9214                      2.6086            77.941k    32.8852k   631.515k       466.833M/s   0.650647   10.9687k   4.11517M         6.51635    775.135/s 3.18981G/s     10.6861M               16.9214                2.59676        100       77.5135k/s [BEST: throughput=  0.49 GB/s doc_throughput=   779 docs/s instructions=    10686125 cycles=     4096502 branch_miss=   32335 cache_miss=       0 cache_ref=     10803 items=       100 avg_time=   1290097 ns]
partial_tweets<yyjson>/manual_time                        819334 ns       896156 ns          851          10.086k           1.34079G             231        28.422k    1.50439M              2.38219          2.12314k       3.19402G          2.90844M                     4.6055                     1.93331           212.314k    7.56061k   631.515k        735.06M/s    652.691   26.1708k    1.6564M          2.6229    1.2205k/s 2.02164G/s     2.90885M               4.60614                1.75613        100        122.05k/s [BEST: throughput=  1.34 GB/s doc_throughput=  2123 docs/s instructions=     2908443 cycles=     1504388 branch_miss=   10086 cache_miss=     231 cache_ref=     28422 items=       100 avg_time=    819334 ns]
partial_tweets<yyjson_insitu>/manual_time                 545831 ns       607721 ns         1295           6.848k           1.64875G          1.752k        14.383k    1.21586M               1.9253          2.61078k       3.17434G          2.90805M                    4.60487                     2.39177           261.078k    7.33356k   631.515k       1103.38M/s    131.758   12.3468k   1.34682M         2.13268   1.83207k/s 2.46747G/s     2.90831M               4.60529                2.15939        100       183.207k/s [BEST: throughput=  1.65 GB/s doc_throughput=  2610 docs/s instructions=     2908046 cycles=     1215857 branch_miss=    6848 cache_miss=    1752 cache_ref=     14383 items=       100 avg_time=    545830 ns]
partial_tweets<rapidjson>/manual_time                    1925572 ns      1989786 ns          364            26.6k           379.649M          7.136k        22.357k      5.311M              8.40993           601.171       3.19282G           13.409M                     21.233                     2.52475           60.1171k    26.7576k   631.515k       312.769M/s    431.821   16.4907k   5.46805M         8.65862    519.326/s  2.8397G/s     13.4097M               21.2342                2.45237        100       51.9326k/s [BEST: throughput=  0.38 GB/s doc_throughput=   601 docs/s instructions=    13408968 cycles=     5310999 branch_miss=   26600 cache_miss=    7136 cache_ref=     22357 items=       100 avg_time=   1925572 ns]
partial_tweets<rapidjson_insitu>/manual_time             1401503 ns      1460414 ns          503          25.728k           510.009M             272        14.885k    3.95365M              6.26057           807.597       3.19295G          9.75492M                    15.4469                     2.46732           80.7597k    26.7383k   631.515k       429.724M/s    215.531   10.1669k   4.07338M         6.45017     713.52/s 2.90643G/s     9.75552M               15.4478                2.39495        100        71.352k/s [BEST: throughput=  0.51 GB/s doc_throughput=   807 docs/s instructions=     9754922 cycles=     3953647 branch_miss=   25728 cache_miss=     272 cache_ref=     14885 items=       100 avg_time=   1401503 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                 100390760 ns    106299730 ns            7         922.913k           459.039M        6.78533M        6.8953M    319.541M              6.94672           9.97938       3.18882G          983.113M                    21.3726                     3.07664           9.97938M    923.156k   45.9988M       436.971M/s   6.82051M   6.89548M   320.066M         6.95814    9.96108/s  3.1882G/s     983.113M               21.3726                 3.0716      1000k       9.96108M/s [BEST: throughput=  0.46 GB/s doc_throughput=     9 docs/s instructions=   983112690 cycles=   319540692 branch_miss=  922913 cache_miss= 6785335 cache_ref=   6895303 items=   1000000 avg_time= 100390759 ns]
large_random<simdjson_ondemand>/manual_time            147898046 ns    153794080 ns            5         2.41327M           311.303M        3.50982M       3.57349M     471.32M              10.2463           6.76764       3.18972G          1.28297G                    27.8915                     2.72209           6.76764M    2.41043M   45.9988M       296.609M/s   3.53846M   3.57363M   471.611M         10.2527    6.76141/s 3.18876G/s     1.28297G               27.8915                2.72041      1000k       6.76141M/s [BEST: throughput=  0.31 GB/s doc_throughput=     6 docs/s instructions=  1282973823 cycles=   471319507 branch_miss= 2413272 cache_miss= 3509817 cache_ref=   3573494 items=   1000000 avg_time= 147898046 ns]
large_random<simdjson_ondemand_unordered>/manual_time  153596734 ns    159529309 ns            5         2.38538M           299.848M        3.54105M       3.57336M     489.34M              10.6381           6.51861       3.18982G          1.28697G                    27.9784                     2.63002           6.51861M    2.38291M   45.9988M       285.604M/s   3.54011M   3.57344M   489.797M         10.6481    6.51056/s 3.18885G/s     1.28697G               27.9784                2.62756      1000k       6.51056M/s [BEST: throughput=  0.30 GB/s doc_throughput=     6 docs/s instructions=  1286973836 cycles=   489339915 branch_miss= 2385383 cache_miss= 3541046 cache_ref=   3573360 items=   1000000 avg_time= 153596734 ns]
large_random<yyjson>/manual_time                       156197762 ns    162125995 ns            4         666.025k           294.518M        4.20836M       5.33029M    359.267M              7.81035           6.40273       2.30029G           944.15M                    20.5255                     2.62799           6.40273M    663.573k   45.9988M       280.848M/s   4.20822M   5.33536M   359.275M         7.81054    6.40214/s 2.30013G/s      944.15M               20.5255                2.62793      1000k       6.40214M/s [BEST: throughput=  0.29 GB/s doc_throughput=     6 docs/s instructions=   944149602 cycles=   359266644 branch_miss=  666025 cache_miss= 4208358 cache_ref=   5330290 items=   1000000 avg_time= 156197762 ns]
large_random<yyjson_insitu>/manual_time                130092969 ns    136009238 ns            5         661.574k           353.792M        3.49119M       4.59766M    316.083M              6.87156           7.69134        2.4311G          938.029M                    20.3925                     2.96766           7.69134M    663.188k   45.9988M       337.204M/s   3.49241M   4.60831M   316.378M         6.87796    7.68681/s 2.43194G/s     938.029M               20.3925                 2.9649      1000k       7.68681M/s [BEST: throughput=  0.35 GB/s doc_throughput=     7 docs/s instructions=   938028840 cycles=   316083332 branch_miss=  661574 cache_miss= 3491193 cache_ref=   4597663 items=   1000000 avg_time= 130092969 ns]
large_random<rapidjson>/manual_time                    202359919 ns    208270464 ns            4         589.391k           238.665M        4.33737M       5.21712M    546.945M              11.8904           5.18851       2.83783G          1.65612G                    36.0037                     3.02795           5.18851M     592.52k   45.9988M       216.781M/s   4.04286M   5.13643M   552.954M         12.0211    4.94169/s 2.73253G/s     1.65613G               36.0039                2.99507      1000k       4.94169M/s [BEST: throughput=  0.24 GB/s doc_throughput=     5 docs/s instructions=  1656123947 cycles=   546945457 branch_miss=  589391 cache_miss= 4337371 cache_ref=   5217118 items=   1000000 avg_time= 202359918 ns]
large_random<rapidjson_lossless>/manual_time           235519300 ns    241423870 ns            3         660.375k           202.533M        4.33287M       5.22399M    656.733M              14.2772           4.40302       2.89161G          2.00709G                    43.6336                     3.05618           4.40302M    693.175k   45.9988M        186.26M/s   4.06351M   5.16302M   661.909M         14.3897    4.24594/s 2.81042G/s      2.0071G               43.6338                3.03229      1000k       4.24594M/s [BEST: throughput=  0.20 GB/s doc_throughput=     4 docs/s instructions=  2007093338 cycles=   656733382 branch_miss=  660375 cache_miss= 4332873 cache_ref=   5223995 items=   1000000 avg_time= 235519300 ns]
large_random<rapidjson_insitu>/manual_time             186211406 ns    192131048 ns            4         593.722k           260.222M        5.01529M       5.93729M    496.037M              10.7837           5.65715       2.80616G          1.49112G                    32.4165                     3.00607           5.65715M     596.14k   45.9988M       235.581M/s   4.72914M   5.85851M     501.9M         10.9111    5.37024/s 2.69532G/s     1.49113G               32.4168                2.97098      1000k       5.37024M/s [BEST: throughput=  0.26 GB/s doc_throughput=     5 docs/s instructions=  1491121413 cycles=   496037326 branch_miss=  593722 cache_miss= 5015293 cache_ref=   5937288 items=   1000000 avg_time= 186211405 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                        95888660 ns    114474937 ns            7         465.546k           1.43414G        10.2747M       10.3144M    305.296M              2.22349           10.4449       3.18878G          945.501M                    6.88614                       3.097           5.47613M    483.508k   137.305M       1.33358G/s    10.243M   10.3148M    305.76M         2.22687    10.4288/s  3.1887G/s     945.501M               6.88614                 3.0923   524.288k       5.46767M/s [BEST: throughput=  1.43 GB/s doc_throughput=    10 docs/s instructions=   945501391 cycles=   305295809 branch_miss=  465546 cache_miss=10274686 cache_ref=  10314390 items=    524288 avg_time=  95888659 ns]
kostya<simdjson_ondemand>/manual_time                  344209300 ns    362567310 ns            2         3.32352M           399.018M        6.45877M       6.47277M    1097.38M               7.9923           2.90607       3.18907G           2.8802G                    20.9767                     2.62461           1.52362M    3.32441M   137.305M        380.42M/s   6.45371M   6.47266M   1097.86M         7.99578    2.90521/s 3.18951G/s      2.8802G               20.9767                2.62347   524.288k       1.52317M/s [BEST: throughput=  0.40 GB/s doc_throughput=     2 docs/s instructions=  2880202967 cycles=  1097382431 branch_miss= 3323518 cache_miss= 6458765 cache_ref=   6472768 items=    524288 avg_time= 344209300 ns]
kostya<yyjson>/manual_time                             256965738 ns    275257762 ns            3         417.941k           534.489M        8.49095M       9.88534M    588.465M              4.28582           3.89272       2.29073G          984.045M                    7.16685                     1.67222            2.0409M    420.584k   137.305M       509.579M/s   8.49195M   9.88747M   588.856M         4.28867    3.89157/s 2.29157G/s     984.045M               7.16686                1.67111   524.288k        2.0403M/s [BEST: throughput=  0.53 GB/s doc_throughput=     3 docs/s instructions=   984044930 cycles=   588464879 branch_miss=  417941 cache_miss= 8490949 cache_ref=   9885339 items=    524288 avg_time= 256965737 ns]
kostya<yyjson_insitu>/manual_time                      179691027 ns    197988715 ns            4         423.333k           764.807M        6.35627M       7.73505M    461.952M              3.36443           5.57013       2.57313G          965.775M                     7.0338                     2.09064           2.92035M    428.901k   137.305M       728.719M/s   6.35568M   7.73816M   462.369M         3.36746    5.56511/s 2.57313G/s     965.776M                7.0338                2.08876   524.288k       2.91772M/s [BEST: throughput=  0.76 GB/s doc_throughput=     5 docs/s instructions=   965775478 cycles=   461952383 branch_miss=  423333 cache_miss= 6356269 cache_ref=   7735048 items=    524288 avg_time= 179691027 ns]
kostya<rapidjson>/manual_time                          286450378 ns    304950539 ns            2         988.678k            484.89M         5.1866M       6.49156M    806.568M              5.87428           3.53148       2.84838G          2.29502G                    16.7148                     2.84542           1.85151M    988.459k   137.305M       457.127M/s   5.06251M     6.467M   808.518M         5.88848    3.49101/s 2.82254G/s     2.29503G               16.7148                2.83856   524.288k       1.83029M/s [BEST: throughput=  0.48 GB/s doc_throughput=     3 docs/s instructions=  2295024355 cycles=   806567584 branch_miss=  988678 cache_miss= 5186598 cache_ref=   6491563 items=    524288 avg_time= 286450377 ns]
kostya<rapidjson_lossless>/manual_time                 305313157 ns    323848219 ns            2         974.984k           454.581M        5.18803M        6.4993M     866.28M              6.30916           3.31074       2.86803G          2.49529G                    18.1734                     2.88047           1.73578M    977.013k   137.305M       428.885M/s   5.06165M   6.47032M   868.292M         6.32382    3.27533/s 2.84394G/s      2.4953G               18.1734                 2.8738   524.288k       1.71721M/s [BEST: throughput=  0.45 GB/s doc_throughput=     3 docs/s instructions=  2495294330 cycles=   866279805 branch_miss=  974984 cache_miss= 5188029 cache_ref=   6499300 items=    524288 avg_time= 305313157 ns]
kostya<rapidjson_insitu>/manual_time                   270220022 ns    288651153 ns            3         1017.51k           516.106M        7.32029M       8.63618M    751.825M              5.47559           3.75883       2.82598G          2.03014G                    14.7856                     2.70029           1.97071M    1021.11k   137.305M       484.584M/s   7.16014M   8.60223M   754.155M         5.49255    3.70069/s 2.79089G/s     2.03014G               14.7857                2.69195   524.288k       1.94023M/s [BEST: throughput=  0.52 GB/s doc_throughput=     3 docs/s instructions=  2030142764 cycles=   751825276 branch_miss= 1017512 cache_miss= 7320287 cache_ref=   8636178 items=    524288 avg_time= 270220021 ns]
distinct_user_id<simdjson_dom>/manual_time                297571 ns       372430 ns         2351           4.026k           2.13763G               0        33.678k    943.601k              1.49419          3.38492k       3.19401G          2.90344M                    4.59757                     3.07697           389.266k    4.15892k   631.515k       1.97648G/s   0.186304   33.7605k   949.392k         1.50336   3.36054k/s 3.19047G/s     2.90344M               4.59757                3.05821        115       386.462k/s [BEST: throughput=  2.14 GB/s doc_throughput=  3384 docs/s instructions=     2903436 cycles=      943601 branch_miss=    4026 cache_miss=       0 cache_ref=     33678 items=       115 avg_time=    297571 ns]
distinct_user_id<simdjson_ondemand>/manual_time          1284657 ns      1342853 ns          545          32.328k           494.971M               0         6.895k     4.0736M              6.45052           783.783       3.19282G          10.3431M                    16.3783                     2.53906           90.1351k    32.8206k   631.515k        468.81M/s   0.249541   6.98278k   4.09774M         6.48874    778.418/s 3.18975G/s     10.3431M               16.3783                 2.5241        115       89.5181k/s [BEST: throughput=  0.49 GB/s doc_throughput=   783 docs/s instructions=    10343117 cycles=     4073600 branch_miss=   32328 cache_miss=       0 cache_ref=      6895 items=       115 avg_time=   1284656 ns]
distinct_user_id<yyjson>/manual_time                      815909 ns       901196 ns         1027          10.278k           1.34929G             268        27.651k    1.49496M              2.36726          2.13659k       3.19412G           2.8749M                    4.55239                     1.92306           245.708k    7.68064k   631.515k       738.146M/s    504.228   25.9216k   1.64865M         2.61063   1.22563k/s 2.02063G/s     2.87538M               4.55315                1.74408        115       140.947k/s [BEST: throughput=  1.35 GB/s doc_throughput=  2136 docs/s instructions=     2874900 cycles=     1494961 branch_miss=   10278 cache_miss=     268 cache_ref=     27651 items=       115 avg_time=    815908 ns]
distinct_user_id<yyjson_insitu>/manual_time               544869 ns       615296 ns         1297           7.065k           1.65731G          2.214k        14.288k    1.21176M              1.91881          2.62434k       3.18006G          2.87458M                    4.55188                     2.37224           301.799k    7.52356k   631.515k       1105.33M/s    123.549   12.2973k   1.34205M         2.12514    1.8353k/s 2.46308G/s     2.87484M               4.55229                2.14212        115        211.06k/s [BEST: throughput=  1.66 GB/s doc_throughput=  2624 docs/s instructions=     2874579 cycles=     1211755 branch_miss=    7065 cache_miss=    2214 cache_ref=     14288 items=       115 avg_time=    544869 ns]
distinct_user_id<rapidjson>/manual_time                  1904724 ns      1976144 ns          368           26.49k           380.953M             466        22.897k     5.2928M              8.38112           603.236       3.19281G          13.3492M                    21.1384                     2.52214           69.3721k    26.7244k   631.515k       316.193M/s   1.33014k   17.0274k   5.45051M         8.63084     525.01/s 2.86157G/s     13.3501M               21.1398                2.44933        115       60.3762k/s [BEST: throughput=  0.38 GB/s doc_throughput=   603 docs/s instructions=    13349192 cycles=     5292804 branch_miss=   26490 cache_miss=     466 cache_ref=     22897 items=       115 avg_time=   1904724 ns]
distinct_user_id<rapidjson_insitu>/manual_time           1374005 ns      1441141 ns          539           25.16k           513.809M          2.767k        14.415k     3.9245M              6.21443           813.613       3.19303G          9.70529M                    15.3683                       2.473           93.5655k    26.7545k   631.515k       438.324M/s   1.38676k   11.5151k   4.05322M         6.41825    727.799/s 2.94993G/s     9.70551M               15.3686                2.39452        115       83.6969k/s [BEST: throughput=  0.51 GB/s doc_throughput=   813 docs/s instructions=     9705288 cycles=     3924504 branch_miss=   25160 cache_miss=    2767 cache_ref=     14415 items=       115 avg_time=   1374004 ns]
find_tweet<simdjson_dom>/manual_time                      283085 ns       353138 ns         2475           3.701k             2.247G               0        29.583k    897.629k              1.42139          3.55811k       3.19386G           2.8224M                    4.46925                     3.14428           3.55811k    3.86149k   631.515k       2.07762G/s   0.189091   29.6959k   903.369k         1.43048   3.53251k/s 3.19116G/s      2.8224M               4.46925                 3.1243          1       3.53251k/s [BEST: throughput=  2.25 GB/s doc_throughput=  3558 docs/s instructions=     2822396 cycles=      897629 branch_miss=    3701 cache_miss=       0 cache_ref=     29583 items=         1 avg_time=    283084 ns]
find_tweet<simdjson_ondemand>/manual_time                1203810 ns      1263480 ns          582          31.557k           528.311M               0         7.285k    3.81666M              6.04365           836.578       3.19293G          9.73048M                    15.4081                     2.54948            836.578    32.0503k   631.515k       500.295M/s   0.166667   7.38326k   3.84019M         6.08092    830.696/s 3.19003G/s     9.73048M               15.4081                2.53385          1        830.696/s [BEST: throughput=  0.53 GB/s doc_throughput=   836 docs/s instructions=     9730477 cycles=     3816658 branch_miss=   31557 cache_miss=       0 cache_ref=      7285 items=         1 avg_time=   1203809 ns]
find_tweet<yyjson>/manual_time                            806015 ns       888747 ns          930           9.294k           1.39568G             200        27.243k    1.44513M              2.28836          2.21005k       3.19382G          2.82414M                      4.472                     1.95424           2.21005k    7.41612k   631.515k       747.207M/s    472.703   25.2146k   1.61846M         2.56281   1.24067k/s 2.00797G/s     2.82483M                4.4731                1.74539          1       1.24067k/s [BEST: throughput=  1.40 GB/s doc_throughput=  2210 docs/s instructions=     2824136 cycles=     1445133 branch_miss=    9294 cache_miss=     200 cache_ref=     27243 items=         1 avg_time=    806014 ns]
find_tweet<yyjson_insitu>/manual_time                     532890 ns       598611 ns         1326           6.881k           1.69236G          2.256k        13.347k    1.18725M                 1.88          2.67984k       3.18164G          2.82403M                    4.47183                     2.37863           2.67984k     7.2335k   631.515k       1.10369G/s    8.57391   10.8268k   1.30607M         2.06816   1.87656k/s 2.45093G/s     2.82429M               4.47224                2.16243          1       1.87656k/s [BEST: throughput=  1.69 GB/s doc_throughput=  2679 docs/s instructions=     2824027 cycles=     1187248 branch_miss=    6881 cache_miss=    2256 cache_ref=     13347 items=         1 avg_time=    532889 ns]
find_tweet<rapidjson>/manual_time                        1889948 ns      1956935 ns          371          25.971k           384.207M         11.928k        21.034k    5.24792M              8.31005           608.389       3.19278G           13.281M                    21.0304                     2.53072            608.389    26.5692k   631.515k       318.665M/s    1039.77   14.4504k   5.40186M         8.55381    529.115/s  2.8582G/s     13.2819M               21.0318                2.45876          1        529.115/s [BEST: throughput=  0.38 GB/s doc_throughput=   608 docs/s instructions=    13281015 cycles=     5247920 branch_miss=   25971 cache_miss=   11928 cache_ref=     21034 items=         1 avg_time=   1889948 ns]
find_tweet<rapidjson_insitu>/manual_time                 1358965 ns      1420768 ns          548           25.21k           516.278M          3.642k        13.202k    3.90557M              6.18444           817.523       3.19289G          9.64734M                    15.2765                     2.47015            817.523    26.2621k   631.515k       443.175M/s   1.19943k   8.91328k     4.004M         6.34031    735.854/s 2.94636G/s     9.64756M               15.2769                2.40948          1        735.854/s [BEST: throughput=  0.52 GB/s doc_throughput=   817 docs/s instructions=     9647337 cycles=     3905568 branch_miss=   25210 cache_miss=    3642 cache_ref=     13202 items=         1 avg_time=   1358965 ns]
