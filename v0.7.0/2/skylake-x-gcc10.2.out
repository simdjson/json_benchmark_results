run_benchmark: v0.8.0~36 /home/jkeiser/simdjson_benchmark_results/v0.7.0/2/skylake-x-gcc10.2.json -DCMAKE_BUILD_TYPE=Release
git reset --hard v0.8.0~36
HEAD is now at 6b02b065 Merge pull request #1330 from simdjson/jkeiser/depth-tracking
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- git Version: v0.2.1-6b02b065
-- Version: 0.2.1
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 10
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
make[3]: Nothing to be done for '_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build'.
[ 80%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
make[3]: Nothing to be done for 'jsonexamples/generated/CMakeFiles/generated-data.dir/build'.
[ 80%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/g++-10  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/src  -O3 -DNDEBUG -fPIC   -pthread -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/g++-10 -fPIC -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.6 -o ../libsimdjson.so.6.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.6.0.0 ../libsimdjson.so.6 ../libsimdjson.so
[ 90%] Built target simdjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/g++-10  -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/g++-10  -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.6.0.0 ../_deps/google_benchmarks/src/libbenchmark.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/2/skylake-x-gcc10.2.json --benchmark_out_format=json
2021-01-24 23:55:45
Running benchmark/bench_ondemand
Run on (4 X 3200 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 1024 KiB (x4)
  L3 Unified 8448 KiB (x1)
Load Average: 1.00, 1.00, 1.00
***WARNING*** CPU scaling is enabled, the benchmark real time measurements may be noisy and will incur extra overhead.
On Demand implementation: fallback
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Benchmark                         Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
PartialTweets<OnDemand>     1312656 ns      1312620 ns          533          32.374k           489.467M               0         7.294k     4.1193M              6.52288           775.068       3.19274G          10.6701M                     16.896                     2.59026           77.5068k    32.7675k   631.515k       458.823M/s  0.0300188    7.3216k   4.14122M          6.5576    761.835/s 3.15493G/s     10.6701M                16.896                2.57655        100       76.1835k/s [best: throughput=  0.49 GB/s doc_throughput=   775 docs/s instructions=    10670065 cycles=     4119299 branch_miss=   32374 cache_miss=       0 cache_ref=      7294 items=       100 avg_time=   1298019 ns]
PartialTweets<Dom>           321671 ns       321644 ns         2175           3.898k            2.0866G               0        30.445k    966.498k              1.53044          3.30411k       3.19342G           2.9625M                    4.69111                     3.06519           330.411k    4.04709k   631.515k       1.82855G/s  0.0533333   30.4767k   972.539k         1.54001   3.10902k/s 3.02365G/s      2.9625M               4.69111                3.04615        100       310.902k/s [best: throughput=  2.09 GB/s doc_throughput=  3304 docs/s instructions=     2962504 cycles=      966498 branch_miss=    3898 cache_miss=       0 cache_ref=     30445 items=       100 avg_time=    304902 ns]
Creating a source file spanning 44921 KB 
LargeRandom<Dom>           98825701 ns     98824812 ns            7         875.824k           465.979M         6.8511M       6.89584M    314.754M              6.84266           10.1303       3.18854G          974.113M                    21.1769                     3.09484           10.1303M    876.497k   45.9988M       443.895M/s   6.80296M   6.89578M   315.019M         6.84841    10.1189/s 3.18765G/s     974.113M               21.1769                3.09224      1000k       10.1189M/s [best: throughput=  0.47 GB/s doc_throughput=    10 docs/s instructions=   974112698 cycles=   314753769 branch_miss=  875824 cache_miss= 6851100 cache_ref=   6895840 items=   1000000 avg_time=  98798312 ns]
LargeRandomSum<Dom>        98392404 ns     98382884 ns            7         878.178k            468.36M        6.39975M        6.5203M    313.065M              6.80595            10.182       3.18763G          979.113M                    21.2856                      3.1275            10.182M    877.872k   45.9988M       445.889M/s   6.42704M   6.52017M   313.571M         6.81695    10.1644/s 3.18726G/s     979.113M               21.2856                3.12246      1000k       10.1644M/s [best: throughput=  0.47 GB/s doc_throughput=    10 docs/s instructions=   979112712 cycles=   313065373 branch_miss=  878178 cache_miss= 6399753 cache_ref=   6520303 items=   1000000 avg_time=  98364437 ns]
LargeRandom<OnDemand>     147233151 ns    147222010 ns            5         2.37845M           312.626M        3.51765M       3.57288M    469.324M               10.203            6.7964       3.18971G          1.25797G                     27.348                      2.6804            6.7964M    2.38008M   45.9988M       297.971M/s   3.52021M   3.57295M   469.468M         10.2061    6.79246/s 3.18884G/s     1.25797G                27.348                2.67958      1000k       6.79246M/s [best: throughput=  0.31 GB/s doc_throughput=     6 docs/s instructions=  1257973697 cycles=   469323585 branch_miss= 2378446 cache_miss= 3517649 cache_ref=   3572884 items=   1000000 avg_time= 147204464 ns]
LargeRandomSum<OnDemand>  144369665 ns    144363723 ns            5         2.38168M           318.866M        3.11274M       3.19662M    460.137M              10.0032           6.93205       3.18969G          1.22397G                    26.6088                     2.66002           6.93205M    2.38255M   45.9988M        303.87M/s    3.1424M   3.19659M   460.347M         10.0078    6.92695/s  3.1888G/s     1.22397G               26.6088                2.65881      1000k       6.92695M/s [best: throughput=  0.32 GB/s doc_throughput=     6 docs/s instructions=  1223973691 cycles=   460136572 branch_miss= 2381683 cache_miss= 3112735 cache_ref=   3196619 items=   1000000 avg_time= 144340545 ns]
Creating a source file spanning 134087 KB 
Kostya<Dom>                95664579 ns     95654488 ns            7         462.896k           1.43745G        10.2352M       10.3143M    304.571M              2.21821            10.469       3.18856G          944.977M                    6.88232                     3.10265           5.48878M    463.737k   137.305M       1.33685G/s   10.2192M   10.3146M   304.863M         2.22033    10.4543/s 3.18712G/s     944.977M               6.88232                3.09968   524.288k       5.48106M/s [best: throughput=  1.44 GB/s doc_throughput=    10 docs/s instructions=   944977199 cycles=   304571299 branch_miss=  462896 cache_miss=10235194 cache_ref=  10314275 items=    524288 avg_time=  95634693 ns]
KostyaSum<Dom>             94839606 ns     94835091 ns            7         463.454k            1.4514G        10.0001M       10.1182M    301.634M              2.19682           10.5707       3.18847G          947.599M                    6.90141                     3.14155           5.54207M    462.545k   137.305M        1.3484G/s    10.024M   10.1178M   302.273M         2.20147    10.5446/s 3.18736G/s     947.599M               6.90141                3.13491   524.288k       5.52842M/s [best: throughput=  1.45 GB/s doc_throughput=    10 docs/s instructions=   947598653 cycles=   301634084 branch_miss=  463454 cache_miss=10000072 cache_ref=  10118160 items=    524288 avg_time=  94809121 ns]
Kostya<OnDemand>          340031493 ns    340021492 ns            2         3.32823M           403.897M         6.4381M       6.47207M     1084.4M              7.89773            2.9416       3.18987G          2.86185G                     20.843                     2.63912           1.54225M     3.3284M   137.305M       385.106M/s   6.44877M   6.47207M   1084.45M         7.89813    2.94099/s 3.18936G/s     2.86185G                20.843                2.63898   524.288k       1.54193M/s [best: throughput=  0.40 GB/s doc_throughput=     2 docs/s instructions=  2861852805 cycles=  1084397503 branch_miss= 3328228 cache_miss= 6438105 cache_ref=   6472068 items=    524288 avg_time= 339995251 ns]
KostyaSum<OnDemand>       340930993 ns    340915519 ns            2         3.33187M           402.863M         6.2233M       6.27412M    1087.21M              7.91823           2.93408       3.18997G          2.85923G                    20.8239                     2.62987            1.5383M    3.33184M   137.305M       384.096M/s    6.2377M   6.27416M   1087.32M         7.91901    2.93328/s 3.18941G/s     2.85923G               20.8239                2.62962   524.288k       1.53788M/s [best: throughput=  0.40 GB/s doc_throughput=     2 docs/s instructions=  2859231374 cycles=  1087212945 branch_miss= 3331872 cache_miss= 6223296 cache_ref=   6274124 items=    524288 avg_time= 340895937 ns]
DistinctUserID<Dom>          319825 ns       319818 ns         2190           4.171k           2.11312G               4        32.153k    954.315k              1.51115          3.34612k       3.19325G          2.91304M                    4.61278                     3.05249           384.803k    4.31133k   631.515k       1.83899G/s     4.2347   32.5694k   961.506k         1.52254   3.12677k/s 3.00641G/s     2.91304M               4.61278                3.02966        115       359.579k/s [best: throughput=  2.11 GB/s doc_throughput=  3346 docs/s instructions=     2913038 cycles=      954315 branch_miss=    4171 cache_miss=       4 cache_ref=     32153 items=       115 avg_time=    301425 ns]
On Demand implementation: fallback
DistinctUserID<OnDemand>    1286419 ns      1286395 ns          544          31.847k           500.358M               0         4.047k    4.02964M              6.38091           792.313       3.19274G          10.3373M                    16.3691                     2.56533            91.116k    32.3047k   631.515k       468.176M/s   0.551471     4.233k   4.04895M         6.41149    777.366/s 3.14752G/s     10.3373M               16.3691                2.55309        115       89.3971k/s [best: throughput=  0.50 GB/s doc_throughput=   792 docs/s instructions=    10337348 cycles=     4029642 branch_miss=   31847 cache_miss=       0 cache_ref=      4047 items=       115 avg_time=   1269056 ns]
FindTweet<Dom>               302324 ns       302319 ns         2315           3.773k           2.24458G               2        28.242k    898.386k              1.42259          3.55428k       3.19311G          2.82293M                    4.47009                     3.14222           3.55428k    3.86855k   631.515k       1.94544G/s    1.87646   28.1431k    903.88k         1.43129   3.30777k/s 2.98983G/s     2.82293M               4.47009                3.12312          1       3.30777k/s [best: throughput=  2.24 GB/s doc_throughput=  3554 docs/s instructions=     2822930 cycles=      898386 branch_miss=    3773 cache_miss=       2 cache_ref=     28242 items=         1 avg_time=    283319 ns]
On Demand implementation: fallback
FindTweet<OnDemand>         1216178 ns      1216149 ns          575          31.051k           529.353M               0         3.021k    3.80891M              6.03138           838.226       3.19273G          9.73183M                    15.4103                     2.55502            838.226    31.2521k   631.515k       495.219M/s   5.21739m   3.21808k     3.825M         6.05686    822.268/s 3.14517G/s     9.73183M               15.4103                2.54427          1        822.268/s [best: throughput=  0.53 GB/s doc_throughput=   838 docs/s instructions=     9731831 cycles=     3808910 branch_miss=   31051 cache_miss=       0 cache_ref=      3021 items=         1 avg_time=   1198800 ns]
