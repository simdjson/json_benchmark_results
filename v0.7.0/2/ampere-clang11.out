run_benchmark: v0.8.0~36 /home/jkeiser/simdjson_benchmark_results/v0.7.0/2/ampere-clang11.json -DCMAKE_BUILD_TYPE=Release
git reset --hard v0.8.0~36
HEAD is now at 6b02b065 Merge pull request #1330 from simdjson/jkeiser/depth-tracking
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- git Version: v0.2.1-6b02b065
-- Version: 0.2.1
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES -- failed to compile
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 10
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
make[3]: Nothing to be done for '_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build'.
[ 80%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
make[3]: Nothing to be done for 'jsonexamples/generated/CMakeFiles/generated-data.dir/build'.
[ 80%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/clang++-11  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/src  -O3 -DNDEBUG -fPIC   -pthread -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/clang++-11 -fPIC -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.6 -o ../libsimdjson.so.6.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.6.0.0 ../libsimdjson.so.6 ../libsimdjson.so
[ 90%] Built target simdjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/clang++-11  -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/clang++-11  -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.6.0.0 ../_deps/google_benchmarks/src/libbenchmark.a -pthread /usr/lib/aarch64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/2/ampere-clang11.json --benchmark_out_format=json
2021-01-24 23:25:37
Running benchmark/bench_ondemand
Run on (32 X 3300 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x32)
  L1 Instruction 32 KiB (x32)
  L2 Unified 256 KiB (x16)
Load Average: 1.11, 0.86, 0.81
On Demand implementation: fallback
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Benchmark                         Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
PartialTweets<OnDemand>     1879043 ns      1879064 ns          372          85.761k            342.05M         22.889k        1.3101M    5.90922M              9.35721           541.633       3.20063G          8.85659M                    14.0243                     1.49877           54.1633k    86.9909k   631.515k        320.51M/s   22.8862k   1.31159M   5.92953M         9.38938     532.18/s 3.15558G/s     8.85659M               14.0244                1.49364        100        53.218k/s [best: throughput=  0.34 GB/s doc_throughput=   541 docs/s instructions=     8856586 cycles=     5909221 branch_miss=   85761 cache_miss=   22889 cache_ref=   1310101 items=       100 avg_time=   1854642 ns]
PartialTweets<Dom>          2593801 ns      2593782 ns          270         104.973k           246.291M          25.95k       2.70669M    8.20637M              12.9947               390       3.20048G          13.7646M                    21.7962                     1.67731                39k     105.15k   631.515k       232.194M/s   25.9595k   2.70716M   8.21284M          13.005    385.537/s 3.16636G/s     13.7646M               21.7962                1.67599        100       38.5537k/s [best: throughput=  0.25 GB/s doc_throughput=   389 docs/s instructions=    13764627 cycles=     8206366 branch_miss=  104973 cache_miss=   25950 cache_ref=   2706694 items=       100 avg_time=   2568921 ns]
Creating a source file spanning 44921 KB 
LargeRandom<Dom>          317426215 ns    317419212 ns            2         4.03055M           144.982M        3.98228M       274.519M     1014.4M              22.0527           3.15188       3.19725G          1.43712G                    31.2426                     1.41673           3.15188M    4.03412M   45.9988M       138.202M/s   3.98233M   274.546M   1014.53M         22.0556    3.15041/s 3.19619G/s     1.43712G               31.2426                1.41653      1000k       3.15041M/s [best: throughput=  0.14 GB/s doc_throughput=     3 docs/s instructions=  1437120473 cycles=  1014396045 branch_miss= 4030555 cache_miss= 3982281 cache_ref= 274518896 items=   1000000 avg_time= 317371282 ns]
LargeRandomSum<Dom>       313734647 ns    313729713 ns            2         4.03188M           146.645M        3.98057M       272.532M    1002.67M              21.7977           3.18801       3.19651G          1.43612G                    31.2208                      1.4323           3.18801M    4.03072M   45.9988M       139.827M/s   3.98056M   272.517M   1002.75M         21.7994    3.18746/s 3.19621G/s     1.43612G               31.2208                1.43219      1000k       3.18746M/s [best: throughput=  0.15 GB/s doc_throughput=     3 docs/s instructions=  1436120474 cycles=  1002667986 branch_miss= 4031880 cache_miss= 3980575 cache_ref= 272531573 items=   1000000 avg_time= 313677148 ns]
LargeRandom<OnDemand>     250956312 ns    250948090 ns            3         3.35991M           183.359M         2.3197M       170.586M    802.167M              17.4389           3.98617       3.19757G          1030.98M                    22.4132                     1.28524           3.98617M     3.3594M   45.9988M       174.808M/s   2.31971M   170.588M   802.158M         17.4387    3.98489/s 3.19651G/s     1030.98M               22.4132                1.28526      1000k       3.98489M/s [best: throughput=  0.18 GB/s doc_throughput=     3 docs/s instructions=  1030978705 cycles=   802166840 branch_miss= 3359909 cache_miss= 2319702 cache_ref= 170586144 items=   1000000 avg_time= 250902179 ns]
LargeRandomSum<OnDemand>  251432721 ns    251435268 ns            3          3.3689M           182.997M        2.31788M       170.489M    803.727M              17.4728           3.97829       3.19746G          1035.98M                    22.5219                     1.28897           3.97829M    3.36582M   45.9988M        174.47M/s   2.31791M   170.467M   803.735M          17.473    3.97717/s 3.19659G/s     1035.98M               22.5219                1.28896      1000k       3.97717M/s [best: throughput=  0.18 GB/s doc_throughput=     3 docs/s instructions=  1035978700 cycles=   803726754 branch_miss= 3368901 cache_miss= 2317879 cache_ref= 170489218 items=   1000000 avg_time= 251376803 ns]
Creating a source file spanning 134087 KB 
Kostya<Dom>               521134852 ns    521140180 ns            1         14.8731M            263.51M          6.955M       496.373M    1.66588G              12.1327           1.91915       3.19707G          2.38517G                    17.3714                     1.43178           1006.19k    14.8731M   137.305M       251.265M/s     6.955M   496.373M   1.66588G         12.1327    1.91887/s  3.1966G/s     2.38517G               17.3714                1.43178   524.288k       1006.04k/s [best: throughput=  0.26 GB/s doc_throughput=     1 docs/s instructions=  2385174071 cycles=  1665875125 branch_miss=14873079 cache_miss= 6955002 cache_ref= 496373071 items=    524288 avg_time= 521062696 ns]
KostyaSum<Dom>            519308428 ns    519297180 ns            1         14.8734M           264.436M        6.95372M        495.31M    1.65987G              12.0889           1.92591       3.19675G          2.38465G                    17.3675                     1.43665           1009.73k    14.8734M   137.305M       252.157M/s   6.95372M    495.31M   1.65987G         12.0889    1.92568/s 3.19638G/s     2.38465G               17.3675                1.43665   524.288k       1009.61k/s [best: throughput=  0.26 GB/s doc_throughput=     1 docs/s instructions=  2384649782 cycles=  1659869370 branch_miss=14873385 cache_miss= 6953720 cache_ref= 495309944 items=    524288 avg_time= 519236273 ns]
Kostya<OnDemand>          437231634 ns    437227636 ns            2         14.4165M           314.101M        5.28625M       364.029M    1.39765G              10.1792           2.28762       3.19729G          1.92652G                     14.031                      1.3784           1.19937M    14.4156M   137.305M       299.488M/s   5.28627M   364.027M   1.39767G         10.1793    2.28714/s 3.19667G/s     1.92652G                14.031                1.37838   524.288k       1.19912M/s [best: throughput=  0.31 GB/s doc_throughput=     2 docs/s instructions=  1926523644 cycles=  1397652170 branch_miss=14416529 cache_miss= 5286254 cache_ref= 364028822 items=    524288 avg_time= 437169912 ns]
KostyaSum<OnDemand>       437065936 ns    437070624 ns            2         14.4202M           314.213M        5.28415M       364.017M    1.39717G              10.1757           2.28843       3.19733G          1.92862G                    14.0463                     1.38037            1.1998M    14.4158M   137.305M       299.595M/s   5.28416M   364.021M   1.39722G         10.1761    2.28796/s 3.19679G/s     1.92862G               14.0463                1.38032   524.288k       1.19955M/s [best: throughput=  0.31 GB/s doc_throughput=     2 docs/s instructions=  1928620746 cycles=  1397172761 branch_miss=14420153 cache_miss= 5284148 cache_ref= 364016984 items=    524288 avg_time= 437003636 ns]
DistinctUserID<Dom>         2588274 ns      2588302 ns          270         104.957k           247.139M         26.588k       2.69633M    8.17812M                12.95           391.343       3.20045G          13.7016M                    21.6964                      1.6754           45.0044k    105.175k   631.515k       232.685M/s   26.5888k   2.69691M   8.18455M         12.9602    386.354/s 3.16213G/s     13.7016M               21.6964                1.67408        115       44.4307k/s [best: throughput=  0.25 GB/s doc_throughput=   391 docs/s instructions=    13701624 cycles=     8178119 branch_miss=  104957 cache_miss=   26588 cache_ref=   2696332 items=       115 avg_time=   2560090 ns]
On Demand implementation: fallback
DistinctUserID<OnDemand>    1840258 ns      1840245 ns          380          85.029k           349.603M         22.632k       1.20273M    5.78147M              9.15491           553.594       3.20058G          8.46232M                       13.4                      1.4637           63.6633k    85.3438k   631.515k       327.272M/s   22.6186k   1.20362M   5.79078M         9.16967    543.406/s 3.14675G/s     8.46232M                  13.4                1.46134        115       62.4917k/s [best: throughput=  0.35 GB/s doc_throughput=   553 docs/s instructions=     8462323 cycles=     5781466 branch_miss=   85029 cache_miss=   22632 cache_ref=   1202726 items=       115 avg_time=   1811169 ns]
FindTweet<Dom>              2535827 ns      2535854 ns          276         104.523k           252.385M          23.49k       2.67588M    8.00789M              12.6804           399.649       3.20035G          13.6028M                    21.5399                     1.69867            399.649    104.735k   631.515k       237.498M/s   23.5001k   2.67688M   8.01469M         12.6912    394.344/s 3.16055G/s     13.6028M               21.5399                1.69723          1        394.344/s [best: throughput=  0.25 GB/s doc_throughput=   399 docs/s instructions=    13602769 cycles=     8007892 branch_miss=  104523 cache_miss=   23490 cache_ref=   2675884 items=         1 avg_time=   2506887 ns]
On Demand implementation: fallback
FindTweet<OnDemand>         1687579 ns      1687598 ns          415          76.886k            381.81M          11.55k       1057.31k    5.29381M              8.38271           604.594        3.2006G          7.97882M                    12.6344                      1.5072            604.594    77.2629k   631.515k       356.874M/s   11.5507k   1057.37k   5.30225M         8.39608    592.558/s 3.14189G/s     7.97882M               12.6344                 1.5048          1        592.558/s [best: throughput=  0.38 GB/s doc_throughput=   604 docs/s instructions=     7978817 cycles=     5293807 branch_miss=   76886 cache_miss=   11550 cache_ref=   1057310 items=         1 avg_time=   1658289 ns]
