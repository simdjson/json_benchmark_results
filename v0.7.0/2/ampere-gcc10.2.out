run_benchmark: v0.8.0~36 /home/jkeiser/simdjson_benchmark_results/v0.7.0/2/ampere-gcc10.2.json -DCMAKE_BUILD_TYPE=Release
git reset --hard v0.8.0~36
HEAD is now at 6b02b065 Merge pull request #1330 from simdjson/jkeiser/depth-tracking
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- git Version: v0.2.1-6b02b065
-- Version: 0.2.1
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 10
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
make[3]: Nothing to be done for '_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build'.
[ 80%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
make[3]: Nothing to be done for 'jsonexamples/generated/CMakeFiles/generated-data.dir/build'.
[ 80%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/g++-10  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/src  -O3 -DNDEBUG -fPIC   -pthread -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/g++-10 -fPIC -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.6 -o ../libsimdjson.so.6.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.6.0.0 ../libsimdjson.so.6 ../libsimdjson.so
[ 90%] Built target simdjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/g++-10  -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/g++-10  -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.6.0.0 ../_deps/google_benchmarks/src/libbenchmark.a -pthread /usr/lib/aarch64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/2/ampere-gcc10.2.json --benchmark_out_format=json
2021-01-24 23:34:08
Running benchmark/bench_ondemand
Run on (32 X 3300 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x32)
  L1 Instruction 32 KiB (x32)
  L2 Unified 256 KiB (x16)
Load Average: 1.05, 1.01, 0.92
On Demand implementation: fallback
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Benchmark                         Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
PartialTweets<OnDemand>     1877644 ns      1877635 ns          373          71.034k           341.519M         22.749k       1052.86k    5.91787M               9.3709           540.794       3.20035G          8.83801M                    13.9949                     1.49345           54.0794k    71.5801k   631.515k       320.754M/s   22.7496k   1053.18k   5.92873M          9.3881    532.585/s 3.15755G/s     8.83801M               13.9949                1.49071        100       53.2585k/s [best: throughput=  0.34 GB/s doc_throughput=   540 docs/s instructions=     8838014 cycles=     5917867 branch_miss=   71034 cache_miss=   22749 cache_ref=   1052859 items=       100 avg_time=   1854420 ns]
PartialTweets<Dom>          2563550 ns      2563542 ns          273         103.222k           249.285M         25.909k       1.99884M    8.10759M              12.8383           394.741        3.2004G          12.5116M                     19.812                      1.5432           39.4741k    103.658k   631.515k       234.933M/s   25.9121k   1.99909M   8.11941M          12.857    390.085/s 3.16726G/s     12.5116M                19.812                1.54095        100       39.0085k/s [best: throughput=  0.25 GB/s doc_throughput=   394 docs/s instructions=    12511604 cycles=     8107587 branch_miss=  103222 cache_miss=   25909 cache_ref=   1998840 items=       100 avg_time=   2539597 ns]
Creating a source file spanning 44921 KB 
LargeRandom<Dom>          336159499 ns    336163012 ns            2         4.90099M           136.943M        3.99411M       264.314M    1073.92M              23.3467           2.97709       3.19716G          1.55849G                    33.8811                     1.45121           2.97709M    4.98158M   45.9988M       130.496M/s   3.99412M   264.393M   1074.55M         23.3605    2.97475/s 3.19652G/s     1.55849G               33.8811                1.45036      1000k       2.97475M/s [best: throughput=  0.14 GB/s doc_throughput=     2 docs/s instructions=  1558488677 cycles=  1073920578 branch_miss= 4900988 cache_miss= 3994111 cache_ref= 264314411 items=   1000000 avg_time= 336103856 ns]
LargeRandomSum<Dom>       339314419 ns    339309680 ns            2         4.68366M           136.391M        3.98102M       261.083M    1078.27M              23.4413           2.96509       3.19717G          1.56549G                    34.0333                     1.45185           2.96509M    4.96686M   45.9988M       129.286M/s   3.98096M   261.357M   1084.65M           23.58    2.94716/s 3.19664G/s     1.56549G               34.0333                1.44331      1000k       2.94716M/s [best: throughput=  0.14 GB/s doc_throughput=     2 docs/s instructions=  1565488693 cycles=  1078269992 branch_miss= 4683659 cache_miss= 3981019 cache_ref= 261082573 items=   1000000 avg_time= 339261552 ns]
LargeRandom<OnDemand>     249137333 ns    249128579 ns            3         4.18026M           184.693M        2.32036M       180.825M    796.375M               17.313           4.01518       3.19759G          1.17398G                    25.5219                     1.47415           4.01518M    4.18065M   45.9988M       176.085M/s   2.32039M   180.826M     796.4M         17.3135    4.01399/s 3.19674G/s     1.17398G               25.5219                 1.4741      1000k       4.01399M/s [best: throughput=  0.18 GB/s doc_throughput=     4 docs/s instructions=  1173975050 cycles=   796374938 branch_miss= 4180264 cache_miss= 2320362 cache_ref= 180825483 items=   1000000 avg_time= 249087029 ns]
LargeRandomSum<OnDemand>  245228201 ns    245225965 ns            3         4.10423M           188.408M        2.31801M       156.519M    780.474M              16.9673           4.09594       3.19678G          1.14497G                    24.8914                     1.46702           4.09594M    4.12954M   45.9988M       178.887M/s   2.31801M   156.544M   783.893M         17.0416    4.07787/s 3.19661G/s     1.14497G               24.8914                1.46063      1000k       4.07787M/s [best: throughput=  0.19 GB/s doc_throughput=     4 docs/s instructions=  1144974475 cycles=   780473908 branch_miss= 4104229 cache_miss= 2318014 cache_ref= 156518783 items=   1000000 avg_time= 245173534 ns]
Creating a source file spanning 134087 KB 
Kostya<Dom>               564675241 ns    564666625 ns            1         9.43369M           243.188M        6.95714M        353.96M      1.805G              13.1459           1.77115       3.19693G          2.69342G                    19.6163                      1.4922           928.592k    9.43369M   137.305M       231.897M/s   6.95714M    353.96M     1.805G         13.1459    1.77096/s 3.19658G/s     2.69342G               19.6163                 1.4922   524.288k       928.491k/s [best: throughput=  0.24 GB/s doc_throughput=     1 docs/s instructions=  2693419642 cycles=  1805001858 branch_miss= 9433687 cache_miss= 6957144 cache_ref= 353960254 items=    524288 avg_time= 564605398 ns]
KostyaSum<Dom>            564684463 ns    564652292 ns            1         9.45791M           243.183M        6.95061M       352.517M    1.80476G              13.1442           1.77111       3.19644G          2.69657G                    19.6392                     1.49414           928.573k    9.45791M   137.305M       231.902M/s   6.95061M   352.517M   1.80476G         13.1442      1.771/s 3.19624G/s     2.69657G               19.6392                1.49414   524.288k       928.515k/s [best: throughput=  0.24 GB/s doc_throughput=     1 docs/s instructions=  2696565381 cycles=  1804762551 branch_miss= 9457912 cache_miss= 6950615 cache_ref= 352517244 items=    524288 avg_time= 564616686 ns]
Kostya<OnDemand>          480189094 ns    480186391 ns            2         9.36939M           286.271M        5.28571M       257.972M    1.53346G              11.1683           2.08493       3.19717G          2.30727G                     16.804                     1.50462            1093.1k    9.43189M   137.305M       272.695M/s   5.28578M   258.159M   1.53506G         11.1799    2.08252/s  3.1968G/s     2.30727G                16.804                1.50305   524.288k       1091.84k/s [best: throughput=  0.29 GB/s doc_throughput=     2 docs/s instructions=  2307273525 cycles=  1533463880 branch_miss= 9369392 cache_miss= 5285710 cache_ref= 257971983 items=    524288 avg_time= 480133827 ns]
KostyaSum<OnDemand>       483487612 ns    483485469 ns            2         9.52855M           284.468M        5.28525M       256.285M    1.54334G              11.2402            2.0718       3.19748G          2.30675G                    16.8002                     1.49465           1086.22k    9.60991M   137.305M       270.834M/s   5.28523M   256.531M    1.5457G         11.2574    2.06831/s   3.197G/s     2.30675G               16.8002                1.49236   524.288k       1084.39k/s [best: throughput=  0.28 GB/s doc_throughput=     2 docs/s instructions=  2306749248 cycles=  1543340051 branch_miss= 9528549 cache_miss= 5285254 cache_ref= 256284566 items=    524288 avg_time= 483426756 ns]
DistinctUserID<Dom>         2558647 ns      2558605 ns          274         103.036k           250.187M         26.602k       1.98677M    8.07842M              12.7921            396.17       3.20043G          12.4507M                    19.7156                     1.54123           45.5595k    103.653k   631.515k       235.386M/s   26.5877k    1.9873M   8.09368M         12.8163    390.838/s 3.16332G/s     12.4507M               19.7156                1.53832        115       44.9464k/s [best: throughput=  0.25 GB/s doc_throughput=   396 docs/s instructions=    12450709 cycles=     8078420 branch_miss=  103036 cache_miss=   26602 cache_ref=   1986774 items=       115 avg_time=   2531614 ns]
On Demand implementation: fallback
DistinctUserID<OnDemand>    1840168 ns      1840163 ns          381          70.575k           349.435M         22.407k       973.848k    5.78398M               9.1589           553.328       3.20044G          8.49403M                    13.4502                     1.46854           63.6328k    71.0728k   631.515k       327.286M/s   22.4085k   974.355k   5.79604M           9.178     543.43/s 3.14974G/s     8.49403M               13.4502                1.46549        115       62.4945k/s [best: throughput=  0.35 GB/s doc_throughput=   553 docs/s instructions=     8494031 cycles=     5783983 branch_miss=   70575 cache_miss=   22407 cache_ref=    973848 items=       115 avg_time=   1812966 ns]
FindTweet<Dom>              2512046 ns      2512041 ns          279         102.801k           254.879M         23.475k       1.96754M    7.92957M              12.5564           403.599       3.20037G          12.3524M                      19.56                     1.55777            403.599    103.161k   631.515k       239.749M/s   23.4717k   1.96752M   7.94013M         12.5731    398.083/s 3.16083G/s     12.3524M                 19.56                1.55569          1        398.083/s [best: throughput=  0.25 GB/s doc_throughput=   403 docs/s instructions=    12352403 cycles=     7929566 branch_miss=  102801 cache_miss=   23475 cache_ref=   1967535 items=         1 avg_time=   2483408 ns]
On Demand implementation: fallback
FindTweet<OnDemand>         1709366 ns      1709364 ns          409          68.052k           376.773M         11.543k        793.29k    5.36472M              8.49501           596.618       3.20069G           7.8711M                    12.4638                     1.46719            596.618    68.5083k   631.515k        352.33M/s   11.5453k   793.302k   5.37391M         8.50954    585.013/s  3.1438G/s     7.87109M               12.4638                1.46469          1        585.013/s [best: throughput=  0.38 GB/s doc_throughput=   596 docs/s instructions=     7871095 cycles=     5364725 branch_miss=   68052 cache_miss=   11543 cache_ref=    793290 items=         1 avg_time=   1680785 ns]
