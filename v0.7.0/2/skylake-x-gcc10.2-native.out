run_benchmark: v0.8.0~36 /home/jkeiser/simdjson_benchmark_results/v0.7.0/2/skylake-x-gcc10.2-native.json -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native
git reset --hard v0.8.0~36
HEAD is now at 6b02b065 Merge pull request #1330 from simdjson/jkeiser/depth-tracking
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- git Version: v0.2.1-6b02b065
-- Version: 0.2.1
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 10
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
make[3]: Nothing to be done for '_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build'.
[ 80%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
make[3]: Nothing to be done for 'jsonexamples/generated/CMakeFiles/generated-data.dir/build'.
[ 80%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/g++-10  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/src  -march=native -O3 -DNDEBUG -fPIC   -pthread -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/g++-10 -fPIC -march=native -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.6 -o ../libsimdjson.so.6.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.6.0.0 ../libsimdjson.so.6 ../libsimdjson.so
[ 90%] Built target simdjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/g++-10  -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/g++-10  -march=native -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.6.0.0 ../_deps/google_benchmarks/src/libbenchmark.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/2/skylake-x-gcc10.2-native.json --benchmark_out_format=json
2021-01-25 00:00:30
Running benchmark/bench_ondemand
Run on (4 X 3200 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 1024 KiB (x4)
  L3 Unified 8448 KiB (x1)
Load Average: 1.05, 1.01, 1.00
***WARNING*** CPU scaling is enabled, the benchmark real time measurements may be noisy and will incur extra overhead.
On Demand implementation: haswell
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Benchmark                         Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
PartialTweets<OnDemand>      243889 ns       243869 ns         2870           2.431k           2.76991G               0         2.768k    728.103k              1.15295          4.38614k       3.19356G          2.21746M                    3.51134                     3.04554           438.614k    2.54817k   631.515k       2.41172G/s    0.15122   2.82395k   732.194k         1.15943   4.10056k/s 3.00241G/s     2.21746M               3.51134                3.02852        100       410.056k/s [best: throughput=  2.77 GB/s doc_throughput=  4386 docs/s instructions=     2217464 cycles=      728103 branch_miss=    2431 cache_miss=       0 cache_ref=      2768 items=       100 avg_time=    229463 ns]
PartialTweets<Dom>           342127 ns       342121 ns         2043            3.83k           1.95364G               0        30.801k    1032.31k              1.63466          3.09357k       3.19354G          3.07043M                    4.86201                     2.97432           309.357k    3.94279k   631.515k       1.71911G/s  0.0357318   31.0223k   1038.35k         1.64422   2.92295k/s 3.03505G/s     3.07043M               4.86201                2.95703        100       292.295k/s [best: throughput=  1.95 GB/s doc_throughput=  3093 docs/s instructions=     3070434 cycles=     1032314 branch_miss=    3830 cache_miss=       0 cache_ref=     30801 items=       100 avg_time=    325480 ns]
Creating a source file spanning 44921 KB 
LargeRandom<Dom>           98849802 ns     98848913 ns            7         852.859k           465.748M        6.80779M       6.89604M     314.91M              6.84605           10.1252       3.18853G          989.581M                    21.5132                     3.14243           10.1252M    853.424k   45.9988M       443.787M/s   6.81587M   6.89633M    315.09M         6.84997    10.1164/s 3.18759G/s     989.581M               21.5132                3.14063      1000k       10.1164M/s [best: throughput=  0.47 GB/s doc_throughput=    10 docs/s instructions=   989581014 cycles=   314909913 branch_miss=  852859 cache_miss= 6807791 cache_ref=   6896039 items=   1000000 avg_time=  98821733 ns]
LargeRandomSum<Dom>        98604765 ns     98601929 ns            7         851.492k           467.288M        6.39221M       6.51968M    313.879M              6.82364           10.1587       3.18861G          994.581M                    21.6219                     3.16867           10.1587M    851.466k   45.9988M       444.899M/s   6.44176M    6.5192M   314.293M         6.83263    10.1418/s 3.18749G/s     994.581M               21.6219                3.16451      1000k       10.1418M/s [best: throughput=  0.47 GB/s doc_throughput=    10 docs/s instructions=   994581027 cycles=   313879295 branch_miss=  851492 cache_miss= 6392210 cache_ref=   6519678 items=   1000000 avg_time=  98576650 ns]
LargeRandom<OnDemand>      65899887 ns     65894573 ns           11         871.354k           698.972M        3.52103M       3.57238M     209.86M              4.56229           15.1954       3.18891G          640.959M                    13.9343                     3.05423           15.1954M     871.42k   45.9988M       665.728M/s   3.49383M   3.57253M   210.009M         4.56553    15.1758/s 3.18705G/s     640.959M               13.9343                3.05205      1000k       15.1758M/s [best: throughput=  0.70 GB/s doc_throughput=    15 docs/s instructions=   640958909 cycles=   209859651 branch_miss=  871354 cache_miss= 3521031 cache_ref=   3572377 items=   1000000 avg_time=  65871822 ns]
LargeRandomSum<OnDemand>   63462763 ns     63462206 ns           11         875.097k            726.66M        3.10509M       3.19629M    201.874M              4.38868           15.7974       3.18908G          594.958M                    12.9342                     2.94718           15.7974M    876.581k   45.9988M       691.244M/s   3.12391M   3.19634M   202.279M         4.39749    15.7574/s  3.1874G/s     594.958M               12.9342                2.94127      1000k       15.7574M/s [best: throughput=  0.73 GB/s doc_throughput=    15 docs/s instructions=   594958338 cycles=   201873732 branch_miss=  875097 cache_miss= 3105091 cache_ref=   3196292 items=   1000000 avg_time=  63435191 ns]
Creating a source file spanning 134087 KB 
Kostya<Dom>                98966391 ns     98956457 ns            7         481.786k           1.39047G        10.2003M       10.3148M    314.841M              2.29301           10.1268       3.18835G          972.126M                    7.08005                     3.08767           5.30938M    481.892k   137.305M       1.29224G/s   10.2109M   10.3147M   315.379M         2.29692    10.1055/s 3.18705G/s     972.126M               7.08005                3.08241   524.288k       5.29817M/s [best: throughput=  1.39 GB/s doc_throughput=    10 docs/s instructions=   972125798 cycles=   314841282 branch_miss=  481786 cache_miss=10200304 cache_ref=  10314838 items=    524288 avg_time=  98935446 ns]
KostyaSum<Dom>             98160936 ns     98151143 ns            7         479.898k           1.40124G        10.0148M       10.1173M    312.432M              2.27546           10.2053       3.18848G          974.747M                    7.09914                     3.11987           5.35054M    480.191k   137.305M       1.30284G/s   10.0245M   10.1175M   312.822M          2.2783    10.1884/s 3.18715G/s     974.747M               7.09914                3.11598   524.288k       5.34164M/s [best: throughput=  1.40 GB/s doc_throughput=    10 docs/s instructions=   974747251 cycles=   312432290 branch_miss=  479898 cache_miss=10014841 cache_ref=  10117343 items=    524288 avg_time=  98130148 ns]
Kostya<OnDemand>           69722344 ns     69720035 ns           10         465.131k           1.97228G        6.36191M       6.47111M    221.989M              1.61676           14.3642       3.18871G          685.012M                    4.98898                     3.08579             7.531M    464.752k   137.305M       1.83412G/s   6.39455M   6.47116M   222.199M         1.61829    14.3431/s 3.18702G/s     685.012M               4.98898                3.08288   524.288k        7.5199M/s [best: throughput=  1.97 GB/s doc_throughput=    14 docs/s instructions=   685012177 cycles=   221989267 branch_miss=  465131 cache_miss= 6361905 cache_ref=   6471112 items=    524288 avg_time=  69692530 ns]
KostyaSum<OnDemand>        69535783 ns     69526459 ns           10         469.121k           1.97715G        6.17609M       6.27327M    221.432M               1.6127           14.3997       3.18855G          676.623M                    4.92789                     3.05567           7.54958M    469.868k   137.305M       1.83923G/s   6.20222M   6.27335M   221.569M          1.6137     14.383/s 3.18683G/s     676.623M               4.92789                3.05378   524.288k       7.54084M/s [best: throughput=  1.98 GB/s doc_throughput=    14 docs/s instructions=   676623278 cycles=   221431999 branch_miss=  469121 cache_miss= 6176091 cache_ref=   6273268 items=    524288 avg_time=  69506185 ns]
DistinctUserID<Dom>          342755 ns       342752 ns         2047           4.018k           1.96906G               6        30.309k    1024.19k               1.6218          3.11799k       3.19343G          3.02096M                    4.78367                      2.9496           358.569k    4.17746k   631.515k       1.71595G/s    4.34587   30.5219k   1032.88k         1.63555   2.91756k/s 3.01348G/s     3.02096M               4.78367                2.92481        115        335.52k/s [best: throughput=  1.97 GB/s doc_throughput=  3117 docs/s instructions=     3020962 cycles=     1024194 branch_miss=    4018 cache_miss=       6 cache_ref=     30309 items=       115 avg_time=    323763 ns]
On Demand implementation: haswell
DistinctUserID<OnDemand>     235925 ns       235920 ns         2988           2.114k           2.90036G               0         5.209k    695.375k              1.10112           4.5927k       3.19365G          2.17925M                    3.45083                     3.13392            528.16k    2.26049k   631.515k       2.49298G/s   8.70147m    5.3022k   700.401k         1.10908   4.23872k/s 2.96881G/s     2.17925M               3.45083                3.11143        115       487.453k/s [best: throughput=  2.90 GB/s doc_throughput=  4592 docs/s instructions=     2179253 cycles=      695375 branch_miss=    2114 cache_miss=       0 cache_ref=      5209 items=       115 avg_time=    219464 ns]
FindTweet<Dom>               323361 ns       323358 ns         2167           3.598k           2.08911G               0        24.879k    965.356k              1.52864          3.30809k       3.19349G          2.93086M                      4.641                     3.03604           3.30809k    3.75326k   631.515k       1.81886G/s  0.0267651   25.1508k   971.158k         1.53782   3.09255k/s 3.00335G/s     2.93086M                 4.641                 3.0179          1       3.09255k/s [best: throughput=  2.09 GB/s doc_throughput=  3308 docs/s instructions=     2930861 cycles=      965356 branch_miss=    3598 cache_miss=       0 cache_ref=     24879 items=         1 avg_time=    304362 ns]
On Demand implementation: haswell
FindTweet<OnDemand>          168719 ns       168715 ns         4141           1.218k           4.17451G               0         3.312k    483.211k             0.765162           6.6103k       3.19417G          1.57077M                     2.4873                     3.25069            6.6103k    1.26314k   631.515k       3.48602G/s   241.488u   3.47696k   485.897k        0.769415   5.92714k/s 2.87998G/s     1.57077M                2.4873                3.23272          1       5.92714k/s [best: throughput=  4.17 GB/s doc_throughput=  6610 docs/s instructions=     1570770 cycles=      483211 branch_miss=    1218 cache_miss=       0 cache_ref=      3312 items=         1 avg_time=    152226 ns]
