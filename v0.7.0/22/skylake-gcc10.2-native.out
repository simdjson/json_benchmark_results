run_benchmark: v0.8.0~16 /home/jkeiser/simdjson_benchmark_results/v0.7.0/22/skylake-gcc10.2-native.json -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native
git reset --hard v0.8.0~16
HEAD is now at 45479558 Merge pull request #1376 from simdjson/jkeiser/ondemand-runtime
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The CXX compiler identification is GNU 10.2.0
-- The C compiler identification is GNU 10.2.0
-- Check for working CXX compiler: /usr/bin/g++-10
-- Check for working CXX compiler: /usr/bin/g++-10 -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Check for working C compiler: /usr/bin/gcc-10
-- Check for working C compiler: /usr/bin/gcc-10 -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed
-- Check if compiler accepts -pthread
-- Check if compiler accepts -pthread - yes
-- Found Threads: TRUE  
-- Looking for fork
-- Looking for fork - found
-- Looking for wait
-- Looking for wait - found
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- Found Git: /usr/bin/git (found version "2.27.0") 
-- git Version: v0.2.1-45479558
-- Version: 0.2.1
-- Performing Test HAVE_CXX_FLAG_STD_CXX11
-- Performing Test HAVE_CXX_FLAG_STD_CXX11 - Success
-- Performing Test HAVE_CXX_FLAG_WALL
-- Performing Test HAVE_CXX_FLAG_WALL - Success
-- Performing Test HAVE_CXX_FLAG_WEXTRA
-- Performing Test HAVE_CXX_FLAG_WEXTRA - Success
-- Performing Test HAVE_CXX_FLAG_WSHADOW
-- Performing Test HAVE_CXX_FLAG_WSHADOW - Success
-- Performing Test HAVE_CXX_FLAG_WERROR
-- Performing Test HAVE_CXX_FLAG_WERROR - Success
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32 - Failed
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED - Success
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WD654
-- Performing Test HAVE_CXX_FLAG_WD654 - Failed
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY - Failed
-- Performing Test HAVE_CXX_FLAG_COVERAGE
-- Performing Test HAVE_CXX_FLAG_COVERAGE - Success
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Performing Test USE_BOOST_JSON
-- Performing Test USE_BOOST_JSON - Failed
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Found Python3: /usr/bin/python3.8 (found version "3.8.6") found components: Interpreter 
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 10
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
Scanning dependencies of target benchmark
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_api_internal.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_name.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_name.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_register.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_register.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_runner.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_runner.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/colorprint.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/colorprint.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/commandlineflags.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/commandlineflags.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/complexity.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/complexity.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/console_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/console_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/counter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/counter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/csv_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/csv_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/json_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/json_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/sleep.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sleep.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/statistics.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/statistics.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/string_util.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/string_util.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/sysinfo.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sysinfo.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/timers.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/timers.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -P CMakeFiles/benchmark.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/benchmark.dir/link.txt --verbose=1
/usr/bin/ar qc libbenchmark.a  CMakeFiles/benchmark.dir/benchmark.cc.o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o CMakeFiles/benchmark.dir/benchmark_name.cc.o CMakeFiles/benchmark.dir/benchmark_register.cc.o CMakeFiles/benchmark.dir/benchmark_runner.cc.o CMakeFiles/benchmark.dir/colorprint.cc.o CMakeFiles/benchmark.dir/commandlineflags.cc.o CMakeFiles/benchmark.dir/complexity.cc.o CMakeFiles/benchmark.dir/console_reporter.cc.o CMakeFiles/benchmark.dir/counter.cc.o CMakeFiles/benchmark.dir/csv_reporter.cc.o CMakeFiles/benchmark.dir/json_reporter.cc.o CMakeFiles/benchmark.dir/reporter.cc.o CMakeFiles/benchmark.dir/sleep.cc.o CMakeFiles/benchmark.dir/statistics.cc.o CMakeFiles/benchmark.dir/string_util.cc.o CMakeFiles/benchmark.dir/sysinfo.cc.o CMakeFiles/benchmark.dir/timers.cc.o
/usr/bin/ranlib libbenchmark.a
[ 80%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
Scanning dependencies of target generated-data
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated && /usr/bin/ruby genfeaturejson.rb /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-miss.json ...
[ 80%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/g++-10  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/src  -march=native -O3 -DNDEBUG -fPIC   -pthread -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/g++-10 -fPIC -march=native -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.6 -o ../libsimdjson.so.6.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.6.0.0 ../libsimdjson.so.6 ../libsimdjson.so
[ 80%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
Scanning dependencies of target yyjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/gcc-10  -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src  -O3 -DNDEBUG   -o CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o   -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src/yyjson.c
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -P CMakeFiles/yyjson.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -E cmake_link_script CMakeFiles/yyjson.dir/link.txt --verbose=1
/usr/bin/ar qc libyyjson.a  CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o
/usr/bin/ranlib libyyjson.a
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/g++-10  -DRAPIDJSON_HAS_STDSTRING -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_COMPETITION_RAPIDJSON -DSIMDJSON_COMPETITION_YYJSON -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/rapidjson/include  -march=native -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/g++-10  -march=native -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.6.0.0 ../_deps/google_benchmarks/src/libbenchmark.a ../dependencies/libyyjson.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/22/skylake-gcc10.2-native.json --benchmark_out_format=json
2021-01-25 02:12:41
Running benchmark/bench_ondemand
Run on (4 X 4000 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 256 KiB (x4)
  L3 Unified 8192 KiB (x1)
Load Average: 1.00, 1.00, 0.92
simdjson::dom implementation:      haswell
simdjson::ondemand implementation: haswell

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                  258071 ns       286346 ns         2713           3.677k           2.46205G               0        87.408k    947.103k              1.49973          3.89864k       3.69241G          2.91501M                    4.61591                     3.07782           389.864k    3.82044k   631.515k         2.279G/s    2.00074   87.3221k   952.452k          1.5082    3.8749k/s 3.69065G/s     2.91502M               4.61591                3.06054        100        387.49k/s [BEST: throughput=  2.46 GB/s doc_throughput=  3898 docs/s instructions=     2915015 cycles=      947103 branch_miss=    3677 cache_miss=       0 cache_ref=     87408 items=       100 avg_time=    258071 ns]
partial_tweets<simdjson_ondemand>/manual_time             178186 ns       206199 ns         3903           1.513k           3.57734G               8        55.127k    651.941k              1.03234           5.6647k       3.69305G          2.14231M                    3.39234                     3.28605            566.47k     1.6397k   631.515k       3.30073G/s    7.46605   55.0969k   657.712k         1.04148   5.61211k/s 3.69115G/s     2.14231M               3.39234                3.25722        100       561.211k/s [BEST: throughput=  3.58 GB/s doc_throughput=  5664 docs/s instructions=     2142311 cycles=      651941 branch_miss=    1513 cache_miss=       8 cache_ref=     55127 items=       100 avg_time=    178186 ns]
partial_tweets<yyjson>/manual_time                        687833 ns       718282 ns         1016           9.602k           1.60045G             266        74.179k     1.4572M              2.30747           2.5343k       3.69298G          2.90835M                    4.60536                     1.99585            253.43k    7.51064k   631.515k       875.589M/s    965.658   49.2472k    1.6898M         2.67578   1.45384k/s 2.45669G/s     2.90884M               4.60613                1.72142        100       145.384k/s [BEST: throughput=  1.60 GB/s doc_throughput=  2534 docs/s instructions=     2908354 cycles=     1457203 branch_miss=    9602 cache_miss=     266 cache_ref=     74179 items=       100 avg_time=    687833 ns]
partial_tweets<yyjson_insitu>/manual_time                 478008 ns       506986 ns         1465           7.078k           1.77594G             727        45.573k    1.30648M              2.06881          2.81219k       3.67407G          2.90804M                    4.60486                     2.22585           281.219k    7.34495k   631.515k       1.23041G/s    133.412   31.8308k   1.41876M          2.2466   2.09201k/s 2.96806G/s      2.9083M               4.60528                2.04989        100       209.201k/s [BEST: throughput=  1.78 GB/s doc_throughput=  2812 docs/s instructions=     2908039 cycles=     1306482 branch_miss=    7078 cache_miss=     727 cache_ref=     45573 items=       100 avg_time=    478008 ns]
partial_tweets<rapidjson>/manual_time                    1675635 ns      1704550 ns          419            26.2k           429.194M         11.101k        52.779k    5.43174M              8.60113           679.627       3.69156G          13.1237M                    20.7813                     2.41611           67.9627k    26.6708k   631.515k       359.422M/s    496.895    32.817k   5.59699M          8.8628    596.789/s 3.34022G/s     13.1243M               20.7823                2.34489        100       59.6789k/s [BEST: throughput=  0.43 GB/s doc_throughput=   679 docs/s instructions=    13123674 cycles=     5431741 branch_miss=   26200 cache_miss=   11101 cache_ref=     52779 items=       100 avg_time=   1675635 ns]
partial_tweets<rapidjson_insitu>/manual_time              975442 ns      1003974 ns          721          24.747k           737.743M             213        43.123k    3.16008M              5.00397          1.16821k       3.69165G          9.82416M                    15.5565                     3.10883           116.821k     25.097k   631.515k       617.422M/s     199.62   33.8337k   3.25553M         5.15511    1025.18/s 3.33749G/s     9.82477M               15.5575                3.01787        100       102.518k/s [BEST: throughput=  0.74 GB/s doc_throughput=  1168 docs/s instructions=     9824160 cycles=     3160084 branch_miss=   24747 cache_miss=     213 cache_ref=     43123 items=       100 avg_time=    975442 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                  96816819 ns    100220284 ns            7         863.282k           476.131M         11.011M        15.202M      356.3M              7.74586           10.3509       3.68804G          981.675M                    21.3413                     2.75519           10.3509M    862.543k   45.9988M       453.102M/s   11.0177M   15.2062M   357.112M         7.76351    10.3288/s 3.68853G/s     981.675M               21.3413                2.74893      1000k       10.3288M/s [BEST: throughput=  0.48 GB/s doc_throughput=    10 docs/s instructions=   981674940 cycles=   356300308 branch_miss=  863282 cache_miss=11011031 cache_ref=  15201952 items=   1000000 avg_time=  96816818 ns]
large_random<simdjson_ondemand>/manual_time             59251429 ns     62611502 ns           12         870.239k           777.091M        5.70307M        7.8953M    218.355M              4.74698           16.8937       3.68883G          643.053M                    13.9798                     2.94498           16.8937M    870.348k   45.9988M       740.368M/s   5.70561M    7.8927M    218.57M         4.75166    16.8772/s 3.68886G/s     643.053M               13.9798                2.94209      1000k       16.8772M/s [BEST: throughput=  0.78 GB/s doc_throughput=    16 docs/s instructions=   643052686 cycles=   218355296 branch_miss=  870239 cache_miss= 5703071 cache_ref=   7895297 items=   1000000 avg_time=  59251429 ns]
large_random<simdjson_ondemand_unordered>/manual_time   62199796 ns     65563968 ns           11         860.719k           739.886M        5.69934M        7.8928M    229.363M              4.98628           16.0849       3.68927G          647.053M                    14.0667                     2.82109           16.0849M    860.642k   45.9988M       705.273M/s   5.71312M   7.89206M   229.447M         4.98811    16.0772/s 3.68887G/s     647.053M               14.0667                2.82005      1000k       16.0772M/s [BEST: throughput=  0.74 GB/s doc_throughput=    16 docs/s instructions=   647052688 cycles=   229362591 branch_miss=  860719 cache_miss= 5699340 cache_ref=   7892802 items=   1000000 avg_time=  62199796 ns]
large_random<yyjson>/manual_time                       127207656 ns    130630655 ns            5         663.367k           361.723M        5.88285M       9.03009M    349.553M              7.59919           7.86376       2.74881G           942.15M                    20.4821                     2.69529           7.86376M     662.66k   45.9988M       344.852M/s   5.87162M   9.01354M   349.543M         7.59896    7.86116/s 2.74781G/s      942.15M               20.4821                2.69538      1000k       7.86116M/s [BEST: throughput=  0.36 GB/s doc_throughput=     7 docs/s instructions=   942149596 cycles=   349553497 branch_miss=  663367 cache_miss= 5882845 cache_ref=   9030093 items=   1000000 avg_time= 127207656 ns]
large_random<yyjson_insitu>/manual_time                109463160 ns    112879260 ns            6         659.269k           420.421M        4.97843M       7.61809M    318.153M              6.91656           9.13983       2.90787G          936.029M                     20.349                     2.94207           9.13983M    663.134k   45.9988M       400.754M/s   4.99241M   7.65275M    318.37M         6.92127    9.13549/s 2.90847G/s     936.029M                20.349                2.94007      1000k       9.13549M/s [BEST: throughput=  0.42 GB/s doc_throughput=     9 docs/s instructions=   936028623 cycles=   318153134 branch_miss=  659269 cache_miss= 4978432 cache_ref=   7618093 items=   1000000 avg_time= 109463159 ns]
large_random<rapidjson>/manual_time                    178362110 ns    181777360 ns            4         594.741k           268.462M         7.0097M       10.6896M    574.299M              12.4851           5.83628       3.35177G          1.67014G                    36.3083                     2.90814           5.83628M    593.123k   45.9988M       245.948M/s   6.42934M   9.95718M   579.239M         12.5925    5.60657/s 3.24754G/s     1.67015G               36.3086                2.88335      1000k       5.60657M/s [BEST: throughput=  0.27 GB/s doc_throughput=     5 docs/s instructions=  1670139009 cycles=   574298606 branch_miss=  594741 cache_miss= 7009700 cache_ref=  10689567 items=   1000000 avg_time= 178362110 ns]
large_random<rapidjson_lossless>/manual_time           202957576 ns    206375649 ns            4         649.269k           234.835M        6.99507M       10.6945M    664.761M              14.4517           5.10524       3.39376G           2.0601G                    44.7861                     3.09902           5.10524M    651.518k   45.9988M       216.143M/s   6.42352M   9.97012M    669.94M         14.5643    4.92714/s 3.30089G/s     2.06011G               44.7863                3.07507      1000k       4.92714M/s [BEST: throughput=  0.23 GB/s doc_throughput=     5 docs/s instructions=  2060103940 cycles=   664760703 branch_miss=  649269 cache_miss= 6995072 cache_ref=  10694507 items=   1000000 avg_time= 202957576 ns]
large_random<rapidjson_insitu>/manual_time             155583199 ns    158996487 ns            5          595.74k           310.774M        8.06509M       12.2288M    488.101M              10.6112           6.75614       3.29768G          1.50214G                    32.6561                     3.07751           6.75614M    595.924k   45.9988M       281.958M/s   7.48785M   11.4405M   493.699M         10.7329    6.42743/s 3.17321G/s     1.50215G               32.6563                3.04264      1000k       6.42743M/s [BEST: throughput=  0.31 GB/s doc_throughput=     6 docs/s instructions=  1502138875 cycles=   488101329 branch_miss=  595740 cache_miss= 8065087 cache_ref=  12228768 items=   1000000 avg_time= 155583199 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                        88909945 ns     99224360 ns            8         437.772k           1.54531G        15.7753M       22.1076M    327.788M               2.3873           11.2546       3.68912G          938.041M                     6.8318                     2.86173           5.90065M     437.82k   137.305M       1.43826G/s   15.8018M   22.1183M    327.99M         2.38877    11.2473/s 3.68901G/s     938.041M                6.8318                2.85997   524.288k       5.89684M/s [BEST: throughput=  1.55 GB/s doc_throughput=    11 docs/s instructions=   938040601 cycles=   327787609 branch_miss=  437772 cache_miss=15775252 cache_ref=  22107618 items=    524288 avg_time=  88909944 ns]
kostya<simdjson_ondemand>/manual_time                   60360044 ns     70646981 ns           12         460.978k           2.28232G        10.1158M       13.7938M     221.94M               1.6164           16.6222       3.68914G          677.141M                    4.93166                     3.05101           8.71484M    462.018k   137.305M       2.11854G/s   10.1315M   13.8269M   222.672M         1.62173    16.5673/s 3.68906G/s     677.141M               4.93166                3.04098   524.288k       8.68601M/s [BEST: throughput=  2.28 GB/s doc_throughput=    16 docs/s instructions=   677141326 cycles=   221939818 branch_miss=  460978 cache_miss=10115847 cache_ref=  13793752 items=    524288 avg_time=  60360043 ns]
kostya<yyjson>/manual_time                             205067303 ns    215447620 ns            3         416.954k           670.039M        11.3937M       16.1864M     559.78M              4.07691           4.87993       2.73169G          984.045M                    7.16686                     1.75791           2.55849M    414.769k   137.305M       638.543M/s   11.3914M   16.2098M     559.7M         4.07633    4.87645/s 2.72935G/s     984.045M               7.16686                1.75816   524.288k       2.55666M/s [BEST: throughput=  0.67 GB/s doc_throughput=     4 docs/s instructions=   984045129 cycles=   559780146 branch_miss=  416954 cache_miss=11393686 cache_ref=  16186370 items=    524288 avg_time= 205067303 ns]
kostya<yyjson_insitu>/manual_time                      152070950 ns    162421437 ns            5         412.723k           903.176M        8.77847M       12.2619M    466.183M              3.39524           6.57788        3.0665G          965.775M                     7.0338                     2.07166           3.44871M    413.142k   137.305M       861.073M/s   8.78127M   12.2224M   466.252M         3.39574    6.57588/s 3.06602G/s     965.775M                7.0338                2.07136   524.288k       3.44765M/s [BEST: throughput=  0.90 GB/s doc_throughput=     6 docs/s instructions=   965775454 cycles=   466183453 branch_miss=  412723 cache_miss= 8778470 cache_ref=  12261918 items=    524288 avg_time= 152070950 ns]
kostya<rapidjson>/manual_time                          260914188 ns    271294459 ns            3         951.007k           533.239M        8.12564M       11.8997M    868.599M              6.32606           3.88361        3.3733G          2.29617G                    16.7231                     2.64353           2.03613M    951.341k   137.305M       501.867M/s   7.81581M   11.5552M   871.917M         6.35022    3.83268/s 3.34178G/s     2.29617G               16.7231                2.63347   524.288k       2.00943M/s [BEST: throughput=  0.53 GB/s doc_throughput=     3 docs/s instructions=  2296165098 cycles=   868598999 branch_miss=  951007 cache_miss= 8125635 cache_ref=  11899691 items=    524288 avg_time= 260914187 ns]
kostya<rapidjson_lossless>/manual_time                 261406980 ns    271781059 ns            3         971.807k           532.133M        8.12785M       11.9371M     870.68M              6.34121           3.87556       3.37437G          2.51583G                    18.3229                      2.8895           2.03191M    970.288k   137.305M       500.921M/s   7.82589M   11.6378M   873.834M         6.36418    3.82545/s 3.34281G/s     2.51583G                18.323                2.87908   524.288k       2.00564M/s [BEST: throughput=  0.53 GB/s doc_throughput=     3 docs/s instructions=  2515832551 cycles=   870679649 branch_miss=  971807 cache_miss= 8127854 cache_ref=  11937140 items=    524288 avg_time= 261406980 ns]
kostya<rapidjson_insitu>/manual_time                   217550814 ns    227929398 ns            3          1097.3k           640.905M        11.1807M       15.6221M    709.115M              5.16452           4.66775       3.30997G          2.04643G                    14.9043                     2.88589           2.44724M    1095.51k   137.305M       601.902M/s   10.8823M   15.2154M   712.043M         5.18585    4.59663/s   3.273G/s     2.04643G               14.9043                2.87403   524.288k       2.40996M/s [BEST: throughput=  0.64 GB/s doc_throughput=     4 docs/s instructions=  2046430058 cycles=   709114624 branch_miss= 1097304 cache_miss=11180683 cache_ref=  15622139 items=    524288 avg_time= 217550814 ns]
distinct_user_id<simdjson_dom>/manual_time                257402 ns       288117 ns         2717           3.796k           2.46878G               2        88.047k    944.578k              1.49573           3.9093k       3.69264G          2.85594M                    4.52236                     3.02351            449.57k    3.94397k   631.515k       2.28493G/s    10.4619   88.0885k   949.986k          1.5043   3.88498k/s 3.69068G/s     2.85594M               4.52236                3.00629        115       446.773k/s [BEST: throughput=  2.47 GB/s doc_throughput=  3909 docs/s instructions=     2855937 cycles=      944578 branch_miss=    3796 cache_miss=       2 cache_ref=     88047 items=       115 avg_time=    257401 ns]
distinct_user_id<simdjson_ondemand>/manual_time           181147 ns       210694 ns         3856           1.672k           3.57071G               0        52.622k    653.068k              1.03413          5.65419k       3.69257G          2.09843M                    3.32285                     3.21319           650.232k    1.82544k   631.515k       3.24678G/s   0.313278   52.7197k   668.667k         1.05883   5.52039k/s  3.6913G/s     2.09843M               3.32285                3.13823        115       634.845k/s [BEST: throughput=  3.57 GB/s doc_throughput=  5654 docs/s instructions=     2098432 cycles=      653068 branch_miss=    1672 cache_miss=       0 cache_ref=     52622 items=       115 avg_time=    181146 ns]
distinct_user_id<yyjson>/manual_time                      674391 ns       708493 ns         1216           9.941k           1.59833G             186        73.181k    1.45882M              2.31003          2.53094k       3.69219G          2.87342M                    4.55004                     1.96968           291.058k    7.64907k   631.515k       893.043M/s     1041.8    47.901k   1.68242M          2.6641   1.48282k/s 2.49473G/s     2.87382M               4.55067                1.70815        115       170.524k/s [BEST: throughput=  1.60 GB/s doc_throughput=  2530 docs/s instructions=     2873417 cycles=     1458821 branch_miss=    9941 cache_miss=     186 cache_ref=     73181 items=       115 avg_time=    674390 ns]
distinct_user_id<yyjson_insitu>/manual_time               472277 ns       505122 ns         1481             7.1k           1.79388G             424        44.018k    1.29619M              2.05251           2.8406k       3.68197G          2.87301M                     4.5494                      2.2165           326.669k    7.47401k   631.515k       1.24534G/s     111.31   30.5043k   1.41056M         2.23361    2.1174k/s 2.98671G/s     2.87328M               4.54982                2.03698        115       243.501k/s [BEST: throughput=  1.79 GB/s doc_throughput=  2840 docs/s instructions=     2873015 cycles=     1296192 branch_miss=    7100 cache_miss=     424 cache_ref=     44018 items=       115 avg_time=    472276 ns]
distinct_user_id<rapidjson>/manual_time                  1653002 ns      1683295 ns          424          26.504k           430.723M             307        51.323k    5.41251M              8.57068           682.047       3.69159G          13.0655M                    20.6891                     2.41394           78.4354k    26.5719k   631.515k       364.343M/s   1.95933k   34.3812k   5.57141M          8.8223     604.96/s 3.37048G/s     13.0663M               20.6903                2.34523        115       69.5704k/s [BEST: throughput=  0.43 GB/s doc_throughput=   682 docs/s instructions=    13065469 cycles=     5412512 branch_miss=   26504 cache_miss=     307 cache_ref=     51323 items=       115 avg_time=   1653001 ns]
distinct_user_id<rapidjson_insitu>/manual_time            956277 ns       986579 ns          760           25.21k            738.52M               6        45.042k    3.15676M              4.99871          1.16944k       3.69165G          9.77576M                    15.4799                     3.09677           134.486k    25.1394k   631.515k       629.796M/s   1.76475k   36.2318k    3.2356M         5.12355    1045.72/s 3.38354G/s     9.77632M               15.4807                3.02149        115       120.258k/s [BEST: throughput=  0.74 GB/s doc_throughput=  1169 docs/s instructions=     9775758 cycles=     3156762 branch_miss=   25210 cache_miss=       6 cache_ref=     45042 items=       115 avg_time=    956277 ns]
find_tweet<simdjson_dom>/manual_time                      246392 ns       275621 ns         2843           3.447k           2.58015G               4        82.853k     903.72k              1.43103          4.08565k       3.69229G           2.7749M                    4.39404                     3.07053           4.08565k    3.60085k   631.515k       2.38703G/s    5.23778   82.7436k   909.217k         1.43974   4.05857k/s 3.69012G/s      2.7749M               4.39404                3.05197          1       4.05857k/s [BEST: throughput=  2.58 GB/s doc_throughput=  4085 docs/s instructions=     2774900 cycles=      903720 branch_miss=    3447 cache_miss=       4 cache_ref=     82853 items=         1 avg_time=    246391 ns]
find_tweet<simdjson_ondemand>/manual_time                 117500 ns       146011 ns         5953              683           5.39443G               0         31.78k    432.506k             0.684871          8.54204k       3.69449G          1.47888M                     2.3418                     3.41933           8.54204k     719.116   631.515k        5.0055G/s   0.224593    31.982k   433.668k        0.686711   8.51067k/s 3.69081G/s     1.47888M                2.3418                3.41016          1       8.51067k/s [BEST: throughput=  5.39 GB/s doc_throughput=  8542 docs/s instructions=     1478879 cycles=      432506 branch_miss=     683 cache_miss=       0 cache_ref=     31780 items=         1 avg_time=    117499 ns]
find_tweet<yyjson>/manual_time                            663818 ns       694972 ns         1109           9.374k           1.64202G             145        69.522k     1.4201M              2.24872          2.60013k       3.69244G          2.82413M                    4.47199                     1.98869           2.60013k    7.37023k   631.515k       907.266M/s    990.743    41.548k   1.64749M         2.60879   1.50644k/s 2.48184G/s     2.82462M               4.47276                 1.7145          1       1.50644k/s [BEST: throughput=  1.64 GB/s doc_throughput=  2600 docs/s instructions=     2824130 cycles=     1420099 branch_miss=    9374 cache_miss=     145 cache_ref=     69522 items=         1 avg_time=    663818 ns]
find_tweet<yyjson_insitu>/manual_time                     462528 ns       492756 ns         1514           6.725k           1.84982G             591          38.1k    1.25716M               1.9907          2.92918k       3.68244G          2.82381M                    4.47149                     2.24619           2.92918k     7.2122k   631.515k       1.27159G/s    15.7153   23.5626k    1.3737M         2.17525   2.16203k/s 2.96998G/s     2.82408M               4.47191                2.05582          1       2.16203k/s [BEST: throughput=  1.85 GB/s doc_throughput=  2929 docs/s instructions=     2823814 cycles=     1257159 branch_miss=    6725 cache_miss=     591 cache_ref=     38100 items=         1 avg_time=    462528 ns]
find_tweet<rapidjson>/manual_time                        1644852 ns      1674050 ns          426          26.438k           433.027M             345        47.732k    5.38369M              8.52503           685.696       3.69157G          12.9976M                    20.5816                     2.41425            685.696    26.5172k   631.515k       366.148M/s     1.613k   28.7681k   5.53857M         8.77029    607.957/s 3.36721G/s     12.9983M               20.5828                2.34688          1        607.957/s [BEST: throughput=  0.43 GB/s doc_throughput=   685 docs/s instructions=    12997562 cycles=     5383685 branch_miss=   26438 cache_miss=     345 cache_ref=     47732 items=         1 avg_time=   1644852 ns]
find_tweet<rapidjson_insitu>/manual_time                  947163 ns       976897 ns          772          24.736k           746.166M          5.668k        36.409k    3.12453M              4.94768          1.18155k       3.69179G          9.71821M                    15.3887                     3.11029           1.18155k     25.013k   631.515k       635.856M/s   1.52836k   27.3421k   3.20165M         5.06979    1055.78/s 3.38025G/s     9.71846M               15.3891                3.03545          1        1055.78/s [BEST: throughput=  0.75 GB/s doc_throughput=  1181 docs/s instructions=     9718208 cycles=     3124533 branch_miss=   24736 cache_miss=    5668 cache_ref=     36409 items=         1 avg_time=    947163 ns]
