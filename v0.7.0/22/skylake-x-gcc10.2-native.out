run_benchmark: v0.8.0~16 /home/jkeiser/simdjson_benchmark_results/v0.7.0/22/skylake-x-gcc10.2-native.json -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native
git reset --hard v0.8.0~16
HEAD is now at 45479558 Merge pull request #1376 from simdjson/jkeiser/ondemand-runtime
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The CXX compiler identification is GNU 10.2.0
-- The C compiler identification is GNU 10.2.0
-- Check for working CXX compiler: /usr/bin/g++-10
-- Check for working CXX compiler: /usr/bin/g++-10 -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Check for working C compiler: /usr/bin/gcc-10
-- Check for working C compiler: /usr/bin/gcc-10 -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed
-- Check if compiler accepts -pthread
-- Check if compiler accepts -pthread - yes
-- Found Threads: TRUE  
-- Looking for fork
-- Looking for fork - found
-- Looking for wait
-- Looking for wait - found
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- Found Git: /usr/bin/git (found version "2.27.0") 
-- git Version: v0.2.1-45479558
-- Version: 0.2.1
-- Performing Test HAVE_CXX_FLAG_STD_CXX11
-- Performing Test HAVE_CXX_FLAG_STD_CXX11 - Success
-- Performing Test HAVE_CXX_FLAG_WALL
-- Performing Test HAVE_CXX_FLAG_WALL - Success
-- Performing Test HAVE_CXX_FLAG_WEXTRA
-- Performing Test HAVE_CXX_FLAG_WEXTRA - Success
-- Performing Test HAVE_CXX_FLAG_WSHADOW
-- Performing Test HAVE_CXX_FLAG_WSHADOW - Success
-- Performing Test HAVE_CXX_FLAG_WERROR
-- Performing Test HAVE_CXX_FLAG_WERROR - Success
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32 - Failed
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED - Success
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WD654
-- Performing Test HAVE_CXX_FLAG_WD654 - Failed
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY - Failed
-- Performing Test HAVE_CXX_FLAG_COVERAGE
-- Performing Test HAVE_CXX_FLAG_COVERAGE - Success
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Performing Test USE_BOOST_JSON
-- Performing Test USE_BOOST_JSON - Failed
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Found Python3: /usr/bin/python3.8 (found version "3.8.6") found components: Interpreter 
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 10
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
Scanning dependencies of target benchmark
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_api_internal.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_name.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_name.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_register.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_register.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_runner.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_runner.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/colorprint.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/colorprint.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/commandlineflags.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/commandlineflags.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/complexity.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/complexity.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/console_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/console_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/counter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/counter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/csv_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/csv_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/json_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/json_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/sleep.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sleep.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/statistics.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/statistics.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/string_util.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/string_util.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/sysinfo.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sysinfo.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/timers.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/timers.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -P CMakeFiles/benchmark.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/benchmark.dir/link.txt --verbose=1
/usr/bin/ar qc libbenchmark.a  CMakeFiles/benchmark.dir/benchmark.cc.o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o CMakeFiles/benchmark.dir/benchmark_name.cc.o CMakeFiles/benchmark.dir/benchmark_register.cc.o CMakeFiles/benchmark.dir/benchmark_runner.cc.o CMakeFiles/benchmark.dir/colorprint.cc.o CMakeFiles/benchmark.dir/commandlineflags.cc.o CMakeFiles/benchmark.dir/complexity.cc.o CMakeFiles/benchmark.dir/console_reporter.cc.o CMakeFiles/benchmark.dir/counter.cc.o CMakeFiles/benchmark.dir/csv_reporter.cc.o CMakeFiles/benchmark.dir/json_reporter.cc.o CMakeFiles/benchmark.dir/reporter.cc.o CMakeFiles/benchmark.dir/sleep.cc.o CMakeFiles/benchmark.dir/statistics.cc.o CMakeFiles/benchmark.dir/string_util.cc.o CMakeFiles/benchmark.dir/sysinfo.cc.o CMakeFiles/benchmark.dir/timers.cc.o
/usr/bin/ranlib libbenchmark.a
[ 80%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
Scanning dependencies of target generated-data
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated && /usr/bin/ruby genfeaturejson.rb /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-miss.json ...
[ 80%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/g++-10  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/src  -march=native -O3 -DNDEBUG -fPIC   -pthread -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/g++-10 -fPIC -march=native -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.6 -o ../libsimdjson.so.6.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.6.0.0 ../libsimdjson.so.6 ../libsimdjson.so
[ 80%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
Scanning dependencies of target yyjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/gcc-10  -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src  -O3 -DNDEBUG   -o CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o   -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src/yyjson.c
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -P CMakeFiles/yyjson.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -E cmake_link_script CMakeFiles/yyjson.dir/link.txt --verbose=1
/usr/bin/ar qc libyyjson.a  CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o
/usr/bin/ranlib libyyjson.a
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/g++-10  -DRAPIDJSON_HAS_STDSTRING -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_COMPETITION_RAPIDJSON -DSIMDJSON_COMPETITION_YYJSON -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/rapidjson/include  -march=native -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/g++-10  -march=native -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.6.0.0 ../_deps/google_benchmarks/src/libbenchmark.a ../dependencies/libyyjson.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/22/skylake-x-gcc10.2-native.json --benchmark_out_format=json
2021-01-24 23:35:31
Running benchmark/bench_ondemand
Run on (4 X 3200 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 1024 KiB (x4)
  L3 Unified 8448 KiB (x1)
Load Average: 1.00, 1.00, 1.00
***WARNING*** CPU scaling is enabled, the benchmark real time measurements may be noisy and will incur extra overhead.
simdjson::dom implementation:      haswell
simdjson::ondemand implementation: haswell

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                  323948 ns       392928 ns         2158           4.179k           1.96794G               7        33.432k    1024.94k              1.62298          3.11622k       3.19392G          3.07044M                    4.86203                     2.99574           311.622k    4.37165k   631.515k       1.81555G/s    8.64365   33.4612k   1033.77k         1.63697   3.08691k/s 3.19116G/s     3.07044M               4.86203                2.97014        100       308.691k/s [BEST: throughput=  1.97 GB/s doc_throughput=  3116 docs/s instructions=     3070443 cycles=     1024936 branch_miss=    4179 cache_miss=       7 cache_ref=     33432 items=       100 avg_time=    323948 ns]
partial_tweets<simdjson_ondemand>/manual_time             216370 ns       269525 ns         3232           2.122k           2.93806G               0         9.732k    686.661k              1.08732           4.6524k       3.19462G          2.23542M                    3.53977                     3.25549            465.24k    2.24231k   631.515k       2.71823G/s  0.0185644   9.83422k   690.604k         1.09357   4.62171k/s 3.19177G/s     2.23542M               3.53977                 3.2369        100       462.171k/s [BEST: throughput=  2.94 GB/s doc_throughput=  4652 docs/s instructions=     2235416 cycles=      686661 branch_miss=    2122 cache_miss=       0 cache_ref=      9732 items=       100 avg_time=    216370 ns]
partial_tweets<yyjson>/manual_time                        841847 ns       920419 ns          830           9.768k           1.27703G             218        27.968k    1.57968M              2.50142          2.02216k       3.19438G          2.90839M                    4.60541                     1.84112           202.216k    7.69859k   631.515k       715.403M/s    664.023   25.8469k   1.73389M          2.7456   1.18786k/s 2.05962G/s     2.90885M               4.60614                1.67764        100       118.786k/s [BEST: throughput=  1.28 GB/s doc_throughput=  2022 docs/s instructions=     2908386 cycles=     1579684 branch_miss=    9768 cache_miss=     218 cache_ref=     27968 items=       100 avg_time=    841847 ns]
partial_tweets<yyjson_insitu>/manual_time                 568996 ns       632183 ns         1240           7.484k           1.53309G              74        15.361k    1.31564M              2.08331          2.42764k        3.1939G          2.90804M                    4.60487                     2.21037           242.764k    7.46443k   631.515k       1058.46M/s    133.602   12.4462k   1.42337M          2.2539   1.75748k/s 2.50155G/s     2.90831M               4.60529                2.04325        100       175.748k/s [BEST: throughput=  1.53 GB/s doc_throughput=  2427 docs/s instructions=     2908045 cycles=     1315639 branch_miss=    7484 cache_miss=      74 cache_ref=     15361 items=       100 avg_time=    568995 ns]
partial_tweets<rapidjson>/manual_time                    1825646 ns      1892077 ns          385          26.549k             403.2M             686        22.765k    5.00094M              7.91896           638.465       3.19293G          13.1143M                    20.7664                     2.62237           63.8465k    25.7255k   631.515k       329.888M/s    424.265    16.355k   5.15656M         8.16537    547.751/s 2.82451G/s     13.1153M                20.768                2.54343        100       54.7751k/s [BEST: throughput=  0.40 GB/s doc_throughput=   638 docs/s instructions=    13114307 cycles=     5000944 branch_miss=   26549 cache_miss=     686 cache_ref=     22765 items=       100 avg_time=   1825646 ns]
partial_tweets<rapidjson_insitu>/manual_time             1207101 ns      1267799 ns          582          24.728k           605.474M             201        14.871k    3.33038M              5.27363           958.764       3.19304G          9.82279M                    15.5543                     2.94945           95.8764k    25.3156k   631.515k        498.93M/s    209.046   10.4457k   3.44764M         5.45931    828.431/s 2.85613G/s     9.82319M                15.555                2.84925        100       82.8431k/s [BEST: throughput=  0.61 GB/s doc_throughput=   958 docs/s instructions=     9822793 cycles=     3330377 branch_miss=   24728 cache_miss=     201 cache_ref=     14871 items=       100 avg_time=   1207101 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                 104022580 ns    109918267 ns            7         868.065k            443.09M        6.87812M       6.89593M    330.878M              7.19319           9.63264       3.18723G          998.581M                    21.7089                     3.01797           9.63264M    867.438k   45.9988M       421.715M/s   6.81877M   6.89562M   331.693M          7.2109     9.6133/s 3.18866G/s     998.581M               21.7089                3.01056      1000k        9.6133M/s [BEST: throughput=  0.44 GB/s doc_throughput=     9 docs/s instructions=   998581007 cycles=   330877831 branch_miss=  868065 cache_miss= 6878125 cache_ref=   6895927 items=   1000000 avg_time= 104022580 ns]
large_random<simdjson_ondemand>/manual_time             68085498 ns     73947984 ns           10         869.348k           678.429M        3.52306M       3.57347M    216.221M              4.70058           14.7489       3.18901G          650.959M                    14.1517                     3.01062           14.7489M    869.012k   45.9988M       644.305M/s   3.52451M    3.5735M    217.11M         4.71992    14.6874/s 3.18879G/s     650.959M               14.1517                2.99828      1000k       14.6874M/s [BEST: throughput=  0.68 GB/s doc_throughput=    14 docs/s instructions=   650958757 cycles=   216221073 branch_miss=  869348 cache_miss= 3523056 cache_ref=   3573470 items=   1000000 avg_time=  68085497 ns]
large_random<simdjson_ondemand_unordered>/manual_time   70877562 ns     76723326 ns           10         865.864k           649.327M        3.50751M       3.57279M     225.91M              4.91121           14.1162       3.18898G          654.959M                    14.2386                     2.89921           14.1162M    866.176k   45.9988M       618.924M/s   3.52417M   3.57274M   226.024M          4.9137    14.1088/s 3.18894G/s     654.959M               14.2386                2.89774      1000k       14.1088M/s [BEST: throughput=  0.65 GB/s doc_throughput=    14 docs/s instructions=   654958760 cycles=   225909733 branch_miss=  865864 cache_miss= 3507513 cache_ref=   3572791 items=   1000000 avg_time=  70877561 ns]
large_random<yyjson>/manual_time                       156902042 ns    162798285 ns            4         662.911k           293.271M        4.20982M       5.44308M    362.063M              7.87115           6.37563       2.30838G           942.15M                    20.4821                     2.60217           6.37563M    660.813k   45.9988M       279.588M/s   4.20953M   5.42936M   362.237M         7.87493     6.3734/s 2.30868G/s      942.15M               20.4821                2.60092      1000k        6.3734M/s [BEST: throughput=  0.29 GB/s doc_throughput=     6 docs/s instructions=   942149599 cycles=   362063428 branch_miss=  662911 cache_miss= 4209821 cache_ref=   5443078 items=   1000000 avg_time= 156902041 ns]
large_random<yyjson_insitu>/manual_time                130977827 ns    136912251 ns            5         657.982k           351.598M        3.49641M       4.74101M    319.483M              6.94546           7.64364       2.44201G          936.029M                     20.349                     2.92983           7.64364M    660.376k   45.9988M       334.926M/s   3.49454M   4.73263M     319.8M         6.95235    7.63488/s 2.44163G/s     936.029M                20.349                2.92692      1000k       7.63488M/s [BEST: throughput=  0.35 GB/s doc_throughput=     7 docs/s instructions=   936028839 cycles=   319482555 branch_miss=  657982 cache_miss= 3496412 cache_ref=   4741010 items=   1000000 avg_time= 130977826 ns]
large_random<rapidjson>/manual_time                    210943012 ns    216844758 ns            3         587.332k           226.676M        4.34329M       5.17449M    579.963M              12.6082           4.92787       2.85798G          1.66212G                     36.134                     2.86591           4.92787M    588.435k   45.9988M       207.961M/s   4.08032M   5.09691M   584.033M         12.6967    4.74062/s 2.76868G/s     1.66213G               36.1342                2.84595      1000k       4.74062M/s [BEST: throughput=  0.23 GB/s doc_throughput=     4 docs/s instructions=  1662121468 cycles=   579962623 branch_miss=  587332 cache_miss= 4343287 cache_ref=   5174487 items=   1000000 avg_time= 210943012 ns]
large_random<rapidjson_lossless>/manual_time           238750943 ns    244657051 ns            3         633.552k           199.369M        4.34645M       5.18484M    668.623M              14.5357           4.33422       2.89796G          2.04909G                    44.5465                     3.06464           4.33422M    629.995k   45.9988M       183.739M/s   4.08329M   5.10667M    672.73M          14.625    4.18847/s 2.81771G/s      2.0491G               44.5467                3.04594      1000k       4.18847M/s [BEST: throughput=  0.20 GB/s doc_throughput=     4 docs/s instructions=  2049086648 cycles=   668622592 branch_miss=  633552 cache_miss= 4346448 cache_ref=   5184840 items=   1000000 avg_time= 238750942 ns]
large_random<rapidjson_insitu>/manual_time             187647560 ns    193584177 ns            4         621.547k           258.123M        5.03325M       5.89842M    501.052M              10.8927           5.61151       2.81166G          1.49412G                    32.4818                     2.98197           5.61151M    621.846k   45.9988M       233.778M/s   4.74336M   5.81804M   507.025M         11.0226    5.32914/s 2.70201G/s     1.49413G                32.482                2.94686      1000k       5.32914M/s [BEST: throughput=  0.26 GB/s doc_throughput=     5 docs/s instructions=  1494121270 cycles=   501051554 branch_miss=  621547 cache_miss= 5033254 cache_ref=   5898420 items=   1000000 avg_time= 187647559 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                       100555401 ns    118948806 ns            7         451.749k           1.36783G        10.2078M       10.3146M    320.087M              2.33121           9.96198        3.1887G           972.65M                    7.08386                      3.0387           5.22295M    452.083k   137.305M       1.27169G/s   10.2395M   10.3146M   320.632M         2.33518    9.94477/s 3.18861G/s      972.65M               7.08386                3.03354   524.288k       5.21392M/s [BEST: throughput=  1.37 GB/s doc_throughput=     9 docs/s instructions=   972649990 cycles=   320087436 branch_miss=  451749 cache_miss=10207840 cache_ref=  10314582 items=    524288 avg_time= 100555400 ns]
kostya<simdjson_ondemand>/manual_time                   70337586 ns     88601894 ns           10         508.434k           1.95703G        6.43517M       6.47111M    223.727M              1.62941           14.2532       3.18881G          700.741M                    5.10353                     3.13213           7.47276M     507.78k   137.305M       1.81802G/s    6.4392M   6.47101M   224.291M         1.63352    14.2171/s 3.18878G/s     700.741M               5.10353                3.12425   524.288k       7.45388M/s [BEST: throughput=  1.96 GB/s doc_throughput=    14 docs/s instructions=   700740657 cycles=   223726636 branch_miss=  508434 cache_miss= 6435169 cache_ref=   6471108 items=    524288 avg_time=  70337585 ns]
kostya<yyjson>/manual_time                             261502083 ns    279732557 ns            3         420.011k           525.433M        8.49332M       9.95614M    604.748M              4.40442           3.82676       2.31422G          983.521M                    7.16304                     1.62633           2.00632M    419.015k   137.305M       500.739M/s   8.49463M   9.95773M   604.836M         4.40505    3.82406/s 2.31293G/s     983.521M               7.16304                 1.6261   524.288k       2.00491M/s [BEST: throughput=  0.53 GB/s doc_throughput=     3 docs/s instructions=   983520844 cycles=   604748200 branch_miss=  420011 cache_miss= 8493317 cache_ref=   9956144 items=    524288 avg_time= 261502082 ns]
kostya<yyjson_insitu>/manual_time                      184281130 ns    202446482 ns            4          415.56k           745.262M         6.3577M       7.80828M    477.467M              3.47742           5.42778       2.59159G          965.251M                    7.02998                     2.02161           2.84572M    415.969k   137.305M       710.568M/s    6.3634M   7.80665M   477.575M         3.47821    5.42649/s 2.59156G/s     965.251M               7.02998                2.02115   524.288k       2.84504M/s [BEST: throughput=  0.75 GB/s doc_throughput=     5 docs/s instructions=   965250965 cycles=   477467333 branch_miss=  415560 cache_miss= 6357698 cache_ref=   7808284 items=    524288 avg_time= 184281130 ns]
kostya<rapidjson>/manual_time                          292062251 ns    310331360 ns            2         962.155k           475.614M        5.19288M       6.42509M    825.085M              6.00914           3.46392       2.85803G          2.28931G                    16.6732                     2.77464           1.81609M    968.083k   137.305M       448.344M/s   5.06981M   6.39072M   827.416M         6.02612    3.42393/s 2.83301G/s     2.28932G               16.6732                2.76683   524.288k       1.79512M/s [BEST: throughput=  0.48 GB/s doc_throughput=     3 docs/s instructions=  2289314849 cycles=   825084781 branch_miss=  962155 cache_miss= 5192880 cache_ref=   6425089 items=    524288 avg_time= 292062251 ns]
kostya<rapidjson_lossless>/manual_time                 308936496 ns    327242368 ns            2         1011.24k           449.408M        5.19259M       6.43665M    878.268M              6.39648           3.27307       2.87463G          2.50793G                    18.2654                     2.85554           1.71603M    1009.97k   137.305M       423.855M/s   5.06865M   6.40488M   880.738M         6.41447    3.23691/s 2.85087G/s     2.50794G               18.2654                2.84754   524.288k       1.69707M/s [BEST: throughput=  0.45 GB/s doc_throughput=     3 docs/s instructions=  2507933853 cycles=   878268301 branch_miss= 1011244 cache_miss= 5192589 cache_ref=   6436650 items=    524288 avg_time= 308936495 ns]
kostya<rapidjson_insitu>/manual_time                   274804030 ns    293124465 ns            3         1082.98k           507.167M        7.33019M       8.57982M    767.674M              5.59101           3.69372       2.83557G          2.03958G                    14.8544                     2.65683           1.93657M    1058.28k   137.305M         476.5M/s   7.16186M   8.53537M   769.424M         5.60376    3.63896/s  2.7999G/s     2.03958G               14.8544                2.65079   524.288k       1.90786M/s [BEST: throughput=  0.51 GB/s doc_throughput=     3 docs/s instructions=  2039579767 cycles=   767674104 branch_miss= 1082977 cache_miss= 7330192 cache_ref=   8579819 items=    524288 avg_time= 274804030 ns]
distinct_user_id<simdjson_dom>/manual_time                317982 ns       394472 ns         2202            4.27k           2.00224G               0        34.007k     1007.4k              1.59522          3.17053k         3.194G          3.01136M                    4.76848                     2.98923           364.611k    4.46278k   631.515k       1.84962G/s   0.420073   34.0524k    1014.7k         1.60677   3.14484k/s 3.19106G/s     3.01137M               4.76848                2.96775        115       361.656k/s [BEST: throughput=  2.00 GB/s doc_throughput=  3170 docs/s instructions=     3011365 cycles=     1007405 branch_miss=    4270 cache_miss=       0 cache_ref=     34007 items=       115 avg_time=    317981 ns]
distinct_user_id<simdjson_ondemand>/manual_time           216580 ns       276717 ns         3232           2.411k           2.94439G               0          9.76k    685.246k              1.08508          4.66242k        3.1949G          2.18875M                    3.46587                     3.19411           536.178k    2.57575k   631.515k        2.7156G/s   6.18812m   9.76121k   691.341k         1.09473   4.61723k/s 3.19208G/s     2.18875M               3.46587                3.16595        115       530.982k/s [BEST: throughput=  2.94 GB/s doc_throughput=  4662 docs/s instructions=     2188749 cycles=      685246 branch_miss=    2411 cache_miss=       0 cache_ref=      9760 items=       115 avg_time=    216579 ns]
distinct_user_id<yyjson>/manual_time                      838669 ns       925990 ns          989           9.897k           1.28398G             241          27.5k      1.571M              2.48767          2.03318k       3.19413G          2.87343M                    4.55006                     1.82904           233.816k     7.8312k   631.515k       718.114M/s     486.05   25.6083k   1.72746M         2.73541   1.19237k/s 2.05976G/s     2.87383M               4.55069                1.66362        115       137.122k/s [BEST: throughput=  1.28 GB/s doc_throughput=  2033 docs/s instructions=     2873429 cycles=     1571003 branch_miss=    9897 cache_miss=     241 cache_ref=     27500 items=       115 avg_time=    838668 ns]
distinct_user_id<yyjson_insitu>/manual_time               566910 ns       638672 ns         1244           7.077k           1.55337G          1.577k        14.421k    1.29374M              2.04863          2.45976k       3.18228G          2.87303M                    4.54942                     2.22072           282.872k    7.60375k   631.515k       1062.35M/s    125.609   12.2801k    1.4171M         2.24397   1.76395k/s  2.4997G/s     2.87329M               4.54983                2.02758        115       202.854k/s [BEST: throughput=  1.55 GB/s doc_throughput=  2459 docs/s instructions=     2873025 cycles=     1293738 branch_miss=    7077 cache_miss=    1577 cache_ref=     14421 items=       115 avg_time=    566910 ns]
distinct_user_id<rapidjson>/manual_time                  1799281 ns      1872340 ns          390          25.392k           407.736M         12.484k        22.543k    4.94523M              7.83074           645.647       3.19287G          13.0556M                    20.6734                     2.64003           74.2495k    25.7789k   631.515k       334.722M/s   1.27427k   16.8024k   5.11816M         8.10458    555.777/s 2.84456G/s     13.0565M               20.6748                2.55101        115       63.9144k/s [BEST: throughput=  0.41 GB/s doc_throughput=   645 docs/s instructions=    13055562 cycles=     4945228 branch_miss=   25392 cache_miss=   12484 cache_ref=     22543 items=       115 avg_time=   1799281 ns]
distinct_user_id<rapidjson_insitu>/manual_time           1183174 ns      1251571 ns          664          24.326k           609.588M             905        14.516k    3.30773M              5.23777           965.279       3.19288G          9.77427M                    15.4775                     2.95498           111.007k    25.1604k   631.515k        509.02M/s     1.193k   11.7172k   3.42953M         5.43064    845.184/s 2.89858G/s     9.77461M                15.478                2.85013        115       97.1962k/s [BEST: throughput=  0.61 GB/s doc_throughput=   965 docs/s instructions=     9774269 cycles=     3307733 branch_miss=   24326 cache_miss=     905 cache_ref=     14516 items=       115 avg_time=   1183173 ns]
find_tweet<simdjson_dom>/manual_time                      304332 ns       376231 ns         2300           4.037k           2.09039G               0        30.639k    964.869k              1.52786          3.31012k       3.19383G          2.93033M                    4.64016                     3.03702           3.31012k    4.22068k   631.515k       1.93258G/s   0.809565   30.7961k   971.207k          1.5379   3.28589k/s 3.19128G/s     2.93033M               4.64016                 3.0172          1       3.28589k/s [BEST: throughput=  2.09 GB/s doc_throughput=  3310 docs/s instructions=     2930328 cycles=      964869 branch_miss=    4037 cache_miss=       0 cache_ref=     30639 items=         1 avg_time=    304331 ns]
find_tweet<simdjson_ondemand>/manual_time                 150769 ns       212588 ns         4633            1.31k           4.21229G              16         7.643k    479.086k              0.75863          6.67014k       3.19557G          1.56922M                    2.48485                     3.27544           6.67014k    1.38507k   631.515k       3.90097G/s    16.7086   7.72429k   481.391k         0.76228   6.63267k/s 3.19291G/s     1.56922M               2.48485                3.25976          1       6.63267k/s [BEST: throughput=  4.21 GB/s doc_throughput=  6670 docs/s instructions=     1569217 cycles=      479086 branch_miss=    1310 cache_miss=      16 cache_ref=      7643 items=         1 avg_time=    150768 ns]
find_tweet<yyjson>/manual_time                            828094 ns       913207 ns          917           9.381k            1.3114G             227        27.216k    1.53794M              2.43532          2.07659k       3.19366G          2.82414M                    4.47201                     1.83632           2.07659k    7.55467k   631.515k       727.284M/s    467.384   24.7491k   1.69513M         2.68423   1.20759k/s 2.04703G/s     2.82483M               4.47311                1.66644          1       1.20759k/s [BEST: throughput=  1.31 GB/s doc_throughput=  2076 docs/s instructions=     2824142 cycles=     1537938 branch_miss=    9381 cache_miss=     227 cache_ref=     27216 items=         1 avg_time=    828093 ns]
find_tweet<yyjson_insitu>/manual_time                     555774 ns       622167 ns         1269           6.988k           1.58144G          2.432k        13.499k    1.27064M              2.01205          2.50421k       3.18194G          2.82382M                    4.47151                     2.22237           2.50421k    7.39083k   631.515k       1083.64M/s    8.57604   10.6289k   1.38206M         2.18849   1.79929k/s 2.48673G/s     2.82409M               4.47192                2.04339          1       1.79929k/s [BEST: throughput=  1.58 GB/s doc_throughput=  2504 docs/s instructions=     2823824 cycles=     1270638 branch_miss=    6988 cache_miss=    2432 cache_ref=     13499 items=         1 avg_time=    555774 ns]
find_tweet<rapidjson>/manual_time                        1784698 ns      1853329 ns          394          25.099k           411.139M         11.904k        20.936k    4.90427M              7.76588           651.036       3.19285G          12.9888M                    20.5677                     2.64847            651.036    25.5424k   631.515k       337.457M/s     979.53   14.0547k   5.07146M         8.03062    560.319/s 2.84163G/s     12.9895M               20.5689                 2.5613          1        560.319/s [BEST: throughput=  0.41 GB/s doc_throughput=   651 docs/s instructions=    12988825 cycles=     4904269 branch_miss=   25099 cache_miss=   11904 cache_ref=     20936 items=         1 avg_time=   1784698 ns]
find_tweet<rapidjson_insitu>/manual_time                 1162847 ns      1225796 ns          674          24.582k           612.811M          2.743k        13.469k    3.29044M              5.21039           970.383       3.19299G          9.71659M                    15.3862                     2.95298            970.383    24.4738k   631.515k       517.918M/s    1081.65   8.87971k   3.36927M         5.33522    859.958/s 2.89743G/s     9.71691M               15.3867                2.88398          1        859.958/s [BEST: throughput=  0.61 GB/s doc_throughput=   970 docs/s instructions=     9716592 cycles=     3290441 branch_miss=   24582 cache_miss=    2743 cache_ref=     13469 items=         1 avg_time=   1162846 ns]
