run_benchmark: v0.8.0~16 /home/jkeiser/simdjson_benchmark_results/v0.7.0/22/skylake-gcc10.2.json -DCMAKE_BUILD_TYPE=Release
git reset --hard v0.8.0~16
HEAD is now at 45479558 Merge pull request #1376 from simdjson/jkeiser/ondemand-runtime
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The CXX compiler identification is GNU 10.2.0
-- The C compiler identification is GNU 10.2.0
-- Check for working CXX compiler: /usr/bin/g++-10
-- Check for working CXX compiler: /usr/bin/g++-10 -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Check for working C compiler: /usr/bin/gcc-10
-- Check for working C compiler: /usr/bin/gcc-10 -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed
-- Check if compiler accepts -pthread
-- Check if compiler accepts -pthread - yes
-- Found Threads: TRUE  
-- Looking for fork
-- Looking for fork - found
-- Looking for wait
-- Looking for wait - found
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- Found Git: /usr/bin/git (found version "2.27.0") 
-- git Version: v0.2.1-45479558
-- Version: 0.2.1
-- Performing Test HAVE_CXX_FLAG_STD_CXX11
-- Performing Test HAVE_CXX_FLAG_STD_CXX11 - Success
-- Performing Test HAVE_CXX_FLAG_WALL
-- Performing Test HAVE_CXX_FLAG_WALL - Success
-- Performing Test HAVE_CXX_FLAG_WEXTRA
-- Performing Test HAVE_CXX_FLAG_WEXTRA - Success
-- Performing Test HAVE_CXX_FLAG_WSHADOW
-- Performing Test HAVE_CXX_FLAG_WSHADOW - Success
-- Performing Test HAVE_CXX_FLAG_WERROR
-- Performing Test HAVE_CXX_FLAG_WERROR - Success
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32 - Failed
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED - Success
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WD654
-- Performing Test HAVE_CXX_FLAG_WD654 - Failed
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY - Failed
-- Performing Test HAVE_CXX_FLAG_COVERAGE
-- Performing Test HAVE_CXX_FLAG_COVERAGE - Success
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Performing Test USE_BOOST_JSON
-- Performing Test USE_BOOST_JSON - Failed
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Found Python3: /usr/bin/python3.8 (found version "3.8.6") found components: Interpreter 
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 10
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
Scanning dependencies of target benchmark
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_api_internal.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_name.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_name.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_register.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_register.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_runner.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_runner.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/colorprint.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/colorprint.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/commandlineflags.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/commandlineflags.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/complexity.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/complexity.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/console_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/console_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/counter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/counter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/csv_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/csv_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/json_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/json_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/sleep.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sleep.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/statistics.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/statistics.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/string_util.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/string_util.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/sysinfo.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sysinfo.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/timers.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/timers.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -P CMakeFiles/benchmark.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/benchmark.dir/link.txt --verbose=1
/usr/bin/ar qc libbenchmark.a  CMakeFiles/benchmark.dir/benchmark.cc.o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o CMakeFiles/benchmark.dir/benchmark_name.cc.o CMakeFiles/benchmark.dir/benchmark_register.cc.o CMakeFiles/benchmark.dir/benchmark_runner.cc.o CMakeFiles/benchmark.dir/colorprint.cc.o CMakeFiles/benchmark.dir/commandlineflags.cc.o CMakeFiles/benchmark.dir/complexity.cc.o CMakeFiles/benchmark.dir/console_reporter.cc.o CMakeFiles/benchmark.dir/counter.cc.o CMakeFiles/benchmark.dir/csv_reporter.cc.o CMakeFiles/benchmark.dir/json_reporter.cc.o CMakeFiles/benchmark.dir/reporter.cc.o CMakeFiles/benchmark.dir/sleep.cc.o CMakeFiles/benchmark.dir/statistics.cc.o CMakeFiles/benchmark.dir/string_util.cc.o CMakeFiles/benchmark.dir/sysinfo.cc.o CMakeFiles/benchmark.dir/timers.cc.o
/usr/bin/ranlib libbenchmark.a
[ 80%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
Scanning dependencies of target generated-data
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated && /usr/bin/ruby genfeaturejson.rb /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-miss.json ...
[ 80%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/g++-10  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/src  -O3 -DNDEBUG -fPIC   -pthread -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/g++-10 -fPIC -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.6 -o ../libsimdjson.so.6.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.6.0.0 ../libsimdjson.so.6 ../libsimdjson.so
[ 80%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
Scanning dependencies of target yyjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/gcc-10  -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src  -O3 -DNDEBUG   -o CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o   -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src/yyjson.c
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -P CMakeFiles/yyjson.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -E cmake_link_script CMakeFiles/yyjson.dir/link.txt --verbose=1
/usr/bin/ar qc libyyjson.a  CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o
/usr/bin/ranlib libyyjson.a
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/g++-10  -DRAPIDJSON_HAS_STDSTRING -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_COMPETITION_RAPIDJSON -DSIMDJSON_COMPETITION_YYJSON -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/rapidjson/include  -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/g++-10  -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.6.0.0 ../_deps/google_benchmarks/src/libbenchmark.a ../dependencies/libyyjson.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/22/skylake-gcc10.2.json --benchmark_out_format=json
2021-01-25 02:03:43
Running benchmark/bench_ondemand
Run on (4 X 4000 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 256 KiB (x4)
  L3 Unified 8192 KiB (x1)
Load Average: 1.04, 1.02, 0.83
simdjson::dom implementation:      haswell
simdjson::ondemand implementation: fallback

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                  262560 ns       291250 ns         2666           3.836k           2.42033G               0        93.411k    963.457k              1.52563          3.83258k       3.69252G          2.96251M                    4.69111                     3.07487           383.258k    3.94897k   631.515k       2.24004G/s    2.64179   93.3017k   968.976k         1.53437   3.80865k/s 3.69049G/s     2.96251M               4.69111                3.05736        100       380.865k/s [BEST: throughput=  2.42 GB/s doc_throughput=  3832 docs/s instructions=     2962505 cycles=      963457 branch_miss=    3836 cache_miss=       0 cache_ref=     93411 items=       100 avg_time=    262560 ns]
partial_tweets<simdjson_ondemand>/manual_time             201173 ns       229673 ns         3463           2.217k           3.16992G               0        59.338k     735.64k              1.16488          5.01955k       3.69258G          2.46247M                    3.89931                     3.34739           501.955k    2.33716k   631.515k       2.92358G/s   0.532775   59.4126k   742.484k         1.17572   4.97085k/s 3.69078G/s     2.46247M               3.89931                3.31653        100       497.085k/s [BEST: throughput=  3.17 GB/s doc_throughput=  5019 docs/s instructions=     2462472 cycles=      735640 branch_miss=    2217 cache_miss=       0 cache_ref=     59338 items=       100 avg_time=    201172 ns]
partial_tweets<yyjson>/manual_time                        688579 ns       719259 ns         1015           9.617k           1.58552G             290        79.651k    1.47081M              2.32902          2.51066k       3.69271G          2.90835M                    4.60536                     1.97738           251.066k    7.52844k   631.515k       874.642M/s    998.121   51.7425k   1.69053M         2.67695   1.45227k/s 2.45511G/s     2.90884M               4.60613                1.72066        100       145.227k/s [BEST: throughput=  1.59 GB/s doc_throughput=  2510 docs/s instructions=     2908354 cycles=     1470809 branch_miss=    9617 cache_miss=     290 cache_ref=     79651 items=       100 avg_time=    688578 ns]
partial_tweets<yyjson_insitu>/manual_time                 477741 ns       507226 ns         1465           6.947k            1.7736G             347        48.338k    1.30825M               2.0716          2.80849k        3.6742G          2.90825M                    4.60519                     2.22301           280.849k     7.3412k   631.515k       1.23109G/s    135.872   33.8436k   1.41778M         2.24505   2.09318k/s 2.96768G/s     2.90851M                4.6056                2.05145        100       209.318k/s [BEST: throughput=  1.77 GB/s doc_throughput=  2808 docs/s instructions=     2908246 cycles=     1308246 branch_miss=    6947 cache_miss=     347 cache_ref=     48338 items=       100 avg_time=    477740 ns]
partial_tweets<rapidjson>/manual_time                    1628884 ns      1658084 ns          431          26.466k           444.699M         10.732k        54.735k    5.24243M              8.30135           704.178        3.6916G          13.4094M                    21.2337                     2.55787           70.4178k    27.2352k   631.515k       369.738M/s    510.738   34.7199k   5.42112M         8.58432    613.917/s 3.32812G/s     13.4101M               21.2347                2.47367        100       61.3917k/s [BEST: throughput=  0.44 GB/s doc_throughput=   704 docs/s instructions=    13409426 cycles=     5242428 branch_miss=   26466 cache_miss=   10732 cache_ref=     54735 items=       100 avg_time=   1628883 ns]
partial_tweets<rapidjson_insitu>/manual_time             1127481 ns      1156450 ns          623          23.382k           627.347M              41        45.176k    3.71622M              5.88461             993.4       3.69169G           9.7548M                    15.4467                     2.62492             99.34k      23.83k   631.515k       534.164M/s    226.518   35.5485k   3.81506M         6.04112    886.933/s  3.3837G/s      9.7554M               15.4476                2.55708        100       88.6933k/s [BEST: throughput=  0.63 GB/s doc_throughput=   993 docs/s instructions=     9754799 cycles=     3716221 branch_miss=   23382 cache_miss=      41 cache_ref=     45176 items=       100 avg_time=   1127480 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                  91831038 ns     95237917 ns            8         864.143k           503.215M        11.1097M       15.6105M    337.203M               7.3307           10.9397       3.68892G          983.113M                    21.3726                     2.91549           10.9397M    864.457k   45.9988M       477.702M/s    11.105M   15.6046M   338.742M         7.36416    10.8896/s 3.68876G/s     983.113M               21.3726                2.90224      1000k       10.8896M/s [BEST: throughput=  0.50 GB/s doc_throughput=    10 docs/s instructions=   983112680 cycles=   337203306 branch_miss=  864143 cache_miss=11109673 cache_ref=  15610534 items=   1000000 avg_time=  91831038 ns]
large_random<simdjson_ondemand>/manual_time             59022716 ns     62395604 ns           12         992.898k           785.825M        5.82197M       8.09721M    215.915M              4.69392           17.0836        3.6886G           641.49M                    13.9458                     2.97103           17.0836M    1063.32k   45.9988M       743.237M/s   5.73424M   8.09202M    217.73M         4.73338    16.9426/s 3.68891G/s      641.49M               13.9458                2.94627      1000k       16.9426M/s [BEST: throughput=  0.79 GB/s doc_throughput=    17 docs/s instructions=   641489866 cycles=   215914674 branch_miss=  992898 cache_miss= 5821969 cache_ref=   8097210 items=   1000000 avg_time=  59022715 ns]
large_random<simdjson_ondemand_unordered>/manual_time   62697009 ns     66062368 ns           11         870.511k           734.424M        5.69862M       8.08666M    231.056M              5.02308           15.9662       3.68907G           645.49M                    14.0328                     2.79366           15.9662M    872.195k   45.9988M        699.68M/s   5.73702M   8.08845M   231.287M         5.02812    15.9497/s 3.68897G/s      645.49M               14.0328                2.79086      1000k       15.9497M/s [BEST: throughput=  0.73 GB/s doc_throughput=    15 docs/s instructions=   645489871 cycles=   231055504 branch_miss=  870511 cache_miss= 5698618 cache_ref=   8086659 items=   1000000 avg_time=  62697009 ns]
large_random<yyjson>/manual_time                       127537211 ns    130955770 ns            5         667.524k           360.818M        6.03189M       9.26054M    350.696M              7.62404           7.84408       2.75089G           944.15M                    20.5255                     2.69221           7.84408M    667.056k   45.9988M       343.961M/s   6.02808M   9.26064M   350.698M         7.62406    7.84085/s 2.74977G/s     944.149M               20.5255                 2.6922      1000k       7.84085M/s [BEST: throughput=  0.36 GB/s doc_throughput=     7 docs/s instructions=   944149596 cycles=   350696279 branch_miss=  667524 cache_miss= 6031893 cache_ref=   9260539 items=   1000000 avg_time= 127537211 ns]
large_random<yyjson_insitu>/manual_time                109598990 ns    113031064 ns            6         664.632k           419.895M         5.1682M       7.90319M    318.623M              6.92676            9.1284       2.90852G          938.029M                    20.3925                     2.94401            9.1284M    667.279k   45.9988M       400.258M/s   5.15355M   7.89967M   318.755M         6.92965    9.12417/s 2.90838G/s     938.029M               20.3925                2.94278      1000k       9.12417M/s [BEST: throughput=  0.42 GB/s doc_throughput=     9 docs/s instructions=   938028619 cycles=   318622675 branch_miss=  664632 cache_miss= 5168200 cache_ref=   7903187 items=   1000000 avg_time= 109598990 ns]
large_random<rapidjson>/manual_time                    168958004 ns    172384504 ns            4         590.795k           284.174M        7.09222M       10.9509M    539.273M              11.7236           6.17787       3.33156G          1.65714G                    36.0258                     3.07292           6.17787M    591.111k   45.9988M       259.638M/s    6.5206M   10.1989M   544.346M         11.8339    5.91863/s 3.22178G/s     1.65715G                36.026                 3.0443      1000k       5.91863M/s [BEST: throughput=  0.28 GB/s doc_throughput=     6 docs/s instructions=  1657141466 cycles=   539272616 branch_miss=  590795 cache_miss= 7092219 cache_ref=  10950944 items=   1000000 avg_time= 168958004 ns]
large_random<rapidjson_lossless>/manual_time           197180522 ns    200613516 ns            4         592.089k           241.598M        7.08313M       10.9566M    644.332M              14.0076           5.25228       3.38421G          2.00811G                    43.6557                     3.11658           5.25228M    590.263k   45.9988M       222.476M/s   6.51608M   10.2041M   648.286M         14.0935    5.07149/s 3.28778G/s     2.00812G                43.656                3.09759      1000k       5.07149M/s [BEST: throughput=  0.24 GB/s doc_throughput=     5 docs/s instructions=  2008110862 cycles=   644331993 branch_miss=  592089 cache_miss= 7083126 cache_ref=  10956575 items=   1000000 avg_time= 197180522 ns]
large_random<rapidjson_insitu>/manual_time             155432594 ns    158846847 ns            5         584.345k           311.071M        8.18454M       12.5291M    487.633M               10.601           6.76259       3.29766G          1.49214G                    32.4387                     3.05996           6.76259M    583.135k   45.9988M       282.231M/s   7.60298M   11.7192M   493.229M         10.7227    6.43366/s 3.17327G/s     1.49215G               32.4389                3.02527      1000k       6.43366M/s [BEST: throughput=  0.31 GB/s doc_throughput=     6 docs/s instructions=  1492138951 cycles=   487632897 branch_miss=  584345 cache_miss= 8184540 cache_ref=  12529145 items=   1000000 avg_time= 155432594 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                        85442391 ns     95822728 ns            8         459.291k           1.60825G        16.0135M       22.5695M    314.936M               2.2937           11.7129       3.68883G          945.501M                    6.88614                      3.0022           6.14096M    459.329k   137.305M       1.49663G/s   16.0215M    22.576M   315.162M         2.29534    11.7038/s 3.68859G/s     945.501M               6.88614                3.00005   524.288k       6.13616M/s [BEST: throughput=  1.61 GB/s doc_throughput=    11 docs/s instructions=   945501383 cycles=   314936324 branch_miss=  459291 cache_miss=16013460 cache_ref=  22569507 items=    524288 avg_time=  85442390 ns]
kostya<simdjson_ondemand>/manual_time                   58645246 ns     68982460 ns           12         476.682k           2.34289G         10.249M       14.2347M    216.188M              1.57451           17.0634       3.68889G          676.738M                    4.92872                     3.13033           8.94612M     475.49k   137.305M       2.18049G/s   10.2706M   14.1685M   216.323M         1.57549    17.0517/s 3.68867G/s     676.738M               4.92872                3.12837   524.288k       8.93999M/s [BEST: throughput=  2.34 GB/s doc_throughput=    17 docs/s instructions=   676737574 cycles=   216187537 branch_miss=  476682 cache_miss=10249009 cache_ref=  14234654 items=    524288 avg_time=  58645245 ns]
kostya<yyjson>/manual_time                             206402062 ns    216808484 ns            3         414.749k           665.716M        11.7086M       16.5566M    563.222M              4.10198           4.84844       2.73075G          984.045M                    7.16686                     1.74717           2.54198M    414.453k   137.305M       634.413M/s   11.7039M   16.5317M    563.09M         4.10101    4.84491/s 2.72812G/s     984.045M               7.16686                1.74758   524.288k       2.54013M/s [BEST: throughput=  0.67 GB/s doc_throughput=     4 docs/s instructions=   984045130 cycles=   563222423 branch_miss=  414749 cache_miss=11708646 cache_ref=  16556558 items=    524288 avg_time= 206402062 ns]
kostya<yyjson_insitu>/manual_time                      152246205 ns    162657472 ns            5         414.608k           902.066M        9.08301M       12.5251M    466.619M              3.39841            6.5698       3.06559G          965.775M                     7.0338                     2.06973           3.44447M    414.481k   137.305M       860.082M/s    9.0853M   12.5071M   466.784M         3.39961    6.56831/s 3.06598G/s     965.775M                7.0338                  2.069   524.288k       3.44369M/s [BEST: throughput=  0.90 GB/s doc_throughput=     6 docs/s instructions=   965775323 cycles=   466618838 branch_miss=  414608 cache_miss= 9083009 cache_ref=  12525108 items=    524288 avg_time= 152246204 ns]
kostya<rapidjson>/manual_time                          244387548 ns    254779702 ns            3         953.475k           569.352M        8.37078M       12.3069M    807.982M              5.88458           4.14662       3.35039G          2.29716G                    16.7303                     2.84308           2.17402M    954.045k   137.305M       535.806M/s   8.07049M   11.9764M   810.564M         5.90338    4.09186/s 3.31671G/s     2.29716G               16.7303                2.83403   524.288k       2.14531M/s [BEST: throughput=  0.57 GB/s doc_throughput=     4 docs/s instructions=  2297156017 cycles=   807981889 branch_miss=  953475 cache_miss= 8370782 cache_ref=  12306879 items=    524288 avg_time= 244387548 ns]
kostya<rapidjson_lossless>/manual_time                 257666877 ns    268090972 ns            3         962.956k           540.051M        8.37836M       12.2468M    856.414M              6.23731           3.93322       3.36847G          2.49743G                    18.1889                     2.91614           2.06214M     964.12k   137.305M       508.192M/s   8.07355M   11.9243M   859.717M         6.26137    3.88098/s 3.33654G/s     2.49743G               18.1889                2.90494   524.288k       2.03475M/s [BEST: throughput=  0.54 GB/s doc_throughput=     3 docs/s instructions=  2497425986 cycles=   856414055 branch_miss=  962956 cache_miss= 8378358 cache_ref=  12246766 items=    524288 avg_time= 257666876 ns]
kostya<rapidjson_insitu>/manual_time                   219822489 ns    230220681 ns            3          1055.9k           633.918M        11.5508M       16.1605M    717.604M              5.22635           4.61686       3.31308G          2.03227G                    14.8012                     2.83203           2.42056M    1056.65k   137.305M       595.682M/s   11.2436M   15.7802M   720.255M         5.24566    4.54913/s 3.27653G/s     2.03228G               14.8012                2.82161   524.288k       2.38505M/s [BEST: throughput=  0.63 GB/s doc_throughput=     4 docs/s instructions=  2032274427 cycles=   717603819 branch_miss= 1055898 cache_miss=11550797 cache_ref=  16160465 items=    524288 avg_time= 219822489 ns]
distinct_user_id<simdjson_dom>/manual_time                259464 ns       290547 ns         2697           3.943k           2.45198G               0        93.829k    951.017k              1.50593           3.8827k       3.69251G          2.90343M                    4.59756                     3.05297            446.51k     4.1511k   631.515k       2.26676G/s    6.89396   93.9601k   957.549k         1.51627    3.8541k/s 3.69048G/s     2.90343M               4.59756                3.03215        115       443.221k/s [BEST: throughput=  2.45 GB/s doc_throughput=  3882 docs/s instructions=     2903428 cycles=      951017 branch_miss=    3943 cache_miss=       0 cache_ref=     93829 items=       115 avg_time=    259464 ns]
distinct_user_id<simdjson_ondemand>/manual_time           171109 ns       201039 ns         4087            1.76k           3.71779G               0        56.469k    627.323k             0.993362           5.8871k       3.69311G          2.11935M                    3.35598                     3.37841           677.016k    1.88663k   631.515k       3.43724G/s  0.0482016   56.5861k   631.595k         1.00013   5.84421k/s 3.69118G/s     2.11935M               3.35598                3.35555        115       672.084k/s [BEST: throughput=  3.72 GB/s doc_throughput=  5887 docs/s instructions=     2119353 cycles=      627323 branch_miss=    1760 cache_miss=       0 cache_ref=     56469 items=       115 avg_time=    171109 ns]
distinct_user_id<yyjson>/manual_time                      674617 ns       709008 ns         1213           9.771k           1.59639G             413        76.299k    1.46065M              2.31293          2.52787k       3.69234G          2.87342M                    4.55004                     1.96722           290.705k    7.65026k   631.515k       892.743M/s    1096.08   50.5102k   1.68282M         2.66473   1.48232k/s 2.49448G/s     2.87382M               4.55068                1.70774        115       170.467k/s [BEST: throughput=  1.60 GB/s doc_throughput=  2527 docs/s instructions=     2873421 cycles=     1460652 branch_miss=    9771 cache_miss=     413 cache_ref=     76299 items=       115 avg_time=    674617 ns]
distinct_user_id<yyjson_insitu>/manual_time               472809 ns       506080 ns         1480            7.03k           1.79009G             326        46.456k    1.29917M              2.05723           2.8346k       3.68263G          2.87322M                    4.54973                     2.21158           325.979k    7.54553k   631.515k       1.24394G/s    116.587   32.2983k   1.41225M         2.23628   2.11502k/s 2.98693G/s     2.87349M               4.55015                2.03469        115       243.227k/s [BEST: throughput=  1.79 GB/s doc_throughput=  2834 docs/s instructions=     2873224 cycles=     1299170 branch_miss=    7030 cache_miss=     326 cache_ref=     46456 items=       115 avg_time=    472808 ns]
distinct_user_id<rapidjson>/manual_time                  1606073 ns      1637169 ns          438          26.873k           446.793M             114        53.804k    5.21788M              8.26248           707.493       3.69161G          13.3491M                    21.1382                     2.55834           81.3617k    27.1687k   631.515k       374.989M/s   1.90773k   36.0468k   5.39329M         8.54023    622.637/s 3.35806G/s     13.3501M               21.1398                2.47532        115       71.6032k/s [BEST: throughput=  0.45 GB/s doc_throughput=   707 docs/s instructions=    13349094 cycles=     5217877 branch_miss=   26873 cache_miss=     114 cache_ref=     53804 items=       115 avg_time=   1606072 ns]
distinct_user_id<rapidjson_insitu>/manual_time           1106826 ns      1137325 ns          670           23.43k           628.433M             955        44.859k    3.70982M              5.87448            995.12       3.69172G          9.70517M                    15.3681                     2.61607           114.439k    23.8384k   631.515k       544.132M/s   1.99677k   36.3338k   3.79763M         6.01352    903.484/s  3.4311G/s     9.70551M               15.3686                2.55568        115       103.901k/s [BEST: throughput=  0.63 GB/s doc_throughput=   995 docs/s instructions=     9705172 cycles=     3709825 branch_miss=   23430 cache_miss=     955 cache_ref=     44859 items=       115 avg_time=   1106825 ns]
find_tweet<simdjson_dom>/manual_time                      246865 ns       276085 ns         2835           3.629k           2.57576G               0        83.356k    905.365k              1.43364           4.0787k       3.69271G          2.82239M                    4.46923                      3.1174            4.0787k    3.80712k   631.515k       2.38246G/s    8.20952    83.512k   911.051k         1.44264    4.0508k/s 3.69049G/s     2.82239M               4.46923                3.09795          1        4.0508k/s [BEST: throughput=  2.58 GB/s doc_throughput=  4078 docs/s instructions=     2822388 cycles=      905365 branch_miss=    3629 cache_miss=       0 cache_ref=     83356 items=         1 avg_time=    246864 ns]
find_tweet<simdjson_ondemand>/manual_time                 116626 ns       145155 ns         5986              883           5.44016G               0        32.851k    428.845k             0.679073          8.61445k       3.69426G          1.50674M                    2.38591                     3.51348           8.61445k     939.777   631.515k       5.04299G/s  0.0105246   32.7338k   430.561k        0.681791   8.57442k/s 3.69181G/s     1.50674M               2.38591                3.49947          1       8.57442k/s [BEST: throughput=  5.44 GB/s doc_throughput=  8614 docs/s instructions=     1506737 cycles=      428845 branch_miss=     883 cache_miss=       0 cache_ref=     32851 items=         1 avg_time=    116626 ns]
find_tweet<yyjson>/manual_time                            663040 ns       693980 ns         1152           9.408k           1.63732G             350        67.645k    1.42424M              2.25527          2.59268k        3.6926G          2.82414M                      4.472                     1.98291           2.59268k     7.3885k   631.515k       908.331M/s    1043.38   41.7863k   1.64565M         2.60588   1.50821k/s 2.48198G/s     2.82462M               4.47277                1.71641          1       1.50821k/s [BEST: throughput=  1.64 GB/s doc_throughput=  2592 docs/s instructions=     2824137 cycles=     1424239 branch_miss=    9408 cache_miss=     350 cache_ref=     67645 items=         1 avg_time=    663039 ns]
find_tweet<yyjson_insitu>/manual_time                     461895 ns       492206 ns         1517           6.739k           1.84211G             497        38.179k    1.26252M              1.99919          2.91697k       3.68274G          2.82381M                    4.47149                     2.23665           2.91697k    7.26303k   631.515k       1.27333G/s    16.5794   23.7001k   1.37306M         2.17423   2.16499k/s 2.97266G/s     2.82408M               4.47191                2.05678          1       2.16499k/s [BEST: throughput=  1.84 GB/s doc_throughput=  2916 docs/s instructions=     2823814 cycles=     1262520 branch_miss=    6739 cache_miss=     497 cache_ref=     38179 items=         1 avg_time=    461895 ns]
find_tweet<rapidjson>/manual_time                        1596044 ns      1625346 ns          440          26.794k           448.645M             233        47.753k    5.19628M              8.22827           710.427       3.69157G          13.2811M                    21.0305                     2.55588            710.427    26.9655k   631.515k       377.345M/s   1.62381k   28.9148k   5.35761M         8.48374    626.549/s 3.35681G/s     13.2819M               21.0318                2.47907          1        626.549/s [BEST: throughput=  0.45 GB/s doc_throughput=   710 docs/s instructions=    13281074 cycles=     5196278 branch_miss=   26794 cache_miss=     233 cache_ref=     47753 items=         1 avg_time=   1596043 ns]
find_tweet<rapidjson_insitu>/manual_time                 1097631 ns      1127556 ns          679          23.344k           634.251M            1035         36.15k    3.67573M              5.82049           1004.33       3.69165G          9.64703M                     15.276                     2.62452            1004.33    23.7338k   631.515k        548.69M/s   1.77551k   27.6154k   3.76339M          5.9593    911.053/s 3.42864G/s     9.64737M               15.2766                2.56348          1        911.053/s [BEST: throughput=  0.63 GB/s doc_throughput=  1004 docs/s instructions=     9647030 cycles=     3675727 branch_miss=   23344 cache_miss=    1035 cache_ref=     36150 items=         1 avg_time=   1097631 ns]
