run_benchmark: v0.8.0~16 /home/jkeiser/simdjson_benchmark_results/v0.7.0/22/skylake-x-gcc10.2.json -DCMAKE_BUILD_TYPE=Release
git reset --hard v0.8.0~16
HEAD is now at 45479558 Merge pull request #1376 from simdjson/jkeiser/ondemand-runtime
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The CXX compiler identification is GNU 10.2.0
-- The C compiler identification is GNU 10.2.0
-- Check for working CXX compiler: /usr/bin/g++-10
-- Check for working CXX compiler: /usr/bin/g++-10 -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Check for working C compiler: /usr/bin/gcc-10
-- Check for working C compiler: /usr/bin/gcc-10 -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed
-- Check if compiler accepts -pthread
-- Check if compiler accepts -pthread - yes
-- Found Threads: TRUE  
-- Looking for fork
-- Looking for fork - found
-- Looking for wait
-- Looking for wait - found
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- Found Git: /usr/bin/git (found version "2.27.0") 
-- git Version: v0.2.1-45479558
-- Version: 0.2.1
-- Performing Test HAVE_CXX_FLAG_STD_CXX11
-- Performing Test HAVE_CXX_FLAG_STD_CXX11 - Success
-- Performing Test HAVE_CXX_FLAG_WALL
-- Performing Test HAVE_CXX_FLAG_WALL - Success
-- Performing Test HAVE_CXX_FLAG_WEXTRA
-- Performing Test HAVE_CXX_FLAG_WEXTRA - Success
-- Performing Test HAVE_CXX_FLAG_WSHADOW
-- Performing Test HAVE_CXX_FLAG_WSHADOW - Success
-- Performing Test HAVE_CXX_FLAG_WERROR
-- Performing Test HAVE_CXX_FLAG_WERROR - Success
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32 - Failed
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED - Success
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WD654
-- Performing Test HAVE_CXX_FLAG_WD654 - Failed
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY - Failed
-- Performing Test HAVE_CXX_FLAG_COVERAGE
-- Performing Test HAVE_CXX_FLAG_COVERAGE - Success
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Performing Test USE_BOOST_JSON
-- Performing Test USE_BOOST_JSON - Failed
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Found Python3: /usr/bin/python3.8 (found version "3.8.6") found components: Interpreter 
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 10
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
Scanning dependencies of target benchmark
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_api_internal.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_name.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_name.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_register.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_register.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_runner.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_runner.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/colorprint.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/colorprint.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/commandlineflags.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/commandlineflags.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/complexity.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/complexity.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/console_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/console_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/counter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/counter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/csv_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/csv_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/json_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/json_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/sleep.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sleep.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/statistics.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/statistics.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/string_util.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/string_util.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/sysinfo.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sysinfo.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/timers.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/timers.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -P CMakeFiles/benchmark.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/benchmark.dir/link.txt --verbose=1
/usr/bin/ar qc libbenchmark.a  CMakeFiles/benchmark.dir/benchmark.cc.o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o CMakeFiles/benchmark.dir/benchmark_name.cc.o CMakeFiles/benchmark.dir/benchmark_register.cc.o CMakeFiles/benchmark.dir/benchmark_runner.cc.o CMakeFiles/benchmark.dir/colorprint.cc.o CMakeFiles/benchmark.dir/commandlineflags.cc.o CMakeFiles/benchmark.dir/complexity.cc.o CMakeFiles/benchmark.dir/console_reporter.cc.o CMakeFiles/benchmark.dir/counter.cc.o CMakeFiles/benchmark.dir/csv_reporter.cc.o CMakeFiles/benchmark.dir/json_reporter.cc.o CMakeFiles/benchmark.dir/reporter.cc.o CMakeFiles/benchmark.dir/sleep.cc.o CMakeFiles/benchmark.dir/statistics.cc.o CMakeFiles/benchmark.dir/string_util.cc.o CMakeFiles/benchmark.dir/sysinfo.cc.o CMakeFiles/benchmark.dir/timers.cc.o
/usr/bin/ranlib libbenchmark.a
[ 80%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
Scanning dependencies of target generated-data
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated && /usr/bin/ruby genfeaturejson.rb /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-miss.json ...
[ 80%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/g++-10  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/src  -O3 -DNDEBUG -fPIC   -pthread -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/g++-10 -fPIC -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.6 -o ../libsimdjson.so.6.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.6.0.0 ../libsimdjson.so.6 ../libsimdjson.so
[ 80%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
Scanning dependencies of target yyjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/gcc-10  -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src  -O3 -DNDEBUG   -o CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o   -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src/yyjson.c
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -P CMakeFiles/yyjson.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -E cmake_link_script CMakeFiles/yyjson.dir/link.txt --verbose=1
/usr/bin/ar qc libyyjson.a  CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o
/usr/bin/ranlib libyyjson.a
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/g++-10  -DRAPIDJSON_HAS_STDSTRING -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_COMPETITION_RAPIDJSON -DSIMDJSON_COMPETITION_YYJSON -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/rapidjson/include  -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/g++-10  -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.6.0.0 ../_deps/google_benchmarks/src/libbenchmark.a ../dependencies/libyyjson.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/22/skylake-x-gcc10.2.json --benchmark_out_format=json
2021-01-24 23:25:20
Running benchmark/bench_ondemand
Run on (4 X 3200 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 1024 KiB (x4)
  L3 Unified 8448 KiB (x1)
Load Average: 1.03, 1.00, 0.99
***WARNING*** CPU scaling is enabled, the benchmark real time measurements may be noisy and will incur extra overhead.
simdjson::dom implementation:      haswell
simdjson::ondemand implementation: fallback

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                  304324 ns       375004 ns         2301           3.873k           2.08986G               4        33.898k    965.173k              1.52835          3.30927k       3.19402G          2.96251M                    4.69112                     3.06941           330.927k    4.00054k   631.515k       1.93262G/s    3.81008    33.754k   971.088k         1.53771   3.28597k/s 3.19097G/s     2.96251M               4.69112                3.05071        100       328.597k/s [BEST: throughput=  2.09 GB/s doc_throughput=  3309 docs/s instructions=     2962513 cycles=      965173 branch_miss=    3873 cache_miss=       4 cache_ref=     33898 items=       100 avg_time=    304324 ns]
partial_tweets<simdjson_ondemand>/manual_time             233013 ns       290528 ns         3002            2.28k           2.73705G               2        11.592k    736.995k              1.16703          4.33411k       3.19422G          2.46248M                    3.89932                     3.34124           433.411k    2.37866k   631.515k       2.52408G/s    1.72019   11.6746k   743.429k         1.17721   4.29161k/s  3.1905G/s     2.46248M               3.89932                3.31233        100       429.161k/s [BEST: throughput=  2.74 GB/s doc_throughput=  4334 docs/s instructions=     2462480 cycles=      736995 branch_miss=    2280 cache_miss=       2 cache_ref=     11592 items=       100 avg_time=    233012 ns]
partial_tweets<yyjson>/manual_time                        857240 ns       936535 ns          815           9.905k           1.27205G             255          28.3k    1.58561M              2.51081          2.01429k       3.19388G          2.90839M                    4.60541                     1.83423           201.429k    7.85457k   631.515k       702.557M/s    646.344   26.0855k   1.76049M         2.78772   1.16653k/s 2.05367G/s     2.90885M               4.60614                1.65229        100       116.653k/s [BEST: throughput=  1.27 GB/s doc_throughput=  2014 docs/s instructions=     2908386 cycles=     1585613 branch_miss=    9905 cache_miss=     255 cache_ref=     28300 items=       100 avg_time=    857239 ns]
partial_tweets<yyjson_insitu>/manual_time                 577221 ns       642041 ns         1222           7.692k           1.52407G              83        14.878k    1.32329M              2.09542          2.41336k       3.19358G          2.90825M                     4.6052                     2.19774           241.336k    7.65563k   631.515k       1043.38M/s    121.743   12.1143k   1.43952M         2.27947   1.73244k/s 2.49388G/s     2.90852M               4.60562                2.02048        100       173.244k/s [BEST: throughput=  1.52 GB/s doc_throughput=  2413 docs/s instructions=     2908252 cycles=     1323292 branch_miss=    7692 cache_miss=      83 cache_ref=     14878 items=       100 avg_time=    577220 ns]
partial_tweets<rapidjson>/manual_time                    1909133 ns      1976985 ns          368           26.03k           384.387M          7.578k         22.91k    5.24543M               8.3061           608.674       3.19276G          13.4093M                    21.2336                     2.55639           60.8674k    26.1924k   631.515k       315.462M/s    441.071   16.5166k   5.40744M         8.56264    523.798/s  2.8324G/s     13.4101M               21.2347                2.47993        100       52.3798k/s [BEST: throughput=  0.38 GB/s doc_throughput=   608 docs/s instructions=    13409337 cycles=     5245429 branch_miss=   26030 cache_miss=    7578 cache_ref=     22910 items=       100 avg_time=   1909132 ns]
partial_tweets<rapidjson_insitu>/manual_time             1351589 ns      1413867 ns          520          23.447k           545.193M             239        14.976k    3.69849M              5.85654            863.31       3.19294G          9.75513M                    15.4472                      2.6376            86.331k    27.6888k   631.515k       445.594M/s    211.369   9.91569k   3.90132M         6.17771     739.87/s 2.88647G/s     9.75552M               15.4478                2.50057        100        73.987k/s [BEST: throughput=  0.55 GB/s doc_throughput=   863 docs/s instructions=     9755129 cycles=     3698491 branch_miss=   23447 cache_miss=     239 cache_ref=     14976 items=       100 avg_time=   1351588 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                 104035501 ns    110288132 ns            7         866.375k           443.573M        6.78787M       6.89581M    330.677M              7.18882           9.64314       3.18876G          983.113M                    21.3726                     2.97303           9.64314M    867.742k   45.9988M       421.662M/s   6.82051M   6.89593M   331.712M         7.21133     9.6121/s 3.18845G/s     983.113M               21.3726                2.96375      1000k        9.6121M/s [BEST: throughput=  0.44 GB/s doc_throughput=     9 docs/s instructions=   983112691 cycles=   330676966 branch_miss=  866375 cache_miss= 6787866 cache_ref=   6895811 items=   1000000 avg_time= 104035501 ns]
large_random<simdjson_ondemand>/manual_time             66431414 ns     72663059 ns           11         1019.18k           694.246M        3.51068M       3.57326M    211.273M              4.59301           15.0927       3.18868G           641.49M                    13.9458                     3.03631           15.0927M    1034.26k   45.9988M       660.348M/s   3.52504M   3.57333M   211.787M         4.60419    15.0531/s 3.18805G/s      641.49M               13.9458                3.02894      1000k       15.0531M/s [BEST: throughput=  0.69 GB/s doc_throughput=    15 docs/s instructions=   641489876 cycles=   211272954 branch_miss= 1019176 cache_miss= 3510679 cache_ref=   3573258 items=   1000000 avg_time=  66431414 ns]
large_random<simdjson_ondemand_unordered>/manual_time   70632804 ns     76849529 ns           10         896.222k            651.75M        3.49379M       3.57386M    225.051M              4.89254           14.1689       3.18872G           645.49M                    14.0328                     2.86819           14.1689M    897.107k   45.9988M       621.069M/s   3.52431M   3.57383M   225.187M         4.89551    14.1577/s 3.18814G/s      645.49M               14.0328                2.86646      1000k       14.1577M/s [BEST: throughput=  0.65 GB/s doc_throughput=    14 docs/s instructions=   645489881 cycles=   225051081 branch_miss=  896222 cache_miss= 3493787 cache_ref=   3573856 items=   1000000 avg_time=  70632803 ns]
large_random<yyjson>/manual_time                       157873587 ns    164140956 ns            4         665.631k           291.566M        4.20936M       5.38417M    362.241M              7.87502           6.33856       2.29609G          944.149M                    20.5255                     2.60641           6.33856M    666.768k   45.9988M       277.867M/s   4.21064M   5.40317M   362.476M         7.88012    6.33418/s 2.29599G/s     944.149M               20.5255                2.60472      1000k       6.33418M/s [BEST: throughput=  0.29 GB/s doc_throughput=     6 docs/s instructions=   944149403 cycles=   362241061 branch_miss=  665631 cache_miss= 4209363 cache_ref=   5384172 items=   1000000 avg_time= 157873587 ns]
large_random<yyjson_insitu>/manual_time                131307822 ns    137612687 ns            5         666.693k           350.636M         3.4921M       4.68625M    318.447M              6.92295           7.62273       2.42744G          938.029M                    20.3925                     2.94563           7.62273M    667.708k   45.9988M       334.084M/s   3.49345M   4.67771M   318.805M         6.93072    7.61569/s 2.42792G/s     938.029M               20.3925                2.94233      1000k       7.61569M/s [BEST: throughput=  0.35 GB/s doc_throughput=     7 docs/s instructions=   938028628 cycles=   318447083 branch_miss=  666693 cache_miss= 3492098 cache_ref=   4686252 items=   1000000 avg_time= 131307822 ns]
large_random<rapidjson>/manual_time                    201253408 ns    207518119 ns            4          600.16k           239.709M        4.32394M       5.22736M    543.295M              11.8111           5.21119       2.83121G          1.65612G                    36.0037                      3.0483           5.21119M    604.596k   45.9988M       217.973M/s   4.03244M    5.1609M   548.471M         11.9236    4.96886/s 2.72528G/s     1.65613G               36.0039                3.01954      1000k       4.96886M/s [BEST: throughput=  0.24 GB/s doc_throughput=     5 docs/s instructions=  1656123929 cycles=   543294656 branch_miss=  600160 cache_miss= 4323936 cache_ref=   5227356 items=   1000000 avg_time= 201253408 ns]
large_random<rapidjson_lossless>/manual_time           232563923 ns    238807164 ns            3         600.469k           205.092M        4.33141M       5.22493M    646.544M              14.0557           4.45863        2.8827G          2.00709G                    43.6336                     3.10434           4.45863M    601.086k   45.9988M       188.627M/s   4.06803M   5.16241M   651.043M         14.1535    4.29989/s 2.79942G/s      2.0071G               43.6338                 3.0829      1000k       4.29989M/s [BEST: throughput=  0.21 GB/s doc_throughput=     4 docs/s instructions=  2007093323 cycles=   646543897 branch_miss=  600469 cache_miss= 4331411 cache_ref=   5224930 items=   1000000 avg_time= 232563923 ns]
large_random<rapidjson_insitu>/manual_time             184671193 ns    190951560 ns            4         590.814k           263.012M        5.01818M       5.94796M    488.858M              10.6276           5.71781        2.7952G          1.49112G                    32.4165                     3.05021           5.71781M    619.408k   45.9988M       237.546M/s   4.73368M   5.88193M   495.445M         10.7708    5.41503/s 2.68285G/s     1.49113G               32.4168                3.00968      1000k       5.41503M/s [BEST: throughput=  0.26 GB/s doc_throughput=     5 docs/s instructions=  1491121422 cycles=   488858010 branch_miss=  590814 cache_miss= 5018182 cache_ref=   5947963 items=   1000000 avg_time= 184671193 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                        97894243 ns    117294549 ns            7         458.909k           1.40424G        10.2081M       10.3152M    311.766M              2.27061           10.2272       3.18848G          945.501M                    6.88614                     3.03273           5.36199M    459.211k   137.305M       1.30626G/s    10.247M   10.3152M   312.074M         2.27285    10.2151/s 3.18787G/s     945.501M               6.88614                3.02974   524.288k       5.35566M/s [BEST: throughput=  1.40 GB/s doc_throughput=    10 docs/s instructions=   945501392 cycles=   311765673 branch_miss=  458909 cache_miss=10208097 cache_ref=  10315160 items=    524288 avg_time=  97894243 ns]
kostya<simdjson_ondemand>/manual_time                   66133949 ns     85518454 ns           11         474.576k           2.08133G        6.43109M       6.47037M    210.364M              1.53209           15.1584       3.18879G          676.738M                    4.92872                     3.21698           7.94738M     474.73k   137.305M       1.93358G/s     6.433M   6.47045M    210.83M         1.53548    15.1208/s 3.18792G/s     676.738M               4.92872                3.20988   524.288k       7.92767M/s [BEST: throughput=  2.08 GB/s doc_throughput=    15 docs/s instructions=   676737583 cycles=   210363973 branch_miss=  474576 cache_miss= 6431093 cache_ref=   6470374 items=    524288 avg_time=  66133949 ns]
kostya<yyjson>/manual_time                             265822731 ns    285320106 ns            3         428.461k           516.679M        8.49109M       9.98223M    613.072M              4.46504             3.763       2.30699G          984.045M                    7.16686                      1.6051            1.9729M    427.288k   137.305M         492.6M/s   8.48996M   9.97775M   612.946M         4.46412    3.76191/s 2.30585G/s     984.045M               7.16686                1.60543   524.288k       1.97232M/s [BEST: throughput=  0.52 GB/s doc_throughput=     3 docs/s instructions=   984045147 cycles=   613072170 branch_miss=  428461 cache_miss= 8491088 cache_ref=   9982229 items=    524288 avg_time= 265822731 ns]
kostya<yyjson_insitu>/manual_time                      186841180 ns    206284509 ns            4         426.748k           735.264M        6.35152M       7.60804M    482.584M              3.51468           5.35497       2.58422G          965.775M                     7.0338                     2.00126           2.80754M    427.195k   137.305M       700.832M/s   6.35228M   7.60732M    482.89M         3.51691    5.35214/s 2.58449G/s     965.775M                7.0338                1.99999   524.288k       2.80606M/s [BEST: throughput=  0.74 GB/s doc_throughput=     5 docs/s instructions=   965775465 cycles=   482583669 branch_miss=  426748 cache_miss= 6351518 cache_ref=   7608037 items=    524288 avg_time= 186841180 ns]
kostya<rapidjson>/manual_time                          291800125 ns    311260959 ns            2         1.29926M           476.188M        5.19245M       6.47398M    821.777M              5.98505            3.4681       2.85001G          2.29502G                    16.7148                     2.79276           1.81829M    1.30504M   137.305M       448.746M/s   5.06876M   6.44149M   824.244M         6.00302      3.427/s 2.82469G/s     2.29503G               16.7148                 2.7844   524.288k       1.79674M/s [BEST: throughput=  0.48 GB/s doc_throughput=     3 docs/s instructions=  2295024209 cycles=   821777190 branch_miss= 1299261 cache_miss= 5192452 cache_ref=   6473979 items=    524288 avg_time= 291800124 ns]
kostya<rapidjson_lossless>/manual_time                 302842738 ns    322364146 ns            2         992.676k           458.649M        5.19738M       6.47251M    856.942M              6.24116           3.34037        2.8625G          2.49529G                    18.1734                     2.91186           1.75132M    1000.87k   137.305M       432.384M/s   5.07248M   6.44008M    859.41M         6.25913    3.30204/s 2.83781G/s      2.4953G               18.1734                 2.9035   524.288k       1.73122M/s [BEST: throughput=  0.46 GB/s doc_throughput=     3 docs/s instructions=  2495294183 cycles=   856942440 branch_miss=  992676 cache_miss= 5197377 cache_ref=   6472512 items=    524288 avg_time= 302842738 ns]
kostya<rapidjson_insitu>/manual_time                   265641585 ns    285113609 ns            3         1.25005M           526.168M        7.31948M       8.63835M     734.62M              5.35028           3.83211       2.81515G          2.03014G                    14.7856                     2.76353           2.00913M    1.29127M   137.305M       492.936M/s   7.15717M   8.59683M     738.1M         5.37562    3.76447/s 2.77856G/s     2.03014G               14.7857                 2.7505   524.288k       1.97367M/s [BEST: throughput=  0.53 GB/s doc_throughput=     3 docs/s instructions=  2030142609 cycles=   734619625 branch_miss= 1250045 cache_miss= 7319484 cache_ref=   8638349 items=    524288 avg_time= 265641585 ns]
distinct_user_id<simdjson_dom>/manual_time                299393 ns       377299 ns         2338           4.042k           2.12631G               1        33.675k    948.574k              1.50206            3.367k       3.19385G          2.90344M                    4.59757                     3.06084           387.205k    4.18941k   631.515k       1.96445G/s    1.27673   33.7924k   955.357k          1.5128   3.34009k/s 3.19098G/s     2.90344M               4.59757                3.03911        115        384.11k/s [BEST: throughput=  2.13 GB/s doc_throughput=  3367 docs/s instructions=     2903436 cycles=      948574 branch_miss=    4042 cache_miss=       1 cache_ref=     33675 items=       115 avg_time=    299393 ns]
distinct_user_id<simdjson_ondemand>/manual_time           195866 ns       257235 ns         3574           1.783k           3.24979G               0         7.277k    620.745k             0.982946          5.14602k       3.19437G          2.11936M                    3.35599                     3.41422           591.792k    1.93053k   631.515k        3.0028G/s   0.810297   7.30505k   625.038k        0.989744   5.10554k/s 3.19116G/s     2.11936M               3.35599                3.39077        115       587.137k/s [BEST: throughput=  3.25 GB/s doc_throughput=  5146 docs/s instructions=     2119361 cycles=      620745 branch_miss=    1783 cache_miss=       0 cache_ref=      7277 items=       115 avg_time=    195865 ns]
distinct_user_id<yyjson>/manual_time                      853500 ns       942178 ns          977           10.14k           1.27449G             219        27.588k    1.58248M              2.50584          2.01814k       3.19366G          2.87343M                    4.55005                     1.81578           232.086k    7.96183k   631.515k       705.635M/s    475.068   25.8711k   1.75216M         2.77453   1.17165k/s 2.05291G/s     2.87382M               4.55068                1.64016        115       134.739k/s [BEST: throughput=  1.27 GB/s doc_throughput=  2018 docs/s instructions=     2873425 cycles=     1582477 branch_miss=   10140 cache_miss=     219 cache_ref=     27588 items=       115 avg_time=    853499 ns]
distinct_user_id<yyjson_insitu>/manual_time               574626 ns       648535 ns         1229           7.712k           1.53421G             118        14.891k    1.31449M              2.08148          2.42942k       3.19344G          2.87323M                    4.54974                     2.18582           279.383k    7.78425k   631.515k       1048.09M/s     116.58   12.0138k   1.43168M         2.26705   1.74026k/s  2.4915G/s     2.87349M               4.55016                2.00708        115        200.13k/s [BEST: throughput=  1.53 GB/s doc_throughput=  2429 docs/s instructions=     2873229 cycles=     1314486 branch_miss=    7712 cache_miss=     118 cache_ref=     14891 items=       115 avg_time=    574625 ns]
distinct_user_id<rapidjson>/manual_time                  1881041 ns      1955923 ns          372          25.363k           387.558M         12.498k        22.586k    5.20251M              8.23815           613.695       3.19276G          13.3486M                    21.1374                      2.5658           70.5749k    26.1329k   631.515k       320.174M/s   1.33415k     17.02k   5.36754M         8.49947    531.621/s  2.8535G/s     13.3493M               21.1385                2.48704        115       61.1364k/s [BEST: throughput=  0.39 GB/s doc_throughput=   613 docs/s instructions=    13348601 cycles=     5202513 branch_miss=   25363 cache_miss=   12498 cache_ref=     22586 items=       115 avg_time=   1881040 ns]
distinct_user_id<rapidjson_insitu>/manual_time           1315893 ns      1386216 ns          577          22.852k           548.534M          2.905k        14.078k    3.67599M              5.82091           868.601       3.19297G          9.70511M                     15.368                     2.64014           99.8891k    26.2341k   631.515k       457.681M/s   1.30741k   11.2709k   3.85166M         6.09908     759.94/s 2.92703G/s     9.70536M               15.3684                2.51979        115       87.3931k/s [BEST: throughput=  0.55 GB/s doc_throughput=   868 docs/s instructions=     9705114 cycles=     3675989 branch_miss=   22852 cache_miss=    2905 cache_ref=     14078 items=       115 avg_time=   1315892 ns]
find_tweet<simdjson_dom>/manual_time                      283362 ns       356829 ns         2469           3.704k           2.24545G               3        29.479k    898.325k              1.42249          3.55566k       3.19414G           2.8224M                    4.46925                     3.14184           3.55566k    3.84332k   631.515k       2.07559G/s    13.0899   29.5693k    904.19k         1.43178   3.52905k/s 3.19094G/s      2.8224M               4.46925                3.12146          1       3.52905k/s [BEST: throughput=  2.25 GB/s doc_throughput=  3555 docs/s instructions=     2822396 cycles=      898325 branch_miss=    3704 cache_miss=       3 cache_ref=     29479 items=         1 avg_time=    283362 ns]
find_tweet<simdjson_ondemand>/manual_time                 133970 ns       197552 ns         5225              955           4.74093G               0         6.968k    425.678k             0.674058          7.50723k       3.19566G          1.50675M                    2.38592                     3.53964           7.50723k     1003.56   631.515k       4.39013G/s   0.506603    6.9927k   427.656k         0.67719   7.46438k/s 3.19218G/s     1.50675M               2.38592                3.52327          1       7.46438k/s [BEST: throughput=  4.74 GB/s doc_throughput=  7507 docs/s instructions=     1506745 cycles=      425678 branch_miss=     955 cache_miss=       0 cache_ref=      6968 items=         1 avg_time=    133969 ns]
find_tweet<yyjson>/manual_time                            843209 ns       929170 ns          835           9.736k           1.30165G             173        27.262k    1.54944M              2.45353          2.06115k       3.19363G          2.82415M                    4.47202                     1.82269           2.06115k    7.68946k   631.515k       714.247M/s    451.917   25.0786k   1.72049M         2.72438   1.18595k/s  2.0404G/s     2.82483M                4.4731                1.64188          1       1.18595k/s [BEST: throughput=  1.30 GB/s doc_throughput=  2061 docs/s instructions=     2824146 cycles=     1549438 branch_miss=    9736 cache_miss=     173 cache_ref=     27262 items=         1 avg_time=    843209 ns]
find_tweet<yyjson_insitu>/manual_time                     562190 ns       630750 ns         1254           7.471k           1.57028G             109        14.151k    1.28446M              2.03393          2.48652k       3.19384G          2.82382M                     4.4715                     2.19845           2.48652k    7.45203k   631.515k       1071.27M/s    7.88836   10.3552k   1.39251M         2.20503   1.77876k/s 2.47694G/s     2.82408M               4.47192                2.02805          1       1.77876k/s [BEST: throughput=  1.57 GB/s doc_throughput=  2486 docs/s instructions=     2823819 cycles=     1284460 branch_miss=    7471 cache_miss=     109 cache_ref=     14151 items=         1 avg_time=    562189 ns]
find_tweet<rapidjson>/manual_time                        1867575 ns      1938056 ns          376          25.296k           390.759M         11.939k        21.171k    5.15996M              8.17076           618.764       3.19279G          13.2805M                    21.0297                     2.57377            618.764    26.0543k   631.515k       322.482M/s    1026.73   14.3038k   5.32338M         8.42954    535.454/s 2.85042G/s     13.2812M               21.0308                2.49489          1        535.454/s [BEST: throughput=  0.39 GB/s doc_throughput=   618 docs/s instructions=    13280550 cycles=     5159957 branch_miss=   25296 cache_miss=   11939 cache_ref=     21171 items=         1 avg_time=   1867574 ns]
find_tweet<rapidjson_insitu>/manual_time                 1315061 ns      1380321 ns          588          23.142k           552.202M               7        13.215k     3.6516M              5.78228           874.408       3.19298G          9.64702M                     15.276                     2.64187            874.408    27.6165k   631.515k       457.971M/s   1.12399k   8.61092k   3.84737M         6.09228    760.421/s 2.92562G/s     9.64757M               15.2769                2.50758          1        760.421/s [BEST: throughput=  0.55 GB/s doc_throughput=   874 docs/s instructions=     9647025 cycles=     3651596 branch_miss=   23142 cache_miss=       7 cache_ref=     13215 items=         1 avg_time=   1315060 ns]
