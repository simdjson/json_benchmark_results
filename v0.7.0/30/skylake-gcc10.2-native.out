run_benchmark: v0.8.0~8 /home/jkeiser/simdjson_benchmark_results/v0.7.0/30/skylake-gcc10.2-native.json -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native
git reset --hard v0.8.0~8
HEAD is now at 92372412 Merge pull request #1387 from simdjson/jkeiser/ondemand-scalar-order
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- git Version: v0.2.1-92372412
-- Version: 0.2.1
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 11
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
make[3]: Nothing to be done for '_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build'.
[ 72%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
make[3]: Nothing to be done for 'jsonexamples/generated/CMakeFiles/generated-data.dir/build'.
[ 72%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/g++-10  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/src  -march=native -O3 -DNDEBUG -fPIC   -pthread -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/g++-10 -fPIC -march=native -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.6 -o ../libsimdjson.so.6.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.6.0.0 ../libsimdjson.so.6 ../libsimdjson.so
[ 81%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
make[3]: Nothing to be done for 'dependencies/CMakeFiles/yyjson.dir/build'.
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/g++-10  -DRAPIDJSON_HAS_STDSTRING -DSAJSON_UNSORTED_OBJECT_KEYS -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_COMPETITION_NLOHMANN_JSON -DSIMDJSON_COMPETITION_RAPIDJSON -DSIMDJSON_COMPETITION_SAJSON -DSIMDJSON_COMPETITION_YYJSON -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/rapidjson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/sajson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/json  -march=native -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/g++-10  -march=native -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.6.0.0 ../_deps/google_benchmarks/src/libbenchmark.a ../dependencies/libyyjson.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/30/skylake-gcc10.2-native.json --benchmark_out_format=json
2021-01-25 00:13:01
Running benchmark/bench_ondemand
Run on (4 X 4000 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 256 KiB (x4)
  L3 Unified 8192 KiB (x1)
Load Average: 1.00, 1.00, 1.00
simdjson::dom implementation:      haswell
simdjson::ondemand implementation: haswell

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                  259225 ns       287512 ns         2627           3.675k           2.45085G               0        86.806k    951.501k               1.5067           3.8809k       3.69268G          2.91501M                     4.6159                     3.06359            388.09k    3.84957k   631.515k       2.26886G/s    5.86068   86.7536k   956.723k         1.51496   3.85765k/s  3.6907G/s     2.91501M                4.6159                3.04687        100       385.765k/s [BEST: throughput=  2.45 GB/s doc_throughput=  3880 docs/s instructions=     2915013 cycles=      951501 branch_miss=    3675 cache_miss=       0 cache_ref=     86806 items=       100 avg_time=    259224 ns]
partial_tweets<simdjson_ondemand>/manual_time             188692 ns       216754 ns         3709           1.601k           3.37259G               0        54.759k    691.499k              1.09498          5.34048k       3.69294G           2.1433M                     3.3939                      3.0995           534.048k    1.81437k   631.515k       3.11695G/s   0.037746   54.7796k   696.504k         1.10291   5.29963k/s 3.69121G/s      2.1433M                3.3939                3.07722        100       529.963k/s [BEST: throughput=  3.37 GB/s doc_throughput=  5340 docs/s instructions=     2143300 cycles=      691499 branch_miss=    1601 cache_miss=       0 cache_ref=     54759 items=       100 avg_time=    188692 ns]
partial_tweets<yyjson>/manual_time                        688071 ns       718738 ns         1016          10.059k           1.57893G             341        74.534k    1.47687M              2.33862          2.50023k       3.69251G          2.90845M                    4.60552                     1.96933           250.023k    7.65504k   631.515k       875.287M/s    964.113   48.9035k   1.68918M         2.67481   1.45334k/s 2.45495G/s     2.90894M               4.60629                 1.7221        100       145.334k/s [BEST: throughput=  1.58 GB/s doc_throughput=  2500 docs/s instructions=     2908453 cycles=     1476871 branch_miss=   10059 cache_miss=     341 cache_ref=     74534 items=       100 avg_time=    688071 ns]
partial_tweets<yyjson_insitu>/manual_time                 478299 ns       507174 ns         1464           7.086k           1.76567G             832        45.766k    1.30919M               2.0731          2.79592k        3.6604G          2.90814M                    4.60502                     2.22132           279.592k    7.51687k   631.515k       1.22966G/s    130.973   31.7745k   1.41959M         2.24791   2.09074k/s   2.968G/s      2.9084M               4.60543                2.04876        100       209.074k/s [BEST: throughput=  1.77 GB/s doc_throughput=  2795 docs/s instructions=     2908138 cycles=     1309192 branch_miss=    7086 cache_miss=     832 cache_ref=     45766 items=       100 avg_time=    478299 ns]
partial_tweets<sajson>/manual_time                        554135 ns       582498 ns         1261           9.877k           1.15225G               0         45.66k    2.02345M              3.20413          1.82458k       3.69196G          6.04844M                    9.57767                     2.98917           182.458k    10.4712k   631.515k       1086.85M/s    10.3497   45.6674k   2.04479M         3.23792   1.80461k/s 3.69006G/s     6.04844M               9.57767                2.95797        100       180.461k/s [BEST: throughput=  1.15 GB/s doc_throughput=  1824 docs/s instructions=     6048442 cycles=     2023455 branch_miss=    9877 cache_miss=       0 cache_ref=     45660 items=       100 avg_time=    554135 ns]
partial_tweets<rapidjson>/manual_time                    1637873 ns      1666724 ns          428          27.385k           441.511M          1.324k        50.879k    5.28028M              8.36129            699.13        3.6916G          13.1238M                    20.7814                     2.48543            69.913k    27.4551k   631.515k       367.708M/s    516.079   32.9471k   5.45582M         8.63926    610.548/s 3.33104G/s     13.1247M               20.7829                2.40563        100       61.0548k/s [BEST: throughput=  0.44 GB/s doc_throughput=   699 docs/s instructions=    13123763 cycles=     5280280 branch_miss=   27385 cache_miss=    1324 cache_ref=     50879 items=       100 avg_time=   1637873 ns]
partial_tweets<rapidjson_insitu>/manual_time             1034284 ns      1062949 ns          680          24.659k           688.967M             253        42.926k    3.38377M              5.35818           1090.97       3.69161G           9.8243M                    15.5567                     2.90336           109.097k    24.6473k   631.515k       582.296M/s    222.374   33.3773k    3.4709M         5.49615    966.853/s 3.35585G/s     9.82491M               15.5577                2.83065        100       96.6853k/s [BEST: throughput=  0.69 GB/s doc_throughput=  1090 docs/s instructions=     9824301 cycles=     3383774 branch_miss=   24659 cache_miss=     253 cache_ref=     42926 items=       100 avg_time=   1034283 ns]
partial_tweets<nlohmann_json>/manual_time                7716285 ns      7751149 ns           91         134.527k           84.4471M               4       224.797k    27.5906M              43.6895           133.722       3.68945G          70.7685M                    112.062                     2.56495           13.3722k    148.425k   631.515k       78.0505M/s    64.7582   353.794k   28.4685M         45.0796    129.596/s  3.6894G/s     71.2024M               112.749                 2.5011        100       12.9596k/s [BEST: throughput=  0.08 GB/s doc_throughput=   133 docs/s instructions=    70768524 cycles=    27590569 branch_miss=  134527 cache_miss=       4 cache_ref=    224797 items=       100 avg_time=   7716284 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                  97168320 ns    100558040 ns            7         856.432k           473.958M        10.9287M       15.2062M    358.024M              7.78333           10.3037       3.68897G          981.675M                    21.3413                     2.74193           10.3037M      856.9k   45.9988M       451.462M/s   10.9708M   15.2089M   358.448M         7.79254    10.2914/s 3.68893G/s     981.675M               21.3413                2.73869      1000k       10.2914M/s [BEST: throughput=  0.47 GB/s doc_throughput=    10 docs/s instructions=   981674958 cycles=   358023635 branch_miss=  856432 cache_miss=10928716 cache_ref=  15206171 items=   1000000 avg_time=  97168320 ns]
large_random<simdjson_ondemand>/manual_time             60484460 ns     63840182 ns           12         880.824k           761.311M        5.66327M       7.88718M    222.901M               4.8458           16.5507       3.68916G          644.053M                    14.0015                     2.88941           16.5507M    881.721k   45.9988M       725.275M/s    5.6994M   7.89074M   223.125M         4.85068    16.5332/s 3.68897G/s     644.053M               14.0015                2.88651      1000k       16.5332M/s [BEST: throughput=  0.76 GB/s doc_throughput=    16 docs/s instructions=   644052609 cycles=   222900888 branch_miss=  880824 cache_miss= 5663270 cache_ref=   7887179 items=   1000000 avg_time=  60484460 ns]
large_random<simdjson_ondemand_unordered>/manual_time   62009214 ns     65382772 ns           11         874.539k           742.417M        5.68385M       7.89953M    228.564M              4.96891           16.1399       3.68901G          644.053M                    14.0015                     2.81782           16.1399M    874.275k   45.9988M       707.441M/s   5.72046M   7.89445M   228.737M         4.97268    16.1266/s 3.68876G/s     644.053M               14.0015                2.81569      1000k       16.1266M/s [BEST: throughput=  0.74 GB/s doc_throughput=    16 docs/s instructions=   644052613 cycles=   228563944 branch_miss=  874539 cache_miss= 5683851 cache_ref=   7899531 items=   1000000 avg_time=  62009214 ns]
large_random<yyjson>/manual_time                       127610147 ns    131035188 ns            5         662.646k           360.565M        5.82968M       8.93164M    350.753M              7.62528           7.83859       2.74941G          942.149M                    20.4821                     2.68607           7.83859M    660.374k   45.9988M       343.765M/s   5.83478M   8.95618M   350.758M         7.62537    7.83637/s 2.74867G/s     942.149M               20.4821                2.68604      1000k       7.83637M/s [BEST: throughput=  0.36 GB/s doc_throughput=     7 docs/s instructions=   942149406 cycles=   350753386 branch_miss=  662646 cache_miss= 5829683 cache_ref=   8931642 items=   1000000 avg_time= 127610146 ns]
large_random<yyjson_insitu>/manual_time                109511964 ns    112930402 ns            6         656.854k           420.288M        4.98186M       7.62131M    318.163M              6.91677           9.13693       2.90703G          936.029M                     20.349                     2.94198           9.13693M    659.866k   45.9988M       400.576M/s   4.98992M   7.63855M   318.401M         6.92194    9.13142/s 2.90745G/s     936.029M                20.349                2.93978      1000k       9.13142M/s [BEST: throughput=  0.42 GB/s doc_throughput=     9 docs/s instructions=   936028647 cycles=   318162963 branch_miss=  656854 cache_miss= 4981865 cache_ref=   7621306 items=   1000000 avg_time= 109511963 ns]
large_random<sajson>/manual_time                        90142593 ns     93538109 ns            8         581.914k           512.507M        8.36713M        12.117M    331.104M              7.19811           11.1417       3.68908G          1066.99M                    23.1961                     3.22252           11.1417M    582.262k   45.9988M        486.65M/s   8.40341M    12.087M   332.549M         7.22951    11.0935/s 3.68914G/s     1066.99M               23.1961                3.20853      1000k       11.0935M/s [BEST: throughput=  0.51 GB/s doc_throughput=    11 docs/s instructions=  1066991821 cycles=   331104413 branch_miss=  581914 cache_miss= 8367129 cache_ref=  12116953 items=   1000000 avg_time=  90142593 ns]
large_random<rapidjson>/manual_time                    177796454 ns    181212687 ns            4         607.556k           269.719M        7.03283M       10.6945M    571.132M              12.4163           5.86362        3.3489G          1.67314G                    36.3736                     2.92951           5.86362M    605.099k   45.9988M       246.731M/s   6.43631M   9.95812M   576.928M         12.5422    5.62441/s 3.24488G/s     1.67315G               36.3738                 2.9001      1000k       5.62441M/s [BEST: throughput=  0.27 GB/s doc_throughput=     5 docs/s instructions=  1673140088 cycles=   571132303 branch_miss=  607556 cache_miss= 7032830 cache_ref=  10694497 items=   1000000 avg_time= 177796453 ns]
large_random<rapidjson_lossless>/manual_time           204978014 ns    208399137 ns            4         598.908k            232.58M        6.98729M       10.6799M    671.647M              14.6014           5.05623         3.396G          2.06011G                    44.7861                     3.06724           5.05623M    598.978k   45.9988M       214.012M/s   6.42497M   9.95133M   677.232M         14.7228    4.87857/s 3.30393G/s     2.06012G               44.7863                3.04196      1000k       4.87857M/s [BEST: throughput=  0.23 GB/s doc_throughput=     5 docs/s instructions=  2060105342 cycles=   671647394 branch_miss=  598908 cache_miss= 6987293 cache_ref=  10679941 items=   1000000 avg_time= 204978014 ns]
large_random<rapidjson_insitu>/manual_time             156456501 ns    159876534 ns            5         600.058k            309.31M        8.06712M       12.2148M    490.665M              10.6669           6.72431       3.29938G          1.50514G                    32.7213                     3.06755           6.72431M    599.857k   45.9988M       280.384M/s   7.49718M   11.4192M   496.806M         10.8004    6.39155/s 3.17536G/s     1.50515G               32.7215                3.02966      1000k       6.39155M/s [BEST: throughput=  0.31 GB/s doc_throughput=     6 docs/s instructions=  1505140053 cycles=   490665274 branch_miss=  600058 cache_miss= 8067118 cache_ref=  12214788 items=   1000000 avg_time= 156456500 ns]
large_random<nlohmann_json>/manual_time               1222314985 ns   1225760261 ns            1         4.55469M           37.6325M        46.9249M       60.4646M    4.49691G              97.7615           0.81812       3.67901G          11.9464G                     259.71                     2.65657            818.12k    4.55469M   45.9988M       35.8892M/s   46.9249M   60.4646M   4.49691G         97.7615    0.81812/s 3.67901G/s     11.9464G                259.71                2.65657      1000k        818.12k/s [BEST: throughput=  0.04 GB/s doc_throughput=     0 docs/s instructions= 11946357983 cycles=  4496910317 branch_miss= 4554688 cache_miss=46924868 cache_ref=  60464579 items=   1000000 avg_time=1222314985 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                        89005217 ns     99351147 ns            8         439.216k           1.54416G         15.764M       22.0501M    328.037M              2.38911           11.2462       3.68918G          938.041M                     6.8318                     2.85955           5.89626M     439.43k   137.305M       1.43672G/s    15.809M   22.0844M   328.342M         2.39133    11.2353/s 3.68902G/s     938.041M                6.8318                 2.8569   524.288k       5.89053M/s [BEST: throughput=  1.54 GB/s doc_throughput=    11 docs/s instructions=   938040622 cycles=   328037348 branch_miss=  439216 cache_miss=15763981 cache_ref=  22050111 items=    524288 avg_time=  89005216 ns]
kostya<simdjson_ondemand>/manual_time                   61134746 ns     71448126 ns           11         512.417k            2.2487G        10.1045M       13.9432M    225.252M              1.64052           16.3774       3.68904G          676.617M                    4.92784                     3.00382           8.58647M    512.358k   137.305M       2.09169G/s   10.1272M   13.8481M   225.518M         1.64246    16.3573/s 3.68887G/s     676.617M               4.92784                3.00028   524.288k       8.57594M/s [BEST: throughput=  2.25 GB/s doc_throughput=    16 docs/s instructions=   676617059 cycles=   225252090 branch_miss=  512417 cache_miss=10104532 cache_ref=  13943168 items=    524288 avg_time=  61134745 ns]
kostya<yyjson>/manual_time                             205590397 ns    215995757 ns            3         413.914k           668.443M        11.2853M       16.1301M    559.999M               4.0785           4.86831       2.72625G          984.045M                    7.16686                     1.75723            2.5524M    412.723k   137.305M       636.918M/s   11.2836M   16.1225M   559.983M         4.07838    4.86404/s 2.72378G/s     984.045M               7.16686                1.75728   524.288k       2.55016M/s [BEST: throughput=  0.67 GB/s doc_throughput=     4 docs/s instructions=   984045264 cycles=   559998547 branch_miss=  413914 cache_miss=11285346 cache_ref=  16130056 items=    524288 avg_time= 205590397 ns]
kostya<yyjson_insitu>/manual_time                      151354982 ns    161754909 ns            5         411.744k           907.632M         8.7774M       12.2657M     463.39M              3.37489           6.61034       3.06316G          965.775M                     7.0338                     2.08415           3.46572M    412.124k   137.305M       865.147M/s   8.77759M   12.2523M   463.447M         3.37531    6.60698/s 3.06199G/s     965.775M                7.0338                 2.0839   524.288k       3.46396M/s [BEST: throughput=  0.91 GB/s doc_throughput=     6 docs/s instructions=   965775272 cycles=   463389520 branch_miss=  411744 cache_miss= 8777397 cache_ref=  12265715 items=    524288 avg_time= 151354982 ns]
kostya<sajson>/manual_time                             132034054 ns    142408346 ns            5         357.698k           1041.47M        12.3945M       17.0817M    486.362M               3.5422            7.5851       3.68911G          1.60304G                    11.6751                     3.29599           3.97678M    358.209k   137.305M       991.746M/s   12.4387M   17.1091M   487.066M         3.54733     7.5738/s 3.68894G/s     1.60304G               11.6751                3.29123   524.288k       3.97085M/s [BEST: throughput=  1.04 GB/s doc_throughput=     7 docs/s instructions=  1603042688 cycles=   486362100 branch_miss=  357698 cache_miss=12394487 cache_ref=  17081725 items=    524288 avg_time= 132034054 ns]
kostya<rapidjson>/manual_time                          252856428 ns    263249729 ns            3         967.133k           550.465M         8.1657M       11.9523M    838.867M              6.10952           4.00907       3.36308G          2.29774G                    16.7346                      2.7391           2.10191M     968.25k   137.305M        517.86M/s   7.85189M   11.6424M   842.107M         6.13311    3.95481/s 3.33038G/s     2.29774G               16.7346                2.72856   524.288k       2.07346M/s [BEST: throughput=  0.55 GB/s doc_throughput=     4 docs/s instructions=  2297738819 cycles=   838867418 branch_miss=  967133 cache_miss= 8165703 cache_ref=  11952257 items=    524288 avg_time= 252856427 ns]
kostya<rapidjson_lossless>/manual_time                 266058080 ns    276503274 ns            3         944.738k           522.591M        8.12199M       12.1984M    888.187M              6.46872           3.80606       3.38049G          2.51583G                     18.323                     2.83255           1.99547M    944.309k   137.305M       492.164M/s   7.81739M   11.8197M   890.907M         6.48853    3.75858/s 3.34854G/s     2.51584G                18.323                 2.8239   524.288k       1.97058M/s [BEST: throughput=  0.52 GB/s doc_throughput=     3 docs/s instructions=  2515833739 cycles=   888186930 branch_miss=  944738 cache_miss= 8121988 cache_ref=  12198421 items=    524288 avg_time= 266058080 ns]
kostya<rapidjson_insitu>/manual_time                   229846567 ns    240277298 ns            3         1081.15k           606.358M         11.082M       15.6925M    754.174M              5.49269           4.41614       3.33054G            2.048G                    14.9157                     2.71556           2.31533M    1075.62k   137.305M       569.703M/s   10.7801M   15.3233M   757.195M         5.51469    4.35073/s 3.29435G/s     2.04801G               14.9157                2.70473   524.288k       2.28103M/s [BEST: throughput=  0.61 GB/s doc_throughput=     4 docs/s instructions=  2048003794 cycles=   754174092 branch_miss= 1081148 cache_miss=11081959 cache_ref=  15692524 items=    524288 avg_time= 229846567 ns]
kostya<nlohmann_json>/manual_time                     1598821912 ns   1609087277 ns            1         4.57713M           85.8789M        68.9717M       86.4648M    5.89663G              42.9455          0.625461       3.68811G          15.1309G                    110.199                     2.56602           327.921k    4.57713M   137.305M       81.9005M/s   68.9717M   86.4648M   5.89663G         42.9455   0.625461/s 3.68811G/s     15.1309G               110.199                2.56602   524.288k       327.921k/s [BEST: throughput=  0.09 GB/s doc_throughput=     0 docs/s instructions= 15130852641 cycles=  5896632632 branch_miss= 4577133 cache_miss=68971720 cache_ref=  86464755 items=    524288 avg_time=1598821912 ns]
distinct_user_id<simdjson_dom>/manual_time                262551 ns       293522 ns         2665           3.851k           2.42021G               0         94.82k    963.453k              1.52562          3.83239k       3.69232G          2.85594M                    4.52236                     2.96427           440.724k    4.02194k   631.515k       2.24011G/s     0.9606   94.7765k   968.889k         1.53423   3.80878k/s 3.69029G/s     2.85594M               4.52236                2.94764        115        438.01k/s [BEST: throughput=  2.42 GB/s doc_throughput=  3832 docs/s instructions=     2855937 cycles=      963453 branch_miss=    3851 cache_miss=       0 cache_ref=     94820 items=       115 avg_time=    262551 ns]
distinct_user_id<simdjson_ondemand>/manual_time           184222 ns       214437 ns         3801           1.764k           3.45613G               6        57.204k    674.723k              1.06842          5.47276k        3.6926G          2.10219M                    3.32881                     3.11564           629.368k    1.93238k   631.515k       3.19258G/s    0.83478   57.3148k   679.727k         1.07634   5.42823k/s 3.68971G/s     2.10219M               3.32881                 3.0927        115       624.246k/s [BEST: throughput=  3.46 GB/s doc_throughput=  5472 docs/s instructions=     2102194 cycles=      674723 branch_miss=    1764 cache_miss=       6 cache_ref=     57204 items=       115 avg_time=    184222 ns]
distinct_user_id<yyjson>/manual_time                      600644 ns       634703 ns         1000           6.767k           1.66103G          22.21k        76.869k    1.40375M              2.22282          2.63024k       3.69218G          2.87509M                    4.55268                     2.04815           302.477k    7.58544k   631.515k       1002.69M/s   7.45726k   57.6718k   1.62119M         2.56715   1.66488k/s 2.69909G/s     2.87528M               4.55299                1.77356        115       191.461k/s [BEST: throughput=  1.66 GB/s doc_throughput=  2630 docs/s instructions=     2875087 cycles=     1403746 branch_miss=    6767 cache_miss=   22210 cache_ref=     76869 items=       115 avg_time=    600643 ns]
distinct_user_id<yyjson_insitu>/manual_time               473158 ns       506171 ns         1479           7.209k           1.78894G             438        46.768k     1.3001M               2.0587          2.83277k       3.68288G          2.87457M                    4.55186                     2.21104           325.769k    7.67182k   631.515k       1.24302G/s    87.5882   32.0991k    1.4125M         2.23669   2.11346k/s 2.98526G/s     2.87483M               4.55228                2.03528        115       243.048k/s [BEST: throughput=  1.79 GB/s doc_throughput=  2832 docs/s instructions=     2874570 cycles=     1300098 branch_miss=    7209 cache_miss=     438 cache_ref=     46768 items=       115 avg_time=    473158 ns]
distinct_user_id<sajson>/manual_time                      550663 ns       581791 ns         1269           9.972k            1.1577G               0        47.972k     2.0139M              3.18899          1.83321k        3.6919G          5.98101M                    9.47089                     2.96987            210.82k    10.5132k   631.515k        1093.7M/s   0.880221   47.9076k   2.03163M         3.21707   1.81599k/s 3.68942G/s     5.98101M               9.47089                2.94395        115       208.839k/s [BEST: throughput=  1.16 GB/s doc_throughput=  1833 docs/s instructions=     5981008 cycles=     2013897 branch_miss=    9972 cache_miss=       0 cache_ref=     47972 items=       115 avg_time=    550662 ns]
distinct_user_id<rapidjson>/manual_time                  1624892 ns      1655874 ns          434          26.709k           442.136M          8.974k        55.094k     5.2729M               8.3496            700.12       3.69166G          13.0656M                    20.6894                     2.47789           80.5138k    27.4912k   631.515k       370.646M/s    957.346   35.5674k   5.43718M         8.60974    615.425/s 3.34618G/s     13.0664M               20.6905                2.40315        115       70.7739k/s [BEST: throughput=  0.44 GB/s doc_throughput=   700 docs/s instructions=    13065644 cycles=     5272900 branch_miss=   26709 cache_miss=    8974 cache_ref=     55094 items=       115 avg_time=   1624892 ns]
distinct_user_id<rapidjson_insitu>/manual_time           1013450 ns      1043783 ns          697          24.378k             693.7M              89        45.244k    3.36087M              5.32192           1098.47       3.69181G          9.77661M                    15.4812                     2.90895           126.324k    24.6316k   631.515k       594.267M/s   1.89973k   36.7789k   3.44846M         5.46061    986.729/s 3.40269G/s     9.77695M               15.4817                2.83516        115       113.474k/s [BEST: throughput=  0.69 GB/s doc_throughput=  1098 docs/s instructions=     9776615 cycles=     3360870 branch_miss=   24378 cache_miss=      89 cache_ref=     45244 items=       115 avg_time=   1013449 ns]
distinct_user_id<nlohmann_json>/manual_time              7121365 ns      7154471 ns          100         111.514k            91.596M           2.25k       223.255k     25.438M              40.2809           145.042       3.68957G          66.2243M                    104.866                     2.60336           16.6798k    128.331k   631.515k       84.5708M/s      40.02    408.14k   26.2644M         41.5895    140.423/s 3.68811G/s     64.8954M               102.761                2.47085        115       16.1486k/s [BEST: throughput=  0.09 GB/s doc_throughput=   145 docs/s instructions=    66224310 cycles=    25438019 branch_miss=  111514 cache_miss=    2250 cache_ref=    223255 items=       115 avg_time=   7121365 ns]
find_tweet<simdjson_dom>/manual_time                      250901 ns       280167 ns         2788           3.508k           2.53578G               0        83.887k    919.621k              1.45621          4.01539k       3.69263G           2.7749M                    4.39403                     3.01744           4.01539k     3.6952k   631.515k       2.34413G/s    2.72704   83.8935k   925.759k         1.46593   3.98564k/s 3.68974G/s      2.7749M               4.39403                2.99743          1       3.98564k/s [BEST: throughput=  2.54 GB/s doc_throughput=  4015 docs/s instructions=     2774898 cycles=      919621 branch_miss=    3508 cache_miss=       0 cache_ref=     83887 items=         1 avg_time=    250900 ns]
find_tweet<simdjson_ondemand>/manual_time                 119281 ns       147816 ns         5866              730           5.32295G               0        32.966k    438.175k             0.693847          8.42886k       3.69332G          1.47887M                    2.34178                     3.37506           8.42886k     791.672   631.515k       4.93076G/s   0.720934   33.0513k   440.247k        0.697128   8.38359k/s 3.69085G/s     1.47887M               2.34178                3.35918          1       8.38359k/s [BEST: throughput=  5.32 GB/s doc_throughput=  8428 docs/s instructions=     1478869 cycles=      438175 branch_miss=     730 cache_miss=       0 cache_ref=     32966 items=         1 avg_time=    119280 ns]
find_tweet<yyjson>/manual_time                            664440 ns       695706 ns         1184          10.094k           1.61465G             245        69.768k    1.44437M              2.28716          2.55679k       3.69296G          2.82413M                      4.472                     1.95527           2.55679k    7.58883k   631.515k       906.416M/s    1005.22   41.3604k    1.6496M         2.61212   1.50503k/s 2.48268G/s     2.82461M               4.47275                 1.7123          1       1.50503k/s [BEST: throughput=  1.61 GB/s doc_throughput=  2556 docs/s instructions=     2824134 cycles=     1444374 branch_miss=   10094 cache_miss=     245 cache_ref=     69768 items=         1 avg_time=    664440 ns]
find_tweet<yyjson_insitu>/manual_time                     463370 ns       493604 ns         1511           7.069k           1.83064G             565        38.444k     1.2686M              2.00882           2.8988k       3.67743G          2.82381M                    4.47148                     2.22592            2.8988k    7.47217k   631.515k       1.26928G/s    15.0649   23.3408k   1.37698M         2.18044    2.1581k/s 2.97167G/s     2.82407M                4.4719                2.05091          1        2.1581k/s [BEST: throughput=  1.83 GB/s doc_throughput=  2898 docs/s instructions=     2823809 cycles=     1268602 branch_miss=    7069 cache_miss=     565 cache_ref=     38444 items=         1 avg_time=    463369 ns]
find_tweet<sajson>/manual_time                            538385 ns       568373 ns         1300           9.784k           1.18458G               0        38.295k    1.96825M              3.11671          1.87577k       3.69198G          5.88886M                    9.32498                     2.99193           1.87577k    10.2985k   631.515k       1118.64M/s    1.19385   38.2688k   1.98619M         3.14512   1.85741k/s 3.68916G/s     5.88886M               9.32498                2.96491          1       1.85741k/s [BEST: throughput=  1.18 GB/s doc_throughput=  1875 docs/s instructions=     5888863 cycles=     1968251 branch_miss=    9784 cache_miss=       0 cache_ref=     38295 items=         1 avg_time=    538385 ns]
find_tweet<rapidjson>/manual_time                        1615776 ns      1644687 ns          436          27.138k           445.741M             119        47.622k    5.23014M               8.2819           705.828       3.69158G          12.9978M                    20.5819                     2.48517            705.828    27.3481k   631.515k       372.737M/s    691.867   27.7937k   5.40447M         8.55795    618.898/s 3.34482G/s     12.9987M               20.5834                2.40518          1        618.898/s [BEST: throughput=  0.45 GB/s doc_throughput=   705 docs/s instructions=    12997802 cycles=     5230143 branch_miss=   27138 cache_miss=     119 cache_ref=     47622 items=         1 avg_time=   1615776 ns]
find_tweet<rapidjson_insitu>/manual_time                 1005470 ns      1035505 ns          707            24.4k           698.732M              95        36.087k    3.33657M              5.28343          1.10644k        3.6917G          9.71919M                    15.3903                     2.91293           1.10644k     24.532k   631.515k       598.983M/s   1.68386k   27.3577k    3.4168M         5.41048     994.56/s 3.39821G/s     9.71953M               15.3908                2.84463          1         994.56/s [BEST: throughput=  0.70 GB/s doc_throughput=  1106 docs/s instructions=     9719194 cycles=     3336565 branch_miss=   24400 cache_miss=      95 cache_ref=     36087 items=         1 avg_time=   1005469 ns]
find_tweet<nlohmann_json>/manual_time                    6106112 ns      6143975 ns          117          88.878k           107.993M             252        169.62k    21.5675M              34.1521           171.007       3.68819G          56.6631M                    89.7256                     2.62724            171.007     105.04k   631.515k       98.6323M/s   6.42728k   334.754k   22.5056M         35.6375     163.77/s 3.68575G/s     55.2998M               87.5669                2.45716          1         163.77/s [BEST: throughput=  0.11 GB/s doc_throughput=   171 docs/s instructions=    56663064 cycles=    21567544 branch_miss=   88878 cache_miss=     252 cache_ref=    169620 items=         1 avg_time=   6106111 ns]
top_tweet<simdjson_dom>/manual_time                       257215 ns       285978 ns         2718           3.627k           2.46978G               0         91.87k    944.155k              1.49506          3.91088k       3.69248G          2.80907M                    4.44814                     2.97522           3.91088k    3.79519k   631.515k       2.28658G/s    9.00993   91.9196k   949.211k         1.50307   3.88779k/s 3.69033G/s     2.80907M               4.44814                2.95937          1       3.88779k/s [BEST: throughput=  2.47 GB/s doc_throughput=  3910 docs/s instructions=     2809067 cycles=      944155 branch_miss=    3627 cache_miss=       0 cache_ref=     91870 items=         1 avg_time=    257215 ns]
top_tweet<simdjson_ondemand>/manual_time                  177662 ns       206106 ns         3937           1.529k           3.57902G               0        57.056k    651.626k              1.03185          5.66736k         3.693G          2.10137M                     3.3275                     3.22481           5.66736k     1.6957k   631.515k       3.31046G/s   0.302261    57.196k   655.704k          1.0383   5.62866k/s 3.69073G/s     2.10137M                3.3275                3.20475          1       5.62866k/s [BEST: throughput=  3.58 GB/s doc_throughput=  5667 docs/s instructions=     2101367 cycles=      651626 branch_miss=    1529 cache_miss=       0 cache_ref=     57056 items=         1 avg_time=    177662 ns]
top_tweet<simdjson_ondemand_forward_only>/manual_time     175409 ns       204027 ns         3981           1.484k           3.62257G               0        57.899k    643.861k              1.01955          5.73631k       3.69339G          2.12693M                    3.36799                     3.30341           5.73631k    1.61581k   631.515k       3.35299G/s   0.585531   57.9185k   647.414k         1.02518   5.70097k/s 3.69089G/s     2.12693M               3.36799                3.28527          1       5.70097k/s [BEST: throughput=  3.62 GB/s doc_throughput=  5736 docs/s instructions=     2126934 cycles=      643861 branch_miss=    1484 cache_miss=       0 cache_ref=     57899 items=         1 avg_time=    175408 ns]
top_tweet<yyjson>/manual_time                             669797 ns       700441 ns         1191           9.945k            1.5655G             182        73.829k    1.45257M              2.30014          2.47897k       3.60088G          2.84502M                    4.50507                     1.95861           2.47897k    7.75573k   631.515k       899.167M/s    958.352   46.5686k   1.66911M         2.64302   1.49299k/s 2.49196G/s      2.8455M               4.50583                 1.7048          1       1.49299k/s [BEST: throughput=  1.57 GB/s doc_throughput=  2478 docs/s instructions=     2845020 cycles=     1452573 branch_miss=    9945 cache_miss=     182 cache_ref=     73829 items=         1 avg_time=    669797 ns]
top_tweet<yyjson_insitu>/manual_time                      468092 ns       497104 ns         1493           6.915k           1.82069G             517        40.544k    1.27745M              2.02283          2.88305k       3.68295G          2.84469M                    4.50455                     2.22685           2.88305k     7.5859k   631.515k       1.25647G/s    42.3295   26.9233k   1.39578M          2.2102   2.13633k/s 2.98184G/s     2.84496M               4.50497                2.03826          1       2.13633k/s [BEST: throughput=  1.82 GB/s doc_throughput=  2883 docs/s instructions=     2844694 cycles=     1277450 branch_miss=    6915 cache_miss=     517 cache_ref=     40544 items=         1 avg_time=    468092 ns]
top_tweet<sajson>/manual_time                             542034 ns       570505 ns         1289           9.832k           1.17451G               0        41.305k    1.98509M              3.14338          1.85983k       3.69193G          5.91603M                      9.368                     2.98023           1.85983k    10.3102k   631.515k       1111.11M/s   0.884407   41.2552k   1.99999M         3.16697    1.8449k/s 3.68979G/s     5.91604M                 9.368                2.95803          1        1.8449k/s [BEST: throughput=  1.17 GB/s doc_throughput=  1859 docs/s instructions=     5916035 cycles=     1985091 branch_miss=    9832 cache_miss=       0 cache_ref=     41305 items=         1 avg_time=    542034 ns]
top_tweet<rapidjson>/manual_time                         1622805 ns      1651645 ns          434          26.853k           441.726M         22.353k         51.07k    5.27758M              8.35702           699.471       3.69152G          13.0484M                     20.662                     2.47241            699.471    27.4536k   631.515k       371.123M/s    884.735   30.5376k    5.4342M         8.60502    616.217/s 3.34865G/s     13.0493M               20.6634                2.40132          1        616.217/s [BEST: throughput=  0.44 GB/s doc_throughput=   699 docs/s instructions=    13048361 cycles=     5277584 branch_miss=   26853 cache_miss=   22353 cache_ref=     51070 items=         1 avg_time=   1622805 ns]
top_tweet<rapidjson_insitu>/manual_time                  1009370 ns      1038073 ns          700           24.31k           695.234M          2.475k        39.822k    3.35334M              5.30999           1.1009k       3.69168G          9.76113M                    15.4567                     2.91087            1.1009k    24.5652k   631.515k       596.669M/s   1.81759k   31.7427k   3.43523M         5.43967    990.717/s 3.40334G/s     9.76146M               15.4572                2.84157          1        990.717/s [BEST: throughput=  0.70 GB/s doc_throughput=  1100 docs/s instructions=     9761127 cycles=     3353336 branch_miss=   24310 cache_miss=    2475 cache_ref=     39822 items=         1 avg_time=   1009369 ns]
top_tweet<nlohmann_json>/manual_time                     8633312 ns      8664080 ns           81         181.837k           73.5934M              37       381.237k    31.6619M              50.1365           116.535       3.68971G          78.3609M                    124.084                     2.47492            116.535    184.314k   631.515k         69.76M/s   2.16296k    398.75k   31.8491M         50.4328     115.83/s 3.68909G/s     78.5496M               124.383                2.46631          1         115.83/s [BEST: throughput=  0.07 GB/s doc_throughput=   116 docs/s instructions=    78360859 cycles=    31661939 branch_miss=  181837 cache_miss=      37 cache_ref=    381237 items=         1 avg_time=   8633312 ns]
