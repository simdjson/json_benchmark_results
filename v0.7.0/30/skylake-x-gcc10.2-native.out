run_benchmark: v0.8.0~8 /home/jkeiser/simdjson_benchmark_results/v0.7.0/30/skylake-x-gcc10.2-native.json -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native
git reset --hard v0.8.0~8
HEAD is now at 92372412 Merge pull request #1387 from simdjson/jkeiser/ondemand-scalar-order
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- git Version: v0.2.1-92372412
-- Version: 0.2.1
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 11
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
make[3]: Nothing to be done for '_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build'.
[ 72%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
make[3]: Nothing to be done for 'jsonexamples/generated/CMakeFiles/generated-data.dir/build'.
[ 72%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/g++-10  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/src  -march=native -O3 -DNDEBUG -fPIC   -pthread -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/g++-10 -fPIC -march=native -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.6 -o ../libsimdjson.so.6.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.6.0.0 ../libsimdjson.so.6 ../libsimdjson.so
[ 81%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
make[3]: Nothing to be done for 'dependencies/CMakeFiles/yyjson.dir/build'.
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/g++-10  -DRAPIDJSON_HAS_STDSTRING -DSAJSON_UNSORTED_OBJECT_KEYS -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_COMPETITION_NLOHMANN_JSON -DSIMDJSON_COMPETITION_RAPIDJSON -DSIMDJSON_COMPETITION_SAJSON -DSIMDJSON_COMPETITION_YYJSON -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/rapidjson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/sajson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/json  -march=native -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/g++-10  -march=native -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.6.0.0 ../_deps/google_benchmarks/src/libbenchmark.a ../dependencies/libyyjson.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/30/skylake-x-gcc10.2-native.json --benchmark_out_format=json
2021-01-24 22:55:10
Running benchmark/bench_ondemand
Run on (4 X 3200 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 1024 KiB (x4)
  L3 Unified 8448 KiB (x1)
Load Average: 1.00, 1.00, 1.00
***WARNING*** CPU scaling is enabled, the benchmark real time measurements may be noisy and will incur extra overhead.
simdjson::dom implementation:      haswell
simdjson::ondemand implementation: haswell

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                  326428 ns       397362 ns         2145           4.289k           1.94915G               0        32.866k    1034.81k              1.63861          3.08647k        3.1939G          3.07044M                    4.86202                     2.96716           308.647k    4.42722k   631.515k       1.80176G/s    2.17669   32.9208k    1041.5k         1.64922   3.06346k/s  3.1906G/s     3.07044M               4.86202                2.94808        100       306.346k/s [BEST: throughput=  1.95 GB/s doc_throughput=  3086 docs/s instructions=     3070441 cycles=     1034809 branch_miss=    4289 cache_miss=       0 cache_ref=     32866 items=       100 avg_time=    326428 ns]
partial_tweets<simdjson_ondemand>/manual_time             241033 ns       297694 ns         2901           2.316k           2.63945G               0        13.346k    764.397k              1.21042          4.17955k       3.19484G          2.23641M                    3.54133                     2.92571           417.955k    2.45965k   631.515k        2.4401G/s  0.0434333   13.2371k   769.182k         1.21799   4.14881k/s 3.19119G/s     2.23641M               3.54133                2.90751        100       414.881k/s [BEST: throughput=  2.64 GB/s doc_throughput=  4179 docs/s instructions=     2236405 cycles=      764397 branch_miss=    2316 cache_miss=       0 cache_ref=     13346 items=       100 avg_time=    241033 ns]
partial_tweets<yyjson>/manual_time                        866705 ns       945969 ns          808           9.473k           1.24476G             251        27.825k    1.62022M               2.5656          1.97107k       3.19356G          2.90846M                    4.60553                     1.79511           197.107k    7.62591k   631.515k       694.884M/s    623.087    23.392k   1.79942M         2.84937    1.1538k/s 2.07616G/s     2.90895M                4.6063                 1.6166        100        115.38k/s [BEST: throughput=  1.24 GB/s doc_throughput=  1971 docs/s instructions=     2908461 cycles=     1620217 branch_miss=    9473 cache_miss=     251 cache_ref=     27825 items=       100 avg_time=    866704 ns]
partial_tweets<yyjson_insitu>/manual_time                 587950 ns       649365 ns         1199           7.013k           1.47279G            1.6k        13.615k    1.35554M              2.14649          2.33216k       3.16134G          2.90835M                    4.60536                     2.14553           233.216k     7.4089k   631.515k       1024.34M/s    65.2911   8.51882k   1.47781M          2.3401   1.70083k/s  2.5135G/s     2.90861M               4.60577                1.96819        100       170.083k/s [BEST: throughput=  1.47 GB/s doc_throughput=  2332 docs/s instructions=     2908353 cycles=     1355543 branch_miss=    7013 cache_miss=    1600 cache_ref=     13615 items=       100 avg_time=    587949 ns]
partial_tweets<sajson>/manual_time                        609728 ns       674193 ns         1147           9.995k           1044.64M               0        13.331k    1.93036M              3.05671          1.65418k       3.19316G          6.04845M                    9.57768                     3.13333           165.418k    10.4654k   631.515k       987.751M/s    1.62947   13.4749k   1.94508M         3.08002   1.64007k/s 3.19007G/s     6.04845M               9.57768                3.10962        100       164.007k/s [BEST: throughput=  1.04 GB/s doc_throughput=  1654 docs/s instructions=     6048450 cycles=     1930357 branch_miss=    9995 cache_miss=       0 cache_ref=     13331 items=       100 avg_time=    609728 ns]
partial_tweets<rapidjson>/manual_time                    1897665 ns      1961570 ns          368           25.38k           387.474M          9.956k        22.744k     5.2036M              8.23987           613.562       3.19273G          13.1144M                    20.7666                     2.52026           61.3562k    25.8144k   631.515k       317.369M/s    331.905   11.3127k   5.37355M         8.50899    526.963/s 2.83167G/s     13.1153M                20.768                2.44072        100       52.6963k/s [BEST: throughput=  0.39 GB/s doc_throughput=   613 docs/s instructions=    13114421 cycles=     5203600 branch_miss=   25380 cache_miss=    9956 cache_ref=     22744 items=       100 avg_time=   1897665 ns]
partial_tweets<rapidjson_insitu>/manual_time             1437090 ns      1498903 ns          488          25.611k           496.446M             232        14.323k    4.06159M               6.4315           786.119       3.19289G          9.82257M                     15.554                     2.41841           78.6119k    25.8986k   631.515k       419.083M/s    191.109   9.37996k   4.18781M         6.63137    695.851/s 2.91409G/s     9.82294M               15.5546                 2.3456        100       69.5851k/s [BEST: throughput=  0.50 GB/s doc_throughput=   786 docs/s instructions=     9822573 cycles=     4061589 branch_miss=   25611 cache_miss=     232 cache_ref=     14323 items=       100 avg_time=   1437089 ns]
partial_tweets<nlohmann_json>/manual_time                9066660 ns      9155247 ns           77         136.011k           72.4633M              15        98.482k    27.7957M              44.0143           114.745       3.18942G          70.6664M                      111.9                     2.54235           11.4745k    146.544k   631.515k       66.4257M/s    24.9091   134.476k   28.9124M         45.7825    110.294/s 3.18887G/s     70.9231M               112.306                2.45304        100       11.0294k/s [BEST: throughput=  0.07 GB/s doc_throughput=   114 docs/s instructions=    70666378 cycles=    27795722 branch_miss=  136011 cache_miss=      15 cache_ref=     98482 items=       100 avg_time=   9066659 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                 105004234 ns    111202264 ns            7         851.731k           438.904M        6.76551M       6.89506M    334.158M               7.2645           9.54163       3.18841G          998.581M                    21.7089                     2.98835           9.54163M    851.611k   45.9988M       417.772M/s   6.79961M   6.89496M    334.78M         7.27803    9.52343/s 3.18826G/s     998.581M               21.7089                2.98279      1000k       9.52343M/s [BEST: throughput=  0.44 GB/s doc_throughput=     9 docs/s instructions=   998581029 cycles=   334157903 branch_miss=  851731 cache_miss= 6765508 cache_ref=   6895065 items=   1000000 avg_time= 105004234 ns]
large_random<simdjson_ondemand>/manual_time             66041796 ns     72222324 ns           11          864.31k           696.835M        3.49532M       3.57246M    210.486M               4.5759            15.149       3.18864G          651.959M                    14.1734                      3.0974            15.149M    864.468k   45.9988M       664.244M/s   3.51348M   3.57252M   210.564M         4.57761    15.1419/s 3.18835G/s     651.959M               14.1734                3.09624      1000k       15.1419M/s [BEST: throughput=  0.70 GB/s doc_throughput=    15 docs/s instructions=   651958680 cycles=   210485630 branch_miss=  864310 cache_miss= 3495322 cache_ref=   3572458 items=   1000000 avg_time=  66041796 ns]
large_random<simdjson_ondemand_unordered>/manual_time   70781502 ns     76997563 ns           10         863.344k           650.314M           3.51M       3.57222M     225.54M              4.90317           14.1376        3.1886G          651.959M                    14.1734                     2.89066           14.1376M    863.579k   45.9988M       619.764M/s    3.5191M   3.57232M   225.684M          4.9063     14.128/s 3.18846G/s     651.959M               14.1734                2.88881      1000k        14.128M/s [BEST: throughput=  0.65 GB/s doc_throughput=    14 docs/s instructions=   651958685 cycles=   225539685 branch_miss=  863344 cache_miss= 3510000 cache_ref=   3572224 items=   1000000 avg_time=  70781501 ns]
large_random<yyjson>/manual_time                       158092390 ns    164300533 ns            4         658.502k           291.068M        4.20743M       4.32244M    363.822M              7.90938           6.32773       2.30216G           942.15M                    20.4821                     2.58959           6.32773M    661.666k   45.9988M       277.482M/s   4.20351M   4.32257M   364.062M         7.91459    6.32542/s 2.30284G/s      942.15M               20.4821                2.58788      1000k       6.32542M/s [BEST: throughput=  0.29 GB/s doc_throughput=     6 docs/s instructions=   942149626 cycles=   363821616 branch_miss=  658502 cache_miss= 4207433 cache_ref=   4322442 items=   1000000 avg_time= 158092389 ns]
large_random<yyjson_insitu>/manual_time                131920240 ns    138156387 ns            5         658.662k           349.075M        3.48162M       3.60204M    320.649M              6.97082            7.5888       2.43334G          936.029M                     20.349                     2.91917            7.5888M     661.21k   45.9988M       332.533M/s   3.48273M   3.60426M   321.123M         6.98113    7.58034/s 2.43422G/s     936.029M                20.349                2.91486      1000k       7.58034M/s [BEST: throughput=  0.35 GB/s doc_throughput=     7 docs/s instructions=   936028955 cycles=   320649371 branch_miss=  658662 cache_miss= 3481618 cache_ref=   3602042 items=   1000000 avg_time= 131920240 ns]
large_random<sajson>/manual_time                       104679290 ns    110897260 ns            7         594.134k           439.901M        5.41349M       5.57702M    333.437M              7.24881           9.56333       3.18876G          1066.99M                    23.1961                     3.19998           9.56333M    594.382k   45.9988M       419.069M/s   5.46379M   5.57677M    333.78M         7.25627    9.55299/s 3.18859G/s     1066.99M               23.1961                 3.1967      1000k       9.55299M/s [BEST: throughput=  0.44 GB/s doc_throughput=     9 docs/s instructions=  1066991832 cycles=   333436536 branch_miss=  594134 cache_miss= 5413491 cache_ref=   5577021 items=   1000000 avg_time= 104679289 ns]
large_random<rapidjson>/manual_time                    208329626 ns    214545119 ns            4          593.32k           231.512M        4.35433M       4.88752M    565.461M               12.293             5.033       2.84597G          1.66512G                    36.1993                     2.94471             5.033M    594.611k   45.9988M       210.569M/s   4.07218M    4.6543M   571.659M         12.4277    4.80009/s 2.74401G/s     1.66513G               36.1995                2.91281      1000k       4.80009M/s [BEST: throughput=  0.23 GB/s doc_throughput=     5 docs/s instructions=  1665122107 cycles=   565461331 branch_miss=  593320 cache_miss= 4354325 cache_ref=   4887524 items=   1000000 avg_time= 208329626 ns]
large_random<rapidjson_lossless>/manual_time           241896839 ns    248130381 ns            3         600.108k           196.564M        4.36378M       4.88691M    678.112M               14.742           4.27324       2.89773G          2.04909G                    44.5466                     3.02175           4.27324M    592.217k   45.9988M       181.349M/s   4.10471M   4.68541M   681.327M         14.8118    4.13399/s  2.8166G/s      2.0491G               44.5468                3.00751      1000k       4.13399M/s [BEST: throughput=  0.20 GB/s doc_throughput=     4 docs/s instructions=  2049087609 cycles=   678112355 branch_miss=  600108 cache_miss= 4363781 cache_ref=   4886907 items=   1000000 avg_time= 241896839 ns]
large_random<rapidjson_insitu>/manual_time             189612227 ns    195840113 ns            4         603.756k           255.476M        5.05819M       5.59394M    506.027M              11.0009           5.55397       2.81045G          1.49712G                     32.547                     2.95858           5.55397M    603.915k   45.9988M       231.356M/s   4.77713M   5.35811M   511.988M         11.1305    5.27392/s 2.70019G/s     1.49713G               32.5472                2.92415      1000k       5.27392M/s [BEST: throughput=  0.26 GB/s doc_throughput=     5 docs/s instructions=  1497122030 cycles=   506026636 branch_miss=  603756 cache_miss= 5058186 cache_ref=   5593941 items=   1000000 avg_time= 189612226 ns]
large_random<nlohmann_json>/manual_time               1441271522 ns   1447463913 ns            1         4.49925M           31.9154M        30.3974M        30.897M    4.58173G              99.6055          0.693832       3.17895G          11.9244G                    259.232                     2.60259           693.832k    4.49925M   45.9988M       30.4369M/s   30.3974M    30.897M   4.58173G         99.6055   0.693832/s 3.17895G/s     11.9244G               259.232                2.60259      1000k       693.832k/s [BEST: throughput=  0.03 GB/s doc_throughput=     0 docs/s instructions= 11924362114 cycles=  4581733102 branch_miss= 4499253 cache_miss=30397371 cache_ref=  30897034 items=   1000000 avg_time=1441271522 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                       101500029 ns    121036529 ns            7         447.758k           1.35602G        10.2096M       10.3148M    322.853M              2.35136           9.87597       3.18849G           972.65M                    7.08386                     3.01267           5.17785M    447.917k   137.305M       1.25985G/s   10.2403M   10.3148M   323.617M         2.35692    9.85221/s 3.18835G/s      972.65M               7.08386                3.00556   524.288k        5.1654M/s [BEST: throughput=  1.36 GB/s doc_throughput=     9 docs/s instructions=   972650011 cycles=   322852877 branch_miss=  447758 cache_miss=10209629 cache_ref=  10314845 items=    524288 avg_time= 101500028 ns]
kostya<simdjson_ondemand>/manual_time                   70241410 ns     89749866 ns           10         471.236k           1.95653G         6.4307M        6.4712M    223.768M              1.62971           14.2495       3.18858G          700.216M                    5.09972                     3.12921           7.47086M    471.762k   137.305M       1.82051G/s   6.43844M   6.47124M   223.955M         1.63108    14.2366/s 3.18837G/s     700.216M               5.09972                3.12659   524.288k       7.46409M/s [BEST: throughput=  1.96 GB/s doc_throughput=    14 docs/s instructions=   700216390 cycles=   223767551 branch_miss=  471236 cache_miss= 6430698 cache_ref=   6471203 items=    524288 avg_time=  70241410 ns]
kostya<yyjson>/manual_time                             266161116 ns    285744193 ns            3         412.034k           516.011M         8.4915M       8.63183M    615.925M              4.48582           3.75814       2.31473G          983.521M                    7.16304                     1.59682           1.97035M    413.338k   137.305M       491.974M/s   8.48976M   8.63212M   616.298M         4.48853    3.75712/s 2.31551G/s     983.521M               7.16304                1.59585   524.288k       1.96981M/s [BEST: throughput=  0.52 GB/s doc_throughput=     3 docs/s instructions=   983520655 cycles=   615924937 branch_miss=  412034 cache_miss= 8491504 cache_ref=   8631831 items=    524288 avg_time= 266161116 ns]
kostya<yyjson_insitu>/manual_time                      188130763 ns    207732505 ns            4         412.962k           730.025M        6.34992M       6.49209M    487.925M              3.55359           5.31681       2.59421G          965.251M                    7.02998                     1.97828           2.78754M    414.483k   137.305M       696.028M/s   6.35261M   6.49162M   488.022M         3.55429    5.31545/s 2.59406G/s     965.251M               7.02998                1.97788   524.288k       2.78683M/s [BEST: throughput=  0.73 GB/s doc_throughput=     5 docs/s instructions=   965251291 cycles=   487925470 branch_miss=  412962 cache_miss= 6349919 cache_ref=   6492095 items=    524288 avg_time= 188130762 ns]
kostya<sajson>/manual_time                             156832292 ns    176401675 ns            4          370.49k           876.229M        8.48465M       8.54525M    499.693M              3.63929           6.38162       3.18885G          1.60357G                    11.6789                      3.2091           3.34581M    370.616k   137.305M       834.932M/s   8.49713M   8.54498M   500.072M         3.64205    6.37624/s 3.18858G/s     1.60357G               11.6789                3.20667   524.288k       3.34299M/s [BEST: throughput=  0.88 GB/s doc_throughput=     6 docs/s instructions=  1603566988 cycles=   499693116 branch_miss=  370490 cache_miss= 8484649 cache_ref=   8545247 items=    524288 avg_time= 156832292 ns]
kostya<rapidjson>/manual_time                          295038189 ns    314551449 ns            2         1.10237M           471.034M        5.24258M       5.75533M     832.12M              6.06038           3.43057       2.85465G          2.29089G                    16.6847                     2.75307           1.79861M    1.12888M   137.305M       443.821M/s   5.11923M     5.652M   834.908M         6.08068    3.38939/s 2.82983G/s     2.29089G               16.6847                2.74388   524.288k       1.77702M/s [BEST: throughput=  0.47 GB/s doc_throughput=     3 docs/s instructions=  2290888681 cycles=   832120023 branch_miss= 1102373 cache_miss= 5242576 cache_ref=   5755335 items=    524288 avg_time= 295038189 ns]
kostya<rapidjson_lossless>/manual_time                 319534670 ns    339173119 ns            2         991.193k           434.279M        5.24441M       5.74281M    910.931M              6.63436           3.16288       2.88117G          2.50794G                    18.2654                     2.75316           1.65826M    975.393k   137.305M       409.797M/s   5.11886M   5.63969M   913.138M         6.65044    3.12955/s 2.85771G/s     2.50794G               18.2654                 2.7465   524.288k       1.64079M/s [BEST: throughput=  0.43 GB/s doc_throughput=     3 docs/s instructions=  2507935180 cycles=   910931018 branch_miss=  991193 cache_miss= 5244406 cache_ref=   5742807 items=    524288 avg_time= 319534669 ns]
kostya<rapidjson_insitu>/manual_time                   285200902 ns    304796775 ns            2          1012.5k           487.218M        7.37304M       7.88165M      801.7M              5.83883           3.54844       2.84478G          2.04115G                    14.8658                     2.54603            1.8604M     1012.4k   137.305M        459.13M/s   7.25258M   7.77572M   803.985M         5.85547     3.5063/s 2.81901G/s     2.04116G               14.8658                 2.5388   524.288k       1.83831M/s [BEST: throughput=  0.49 GB/s doc_throughput=     3 docs/s instructions=  2041153657 cycles=   801700175 branch_miss= 1012505 cache_miss= 7373041 cache_ref=   7881655 items=    524288 avg_time= 285200902 ns]
kostya<nlohmann_json>/manual_time                     1924411574 ns   1943962289 ns            1          3.7747M           71.3491M        45.9643M       46.5444M     6.1375G              44.6998          0.519639       3.18929G          15.1099G                    110.046                     2.46189           272.441k     3.7747M   137.305M       68.0438M/s   45.9643M   46.5444M    6.1375G         44.6998   0.519639/s 3.18929G/s     15.1099G               110.046                2.46189   524.288k       272.441k/s [BEST: throughput=  0.07 GB/s doc_throughput=     0 docs/s instructions= 15109885788 cycles=  6137503991 branch_miss= 3774704 cache_miss=45964313 cache_ref=  46544422 items=    524288 avg_time=1924411574 ns]
distinct_user_id<simdjson_dom>/manual_time                326439 ns       404868 ns         2144           4.256k           1.95025G               0        33.662k    1034.18k              1.63763          3.08821k       3.19378G          3.01136M                    4.76848                     2.91182           355.144k    4.43177k   631.515k        1.8017G/s   0.181437   33.6383k   1041.49k         1.64919   3.06336k/s 3.19044G/s     3.01137M               4.76848                2.89141        115       352.286k/s [BEST: throughput=  1.95 GB/s doc_throughput=  3088 docs/s instructions=     3011365 cycles=     1034185 branch_miss=    4256 cache_miss=       0 cache_ref=     33662 items=       115 avg_time=    326439 ns]
distinct_user_id<simdjson_ondemand>/manual_time           224759 ns       287614 ns         3114           2.128k           2.82752G               0         8.188k    713.361k               1.1296          4.47736k       3.19397G          2.19251M                    3.47183                     3.07349           514.896k    2.23085k   631.515k       2.61678G/s  0.0199101   8.38011k   717.221k         1.13572   4.44922k/s 3.19107G/s     2.19251M               3.47183                3.05695        115        511.66k/s [BEST: throughput=  2.83 GB/s doc_throughput=  4477 docs/s instructions=     2192511 cycles=      713361 branch_miss=    2128 cache_miss=       0 cache_ref=      8188 items=       115 avg_time=    224758 ns]
distinct_user_id<yyjson>/manual_time                      762082 ns       851353 ns         1000           6.586k           1.32444G          7.123k        27.205k    1.52261M              2.41105          2.09724k       3.19328G           2.8752M                    4.55285                     1.88833           241.182k    7.51269k   631.515k       790.281M/s   2.22186k   24.4791k    1.7244M         2.73058   1.31219k/s 2.26275G/s     2.87547M                4.5533                1.66752        115       150.902k/s [BEST: throughput=  1.32 GB/s doc_throughput=  2097 docs/s instructions=     2875196 cycles=     1522614 branch_miss=    6586 cache_miss=    7123 cache_ref=     27205 items=       115 avg_time=    762082 ns]
distinct_user_id<yyjson_insitu>/manual_time               585419 ns       656070 ns         1205            7.16k           1.49284G            1.2k        13.043k    1.34564M              2.13082          2.36391k       3.18098G          2.87458M                    4.55188                     2.13621            271.85k    7.44315k   631.515k       1028.77M/s     62.405    8.5424k   1.46993M         2.32762   1.70818k/s  2.5109G/s     2.87484M               4.55229                1.95577        115       196.441k/s [BEST: throughput=  1.49 GB/s doc_throughput=  2363 docs/s instructions=     2874578 cycles=     1345642 branch_miss=    7160 cache_miss=    1200 cache_ref=     13043 items=       115 avg_time=    585418 ns]
distinct_user_id<sajson>/manual_time                      603723 ns       676244 ns         1156           9.986k           1055.87M               0        12.844k    1.90991M              3.02433          1.67196k       3.19329G          5.98102M                     9.4709                     3.13157           192.275k    10.4793k   631.515k       997.576M/s    1.54844   12.9228k   1.92598M         3.04978   1.65639k/s 3.19017G/s     5.98102M                9.4709                3.10544        115       190.485k/s [BEST: throughput=  1.06 GB/s doc_throughput=  1671 docs/s instructions=     5981016 cycles=     1909908 branch_miss=    9986 cache_miss=       0 cache_ref=     12844 items=       115 avg_time=    603723 ns]
distinct_user_id<rapidjson>/manual_time                  1890467 ns      1962667 ns          373          25.865k           388.249M             833        22.943k    5.19352M               8.2239           614.789       3.19292G           13.057M                    20.6757                      2.5141           70.7007k    25.8303k   631.515k       318.577M/s    618.357   12.1117k   5.36483M         8.49518     528.97/s 2.83783G/s     13.0578M                20.677                2.43397        115       60.8315k/s [BEST: throughput=  0.39 GB/s doc_throughput=   614 docs/s instructions=    13057016 cycles=     5193518 branch_miss=   25865 cache_miss=     833 cache_ref=     22943 items=       115 avg_time=   1890466 ns]
distinct_user_id<rapidjson_insitu>/manual_time           1408890 ns      1479636 ns          524          24.999k           497.731M          6.532k        14.021k    4.05103M              6.41479           788.154       3.19284G          9.77531M                    15.4791                     2.41304           90.6377k     25.825k   631.515k       427.471M/s   1.39817k   11.1192k   4.16635M         6.59739    709.778/s 2.95719G/s     9.77562M               15.4796                2.34633        115       81.6245k/s [BEST: throughput=  0.50 GB/s doc_throughput=   788 docs/s instructions=     9775312 cycles=     4051034 branch_miss=   24999 cache_miss=    6532 cache_ref=     14021 items=       115 avg_time=   1408890 ns]
distinct_user_id<nlohmann_json>/manual_time              8525539 ns      8617382 ns           85          112.86k           78.7022M              16        98.251k    25.5914M              40.5238           124.624       3.18932G          66.1925M                    104.815                     2.58651           14.3318k    145.482k   631.515k       70.6418M/s    25.0706   108.362k    27.188M         43.0521    117.295/s 3.18901G/s     64.9324M                102.82                2.38827        115       13.4889k/s [BEST: throughput=  0.08 GB/s doc_throughput=   124 docs/s instructions=    66192459 cycles=    25591410 branch_miss=  112860 cache_miss=      16 cache_ref=     98251 items=       115 avg_time=   8525539 ns]
find_tweet<simdjson_dom>/manual_time                      311084 ns       386975 ns         2250           4.216k           2.04415G               0        30.075k    986.762k              1.56253           3.2369k       3.19405G          2.93033M                    4.64015                     2.96964            3.2369k    4.27483k   631.515k       1.89063G/s   0.991111   29.7951k   992.606k         1.57179   3.21456k/s 3.19079G/s     2.93033M               4.64015                2.95215          1       3.21456k/s [BEST: throughput=  2.04 GB/s doc_throughput=  3236 docs/s instructions=     2930326 cycles=      986762 branch_miss=    4216 cache_miss=       0 cache_ref=     30075 items=         1 avg_time=    311084 ns]
find_tweet<simdjson_ondemand>/manual_time                 152390 ns       217663 ns         4593           1.294k           4.17749G               0         7.298k    483.002k             0.764831          6.61503k       3.19507G          1.56921M                    2.48484                     3.24887           6.61503k    1.38041k   631.515k       3.85947G/s  0.0134988   7.32442k   486.366k        0.770158   6.56212k/s 3.19159G/s     1.56921M               2.48484                 3.2264          1       6.56212k/s [BEST: throughput=  4.18 GB/s doc_throughput=  6615 docs/s instructions=     1569211 cycles=      483002 branch_miss=    1294 cache_miss=       0 cache_ref=      7298 items=         1 avg_time=    152389 ns]
find_tweet<yyjson>/manual_time                            845652 ns       931037 ns          889           9.317k           1.27257G             166        27.133k    1.58482M              2.50954          2.01511k       3.19357G          2.82413M                      4.472                       1.782           2.01511k    7.44115k   631.515k       712.184M/s    305.214   19.6147k   1.73751M         2.75134   1.18252k/s 2.05464G/s     2.82462M               4.47277                1.62567          1       1.18252k/s [BEST: throughput=  1.27 GB/s doc_throughput=  2015 docs/s instructions=     2824133 cycles=     1584815 branch_miss=    9317 cache_miss=     166 cache_ref=     27133 items=         1 avg_time=    845651 ns]
find_tweet<yyjson_insitu>/manual_time                     570098 ns       633634 ns         1237           6.795k           1.53047G            1025        12.413k    1.31279M              2.07879          2.42349k       3.18152G          2.82402M                    4.47182                     2.15117           2.42349k    7.20461k   631.515k       1056.41M/s    7.37106   4.59414k   1.42157M         2.25105   1.75408k/s 2.49356G/s     2.82429M               4.47224                1.98673          1       1.75408k/s [BEST: throughput=  1.53 GB/s doc_throughput=  2423 docs/s instructions=     2824024 cycles=     1312785 branch_miss=    6795 cache_miss=    1025 cache_ref=     12413 items=         1 avg_time=    570098 ns]
find_tweet<sajson>/manual_time                            592078 ns       661965 ns         1181           9.818k           1076.13M               1        12.658k    1.87404M              2.96752          1.70405k       3.19345G          5.88887M                    9.32499                     3.14235           1.70405k    10.2978k   631.515k        1017.2M/s    2.46655   12.6174k   1.88883M         2.99095   1.68897k/s 3.19017G/s     5.88887M               9.32499                3.11774          1       1.68897k/s [BEST: throughput=  1.08 GB/s doc_throughput=  1704 docs/s instructions=     5888871 cycles=     1874035 branch_miss=    9818 cache_miss=       1 cache_ref=     12658 items=         1 avg_time=    592078 ns]
find_tweet<rapidjson>/manual_time                        1874087 ns      1941139 ns          377          25.435k           391.988M          7.472k         20.96k    5.14402M              8.14552            620.71       3.19294G          12.9889M                    20.5678                     2.52504             620.71    25.7646k   631.515k       321.362M/s    454.058   8.29634k   5.31396M         8.41462    533.593/s 2.83549G/s     12.9896M               20.5689                2.44442          1        533.593/s [BEST: throughput=  0.39 GB/s doc_throughput=   620 docs/s instructions=    12988862 cycles=     5144016 branch_miss=   25435 cache_miss=    7472 cache_ref=     20960 items=         1 avg_time=   1874087 ns]
find_tweet<rapidjson_insitu>/manual_time                 1397371 ns      1463381 ns          532          25.305k           501.465M              29        13.114k      4.021M              6.36722           794.066       3.19294G          9.71768M                    15.3879                     2.41673            794.066    25.9047k   631.515k       430.995M/s   1.23295k   7.80418k   4.12945M         6.53895    715.629/s 2.95515G/s       9.718M               15.3884                2.35334          1        715.629/s [BEST: throughput=  0.50 GB/s doc_throughput=   794 docs/s instructions=     9717682 cycles=     4020997 branch_miss=   25305 cache_miss=      29 cache_ref=     13114 items=         1 avg_time=   1397371 ns]
find_tweet<nlohmann_json>/manual_time                    7831428 ns      7920631 ns          100          90.045k           92.6987M              15        75.845k    21.7242M              34.4001           146.788       3.18884G          56.5538M                    89.5526                     2.60327            146.788     176.87k   631.515k       76.9029M/s      42.44   83.5206k   24.9753M         39.5482    127.691/s 3.18911G/s     55.2454M               87.4807                  2.212          1        127.691/s [BEST: throughput=  0.09 GB/s doc_throughput=   146 docs/s instructions=    56553801 cycles=    21724157 branch_miss=   90045 cache_miss=      15 cache_ref=     75845 items=         1 avg_time=   7831428 ns]
top_tweet<simdjson_dom>/manual_time                       318589 ns       399012 ns         2196           4.122k           2.00086G               1        31.364k    1008.01k              1.59618          3.16835k       3.19373G          2.96449M                    4.69426                     2.94094           3.16835k    4.34031k   631.515k       1.84609G/s    1.34107   31.5473k   1016.41k         1.60948   3.13884k/s 3.19034G/s      2.9645M               4.69426                2.91664          1       3.13884k/s [BEST: throughput=  2.00 GB/s doc_throughput=  3168 docs/s instructions=     2964495 cycles=     1008010 branch_miss=    4122 cache_miss=       1 cache_ref=     31364 items=         1 avg_time=    318589 ns]
top_tweet<simdjson_ondemand>/manual_time                  224392 ns       290860 ns         3120           2.249k           2.83578G               2         8.014k    711.318k              1.12637          4.49045k       3.19414G          2.19171M                    3.47056                      3.0812           4.49045k    2.35824k   631.515k       2.62106G/s   0.323718   8.15631k   716.055k         1.13387    4.4565k/s  3.1911G/s     2.19171M               3.47056                3.06082          1        4.4565k/s [BEST: throughput=  2.84 GB/s doc_throughput=  4490 docs/s instructions=     2191712 cycles=      711318 branch_miss=    2249 cache_miss=       2 cache_ref=      8014 items=         1 avg_time=    224391 ns]
top_tweet<simdjson_ondemand_forward_only>/manual_time     217115 ns       284267 ns         3226           2.158k           2.93526G               2         8.548k    687.263k              1.08828          4.64796k       3.19437G          2.21895M                    3.51369                     3.22867           4.64796k    2.29689k   631.515k       2.70891G/s    2.36423   8.57758k   692.819k         1.09707   4.60586k/s 3.19103G/s     2.21895M               3.51369                3.20278          1       4.60586k/s [BEST: throughput=  2.94 GB/s doc_throughput=  4647 docs/s instructions=     2218946 cycles=      687263 branch_miss=    2158 cache_miss=       2 cache_ref=      8548 items=         1 avg_time=    217114 ns]
top_tweet<yyjson>/manual_time                             857093 ns       946989 ns          890           9.908k           1.25087G             238        27.374k    1.61245M               2.5533          1.98074k       3.19385G          2.84505M                    4.50511                     1.76443           1.98074k     7.6339k   631.515k       702.677M/s    379.925   22.3793k    1.7735M         2.80833   1.16674k/s 2.06921G/s     2.84571M               4.50616                1.60457          1       1.16674k/s [BEST: throughput=  1.25 GB/s doc_throughput=  1980 docs/s instructions=     2845046 cycles=     1612448 branch_miss=    9908 cache_miss=     238 cache_ref=     27374 items=         1 avg_time=    857092 ns]
top_tweet<yyjson_insitu>/manual_time                      579820 ns       650357 ns         1217           7.125k           1.50556G          1.363k        12.762k      1.334M              2.11238          2.38405k       3.18032G          2.84491M                     4.5049                     2.13261           2.38405k    7.34892k   631.515k        1038.7M/s    47.3073   7.38789k   1.45221M         2.29957   1.72467k/s  2.5046G/s     2.84517M               4.50531                 1.9592          1       1.72467k/s [BEST: throughput=  1.51 GB/s doc_throughput=  2384 docs/s instructions=     2844909 cycles=     1334002 branch_miss=    7125 cache_miss=    1363 cache_ref=     12762 items=         1 avg_time=    579819 ns]
top_tweet<sajson>/manual_time                             595839 ns       669881 ns         1173           9.966k           1068.74M               0        12.597k    1.88691M              2.98791          1.69235k       3.19331G          5.91604M                    9.36802                      3.1353           1.69235k    10.3777k   631.515k       1010.78M/s    1.79795   12.6884k   1.90088M         3.01004   1.67831k/s 3.19026G/s     5.91604M               9.36802                3.11226          1       1.67831k/s [BEST: throughput=  1.07 GB/s doc_throughput=  1692 docs/s instructions=     5916043 cycles=     1886912 branch_miss=    9966 cache_miss=       0 cache_ref=     12597 items=         1 avg_time=    595838 ns]
top_tweet<rapidjson>/manual_time                         1890277 ns      1963130 ns          375          25.903k           388.374M             758        22.058k    5.19179M              8.22116           614.988       3.19289G          13.0389M                     20.647                     2.51145            614.988    25.9029k   631.515k       318.609M/s    554.224   10.5839k    5.3653M         8.49592    529.023/s 2.83837G/s     13.0398M               20.6485                 2.4304          1        529.023/s [BEST: throughput=  0.39 GB/s doc_throughput=   614 docs/s instructions=    13038918 cycles=     5191789 branch_miss=   25903 cache_miss=     758 cache_ref=     22058 items=         1 avg_time=   1890276 ns]
top_tweet<rapidjson_insitu>/manual_time                  1402917 ns      1474662 ns          528          25.148k           500.999M             140         13.95k    4.02459M              6.37291           793.329       3.19282G          9.75904M                    15.4534                     2.42486            793.329    25.7514k   631.515k       429.291M/s   1.32338k   9.59109k   4.14709M         6.56689      712.8/s 2.95605G/s     9.75956M               15.4542                2.35335          1          712.8/s [BEST: throughput=  0.50 GB/s doc_throughput=   793 docs/s instructions=     9759041 cycles=     4024586 branch_miss=   25148 cache_miss=     140 cache_ref=     13950 items=         1 avg_time=   1402917 ns]
top_tweet<nlohmann_json>/manual_time                    10125801 ns     10217710 ns           69         176.928k           62.8908M              13       164.356k    32.0159M               50.697           99.5873       3.18838G          77.9777M                    123.477                     2.43559            99.5873    183.651k   631.515k       59.4777M/s    49.8551   164.576k   32.2901M         51.1312    98.7576/s 3.18889G/s     78.3911M               124.132                2.42771          1        98.7576/s [BEST: throughput=  0.06 GB/s doc_throughput=    99 docs/s instructions=    77977691 cycles=    32015903 branch_miss=  176928 cache_miss=      13 cache_ref=    164356 items=         1 avg_time=  10125800 ns]
