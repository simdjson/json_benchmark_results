run_benchmark: v0.8.0~30 /home/jkeiser/simdjson_benchmark_results/v0.7.0/8/skylake-gcc10.2-native.json -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native
git reset --hard v0.8.0~30
HEAD is now at 85001c55 Fixing UTF-8 validation under PPC64 (#1346)
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- git Version: v0.2.1-85001c55
-- Version: 0.2.1
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 11
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
make[3]: Nothing to be done for '_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build'.
[ 72%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
make[3]: Nothing to be done for 'jsonexamples/generated/CMakeFiles/generated-data.dir/build'.
[ 81%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/g++-10  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/src  -march=native -O3 -DNDEBUG -fPIC   -pthread -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/g++-10 -fPIC -march=native -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.6 -o ../libsimdjson.so.6.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.6.0.0 ../libsimdjson.so.6 ../libsimdjson.so
[ 90%] Built target simdjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/g++-10  -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/g++-10  -march=native -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.6.0.0 ../_deps/google_benchmarks/src/libbenchmark.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/8/skylake-gcc10.2-native.json --benchmark_out_format=json
2021-01-24 21:20:37
Running benchmark/bench_ondemand
Run on (4 X 4000 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 256 KiB (x4)
  L3 Unified 8192 KiB (x1)
Load Average: 1.00, 1.00, 1.00
On Demand implementation: haswell
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Benchmark                         Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
PartialTweets<OnDemand>      180197 ns       180197 ns         3884           1.667k           3.69272G               0        54.878k    631.497k             0.999971          5.84741k       3.69262G          2.14256M                    3.39273                     3.39283           584.741k    1.79396k   631.515k        3.2639G/s  0.0149331   54.8374k   635.838k         1.00685   5.54949k/s 3.52858G/s     2.14256M               3.39273                3.36966        100       554.949k/s [best: throughput=  3.69 GB/s doc_throughput=  5847 docs/s instructions=     2142559 cycles=      631497 branch_miss=    1667 cache_miss=       0 cache_ref=     54878 items=       100 avg_time=    172280 ns]
PartialTweets<Dom>           265938 ns       265940 ns         2632           3.659k           2.46242G               0        87.793k    946.926k              1.49945          3.89923k       3.69228G          2.91501M                    4.61589                     3.07839           389.923k    3.79999k   631.515k       2.21157G/s   0.230623    87.556k   951.577k         1.50682   3.76025k/s 3.57817G/s     2.91501M               4.61589                3.06334        100       376.025k/s [best: throughput=  2.46 GB/s doc_throughput=  3899 docs/s instructions=     2915006 cycles=      946926 branch_miss=    3659 cache_miss=       0 cache_ref=     87793 items=       100 avg_time=    257844 ns]
Creating a source file spanning 44921 KB 
LargeRandom<Dom>           91399098 ns     91399634 ns            8         862.097k            504.57M         10.947M       15.2234M    336.311M              7.31131           10.9692       3.68906G          972.675M                    21.1457                     2.89219           10.9692M    863.845k   45.9988M       479.957M/s   10.9239M    15.223M   337.115M         7.32879     10.941/s 3.68836G/s     972.675M               21.1457                2.88529      1000k        10.941M/s [best: throughput=  0.50 GB/s doc_throughput=    10 docs/s instructions=   972674942 cycles=   336311189 branch_miss=  862097 cache_miss=10947048 cache_ref=  15223429 items=   1000000 avg_time=  91385000 ns]
LargeRandomSum<Dom>        91492414 ns     91492956 ns            8         863.076k           504.197M        10.4836M       14.3673M     336.52M              7.31584           10.9611       3.68863G          977.675M                    21.2544                     2.90525           10.9611M     862.95k   45.9988M       479.467M/s   10.3233M   14.3643M   337.463M         7.33634    10.9298/s  3.6884G/s     977.675M               21.2544                2.89714      1000k       10.9298M/s [best: throughput=  0.50 GB/s doc_throughput=    10 docs/s instructions=   977674957 cycles=   336519637 branch_miss=  863076 cache_miss=10483629 cache_ref=  14367282 items=   1000000 avg_time=  91478607 ns]
LargeRandom<OnDemand>      60879319 ns     60879699 ns           11         861.616k           756.856M        5.59342M       7.88962M     224.21M              4.87425           16.4538       3.68911G          659.053M                    14.3276                     2.93945           16.4538M    860.961k   45.9988M       720.566M/s   5.60602M   7.89048M    224.53M         4.88122    16.4258/s 3.68809G/s     659.053M               14.3276                2.93525      1000k       16.4258M/s [best: throughput=  0.76 GB/s doc_throughput=    16 docs/s instructions=   659052569 cycles=   224209683 branch_miss=  861616 cache_miss= 5593417 cache_ref=   7889623 items=   1000000 avg_time=  60865864 ns]
LargeRandomSum<OnDemand>   59154098 ns     59154449 ns           12         859.628k           778.717M         4.9973M       7.04487M    217.921M              4.73755           16.9291       3.68921G          633.052M                    13.7624                     2.90496           16.9291M    859.558k   45.9988M       741.582M/s   4.99953M    7.0446M   218.169M         4.74294    16.9049/s 3.68813G/s     633.052M               13.7624                2.90165      1000k       16.9049M/s [best: throughput=  0.78 GB/s doc_throughput=    16 docs/s instructions=   633052274 cycles=   217921426 branch_miss=  859628 cache_miss= 4997303 cache_ref=   7044870 items=   1000000 avg_time=  59141262 ns]
Creating a source file spanning 134087 KB 
Kostya<Dom>                85970649 ns     85971208 ns            8         444.031k           1.59909G        15.6597M       22.0808M    316.728M              2.30675           11.6463       3.68869G          937.516M                    6.82798                     2.96001           6.10599M    444.175k   137.305M       1.48742G/s   15.6871M   22.0351M   317.075M         2.30927    11.6318/s 3.68815G/s     937.516M               6.82798                2.95677   524.288k       6.09841M/s [best: throughput=  1.60 GB/s doc_throughput=    11 docs/s instructions=   937516410 cycles=   316727758 branch_miss=  444031 cache_miss=15659746 cache_ref=  22080781 items=    524288 avg_time=  85955777 ns]
KostyaSum<Dom>             86136473 ns     86135525 ns            8         444.418k           1.59732G        15.4013M       21.5754M    317.117M              2.30958           11.6333       3.68913G          940.138M                    6.84708                     2.96464           6.09922M    444.626k   137.305M       1.48458G/s   15.4506M   21.5805M    317.69M         2.31376    11.6096/s 3.68826G/s     940.138M               6.84708                2.95929   524.288k       6.08678M/s [best: throughput=  1.60 GB/s doc_throughput=    11 docs/s instructions=   940137862 cycles=   317117359 branch_miss=  444418 cache_miss=15401251 cache_ref=  21575360 items=    524288 avg_time=  86121365 ns]
Kostya<OnDemand>           63372919 ns     63373316 ns           11         461.774k           2.17136G        9.99281M       13.9258M    233.278M              1.69898           15.8141        3.6891G          673.996M                    4.90875                     2.88924           8.29117M    461.766k   137.305M       2.01781G/s   10.0346M   13.9269M   233.723M         1.70222    15.7795/s 3.68804G/s     673.996M               4.90875                2.88374   524.288k       8.27301M/s [best: throughput=  2.17 GB/s doc_throughput=    15 docs/s instructions=   673995610 cycles=   233278191 branch_miss=  461774 cache_miss= 9992810 cache_ref=  13925816 items=    524288 avg_time=  63359607 ns]
KostyaSum<OnDemand>        63613917 ns     63614316 ns           11         481.096k           2.16181G        9.65508M       13.4905M    234.309M              1.70649           15.7446        3.6891G          671.898M                    4.89347                     2.86757           8.25469M      481.6k   137.305M       2.01016G/s     9.706M    13.425M   234.608M         1.70867    15.7197/s 3.68798G/s     671.898M               4.89347                2.86391   524.288k       8.24167M/s [best: throughput=  2.16 GB/s doc_throughput=    15 docs/s instructions=   671898461 cycles=   234309387 branch_miss=  481096 cache_miss= 9655084 cache_ref=  13490472 items=    524288 avg_time=  63600245 ns]
DistinctUserID<Dom>          270987 ns       270989 ns         2582           3.923k            2.4183G               0        88.788k    964.135k               1.5267          3.82936k       3.69202G          2.86553M                    4.53755                     2.97213           440.377k    4.14133k   631.515k       2.17036G/s   0.321844   88.9896k   969.931k         1.53588   3.69019k/s 3.57923G/s     2.86553M               4.53756                2.95437        115       424.372k/s [best: throughput=  2.42 GB/s doc_throughput=  3829 docs/s instructions=     2865534 cycles=      964135 branch_miss=    3923 cache_miss=       0 cache_ref=     88788 items=       115 avg_time=    262830 ns]
On Demand implementation: haswell
DistinctUserID<OnDemand>     194496 ns       194497 ns         3596           1.733k           3.41103G               0        53.466k    683.627k              1.08252          5.40135k       3.69251G          2.11008M                     3.3413                      3.0866           621.155k    1.85818k   631.515k       3.02392G/s   0.141268   53.4783k   688.586k         1.09037   5.14147k/s 3.54034G/s     2.11008M                3.3413                3.06437        115       591.269k/s [best: throughput=  3.41 GB/s doc_throughput=  5401 docs/s instructions=     2110083 cycles=      683627 branch_miss=    1733 cache_miss=       0 cache_ref=     53466 items=       115 avg_time=    186580 ns]
FindTweet<Dom>               257354 ns       257356 ns         2720           3.517k           2.54762G               0        78.557k    915.166k              1.44916          4.03415k       3.69191G          2.77501M                    4.39422                     3.03225           4.03415k    3.62296k   631.515k       2.28533G/s    1.10735   78.4909k   919.835k         1.45655   3.88566k/s 3.57417G/s     2.77501M               4.39422                3.01686          1       3.88566k/s [best: throughput=  2.55 GB/s doc_throughput=  4034 docs/s instructions=     2775014 cycles=      915166 branch_miss=    3517 cache_miss=       0 cache_ref=     78557 items=         1 avg_time=    249253 ns]
On Demand implementation: haswell
FindTweet<OnDemand>          129825 ns       129826 ns         5386              694           5.19671G               0        28.031k    448.769k             0.710623          8.22896k        3.6929G          1.48067M                    2.34464                     3.29941           8.22896k     727.241   631.515k       4.53025G/s     1.671m   28.0742k    450.13k        0.712778   7.70262k/s 3.46718G/s     1.48067M               2.34464                3.28943          1       7.70262k/s [best: throughput=  5.20 GB/s doc_throughput=  8228 docs/s instructions=     1480673 cycles=      448769 branch_miss=     694 cache_miss=       0 cache_ref=     28031 items=         1 avg_time=    121943 ns]
