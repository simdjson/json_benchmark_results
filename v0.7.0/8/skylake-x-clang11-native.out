run_benchmark: v0.8.0~30 /home/jkeiser/simdjson_benchmark_results/v0.7.0/8/skylake-x-clang11-native.json -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native
git reset --hard v0.8.0~30
HEAD is now at 85001c55 Fixing UTF-8 validation under PPC64 (#1346)
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- git Version: v0.2.1-85001c55
-- Version: 0.2.1
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES -- failed to compile
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 11
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
make[3]: Nothing to be done for '_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build'.
[ 72%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
make[3]: Nothing to be done for 'jsonexamples/generated/CMakeFiles/generated-data.dir/build'.
[ 81%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/clang++-11  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/src  -march=native -O3 -DNDEBUG -fPIC   -pthread -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/clang++-11 -fPIC -march=native -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.6 -o ../libsimdjson.so.6.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.6.0.0 ../libsimdjson.so.6 ../libsimdjson.so
[ 90%] Built target simdjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/clang++-11  -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/clang++-11  -march=native -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.6.0.0 ../_deps/google_benchmarks/src/libbenchmark.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/8/skylake-x-clang11-native.json --benchmark_out_format=json
2021-01-24 21:21:30
Running benchmark/bench_ondemand
Run on (4 X 3200 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 1024 KiB (x4)
  L3 Unified 8448 KiB (x1)
Load Average: 1.00, 1.02, 1.00
***WARNING*** CPU scaling is enabled, the benchmark real time measurements may be noisy and will incur extra overhead.
On Demand implementation: haswell
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Benchmark                         Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
PartialTweets<OnDemand>      205107 ns       205105 ns         3404           2.066k           3.34452G               1         5.665k    602.966k             0.954793          5.29602k       3.19332G          1.81542M                    2.87471                     3.01082           529.602k    2.18499k   631.515k       2.86753G/s    1.16774   5.75375k   607.727k        0.962332   4.87555k/s   2.963G/s     1.81542M               2.87471                2.98723        100       487.555k/s [best: throughput=  3.34 GB/s doc_throughput=  5296 docs/s instructions=     1815421 cycles=      602966 branch_miss=    2066 cache_miss=       1 cache_ref=      5665 items=       100 avg_time=    190468 ns]
PartialTweets<Dom>           341353 ns       341347 ns         2050            3.85k            1.9562G               0        31.531k    1030.89k              1.63241          3.09762k       3.19332G          2.93688M                    4.65054                     2.84887           309.762k    3.94803k   631.515k       1.72301G/s   0.190244   31.6602k   1036.94k         1.64199   2.92957k/s 3.03779G/s     2.93688M               4.65054                2.83226        100       292.957k/s [best: throughput=  1.96 GB/s doc_throughput=  3097 docs/s instructions=     2936884 cycles=     1030893 branch_miss=    3850 cache_miss=       0 cache_ref=     31531 items=       100 avg_time=    325074 ns]
Creating a source file spanning 44921 KB 
LargeRandom<Dom>          100832731 ns    100831866 ns            7         917.561k           459.586M        6.77064M       6.89525M    319.171M              6.93869           9.99128       3.18893G          1019.45M                    22.1626                     3.19406           9.99128M    901.189k   45.9988M       435.059M/s   6.80244M   6.89561M   321.412M         6.98739     9.9175/s  3.1876G/s     1019.45M               22.1626                 3.1718      1000k        9.9175M/s [best: throughput=  0.46 GB/s doc_throughput=     9 docs/s instructions=  1019451750 cycles=   319171407 branch_miss=  917561 cache_miss= 6770643 cache_ref=   6895249 items=   1000000 avg_time= 100804909 ns]
LargeRandomSum<Dom>       102170111 ns    102167174 ns            7         898.724k           450.678M        6.40241M        6.5198M    325.501M              7.07631           9.79761       3.18914G          1012.45M                    22.0104                     3.11044           9.79761M    898.607k   45.9988M       429.373M/s   6.43439M   6.52003M   325.693M         7.08047    9.78788/s 3.18784G/s     1012.45M               22.0104                3.10861      1000k       9.78788M/s [best: throughput=  0.45 GB/s doc_throughput=     9 docs/s instructions=  1012451748 cycles=   325501369 branch_miss=  898724 cache_miss= 6402413 cache_ref=   6519800 items=   1000000 avg_time= 102142409 ns]
LargeRandom<OnDemand>      68603597 ns     68601132 ns           10         916.896k           671.509M        3.47572M       3.57289M    218.448M                4.749           14.5984         3.189G          607.908M                    13.2157                     2.78285           14.5984M    920.626k   45.9988M       639.463M/s   3.49013M   3.57293M    218.65M         4.75339     14.577/s 3.18727G/s     607.908M               13.2157                2.78028      1000k        14.577M/s [best: throughput=  0.67 GB/s doc_throughput=    14 docs/s instructions=   607907830 cycles=   218448307 branch_miss=  916896 cache_miss= 3475717 cache_ref=   3572887 items=   1000000 avg_time=  68576254 ns]
LargeRandomSum<OnDemand>   68971739 ns     68971128 ns           10         902.433k            667.59M        3.13306M       3.19657M    219.743M              4.77714           14.5132       3.18917G          606.908M                     13.194                      2.7619           14.5132M    905.265k   45.9988M       636.032M/s    3.1277M    3.1967M   219.858M         4.77965    14.4988/s 3.18769G/s     606.908M                13.194                2.76045      1000k       14.4988M/s [best: throughput=  0.67 GB/s doc_throughput=    14 docs/s instructions=   606907638 cycles=   219742791 branch_miss=  902433 cache_miss= 3133057 cache_ref=   3196565 items=   1000000 avg_time=  68944293 ns]
Creating a source file spanning 134087 KB 
Kostya<Dom>               109258169 ns    109257268 ns            6         1020.19k           1.25888G        10.1655M       10.3165M    347.725M               2.5325           9.16853       3.18812G          971.471M                    7.07528                     2.79379           4.80695M    1019.92k   137.305M        1.1704G/s   10.1976M   10.3168M   348.238M         2.53624    9.15271/s 3.18732G/s     971.471M               7.07528                2.78968   524.288k       4.79866M/s [best: throughput=  1.26 GB/s doc_throughput=     9 docs/s instructions=   971471362 cycles=   347724668 branch_miss= 1020193 cache_miss=10165476 cache_ref=  10316462 items=    524288 avg_time= 109227625 ns]
KostyaSum<Dom>            108117202 ns    108113961 ns            6         1020.51k           1.27185G        9.97646M       10.1221M    344.102M              2.50612           9.26294        3.1874G          968.326M                    7.05237                     2.81406           4.85645M     1020.8k   137.305M       1.18278G/s   10.0246M   10.1219M   344.585M         2.50963     9.2495/s 3.18724G/s     968.326M               7.05237                2.81012   524.288k        4.8494M/s [best: throughput=  1.27 GB/s doc_throughput=     9 docs/s instructions=   968325636 cycles=   344102350 branch_miss= 1020508 cache_miss= 9976464 cache_ref=  10122085 items=    524288 avg_time= 108087118 ns]
Kostya<OnDemand>           66661199 ns     66660635 ns           11           453.9k           2.06423G        6.30184M       6.47111M     212.12M              1.54488           15.0339         3.189G          616.241M                    4.48812                     2.90515            7.8821M    455.059k   137.305M        1.9183G/s   6.37201M   6.47126M   212.432M         1.54716    15.0014/s 3.18677G/s     616.241M               4.48812                2.90088   524.288k       7.86503M/s [best: throughput=  2.06 GB/s doc_throughput=    15 docs/s instructions=   616241412 cycles=   212120413 branch_miss=  453900 cache_miss= 6301839 cache_ref=   6471106 items=    524288 avg_time=  66632789 ns]
KostyaSum<OnDemand>        67699335 ns     67696169 ns           10         454.503k           2.03152G        6.14075M       6.27317M    215.523M              1.56967           14.7957       3.18881G          620.959M                    4.52248                     2.88117           7.75718M    455.864k   137.305M       1.88896G/s   6.17175M   6.27335M   215.685M         1.57084    14.7719/s 3.18607G/s     620.959M               4.52248                2.87901   524.288k       7.74472M/s [best: throughput=  2.03 GB/s doc_throughput=    14 docs/s instructions=   620959315 cycles=   215523246 branch_miss=  454503 cache_miss= 6140749 cache_ref=   6273167 items=    524288 avg_time=  67669920 ns]
DistinctUserID<Dom>          342907 ns       342899 ns         2043           4.048k            1.9597G               1        31.149k    1029.04k              1.62948          3.10317k       3.19328G          2.87669M                    4.55523                     2.79552           356.865k     4.2086k   631.515k       1.71521G/s   0.435634   31.3489k   1035.86k         1.64027   2.91631k/s 3.02088G/s     2.87669M               4.55523                2.77712        115       335.375k/s [best: throughput=  1.96 GB/s doc_throughput=  3103 docs/s instructions=     2876694 cycles=     1029039 branch_miss=    4048 cache_miss=       1 cache_ref=     31149 items=       115 avg_time=    324693 ns]
On Demand implementation: haswell
DistinctUserID<OnDemand>     201030 ns       201027 ns         3439           2.183k            3.4732G               0         3.289k    580.657k             0.919467          5.49979k       3.19349G          1.81907M                    2.88049                     3.13278           632.476k    2.43568k   631.515k        2.9257G/s   2.90782m   3.45471k    588.51k        0.931902   4.97446k/s 2.92752G/s     1.81907M               2.88049                3.09098        115       572.063k/s [best: throughput=  3.47 GB/s doc_throughput=  5499 docs/s instructions=     1819070 cycles=      580657 branch_miss=    2183 cache_miss=       0 cache_ref=      3289 items=       115 avg_time=    184396 ns]
FindTweet<Dom>               322504 ns       322498 ns         2149           3.548k           2.09252G               0        26.261k    963.658k              1.52595          3.31349k       3.19307G          2.78235M                    4.40583                     2.88728           3.31349k    3.69038k   631.515k       1.82371G/s   0.257794    26.405k   969.475k         1.53516    3.1008k/s 3.00614G/s     2.78235M               4.40583                2.86995          1        3.1008k/s [best: throughput=  2.09 GB/s doc_throughput=  3313 docs/s instructions=     2782348 cycles=      963658 branch_miss=    3548 cache_miss=       0 cache_ref=     26261 items=         1 avg_time=    303878 ns]
On Demand implementation: haswell
FindTweet<OnDemand>          148701 ns       148699 ns         4699             1024           4.82293G               1         2.667k    418.313k             0.662396          7.63709k       3.19469G          1.31308M                    2.07926                       3.139           7.63709k     1084.54   631.515k       3.95528G/s   0.636306   2.65393k   421.172k        0.666923   6.72501k/s 2.83239G/s     1.31308M               2.07926                3.11769          1       6.72501k/s [best: throughput=  4.82 GB/s doc_throughput=  7637 docs/s instructions=     1313084 cycles=      418313 branch_miss=    1024 cache_miss=       1 cache_ref=      2667 items=         1 avg_time=    131933 ns]
