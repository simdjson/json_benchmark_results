run_benchmark: v0.8.0~30 /home/jkeiser/simdjson_benchmark_results/v0.7.0/8/skylake-x-gcc10.2-native.json -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native
git reset --hard v0.8.0~30
HEAD is now at 85001c55 Fixing UTF-8 validation under PPC64 (#1346)
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- git Version: v0.2.1-85001c55
-- Version: 0.2.1
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 11
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
make[3]: Nothing to be done for '_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build'.
[ 72%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
make[3]: Nothing to be done for 'jsonexamples/generated/CMakeFiles/generated-data.dir/build'.
[ 81%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/g++-10  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/src  -march=native -O3 -DNDEBUG -fPIC   -pthread -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/g++-10 -fPIC -march=native -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.6 -o ../libsimdjson.so.6.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.6.0.0 ../libsimdjson.so.6 ../libsimdjson.so
[ 90%] Built target simdjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/g++-10  -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/g++-10  -march=native -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.6.0.0 ../_deps/google_benchmarks/src/libbenchmark.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/8/skylake-x-gcc10.2-native.json --benchmark_out_format=json
2021-01-24 21:31:06
Running benchmark/bench_ondemand
Run on (4 X 3200 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 1024 KiB (x4)
  L3 Unified 8448 KiB (x1)
Load Average: 1.02, 1.01, 1.00
***WARNING*** CPU scaling is enabled, the benchmark real time measurements may be noisy and will incur extra overhead.
On Demand implementation: haswell
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Benchmark                         Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
PartialTweets<OnDemand>      229340 ns       229339 ns         3049           2.273k           2.96124G               3         8.273k    681.059k              1.07845          4.68911k       3.19356G          2.23696M                    3.54222                     3.28454           468.911k    2.43003k   631.515k       2.56452G/s    2.25582   8.33848k   685.899k         1.08612   4.36037k/s 2.99077G/s     2.23696M               3.54222                3.26136        100       436.037k/s [best: throughput=  2.96 GB/s doc_throughput=  4689 docs/s instructions=     2236963 cycles=      681059 branch_miss=    2273 cache_miss=       3 cache_ref=      8273 items=       100 avg_time=    214929 ns]
PartialTweets<Dom>           340585 ns       340582 ns         2060           3.766k           1.96132G               5        32.399k    1028.23k               1.6282          3.10573k       3.19343G          3.07043M                    4.86201                     2.98612           310.573k    3.88916k   631.515k       1.72688G/s    5.03883   32.4018k   1034.67k         1.63839   2.93615k/s 3.03793G/s     3.07043M               4.86201                2.96756        100       293.615k/s [best: throughput=  1.96 GB/s doc_throughput=  3105 docs/s instructions=     3070434 cycles=     1028235 branch_miss=    3766 cache_miss=       5 cache_ref=     32399 items=       100 avg_time=    324310 ns]
Creating a source file spanning 44921 KB 
LargeRandom<Dom>           99598328 ns     99593640 ns            7         848.113k           462.564M        6.76619M       6.89557M    317.044M              6.89243            10.056       3.18819G          989.581M                    21.5132                     3.12128            10.056M    848.338k   45.9988M       440.468M/s   6.80964M   6.89558M   317.431M         6.90085    10.0408/s 3.18726G/s     989.581M               21.5132                3.11747      1000k       10.0408M/s [best: throughput=  0.46 GB/s doc_throughput=    10 docs/s instructions=   989581014 cycles=   317043558 branch_miss=  848113 cache_miss= 6766185 cache_ref=   6895568 items=   1000000 avg_time=  99570842 ns]
LargeRandomSum<Dom>        98881454 ns     98880642 ns            7         846.252k           466.043M        6.47078M       6.51869M    314.679M              6.84102           10.1316       3.18821G          994.581M                    21.6219                     3.16062           10.1316M    846.688k   45.9988M       443.644M/s   6.43745M   6.51903M   315.166M         6.85161    10.1132/s 3.18733G/s     994.581M               21.6219                3.15574      1000k       10.1132M/s [best: throughput=  0.47 GB/s doc_throughput=    10 docs/s instructions=   994581028 cycles=   314678718 branch_miss=  846252 cache_miss= 6470776 cache_ref=   6518686 items=   1000000 avg_time=  98853765 ns]
LargeRandom<OnDemand>      69339152 ns     69336896 ns           10         895.793k           665.447M        3.44396M       3.57324M    220.412M               4.7917           14.4666       3.18862G          666.959M                    14.4995                     3.02596           14.4666M    896.514k   45.9988M       632.677M/s   3.48955M   3.57315M   220.996M          4.8044    14.4223/s 3.18729G/s     666.959M               14.4995                3.01796      1000k       14.4223M/s [best: throughput=  0.67 GB/s doc_throughput=    14 docs/s instructions=   666958641 cycles=   220412190 branch_miss=  895793 cache_miss= 3443960 cache_ref=   3573237 items=   1000000 avg_time=  69311938 ns]
LargeRandomSum<OnDemand>   67897746 ns     67894420 ns           10         862.019k            679.06M        3.09044M       3.19641M    216.004M              4.69586           14.7626       3.18877G          640.958M                    13.9342                     2.96734           14.7626M     862.26k   45.9988M       646.119M/s   3.10857M   3.19654M   216.399M         4.70445    14.7288/s 3.18728G/s     640.958M               13.9342                2.96193      1000k       14.7288M/s [best: throughput=  0.68 GB/s doc_throughput=    14 docs/s instructions=   640958346 cycles=   216003987 branch_miss=  862019 cache_miss= 3090444 cache_ref=   3196412 items=   1000000 avg_time=  67870883 ns]
Creating a source file spanning 134087 KB 
Kostya<Dom>                98702297 ns     98697943 ns            7         448.989k           1.39397G         10.183M        10.314M    313.956M              2.28656           10.1523       3.18739G          972.126M                    7.08005                     3.09638           5.32275M    449.522k   137.305M       1.29562G/s   10.2155M   10.3142M   314.577M         2.29108    10.1319/s 3.18727G/s     972.126M               7.08005                3.09026   524.288k       5.31205M/s [best: throughput=  1.39 GB/s doc_throughput=    10 docs/s instructions=   972125798 cycles=   313955736 branch_miss=  448989 cache_miss=10183023 cache_ref=  10314045 items=    524288 avg_time=  98673073 ns]
KostyaSum<Dom>             98079255 ns     98078437 ns            7         450.203k           1.40394G        9.99378M       10.1179M    311.812M              2.27094            10.225       3.18828G          974.747M                    7.09914                     3.12608           5.36085M     450.38k   137.305M       1.30381G/s   10.0267M   10.1177M   312.607M         2.27674    10.1959/s 3.18732G/s     974.747M               7.09914                3.11812   524.288k        5.3456M/s [best: throughput=  1.40 GB/s doc_throughput=    10 docs/s instructions=   974747252 cycles=   311811830 branch_miss=  450203 cache_miss= 9993785 cache_ref=  10117937 items=    524288 avg_time=  98049440 ns]
Kostya<OnDemand>           69353047 ns     69352437 ns           10          460.87k           1.98188G        6.38243M       6.47107M    220.897M               1.6088           14.4341       3.18845G          697.595M                    5.08062                     3.15801           7.56764M    461.174k   137.305M       1.84385G/s   6.39467M   6.47113M   221.014M         1.60966    14.4191/s 3.18682G/s     697.595M               5.08062                3.15634   524.288k       7.55976M/s [best: throughput=  1.98 GB/s doc_throughput=    14 docs/s instructions=   697594941 cycles=   220896958 branch_miss=  460870 cache_miss= 6382430 cache_ref=   6471074 items=    524288 avg_time=  69323635 ns]
KostyaSum<OnDemand>        69765829 ns     69762836 ns           10         460.878k           1.97197G        6.17142M       6.27335M    222.012M              1.61693            14.362       3.18854G          695.498M                    5.06535                      3.1327           7.52982M    460.998k   137.305M         1.833G/s    6.1903M    6.2735M   222.329M         1.61923    14.3343/s 3.18693G/s     695.498M               5.06535                3.12824   524.288k       7.51529M/s [best: throughput=  1.97 GB/s doc_throughput=    14 docs/s instructions=   695497791 cycles=   222012424 branch_miss=  460878 cache_miss= 6171420 cache_ref=   6273346 items=    524288 avg_time=  69735770 ns]
DistinctUserID<Dom>          339802 ns       339789 ns         2056           4.125k           1.97981G               4        31.655k    1018.62k              1.61298          3.13502k        3.1934G          3.02096M                    4.78367                     2.96574           360.528k    4.25202k   631.515k       1.73091G/s    3.31177   31.1421k   1025.02k         1.62312     2.943k/s 3.01664G/s     3.02096M               4.78367                2.94721        115       338.445k/s [best: throughput=  1.98 GB/s doc_throughput=  3135 docs/s instructions=     3020962 cycles=     1018621 branch_miss=    4125 cache_miss=       4 cache_ref=     31655 items=       115 avg_time=    321322 ns]
On Demand implementation: haswell
DistinctUserID<OnDemand>     224749 ns       224744 ns         3138           2.067k           3.05279G               0         2.216k    660.617k              1.04608          4.83407k       3.19347G           2.2004M                    3.48432                     3.33083           555.918k    2.19874k   631.515k       2.61695G/s   8.92288m   2.31821k   665.253k         1.05342   4.44951k/s 2.96005G/s      2.2004M               3.48432                3.30761        115       511.694k/s [best: throughput=  3.05 GB/s doc_throughput=  4834 docs/s instructions=     2200400 cycles=      660617 branch_miss=    2067 cache_miss=       0 cache_ref=      2216 items=       115 avg_time=    208481 ns]
FindTweet<Dom>               323265 ns       323258 ns         2167           3.655k           2.09004G               0        25.847k    964.876k              1.52788          3.30956k       3.19331G          2.93044M                    4.64034                     3.03712           3.30956k    3.75356k   631.515k       1.81942G/s    0.45593    25.759k   970.099k         1.53615    3.0935k/s   3.001G/s     2.93044M               4.64034                3.02077          1        3.0935k/s [best: throughput=  2.09 GB/s doc_throughput=  3309 docs/s instructions=     2930442 cycles=      964876 branch_miss=    3655 cache_miss=       0 cache_ref=     25847 items=         1 avg_time=    304069 ns]
On Demand implementation: haswell
FindTweet<OnDemand>          188759 ns       188755 ns         3737           3.219k           3.70186G               0         1.798k    544.806k             0.862697          5.86187k       3.19358G           1.5712M                    2.48798                     2.88396           5.86187k    3.35253k   631.515k       3.11591G/s    4.8167m    1.7836k   548.255k        0.868159   5.29787k/s 2.90458G/s      1.5712M               2.48798                2.86582          1       5.29787k/s [best: throughput=  3.70 GB/s doc_throughput=  5861 docs/s instructions=     1571199 cycles=      544806 branch_miss=    3219 cache_miss=       0 cache_ref=      1798 items=         1 avg_time=    171799 ns]
