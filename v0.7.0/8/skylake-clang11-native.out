run_benchmark: v0.8.0~30 /home/jkeiser/simdjson_benchmark_results/v0.7.0/8/skylake-clang11-native.json -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native
git reset --hard v0.8.0~30
HEAD is now at 85001c55 Fixing UTF-8 validation under PPC64 (#1346)
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- git Version: v0.2.1-85001c55
-- Version: 0.2.1
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES -- failed to compile
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 11
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
make[3]: Nothing to be done for '_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build'.
[ 72%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
make[3]: Nothing to be done for 'jsonexamples/generated/CMakeFiles/generated-data.dir/build'.
[ 81%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/clang++-11  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/src  -march=native -O3 -DNDEBUG -fPIC   -pthread -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/clang++-11 -fPIC -march=native -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.6 -o ../libsimdjson.so.6.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.6.0.0 ../libsimdjson.so.6 ../libsimdjson.so
[ 90%] Built target simdjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/clang++-11  -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/clang++-11  -march=native -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.6.0.0 ../_deps/google_benchmarks/src/libbenchmark.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/8/skylake-clang11-native.json --benchmark_out_format=json
2021-01-24 21:12:06
Running benchmark/bench_ondemand
Run on (4 X 4000 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 256 KiB (x4)
  L3 Unified 8192 KiB (x1)
Load Average: 1.03, 1.02, 0.99
On Demand implementation: haswell
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Benchmark                         Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
PartialTweets<OnDemand>      171442 ns       171442 ns         4081            1.73k           3.89041G               0        54.862k    599.442k             0.949213          6.16044k       3.69283G          1.88126M                    2.97897                     3.13836           616.044k    1.84967k   631.515k       3.43057G/s  0.0225435   54.8006k   603.301k        0.955324   5.83287k/s 3.51898G/s     1.88126M               2.97897                3.11828        100       583.287k/s [best: throughput=  3.89 GB/s doc_throughput=  6160 docs/s instructions=     1881263 cycles=      599442 branch_miss=    1730 cache_miss=       0 cache_ref=     54862 items=       100 avg_time=    163461 ns]
PartialTweets<Dom>           280739 ns       280737 ns         2487           3.628k           2.33467G               0        87.739k    998.682k              1.58141          3.69694k       3.69207G          2.99807M                    4.74742                     3.00202           369.694k    3.81695k   631.515k         2.095G/s   0.348613   87.7771k   1005.55k         1.59229   3.56205k/s 3.58183G/s     2.99807M               4.74742                2.98151        100       356.205k/s [best: throughput=  2.33 GB/s doc_throughput=  3696 docs/s instructions=     2998067 cycles=      998682 branch_miss=    3628 cache_miss=       0 cache_ref=     87739 items=       100 avg_time=    272479 ns]
Creating a source file spanning 44921 KB 
LargeRandom<Dom>           88891496 ns     88892056 ns            8         929.627k           518.381M         10.893M       15.2111M    327.303M              7.11548           11.2695       3.68853G          1034.69M                    22.4938                     3.16125           11.2695M    932.079k   45.9988M       493.496M/s   10.9769M    15.214M    327.85M         7.12736    11.2496/s 3.68818G/s     1034.69M               22.4938                3.15597      1000k       11.2496M/s [best: throughput=  0.52 GB/s doc_throughput=    11 docs/s instructions=  1034686016 cycles=   327303282 branch_miss=  929627 cache_miss=10893025 cache_ref=  15211148 items=   1000000 avg_time=  88877319 ns]
LargeRandomSum<Dom>        88164828 ns     88164314 ns            8          936.33k           522.558M        10.2952M        14.373M    324.742M               7.0598           11.3603       3.68916G          1027.69M                    22.3416                     3.16462           11.3603M    934.893k   45.9988M       497.569M/s   10.3574M   14.3726M   325.186M         7.06945    11.3425/s 3.68841G/s     1027.69M               22.3416                 3.1603      1000k       11.3425M/s [best: throughput=  0.52 GB/s doc_throughput=    11 docs/s instructions=  1027686009 cycles=   324742332 branch_miss=  936330 cache_miss=10295206 cache_ref=  14372958 items=   1000000 avg_time=  88150194 ns]
LargeRandom<OnDemand>      62571270 ns     62570880 ns           11         897.094k            735.78M        5.56181M       7.89825M    230.641M              5.01406           15.9956       3.68925G          623.142M                    13.5469                     2.70179           15.9956M    897.007k   45.9988M       701.091M/s   5.63284M    7.8993M   230.769M         5.01686    15.9819/s 3.68812G/s     623.142M               13.5469                2.70028      1000k       15.9819M/s [best: throughput=  0.74 GB/s doc_throughput=    15 docs/s instructions=   623142096 cycles=   230640679 branch_miss=  897094 cache_miss= 5561815 cache_ref=   7898252 items=   1000000 avg_time=  62558036 ns]
LargeRandomSum<OnDemand>   62867889 ns     62867410 ns           11         912.934k           732.379M         4.9485M       7.03646M    231.709M              5.03728           15.9217        3.6892G          622.142M                    13.5252                     2.68502           15.9217M    912.872k   45.9988M       697.784M/s   5.00781M   7.03652M   231.873M         5.04085    15.9065/s 3.68828G/s     622.142M               13.5252                2.68312      1000k       15.9065M/s [best: throughput=  0.73 GB/s doc_throughput=    15 docs/s instructions=   622141905 cycles=   231708766 branch_miss=  912934 cache_miss= 4948499 cache_ref=   7036458 items=   1000000 avg_time=  62855468 ns]
Creating a source file spanning 134087 KB 
Kostya<Dom>                94026731 ns     94025689 ns            7          1044.2k           1.46193G        15.8738M        22.277M    346.446M              2.52319           10.6473       3.68873G          985.272M                    7.17579                     2.84394           5.58227M     1043.8k   137.305M          1.36G/s   15.9032M   22.2089M   346.776M         2.52559    10.6354/s 3.68809G/s     985.272M               7.17579                2.84124   524.288k       5.57601M/s [best: throughput=  1.46 GB/s doc_throughput=    10 docs/s instructions=   985271657 cycles=   346446312 branch_miss= 1044198 cache_miss=15873771 cache_ref=  22277023 items=    524288 avg_time=  94011502 ns]
KostyaSum<Dom>             92657007 ns     92656073 ns            8         1042.84k           1.48405G        15.4788M       21.6518M    341.306M              2.48575           10.8084       3.68898G          982.126M                    7.15288                     2.87755           5.66672M    1045.11k   137.305M       1.38011G/s   15.5177M   21.6539M   341.742M         2.48892    10.7926/s 3.68828G/s     982.126M               7.15288                2.87388   524.288k       5.65843M/s [best: throughput=  1.48 GB/s doc_throughput=    10 docs/s instructions=   982125929 cycles=   341306482 branch_miss= 1042841 cache_miss=15478808 cache_ref=  21651836 items=    524288 avg_time=  92642284 ns]
Kostya<OnDemand>           60230261 ns     60230624 ns           12         491.425k           2.28147G        9.95615M       13.9236M     222.02M              1.61698           16.6161        3.6891G          630.566M                    4.59245                     2.84014           8.71161M    493.375k   137.305M       2.12309G/s    10.015M   13.9243M   222.138M         1.61784    16.6028/s 3.68812G/s     630.566M               4.59245                2.83862   524.288k       8.70467M/s [best: throughput=  2.28 GB/s doc_throughput=    16 docs/s instructions=   630566007 cycles=   222019573 branch_miss=  491425 cache_miss= 9956149 cache_ref=  13923648 items=    524288 avg_time=  60216931 ns]
KostyaSum<OnDemand>        62322733 ns     62322109 ns           11         478.174k           2.20476G        9.65176M       13.4862M     229.74M              1.67321           16.0574       3.68903G           634.76M                    4.62299                     2.76295            8.4187M    479.223k   137.305M       2.05184G/s   9.68705M   13.4866M    229.85M         1.67401    16.0457/s 3.68809G/s      634.76M               4.62299                2.76163   524.288k       8.41255M/s [best: throughput=  2.20 GB/s doc_throughput=    16 docs/s instructions=   634759622 cycles=   229739972 branch_miss=  478174 cache_miss= 9651762 cache_ref=  13486235 items=    524288 avg_time=  62309037 ns]
DistinctUserID<Dom>          285164 ns       285162 ns         2454           4.043k           2.29832G               0        89.395k    1014.53k               1.6065          3.63937k       3.69223G            2.938M                     4.6523                     2.89593           418.527k    4.25492k   631.515k       2.06249G/s   0.265689   89.3353k   1022.15k         1.61857   3.50678k/s 3.58445G/s       2.938M                4.6523                2.87433        115       403.279k/s [best: throughput=  2.30 GB/s doc_throughput=  3639 docs/s instructions=     2937997 cycles=     1014526 branch_miss=    4043 cache_miss=       0 cache_ref=     89395 items=       115 avg_time=    276998 ns]
On Demand implementation: haswell
DistinctUserID<OnDemand>     168952 ns       168951 ns         4132           1.819k           3.95428G               0        53.328k     589.74k              0.93385          6.26158k       3.69271G          1.88556M                    2.98577                     3.19727           720.082k    1.93622k   631.515k       3.48115G/s  0.0525169   53.2862k   594.253k        0.940996   5.91887k/s 3.51731G/s     1.88556M               2.98577                3.17298        115        680.67k/s [best: throughput=  3.95 GB/s doc_throughput=  6261 docs/s instructions=     1885556 cycles=      589740 branch_miss=    1819 cache_miss=       0 cache_ref=     53328 items=       115 avg_time=    161010 ns]
FindTweet<Dom>               271596 ns       271595 ns         2576           3.629k           2.41525G               0        78.842k    965.364k              1.52865          3.82453k       3.69206G          2.84343M                    4.50255                     2.94545           3.82453k    3.82028k   631.515k       2.16552G/s   0.440994   78.8732k   972.088k          1.5393   3.68195k/s 3.57919G/s     2.84343M               4.50256                2.92507          1       3.68195k/s [best: throughput=  2.42 GB/s doc_throughput=  3824 docs/s instructions=     2843431 cycles=      965364 branch_miss=    3629 cache_miss=       0 cache_ref=     78842 items=         1 avg_time=    263413 ns]
On Demand implementation: haswell
FindTweet<OnDemand>          125166 ns       125165 ns         5591           1.119k           5.41265G               0        28.026k    430.924k             0.682365          8.57089k        3.6934G          1.37956M                    2.18452                      3.2014           8.57089k    1.17572k   631.515k       4.69893G/s   0.012699   28.0047k   432.991k        0.685639   7.98942k/s 3.45935G/s     1.37956M               2.18452                3.18611          1       7.98942k/s [best: throughput=  5.41 GB/s doc_throughput=  8570 docs/s instructions=     1379559 cycles=      430924 branch_miss=    1119 cache_miss=       0 cache_ref=     28026 items=         1 avg_time=    117302 ns]
