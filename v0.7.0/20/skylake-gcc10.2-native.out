run_benchmark: v0.8.0~18 /home/jkeiser/simdjson_benchmark_results/v0.7.0/20/skylake-gcc10.2-native.json -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native
git reset --hard v0.8.0~18
HEAD is now at ce175642 Merge pull request #1360 from simdjson/jkeiser/ondemand-docs
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- git Version: v0.2.1-ce175642
-- Version: 0.2.1
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 10
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
make[3]: Nothing to be done for '_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build'.
[ 80%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
make[3]: Nothing to be done for 'jsonexamples/generated/CMakeFiles/generated-data.dir/build'.
[ 80%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/g++-10  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/src  -march=native -O3 -DNDEBUG -fPIC   -pthread -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/g++-10 -fPIC -march=native -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.6 -o ../libsimdjson.so.6.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.6.0.0 ../libsimdjson.so.6 ../libsimdjson.so
[ 80%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
make[3]: Nothing to be done for 'dependencies/CMakeFiles/yyjson.dir/build'.
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/g++-10  -march=native -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.6.0.0 ../_deps/google_benchmarks/src/libbenchmark.a ../dependencies/libyyjson.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/20/skylake-gcc10.2-native.json --benchmark_out_format=json
2021-01-25 02:14:40
Running benchmark/bench_ondemand
Run on (4 X 4000 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 256 KiB (x4)
  L3 Unified 8192 KiB (x1)
Load Average: 1.07, 1.02, 0.94
simdjson::dom implementation:      haswell
simdjson::ondemand implementation: haswell

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                  258907 ns       287709 ns         2700           3.699k           2.45452G               0        92.783k    950.045k              1.50439          3.88671k       3.69255G          2.91501M                     4.6159                     3.06829           388.671k    3.84385k   631.515k       2.27165G/s    3.32556   92.8458k   955.513k         1.51305    3.8624k/s 3.69057G/s     2.91501M                4.6159                3.05073        100        386.24k/s [BEST: throughput=  2.45 GB/s doc_throughput=  3886 docs/s instructions=     2915013 cycles=      950045 branch_miss=    3699 cache_miss=       0 cache_ref=     92783 items=       100 avg_time=    258906 ns]
partial_tweets<simdjson_ondemand>/manual_time             175405 ns       204013 ns         3985           1.626k           3.62265G              35        57.699k    643.787k              1.01943          5.73644k       3.69305G          2.14384M                    3.39475                     3.33004           573.644k    1.76096k   631.515k       3.35307G/s      1.066   57.8855k   647.444k         1.02522    5.7011k/s 3.69115G/s     2.14384M               3.39475                3.31123        100        570.11k/s [BEST: throughput=  3.62 GB/s doc_throughput=  5736 docs/s instructions=     2143837 cycles=      643787 branch_miss=    1626 cache_miss=      35 cache_ref=     57699 items=       100 avg_time=    175404 ns]
partial_tweets<yyjson>/manual_time                        701852 ns       732506 ns          996           9.873k           1.53364G             231        77.324k    1.52057M              2.40781          2.42851k       3.69272G          2.90835M                    4.60536                     1.91267           242.851k      7.504k   631.515k       858.101M/s    1007.75   51.4915k   1.73847M         2.75286    1.4248k/s 2.47698G/s     2.90884M               4.60613                1.67322        100        142.48k/s [BEST: throughput=  1.53 GB/s doc_throughput=  2428 docs/s instructions=     2908354 cycles=     1520569 branch_miss=    9873 cache_miss=     231 cache_ref=     77324 items=       100 avg_time=    701851 ns]
partial_tweets<yyjson_insitu>/manual_time                 490839 ns       520291 ns         1426           6.837k           1.71509G          1.276k         48.61k    1.35614M              2.14744          2.71583k       3.68306G          2.90804M                    4.60486                     2.14435           271.583k    7.31868k   631.515k       1.19824G/s    146.259   33.7315k   1.46613M         2.32161   2.03733k/s 2.98699G/s      2.9083M               4.60528                1.98366        100       203.733k/s [BEST: throughput=  1.72 GB/s doc_throughput=  2715 docs/s instructions=     2908038 cycles=     1356142 branch_miss=    6837 cache_miss=    1276 cache_ref=     48610 items=       100 avg_time=    490839 ns]
partial_tweets<rapidjson>/manual_time                    1627328 ns      1656531 ns          431          27.477k           443.906M          9.905k        54.677k    5.25179M              8.31618           702.922        3.6916G          13.1235M                     20.781                     2.49886           70.2922k    27.5644k   631.515k       370.091M/s    504.174    35.098k   5.41327M         8.57188    614.504/s 3.32648G/s     13.1241M                20.782                2.42444        100       61.4504k/s [BEST: throughput=  0.44 GB/s doc_throughput=   702 docs/s instructions=    13123486 cycles=     5251792 branch_miss=   27477 cache_miss=    9905 cache_ref=     54677 items=       100 avg_time=   1627328 ns]
partial_tweets<rapidjson_insitu>/manual_time             1163168 ns      1192391 ns          604          22.814k           606.447M             140        46.146k    3.84439M              6.08756           960.305       3.69178G          9.82425M                    15.5566                     2.55548           96.0305k    23.1798k   631.515k       517.775M/s     235.03   35.8562k   3.94302M         6.24374    859.721/s 3.38989G/s     9.82485M               15.5576                2.49171        100       85.9721k/s [BEST: throughput=  0.61 GB/s doc_throughput=   960 docs/s instructions=     9824248 cycles=     3844388 branch_miss=   22814 cache_miss=     140 cache_ref=     46146 items=       100 avg_time=   1163168 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                  92354443 ns     95768539 ns            8         870.079k           499.597M        11.2319M       15.6005M    339.528M              7.38125           10.8611       3.68765G          981.675M                    21.3413                     2.89129           10.8611M     866.24k   45.9988M       474.994M/s   11.0921M   15.5967M   340.636M         7.40532    10.8278/s 3.68835G/s     981.675M               21.3413                2.88189      1000k       10.8278M/s [BEST: throughput=  0.50 GB/s doc_throughput=    10 docs/s instructions=   981674935 cycles=   339528390 branch_miss=  870079 cache_miss=11231938 cache_ref=  15600489 items=   1000000 avg_time=  92354443 ns]
large_random<simdjson_ondemand>/manual_time             58840718 ns     62232891 ns           12         865.398k           783.051M        5.72042M       8.07752M    216.706M              4.71113           17.0233       3.68906G          643.053M                    13.9798                     2.96739           17.0233M    865.438k   45.9988M       745.536M/s   5.76581M   8.07842M   217.052M         4.71864     16.995/s  3.6888G/s     643.053M               13.9798                2.96267      1000k        16.995M/s [BEST: throughput=  0.78 GB/s doc_throughput=    17 docs/s instructions=   643052686 cycles=   216706351 branch_miss=  865398 cache_miss= 5720419 cache_ref=   8077522 items=   1000000 avg_time=  58840717 ns]
large_random<simdjson_ondemand_unordered>/manual_time   62551447 ns     65930733 ns           11         863.481k           735.866M        5.73295M       8.07273M    230.601M              5.01319           15.9975       3.68903G          647.053M                    14.0667                     2.80595           15.9975M    863.521k   45.9988M       701.308M/s   5.76422M   8.07351M   230.751M         5.01646    15.9868/s 3.68898G/s     647.053M               14.0667                2.80412      1000k       15.9868M/s [BEST: throughput=  0.74 GB/s doc_throughput=    15 docs/s instructions=   647052689 cycles=   230600606 branch_miss=  863481 cache_miss= 5732947 cache_ref=   8072727 items=   1000000 avg_time=  62551447 ns]
large_random<yyjson>/manual_time                       127811262 ns    131236248 ns            5         660.692k           360.157M         6.0302M       9.29026M    351.306M              7.63728           7.82972       2.75062G           942.15M                    20.4821                     2.68185           7.82972M    661.114k   45.9988M       343.224M/s   6.02119M   9.28506M   351.373M         7.63874    7.82404/s 2.74915G/s     942.149M               20.4821                2.68134      1000k       7.82404M/s [BEST: throughput=  0.36 GB/s doc_throughput=     7 docs/s instructions=   942149588 cycles=   351305693 branch_miss=  660692 cache_miss= 6030204 cache_ref=   9290259 items=   1000000 avg_time= 127811261 ns]
large_random<yyjson_insitu>/manual_time                109790682 ns    113224484 ns            6         660.882k           419.111M        5.15046M        7.9198M    319.165M              6.93854           9.11136       2.90802G          936.029M                     20.349                     2.93275           9.11136M    661.395k   45.9988M       399.559M/s   5.15383M   7.93153M   319.209M         6.93952    9.10824/s 2.90743G/s     936.029M                20.349                2.93234      1000k       9.10824M/s [BEST: throughput=  0.42 GB/s doc_throughput=     9 docs/s instructions=   936028830 cycles=   319164507 branch_miss=  660882 cache_miss= 5150457 cache_ref=   7919797 items=   1000000 avg_time= 109790681 ns]
large_random<rapidjson>/manual_time                    179071685 ns    182507461 ns            4         666.012k           267.465M        7.08497M         10.91M    576.591M              12.5349           5.81461       3.35265G          1.67014G                    36.3083                     2.89657           5.81461M    667.339k   45.9988M       244.974M/s   6.52085M   10.1804M   581.633M         12.6445    5.58436/s 3.24804G/s     1.67015G               36.3085                2.87148      1000k       5.58436M/s [BEST: throughput=  0.27 GB/s doc_throughput=     5 docs/s instructions=  1670138693 cycles=   576590915 branch_miss=  666012 cache_miss= 7084970 cache_ref=  10909953 items=   1000000 avg_time= 179071684 ns]
large_random<rapidjson_lossless>/manual_time           202557354 ns    205988277 ns            4         585.903k           234.933M          7.083M       10.8955M    664.454M               14.445           5.10737       3.39361G          2.03011G                     44.134                      3.0553           5.10737M    585.146k   45.9988M        216.57M/s   6.52658M     10.17M   668.265M         14.5279    4.93687/s 3.29914G/s     2.03012G               44.1342                3.03789      1000k       4.93687M/s [BEST: throughput=  0.23 GB/s doc_throughput=     5 docs/s instructions=  2030108338 cycles=   664454120 branch_miss=  585903 cache_miss= 7083002 cache_ref=  10895489 items=   1000000 avg_time= 202557353 ns]
large_random<rapidjson_insitu>/manual_time             161541715 ns    164966629 ns            5         637.416k           299.163M        8.17792M       12.5067M    509.385M              11.0739           6.50371       3.31289G          1.50214G                    32.6561                     2.94892           6.50371M    634.812k   45.9988M       271.557M/s   7.60295M   11.7272M   515.671M         11.2105    6.19035/s 3.19218G/s     1.50215G               32.6563                  2.913      1000k       6.19035M/s [BEST: throughput=  0.30 GB/s doc_throughput=     6 docs/s instructions=  1502138542 cycles=   509385306 branch_miss=  637416 cache_miss= 8177920 cache_ref=  12506726 items=   1000000 avg_time= 161541714 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                        86546441 ns     96947098 ns            8         442.399k            1.5886G        16.1334M       22.7312M    318.812M              2.32193           11.5698       3.68861G          938.041M                     6.8318                      2.9423           6.06593M    442.331k   137.305M       1.47753G/s   16.1648M    22.711M   319.234M           2.325    11.5545/s 3.68858G/s     938.041M                6.8318                2.93841   524.288k       6.05788M/s [BEST: throughput=  1.59 GB/s doc_throughput=    11 docs/s instructions=   938040602 cycles=   318812354 branch_miss=  442399 cache_miss=16133396 cache_ref=  22731177 items=    524288 avg_time=  86546441 ns]
kostya<simdjson_ondemand>/manual_time                   59487473 ns     69827405 ns           12         454.576k           2.31096G        10.3541M       14.3297M    219.187M              1.59635           16.8308        3.6891G          676.093M                    4.92402                     3.08455           8.82419M    454.682k   137.305M       2.14962G/s   10.3478M   14.2999M   219.448M         1.59826    16.8103/s 3.68899G/s     676.093M               4.92402                3.08087   524.288k       8.81342M/s [BEST: throughput=  2.31 GB/s doc_throughput=    16 docs/s instructions=   676092756 cycles=   219187070 branch_miss=  454576 cache_miss=10354058 cache_ref=  14329688 items=    524288 avg_time=  59487472 ns]
kostya<yyjson>/manual_time                             208219720 ns    218629866 ns            3         417.958k           659.932M         11.623M       16.6115M    569.925M              4.15079           4.80632       2.73924G          984.045M                    7.16686                     1.72662            2.5199M    417.605k   137.305M       628.875M/s     11.62M   16.6011M   569.737M         4.14943    4.80262/s 2.73623G/s     984.045M               7.16686                1.72719   524.288k       2.51796M/s [BEST: throughput=  0.66 GB/s doc_throughput=     4 docs/s instructions=   984045125 cycles=   569924829 branch_miss=  417958 cache_miss=11623007 cache_ref=  16611525 items=    524288 avg_time= 208219720 ns]
kostya<yyjson_insitu>/manual_time                      154064875 ns    164461222 ns            5         413.963k           891.512M        9.04917M        12.554M    473.263M               3.4468           6.49293       3.07286G          965.775M                     7.0338                     2.04067           3.40417M    414.146k   137.305M       849.929M/s   9.04925M    12.571M   473.323M         3.44724    6.49077/s 3.07223G/s     965.775M                7.0338                2.04042   524.288k       3.40303M/s [BEST: throughput=  0.89 GB/s doc_throughput=     6 docs/s instructions=   965775452 cycles=   473263057 branch_miss=  413963 cache_miss= 9049174 cache_ref=  12553961 items=    524288 avg_time= 154064875 ns]
kostya<rapidjson>/manual_time                          250978005 ns    261496690 ns            3          1015.6k           554.467M        8.34217M       12.3532M     831.97M              6.05928           4.03821       3.35967G          2.29616G                    16.7231                     2.75991           2.11719M    1010.72k   137.305M       521.736M/s   8.03901M   11.9654M   834.824M         6.08007    3.98441/s 3.32628G/s     2.29617G               16.7231                2.75048   524.288k       2.08898M/s [BEST: throughput=  0.55 GB/s doc_throughput=     4 docs/s instructions=  2296164931 cycles=   831970009 branch_miss= 1015603 cache_miss= 8342170 cache_ref=  12353205 items=    524288 avg_time= 250978005 ns]
kostya<rapidjson_lossless>/manual_time                 273503481 ns    283926550 ns            3         970.682k           508.106M        8.33365M       12.2712M    915.487M              6.66754           3.70057       3.38782G          2.50115G                     18.216                     2.73205           1.94016M    965.887k   137.305M       478.766M/s   8.05493M   11.9489M   918.132M          6.6868    3.65626/s 3.35693G/s     2.50116G               18.2161                2.72418   524.288k       1.91693M/s [BEST: throughput=  0.51 GB/s doc_throughput=     3 docs/s instructions=  2501153641 cycles=   915486558 branch_miss=  970682 cache_miss= 8333646 cache_ref=  12271235 items=    524288 avg_time= 273503481 ns]
kostya<rapidjson_insitu>/manual_time                   236668547 ns    247080831 ns            3         979.648k           588.598M        11.5002M       16.1271M    779.149M              5.67458           4.28679       3.34005G          2.04643G                    14.9043                      2.6265           2.24751M    979.376k   137.305M       553.281M/s    11.217M   15.7574M   782.232M         5.69704    4.22532/s 3.30518G/s     2.04643G               14.9043                2.61614   524.288k       2.21528M/s [BEST: throughput=  0.59 GB/s doc_throughput=     4 docs/s instructions=  2046429906 cycles=   779148593 branch_miss=  979648 cache_miss=11500155 cache_ref=  16127136 items=    524288 avg_time= 236668547 ns]
distinct_user_id<simdjson_dom>/manual_time                257433 ns       288545 ns         2718            3.89k           2.46809G               0         94.16k    944.896k              1.49624           3.9082k       3.69285G          2.85594M                    4.52236                     3.02249           449.443k    4.01976k   631.515k       2.28465G/s    0.96284   94.1359k   950.089k         1.50446   3.88451k/s 3.69063G/s     2.85594M               4.52236                3.00597        115       446.719k/s [BEST: throughput=  2.47 GB/s doc_throughput=  3908 docs/s instructions=     2855937 cycles=      944896 branch_miss=    3890 cache_miss=       0 cache_ref=     94160 items=       115 avg_time=    257432 ns]
distinct_user_id<simdjson_ondemand>/manual_time           164511 ns       194549 ns         4256            1.61k           3.86288G               3        56.448k     603.77k             0.956066          6.11684k       3.69317G          2.09786M                    3.32194                      3.4746           703.437k     1.6998k   631.515k       3.57511G/s   0.700658   56.4295k   607.275k        0.961617   6.07864k/s 3.69141G/s     2.09786M               3.32194                3.45454        115       699.043k/s [BEST: throughput=  3.86 GB/s doc_throughput=  6116 docs/s instructions=     2097858 cycles=      603770 branch_miss=    1610 cache_miss=       3 cache_ref=     56448 items=       115 avg_time=    164510 ns]
distinct_user_id<yyjson>/manual_time                      688417 ns       722946 ns         1188           9.795k           1.54587G             177        76.077k     1.5085M               2.3887          2.44788k       3.69262G          2.87489M                    4.55237                      1.9058           281.506k    7.70744k   631.515k       874.847M/s   1.10314k   50.3649k     1.733M          2.7442   1.45261k/s 2.51737G/s     2.87558M               4.55346                1.65931        115        167.05k/s [BEST: throughput=  1.55 GB/s doc_throughput=  2447 docs/s instructions=     2874892 cycles=     1508500 branch_miss=    9795 cache_miss=     177 cache_ref=     76077 items=       115 avg_time=    688417 ns]
distinct_user_id<yyjson_insitu>/manual_time               485684 ns       519110 ns         1440           7.496k           1.71355G              19        46.804k    1.36077M              2.15476           2.7134k       3.69231G          2.87478M                    4.55219                     2.11262           312.041k    7.51695k   631.515k       1.21096G/s    119.979   32.1897k   1.45981M         2.31161   2.05895k/s 3.00569G/s     2.87504M               4.55261                1.96946        115       236.779k/s [BEST: throughput=  1.71 GB/s doc_throughput=  2713 docs/s instructions=     2874777 cycles=     1360766 branch_miss=    7496 cache_miss=      19 cache_ref=     46804 items=       115 avg_time=    485684 ns]
distinct_user_id<rapidjson>/manual_time                  1604688 ns      1636116 ns          437          27.857k           446.204M             231        54.123k    5.22478M               8.2734            706.56       3.69162G          13.0653M                    20.6888                     2.50064           81.2545k    27.5446k   631.515k       375.313M/s   1.94488k   36.2988k   5.38961M         8.53441    623.174/s 3.35866G/s     13.0661M                 20.69                2.42431        115        71.665k/s [BEST: throughput=  0.45 GB/s doc_throughput=   706 docs/s instructions=    13065291 cycles=     5224777 branch_miss=   27857 cache_miss=     231 cache_ref=     54123 items=       115 avg_time=   1604687 ns]
distinct_user_id<rapidjson_insitu>/manual_time           1139992 ns      1170560 ns          648          23.182k           607.498M              20        44.572k    3.83772M                6.077           961.969       3.69176G          9.77571M                    15.4798                     2.54727           110.626k    23.1373k   631.515k       528.302M/s   2.11543k    36.766k   3.91817M         6.20439    877.199/s 3.43701G/s     9.77625M               15.4806                2.49511        115       100.878k/s [BEST: throughput=  0.61 GB/s doc_throughput=   961 docs/s instructions=     9775707 cycles=     3837715 branch_miss=   23182 cache_miss=      20 cache_ref=     44572 items=       115 avg_time=   1139991 ns]
find_tweet<simdjson_dom>/manual_time                      244359 ns       273578 ns         2863           3.594k           2.59834G               0        83.267k    897.415k              1.42105          4.11445k       3.69237G           2.7749M                    4.39404                      3.0921           4.11445k    3.69046k   631.515k       2.40689G/s   0.809291   83.3272k    901.87k          1.4281   4.09234k/s 3.69076G/s      2.7749M               4.39404                3.07683          1       4.09234k/s [BEST: throughput=  2.60 GB/s doc_throughput=  4114 docs/s instructions=     2774900 cycles=      897415 branch_miss=    3594 cache_miss=       0 cache_ref=     83267 items=         1 avg_time=    244358 ns]
find_tweet<simdjson_ondemand>/manual_time                 116506 ns       145001 ns         6000              742           5.44198G               0        32.424k    428.648k             0.678761          8.61735k       3.69381G          1.47888M                     2.3418                      3.4501           8.61735k     784.516   631.515k        5.0482G/s      0.485   32.5847k   430.124k        0.681098   8.58327k/s 3.69187G/s     1.47888M                2.3418                3.43826          1       8.58327k/s [BEST: throughput=  5.44 GB/s doc_throughput=  8617 docs/s instructions=     1478879 cycles=      428648 branch_miss=     742 cache_miss=       0 cache_ref=     32424 items=         1 avg_time=    116505 ns]
find_tweet<yyjson>/manual_time                            676187 ns       707017 ns         1090           9.393k           1.58768G             126        68.548k    1.46864M              2.32559          2.51408k       3.69229G          2.82414M                      4.472                     1.92295           2.51408k    7.41292k   631.515k        890.67M/s    1054.81   41.5636k   1.69514M         2.68424   1.47888k/s 2.50691G/s     2.82462M               4.47276                 1.6663          1       1.47888k/s [BEST: throughput=  1.59 GB/s doc_throughput=  2514 docs/s instructions=     2824135 cycles=     1468644 branch_miss=    9393 cache_miss=     126 cache_ref=     68548 items=         1 avg_time=    676187 ns]
find_tweet<yyjson_insitu>/manual_time                     475282 ns       505735 ns         1474           6.754k           1.76983G             571        38.346k    1.31219M              2.07784          2.80251k       3.67743G          2.82402M                    4.47182                     2.15214           2.80251k    7.29042k   631.515k       1.23746G/s    16.6052   23.5152k   1.42231M         2.25223   2.10402k/s 2.99257G/s     2.82428M               4.47224                1.98569          1       2.10402k/s [BEST: throughput=  1.77 GB/s doc_throughput=  2802 docs/s instructions=     2824021 cycles=     1312190 branch_miss=    6754 cache_miss=     571 cache_ref=     38346 items=         1 avg_time=    475281 ns]
find_tweet<rapidjson>/manual_time                        1595955 ns      1625177 ns          440          27.803k           447.882M             224        47.685k    5.20509M              8.24223           709.218       3.69154G          12.9968M                    20.5803                     2.49694            709.218    27.4386k   631.515k       377.366M/s   1.56862k   28.8807k   5.35591M         8.48104    626.584/s 3.35593G/s     12.9977M               20.5818                 2.4268          1        626.584/s [BEST: throughput=  0.45 GB/s doc_throughput=   709 docs/s instructions=    12996774 cycles=     5205090 branch_miss=   27803 cache_miss=     224 cache_ref=     47685 items=         1 avg_time=   1595954 ns]
find_tweet<rapidjson_insitu>/manual_time                 1131611 ns      1161772 ns          657          22.683k           613.989M               3        35.988k    3.79713M              6.01273           972.248       3.69175G           9.7186M                    15.3893                     2.55946            972.248    23.0919k   631.515k       532.214M/s   1.89281k    27.749k   3.88689M         6.15486    883.696/s 3.43482G/s     9.71915M               15.3902                 2.5005          1        883.696/s [BEST: throughput=  0.61 GB/s doc_throughput=   972 docs/s instructions=     9718601 cycles=     3797128 branch_miss=   22683 cache_miss=       3 cache_ref=     35988 items=         1 avg_time=   1131610 ns]
