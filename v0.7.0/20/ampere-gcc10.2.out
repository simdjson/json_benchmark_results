run_benchmark: v0.8.0~18 /home/jkeiser/simdjson_benchmark_results/v0.7.0/20/ampere-gcc10.2.json -DCMAKE_BUILD_TYPE=Release
git reset --hard v0.8.0~18
HEAD is now at ce175642 Merge pull request #1360 from simdjson/jkeiser/ondemand-docs
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- git Version: v0.2.1-ce175642
-- Version: 0.2.1
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 10
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
make[3]: Nothing to be done for '_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build'.
[ 80%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
make[3]: Nothing to be done for 'jsonexamples/generated/CMakeFiles/generated-data.dir/build'.
[ 80%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/g++-10  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/src  -O3 -DNDEBUG -fPIC   -pthread -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/g++-10 -fPIC -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.6 -o ../libsimdjson.so.6.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.6.0.0 ../libsimdjson.so.6 ../libsimdjson.so
[ 80%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
make[3]: Nothing to be done for 'dependencies/CMakeFiles/yyjson.dir/build'.
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/g++-10  -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.6.0.0 ../_deps/google_benchmarks/src/libbenchmark.a ../dependencies/libyyjson.a -pthread /usr/lib/aarch64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/20/ampere-gcc10.2.json --benchmark_out_format=json
2021-01-25 01:07:03
Running benchmark/bench_ondemand
Run on (32 X 3300 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x32)
  L1 Instruction 32 KiB (x32)
  L2 Unified 256 KiB (x16)
Load Average: 1.00, 1.00, 1.00
simdjson::dom implementation:      arm64
simdjson::ondemand implementation: arm64

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                 1584068 ns      1652597 ns          442          17.387k           400.041M         25.996k       905.935k    5.05354M              8.00226           633.462       3.20123G          3.92139M                    6.20949                    0.775968           63.3462k    17.5974k   631.515k       380.198M/s   25.9815k   905.258k   5.06538M         8.02099    631.286/s  3.1977G/s     3.92139M               6.20949               0.774155        100       63.1286k/s [BEST: throughput=  0.40 GB/s doc_throughput=   633 docs/s instructions=     3921387 cycles=     5053545 branch_miss=   17387 cache_miss=   25996 cache_ref=    905935 items=       100 avg_time=   1584067 ns]
partial_tweets<simdjson_ondemand>/manual_time            1065799 ns      1134224 ns          657           6.493k           594.007M         22.759k       402.145k    3.40375M              5.38982           940.606       3.20159G          2.75991M                     4.3703                    0.810844           94.0606k    6.67169k   631.515k       565.078M/s   22.7638k   402.533k   3.40854M         5.39741    938.263/s 3.19811G/s     2.75991M               4.37031               0.809705        100       93.8263k/s [BEST: throughput=  0.59 GB/s doc_throughput=   940 docs/s instructions=     2759913 cycles=     3403754 branch_miss=    6493 cache_miss=   22759 cache_ref=    402145 items=       100 avg_time=   1065799 ns]
partial_tweets<yyjson>/manual_time                       1331809 ns      1321088 ns          562          49.092k           571.398M         24.349k       1.49313M     3.5385M              5.60319           904.805       3.20165G          3.54867M                    5.61929                     1.00287           90.4805k    48.7993k   631.515k       452.212M/s   24.3706k   1.49342M   3.76731M         5.96551    750.859/s 2.82871G/s     3.54889M               5.61964               0.942022        100       75.0859k/s [BEST: throughput=  0.57 GB/s doc_throughput=   904 docs/s instructions=     3548665 cycles=     3538499 branch_miss=   49092 cache_miss=   24349 cache_ref=   1493126 items=       100 avg_time=   1331808 ns]
partial_tweets<yyjson_insitu>/manual_time                1170091 ns      1242856 ns          600          48.735k           594.405M         14.524k       1.33448M    3.40211M              5.38723           941.237        3.2022G          3.44997M                    5.46301                     1.01407           94.1237k     48.789k   631.515k       514.712M/s   14.5421k   1.33466M   3.62638M         5.74235    854.635/s 3.09923G/s     3.45012M               5.46325               0.951395        100       85.4635k/s [BEST: throughput=  0.59 GB/s doc_throughput=   941 docs/s instructions=     3449975 cycles=     3402115 branch_miss=   48735 cache_miss=   14524 cache_ref=   1334476 items=       100 avg_time=   1170090 ns]
partial_tweets<rapidjson>/manual_time                    2833292 ns      2905748 ns          247          80.444k           229.526M         12.914k       6.29377M    8.80639M              13.9449           363.453        3.2007G          13.4033M                    21.2241                       1.522           36.3453k    80.1437k   631.515k       212.565M/s   13.1663k   6.29306M   8.84921M         14.0127    352.946/s 3.12329G/s     13.4038M               21.2248                1.51469        100       35.2946k/s [BEST: throughput=  0.23 GB/s doc_throughput=   363 docs/s instructions=    13403339 cycles=     8806390 branch_miss=   80444 cache_miss=   12914 cache_ref=   6293771 items=       100 avg_time=   2833292 ns]
partial_tweets<rapidjson_insitu>/manual_time             2133541 ns      2206218 ns          329          60.542k           304.946M         13.736k       3.47995M    6.62909M              10.4971            482.88       3.20105G          9.78099M                    15.4881                     1.47546            48.288k    60.6206k   631.515k       282.282M/s   13.9156k   3.48003M   6.67026M         10.5623    468.704/s 3.12638G/s     9.78153M                15.489                1.46644        100       46.8704k/s [BEST: throughput=  0.30 GB/s doc_throughput=   482 docs/s instructions=     9780991 cycles=     6629093 branch_miss=   60542 cache_miss=   13736 cache_ref=   3479955 items=       100 avg_time=   2133540 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                 310933362 ns    314509735 ns            2          1.9104M           147.952M        3.98119M       246.735M    993.624M              21.6011           3.21643       3.19592G          1.10647G                    24.0544                     1.11357           3.21643M    1.91038M   45.9988M       141.084M/s   3.98122M   246.736M   993.668M         21.6021    3.21612/s 3.19576G/s     1.10647G               24.0544                1.11352      1000k       3.21612M/s [BEST: throughput=  0.15 GB/s doc_throughput=     3 docs/s instructions=  1106472996 cycles=   993623563 branch_miss= 1910400 cache_miss= 3981191 cache_ref= 246734868 items=   1000000 avg_time= 310933362 ns]
large_random<simdjson_ondemand>/manual_time            183833981 ns    187445806 ns            4         1.19332M           250.286M        2.31768M       134.459M    587.505M              12.7722           5.44115        3.1967G          689.959M                    14.9995                     1.17439           5.44115M    1.19297M   45.9988M       238.628M/s   2.31777M    134.46M   587.526M         12.7726    5.43969/s 3.19596G/s     689.959M               14.9995                1.17435      1000k       5.43969M/s [BEST: throughput=  0.25 GB/s doc_throughput=     5 docs/s instructions=   689958645 cycles=   587504698 branch_miss= 1193324 cache_miss= 2317684 cache_ref= 134459205 items=   1000000 avg_time= 183833980 ns]
large_random<simdjson_ondemand_unordered>/manual_time  184524456 ns    188134551 ns            4         1.19991M           249.355M        2.31812M       138.475M    589.742M              12.8208            5.4209       3.19693G          693.959M                    15.0865                     1.17672            5.4209M    1.20046M   45.9988M       237.735M/s   2.31808M   138.475M   589.764M         12.8213    5.41934/s 3.19613G/s     693.959M               15.0865                1.17667      1000k       5.41934M/s [BEST: throughput=  0.25 GB/s doc_throughput=     5 docs/s instructions=   693958643 cycles=   589741544 branch_miss= 1199913 cache_miss= 2318116 cache_ref= 138475138 items=   1000000 avg_time= 184524456 ns]
large_random<yyjson>/manual_time                       204551310 ns    208133186 ns            3         1.61571M           224.948M        4.91406M       235.115M    628.093M              13.6546           4.89029       3.07156G          908.191M                    19.7438                     1.44595           4.89029M    1.61304M   45.9988M       214.459M/s   4.91416M   235.111M   628.211M         13.6571    4.88875/s 3.07117G/s     908.191M               19.7438                1.44568      1000k       4.88875M/s [BEST: throughput=  0.22 GB/s doc_throughput=     4 docs/s instructions=   908191346 cycles=   628093301 branch_miss= 1615712 cache_miss= 4914056 cache_ref= 235114955 items=   1000000 avg_time= 204551309 ns]
large_random<yyjson_insitu>/manual_time                198545400 ns    202139595 ns            4         1.61537M           231.775M        4.19726M       223.608M     615.93M              13.3901           5.03871        3.1035G          901.004M                    19.5876                     1.46283           5.03871M    1.61315M   45.9988M       220.946M/s   4.19718M     223.6M    616.06M          13.393    5.03663/s 3.10287G/s     901.004M               19.5876                1.46252      1000k       5.03663M/s [BEST: throughput=  0.23 GB/s doc_throughput=     5 docs/s instructions=   901003527 cycles=   615930157 branch_miss= 1615371 cache_miss= 4197262 cache_ref= 223608264 items=   1000000 avg_time= 198545399 ns]
large_random<rapidjson>/manual_time                    352326660 ns    355932613 ns            2         1.94679M           130.857M        4.95519M       764.804M    1096.88M              23.8459            2.8448       3.12041G          1.67651G                    36.4467                     1.52843            2.8448M    1.96233M   45.9988M       124.509M/s   4.95527M   764.801M    1097.1M         23.8506    2.83828/s 3.11386G/s     1.67651G               36.4469                1.52813      1000k       2.83828M/s [BEST: throughput=  0.13 GB/s doc_throughput=     2 docs/s instructions=  1676505421 cycles=  1096883293 branch_miss= 1946793 cache_miss= 4955195 cache_ref= 764804085 items=   1000000 avg_time= 352326660 ns]
large_random<rapidjson_lossless>/manual_time           417375986 ns    397463158 ns            2         2.02264M           117.021M        4.95618M       955.344M     1.2295G              26.7291           2.54401       3.12787G          1.97648G                    42.9681                     1.60754           2.54401M    2.00858M   45.9988M       105.104M/s   4.95607M   955.314M   1.22971G         26.7336    2.39592/s 2.94629G/s     1.97649G               42.9682                1.60728      1000k       2.39592M/s [BEST: throughput=  0.12 GB/s doc_throughput=     2 docs/s instructions=  1976481708 cycles=  1229504407 branch_miss= 2022637 cache_miss= 4956177 cache_ref= 955344414 items=   1000000 avg_time= 417375986 ns]
large_random<rapidjson_insitu>/manual_time             336855640 ns    340489069 ns            2         2.09637M           136.773M        5.67356M       749.485M    1048.33M              22.7904           2.97341       3.11711G           1.5665G                    34.0553                     1.49428           2.97341M     2.1063M   45.9988M       130.227M/s   5.67328M   749.495M    1047.7M         22.7766    2.96863/s 3.11023G/s     1.56651G               34.0554                1.49519      1000k       2.96863M/s [BEST: throughput=  0.14 GB/s doc_throughput=     2 docs/s instructions=  1566500971 cycles=  1048331188 branch_miss= 2096370 cache_miss= 5673556 cache_ref= 749485300 items=   1000000 avg_time= 336855639 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                       380989897 ns    391639546 ns            2         1097.41k           360.405M        6.94422M       246.861M    1.21754G              8.86744           2.62485       3.19587G          1.14604G                    8.34671                    0.941276           1.37618M    1097.39k   137.305M       343.695M/s   6.94432M    246.86M   1.21767G         8.86833    2.62474/s 3.19606G/s     1.14604G               8.34671               0.941181   524.288k       1.37612M/s [BEST: throughput=  0.36 GB/s doc_throughput=     2 docs/s instructions=  1146044348 cycles=  1217543941 branch_miss= 1097412 cache_miss= 6944219 cache_ref= 246860552 items=    524288 avg_time= 380989896 ns]
kostya<simdjson_ondemand>/manual_time                  257852590 ns    268519475 ns            3         1.15924M           533.136M        5.28138M       136.952M    822.993M              5.99391           3.88286       3.19557G          796.072M                    5.79784                    0.967289           2.03574M    1.20012M   137.305M       507.826M/s   5.28131M    137.07M   824.096M         6.00194    3.87818/s   3.196G/s     796.072M               5.79784               0.965994   524.288k       2.03329M/s [BEST: throughput=  0.53 GB/s doc_throughput=     3 docs/s instructions=   796071983 cycles=   822993156 branch_miss= 1159240 cache_miss= 5281381 cache_ref= 136952082 items=    524288 avg_time= 257852589 ns]
kostya<yyjson>/manual_time                             295771715 ns    306460113 ns            2         1.21696M           464.471M        7.99125M       345.483M    902.071M              6.56983           3.38277        3.0515G          1052.15M                    7.66289                     1.16637           1.77354M      1.225M   137.305M       442.721M/s   7.99381M   345.515M    902.55M         6.57332    3.38099/s 3.05151G/s     1052.15M               7.66288                1.16575   524.288k       1.77261M/s [BEST: throughput=  0.46 GB/s doc_throughput=     3 docs/s instructions=  1052152390 cycles=   902071072 branch_miss= 1216963 cache_miss= 7991254 cache_ref= 345483084 items=    524288 avg_time= 295771715 ns]
kostya<yyjson_insitu>/manual_time                      278866369 ns    289566624 ns            3         1.35494M           492.879M        5.83365M       311.477M    868.183M              6.32302           3.58966       3.11648G           1030.7M                    7.50663                     1.18719           1.88202M    1.35478M   137.305M       469.559M/s   5.83611M   311.492M   869.095M         6.32967    3.58595/s 3.11653G/s      1030.7M               7.50663                1.18594   524.288k       1.88007M/s [BEST: throughput=  0.49 GB/s doc_throughput=     3 docs/s instructions=  1030698157 cycles=   868182530 branch_miss= 1354937 cache_miss= 5833651 cache_ref= 311477230 items=    524288 avg_time= 278866369 ns]
kostya<rapidjson>/manual_time                          569048978 ns    579744514 ns            1          7.6049M           241.289M        5.38662M       976.626M    1.78422G              12.9946           1.75732       3.13544G          2.38981G                    17.4051                     1.33942           921.341k     7.6049M   137.305M       230.111M/s   5.38662M   976.626M   1.78422G         12.9946    1.75732/s 3.13544G/s     2.38981G               17.4051                1.33942   524.288k       921.341k/s [BEST: throughput=  0.24 GB/s doc_throughput=     1 docs/s instructions=  2389813588 cycles=  1784220952 branch_miss= 7604904 cache_miss= 5386623 cache_ref= 976626451 items=    524288 avg_time= 569048978 ns]
kostya<rapidjson_lossless>/manual_time                 593905958 ns    604628825 ns            1           7.607M            231.19M         5.3881M       1095.89M     1.8639G              13.5749           1.68377       3.13837G          2.56492G                    18.6805                     1.37611           882.779k      7.607M   137.305M        220.48M/s    5.3881M   1095.89M    1.8639G         13.5749    1.68377/s 3.13837G/s     2.56492G               18.6805                1.37611   524.288k       882.779k/s [BEST: throughput=  0.23 GB/s doc_throughput=     1 docs/s instructions=  2564919558 cycles=  1863895018 branch_miss= 7607003 cache_miss= 5388099 cache_ref=1095894883 items=    524288 avg_time= 593905958 ns]
kostya<rapidjson_insitu>/manual_time                   533972250 ns    544595402 ns            1         6.40484M           257.139M        6.35925M       875.426M    1.67237G              12.1799           1.87276       3.13193G          2.17945G                    15.8731                     1.30322           981.864k    6.40484M   137.305M       245.227M/s   6.35925M   875.426M   1.67237G         12.1799    1.87276/s 3.13193G/s     2.17945G               15.8731                1.30322   524.288k       981.864k/s [BEST: throughput=  0.26 GB/s doc_throughput=     1 docs/s instructions=  2179453241 cycles=  1672365336 branch_miss= 6404841 cache_miss= 6359248 cache_ref= 875425991 items=    524288 avg_time= 533972250 ns]
distinct_user_id<simdjson_dom>/manual_time               1578431 ns      1666805 ns          444          17.457k           401.868M         26.474k       889.853k    5.03054M              7.96583           636.356       3.20121G          3.85168M                    6.09911                     0.76566           73.1809k    17.5735k   631.515k       381.556M/s   26.4772k   887.791k   5.04619M         7.99061    633.541/s 3.19697G/s     3.85168M               6.09911               0.763285        115       72.8572k/s [BEST: throughput=  0.40 GB/s doc_throughput=   636 docs/s instructions=     3851681 cycles=     5030539 branch_miss=   17457 cache_miss=   26474 cache_ref=    889853 items=       115 avg_time=   1578430 ns]
distinct_user_id<simdjson_ondemand>/manual_time          1053822 ns      1134980 ns          664           6.633k           601.043M          22.38k       379.306k    3.36374M              5.32645           951.747       3.20143G          2.69545M                    4.26824                    0.801328           109.451k    6.83158k   631.515k         571.5M/s   22.3799k    380.04k   3.37014M          5.3366    948.927/s 3.19802G/s     2.69546M               4.26824               0.799805        115       109.127k/s [BEST: throughput=  0.60 GB/s doc_throughput=   951 docs/s instructions=     2695455 cycles=     3363735 branch_miss=    6633 cache_miss=   22380 cache_ref=    379306 items=       115 avg_time=   1053821 ns]
distinct_user_id<yyjson>/manual_time                     1229598 ns      1314789 ns          575          48.825k           582.155M         24.199k         1.478M    3.47315M              5.49971           921.839       3.20168G          3.51463M                     5.5654                     1.01194           106.011k    48.5483k   631.515k       489.802M/s   24.1844k   1.47885M   3.70616M         5.86869    813.274/s 3.01413G/s     3.51478M               5.56563               0.948361        115       93.5265k/s [BEST: throughput=  0.58 GB/s doc_throughput=   921 docs/s instructions=     3514631 cycles=     3473149 branch_miss=   48825 cache_miss=   24199 cache_ref=   1478004 items=       115 avg_time=   1229597 ns]
distinct_user_id<yyjson_insitu>/manual_time              1149325 ns      1234566 ns          610          48.624k           604.662M         14.306k       1.31953M    3.34405M              5.29528           957.478       3.20186G          3.41557M                    5.40854                     1.02139            110.11k    48.5402k   631.515k       524.012M/s   14.3127k   1.31965M   3.56025M         5.63763    870.076/s 3.09768G/s     3.41572M               5.40877               0.959406        115       100.059k/s [BEST: throughput=  0.60 GB/s doc_throughput=   957 docs/s instructions=     3415572 cycles=     3344050 branch_miss=   48624 cache_miss=   14306 cache_ref=   1319531 items=       115 avg_time=   1149324 ns]
distinct_user_id<rapidjson>/manual_time                  2815182 ns      2901242 ns          247          79.967k           230.507M          13.48k       6.27424M    8.76873M              13.8852           365.006       3.20064G          13.3651M                    21.1636                     1.52418           41.9757k    80.0505k   631.515k       213.933M/s   13.6875k   6.27424M   8.82536M         13.9749    355.217/s 3.13492G/s     13.3657M               21.1645                1.51447        115       40.8499k/s [BEST: throughput=  0.23 GB/s doc_throughput=   365 docs/s instructions=    13365141 cycles=     8768733 branch_miss=   79967 cache_miss=   13480 cache_ref=   6274244 items=       115 avg_time=   2815181 ns]
distinct_user_id<rapidjson_insitu>/manual_time           2118998 ns      2204750 ns          332          60.407k            306.73M         14.031k       3.46644M    6.59016M              10.4355           485.705       3.20087G           9.7426M                    15.4273                     1.47835            55.856k     60.581k   631.515k       284.219M/s   14.1968k   3.46756M   6.62925M         10.4974    471.921/s 3.12848G/s     9.74314M               15.4282                1.46972        115       54.2709k/s [BEST: throughput=  0.31 GB/s doc_throughput=   485 docs/s instructions=     9742599 cycles=     6590165 branch_miss=   60407 cache_miss=   14031 cache_ref=   3466439 items=       115 avg_time=   2118997 ns]
find_tweet<simdjson_dom>/manual_time                     1529269 ns      1611086 ns          458          17.034k           415.263M         23.475k       874.098k    4.86837M              7.70903           657.566       3.20127G          3.76236M                    5.95767                    0.772817            657.566    17.1093k   631.515k       393.822M/s   23.4804k   869.733k   4.88995M         7.74321    653.907/s 3.19758G/s     3.76236M               5.95767               0.769406          1        653.907/s [BEST: throughput=  0.42 GB/s doc_throughput=   657 docs/s instructions=     3762356 cycles=     4868368 branch_miss=   17034 cache_miss=   23475 cache_ref=    874098 items=         1 avg_time=   1529268 ns]
find_tweet<simdjson_ondemand>/manual_time                 914649 ns       996648 ns          765               4k           691.869M         11.564k       193.975k    2.92245M              4.62767           1095.57       3.20174G          2.05902M                    3.26045                    0.704555            1095.57     4.0884k   631.515k       658.459M/s   11.5631k   193.989k   2.92521M         4.63205    1093.31/s 3.19817G/s     2.05902M               3.26045               0.703889          1        1093.31/s [BEST: throughput=  0.69 GB/s doc_throughput=  1095 docs/s instructions=     2059024 cycles=     2922446 branch_miss=    4000 cache_miss=   11564 cache_ref=    193975 items=         1 avg_time=    914649 ns]
find_tweet<yyjson>/manual_time                           1191513 ns      1277177 ns          588          48.689k           600.091M         21.662k       1.46207M     3.3698M              5.33606           950.241       3.20212G          3.45929M                    5.47776                     1.02656            950.241     48.377k   631.515k       505.458M/s   21.6944k   1.46241M   3.58528M         5.67727    839.269/s 3.00902G/s     3.45951M               5.47811               0.964919          1        839.269/s [BEST: throughput=  0.60 GB/s doc_throughput=   950 docs/s instructions=     3459287 cycles=     3369800 branch_miss=   48689 cache_miss=   21662 cache_ref=   1462072 items=         1 avg_time=   1191513 ns]
find_tweet<yyjson_insitu>/manual_time                    1110352 ns      1196704 ns          632            48.4k           625.806M         11.762k       1.30293M    3.23135M              5.11682            990.96       3.20214G           3.3603M                    5.32101                     1.03991             990.96    48.3537k   631.515k       542.404M/s   11.7913k   1.30332M   3.43623M         5.44125    900.616/s 3.09472G/s     3.36045M               5.32125               0.977946          1        900.616/s [BEST: throughput=  0.63 GB/s doc_throughput=   990 docs/s instructions=     3360299 cycles=     3231351 branch_miss=   48400 cache_miss=   11762 cache_ref=   1302926 items=         1 avg_time=   1110351 ns]
find_tweet<rapidjson>/manual_time                        2785249 ns      2871543 ns          251          79.851k           232.618M         10.807k       6.26942M     8.6895M              13.7598           368.349       3.20077G          13.3218M                     21.095                     1.53309            368.349    79.9874k   631.515k       216.232M/s   11.0489k   6.27016M   8.72802M         13.8208    359.034/s 3.13366G/s     13.3226M               21.0963                1.52642          1        359.034/s [BEST: throughput=  0.23 GB/s doc_throughput=   368 docs/s instructions=    13321802 cycles=     8689505 branch_miss=   79851 cache_miss=   10807 cache_ref=   6269421 items=         1 avg_time=   2785248 ns]
find_tweet<rapidjson_insitu>/manual_time                 2088931 ns      2175592 ns          337          60.428k           310.486M         10.625k       3.45312M    6.51035M              10.3091           491.653       3.20084G          9.69711M                    15.3553                     1.48949            491.653    60.4988k   631.515k        288.31M/s   10.7607k   3.45352M    6.5343M          10.347    478.714/s 3.12806G/s     9.69762M               15.3561                1.48411          1        478.714/s [BEST: throughput=  0.31 GB/s doc_throughput=   491 docs/s instructions=     9697106 cycles=     6510353 branch_miss=   60428 cache_miss=   10625 cache_ref=   3453123 items=         1 avg_time=   2088931 ns]
