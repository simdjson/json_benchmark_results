run_benchmark: v0.8.0~18 /home/jkeiser/simdjson_benchmark_results/v0.7.0/20/skylake-clang11-native.json -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native
git reset --hard v0.8.0~18
HEAD is now at ce175642 Merge pull request #1360 from simdjson/jkeiser/ondemand-docs
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- git Version: v0.2.1-ce175642
-- Version: 0.2.1
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES -- failed to compile
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 10
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
make[3]: Nothing to be done for '_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build'.
[ 80%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
make[3]: Nothing to be done for 'jsonexamples/generated/CMakeFiles/generated-data.dir/build'.
[ 80%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/clang++-11  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/src  -march=native -O3 -DNDEBUG -fPIC   -pthread -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/clang++-11 -fPIC -march=native -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.6 -o ../libsimdjson.so.6.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.6.0.0 ../libsimdjson.so.6 ../libsimdjson.so
[ 80%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
make[3]: Nothing to be done for 'dependencies/CMakeFiles/yyjson.dir/build'.
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/clang++-11  -march=native -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.6.0.0 ../_deps/google_benchmarks/src/libbenchmark.a ../dependencies/libyyjson.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/20/skylake-clang11-native.json --benchmark_out_format=json
2021-01-25 01:57:06
Running benchmark/bench_ondemand
Run on (4 X 4000 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 256 KiB (x4)
  L3 Unified 8192 KiB (x1)
Load Average: 1.00, 0.94, 0.68
simdjson::dom implementation:      haswell
simdjson::ondemand implementation: haswell

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                  273675 ns       302407 ns         2559           3.654k           2.32405G               0        94.067k    1003.44k              1.58894          3.68012k       3.69279G          2.99337M                    4.73999                     2.98311           368.012k    3.84002k   631.515k       2.14906G/s    9.81321   94.0028k   1009.79k           1.599   3.65397k/s 3.68975G/s     2.99337M               4.73999                2.96435        100       365.397k/s [BEST: throughput=  2.32 GB/s doc_throughput=  3680 docs/s instructions=     2993372 cycles=     1003441 branch_miss=    3654 cache_miss=       0 cache_ref=     94067 items=       100 avg_time=    273674 ns]
partial_tweets<simdjson_ondemand>/manual_time             180138 ns       208747 ns         3886           2.032k           3.53465G               0        59.224k    659.858k              1.04488           5.5971k       3.69329G          1.94495M                    3.07982                     2.94753            559.71k    2.19206k   631.515k       3.26497G/s   0.458569   59.1387k   664.789k         1.05269   5.55131k/s 3.69045G/s     1.94495M               3.07982                2.92567        100       555.131k/s [BEST: throughput=  3.53 GB/s doc_throughput=  5597 docs/s instructions=     1944950 cycles=      659858 branch_miss=    2032 cache_miss=       0 cache_ref=     59224 items=       100 avg_time=    180137 ns]
partial_tweets<yyjson>/manual_time                        637989 ns       668757 ns         1097           9.699k           1.81566G             380        77.663k    1.28439M              2.03382          2.87508k       3.69272G          2.91961M                    4.62318                     2.27315           287.508k    7.55828k   631.515k       943.998M/s    986.139   51.6288k   1.50187M         2.37821   1.56743k/s 2.35408G/s     2.92009M               4.62394                 1.9443        100       156.743k/s [BEST: throughput=  1.82 GB/s doc_throughput=  2875 docs/s instructions=     2919608 cycles=     1284388 branch_miss=    9699 cache_miss=     380 cache_ref=     77663 items=       100 avg_time=    637988 ns]
partial_tweets<yyjson_insitu>/manual_time                 426599 ns       456173 ns         1641           6.868k           2.06929G             686        48.116k    1.12372M              1.77941          3.27671k       3.68211G          2.91929M                    4.62267                     2.59787           327.671k    7.36257k   631.515k       1.37868G/s    133.822   33.4777k   1.22751M         1.94375   2.34412k/s 2.87743G/s     2.91955M               4.62309                2.37844        100       234.412k/s [BEST: throughput=  2.07 GB/s doc_throughput=  3276 docs/s instructions=     2919288 cycles=     1123722 branch_miss=    6868 cache_miss=     686 cache_ref=     48116 items=       100 avg_time=    426599 ns]
partial_tweets<rapidjson>/manual_time                    2198395 ns      2227588 ns          319          31.164k           316.558M          9.508k        54.827k    7.36438M              11.6614           501.267       3.69152G          21.8957M                    34.6717                     2.97319           50.1267k      31.42k   631.515k       273.954M/s    600.558   34.7272k   7.51623M         11.9019    454.877/s 3.41896G/s     21.8963M               34.6726                 2.9132        100       45.4877k/s [BEST: throughput=  0.32 GB/s doc_throughput=   501 docs/s instructions=    21895686 cycles=     7364380 branch_miss=   31164 cache_miss=    9508 cache_ref=     54827 items=       100 avg_time=   2198394 ns]
partial_tweets<rapidjson_insitu>/manual_time             1578723 ns      1607842 ns          444          25.092k           429.678M              25        45.412k    5.42579M               8.5917           680.392       3.69166G            13.32M                    21.0922                     2.45495           68.0392k    24.9232k   631.515k       381.485M/s    277.903   35.7679k   5.48169M         8.68022    633.424/s 3.47223G/s     13.3204M               21.0928                2.42998        100       63.3424k/s [BEST: throughput=  0.43 GB/s doc_throughput=   680 docs/s instructions=    13320036 cycles=     5425787 branch_miss=   25092 cache_miss=      25 cache_ref=     45412 items=       100 avg_time=   1578722 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                  87707267 ns     91115502 ns            8          931.64k           525.296M        10.9166M       15.4126M    323.032M              7.02262           11.4198       3.68895G          1035.69M                    22.5155                     3.20614           11.4198M    934.149k   45.9988M       500.162M/s   10.9201M   15.4126M   323.494M         7.03267    11.4016/s 3.68834G/s     1035.69M               22.5155                3.20156      1000k       11.4016M/s [BEST: throughput=  0.53 GB/s doc_throughput=    11 docs/s instructions=  1035686042 cycles=   323031889 branch_miss=  931640 cache_miss=10916597 cache_ref=  15412567 items=   1000000 avg_time=  87707266 ns]
large_random<simdjson_ondemand>/manual_time             66106466 ns     69478145 ns           11         919.729k           696.537M        5.67956M       8.02319M    243.618M              5.29618           15.1425       3.68898G          669.142M                     14.547                     2.74669           15.1425M    920.851k   45.9988M       663.594M/s   5.69928M   8.02513M   243.826M         5.30071    15.1271/s 3.68839G/s     669.142M                14.547                2.74434      1000k       15.1271M/s [BEST: throughput=  0.70 GB/s doc_throughput=    15 docs/s instructions=   669141948 cycles=   243617772 branch_miss=  919729 cache_miss= 5679564 cache_ref=   8023188 items=   1000000 avg_time=  66106466 ns]
large_random<simdjson_ondemand_unordered>/manual_time   66155907 ns     69598426 ns           11         896.583k           696.167M        5.67535M       8.01359M     243.66M              5.29711           15.1345       3.68767G          670.142M                    14.5687                     2.75031           15.1345M    901.834k   45.9988M       663.098M/s   5.71234M   8.01461M   243.957M         5.30356    15.1158/s 3.68761G/s     670.142M               14.5687                2.74696      1000k       15.1158M/s [BEST: throughput=  0.70 GB/s doc_throughput=    15 docs/s instructions=   670141950 cycles=   243660482 branch_miss=  896583 cache_miss= 5675348 cache_ref=   8013586 items=   1000000 avg_time=  66155907 ns]
large_random<yyjson>/manual_time                       116068597 ns    119478969 ns            6         677.352k           396.597M        5.69395M       8.91909M    308.094M              6.69788            8.6219       2.65636G          855.681M                    18.6023                     2.77734            8.6219M    677.225k   45.9988M       377.948M/s   5.70075M   8.92287M   307.997M         6.69576    8.61559/s 2.65357G/s     855.681M               18.6023                2.77821      1000k       8.61559M/s [BEST: throughput=  0.40 GB/s doc_throughput=     8 docs/s instructions=   855680948 cycles=   308094195 branch_miss=  677352 cache_miss= 5693952 cache_ref=   8919093 items=   1000000 avg_time= 116068596 ns]
large_random<yyjson_insitu>/manual_time                 97905399 ns    101324313 ns            7         675.712k           470.161M        4.85577M       7.62959M    275.271M               5.9843           10.2212       2.81359G           849.56M                    18.4692                     3.08627           10.2212M    678.069k   45.9988M       448.064M/s   4.85705M   7.62898M   275.515M         5.98962    10.2139/s  2.8141G/s      849.56M               18.4692                3.08353      1000k       10.2139M/s [BEST: throughput=  0.47 GB/s doc_throughput=    10 docs/s instructions=   849560185 cycles=   275270525 branch_miss=  675712 cache_miss= 4855771 cache_ref=   7629587 items=   1000000 avg_time=  97905399 ns]
large_random<rapidjson>/manual_time                    216447305 ns    219864342 ns            3         598.264k           218.377M        7.05131M       10.8564M    718.573M              15.6216           4.74745       3.41139G          2.01014G                    43.6999                     2.79741           4.74745M      600.9k   45.9988M       202.672M/s   6.53171M   10.1922M   721.581M          15.687    4.62006/s 3.33375G/s     2.01015G               43.7001                2.78576      1000k       4.62006M/s [BEST: throughput=  0.22 GB/s doc_throughput=     4 docs/s instructions=  2010142475 cycles=   718573404 branch_miss=  598264 cache_miss= 7051308 cache_ref=  10856369 items=   1000000 avg_time= 216447304 ns]
large_random<rapidjson_lossless>/manual_time           246761668 ns    250186825 ns            3         584.228k           190.878M        7.02427M        10.861M    830.943M              18.0645           4.14963        3.4481G          2.47511G                    53.8082                     2.97868           4.14963M    583.295k   45.9988M       177.774M/s   6.53105M   10.2052M   833.471M         18.1194    4.05249/s 3.37764G/s     2.47512G               53.8084                2.96965      1000k       4.05249M/s [BEST: throughput=  0.19 GB/s doc_throughput=     4 docs/s instructions=  2475109595 cycles=   830942917 branch_miss=  584228 cache_miss= 7024275 cache_ref=  10861016 items=   1000000 avg_time= 246761668 ns]
large_random<rapidjson_insitu>/manual_time             237568992 ns    240993476 ns            3             613k           198.004M        8.13187M       12.4471M    798.803M              17.3657           4.30454       3.43848G          1.72014G                    37.3954                      2.1534           4.30454M    611.244k   45.9988M       184.653M/s   7.64047M    11.804M   799.604M         17.3832     4.2093/s 3.36578G/s     1.72015G               37.3956                2.15125      1000k        4.2093M/s [BEST: throughput=  0.20 GB/s doc_throughput=     4 docs/s instructions=  1720142460 cycles=   798802579 branch_miss=  613000 cache_miss= 8131870 cache_ref=  12447142 items=   1000000 avg_time= 237568992 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                        93322111 ns    103687001 ns            7         1043.06k           1.47407G        15.7757M       22.3837M     343.62M              2.50261           10.7357       3.68902G          985.796M                    7.17961                     2.86885           5.62862M    1044.39k   137.305M       1.37026G/s   15.8025M   22.3149M   344.226M         2.50702    10.7156/s 3.68858G/s     985.796M               7.17961                2.86381   524.288k       5.61805M/s [BEST: throughput=  1.47 GB/s doc_throughput=    10 docs/s instructions=   985795975 cycles=   343620420 branch_miss= 1043056 cache_miss=15775724 cache_ref=  22383722 items=    524288 avg_time=  93322110 ns]
kostya<simdjson_ondemand>/manual_time                   63495155 ns     73829275 ns           11         488.802k           2.16441G        10.0664M       14.0542M    234.025M              1.70442           15.7635       3.68905G          654.158M                    4.76427                     2.79525           8.26462M    488.842k   137.305M       2.01394G/s   10.0809M   14.0125M   234.209M         1.70576    15.7492/s 3.68862G/s     654.158M               4.76427                2.79305   524.288k       8.25713M/s [BEST: throughput=  2.16 GB/s doc_throughput=    15 docs/s instructions=   654158322 cycles=   234024866 branch_miss=  488802 cache_miss=10066426 cache_ref=  14054169 items=    524288 avg_time=  63495155 ns]
kostya<yyjson>/manual_time                             173651129 ns    184049471 ns            4         418.657k           793.298M        11.2695M       16.3968M    442.113M              3.21993           5.77763       2.55437G          974.185M                    7.09504                     2.20347           3.02914M    419.058k   137.305M       754.065M/s   11.2782M   16.3984M   442.239M         3.22085    5.75867/s 2.54671G/s     974.185M               7.09504                2.20285   524.288k        3.0192M/s [BEST: throughput=  0.79 GB/s doc_throughput=     5 docs/s instructions=   974184690 cycles=   442113062 branch_miss=  418657 cache_miss=11269507 cache_ref=  16396795 items=    524288 avg_time= 173651128 ns]
kostya<yyjson_insitu>/manual_time                      120087269 ns    130496024 ns            6          415.91k           1.14387G        8.65154M       12.4114M    348.351M              2.53706           8.33086       2.90206G          955.915M                    6.96198                     2.74412           4.36777M    416.482k   137.305M       1090.41M/s   8.65215M   12.3531M   348.475M         2.53796    8.32728/s 2.90185G/s     955.915M               6.96198                2.74314   524.288k       4.36589M/s [BEST: throughput=  1.14 GB/s doc_throughput=     8 docs/s instructions=   955915021 cycles=   348350647 branch_miss=  415910 cache_miss= 8651540 cache_ref=  12411440 items=    524288 avg_time= 120087268 ns]
kostya<rapidjson>/manual_time                          271403208 ns    281805488 ns            3         971.816k           511.874M        8.30183M       12.2077M    907.942M              6.61259           3.72801       3.38481G          2.73767G                    19.9386                     3.01525           1.95455M    970.985k   137.305M       482.471M/s   7.99423M   11.8875M   910.078M         6.62815    3.68455/s 3.35323G/s     2.73767G               19.9386                3.00817   524.288k       1.93177M/s [BEST: throughput=  0.51 GB/s doc_throughput=     3 docs/s instructions=  2737672096 cycles=   907941748 branch_miss=  971816 cache_miss= 8301831 cache_ref=  12207667 items=    524288 avg_time= 271403208 ns]
kostya<rapidjson_lossless>/manual_time                 291432133 ns    301836392 ns            2         969.646k           475.098M        8.28837M       12.3459M    984.283M              7.16859           3.46016       3.40578G          3.00662G                    21.8974                     3.05463           1.81412M    969.084k   137.305M       449.313M/s   8.06459M   12.0819M   985.973M          7.1809    3.43133/s  3.3832G/s     3.00662G               21.8974                 3.0494   524.288k       1.79901M/s [BEST: throughput=  0.48 GB/s doc_throughput=     3 docs/s instructions=  3006622535 cycles=   984283424 branch_miss=  969646 cache_miss= 8288371 cache_ref=  12345857 items=    524288 avg_time= 291432133 ns]
kostya<rapidjson_insitu>/manual_time                   273570409 ns    283961423 ns            3         988.102k           507.587M        11.9678M       16.0852M    916.356M              6.67387           3.69679       3.38757G          2.21152G                    16.1067                     2.41339           1.93818M     988.17k   137.305M       478.649M/s   11.6541M   15.7083M   918.094M         6.68653    3.65537/s 3.35597G/s     2.21153G               16.1067                2.40882   524.288k       1.91646M/s [BEST: throughput=  0.51 GB/s doc_throughput=     3 docs/s instructions=  2211523795 cycles=   916355558 branch_miss=  988102 cache_miss=11967840 cache_ref=  16085186 items=    524288 avg_time= 273570408 ns]
distinct_user_id<simdjson_dom>/manual_time                268033 ns       298645 ns         2611           3.776k           2.37534G               0        94.703k     981.62k              1.55439          3.76134k        3.6922G          2.92855M                    4.63734                     2.98338           432.554k    3.97972k   631.515k        2.1943G/s     3.6059   94.9226k   989.103k         1.56624   3.73089k/s 3.69023G/s     2.92855M               4.63734                2.96081        115       429.052k/s [BEST: throughput=  2.38 GB/s doc_throughput=  3761 docs/s instructions=     2928548 cycles=      981620 branch_miss=    3776 cache_miss=       0 cache_ref=     94703 items=       115 avg_time=    268032 ns]
distinct_user_id<simdjson_ondemand>/manual_time           152880 ns       182693 ns         4575            1.79k           4.16454G               0        56.977k    560.011k             0.886774          6.59452k       3.69301G          1.89446M                    2.99986                     3.38289            758.37k    1.94523k   631.515k        3.8471G/s   0.278689   57.0363k   564.167k        0.893354   6.54108k/s 3.69026G/s     1.89446M               2.99986                3.35797        115       752.224k/s [BEST: throughput=  4.16 GB/s doc_throughput=  6594 docs/s instructions=     1894455 cycles=      560011 branch_miss=    1790 cache_miss=       0 cache_ref=     56977 items=       115 avg_time=    152879 ns]
distinct_user_id<yyjson>/manual_time                      621792 ns       655766 ns         1338           9.869k           1.82943G             390        77.604k    1.27468M              2.01845          2.89689k       3.69261G          2.87778M                    4.55694                     2.25765           333.142k    7.65263k   631.515k       968.587M/s   1.11914k   50.3172k    1.4883M         2.35671   1.60825k/s 2.39357G/s     2.87819M               4.55759                1.93387        115       184.949k/s [BEST: throughput=  1.83 GB/s doc_throughput=  2896 docs/s instructions=     2877776 cycles=     1274680 branch_miss=    9869 cache_miss=     390 cache_ref=     77604 items=       115 avg_time=    621792 ns]
distinct_user_id<yyjson_insitu>/manual_time               418594 ns       451444 ns         1672           7.146k           2.08561G             418         46.72k    1.11466M              1.76505          3.30255k       3.68121G          2.87739M                    4.55632                     2.58141           379.794k    7.44395k   631.515k       1.40505G/s     72.692   32.0142k   1.21151M         1.91843   2.38895k/s 2.89425G/s     2.87765M               4.55674                2.37525        115       274.729k/s [BEST: throughput=  2.09 GB/s doc_throughput=  3302 docs/s instructions=     2877385 cycles=     1114656 branch_miss=    7146 cache_miss=     418 cache_ref=     46720 items=       115 avg_time=    418594 ns]
distinct_user_id<rapidjson>/manual_time                  2167686 ns      2198189 ns          323          30.673k           318.471M          9.112k        55.469k    7.32012M              11.5914           504.297       3.69151G          21.8226M                    34.5559                     2.98118           57.9941k    31.3109k   631.515k       277.835M/s   2.50754k   37.1183k   7.47555M         11.8375    461.321/s 3.44863G/s     21.8232M               34.5568                2.91927        115        53.052k/s [BEST: throughput=  0.32 GB/s doc_throughput=   504 docs/s instructions=    21822561 cycles=     7320120 branch_miss=   30673 cache_miss=    9112 cache_ref=     55469 items=       115 avg_time=   2167686 ns]
distinct_user_id<rapidjson_insitu>/manual_time           1550304 ns      1580382 ns          469          24.746k           431.886M              23        45.736k    5.39794M              8.54761           683.888       3.69159G          13.2529M                    20.9858                     2.45517           78.6472k    24.9457k   631.515k       388.478M/s   2.79903k    37.905k   5.45479M         8.63763    645.035/s 3.51853G/s     13.2534M               20.9866                2.42968        115        74.179k/s [BEST: throughput=  0.43 GB/s doc_throughput=   683 docs/s instructions=    13252864 cycles=     5397942 branch_miss=   24746 cache_miss=      23 cache_ref=     45736 items=       115 avg_time=   1550303 ns]
find_tweet<simdjson_dom>/manual_time                      256365 ns       285606 ns         2730           3.537k           2.48055G               0        84.776k    940.059k              1.48858          3.92793k       3.69249G          2.84337M                    4.50246                     3.02468           3.92793k      3.701k   631.515k       2.29416G/s    2.85201    84.554k   946.047k         1.49806   3.90068k/s 3.69023G/s     2.84337M               4.50246                3.00553          1       3.90068k/s [BEST: throughput=  2.48 GB/s doc_throughput=  3927 docs/s instructions=     2843374 cycles=      940059 branch_miss=    3537 cache_miss=       0 cache_ref=     84776 items=         1 avg_time=    256365 ns]
find_tweet<simdjson_ondemand>/manual_time                 111379 ns       139995 ns         6266              972           5.69389G               0        33.111k    409.781k             0.648886          9.01624k       3.69468G          1.38745M                    2.19702                     3.38583           9.01624k     1012.81   631.515k       5.28055G/s    1.07676   33.2307k   411.098k        0.650971   8.97833k/s 3.69097G/s     1.38745M               2.19702                3.37499          1       8.97833k/s [BEST: throughput=  5.69 GB/s doc_throughput=  9016 docs/s instructions=     1387450 cycles=      409781 branch_miss=     972 cache_miss=       0 cache_ref=     33111 items=         1 avg_time=    111379 ns]
find_tweet<yyjson>/manual_time                            609960 ns       640876 ns         1155           9.604k           1.89109G             110        68.113k    1.23316M               1.9527          2.99453k       3.69273G          2.81715M                    4.46093                      2.2845           2.99453k    7.39018k   631.515k       987.375M/s    1044.54   41.5894k   1.44939M         2.29511   1.63945k/s 2.37621G/s     2.81763M                4.4617                1.94401          1       1.63945k/s [BEST: throughput=  1.89 GB/s doc_throughput=  2994 docs/s instructions=     2817147 cycles=     1233157 branch_miss=    9604 cache_miss=     110 cache_ref=     68113 items=         1 avg_time=    609960 ns]
find_tweet<yyjson_insitu>/manual_time                     408255 ns       438684 ns         1717           6.793k           2.16305G             656        38.042k    1074.31k              1.70117          3.42517k       3.67971G          2.81683M                    4.46044                     2.62198           3.42517k    7.25223k   631.515k       1.44063G/s    16.7437   23.3325k    1.1742M         1.85934   2.44945k/s 2.87614G/s      2.8171M               4.46085                2.39916          1       2.44945k/s [BEST: throughput=  2.16 GB/s doc_throughput=  3425 docs/s instructions=     2816832 cycles=     1074313 branch_miss=    6793 cache_miss=     656 cache_ref=     38042 items=         1 avg_time=    408255 ns]
find_tweet<rapidjson>/manual_time                        2202935 ns      2231922 ns          324          31.017k           312.307M             205        46.892k    7.46483M              11.8205           494.536       3.69162G          21.7392M                    34.4239                     2.91222            494.536    31.1006k   631.515k        273.39M/s   2.11041k   29.4228k   7.60711M         12.0458     453.94/s 3.45317G/s     21.7401M               34.4253                2.85786          1         453.94/s [BEST: throughput=  0.31 GB/s doc_throughput=   494 docs/s instructions=    21739189 cycles=     7464827 branch_miss=   31017 cache_miss=     205 cache_ref=     46892 items=         1 avg_time=   2202935 ns]
find_tweet<rapidjson_insitu>/manual_time                 1585322 ns      1615125 ns          422          24.684k           405.717M               4        25.825k    5.41585M              8.57596            642.45       3.47941G          13.1752M                    20.8628                     2.43271             642.45    31.9395k   631.515k       379.897M/s   2.88359k    28.869k   5.59391M         8.85792    630.787/s 3.52856G/s     13.1753M                20.863                2.35529          1        630.787/s [BEST: throughput=  0.41 GB/s doc_throughput=   642 docs/s instructions=    13175198 cycles=     5415846 branch_miss=   24684 cache_miss=       4 cache_ref=     25825 items=         1 avg_time=   1585322 ns]
