run_benchmark: v0.8.0~18 /home/jkeiser/simdjson_benchmark_results/v0.7.0/20/skylake-clang11.json -DCMAKE_BUILD_TYPE=Release
git reset --hard v0.8.0~18
HEAD is now at ce175642 Merge pull request #1360 from simdjson/jkeiser/ondemand-docs
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- git Version: v0.2.1-ce175642
-- Version: 0.2.1
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES -- failed to compile
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 10
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
make[3]: Nothing to be done for '_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build'.
[ 80%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
make[3]: Nothing to be done for 'jsonexamples/generated/CMakeFiles/generated-data.dir/build'.
[ 80%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/clang++-11  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/src  -O3 -DNDEBUG -fPIC   -pthread -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/clang++-11 -fPIC -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.6 -o ../libsimdjson.so.6.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.6.0.0 ../libsimdjson.so.6 ../libsimdjson.so
[ 80%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
make[3]: Nothing to be done for 'dependencies/CMakeFiles/yyjson.dir/build'.
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/clang++-11  -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.6.0.0 ../_deps/google_benchmarks/src/libbenchmark.a ../dependencies/libyyjson.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/20/skylake-clang11.json --benchmark_out_format=json
2021-01-25 01:48:33
Running benchmark/bench_ondemand
Run on (4 X 4000 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 256 KiB (x4)
  L3 Unified 8192 KiB (x1)
Load Average: 0.95, 0.62, 0.42
simdjson::dom implementation:      haswell
simdjson::ondemand implementation: fallback

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                  276114 ns       304362 ns         2536           3.463k           2.30361G               0        87.744k    1012.23k              1.60285          3.64776k       3.69235G           2.9828M                    4.72325                     2.94678           364.776k    3.62847k   631.515k       2.13008G/s    2.86435   87.6916k   1019.05k         1.61367   3.62169k/s  3.6907G/s      2.9828M               4.72325                2.92703        100       362.169k/s [BEST: throughput=  2.30 GB/s doc_throughput=  3647 docs/s instructions=     2982801 cycles=     1012225 branch_miss=    3463 cache_miss=       0 cache_ref=     87744 items=       100 avg_time=    276114 ns]
partial_tweets<simdjson_ondemand>/manual_time            1253493 ns      1281768 ns          559          33.187k           507.312M               0        55.831k     4.5954M              7.27678           803.326        3.6916G          10.9855M                    17.3955                     2.39055           80.3326k    33.9652k   631.515k       480.465M/s   0.896243   55.9506k   4.62522M           7.324     797.77/s 3.68986G/s     10.9855M               17.3955                2.37514        100        79.777k/s [BEST: throughput=  0.51 GB/s doc_throughput=   803 docs/s instructions=    10985547 cycles=     4595397 branch_miss=   33187 cache_miss=       0 cache_ref=     55831 items=       100 avg_time=   1253493 ns]
partial_tweets<yyjson>/manual_time                        638388 ns       669289 ns         1097            9.81k           1.80244G             402        75.598k    1.29391M               2.0489          2.85415k       3.69302G          2.91991M                    4.62365                     2.25665           285.415k    7.58952k   631.515k       943.407M/s    986.479   49.7373k   1.50637M         2.38533   1.56645k/s 2.35965G/s      2.9206M               4.62474                1.93883        100       156.645k/s [BEST: throughput=  1.80 GB/s doc_throughput=  2854 docs/s instructions=     2919907 cycles=     1293913 branch_miss=    9810 cache_miss=     402 cache_ref=     75598 items=       100 avg_time=    638387 ns]
partial_tweets<yyjson_insitu>/manual_time                 427406 ns       456403 ns         1638           6.974k           2.05366G             635        45.823k    1.13194M              1.79242          3.25196k       3.68103G          2.91959M                    4.62315                     2.57927           325.196k    7.34408k   631.515k       1.37608G/s    132.044   32.2212k   1.23107M         1.94939    2.3397k/s 2.88033G/s     2.91985M               4.62356                 2.3718        100        233.97k/s [BEST: throughput=  2.05 GB/s doc_throughput=  3251 docs/s instructions=     2919587 cycles=     1131941 branch_miss=    6974 cache_miss=     635 cache_ref=     45823 items=       100 avg_time=    427406 ns]
partial_tweets<rapidjson>/manual_time                    2390709 ns      2419768 ns          293          29.382k           287.774M          9.805k        53.059k    8.08762M              12.8067           455.689       3.68544G          21.8951M                    34.6707                     2.70723           45.5689k     30.026k   631.515k       251.917M/s    626.488   32.8542k   8.23524M         13.0405    418.286/s 3.44469G/s     21.8957M               34.6717                2.65878        100       41.8286k/s [BEST: throughput=  0.29 GB/s doc_throughput=   455 docs/s instructions=    21895067 cycles=     8087624 branch_miss=   29382 cache_miss=    9805 cache_ref=     53059 items=       100 avg_time=   2390709 ns]
partial_tweets<rapidjson_insitu>/manual_time             1551609 ns      1580197 ns          452           24.97k           439.697M              60        43.043k    5.30216M              8.39594           696.258       3.69167G          13.3566M                      21.15                     2.51908           69.6258k    25.3413k   631.515k       388.152M/s    276.133   33.7537k   5.37682M         8.51416    644.492/s 3.46532G/s     13.3572M                21.151                2.48421        100       64.4492k/s [BEST: throughput=  0.44 GB/s doc_throughput=   696 docs/s instructions=    13356553 cycles=     5302159 branch_miss=   24970 cache_miss=      60 cache_ref=     43043 items=       100 avg_time=   1551608 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                  90137391 ns     93539085 ns            8         987.425k           511.385M        10.9853M        15.238M    331.812M              7.21349           11.1174       3.68887G          1038.74M                    22.5819                      3.1305           11.1174M    996.636k   45.9988M       486.678M/s   11.0279M   15.2296M   332.486M         7.22814    11.0942/s 3.68865G/s     1038.74M               22.5819                3.12416      1000k       11.0942M/s [BEST: throughput=  0.51 GB/s doc_throughput=    11 docs/s instructions=  1038738107 cycles=   331811743 branch_miss=  987425 cache_miss=10985253 cache_ref=  15238021 items=   1000000 avg_time=  90137391 ns]
large_random<simdjson_ondemand>/manual_time            107211898 ns    110596742 ns            7         1.29451M           430.393M        5.79192M       7.91548M    394.248M              8.57083           9.35662       3.68882G          1.21898G                    26.5002                     3.09191           9.35662M     1.2921M   45.9988M        409.17M/s   5.75174M   7.91467M   395.504M         8.59814    9.32732/s 3.68899G/s     1.21898G               26.5002                3.08208      1000k       9.32732M/s [BEST: throughput=  0.43 GB/s doc_throughput=     9 docs/s instructions=  1218976299 cycles=   394247645 branch_miss= 1294506 cache_miss= 5791919 cache_ref=   7915475 items=   1000000 avg_time= 107211898 ns]
large_random<simdjson_ondemand_unordered>/manual_time  107102768 ns    110476001 ns            7          1.3107M           431.057M        5.75547M       7.91808M    393.684M              8.55858           9.37106       3.68924G          1.22398G                    26.6089                     3.10903           9.37106M    1.30893M   45.9988M       409.587M/s   5.76378M    7.9188M   395.101M         8.58939    9.33683/s 3.68899G/s     1.22398G               26.6089                3.09788      1000k       9.33683M/s [BEST: throughput=  0.43 GB/s doc_throughput=     9 docs/s instructions=  1223976297 cycles=   393684050 branch_miss= 1310697 cache_miss= 5755470 cache_ref=   7918081 items=   1000000 avg_time= 107102767 ns]
large_random<yyjson>/manual_time                       117616930 ns    121031848 ns            6         676.333k           391.253M        5.85961M       8.97307M     313.94M              6.82495           8.50573       2.67028G          855.681M                    18.6023                     2.72562           8.50573M     679.08k   45.9988M       372.972M/s   5.86726M   8.98238M    314.15M         6.82954    8.50218/s 2.67096G/s     855.681M               18.6023                2.72379      1000k       8.50218M/s [BEST: throughput=  0.39 GB/s doc_throughput=     8 docs/s instructions=   855680945 cycles=   313939533 branch_miss=  676333 cache_miss= 5859615 cache_ref=   8973069 items=   1000000 avg_time= 117616930 ns]
large_random<yyjson_insitu>/manual_time                 99471560 ns    102890939 ns            7         677.017k           462.786M        5.02333M         7.693M    281.679M              6.12363           10.0608       2.83393G           849.56M                    18.4692                     3.01605           10.0608M    679.315k   45.9988M       441.009M/s   5.01978M   7.68332M   281.956M         6.12964    10.0531/s 2.83454G/s      849.56M               18.4692                 3.0131      1000k       10.0531M/s [BEST: throughput=  0.46 GB/s doc_throughput=    10 docs/s instructions=   849560393 cycles=   281679443 branch_miss=  677017 cache_miss= 5023333 cache_ref=   7692996 items=   1000000 avg_time=  99471559 ns]
large_random<rapidjson>/manual_time                    213869175 ns    217288777 ns            3         584.942k           220.917M        7.04783M       10.7132M    710.237M              15.4404           4.80267       3.41104G          2.01514G                    43.8086                     2.83728           4.80267M    585.006k   45.9988M       205.115M/s   6.54466M   10.0659M   712.419M         15.4878    4.67576/s  3.3311G/s     2.01515G               43.8088                 2.8286      1000k       4.67576M/s [BEST: throughput=  0.22 GB/s doc_throughput=     4 docs/s instructions=  2015142430 cycles=   710237395 branch_miss=  584942 cache_miss= 7047831 cache_ref=  10713197 items=   1000000 avg_time= 213869175 ns]
large_random<rapidjson_lossless>/manual_time           246581006 ns    250021887 ns            3         582.907k           191.118M        7.04222M       10.7403M    829.677M              18.0369           4.15484       3.44718G          2.48011G                    53.9169                     2.98925           4.15484M    582.576k   45.9988M       177.904M/s   6.55679M   10.0889M   832.628M         18.1011    4.05546/s 3.37669G/s     2.48012G               53.9171                2.97866      1000k       4.05546M/s [BEST: throughput=  0.19 GB/s doc_throughput=     4 docs/s instructions=  2480109557 cycles=   829677413 branch_miss=  582907 cache_miss= 7042217 cache_ref=  10740332 items=   1000000 avg_time= 246581005 ns]
large_random<rapidjson_insitu>/manual_time             228335312 ns    231752697 ns            3          583.44k           206.357M        8.12476M       12.2674M    764.494M              16.6199           4.48614       3.42962G          1.73714G                     37.765                     2.27228           4.48614M    583.843k   45.9988M        192.12M/s    7.6407M   11.6119M   765.816M         16.6486    4.37952/s 3.35391G/s     1.73715G               37.7652                2.26837      1000k       4.37952M/s [BEST: throughput=  0.21 GB/s doc_throughput=     4 docs/s instructions=  1737142279 cycles=   764493832 branch_miss=  583440 cache_miss= 8124755 cache_ref=  12267425 items=   1000000 avg_time= 228335312 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                        93110609 ns    103430001 ns            8         1023.96k           1.47615G        15.8229M       22.0757M    343.143M              2.49913           10.7508       3.68908G          984.675M                    7.17144                     2.86957           5.63654M    1024.46k   137.305M       1.37337G/s   15.8668M   22.1808M   343.488M         2.50165    10.7399/s 3.68904G/s     984.675M               7.17144                2.86669   524.288k       5.63081M/s [BEST: throughput=  1.48 GB/s doc_throughput=    10 docs/s instructions=   984674892 cycles=   343143338 branch_miss= 1023957 cache_miss=15822885 cache_ref=  22075740 items=    524288 avg_time=  93110609 ns]
kostya<simdjson_ondemand>/manual_time                  199761702 ns    210096841 ns            4         688.242k           688.589M        10.3643M       14.1117M    735.706M              5.35819           5.01503       3.68959G          2.21249G                    16.1137                      3.0073           2.62932M    692.841k   137.305M       655.502M/s   10.3339M   14.1112M   737.045M         5.36794    5.00596/s 3.68962G/s     2.21249G               16.1137                3.00184   524.288k       2.62457M/s [BEST: throughput=  0.69 GB/s doc_throughput=     5 docs/s instructions=  2212492362 cycles=   735706095 branch_miss=  688242 cache_miss=10364310 cache_ref=  14111694 items=    524288 avg_time= 199761702 ns]
kostya<yyjson>/manual_time                             174027153 ns    184400085 ns            4         422.258k           790.356M        11.2795M       16.2879M    445.188M              3.24233            5.7562       2.56259G          974.185M                    7.09504                     2.18826           3.01791M    422.815k   137.305M       752.436M/s   11.2818M   16.3361M   445.162M         3.24214    5.74623/s   2.558G/s     974.185M               7.09504                2.18838   524.288k       3.01268M/s [BEST: throughput=  0.79 GB/s doc_throughput=     5 docs/s instructions=   974184696 cycles=   445187564 branch_miss=  422258 cache_miss=11279463 cache_ref=  16287936 items=    524288 avg_time= 174027153 ns]
kostya<yyjson_insitu>/manual_time                      120147552 ns    130521550 ns            6         414.897k            1.1433G        8.72542M       12.4089M    349.204M              2.54328           8.32675       2.90774G          955.915M                    6.96198                     2.73741           4.36562M     415.69k   137.305M       1089.86M/s    8.7234M   12.3922M   349.291M          2.5439     8.3231/s 2.90718G/s     955.915M               6.96198                2.73673   524.288k        4.3637M/s [BEST: throughput=  1.14 GB/s doc_throughput=     8 docs/s instructions=   955915018 cycles=   349204390 branch_miss=  414897 cache_miss= 8725418 cache_ref=  12408889 items=    524288 avg_time= 120147552 ns]
kostya<rapidjson>/manual_time                          276166880 ns    286537198 ns            3         957.251k           503.035M        8.32475M       12.0527M    926.071M              6.74463           3.66363       3.39279G          2.73924G                    19.9501                     2.95792            1.9208M    956.095k   137.305M       474.149M/s   8.03156M    11.772M   928.501M         6.76233      3.621/s  3.3621G/s     2.73925G               19.9501                2.95018   524.288k       1.89845M/s [BEST: throughput=  0.50 GB/s doc_throughput=     3 docs/s instructions=  2739244814 cycles=   926071300 branch_miss=  957251 cache_miss= 8324745 cache_ref=  12052701 items=    524288 avg_time= 276166879 ns]
kostya<rapidjson_lossless>/manual_time                 296602192 ns    306996756 ns            2         964.785k           466.878M         8.3146M       12.1688M    1003.88M              7.31133            3.4003        3.4135G           3.0082G                    21.9089                     2.99656           1.78274M    963.229k   137.305M       441.481M/s   8.09588M   11.8965M   1006.06M         7.32721    3.37152/s 3.39196G/s      3.0082G               21.9089                2.99007   524.288k       1.76765M/s [BEST: throughput=  0.47 GB/s doc_throughput=     3 docs/s instructions=  3008195250 cycles=  1003881669 branch_miss=  964785 cache_miss= 8314603 cache_ref=  12168833 items=    524288 avg_time= 296602192 ns]
kostya<rapidjson_insitu>/manual_time                   263900521 ns    274242410 ns            3          1071.3k           525.275M        12.0235M       16.0489M    883.431M              6.43408            3.8256       3.37966G          2.22201G                     16.183                      2.5152           2.00572M    1009.66k   137.305M       496.188M/s   11.7222M   15.6488M   883.243M         6.43271    3.78931/s 3.34688G/s     2.22201G                16.183                2.51574   524.288k       1.98669M/s [BEST: throughput=  0.53 GB/s doc_throughput=     3 docs/s instructions=  2222009408 cycles=   883431054 branch_miss= 1071297 cache_miss=12023511 cache_ref=  16048924 items=    524288 avg_time= 263900520 ns]
distinct_user_id<simdjson_dom>/manual_time                266067 ns       296296 ns         2630           3.531k           2.39129G               0        88.361k    975.152k              1.54415          3.78659k        3.6925G          2.91782M                    4.62036                     2.99217           435.458k    3.72329k   631.515k       2.21051G/s    9.55513   88.3191k   981.986k         1.55497   3.75846k/s 3.69075G/s     2.91782M               4.62036                2.97135        115       432.222k/s [BEST: throughput=  2.39 GB/s doc_throughput=  3786 docs/s instructions=     2917824 cycles=      975152 branch_miss=    3531 cache_miss=       0 cache_ref=     88361 items=       115 avg_time=    266066 ns]
distinct_user_id<simdjson_ondemand>/manual_time          1211212 ns      1240412 ns          578          32.248k           526.223M               0        53.916k    4.43021M              7.01521           833.272       3.69157G          10.6053M                    16.7934                     2.39386           95.8262k    33.3202k   631.515k       497.237M/s   0.628028   53.9603k   4.46913M         7.07685    825.619/s  3.6898G/s     10.6053M               16.7934                2.37301        115       94.9462k/s [BEST: throughput=  0.53 GB/s doc_throughput=   833 docs/s instructions=    10605298 cycles=     4430209 branch_miss=   32248 cache_miss=       0 cache_ref=     53916 items=       115 avg_time=   1211211 ns]
distinct_user_id<yyjson>/manual_time                      621786 ns       655121 ns         1335           9.734k             1.838G             371        72.656k    1.26882M              2.00917          2.91046k       3.69285G          2.87785M                    4.55706                     2.26813           334.703k    7.68308k   631.515k       968.597M/s    1074.37    48.296k    1.4907M         2.36052   1.60827k/s 2.39745G/s     2.87833M               4.55782                1.93085        115       184.951k/s [BEST: throughput=  1.84 GB/s doc_throughput=  2910 docs/s instructions=     2877850 cycles=     1268820 branch_miss=    9734 cache_miss=     371 cache_ref=     72656 items=       115 avg_time=    621785 ns]
distinct_user_id<yyjson_insitu>/manual_time               419307 ns       451622 ns         1669           7.231k           2.07004G             598        44.228k    1.12319M              1.77857          3.27789k       3.68171G          2.87774M                    4.55688                      2.5621           376.958k     7.4494k   631.515k       1.40266G/s    65.3913   30.5586k   1.21534M         1.92448   2.38489k/s 2.89845G/s       2.878M               4.55729                2.36807        115       274.262k/s [BEST: throughput=  2.07 GB/s doc_throughput=  3277 docs/s instructions=     2877737 cycles=     1123194 branch_miss=    7231 cache_miss=     598 cache_ref=     44228 items=       115 avg_time=    419306 ns]
distinct_user_id<rapidjson>/manual_time                  2361736 ns      2392410 ns          296           29.53k           288.926M          8.878k        53.703k    8.06854M              12.7765           457.513       3.69146G          21.8224M                    34.5557                     2.70463            52.614k    30.0056k   631.515k       255.007M/s    2.7381k   36.0264k   8.20226M         12.9882    423.417/s 3.47298G/s      21.823M               34.5566                2.66061        115        48.693k/s [BEST: throughput=  0.29 GB/s doc_throughput=   457 docs/s instructions=    21822413 cycles=     8068539 branch_miss=   29530 cache_miss=    8878 cache_ref=     53703 items=       115 avg_time=   2361736 ns]
distinct_user_id<rapidjson_insitu>/manual_time           1581273 ns      1611525 ns          435          24.905k           435.565M              17        43.238k    5.35226M              8.47527           689.714       3.69153G           13.289M                    21.0431                     2.48288           79.3171k    31.4703k   631.515k        380.87M/s   3.00459k   36.4777k   5.56913M         8.81869    632.402/s 3.52193G/s     13.2895M               21.0439                2.38628        115       72.7262k/s [BEST: throughput=  0.44 GB/s doc_throughput=   689 docs/s instructions=    13289003 cycles=     5352260 branch_miss=   24905 cache_miss=      17 cache_ref=     43238 items=       115 avg_time=   1581273 ns]
find_tweet<simdjson_dom>/manual_time                      254102 ns       282850 ns         2757           3.261k           2.50268G               0        78.102k    931.798k               1.4755          3.96299k        3.6927G           2.8325M                    4.48525                     3.03983           3.96299k    3.39906k   631.515k        2.3146G/s    9.76786   78.1845k   937.824k         1.48504   3.93543k/s 3.69074G/s      2.8325M               4.48525                 3.0203          1       3.93543k/s [BEST: throughput=  2.50 GB/s doc_throughput=  3962 docs/s instructions=     2832504 cycles=      931798 branch_miss=    3261 cache_miss=       0 cache_ref=     78102 items=         1 avg_time=    254102 ns]
find_tweet<simdjson_ondemand>/manual_time                1164002 ns      1192179 ns          602          31.802k           547.536M               0        31.385k    4.25783M              6.74225            867.02       3.69163G          10.0995M                    15.9925                     2.37198             867.02    32.7499k   631.515k       517.404M/s   0.895349   31.3586k     4.295M          6.8011    859.105/s 3.68986G/s     10.0995M               15.9925                2.35146          1        859.105/s [BEST: throughput=  0.55 GB/s doc_throughput=   867 docs/s instructions=    10099498 cycles=     4257834 branch_miss=   31802 cache_miss=       0 cache_ref=     31385 items=         1 avg_time=   1164001 ns]
find_tweet<yyjson>/manual_time                            610343 ns       640873 ns         1248           9.761k           1.89012G             262         64.69k    1.23399M              1.95402            2.993k       3.69333G          2.81715M                    4.46094                     2.28296             2.993k     7.3983k   631.515k       986.756M/s    1028.37   39.7653k   1.45269M         2.30033   1.63842k/s 2.38012G/s     2.81763M                4.4617                 1.9396          1       1.63842k/s [BEST: throughput=  1.89 GB/s doc_throughput=  2992 docs/s instructions=     2817152 cycles=     1233990 branch_miss=    9761 cache_miss=     262 cache_ref=     64690 items=         1 avg_time=    610343 ns]
find_tweet<yyjson_insitu>/manual_time                     408649 ns       438624 ns         1714           6.894k           2.14195G             503        36.013k     1085.1k              1.71825          3.39176k       3.68039G          2.81704M                    4.46076                     2.59611           3.39176k    7.19056k   631.515k       1.43924G/s    14.5624   22.0133k   1.17744M         1.86447   2.44709k/s  2.8813G/s      2.8173M               4.46118                2.39274          1       2.44709k/s [BEST: throughput=  2.14 GB/s doc_throughput=  3391 docs/s instructions=     2817039 cycles=     1085098 branch_miss=    6894 cache_miss=     503 cache_ref=     36013 items=         1 avg_time=    408648 ns]
find_tweet<rapidjson>/manual_time                        2351007 ns      2379973 ns          297          29.177k           290.397M         21.592k        47.279k    8.02773M              12.7119           459.842       3.69149G          21.7386M                     34.423                     2.70794            459.842    29.9195k   631.515k       256.171M/s   2.32854k   28.2194k   8.16359M          12.927     425.35/s 3.47238G/s     21.7393M               34.4241                2.66296          1         425.35/s [BEST: throughput=  0.29 GB/s doc_throughput=   459 docs/s instructions=    21738648 cycles=     8027735 branch_miss=   29177 cache_miss=   21592 cache_ref=     47279 items=         1 avg_time=   2351006 ns]
find_tweet<rapidjson_insitu>/manual_time                 1564623 ns      1594159 ns          437          25.164k           440.558M              95        34.532k    5.29167M              8.37932            697.62       3.69157G          13.2112M                    20.9199                     2.49661             697.62    31.7385k   631.515k       384.923M/s   2.73667k   27.3836k   5.50887M         8.72326    639.132/s 3.52089G/s     13.2115M               20.9204                2.39823          1        639.132/s [BEST: throughput=  0.44 GB/s doc_throughput=   697 docs/s instructions=    13211222 cycles=     5291669 branch_miss=   25164 cache_miss=      95 cache_ref=     34532 items=         1 avg_time=   1564622 ns]
