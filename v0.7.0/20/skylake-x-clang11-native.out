run_benchmark: v0.8.0~18 /home/jkeiser/simdjson_benchmark_results/v0.7.0/20/skylake-x-clang11-native.json -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native
git reset --hard v0.8.0~18
HEAD is now at ce175642 Merge pull request #1360 from simdjson/jkeiser/ondemand-docs
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- git Version: v0.2.1-ce175642
-- Version: 0.2.1
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES -- failed to compile
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 10
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
make[3]: Nothing to be done for '_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build'.
[ 80%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
make[3]: Nothing to be done for 'jsonexamples/generated/CMakeFiles/generated-data.dir/build'.
[ 80%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/clang++-11  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/src  -march=native -O3 -DNDEBUG -fPIC   -pthread -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/clang++-11 -fPIC -march=native -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.6 -o ../libsimdjson.so.6.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.6.0.0 ../libsimdjson.so.6 ../libsimdjson.so
[ 80%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
make[3]: Nothing to be done for 'dependencies/CMakeFiles/yyjson.dir/build'.
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/clang++-11  -march=native -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.6.0.0 ../_deps/google_benchmarks/src/libbenchmark.a ../dependencies/libyyjson.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/20/skylake-x-clang11-native.json --benchmark_out_format=json
2021-01-24 23:17:55
Running benchmark/bench_ondemand
Run on (4 X 3200 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 1024 KiB (x4)
  L3 Unified 8448 KiB (x1)
Load Average: 0.97, 0.89, 0.93
***WARNING*** CPU scaling is enabled, the benchmark real time measurements may be noisy and will incur extra overhead.
simdjson::dom implementation:      haswell
simdjson::ondemand implementation: haswell

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                  321720 ns       391122 ns         2177           3.677k           1.97785G               0        33.289k    1019.75k              1.61476          3.13191k       3.19375G          2.93219M                     4.6431                     2.87541           313.191k     3.8314k   631.515k       1.82812G/s   0.374368   33.3939k   1026.58k         1.62558   3.10829k/s  3.1909G/s     2.93219M                4.6431                2.85628        100       310.829k/s [BEST: throughput=  1.98 GB/s doc_throughput=  3131 docs/s instructions=     2932189 cycles=     1019746 branch_miss=    3677 cache_miss=       0 cache_ref=     33289 items=       100 avg_time=    321720 ns]
partial_tweets<simdjson_ondemand>/manual_time             211174 ns       266080 ns         3310           2.143k           3.03501G               0        11.206k    664.796k               1.0527          4.80591k       3.19495G          1.87911M                    2.97556                     2.82659           480.591k    2.37988k   631.515k       2.78512G/s  0.0567976    11.257k   673.955k          1.0672   4.73543k/s 3.19147G/s     1.87911M               2.97556                2.78818        100       473.543k/s [BEST: throughput=  3.04 GB/s doc_throughput=  4805 docs/s instructions=     1879108 cycles=      664796 branch_miss=    2143 cache_miss=       0 cache_ref=     11206 items=       100 avg_time=    211174 ns]
partial_tweets<yyjson>/manual_time                        793249 ns       871668 ns          882           9.728k           1.41714G             249        28.139k    1.42349M              2.25409          2.24403k       3.19436G          2.91951M                    4.62303                     2.05095           224.403k    7.69209k   631.515k       759.231M/s    648.009    25.871k   1.57836M         2.49932   1.26064k/s 1.98974G/s        2.92M                4.6238                1.85002        100       126.064k/s [BEST: throughput=  1.42 GB/s doc_throughput=  2244 docs/s instructions=     2919511 cycles=     1423491 branch_miss=    9728 cache_miss=     249 cache_ref=     28139 items=       100 avg_time=    793249 ns]
partial_tweets<yyjson_insitu>/manual_time                 518759 ns       582771 ns         1362           7.238k            1.7394G              99        15.356k    1.15962M              1.83625          2.75434k       3.19397G           2.9194M                    4.62285                     2.51756           275.434k    7.40271k   631.515k       1.13375G/s    138.922   12.5403k   1.26327M         2.00037   1.92768k/s 2.43517G/s     2.91967M               4.62327                2.31121        100       192.768k/s [BEST: throughput=  1.74 GB/s doc_throughput=  2754 docs/s instructions=     2919402 cycles=     1159617 branch_miss=    7238 cache_miss=      99 cache_ref=     15356 items=       100 avg_time=    518759 ns]
partial_tweets<rapidjson>/manual_time                    2842860 ns      2909271 ns          245          29.075k            244.14M         12.629k         22.84k    8.25851M              13.0773           386.594       3.19269G          21.8951M                    34.6707                     2.65121           38.6594k    29.3287k   631.515k        211.85M/s      501.8   15.9815k   8.40346M         13.3068    351.758/s 2.95599G/s     21.8959M               34.6721                2.60558        100       35.1758k/s [BEST: throughput=  0.24 GB/s doc_throughput=   386 docs/s instructions=    21895077 cycles=     8258508 branch_miss=   29075 cache_miss=   12629 cache_ref=     22840 items=       100 avg_time=   2842859 ns]
partial_tweets<rapidjson_insitu>/manual_time             1799883 ns      1860682 ns          389          31.258k           373.679M             721        17.677k    5.39613M              8.54474           591.719       3.19299G            13.32M                    21.0922                     2.46844           59.1719k    26.2911k   631.515k       334.611M/s    243.254   10.4827k   5.34822M         8.46887    555.592/s 2.97143G/s     13.3203M               21.0927                2.49061        100       55.5592k/s [BEST: throughput=  0.37 GB/s doc_throughput=   591 docs/s instructions=    13320040 cycles=     5396129 branch_miss=   31258 cache_miss=     721 cache_ref=     17677 items=       100 avg_time=   1799882 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                 102175865 ns    108104507 ns            7         898.415k           450.881M        6.81809M       6.89593M    325.322M               7.0724           9.80201       3.18881G          1020.45M                    22.1843                     3.13675           9.80201M    900.787k   45.9988M       429.337M/s   6.80748M   6.89589M   325.796M         7.08272    9.78705/s 3.18858G/s     1020.45M               22.1843                3.13218      1000k       9.78705M/s [BEST: throughput=  0.45 GB/s doc_throughput=     9 docs/s instructions=  1020451782 cycles=   325321586 branch_miss=  898415 cache_miss= 6818093 cache_ref=   6895925 items=   1000000 avg_time= 102175865 ns]
large_random<simdjson_ondemand>/manual_time             72424141 ns     78269229 ns           10         951.366k            635.65M        3.49545M       3.57289M    230.776M              5.01701           13.8188       3.18906G          653.908M                    14.2158                     2.83351           13.8188M    950.749k   45.9988M       605.708M/s   3.51918M   3.57299M    230.91M         5.01992    13.8076/s  3.1883G/s     653.908M               14.2158                2.83187      1000k       13.8076M/s [BEST: throughput=  0.64 GB/s doc_throughput=    13 docs/s instructions=   653907679 cycles=   230776301 branch_miss=  951366 cache_miss= 3495454 cache_ref=   3572888 items=   1000000 avg_time=  72424140 ns]
large_random<simdjson_ondemand_unordered>/manual_time   72552853 ns     78433266 ns           10         896.112k           634.391M        3.50768M       3.57286M    231.166M              5.02547           13.7915       3.18811G          654.908M                    14.2375                     2.83307           13.7915M    898.327k   45.9988M       604.633M/s   3.52366M   3.57284M    231.35M         5.02947    13.7831/s  3.1887G/s     654.908M               14.2375                2.83081      1000k       13.7831M/s [BEST: throughput=  0.63 GB/s doc_throughput=    13 docs/s instructions=   654907678 cycles=   231165547 branch_miss=  896112 cache_miss= 3507680 cache_ref=   3572861 items=   1000000 avg_time=  72552852 ns]
large_random<yyjson>/manual_time                       153475681 ns    159348996 ns            5         707.174k           299.964M        4.20885M       5.40523M    351.225M              7.63552           6.52113       2.29038G          855.681M                    18.6023                     2.43628           6.52113M    707.642k   45.9988M       285.829M/s    4.2108M   5.38896M   351.598M         7.64363    6.51569/s  2.2909G/s     855.681M               18.6023                2.43369      1000k       6.51569M/s [BEST: throughput=  0.30 GB/s doc_throughput=     6 docs/s instructions=   855681060 cycles=   351224700 branch_miss=  707174 cache_miss= 4208851 cache_ref=   5405233 items=   1000000 avg_time= 153475681 ns]
large_random<yyjson_insitu>/manual_time                127712507 ns    133644584 ns            5         705.836k           360.534M        3.49475M       4.67903M    309.026M              6.71814            7.8379       2.42212G           849.56M                    18.4692                     2.74915            7.8379M    708.099k   45.9988M       343.489M/s    3.4973M    4.6794M   309.409M         6.72646    7.83009/s  2.4227G/s      849.56M               18.4692                2.74575      1000k       7.83009M/s [BEST: throughput=  0.36 GB/s doc_throughput=     7 docs/s instructions=   849560194 cycles=   309026439 branch_miss=  705836 cache_miss= 3494750 cache_ref=   4679034 items=   1000000 avg_time= 127712506 ns]
large_random<rapidjson>/manual_time                    249883489 ns    255812517 ns            3         600.449k           190.106M        4.35305M       5.21536M    704.352M              15.3124           4.13284       2.91097G          2.00013G                    43.4822                     2.83967           4.13284M    589.875k   45.9988M       175.553M/s   4.08548M   5.14938M   708.135M         15.3946    4.00187/s 2.83386G/s     2.00014G               43.4824                2.82451      1000k       4.00187M/s [BEST: throughput=  0.19 GB/s doc_throughput=     4 docs/s instructions=  2000126193 cycles=   704351669 branch_miss=  600449 cache_miss= 4353046 cache_ref=   5215359 items=   1000000 avg_time= 249883488 ns]
large_random<rapidjson_lossless>/manual_time           286117506 ns    292102402 ns            2         585.348k           164.215M        4.35696M       5.21197M    825.175M              17.9391           3.56999       2.94587G          2.47709G                    53.8513                      3.0019           3.56999M      584.6k   45.9988M       153.321M/s   4.15233M   5.16158M    828.38M         18.0088    3.49507/s 2.89525G/s      2.4771G               53.8514                2.99029      1000k       3.49507M/s [BEST: throughput=  0.16 GB/s doc_throughput=     3 docs/s instructions=  2477093966 cycles=   825175469 branch_miss=  585348 cache_miss= 4356956 cache_ref=   5211967 items=   1000000 avg_time= 286117505 ns]
large_random<rapidjson_insitu>/manual_time             279160474 ns    285088018 ns            3         600.252k            169.62M        5.04267M       5.93667M    797.614M              17.3399           3.68749       2.94119G          1.72813G                     37.569                     2.16662           3.68749M    599.545k   45.9988M       157.142M/s   4.78093M   5.87053M   801.581M         17.4261    3.58217/s  2.8714G/s     1.72813G               37.5691                2.15591      1000k       3.58217M/s [BEST: throughput=  0.17 GB/s doc_throughput=     3 docs/s instructions=  1728126044 cycles=   797614486 branch_miss=  600252 cache_miss= 5042673 cache_ref=   5936668 items=   1000000 avg_time= 279160474 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                       109395199 ns    127626614 ns            6         1038.91k           1.25682G        10.2209M       10.3204M     348.37M               2.5372           9.15348        3.1888G          971.996M                     7.0791                     2.79013           4.79906M    1040.33k   137.305M       1.16893G/s   10.2484M   10.3201M   348.814M         2.54043    9.14117/s 3.18857G/s     971.996M                7.0791                2.78657   524.288k       4.79261M/s [BEST: throughput=  1.26 GB/s doc_throughput=     9 docs/s instructions=   971995679 cycles=   348369718 branch_miss= 1038909 cache_miss=10220942 cache_ref=  10320375 items=    524288 avg_time= 109395198 ns]
kostya<simdjson_ondemand>/manual_time                   68142645 ns     86420277 ns           10         464.782k           2.01812G        6.42059M       6.47085M    216.956M              1.58011           14.6981       3.18884G          641.407M                     4.6714                     2.95638           7.70603M    464.364k   137.305M       1.87658G/s   6.43675M   6.47077M   217.258M          1.5823    14.6751/s 3.18829G/s     641.407M                4.6714                2.95228   524.288k       7.69398M/s [BEST: throughput=  2.02 GB/s doc_throughput=    14 docs/s instructions=   641406589 cycles=   216956399 branch_miss=  464782 cache_miss= 6420594 cache_ref=   6470845 items=    524288 avg_time=  68142645 ns]
kostya<yyjson>/manual_time                             228615263 ns    246908984 ns            3         431.781k           601.237M        8.49667M       9.93237M     499.14M              3.63526           4.37884       2.18566G          974.185M                    7.09504                     1.95173           2.29578M    438.024k   137.305M       572.771M/s   8.49582M   9.93303M   500.036M         3.64179    4.37416/s 2.18724G/s     974.185M               7.09504                1.94823   524.288k       2.29332M/s [BEST: throughput=  0.60 GB/s doc_throughput=     4 docs/s instructions=   974184802 cycles=   499139653 branch_miss=  431781 cache_miss= 8496674 cache_ref=   9932366 items=    524288 avg_time= 228615262 ns]
kostya<yyjson_insitu>/manual_time                      151521332 ns    169766365 ns            5         448.133k           906.663M         6.3601M       7.79302M    372.792M              2.71507           6.60327       2.46165G          955.915M                    6.96198                      2.5642           3.46202M    448.255k   137.305M       864.197M/s   6.36043M   7.79556M   373.035M         2.71684    6.59973/s 2.46193G/s     955.915M               6.96198                2.56253   524.288k       3.46016M/s [BEST: throughput=  0.91 GB/s doc_throughput=     6 docs/s instructions=   955915026 cycles=   372792297 branch_miss=  448133 cache_miss= 6360097 cache_ref=   7793018 items=    524288 avg_time= 151521331 ns]
kostya<rapidjson>/manual_time                          321132233 ns    339485317 ns            2         971.228k           431.845M        5.19671M        6.4682M    918.438M              6.68904           3.14515       2.88863G          2.73082G                    19.8887                     2.97333           1.64897M    971.509k   137.305M       407.758M/s   5.07517M    6.4361M   920.206M         6.70191    3.11398/s 2.86551G/s     2.73082G               19.8887                2.96762   524.288k       1.63262M/s [BEST: throughput=  0.43 GB/s doc_throughput=     3 docs/s instructions=  2730822324 cycles=   918438054 branch_miss=  971228 cache_miss= 5196710 cache_ref=   6468201 items=    524288 avg_time= 321132233 ns]
kostya<rapidjson_lossless>/manual_time                 347744115 ns    366084798 ns            2         978.338k           398.725M        5.20277M       6.47172M    1002.66M              7.30244           2.90393       2.91166G          3.00711G                     21.901                     2.99913            1.5225M    979.653k   137.305M       376.553M/s   5.08284M   6.43648M   1005.11M         7.32024    2.87568/s 2.89036G/s     3.00711G                21.901                2.99184   524.288k       1.50768M/s [BEST: throughput=  0.40 GB/s doc_throughput=     2 docs/s instructions=  3007113095 cycles=  1002661984 branch_miss=  978338 cache_miss= 5202775 cache_ref=   6471724 items=    524288 avg_time= 347744115 ns]
kostya<rapidjson_insitu>/manual_time                   316556468 ns    334956155 ns            2         993.257k             437.8M        7.33998M       8.61604M    904.525M              6.58771           3.18852        2.8841G          2.21411G                    16.1255                     2.44782            1.6717M    964.252k   137.305M       413.652M/s   7.21543M   8.58252M   905.452M         6.59446    3.15899/s 2.86032G/s     2.21411G               16.1255                2.44531   524.288k       1.65622M/s [BEST: throughput=  0.44 GB/s doc_throughput=     3 docs/s instructions=  2214111197 cycles=   904524899 branch_miss=  993257 cache_miss= 7339985 cache_ref=   8616038 items=    524288 avg_time= 316556468 ns]
distinct_user_id<simdjson_dom>/manual_time                315238 ns       392569 ns         2220           3.729k           2.01767G               1        34.121k    999.791k              1.58316          3.19497k        3.1943G          2.86747M                    4.54061                     2.86806           367.422k    3.90494k   631.515k       1.86572G/s   0.234685   34.1432k      1006k           1.593   3.17221k/s 3.19125G/s     2.86747M               4.54061                2.85036        115       364.804k/s [BEST: throughput=  2.02 GB/s doc_throughput=  3194 docs/s instructions=     2867465 cycles=      999791 branch_miss=    3729 cache_miss=       1 cache_ref=     34121 items=       115 avg_time=    315237 ns]
distinct_user_id<simdjson_ondemand>/manual_time           183889 ns       243570 ns         3807           2.063k           3.48092G               0         8.726k    579.518k             0.917663          5.51201k       3.19431G          1.82797M                    2.89458                     3.15429           633.881k    2.26783k   631.515k       3.19836G/s  0.0593643   8.74131k   586.864k        0.929295   5.43805k/s 3.19139G/s     1.82797M               2.89458                3.11481        115       625.376k/s [BEST: throughput=  3.48 GB/s doc_throughput=  5512 docs/s instructions=     1827969 cycles=      579518 branch_miss=    2063 cache_miss=       0 cache_ref=      8726 items=       115 avg_time=    183889 ns]
distinct_user_id<yyjson>/manual_time                      786941 ns       874057 ns          975           9.722k           1.43422G             211        27.603k    1.40659M              2.22732          2.27109k       3.19448G          2.87779M                    4.55697                     2.04594           261.175k    7.71902k   631.515k       765.318M/s    491.767   25.6845k   1.56158M         2.47275   1.27074k/s 1.98437G/s     2.87819M                4.5576                1.84313        115       146.136k/s [BEST: throughput=  1.43 GB/s doc_throughput=  2271 docs/s instructions=     2877794 cycles=     1406588 branch_miss=    9722 cache_miss=     211 cache_ref=     27603 items=       115 avg_time=    786940 ns]
distinct_user_id<yyjson_insitu>/manual_time               514533 ns       586873 ns         1374           7.273k           1.76422G             123        15.033k    1.14335M              1.81048          2.79362k       3.19408G           2.8776M                    4.55666                     2.51682           321.267k    7.50512k   631.515k       1.14307G/s    132.287   12.3419k   1.24953M         1.97863   1.94351k/s 2.42848G/s     2.87786M               4.55708                2.30315        115       223.504k/s [BEST: throughput=  1.76 GB/s doc_throughput=  2793 docs/s instructions=     2877599 cycles=     1143347 branch_miss=    7273 cache_miss=     123 cache_ref=     15033 items=       115 avg_time=    514532 ns]
distinct_user_id<rapidjson>/manual_time                  2813768 ns      2887381 ns          248          28.944k           244.556M          7.299k        22.853k    8.24467M              13.0554           387.252       3.19277G          21.8232M                     34.557                     2.64695            44.534k    29.3269k   631.515k        214.04M/s   1.84583k    17.255k   8.38424M         13.2764    355.395/s 2.97972G/s     21.8238M               34.5579                2.60296        115       40.8705k/s [BEST: throughput=  0.24 GB/s doc_throughput=   387 docs/s instructions=    21823246 cycles=     8244670 branch_miss=   28944 cache_miss=    7299 cache_ref=     22853 items=       115 avg_time=   2813768 ns]
distinct_user_id<rapidjson_insitu>/manual_time           1801952 ns      1870810 ns          383          24.887k           383.821M          7.152k        14.888k    5.25315M              8.31833           607.778       3.19275G          13.2534M                    20.9867                     2.52294           69.8945k    32.2149k   631.515k       334.226M/s   1.91081k   12.2726k   5.44894M         8.62836    554.954/s 3.02391G/s     13.2536M                20.987                2.43232        115       63.8197k/s [BEST: throughput=  0.38 GB/s doc_throughput=   607 docs/s instructions=    13253397 cycles=     5253150 branch_miss=   24887 cache_miss=    7152 cache_ref=     14888 items=       115 avg_time=   1801951 ns]
find_tweet<simdjson_dom>/manual_time                      301606 ns       374729 ns         2322           3.517k            2.1103G               6        30.792k    955.854k              1.51359          3.34165k       3.19413G          2.78229M                    4.40574                     2.91079           3.34165k    3.66364k   631.515k       1.95004G/s    4.69078   30.9062k   962.607k         1.52428   3.31558k/s  3.1916G/s     2.78229M               4.40574                2.89037          1       3.31558k/s [BEST: throughput=  2.11 GB/s doc_throughput=  3341 docs/s instructions=     2782291 cycles=      955854 branch_miss=    3517 cache_miss=       6 cache_ref=     30792 items=         1 avg_time=    301606 ns]
find_tweet<simdjson_ondemand>/manual_time                 128343 ns       189397 ns         5443           1.113k           4.95391G              12         7.485k    407.258k              0.64489          7.84449k       3.19473G          1.32098M                    2.09176                     3.24358           7.84449k    1.17309k   631.515k       4.58261G/s    12.3482   7.54485k   409.676k        0.648719   7.79164k/s 3.19205G/s     1.32098M               2.09176                3.22444          1       7.79164k/s [BEST: throughput=  4.95 GB/s doc_throughput=  7844 docs/s instructions=     1320975 cycles=      407258 branch_miss=    1113 cache_miss=      12 cache_ref=      7485 items=         1 avg_time=    128342 ns]
find_tweet<yyjson>/manual_time                            776206 ns       860918 ns          907           9.647k             1.455G             121        27.203k    1.38651M              2.19552          2.30398k       3.19448G          2.81716M                    4.46095                     2.03184           2.30398k     7.4134k   631.515k       775.902M/s    456.219   24.7862k   1.52806M         2.41968   1.28832k/s 1.96863G/s     2.81764M               4.46172                1.84393          1       1.28832k/s [BEST: throughput=  1.45 GB/s doc_throughput=  2303 docs/s instructions=     2817155 cycles=     1386505 branch_miss=    9647 cache_miss=     121 cache_ref=     27203 items=         1 avg_time=    776205 ns]
find_tweet<yyjson_insitu>/manual_time                     502109 ns       569024 ns         1000           6.754k           1.81526G          1.951k        13.568k    1.10576M              1.75097          2.87446k       3.17846G          2.81684M                    4.46045                     2.54742           2.87446k    7.23137k   631.515k       1.17135G/s      8.682   10.7484k   1.21092M         1.91748    1.9916k/s 2.41166G/s      2.8171M               4.46086                2.32642          1        1.9916k/s [BEST: throughput=  1.82 GB/s doc_throughput=  2874 docs/s instructions=     2816840 cycles=     1105761 branch_miss=    6754 cache_miss=    1951 cache_ref=     13568 items=         1 avg_time=    502109 ns]
find_tweet<rapidjson>/manual_time                        2792879 ns      2861789 ns          250          28.674k           246.487M         11.944k        21.125k    8.17974M              12.9526            390.31       3.19264G          21.7391M                    34.4237                     2.65768             390.31    29.1375k   631.515k       215.641M/s   1.52166k   14.4324k   8.31808M         13.1716    358.053/s 2.97832G/s     21.7399M               34.4251                2.61358          1        358.053/s [BEST: throughput=  0.25 GB/s doc_throughput=   390 docs/s instructions=    21739101 cycles=     8179740 branch_miss=   28674 cache_miss=   11944 cache_ref=     21125 items=         1 avg_time=   2792879 ns]
find_tweet<rapidjson_insitu>/manual_time                 1794323 ns      1858498 ns          385          35.861k           369.457M           6.07k         13.56k    5.45735M              8.64168           585.033       3.19273G          13.1746M                    20.8619                      2.4141            585.033    32.7087k   631.515k       335.647M/s   1.70303k    9.7569k   5.42406M         8.58897    557.313/s  3.0229G/s     13.1749M               20.8623                2.42897          1        557.313/s [BEST: throughput=  0.37 GB/s doc_throughput=   585 docs/s instructions=    13174593 cycles=     5457351 branch_miss=   35861 cache_miss=    6070 cache_ref=     13560 items=         1 avg_time=   1794322 ns]
