run_benchmark: v0.8.0~18 /home/jkeiser/simdjson_benchmark_results/v0.7.0/20/skylake-x-gcc10.2.json -DCMAKE_BUILD_TYPE=Release
git reset --hard v0.8.0~18
HEAD is now at ce175642 Merge pull request #1360 from simdjson/jkeiser/ondemand-docs
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- git Version: v0.2.1-ce175642
-- Version: 0.2.1
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 10
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
make[3]: Nothing to be done for '_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build'.
[ 80%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
make[3]: Nothing to be done for 'jsonexamples/generated/CMakeFiles/generated-data.dir/build'.
[ 80%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/g++-10  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/src  -O3 -DNDEBUG -fPIC   -pthread -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/g++-10 -fPIC -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.6 -o ../libsimdjson.so.6.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.6.0.0 ../libsimdjson.so.6 ../libsimdjson.so
[ 80%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
make[3]: Nothing to be done for 'dependencies/CMakeFiles/yyjson.dir/build'.
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/g++-10  -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.6.0.0 ../_deps/google_benchmarks/src/libbenchmark.a ../dependencies/libyyjson.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/20/skylake-x-gcc10.2.json --benchmark_out_format=json
2021-01-24 23:27:33
Running benchmark/bench_ondemand
Run on (4 X 3200 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 1024 KiB (x4)
  L3 Unified 8448 KiB (x1)
Load Average: 1.00, 1.00, 1.00
***WARNING*** CPU scaling is enabled, the benchmark real time measurements may be noisy and will incur extra overhead.
simdjson::dom implementation:      haswell
simdjson::ondemand implementation: fallback

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                  303362 ns       372569 ns         2308           3.882k           2.09705G               0        32.666k    961.813k              1.52302          3.32066k       3.19385G          2.96251M                    4.69112                     3.08013           332.066k    4.01245k   631.515k       1.93875G/s   0.644281   32.8966k   966.858k         1.53101   3.29639k/s 3.18714G/s     2.96251M               4.69112                3.06406        100       329.639k/s [BEST: throughput=  2.10 GB/s doc_throughput=  3320 docs/s instructions=     2962511 cycles=      961813 branch_miss=    3882 cache_miss=       0 cache_ref=     32666 items=       100 avg_time=    303362 ns]
partial_tweets<simdjson_ondemand>/manual_time            1291938 ns      1348554 ns          541          32.347k            492.15M               1        11.194k    4.09696M              6.48751           779.316       3.19283G          10.6861M                    16.9214                     2.60831           77.9316k    32.8504k   631.515k       466.168M/s     1.4695   11.2591k   4.12158M          6.5265    774.031/s 3.19023G/s     10.6861M               16.9214                2.59272        100       77.4031k/s [BEST: throughput=  0.49 GB/s doc_throughput=   779 docs/s instructions=    10686125 cycles=     4096959 branch_miss=   32347 cache_miss=       1 cache_ref=     11194 items=       100 avg_time=   1291937 ns]
partial_tweets<yyjson>/manual_time                        819084 ns       897547 ns          853           9.863k            1.3417G             255        28.556k    1.50313M               2.3802          2.12458k       3.19352G          2.90844M                     4.6055                     1.93492           212.458k    7.67087k   631.515k       735.284M/s    626.768   25.8319k   1.66125M         2.63058   1.22088k/s 2.02818G/s     2.90885M               4.60614                  1.751        100       122.088k/s [BEST: throughput=  1.34 GB/s doc_throughput=  2124 docs/s instructions=     2908443 cycles=     1503134 branch_miss=    9863 cache_miss=     255 cache_ref=     28556 items=       100 avg_time=    819084 ns]
partial_tweets<yyjson_insitu>/manual_time                 546110 ns       609681 ns         1294           6.922k           1.64629G          1.889k        14.605k     1.2206M              1.93282          2.60688k       3.18197G          2.90805M                    4.60487                     2.38247           260.688k    7.44579k   631.515k       1102.82M/s    111.651    12.083k    1.3497M         2.13724   1.83113k/s 2.47148G/s     2.90831M               4.60529                2.15478        100       183.113k/s [BEST: throughput=  1.65 GB/s doc_throughput=  2606 docs/s instructions=     2908046 cycles=     1220602 branch_miss=    6922 cache_miss=    1889 cache_ref=     14605 items=       100 avg_time=    546109 ns]
partial_tweets<rapidjson>/manual_time                    1923355 ns      1989489 ns          364           25.79k            381.47M          9.517k        22.582k    5.28565M              8.36979           604.055       3.19282G          13.4088M                    21.2327                     2.53683           60.4055k    26.5894k   631.515k        313.13M/s    406.462   15.8076k   5.46502M         8.65382    519.925/s  2.8414G/s     13.4097M               21.2342                2.45373        100       51.9925k/s [BEST: throughput=  0.38 GB/s doc_throughput=   604 docs/s instructions=    13408787 cycles=     5285648 branch_miss=   25790 cache_miss=    9517 cache_ref=     22582 items=       100 avg_time=   1923355 ns]
partial_tweets<rapidjson_insitu>/manual_time             1417976 ns      1478833 ns          499          25.357k           511.313M              47        14.628k     3.9434M              6.24435            809.66       3.19282G          9.75471M                    15.4465                     2.47368            80.966k    28.9608k   631.515k       424.732M/s    200.325   10.2035k   4.13183M         6.54273     705.23/s 2.91389G/s     9.75541M               15.4476                2.36104        100        70.523k/s [BEST: throughput=  0.51 GB/s doc_throughput=   809 docs/s instructions=     9754713 cycles=     3943402 branch_miss=   25357 cache_miss=      47 cache_ref=     14628 items=       100 avg_time=   1417976 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                 100497065 ns    106386635 ns            7         924.467k           458.536M        6.76853M       6.89576M    319.892M              6.95437           9.96844       3.18883G          983.113M                    21.3726                     3.07326           9.96844M    922.501k   45.9988M       436.509M/s   6.80075M   6.89606M   320.429M         6.96604    9.95054/s 3.18845G/s     983.113M               21.3726                3.06811      1000k       9.95054M/s [BEST: throughput=  0.46 GB/s doc_throughput=     9 docs/s instructions=   983112690 cycles=   319892405 branch_miss=  924467 cache_miss= 6768528 cache_ref=   6895756 items=   1000000 avg_time= 100497065 ns]
large_random<simdjson_ondemand>/manual_time            147573235 ns    153473844 ns            5         2.38649M           311.886M        3.49151M       3.57379M    470.392M              10.2262           6.78031       3.18941G          1.28297G                    27.8915                     2.72745           6.78031M    2.39036M   45.9988M       297.262M/s   3.52509M   3.57356M   470.694M         10.2328     6.7763/s 3.18956G/s     1.28297G               27.8915                2.72571      1000k        6.7763M/s [BEST: throughput=  0.31 GB/s doc_throughput=     6 docs/s instructions=  1282973823 cycles=   470392473 branch_miss= 2386494 cache_miss= 3491507 cache_ref=   3573787 items=   1000000 avg_time= 147573235 ns]
large_random<simdjson_ondemand_unordered>/manual_time  153371079 ns    159259620 ns            5         2.37461M            300.18M        3.53884M       3.57278M    488.803M              10.6264           6.52582       3.18984G          1.28697G                    27.9784                     2.63291           6.52582M    2.37364M   45.9988M       286.024M/s   3.52063M   3.57276M    489.19M         10.6349    6.52013/s 3.18959G/s     1.28697G               27.9784                2.63082      1000k       6.52013M/s [BEST: throughput=  0.30 GB/s doc_throughput=     6 docs/s instructions=  1286973836 cycles=   488803157 branch_miss= 2374614 cache_miss= 3538844 cache_ref=   3572785 items=   1000000 avg_time= 153371079 ns]
large_random<yyjson>/manual_time                       155894502 ns    161833073 ns            4         661.392k           295.272M        4.20895M       5.28321M    358.595M              7.79575           6.41913       2.30187G          944.149M                    20.5255                     2.63291           6.41913M    660.513k   45.9988M       281.394M/s    4.2091M   5.29223M   358.989M         7.80433    6.41459/s 2.30277G/s     944.149M               20.5255                2.63002      1000k       6.41459M/s [BEST: throughput=  0.30 GB/s doc_throughput=     6 docs/s instructions=   944149393 cycles=   358595081 branch_miss=  661392 cache_miss= 4208955 cache_ref=   5283209 items=   1000000 avg_time= 155894501 ns]
large_random<yyjson_insitu>/manual_time                129903935 ns    135845780 ns            5         658.421k           354.643M        3.49184M       4.57169M     315.55M              6.85996           7.70983       2.43284G          938.029M                    20.3925                     2.97268           7.70983M    660.326k   45.9988M       337.695M/s   3.49316M   4.57149M   316.092M         6.87175      7.698/s 2.43328G/s     938.029M               20.3925                2.96758      1000k         7.698M/s [BEST: throughput=  0.35 GB/s doc_throughput=     7 docs/s instructions=   938028836 cycles=   315549910 branch_miss=  658421 cache_miss= 3491835 cache_ref=   4571693 items=   1000000 avg_time= 129903935 ns]
large_random<rapidjson>/manual_time                    202476161 ns    208367948 ns            4         606.553k           238.112M        4.34812M       5.15216M     548.63M              11.9271           5.17649       2.83998G          1.65612G                    36.0037                     3.01865           5.17649M    605.155k   45.9988M       216.657M/s   4.04251M   5.05862M   553.982M         12.0434    4.93885/s 2.73604G/s     1.65613G               36.0039                2.98951      1000k       4.93885M/s [BEST: throughput=  0.24 GB/s doc_throughput=     5 docs/s instructions=  1656123918 cycles=   548630497 branch_miss=  606553 cache_miss= 4348125 cache_ref=   5152156 items=   1000000 avg_time= 202476160 ns]
large_random<rapidjson_lossless>/manual_time           235312911 ns    241242805 ns            3         646.699k            202.91M        4.34222M       5.18784M    655.691M              14.2545           4.41121       2.89239G          2.00709G                    43.6336                     3.06103           4.41121M    696.562k   45.9988M       186.423M/s   4.06458M   5.11414M   661.647M          14.384    4.24966/s 2.81178G/s      2.0071G               43.6338                3.03349      1000k       4.24966M/s [BEST: throughput=  0.20 GB/s doc_throughput=     4 docs/s instructions=  2007093318 cycles=   655691487 branch_miss=  646699 cache_miss= 4342215 cache_ref=   5187839 items=   1000000 avg_time= 235312910 ns]
large_random<rapidjson_insitu>/manual_time             186006641 ns    191944402 ns            4         583.494k           260.554M        5.02998M       5.88881M    495.779M              10.7781           5.66437       2.80827G          1.49112G                    32.4165                     3.00764           5.66437M    583.074k   45.9988M        235.84M/s   4.74189M    5.7862M   501.681M         10.9064    5.37615/s 2.69711G/s     1.49113G               32.4168                2.97227      1000k       5.37615M/s [BEST: throughput=  0.26 GB/s doc_throughput=     5 docs/s instructions=  1491121412 cycles=   495778662 branch_miss=  583494 cache_miss= 5029985 cache_ref=   5888814 items=   1000000 avg_time= 186006640 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                        96050070 ns    114237433 ns            7         516.514k           1.43218G         10.207M       10.3148M     305.71M               2.2265           10.4306       3.18875G          945.501M                    6.88614                     3.09281           5.46866M    516.879k   137.305M       1.33134G/s   10.2418M   10.3146M   306.261M         2.23051    10.4112/s 3.18855G/s     945.501M               6.88614                3.08724   524.288k       5.45849M/s [BEST: throughput=  1.43 GB/s doc_throughput=    10 docs/s instructions=   945501391 cycles=   305709878 branch_miss=  516514 cache_miss=10206972 cache_ref=  10314764 items=    524288 avg_time=  96050070 ns]
kostya<simdjson_ondemand>/manual_time                  344336552 ns    362644231 ns            2         3.33294M           398.849M        6.44343M       6.47191M    1098.18M              7.99812           2.90484       3.19004G           2.8802G                    20.9767                      2.6227           1.52297M    3.33318M   137.305M        380.28M/s   6.45089M   6.47185M   1098.41M         7.99979    2.90414/s 3.18994G/s      2.8802G               20.9767                2.62215   524.288k        1.5226M/s [BEST: throughput=  0.40 GB/s doc_throughput=     2 docs/s instructions=  2880202964 cycles=  1098182311 branch_miss= 3332939 cache_miss= 6443426 cache_ref=   6471909 items=    524288 avg_time= 344336552 ns]
kostya<yyjson>/manual_time                             256703390 ns    274902688 ns            3         414.112k           535.132M        8.49775M       10.0416M    588.836M              4.28852            3.8974       2.29493G          984.045M                    7.16686                     1.67117           2.04336M    414.165k   137.305M       510.099M/s   8.49659M   10.0368M   588.839M         4.28855    3.89555/s 2.29385G/s     984.045M               7.16686                1.67116   524.288k       2.04239M/s [BEST: throughput=  0.54 GB/s doc_throughput=     3 docs/s instructions=   984045134 cycles=   588835619 branch_miss=  414112 cache_miss= 8497747 cache_ref=  10041600 items=    524288 avg_time= 256703389 ns]
kostya<yyjson_insitu>/manual_time                      179317945 ns    197478131 ns            4         419.854k           766.392M        6.35884M       7.80828M    461.368M              3.36017           5.58167       2.57521G          965.775M                     7.0338                     2.09328            2.9264M    415.654k   137.305M       730.235M/s   6.35681M   7.80555M   461.496M          3.3611    5.57669/s 2.57362G/s     965.775M                7.0338                2.09271   524.288k       2.92379M/s [BEST: throughput=  0.77 GB/s doc_throughput=     5 docs/s instructions=   965775464 cycles=   461368471 branch_miss=  419854 cache_miss= 6358843 cache_ref=   7808284 items=    524288 avg_time= 179317944 ns]
kostya<rapidjson>/manual_time                          286478712 ns    304833802 ns            2         992.555k           484.465M        5.21248M       6.38905M    807.661M              5.88224           3.52838       2.84974G          2.29502G                    16.7148                     2.84157           1.84989M    984.371k   137.305M       457.082M/s   5.07694M   6.35266M   809.104M         5.89275    3.49066/s 2.82431G/s     2.29503G               16.7148                 2.8365   524.288k       1.83011M/s [BEST: throughput=  0.48 GB/s doc_throughput=     3 docs/s instructions=  2295024361 cycles=   807661395 branch_miss=  992555 cache_miss= 5212484 cache_ref=   6389051 items=    524288 avg_time= 286478711 ns]
kostya<rapidjson_lossless>/manual_time                 304993962 ns    323488547 ns            2          967.14k           455.249M        5.20358M       6.45032M     865.63M              6.30444            3.3156       2.87009G          2.49529G                    18.1734                     2.88263           1.73833M    970.817k   137.305M       429.334M/s   5.07463M   6.41526M   868.037M         6.32196    3.27875/s 2.84608G/s      2.4953G               18.1734                2.87464   524.288k       1.71901M/s [BEST: throughput=  0.46 GB/s doc_throughput=     3 docs/s instructions=  2495294328 cycles=   865630426 branch_miss=  967140 cache_miss= 5203584 cache_ref=   6450323 items=    524288 avg_time= 304993962 ns]
kostya<rapidjson_insitu>/manual_time                   270448951 ns    288786200 ns            3         1017.92k            517.08M        7.32691M        8.5568M    751.233M              5.47127           3.76592       2.82908G          2.03014G                    14.7856                     2.70241           1.97443M    1018.54k   137.305M       484.174M/s   7.15874M   8.50618M    755.51M         5.50242    3.69756/s 2.79354G/s     2.03014G               14.7857                2.68712   524.288k       1.93858M/s [BEST: throughput=  0.52 GB/s doc_throughput=     3 docs/s instructions=  2030142755 cycles=   751233349 branch_miss= 1017921 cache_miss= 7326912 cache_ref=   8556797 items=    524288 avg_time= 270448951 ns]
distinct_user_id<simdjson_dom>/manual_time                296953 ns       374283 ns         2358           4.024k           2.14292G              21        34.496k    941.266k              1.49049          3.39329k       3.19399G          2.90344M                    4.59757                     3.08461           390.229k    4.15678k   631.515k       1.98059G/s    12.4673   34.4519k   947.602k         1.50052   3.36753k/s 3.19108G/s     2.90344M               4.59757                3.06398        115       387.266k/s [BEST: throughput=  2.14 GB/s doc_throughput=  3393 docs/s instructions=     2903436 cycles=      941266 branch_miss=    4024 cache_miss=      21 cache_ref=     34496 items=       115 avg_time=    296953 ns]
distinct_user_id<simdjson_ondemand>/manual_time          1280531 ns      1340351 ns          546          32.017k           495.958M               0         8.059k    4.06549M              6.43768           785.347       3.19282G          10.3431M                    16.3783                     2.54412           90.3149k    32.5383k   631.515k        470.32M/s   0.141026   8.30628k   4.08509M         6.46872    780.926/s 3.19016G/s     10.3431M               16.3783                2.53192        115       89.8065k/s [BEST: throughput=  0.50 GB/s doc_throughput=   785 docs/s instructions=    10343117 cycles=     4065491 branch_miss=   32017 cache_miss=       0 cache_ref=      8059 items=       115 avg_time=   1280530 ns]
distinct_user_id<yyjson>/manual_time                      815577 ns       902710 ns         1024          10.256k           1.30177G             165        27.642k     1.5054M               2.3838          2.06134k       3.10315G           2.8749M                    4.55238                     1.90972           237.054k    7.79727k   631.515k       738.446M/s    470.396   25.6424k   1.65297M         2.61747   1.22613k/s 2.02675G/s     2.87538M               4.55315                1.73952        115       141.004k/s [BEST: throughput=  1.30 GB/s doc_throughput=  2061 docs/s instructions=     2874896 cycles=     1505404 branch_miss=   10256 cache_miss=     165 cache_ref=     27642 items=       115 avg_time=    815577 ns]
distinct_user_id<yyjson_insitu>/manual_time               543605 ns       615728 ns         1300           7.173k           1.65312G           1.27k        14.206k     1.2154M              1.92458          2.61771k       3.18157G          2.87458M                    4.55188                     2.36513           301.037k    7.56211k   631.515k        1107.9M/s    109.554   12.0264k    1.3421M         2.12521   1.83957k/s 2.46889G/s     2.87484M               4.55229                2.14204        115       211.551k/s [BEST: throughput=  1.65 GB/s doc_throughput=  2617 docs/s instructions=     2874579 cycles=     1215402 branch_miss=    7173 cache_miss=    1270 cache_ref=     14206 items=       115 avg_time=    543605 ns]
distinct_user_id<rapidjson>/manual_time                  1904012 ns      1977531 ns          369          26.494k           380.631M             696        22.779k    5.29726M              8.38817           602.727        3.1928G          13.3502M                      21.14                     2.52022           69.3136k    26.6368k   631.515k       316.311M/s   1.33567k   16.7514k   5.45206M          8.6333    525.207/s 2.86346G/s      13.351M               21.1413                2.44881        115       60.3988k/s [BEST: throughput=  0.38 GB/s doc_throughput=   602 docs/s instructions=    13350234 cycles=     5297256 branch_miss=   26494 cache_miss=     696 cache_ref=     22779 items=       115 avg_time=   1904012 ns]
distinct_user_id<rapidjson_insitu>/manual_time           1375214 ns      1443572 ns          541          25.228k           513.215M          3.355k        14.449k    3.92894M              6.22145           812.672       3.19294G          9.70551M                    15.3686                     2.47026           93.4573k     27.129k   631.515k       437.939M/s   1.36491k   11.4373k   4.06192M         6.43202    727.159/s 2.95366G/s     9.70575M                15.369                2.38945        115       83.6233k/s [BEST: throughput=  0.51 GB/s doc_throughput=   812 docs/s instructions=     9705512 cycles=     3928941 branch_miss=   25228 cache_miss=    3355 cache_ref=     14449 items=       115 avg_time=   1375214 ns]
find_tweet<simdjson_dom>/manual_time                      283318 ns       356116 ns         2469           3.787k           2.24393G               3        30.565k    898.925k              1.42344          3.55326k       3.19411G           2.8224M                    4.46925                     3.13975           3.55326k    3.89087k   631.515k       2.07591G/s    3.96638   30.5653k   904.134k         1.43169    3.5296k/s 3.19123G/s      2.8224M               4.46925                3.12166          1        3.5296k/s [BEST: throughput=  2.24 GB/s doc_throughput=  3553 docs/s instructions=     2822396 cycles=      898925 branch_miss=    3787 cache_miss=       3 cache_ref=     30565 items=         1 avg_time=    283318 ns]
find_tweet<simdjson_ondemand>/manual_time                1200570 ns      1261894 ns          583          31.373k           529.111M               0         7.657k    3.81087M              6.03449           837.844       3.19292G          9.73048M                    15.4081                     2.55335            837.844    31.8416k   631.515k       501.645M/s   0.144082    7.7737k   3.82991M         6.06464    832.938/s 3.19008G/s     9.73048M               15.4081                2.54065          1        832.938/s [BEST: throughput=  0.53 GB/s doc_throughput=   837 docs/s instructions=     9730477 cycles=     3810871 branch_miss=   31373 cache_miss=       0 cache_ref=      7657 items=         1 avg_time=   1200570 ns]
find_tweet<yyjson>/manual_time                            805493 ns       890014 ns          933           9.693k           1.37794G             232        27.235k    1.46347M               2.3174          2.18195k       3.19323G          2.82414M                      4.472                     1.92975           2.18195k    7.52248k   631.515k       747.691M/s    443.585    24.824k   1.62172M         2.56798   1.24148k/s 2.01332G/s     2.82462M               4.47277                1.74175          1       1.24148k/s [BEST: throughput=  1.38 GB/s doc_throughput=  2181 docs/s instructions=     2824136 cycles=     1463472 branch_miss=    9693 cache_miss=     232 cache_ref=     27235 items=         1 avg_time=    805492 ns]
find_tweet<yyjson_insitu>/manual_time                     532304 ns       599257 ns         1328           6.692k            1.7029G          1.986k        13.526k    1.17976M              1.86815          2.69653k       3.18127G          2.82382M                     4.4715                     2.39355           2.69653k    7.29566k   631.515k        1.1049G/s     8.8509   10.5424k   1.30665M         2.06907   1.87862k/s  2.4547G/s     2.82408M               4.47192                2.16132          1       1.87862k/s [BEST: throughput=  1.70 GB/s doc_throughput=  2696 docs/s instructions=     2823820 cycles=     1179764 branch_miss=    6692 cache_miss=    1986 cache_ref=     13526 items=         1 avg_time=    532304 ns]
find_tweet<rapidjson>/manual_time                        1886936 ns      1955782 ns          372          25.672k           384.741M         11.918k        21.025k    5.24054M              8.29837           609.235       3.19272G          13.2812M                    21.0307                     2.53431            609.235    26.5185k   631.515k       319.173M/s    1035.69   13.7723k   5.39671M         8.54565     529.96/s 2.86004G/s     13.2819M               21.0318                2.46111          1         529.96/s [BEST: throughput=  0.38 GB/s doc_throughput=   609 docs/s instructions=    13281182 cycles=     5240543 branch_miss=   25672 cache_miss=   11918 cache_ref=     21025 items=         1 avg_time=   1886935 ns]
find_tweet<rapidjson_insitu>/manual_time                 1371360 ns      1434589 ns          547          24.663k           516.994M          6.142k        13.341k    3.90016M              6.17587           818.657       3.19289G          9.64705M                     15.276                      2.4735            818.657    27.9922k   631.515k       439.169M/s   1.19604k    8.6325k   4.04904M         6.41162    729.203/s 2.95257G/s     9.64737M               15.2766                2.38263          1        729.203/s [BEST: throughput=  0.52 GB/s doc_throughput=   818 docs/s instructions=     9647048 cycles=     3900157 branch_miss=   24663 cache_miss=    6142 cache_ref=     13341 items=         1 avg_time=   1371360 ns]
