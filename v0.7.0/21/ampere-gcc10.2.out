run_benchmark: v0.8.0~17 /home/jkeiser/simdjson_benchmark_results/v0.7.0/21/ampere-gcc10.2.json -DCMAKE_BUILD_TYPE=Release
git reset --hard v0.8.0~17
HEAD is now at 7dbe4caf Taking a float and adding hundreds of zeros, you may get a truncated value that is just one over the desired value (bug fix) (#1388)
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- git Version: v0.2.1-7dbe4caf
-- Version: 0.2.1
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 10
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
make[3]: Nothing to be done for '_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build'.
[ 80%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
make[3]: Nothing to be done for 'jsonexamples/generated/CMakeFiles/generated-data.dir/build'.
[ 80%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/g++-10  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/src  -O3 -DNDEBUG -fPIC   -pthread -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/g++-10 -fPIC -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.6 -o ../libsimdjson.so.6.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.6.0.0 ../libsimdjson.so.6 ../libsimdjson.so
[ 80%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
make[3]: Nothing to be done for 'dependencies/CMakeFiles/yyjson.dir/build'.
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/g++-10  -DRAPIDJSON_HAS_STDSTRING -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_COMPETITION_RAPIDJSON -DSIMDJSON_COMPETITION_YYJSON -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/rapidjson/include  -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/g++-10  -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.6.0.0 ../_deps/google_benchmarks/src/libbenchmark.a ../dependencies/libyyjson.a -pthread /usr/lib/aarch64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/21/ampere-gcc10.2.json --benchmark_out_format=json
2021-01-25 01:05:58
Running benchmark/bench_ondemand
Run on (32 X 3300 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x32)
  L1 Instruction 32 KiB (x32)
  L2 Unified 256 KiB (x16)
Load Average: 1.00, 1.00, 1.00
simdjson::dom implementation:      arm64
simdjson::ondemand implementation: arm64

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
partial_tweets<simdjson_dom>/manual_time                 1576607 ns      1645712 ns          444          17.078k           401.459M         25.908k           906k    5.03561M              7.97386           635.708       3.20118G          3.92138M                    6.20949                     0.77873           63.5708k    17.2565k   631.515k       381.997M/s    25.912k   906.371k   5.04168M         7.98346    634.273/s  3.1978G/s     3.92138M               6.20949               0.777794        100       63.4273k/s [BEST: throughput=  0.40 GB/s doc_throughput=   635 docs/s instructions=     3921383 cycles=     5035612 branch_miss=   17078 cache_miss=   25908 cache_ref=    906000 items=       100 avg_time=   1576607 ns]
partial_tweets<simdjson_ondemand>/manual_time            1065660 ns      1135050 ns          657           6.448k           594.032M         22.769k       402.229k    3.40398M              5.39018           940.646       3.20194G          2.75992M                    4.37031                    0.810791           94.0646k    6.64824k   631.515k       565.152M/s   22.7662k   402.652k    3.4085M         5.39735    938.385/s 3.19849G/s     2.75991M               4.37031               0.809714        100       93.8385k/s [BEST: throughput=  0.59 GB/s doc_throughput=   940 docs/s instructions=     2759917 cycles=     3403980 branch_miss=    6448 cache_miss=   22769 cache_ref=    402229 items=       100 avg_time=   1065660 ns]
partial_tweets<yyjson>/manual_time                       1245569 ns      1317540 ns          564          48.426k           573.509M          24.35k       1.49222M    3.52609M              5.58355           908.147       3.20221G          3.54867M                    5.61929                      1.0064           90.8147k    48.2616k   631.515k       483.522M/s   24.3789k   1.49294M   3.75423M         5.94479    802.846/s 3.01406G/s     3.54889M               5.61964               0.945304        100       80.2846k/s [BEST: throughput=  0.57 GB/s doc_throughput=   908 docs/s instructions=     3548665 cycles=     3526095 branch_miss=   48426 cache_miss=   24350 cache_ref=   1492225 items=       100 avg_time=   1245568 ns]
partial_tweets<yyjson_insitu>/manual_time                1165767 ns      1238743 ns          599          48.412k           596.777M         14.496k       1.33399M    3.38855M              5.36575           944.992       3.20215G          3.44976M                    5.46267                     1.01806           94.4992k    48.2178k   631.515k       516.621M/s   14.5523k   1.33404M   3.61185M         5.71935    857.804/s 3.09826G/s     3.45012M               5.46325               0.955222        100       85.7804k/s [BEST: throughput=  0.60 GB/s doc_throughput=   944 docs/s instructions=     3449758 cycles=     3388551 branch_miss=   48412 cache_miss=   14496 cache_ref=   1333989 items=       100 avg_time=   1165767 ns]
partial_tweets<rapidjson>/manual_time                    2831224 ns      2903692 ns          248           79.97k           229.804M         12.944k       6.29202M    8.79608M              13.9285           363.893       3.20083G          13.4033M                    21.2241                     1.52379           36.3893k    79.6707k   631.515k       212.721M/s   13.1556k   6.29096M   8.84216M         14.0015    353.204/s 3.12309G/s     13.4038M               21.2248                1.51589        100       35.3204k/s [BEST: throughput=  0.23 GB/s doc_throughput=   363 docs/s instructions=    13403343 cycles=     8796077 branch_miss=   79970 cache_miss=   12944 cache_ref=   6292020 items=       100 avg_time=   2831223 ns]
partial_tweets<rapidjson_insitu>/manual_time             2139206 ns      2212166 ns          328          60.245k           303.886M         13.783k       3.48033M     6.6523M              10.5339           481.201        3.2011G          9.78092M                     15.488                     1.47031           48.1201k    60.3661k   631.515k       281.534M/s   13.9224k   3.48128M   6.68751M         10.5896    467.463/s 3.12617G/s     9.78153M                15.489                1.46266        100       46.7463k/s [BEST: throughput=  0.30 GB/s doc_throughput=   481 docs/s instructions=     9780925 cycles=     6652300 branch_miss=   60245 cache_miss=   13783 cache_ref=   3480329 items=       100 avg_time=   2139205 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                 311282580 ns    314881846 ns            2         1.92319M           147.782M        3.98252M       246.818M    995.058M              21.6323           3.21275       3.19687G          1.10647G                    24.0544                     1.11197           3.21275M    1.92338M   45.9988M       140.926M/s   3.98249M   246.819M   995.161M         21.6345    3.21252/s 3.19697G/s     1.10647G               24.0544                1.11185      1000k       3.21252M/s [BEST: throughput=  0.15 GB/s doc_throughput=     3 docs/s instructions=  1106472994 cycles=   995057633 branch_miss= 1923186 cache_miss= 3982517 cache_ref= 246818297 items=   1000000 avg_time= 311282579 ns]
large_random<simdjson_ondemand>/manual_time            183742632 ns    187348490 ns            4         1.19251M            250.35M        2.31766M       134.456M    587.437M              12.7707           5.44255       3.19715G          689.959M                    14.9995                     1.17452           5.44255M    1.19267M   45.9988M       238.746M/s   2.31765M   134.456M   587.441M         12.7708     5.4424/s 3.19709G/s     689.959M               14.9995                1.17452      1000k        5.4424M/s [BEST: throughput=  0.25 GB/s doc_throughput=     5 docs/s instructions=   689958645 cycles=   587436659 branch_miss= 1192513 cache_miss= 2317655 cache_ref= 134456106 items=   1000000 avg_time= 183742631 ns]
large_random<simdjson_ondemand_unordered>/manual_time  184470968 ns    188083218 ns            4         1.20026M           249.364M        2.31826M       138.475M    589.714M              12.8202           5.42109        3.1969G          693.959M                    15.0865                     1.17677           5.42109M    1.20072M   45.9988M       237.804M/s   2.31827M   138.475M   589.737M         12.8207    5.42091/s 3.19691G/s     693.959M               15.0865                1.17672      1000k       5.42091M/s [BEST: throughput=  0.25 GB/s doc_throughput=     5 docs/s instructions=   693958641 cycles=   589714109 branch_miss= 1200256 cache_miss= 2318263 cache_ref= 138474623 items=   1000000 avg_time= 184470967 ns]
large_random<yyjson>/manual_time                       204720182 ns    208331549 ns            3         1.61186M           224.715M        4.91372M       235.097M    628.918M              13.6725           4.88523       3.07241G          908.191M                    19.7438                     1.44405           4.88523M    1.61517M   45.9988M       214.282M/s   4.91366M   235.105M   628.989M          13.674    4.88472/s 3.07243G/s     908.191M               19.7438                1.44389      1000k       4.88472M/s [BEST: throughput=  0.22 GB/s doc_throughput=     4 docs/s instructions=   908191200 cycles=   628917985 branch_miss= 1611861 cache_miss= 4913717 cache_ref= 235096996 items=   1000000 avg_time= 204720181 ns]
large_random<yyjson_insitu>/manual_time                198795613 ns    202401935 ns            4         1.61245M           231.453M        4.19683M       223.587M    616.835M              13.4098           5.03172       3.10375G          901.004M                    19.5876                     1.46069           5.03172M    1.61257M   45.9988M       220.668M/s   4.19683M   223.588M   617.033M         13.4141    5.03029/s 3.10386G/s     901.004M               19.5876                1.46022      1000k       5.03029M/s [BEST: throughput=  0.23 GB/s doc_throughput=     5 docs/s instructions=   901003709 cycles=   616835394 branch_miss= 1612448 cache_miss= 4196833 cache_ref= 223586673 items=   1000000 avg_time= 198795613 ns]
large_random<rapidjson>/manual_time                    354678200 ns    358280790 ns            2         1.91746M           129.966M        4.95525M       764.793M    1.10444G              24.0103           2.82543       3.12053G          1.67651G                    36.4467                     1.51796           2.82543M     1.9129M   45.9988M       123.684M/s   4.95597M   764.802M   1.10458G         24.0132    2.81946/s 3.11431G/s     1.67651G               36.4469                1.51779      1000k       2.81946M/s [BEST: throughput=  0.13 GB/s doc_throughput=     2 docs/s instructions=  1676505421 cycles=  1104444109 branch_miss= 1917462 cache_miss= 4955249 cache_ref= 764793271 items=   1000000 avg_time= 354678200 ns]
large_random<rapidjson_lossless>/manual_time           394191354 ns    397791079 ns            2          2.0139M           116.957M        4.95469M       955.315M    1.23058G              26.7525            2.5426       3.12889G          1.97648G                    42.9681                     1.60613            2.5426M    2.00876M   45.9988M       111.286M/s   4.95543M   955.305M   1.23098G         26.7611    2.53684/s  3.1228G/s     1.97649G               42.9682                1.60562      1000k       2.53684M/s [BEST: throughput=  0.12 GB/s doc_throughput=     2 docs/s instructions=  1976481706 cycles=  1230583853 branch_miss= 2013897 cache_miss= 4954687 cache_ref= 955314726 items=   1000000 avg_time= 394191354 ns]
large_random<rapidjson_insitu>/manual_time             333425979 ns    337028991 ns            2         2.11151M           138.274M        5.67085M       749.495M    1036.64M              22.5362           3.00604       3.11617G           1.5665G                    34.0553                     1.51114           3.00604M    2.13611M   45.9988M       131.567M/s   5.67157M   749.509M   1036.88M         22.5414    2.99917/s 3.10977G/s     1.56651G               34.0554                1.51079      1000k       2.99917M/s [BEST: throughput=  0.14 GB/s doc_throughput=     3 docs/s instructions=  1566500973 cycles=  1036636207 branch_miss= 2111506 cache_miss= 5670849 cache_ref= 749495449 items=   1000000 avg_time= 333425979 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                       379940131 ns    390621591 ns            2         1.10343M           361.422M        6.94571M       246.881M     1.2143G              8.84384           2.63225       3.19636G          1.14604G                    8.34671                    0.943787           1.38006M    1.10397M   137.305M       344.644M/s    6.9457M    246.88M    1.2145G         8.84525    2.63199/s 3.19655G/s     1.14604G               8.34671               0.943637   524.288k       1.37992M/s [BEST: throughput=  0.36 GB/s doc_throughput=     2 docs/s instructions=  1146044348 cycles=  1214303877 branch_miss= 1103427 cache_miss= 6945714 cache_ref= 246880602 items=    524288 avg_time= 379940131 ns]
kostya<simdjson_ondemand>/manual_time                  257800857 ns    268477386 ns            3         1.15938M           533.264M        5.28126M       136.944M    822.914M              5.99333           3.88379       3.19603G          796.072M                    5.79784                    0.967381           2.03623M    1.20457M   137.305M       507.928M/s   5.28124M   137.076M    824.08M         6.00182    3.87896/s 3.19658G/s     796.072M               5.79784               0.966013   524.288k       2.03369M/s [BEST: throughput=  0.53 GB/s doc_throughput=     3 docs/s instructions=   796071983 cycles=   822914387 branch_miss= 1159375 cache_miss= 5281260 cache_ref= 136944064 items=    524288 avg_time= 257800857 ns]
kostya<yyjson>/manual_time                             296270120 ns    306948379 ns            2         1.44132M           463.876M        7.97457M       345.962M    903.065M              6.57708           3.37844       3.05095G          1052.15M                    7.66288                     1.16509           1.77127M     1.4377M   137.305M       441.976M/s   7.97704M    345.96M   904.038M         6.58416     3.3753/s  3.0514G/s     1052.15M               7.66288                1.16384   524.288k       1.76963M/s [BEST: throughput=  0.46 GB/s doc_throughput=     3 docs/s instructions=  1052152278 cycles=   903065325 branch_miss= 1441325 cache_miss= 7974570 cache_ref= 345961884 items=    524288 avg_time= 296270120 ns]
kostya<yyjson_insitu>/manual_time                      278894051 ns    289567653 ns            3         1.46491M           493.204M        5.83688M       311.666M     867.61M              6.31885           3.59203       3.11648G           1030.7M                    7.50663                     1.18797           1.88326M    1.47314M   137.305M       469.513M/s   5.83892M   311.731M   869.173M         6.33024    3.58559/s  3.1165G/s      1030.7M               7.50663                1.18584   524.288k       1.87988M/s [BEST: throughput=  0.49 GB/s doc_throughput=     3 docs/s instructions=  1030698157 cycles=   867610015 branch_miss= 1464913 cache_miss= 5836876 cache_ref= 311666071 items=    524288 avg_time= 278894050 ns]
kostya<rapidjson>/manual_time                          560713563 ns    571400558 ns            1         6.93788M           244.875M        5.38562M        974.98M    1.75764G               12.801           1.78344       3.13464G          2.38981G                    17.4051                     1.35967           935.037k    6.93788M   137.305M       233.531M/s   5.38562M    974.98M   1.75764G          12.801    1.78344/s 3.13464G/s     2.38981G               17.4051                1.35967   524.288k       935.037k/s [BEST: throughput=  0.24 GB/s doc_throughput=     1 docs/s instructions=  2389813590 cycles=  1757637552 branch_miss= 6937879 cache_miss= 5385623 cache_ref= 974979983 items=    524288 avg_time= 560713563 ns]
kostya<rapidjson_lossless>/manual_time                 593911446 ns    604581958 ns            1         7.54932M           231.188M        5.38779M       1095.41M    1.86387G              13.5747           1.68375        3.1383G          2.56492G                    18.6805                     1.37612           882.771k    7.54932M   137.305M       220.478M/s   5.38779M   1095.41M   1.86387G         13.5747    1.68375/s  3.1383G/s     2.56492G               18.6805                1.37612   524.288k       882.771k/s [BEST: throughput=  0.23 GB/s doc_throughput=     1 docs/s instructions=  2564919556 cycles=  1863872338 branch_miss= 7549322 cache_miss= 5387787 cache_ref=1095407872 items=    524288 avg_time= 593911446 ns]
kostya<rapidjson_insitu>/manual_time                   534591866 ns    545296625 ns            1         6.46928M           256.841M        6.35887M       875.525M    1.67464G              12.1965           1.87059       3.13256G          2.17945G                    15.8731                     1.30144           980.726k    6.46928M   137.305M       244.942M/s   6.35887M   875.525M   1.67464G         12.1965    1.87059/s 3.13256G/s     2.17945G               15.8731                1.30144   524.288k       980.726k/s [BEST: throughput=  0.26 GB/s doc_throughput=     1 docs/s instructions=  2179453241 cycles=  1674643367 branch_miss= 6469276 cache_miss= 6358872 cache_ref= 875525419 items=    524288 avg_time= 534591866 ns]
distinct_user_id<simdjson_dom>/manual_time               1568363 ns      1654754 ns          447          16.769k           403.988M         26.459k       890.088k    5.00405M              7.92389           639.712       3.20115G          3.85168M                    6.09911                    0.769711           73.5669k    17.0158k   631.515k       384.005M/s   26.4499k   890.652k   5.01443M         7.94032    637.608/s 3.19724G/s     3.85168M               6.09911               0.768119        115       73.3249k/s [BEST: throughput=  0.40 GB/s doc_throughput=   639 docs/s instructions=     3851677 cycles=     5004054 branch_miss=   16769 cache_miss=   26459 cache_ref=    890088 items=       115 avg_time=   1568362 ns]
distinct_user_id<simdjson_ondemand>/manual_time          1052533 ns      1133756 ns          665           6.732k           601.488M         22.378k       379.295k    3.36144M              5.32282           952.452       3.20161G          2.69546M                    4.26824                    0.801876           109.532k    6.83503k   631.515k         572.2M/s   22.3806k   379.668k   3.36601M         5.33005    950.089/s 3.19801G/s     2.69546M               4.26824               0.800788        115        109.26k/s [BEST: throughput=  0.60 GB/s doc_throughput=   952 docs/s instructions=     2695459 cycles=     3361442 branch_miss=    6732 cache_miss=   22378 cache_ref=    379295 items=       115 avg_time=   1052532 ns]
distinct_user_id<yyjson>/manual_time                     1224189 ns      1309230 ns          577          48.287k           583.195M         24.236k       1.47739M    3.46697M              5.48992           923.486       3.20169G          3.51464M                     5.5654                     1.01375           106.201k    48.0814k   631.515k       491.966M/s    24.191k   1.47799M   3.69045M         5.84381    816.867/s 3.01461G/s     3.51478M               5.56563               0.952398        115       93.9397k/s [BEST: throughput=  0.58 GB/s doc_throughput=   923 docs/s instructions=     3514635 cycles=     3466966 branch_miss=   48287 cache_miss=   24236 cache_ref=   1477389 items=       115 avg_time=   1224189 ns]
distinct_user_id<yyjson_insitu>/manual_time              1146243 ns      1231463 ns          614          47.864k           608.781M         14.289k       1.31871M    3.32122M              5.25912               964       3.20165G          3.41557M                    5.40854                     1.02841            110.86k    47.9632k   631.515k       525.421M/s   14.3226k   1.31919M   3.54976M         5.62102    872.416/s 3.09687G/s     3.41572M               5.40877                0.96224        115       100.328k/s [BEST: throughput=  0.61 GB/s doc_throughput=   964 docs/s instructions=     3415572 cycles=     3321215 branch_miss=   47864 cache_miss=   14289 cache_ref=   1318712 items=       115 avg_time=   1146242 ns]
distinct_user_id<rapidjson>/manual_time                  2850155 ns      2935130 ns          249          79.259k           227.561M         13.477k       6.29431M    8.88235M              14.0651           360.342       3.20068G          13.3657M                    21.1645                     1.50474           41.4393k    79.3843k   631.515k       211.308M/s   13.7045k   6.29836M   8.93716M         14.1519    350.858/s 3.13568G/s     13.3661M               21.1652                1.49557        115       40.3487k/s [BEST: throughput=  0.23 GB/s doc_throughput=   360 docs/s instructions=    13365675 cycles=     8882353 branch_miss=   79259 cache_miss=   13477 cache_ref=   6294313 items=       115 avg_time=   2850154 ns]
distinct_user_id<rapidjson_insitu>/manual_time           2119546 ns      2205813 ns          332          60.023k            306.67M         14.067k       3.46368M    6.59142M              10.4375            485.61       3.20086G          9.74277M                    15.4276                      1.4781           55.8452k     60.252k   631.515k       284.146M/s   14.2213k   3.46504M   6.63012M         10.4988    471.799/s 3.12809G/s     9.74333M               15.4285                1.46956        115       54.2569k/s [BEST: throughput=  0.31 GB/s doc_throughput=   485 docs/s instructions=     9742771 cycles=     6591422 branch_miss=   60023 cache_miss=   14067 cache_ref=   3463677 items=       115 avg_time=   2119545 ns]
find_tweet<simdjson_dom>/manual_time                     1520957 ns      1602387 ns          460          16.512k           416.193M         23.446k       873.646k    4.85728M              7.69147           659.039       3.20114G          3.76236M                    5.95767                    0.774581            659.039    16.6848k   631.515k       395.974M/s   23.4434k   874.172k   4.86366M         7.70157    657.481/s 3.19776G/s     3.76236M               5.95767               0.773565          1        657.481/s [BEST: throughput=  0.42 GB/s doc_throughput=   659 docs/s instructions=     3762356 cycles=     4857278 branch_miss=   16512 cache_miss=   23446 cache_ref=    873646 items=         1 avg_time=   1520956 ns]
find_tweet<simdjson_ondemand>/manual_time                 914324 ns       996011 ns          765           3.963k            692.02M         11.561k       193.747k    2.92158M               4.6263           1095.81        3.2015G          2.05902M                    3.26045                    0.704764            1095.81    4.06735k   631.515k       658.694M/s   11.5607k   193.879k   2.92435M         4.63069     1093.7/s 3.19837G/s     2.05902M               3.26045               0.704096          1         1093.7/s [BEST: throughput=  0.69 GB/s doc_throughput=  1095 docs/s instructions=     2059024 cycles=     2921580 branch_miss=    3963 cache_miss=   11561 cache_ref=    193747 items=         1 avg_time=    914324 ns]
find_tweet<yyjson>/manual_time                           1186665 ns      1271776 ns          591           47.79k           593.822M         21.685k       1.46045M    3.35803M              5.31743           940.313        3.1576G          3.45928M                    5.47775                     1.03015            940.313    47.8314k   631.515k       507.523M/s   21.6958k   1.46184M   3.57083M         5.65439    842.698/s 3.00913G/s     3.45951M               5.47811               0.968825          1        842.698/s [BEST: throughput=  0.59 GB/s doc_throughput=   940 docs/s instructions=     3459283 cycles=     3358034 branch_miss=   47790 cache_miss=   21685 cache_ref=   1460452 items=         1 avg_time=   1186665 ns]
find_tweet<yyjson_insitu>/manual_time                    1109243 ns      1194786 ns          633          47.898k           628.993M         11.745k       1.30254M    3.21497M              5.09088           996.006       3.20213G          3.36038M                    5.32113                     1.04523            996.006    47.7834k   631.515k       542.947M/s   11.7859k   1.30257M   3.43256M         5.43544    901.516/s 3.09451G/s     3.36045M               5.32125               0.978991          1        901.516/s [BEST: throughput=  0.63 GB/s doc_throughput=   996 docs/s instructions=     3360376 cycles=     3214968 branch_miss=   47898 cache_miss=   11745 cache_ref=   1302539 items=         1 avg_time=   1109242 ns]
find_tweet<rapidjson>/manual_time                        2783128 ns      2869356 ns          251          79.369k           232.694M          10.84k       6.25504M    8.68678M              13.7555            368.47       3.20082G          13.3223M                    21.0958                     1.53363             368.47    79.5235k   631.515k       216.397M/s   11.0502k   6.26086M   8.72223M         13.8116    359.308/s 3.13397G/s     13.3228M               21.0965                1.52745          1        359.308/s [BEST: throughput=  0.23 GB/s doc_throughput=   368 docs/s instructions=    13322311 cycles=     8686779 branch_miss=   79369 cache_miss=   10840 cache_ref=   6255044 items=         1 avg_time=   2783128 ns]
find_tweet<rapidjson_insitu>/manual_time                 2624294 ns      2312071 ns          337          59.909k           310.517M         10.632k       3.45097M    6.51009M              10.3087           491.702       3.20102G          9.69717M                    15.3554                     1.48956            491.702    60.1735k   631.515k       229.494M/s   10.7807k   3.45082M   6.53612M         10.3499    381.055/s 2.49062G/s     9.69762M               15.3561                 1.4837          1        381.055/s [BEST: throughput=  0.31 GB/s doc_throughput=   491 docs/s instructions=     9697173 cycles=     6510089 branch_miss=   59909 cache_miss=   10632 cache_ref=   3450974 items=         1 avg_time=   2624294 ns]
