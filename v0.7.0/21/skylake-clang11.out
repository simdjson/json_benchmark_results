run_benchmark: v0.8.0~17 /home/jkeiser/simdjson_benchmark_results/v0.7.0/21/skylake-clang11.json -DCMAKE_BUILD_TYPE=Release
git reset --hard v0.8.0~17
HEAD is now at 7dbe4caf Taking a float and adding hundreds of zeros, you may get a truncated value that is just one over the desired value (bug fix) (#1388)
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- git Version: v0.2.1-7dbe4caf
-- Version: 0.2.1
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES -- failed to compile
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 10
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
make[3]: Nothing to be done for '_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build'.
[ 80%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
make[3]: Nothing to be done for 'jsonexamples/generated/CMakeFiles/generated-data.dir/build'.
[ 80%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/clang++-11  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/src  -O3 -DNDEBUG -fPIC   -pthread -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/clang++-11 -fPIC -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.6 -o ../libsimdjson.so.6.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.6.0.0 ../libsimdjson.so.6 ../libsimdjson.so
[ 80%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
make[3]: Nothing to be done for 'dependencies/CMakeFiles/yyjson.dir/build'.
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/clang++-11  -DRAPIDJSON_HAS_STDSTRING -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_COMPETITION_RAPIDJSON -DSIMDJSON_COMPETITION_YYJSON -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/rapidjson/include  -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/clang++-11  -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.6.0.0 ../_deps/google_benchmarks/src/libbenchmark.a ../dependencies/libyyjson.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/21/skylake-clang11.json --benchmark_out_format=json
2021-01-25 01:47:41
Running benchmark/bench_ondemand
Run on (4 X 4000 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 256 KiB (x4)
  L3 Unified 8192 KiB (x1)
Load Average: 0.88, 0.55, 0.38
simdjson::dom implementation:      haswell
simdjson::ondemand implementation: fallback

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                  274032 ns       302825 ns         2556           3.365k             2.319G               0        93.295k    1005.66k              1.59246          3.67212k       3.69292G           2.9828M                    4.72325                     2.96601           367.212k    3.53526k   631.515k       2.14626G/s    9.15023   93.5049k   1011.38k         1.60152    3.6492k/s 3.69075G/s      2.9828M               4.72325                2.94923        100        364.92k/s [BEST: throughput=  2.32 GB/s doc_throughput=  3672 docs/s instructions=     2982801 cycles=     1005662 branch_miss=    3365 cache_miss=       0 cache_ref=     93295 items=       100 avg_time=    274032 ns]
partial_tweets<simdjson_ondemand>/manual_time            1245220 ns      1274112 ns          562          31.873k           509.894M               0        59.874k     4.5723M              7.24021           807.414       3.69174G          10.9855M                    17.3955                     2.40263           80.7414k    32.4655k   631.515k       483.657M/s    1.75445   59.8142k   4.59439M         7.27519    803.071/s 3.68962G/s     10.9855M               17.3955                2.39108        100       80.3071k/s [BEST: throughput=  0.51 GB/s doc_throughput=   807 docs/s instructions=    10985547 cycles=     4572300 branch_miss=   31873 cache_miss=       0 cache_ref=     59874 items=       100 avg_time=   1245219 ns]
partial_tweets<yyjson>/manual_time                        639765 ns       671077 ns         1092           9.633k           1.80236G             503        79.669k     1.2938M              2.04873          2.85403k       3.69255G          2.91991M                    4.62365                     2.25684           285.403k    7.56234k   631.515k       941.376M/s    1036.19   51.7436k   1.50824M         2.38829   1.56307k/s 2.35749G/s      2.9206M               4.62474                1.93642        100       156.307k/s [BEST: throughput=  1.80 GB/s doc_throughput=  2854 docs/s instructions=     2919907 cycles=     1293803 branch_miss=    9633 cache_miss=     503 cache_ref=     79669 items=       100 avg_time=    639765 ns]
partial_tweets<yyjson_insitu>/manual_time                 428105 ns       457616 ns         1635           6.818k           2.06109G             367        48.464k    1.12782M              1.78589          3.26373k       3.68089G          2.91959M                    4.62315                     2.58871           326.373k    7.35609k   631.515k       1.37383G/s    144.994   33.8588k   1.23258M         1.95178   2.33588k/s 2.87915G/s     2.91985M               4.62356                2.36889        100       233.588k/s [BEST: throughput=  2.06 GB/s doc_throughput=  3263 docs/s instructions=     2919587 cycles=     1127816 branch_miss=    6818 cache_miss=     367 cache_ref=     48464 items=       100 avg_time=    428104 ns]
partial_tweets<rapidjson>/manual_time                    2394346 ns      2424065 ns          293          29.103k           287.696M          1.613k        54.415k    8.09025M              12.8109           455.565       3.68564G           21.895M                    34.6705                     2.70634           45.5565k    29.5542k   631.515k       251.534M/s    681.444   34.5645k   8.24526M         13.0563    417.651/s 3.44364G/s     21.8957M               34.6717                2.65555        100       41.7651k/s [BEST: throughput=  0.29 GB/s doc_throughput=   455 docs/s instructions=    21894954 cycles=     8090248 branch_miss=   29103 cache_miss=    1613 cache_ref=     54415 items=       100 avg_time=   2394346 ns]
partial_tweets<rapidjson_insitu>/manual_time             1570039 ns      1599150 ns          448          25.418k           434.753M              69        45.419k    5.36246M              8.49142           688.428       3.69167G          13.3567M                    21.1503                     2.49078           68.8428k    26.0402k   631.515k       383.595M/s    294.386   35.6356k   5.44332M         8.61946    636.927/s 3.46699G/s     13.3573M               21.1512                2.45389        100       63.6927k/s [BEST: throughput=  0.43 GB/s doc_throughput=   688 docs/s instructions=    13356721 cycles=     5362462 branch_miss=   25418 cache_miss=      69 cache_ref=     45419 items=       100 avg_time=   1570039 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                  89298539 ns     92703419 ns            8         930.562k           515.967M        11.0734M       15.6255M    328.881M              7.14977            11.217       3.68905G          1038.74M                    22.5819                      3.1584            11.217M    938.978k   45.9988M       491.249M/s   11.1527M   15.6293M   329.388M         7.16079    11.1984/s 3.68861G/s     1038.74M               22.5819                3.15354      1000k       11.1984M/s [BEST: throughput=  0.52 GB/s doc_throughput=    11 docs/s instructions=  1038738106 cycles=   328880609 branch_miss=  930562 cache_miss=11073367 cache_ref=  15625471 items=   1000000 avg_time=  89298538 ns]
large_random<simdjson_ondemand>/manual_time            113117058 ns    116509122 ns            6         1.23807M           409.074M        5.86073M         8.123M    414.799M               9.0176           8.89316       3.68887G          1.21898G                    26.5002                     2.93872           8.89316M    1.24382M   45.9988M       387.809M/s   5.79926M   8.12242M   417.298M         9.07195     8.8404/s 3.68909G/s     1.21898G               26.5002                2.92111      1000k        8.8404M/s [BEST: throughput=  0.41 GB/s doc_throughput=     8 docs/s instructions=  1218976299 cycles=   414798789 branch_miss= 1238072 cache_miss= 5860733 cache_ref=   8123002 items=   1000000 avg_time= 113117057 ns]
large_random<simdjson_ondemand_unordered>/manual_time  113165891 ns    116549542 ns            6         1.26019M           407.115M        5.79731M        8.1233M    416.836M              9.06189           8.85055       3.68923G          1.22398G                    26.6089                     2.93635           8.85055M    1.26059M   45.9988M       387.642M/s   5.79878M   8.12326M   417.468M         9.07564    8.83658/s 3.68899G/s     1.22398G               26.6089                 2.9319      1000k       8.83658M/s [BEST: throughput=  0.41 GB/s doc_throughput=     8 docs/s instructions=  1223976299 cycles=   416835688 branch_miss= 1260187 cache_miss= 5797311 cache_ref=   8123302 items=   1000000 avg_time= 113165891 ns]
large_random<yyjson>/manual_time                       117344205 ns    120771084 ns            6         680.518k           392.223M        6.08993M       9.35183M    313.365M              6.81247           8.52682       2.67201G          855.681M                    18.6023                     2.73062           8.52682M    679.592k   45.9988M       373.839M/s   6.08212M   9.34034M   313.417M         6.81359    8.52194/s 2.67092G/s     855.681M               18.6023                2.73017      1000k       8.52194M/s [BEST: throughput=  0.39 GB/s doc_throughput=     8 docs/s instructions=   855680942 cycles=   313365316 branch_miss=  680518 cache_miss= 6089927 cache_ref=   9351826 items=   1000000 avg_time= 117344205 ns]
large_random<yyjson_insitu>/manual_time                 99675923 ns    103110586 ns            7         677.601k           461.708M        5.17629M        7.9514M    281.982M              6.13021           10.0374       2.83037G           849.56M                    18.4692                     3.01281           10.0374M    679.278k   45.9988M       440.105M/s   5.18704M   7.95107M   282.161M          6.1341    10.0325/s 2.83078G/s      849.56M               18.4692                3.01091      1000k       10.0325M/s [BEST: throughput=  0.46 GB/s doc_throughput=    10 docs/s instructions=   849560186 cycles=   281982371 branch_miss=  677601 cache_miss= 5176290 cache_ref=   7951396 items=   1000000 avg_time=  99675922 ns]
large_random<rapidjson>/manual_time                    214147649 ns    217581735 ns            3         583.983k            220.65M        7.11919M       10.9721M    710.858M              15.4539           4.79687       3.40989G          2.01514G                    43.8086                      2.8348           4.79687M    583.479k   45.9988M       204.849M/s   6.61225M   10.3035M   713.105M         15.5027    4.66968/s 3.32997G/s     2.01515G               43.8088                2.82588      1000k       4.66968M/s [BEST: throughput=  0.22 GB/s doc_throughput=     4 docs/s instructions=  2015142274 cycles=   710858211 branch_miss=  583983 cache_miss= 7119188 cache_ref=  10972115 items=   1000000 avg_time= 214147649 ns]
large_random<rapidjson_lossless>/manual_time           246845354 ns    250285733 ns            3         583.158k           190.841M         7.0987M       10.9827M    830.679M              18.0587           4.14882       3.44634G          2.48011G                    53.9169                     2.98564           4.14882M    582.158k   45.9988M       177.714M/s   6.61261M   10.3216M   833.309M         18.1159    4.05112/s 3.37583G/s     2.48012G               53.9171                2.97623      1000k       4.05112M/s [BEST: throughput=  0.19 GB/s doc_throughput=     4 docs/s instructions=  2480109401 cycles=   830679228 branch_miss=  583158 cache_miss= 7098700 cache_ref=  10982651 items=   1000000 avg_time= 246845354 ns]
large_random<rapidjson_insitu>/manual_time             228593471 ns    232016040 ns            3         586.625k            206.13M        8.24146M       12.5992M    765.143M               16.634           4.48121       3.42877G          1.73714G                     37.765                     2.27035           4.48121M    587.204k   45.9988M       191.903M/s   7.76007M   11.9263M   766.501M         16.6635    4.37458/s 3.35312G/s     1.73715G               37.7652                2.26634      1000k       4.37458M/s [BEST: throughput=  0.21 GB/s doc_throughput=     4 docs/s instructions=  1737142125 cycles=   765143491 branch_miss=  586625 cache_miss= 8241465 cache_ref=  12599212 items=   1000000 avg_time= 228593470 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                        92269761 ns    102678118 ns            8            1018k           1.48994G        16.2275M       22.9044M    339.933M              2.47575           10.8513       3.68873G          984.675M                    7.17144                     2.89667           5.68922M    1018.04k   137.305M       1.38588G/s   16.2271M   22.7895M    340.35M         2.47879    10.8378/s 3.68864G/s     984.675M               7.17144                2.89313   524.288k       5.68212M/s [BEST: throughput=  1.49 GB/s doc_throughput=    10 docs/s instructions=   984674894 cycles=   339933330 branch_miss= 1017998 cache_miss=16227461 cache_ref=  22904442 items=    524288 avg_time=  92269760 ns]
kostya<simdjson_ondemand>/manual_time                  201370585 ns    211774070 ns            3         674.577k           682.779M        10.4887M       14.3625M    741.887M              5.40321           4.97272        3.6892G          2.21249G                    16.1137                     2.98225           2.60714M     691.73k   137.305M       650.265M/s   10.4948M   14.4025M   742.879M         5.41043    4.96597/s 3.68912G/s     2.21249G               16.1137                2.97827   524.288k        2.6036M/s [BEST: throughput=  0.68 GB/s doc_throughput=     4 docs/s instructions=  2212492366 cycles=   741887224 branch_miss=  674577 cache_miss=10488733 cache_ref=  14362536 items=    524288 avg_time= 201370584 ns]
kostya<yyjson>/manual_time                             173703026 ns    184108326 ns            4         425.268k           791.812M        11.6908M       16.8275M    443.136M              3.22738           5.76681       2.55548G          974.185M                    7.09504                     2.19839           3.02347M     424.97k   137.305M        753.84M/s   11.6962M   16.8593M   443.122M         3.22728    5.75695/s 2.55103G/s     974.185M               7.09504                2.19846   524.288k        3.0183M/s [BEST: throughput=  0.79 GB/s doc_throughput=     5 docs/s instructions=   974184797 cycles=   443135784 branch_miss=  425268 cache_miss=11690837 cache_ref=  16827502 items=    524288 avg_time= 173703025 ns]
kostya<yyjson_insitu>/manual_time                      120481999 ns    130887927 ns            6         419.466k           1.13988G        9.00673M       12.6909M    350.003M              2.54909           8.30182       2.90566G          955.915M                    6.96198                     2.73116           4.35254M     419.93k   137.305M       1086.84M/s   8.99772M     12.72M   350.057M         2.54948        8.3/s 2.90547G/s     955.915M               6.96198                2.73074   524.288k       4.35159M/s [BEST: throughput=  1.14 GB/s doc_throughput=     8 docs/s instructions=   955915024 cycles=   350003017 branch_miss=  419466 cache_miss= 9006733 cache_ref=  12690921 items=    524288 avg_time= 120481998 ns]
kostya<rapidjson>/manual_time                          276376019 ns    287136142 ns            3         956.819k           502.713M        8.50559M       12.4077M     926.49M              6.74768           3.66129       3.39215G          2.73924G                    19.9501                     2.95658           1.91957M    954.111k   137.305M        473.79M/s   8.20893M   12.0728M   928.863M         6.76496    3.61826/s 3.36087G/s     2.73925G               19.9501                2.94903   524.288k       1.89701M/s [BEST: throughput=  0.50 GB/s doc_throughput=     3 docs/s instructions=  2739244986 cycles=   926490382 branch_miss=  956819 cache_miss= 8505594 cache_ref=  12407735 items=    524288 avg_time= 276376019 ns]
kostya<rapidjson_lossless>/manual_time                 296807877 ns    307243633 ns            2         961.628k           466.523M        8.54315M       12.4227M    1004.26M              7.31407           3.39772       3.41218G           3.0082G                    21.9089                     2.99544           1.78138M    962.251k   137.305M       441.175M/s   8.30018M   12.1904M   1006.41M         7.32977    3.36918/s  3.3908G/s      3.0082G               21.9089                2.98902   524.288k       1.76642M/s [BEST: throughput=  0.47 GB/s doc_throughput=     3 docs/s instructions=  3008195253 cycles=  1004258197 branch_miss=  961628 cache_miss= 8543154 cache_ref=  12422710 items=    524288 avg_time= 296807877 ns]
kostya<rapidjson_insitu>/manual_time                   263950701 ns    274365129 ns            3          982.52k           525.925M        12.3369M        16.412M    881.951M               6.4233           3.83034       3.37817G          2.22201G                     16.183                     2.51942            2.0082M    978.621k   137.305M       496.094M/s   12.0143M   16.0544M   883.103M         6.43169    3.78859/s 3.34571G/s     2.22201G                16.183                2.51614   524.288k       1.98631M/s [BEST: throughput=  0.53 GB/s doc_throughput=     3 docs/s instructions=  2222009410 cycles=   881951252 branch_miss=  982520 cache_miss=12336923 cache_ref=  16412022 items=    524288 avg_time= 263950701 ns]
distinct_user_id<simdjson_dom>/manual_time                264008 ns       294778 ns         2652             3.5k           2.40573G               0        93.521k     969.33k              1.53493          3.80945k       3.69262G          2.91782M                    4.62036                     3.01015           438.087k    3.65113k   631.515k       2.22775G/s    1.56787   93.6631k   974.371k         1.54291   3.78776k/s 3.69068G/s     2.91782M               4.62036                2.99457        115       435.592k/s [BEST: throughput=  2.41 GB/s doc_throughput=  3809 docs/s instructions=     2917824 cycles=      969330 branch_miss=    3500 cache_miss=       0 cache_ref=     93521 items=       115 avg_time=    264008 ns]
distinct_user_id<simdjson_ondemand>/manual_time          1202737 ns      1232774 ns          582          31.385k           527.553M               0        57.828k    4.41914M              6.99768           835.377       3.69165G          10.6053M                    16.7934                     2.39985           96.0684k    31.8503k   631.515k       500.741M/s    26.7423   57.8939k   4.43774M         7.02714    831.437/s 3.68971G/s     10.6053M               16.7934                2.38979        115       95.6153k/s [BEST: throughput=  0.53 GB/s doc_throughput=   835 docs/s instructions=    10605298 cycles=     4419142 branch_miss=   31385 cache_miss=       0 cache_ref=     57828 items=       115 avg_time=   1202736 ns]
distinct_user_id<yyjson>/manual_time                      623595 ns       657548 ns         1334           9.824k           1.83727G             476        77.363k    1.26925M              2.00984          2.90931k       3.69263G          2.87785M                    4.55706                     2.26737           334.571k    7.71966k   631.515k       965.786M/s    1.1491k   50.5546k   1.49561M         2.36829    1.6036k/s 2.39837G/s     2.87833M               4.55782                1.92452        115       184.414k/s [BEST: throughput=  1.84 GB/s doc_throughput=  2909 docs/s instructions=     2877850 cycles=     1269246 branch_miss=    9824 cache_miss=     476 cache_ref=     77363 items=       115 avg_time=    623595 ns]
distinct_user_id<yyjson_insitu>/manual_time               420469 ns       453394 ns         1666           7.028k           2.07741G          2.531k        47.133k    1.11898M               1.7719          3.28957k       3.68097G          2.87774M                    4.55688                     2.57175           378.301k    7.51636k   631.515k       1.39878G/s    82.1885   32.3962k   1.21866M         1.92974   2.37829k/s 2.89833G/s       2.878M               4.55729                2.36161        115       273.504k/s [BEST: throughput=  2.08 GB/s doc_throughput=  3289 docs/s instructions=     2877737 cycles=     1118982 branch_miss=    7028 cache_miss=    2531 cache_ref=     47133 items=       115 avg_time=    420469 ns]
distinct_user_id<rapidjson>/manual_time                  2371576 ns      2402536 ns          296          29.209k           287.857M             249        54.893k     8.0877M              12.8068            455.82       3.68654G          21.8222M                    34.5552                     2.69819           52.4193k    29.5209k   631.515k       253.949M/s   2.75681k   37.7883k   8.23616M         13.0419    421.661/s 3.47286G/s      21.823M               34.5566                2.64966        115        48.491k/s [BEST: throughput=  0.29 GB/s doc_throughput=   455 docs/s instructions=    21822157 cycles=     8087703 branch_miss=   29209 cache_miss=     249 cache_ref=     54893 items=       115 avg_time=   2371575 ns]
distinct_user_id<rapidjson_insitu>/manual_time           1563095 ns      1593847 ns          435          25.518k           439.719M              26        45.149k    5.30183M              8.39541           696.292       3.69162G          13.2889M                    21.0429                     2.50648           80.0736k    31.0494k   631.515k       385.299M/s   3.05824k   38.3903k   5.50124M         8.71117    639.756/s 3.51945G/s     13.2894M               21.0437                2.41571        115        73.572k/s [BEST: throughput=  0.44 GB/s doc_throughput=   696 docs/s instructions=    13288900 cycles=     5301828 branch_miss=   25518 cache_miss=      26 cache_ref=     45149 items=       115 avg_time=   1563095 ns]
find_tweet<simdjson_dom>/manual_time                      252397 ns       281725 ns         2772           3.275k           2.51593G               0        83.127k    926.885k              1.46772          3.98395k       3.69267G           2.8325M                    4.48525                     3.05594           3.98395k     3.3957k   631.515k       2.33023G/s   0.181097   83.3265k   931.573k         1.47514   3.96201k/s  3.6909G/s      2.8325M               4.48525                3.04056          1       3.96201k/s [BEST: throughput=  2.52 GB/s doc_throughput=  3983 docs/s instructions=     2832504 cycles=      926885 branch_miss=    3275 cache_miss=       0 cache_ref=     83127 items=         1 avg_time=    252397 ns]
find_tweet<simdjson_ondemand>/manual_time                1152675 ns      1181481 ns          607          30.326k           550.816M               0        33.554k    4.23254M              6.70221           872.213       3.69168G          10.0995M                    15.9925                     2.38615            872.213    30.9132k   631.515k       522.489M/s    24.3377   33.7237k   4.25315M         6.73484    867.547/s 3.68981G/s     10.0995M               15.9925                2.37459          1        867.547/s [BEST: throughput=  0.55 GB/s doc_throughput=   872 docs/s instructions=    10099498 cycles=     4232543 branch_miss=   30326 cache_miss=       0 cache_ref=     33554 items=         1 avg_time=   1152674 ns]
find_tweet<yyjson>/manual_time                            611779 ns       642936 ns         1245           9.271k            1.8389G             138        68.145k    1.23181M              1.95056          2.91189k       3.58689G          2.81715M                    4.46094                       2.287           2.91189k    7.40577k   631.515k       984.441M/s    1083.77   41.7539k   1.45531M         2.30448   1.63458k/s 2.37882G/s     2.81784M               4.46203                1.93624          1       1.63458k/s [BEST: throughput=  1.84 GB/s doc_throughput=  2911 docs/s instructions=     2817153 cycles=     1231809 branch_miss=    9271 cache_miss=     138 cache_ref=     68145 items=         1 avg_time=    611778 ns]
find_tweet<yyjson_insitu>/manual_time                     409735 ns       440164 ns         1709           6.883k           2.14744G             514        38.264k    1082.35k               1.7139          3.40046k       3.68049G          2.81704M                    4.46076                      2.6027           3.40046k    7.26898k   631.515k       1.43542G/s    17.6103   23.6229k   1.17996M         1.86846    2.4406k/s 2.87981G/s      2.8173M               4.46118                2.38762          1        2.4406k/s [BEST: throughput=  2.15 GB/s doc_throughput=  3400 docs/s instructions=     2817039 cycles=     1082352 branch_miss=    6883 cache_miss=     514 cache_ref=     38264 items=         1 avg_time=    409735 ns]
find_tweet<rapidjson>/manual_time                        2349112 ns      2378475 ns          298          28.634k           290.413M         21.728k        49.028k    8.02732M              12.7112           459.868       3.69151G          21.7388M                    34.4232                      2.7081            459.868    29.3403k   631.515k       256.378M/s   2.31545k    30.103k   8.15442M         12.9125    425.693/s 3.47128G/s     21.7393M               34.4241                2.66596          1        425.693/s [BEST: throughput=  0.29 GB/s doc_throughput=   459 docs/s instructions=    21738760 cycles=     8027323 branch_miss=   28634 cache_miss=   21728 cache_ref=     49028 items=         1 avg_time=   2349111 ns]
find_tweet<rapidjson_insitu>/manual_time                 1541389 ns      1571428 ns          448          25.485k           442.661M              49        36.504k    5.26656M              8.33956            700.95        3.6916G           13.211M                    20.9195                     2.50847             700.95    29.2543k   631.515k       390.725M/s   2.73994k   28.8528k   5.41983M         8.58226    648.766/s  3.5162G/s     13.2115M               20.9203                2.43762          1        648.766/s [BEST: throughput=  0.44 GB/s doc_throughput=   700 docs/s instructions=    13210982 cycles=     5266559 branch_miss=   25485 cache_miss=      49 cache_ref=     36504 items=         1 avg_time=   1541388 ns]
