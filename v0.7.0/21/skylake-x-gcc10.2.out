run_benchmark: v0.8.0~17 /home/jkeiser/simdjson_benchmark_results/v0.7.0/21/skylake-x-gcc10.2.json -DCMAKE_BUILD_TYPE=Release
git reset --hard v0.8.0~17
HEAD is now at 7dbe4caf Taking a float and adding hundreds of zeros, you may get a truncated value that is just one over the desired value (bug fix) (#1388)
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- git Version: v0.2.1-7dbe4caf
-- Version: 0.2.1
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 10
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
make[3]: Nothing to be done for '_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build'.
[ 80%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
make[3]: Nothing to be done for 'jsonexamples/generated/CMakeFiles/generated-data.dir/build'.
[ 80%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/g++-10  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/src  -O3 -DNDEBUG -fPIC   -pthread -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/g++-10 -fPIC -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.6 -o ../libsimdjson.so.6.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.6.0.0 ../libsimdjson.so.6 ../libsimdjson.so
[ 80%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
make[3]: Nothing to be done for 'dependencies/CMakeFiles/yyjson.dir/build'.
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/g++-10  -DRAPIDJSON_HAS_STDSTRING -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_COMPETITION_RAPIDJSON -DSIMDJSON_COMPETITION_YYJSON -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/rapidjson/include  -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/g++-10  -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.6.0.0 ../_deps/google_benchmarks/src/libbenchmark.a ../dependencies/libyyjson.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/21/skylake-x-gcc10.2.json --benchmark_out_format=json
2021-01-24 23:26:35
Running benchmark/bench_ondemand
Run on (4 X 3200 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 1024 KiB (x4)
  L3 Unified 8448 KiB (x1)
Load Average: 1.01, 1.00, 1.00
***WARNING*** CPU scaling is enabled, the benchmark real time measurements may be noisy and will incur extra overhead.
simdjson::dom implementation:      haswell
simdjson::ondemand implementation: fallback

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                  305475 ns       376968 ns         2290           3.937k            2.0822G               0        33.562k     968.74k              1.53399          3.29715k       3.19408G          2.96251M                    4.69112                     3.05811           329.715k    4.07167k   631.515k       1.92535G/s   0.522707   33.7188k   974.726k         1.54347   3.27359k/s 3.19086G/s     2.96251M               4.69112                3.03933        100       327.359k/s [BEST: throughput=  2.08 GB/s doc_throughput=  3297 docs/s instructions=     2962511 cycles=      968740 branch_miss=    3937 cache_miss=       0 cache_ref=     33562 items=       100 avg_time=    305474 ns]
partial_tweets<simdjson_ondemand>/manual_time            1294228 ns      1349704 ns          541          32.556k           491.496M               0          9.48k    4.10238M              6.49609           778.282        3.1928G          10.6861M                    16.9214                     2.60486           77.8282k    33.1337k   631.515k       465.343M/s   0.269871    9.6856k   4.12833M         6.53718    772.661/s  3.1898G/s     10.6861M               16.9214                2.58849        100       77.2661k/s [BEST: throughput=  0.49 GB/s doc_throughput=   778 docs/s instructions=    10686125 cycles=     4102376 branch_miss=   32556 cache_miss=       0 cache_ref=      9480 items=       100 avg_time=   1294227 ns]
partial_tweets<yyjson>/manual_time                        829918 ns       909790 ns          843          10.033k           1.33568G             305         28.25k    1.51026M              2.39149          2.11504k       3.19426G          2.90844M                     4.6055                     1.92579           211.504k    7.77237k   631.515k       725.686M/s    643.866    25.797k   1.68093M         2.66174   1.20494k/s 2.02541G/s     2.90885M               4.60614                 1.7305        100       120.494k/s [BEST: throughput=  1.34 GB/s doc_throughput=  2115 docs/s instructions=     2908443 cycles=     1510263 branch_miss=   10033 cache_miss=     305 cache_ref=     28250 items=       100 avg_time=    829918 ns]
partial_tweets<yyjson_insitu>/manual_time                 549903 ns       615493 ns         1285           7.183k           1.63216G          2.052k        14.334k     1.2308M              1.94897          2.58452k       3.18104G          2.90805M                    4.60487                     2.36272           258.452k    7.47154k   631.515k       1095.21M/s    125.699   11.9766k   1.35528M         2.14608    1.8185k/s 2.46458G/s     2.90831M               4.60529                2.14591        100        181.85k/s [BEST: throughput=  1.63 GB/s doc_throughput=  2584 docs/s instructions=     2908046 cycles=     1230804 branch_miss=    7183 cache_miss=    2052 cache_ref=     14334 items=       100 avg_time=    549903 ns]
partial_tweets<rapidjson>/manual_time                    1926591 ns      1994849 ns          364          25.989k           380.974M          9.556k         22.36k    5.29234M              8.38038           603.271       3.19271G          13.4088M                    21.2327                     2.53362           60.3271k    26.6078k   631.515k       312.604M/s    417.135   15.8022k    5.4654M         8.65443    519.051/s 2.83682G/s     13.4097M               21.2342                2.45356        100       51.9051k/s [BEST: throughput=  0.38 GB/s doc_throughput=   603 docs/s instructions=    13408787 cycles=     5292338 branch_miss=   25989 cache_miss=    9556 cache_ref=     22360 items=       100 avg_time=   1926591 ns]
partial_tweets<rapidjson_insitu>/manual_time             1421211 ns      1484501 ns          495          25.524k           510.905M             178        14.627k    3.94673M              6.24963           809.015       3.19297G          9.75471M                    15.4465                     2.47159           80.9015k    28.8787k   631.515k       423.765M/s    223.394    10.312k   4.13309M         6.54473    703.625/s 2.90815G/s     9.75552M               15.4478                2.36034        100       70.3625k/s [BEST: throughput=  0.51 GB/s doc_throughput=   809 docs/s instructions=     9754713 cycles=     3946733 branch_miss=   25524 cache_miss=     178 cache_ref=     14627 items=       100 avg_time=   1421211 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                 104094212 ns    110236605 ns            7         858.055k           442.261M        6.74155M       6.89559M     331.63M              7.20955           9.61462        3.1885G          983.113M                    21.3726                     2.96448           9.61462M    859.879k   45.9988M       421.425M/s   6.79534M   6.89534M   331.887M         7.21513    9.60668/s 3.18833G/s     983.113M               21.3726                2.96219      1000k       9.60668M/s [BEST: throughput=  0.44 GB/s doc_throughput=     9 docs/s instructions=   983112691 cycles=   331630355 branch_miss=  858055 cache_miss= 6741550 cache_ref=   6895592 items=   1000000 avg_time= 104094212 ns]
large_random<simdjson_ondemand>/manual_time            147719447 ns    153858873 ns            5         2.40239M           311.574M        3.53264M       3.57285M     470.89M               10.237           6.77354       3.18959G          1.28297G                    27.8915                     2.72458           6.77354M    2.40518M   45.9988M       296.967M/s   3.53569M   3.57298M   471.129M         10.2422    6.76959/s 3.18935G/s     1.28297G               27.8915                2.72319      1000k       6.76959M/s [BEST: throughput=  0.31 GB/s doc_throughput=     6 docs/s instructions=  1282973822 cycles=   470889506 branch_miss= 2402392 cache_miss= 3532643 cache_ref=   3572847 items=   1000000 avg_time= 147719447 ns]
large_random<simdjson_ondemand_unordered>/manual_time  153771007 ns    159913456 ns            5         2.38351M           299.216M        3.53288M       3.57347M    490.321M              10.6594           6.50487       3.18947G          1.28697G                    27.9784                     2.62476           6.50487M    2.38362M   45.9988M        285.28M/s   3.53554M   3.57346M   490.406M         10.6613    6.50318/s  3.1892G/s     1.28697G               27.9784                 2.6243      1000k       6.50318M/s [BEST: throughput=  0.30 GB/s doc_throughput=     6 docs/s instructions=  1286973836 cycles=   490320761 branch_miss= 2383507 cache_miss= 3532881 cache_ref=   3573469 items=   1000000 avg_time= 153771006 ns]
large_random<yyjson>/manual_time                       156635388 ns    162814101 ns            4         665.908k           293.819M        4.21005M       5.37732M    359.687M              7.81949           6.38755       2.29752G           944.15M                    20.5255                     2.62492           6.38755M    665.972k   45.9988M       280.063M/s    4.2088M   5.36892M   359.925M         7.82465    6.38425/s 2.29785G/s      944.15M               20.5255                2.62319      1000k       6.38425M/s [BEST: throughput=  0.29 GB/s doc_throughput=     6 docs/s instructions=   944149614 cycles=   359686869 branch_miss=  665908 cache_miss= 4210045 cache_ref=   5377321 items=   1000000 avg_time= 156635387 ns]
large_random<yyjson_insitu>/manual_time                130572326 ns    136775530 ns            5         662.968k           352.518M         3.4923M        4.6606M    316.747M              6.88599           7.66365       2.42744G          938.029M                    20.3925                     2.96144           7.66365M    665.572k   45.9988M       335.966M/s    3.4949M   4.63978M   317.034M         6.89222    7.65859/s 2.42803G/s     938.029M               20.3925                2.95877      1000k       7.65859M/s [BEST: throughput=  0.35 GB/s doc_throughput=     7 docs/s instructions=   938028835 cycles=   316747265 branch_miss=  662968 cache_miss= 3492301 cache_ref=   4660600 items=   1000000 avg_time= 130572326 ns]
large_random<rapidjson>/manual_time                    202691167 ns    208875945 ns            4         603.014k           238.162M        4.34782M       5.18535M    547.759M              11.9081           5.17758       2.83606G          1.65612G                    36.0037                     3.02346           5.17758M    604.782k   45.9988M       216.427M/s    4.0497M   5.09507M   553.548M          12.034    4.93361/s 2.73099G/s     1.65613G               36.0039                2.99185      1000k       4.93361M/s [BEST: throughput=  0.24 GB/s doc_throughput=     5 docs/s instructions=  1656123952 cycles=   547758648 branch_miss=  603014 cache_miss= 4347823 cache_ref=   5185348 items=   1000000 avg_time= 202691167 ns]
large_random<rapidjson_lossless>/manual_time           235966234 ns    242148731 ns            3         648.106k           202.624M        4.33971M       5.19069M    655.914M              14.2594           4.40498       2.88929G          2.00709G                    43.6336                        3.06           4.40498M     703.67k   45.9988M       185.907M/s   4.08156M   5.11558M   662.668M         14.4062    4.23789/s 2.80832G/s      2.0071G               43.6338                3.02882      1000k       4.23789M/s [BEST: throughput=  0.20 GB/s doc_throughput=     4 docs/s instructions=  2007093342 cycles=   655913619 branch_miss=  648106 cache_miss= 4339706 cache_ref=   5190693 items=   1000000 avg_time= 235966234 ns]
large_random<rapidjson_insitu>/manual_time             186597978 ns    192743273 ns            4         591.465k           259.678M        5.04248M       5.90256M    496.722M              10.7986           5.64532       2.80416G          1.49112G                    32.4165                     3.00192           5.64532M    593.143k   45.9988M       235.093M/s   4.74847M   5.80833M   502.454M         10.9232    5.35911/s 2.69271G/s     1.49113G               32.4168                2.96769      1000k       5.35911M/s [BEST: throughput=  0.26 GB/s doc_throughput=     5 docs/s instructions=  1491121414 cycles=   496722392 branch_miss=  591465 cache_miss= 5042476 cache_ref=   5902559 items=   1000000 avg_time= 186597978 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                        98036052 ns    117087531 ns            7         462.921k           1.40263G         10.185M       10.3142M    312.129M              2.27325           10.2155       3.18854G          945.501M                    6.88614                      3.0292           5.35584M    463.012k   137.305M       1.30437G/s   10.2345M   10.3145M   312.572M         2.27648    10.2003/s 3.18834G/s     945.501M               6.88614                 3.0249   524.288k       5.34791M/s [BEST: throughput=  1.40 GB/s doc_throughput=    10 docs/s instructions=   945501391 cycles=   312128656 branch_miss=  462921 cache_miss=10185006 cache_ref=  10314156 items=    524288 avg_time=  98036051 ns]
kostya<simdjson_ondemand>/manual_time                  344336906 ns    363526696 ns            2         3.32951M           398.759M        6.45744M       6.47203M    1098.18M              7.99813           2.90418       3.18933G           2.8802G                    20.9767                      2.6227           1.52263M    3.32985M   137.305M       380.279M/s    6.4527M   6.47208M   1098.27M         7.99878    2.90413/s 3.18953G/s      2.8802G               20.9767                2.62249   524.288k        1.5226M/s [BEST: throughput=  0.40 GB/s doc_throughput=     2 docs/s instructions=  2880202964 cycles=  1098183802 branch_miss= 3329515 cache_miss= 6457441 cache_ref=   6472030 items=    524288 avg_time= 344336906 ns]
kostya<yyjson>/manual_time                             258097626 ns    277276190 ns            3          415.33k           532.113M        8.49299M       9.92323M    591.092M              4.30495           3.87541       2.29072G          984.045M                    7.16686                     1.66479           2.03183M    412.899k   137.305M       507.344M/s   8.49368M   9.92064M   590.967M         4.30405     3.8745/s  2.2897G/s     984.045M               7.16686                1.66514   524.288k       2.03136M/s [BEST: throughput=  0.53 GB/s doc_throughput=     3 docs/s instructions=   984045155 cycles=   591091788 branch_miss=  415330 cache_miss= 8492988 cache_ref=   9923231 items=    524288 avg_time= 258097625 ns]
kostya<yyjson_insitu>/manual_time                      180282581 ns    199520679 ns            4          413.43k           761.881M        6.35908M       7.80942M    463.257M              3.37393           5.54883       2.57053G          965.775M                     7.0338                     2.08475           2.90918M    413.128k   137.305M       726.328M/s   6.35783M   7.81088M    463.32M         3.37439    5.54685/s 2.56997G/s     965.776M                7.0338                2.08447   524.288k       2.90815M/s [BEST: throughput=  0.76 GB/s doc_throughput=     5 docs/s instructions=   965775478 cycles=   463256965 branch_miss=  413430 cache_miss= 6359079 cache_ref=   7809420 items=    524288 avg_time= 180282581 ns]
kostya<rapidjson>/manual_time                          286857000 ns    305998489 ns            2         966.529k           484.327M        5.19841M       6.41064M    806.832M               5.8762           3.52738         2.846G          2.29502G                    16.7148                     2.84449           1.84936M    969.986k   137.305M       456.479M/s   5.07362M   6.37267M   808.963M         5.89172    3.48606/s 2.82009G/s     2.29503G               16.7148                  2.837   524.288k        1.8277M/s [BEST: throughput=  0.48 GB/s doc_throughput=     3 docs/s instructions=  2295024200 cycles=   806832256 branch_miss=  966529 cache_miss= 5198405 cache_ref=   6410638 items=    524288 avg_time= 286857000 ns]
kostya<rapidjson_lossless>/manual_time                 305351868 ns    324469717 ns            2          949.44k           454.517M        5.19573M       6.41709M    865.852M              6.30605           3.31028       2.86621G          2.49529G                    18.1734                      2.8819           1.73554M    950.221k   137.305M       428.831M/s   5.07194M   6.37569M   867.786M         6.32014    3.27491/s 2.84192G/s      2.4953G               18.1734                2.87547   524.288k         1.717M/s [BEST: throughput=  0.45 GB/s doc_throughput=     3 docs/s instructions=  2495294170 cycles=   865851578 branch_miss=  949440 cache_miss= 5195728 cache_ref=   6417092 items=    524288 avg_time= 305351868 ns]
kostya<rapidjson_insitu>/manual_time                   270988674 ns    290094292 ns            3         1019.34k           514.792M        7.32399M       8.56618M    753.826M              5.49016           3.74926       2.82629G          2.03014G                    14.7856                     2.69312           1.96569M    1024.78k   137.305M       483.209M/s    7.1618M   8.51543M    756.06M         5.50643    3.69019/s 2.79001G/s     2.03014G               14.7857                2.68516   524.288k       1.93472M/s [BEST: throughput=  0.51 GB/s doc_throughput=     3 docs/s instructions=  2030142603 cycles=   753825869 branch_miss= 1019344 cache_miss= 7323992 cache_ref=   8566181 items=    524288 avg_time= 270988673 ns]
distinct_user_id<simdjson_dom>/manual_time                297662 ns       376223 ns         2352           3.948k           2.14273G               0        33.973k    941.339k               1.4906          3.39299k       3.19396G          2.90344M                    4.59757                     3.08437           390.194k     4.1412k   631.515k       1.97588G/s   0.155612   33.9634k   949.791k         1.50399   3.35952k/s 3.19084G/s     2.90344M               4.59757                3.05692        115       386.345k/s [BEST: throughput=  2.14 GB/s doc_throughput=  3392 docs/s instructions=     2903436 cycles=      941339 branch_miss=    3948 cache_miss=       0 cache_ref=     33973 items=       115 avg_time=    297661 ns]
distinct_user_id<simdjson_ondemand>/manual_time          1287186 ns      1349954 ns          544          32.433k           494.296M               1         8.337k    4.07924M              6.45945           782.714       3.19288G          10.3431M                    16.3783                     2.53555           90.0121k     33.018k   631.515k       467.889M/s    0.71875   8.19219k   4.10576M         6.50144    776.889/s 3.18971G/s     10.3431M               16.3783                2.51918        115       89.3422k/s [BEST: throughput=  0.49 GB/s doc_throughput=   782 docs/s instructions=    10343117 cycles=     4079239 branch_miss=   32433 cache_miss=       1 cache_ref=      8337 items=       115 avg_time=   1287185 ns]
distinct_user_id<yyjson>/manual_time                      826417 ns       915010 ns         1017          10.239k           1.34186G             221        27.533k     1.5033M              2.38046          2.12483k       3.19425G           2.8749M                    4.55239                      1.9124           244.355k    7.90758k   631.515k        728.76M/s    483.466   25.5387k   1.67287M         2.64898   1.21004k/s 2.02425G/s     2.87538M               4.55315                1.71883        115       139.155k/s [BEST: throughput=  1.34 GB/s doc_throughput=  2124 docs/s instructions=     2874900 cycles=     1503296 branch_miss=   10239 cache_miss=     221 cache_ref=     27533 items=       115 avg_time=    826416 ns]
distinct_user_id<yyjson_insitu>/manual_time               547804 ns       622055 ns         1288           6.971k           1.65831G          1.495k        14.268k    1.21105M              1.91769          2.62592k       3.18013G          2.87458M                    4.55188                     2.37362           301.981k    7.61193k   631.515k       1099.41M/s    119.193   11.8285k   1.34887M         2.13593   1.82547k/s 2.46232G/s     2.87484M               4.55229                 2.1313        115       209.929k/s [BEST: throughput=  1.66 GB/s doc_throughput=  2625 docs/s instructions=     2874579 cycles=     1211053 branch_miss=    6971 cache_miss=    1495 cache_ref=     14268 items=       115 avg_time=    547803 ns]
distinct_user_id<rapidjson>/manual_time                  1905758 ns      1980774 ns          368          26.103k           380.753M          9.806k         22.73k    5.29569M              8.38569            602.92       3.19287G          13.3497M                    21.1392                     2.52087           69.3358k    26.6715k   631.515k       316.021M/s   1.33395k   16.4708k    5.4478M         8.62656    524.726/s  2.8586G/s     13.3506M               21.1405                2.45063        115       60.3434k/s [BEST: throughput=  0.38 GB/s doc_throughput=   602 docs/s instructions=    13349723 cycles=     5295686 branch_miss=   26103 cache_miss=    9806 cache_ref=     22730 items=       115 avg_time=   1905758 ns]
distinct_user_id<rapidjson_insitu>/manual_time           1385126 ns      1455670 ns          537          25.627k           512.316M             209         14.99k    3.93577M              6.23226           811.248       3.19289G          9.70546M                    15.3685                     2.46596           93.2936k    27.8707k   631.515k       434.805M/s   1.39216k    11.571k   4.08552M          6.4694    721.956/s 2.94957G/s     9.70579M               15.3691                2.37565        115        83.025k/s [BEST: throughput=  0.51 GB/s doc_throughput=   811 docs/s instructions=     9705458 cycles=     3935768 branch_miss=   25627 cache_miss=     209 cache_ref=     14990 items=       115 avg_time=   1385125 ns]
find_tweet<simdjson_dom>/manual_time                      283504 ns       357917 ns         2470           3.762k           2.24669G               0        30.576k    897.854k              1.42175          3.55762k       3.19422G           2.8224M                    4.46925                     3.14349           3.55762k    3.88698k   631.515k       2.07455G/s   0.145344   30.5399k   904.589k         1.43241   3.52728k/s 3.19074G/s      2.8224M               4.46925                3.12009          1       3.52728k/s [BEST: throughput=  2.25 GB/s doc_throughput=  3557 docs/s instructions=     2822396 cycles=      897854 branch_miss=    3762 cache_miss=       0 cache_ref=     30576 items=         1 avg_time=    283504 ns]
find_tweet<simdjson_ondemand>/manual_time                1204951 ns      1269061 ns          581          31.511k           528.311M               4         7.563k    3.81656M              6.04349           836.578       3.19285G          9.73048M                    15.4081                     2.54954            836.578    32.0794k   631.515k       499.821M/s    8.00516   7.55837k   3.84352M          6.0862    829.909/s 3.18978G/s     9.73048M               15.4081                2.53166          1        829.909/s [BEST: throughput=  0.53 GB/s doc_throughput=   836 docs/s instructions=     9730477 cycles=     3816557 branch_miss=   31511 cache_miss=       4 cache_ref=      7563 items=         1 avg_time=   1204950 ns]
find_tweet<yyjson>/manual_time                            815600 ns       901792 ns          915           9.672k           1.37431G             222         27.28k    1.46761M              2.32395          2.17622k       3.19383G          2.82414M                    4.47201                     1.92432           2.17622k    7.60667k   631.515k       738.426M/s    459.209    24.695k   1.63999M         2.59692   1.22609k/s 2.01078G/s     2.82483M                4.4731                1.72246          1       1.22609k/s [BEST: throughput=  1.37 GB/s doc_throughput=  2176 docs/s instructions=     2824141 cycles=     1467607 branch_miss=    9672 cache_miss=     222 cache_ref=     27280 items=         1 avg_time=    815599 ns]
find_tweet<yyjson_insitu>/manual_time                     536243 ns       605839 ns         1316           7.219k            1.6843G             130        14.018k    1.19746M              1.89617          2.66708k       3.19371G          2.82382M                    4.47151                     2.35818           2.66708k    7.38023k   631.515k       1123.11M/s    10.1337    10.286k   1.31265M         2.07858   1.86483k/s 2.44787G/s     2.82408M               4.47192                2.15143          1       1.86483k/s [BEST: throughput=  1.68 GB/s doc_throughput=  2667 docs/s instructions=     2823825 cycles=     1197457 branch_miss=    7219 cache_miss=     130 cache_ref=     14018 items=         1 avg_time=    536243 ns]
find_tweet<rapidjson>/manual_time                        1902816 ns      1974327 ns          371          26.446k           384.018M         11.928k        20.838k    5.25064M              8.31436            608.09       3.19286G          13.2806M                    21.0298                     2.52934             608.09    28.4693k   631.515k        316.51M/s    1040.69   13.7373k   5.43952M         8.61345    525.537/s 2.85867G/s     13.2815M               21.0312                2.44167          1        525.537/s [BEST: throughput=  0.38 GB/s doc_throughput=   608 docs/s instructions=    13280633 cycles=     5250640 branch_miss=   26446 cache_miss=   11928 cache_ref=     20838 items=         1 avg_time=   1902816 ns]
find_tweet<rapidjson_insitu>/manual_time                 1371307 ns      1437255 ns          546          25.431k           516.361M               0        13.586k    3.90484M              6.18328           817.654       3.19281G           9.6471M                    15.2761                     2.47055            817.654    27.6801k   631.515k       439.186M/s   1.20333k   8.66052k   4.04053M         6.39816    729.231/s 2.94648G/s     9.64764M                15.277                2.38771          1        729.231/s [BEST: throughput=  0.52 GB/s doc_throughput=   817 docs/s instructions=     9647098 cycles=     3904837 branch_miss=   25431 cache_miss=       0 cache_ref=     13586 items=         1 avg_time=   1371307 ns]
