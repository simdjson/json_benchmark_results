run_benchmark: v0.8.0~17 /home/jkeiser/simdjson_benchmark_results/v0.7.0/21/ampere-clang11.json -DCMAKE_BUILD_TYPE=Release
git reset --hard v0.8.0~17
HEAD is now at 7dbe4caf Taking a float and adding hundreds of zeros, you may get a truncated value that is just one over the desired value (bug fix) (#1388)
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- git Version: v0.2.1-7dbe4caf
-- Version: 0.2.1
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES -- failed to compile
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 10
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
make[3]: Nothing to be done for '_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build'.
[ 80%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
make[3]: Nothing to be done for 'jsonexamples/generated/CMakeFiles/generated-data.dir/build'.
[ 80%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/clang++-11  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/src  -O3 -DNDEBUG -fPIC   -pthread -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/clang++-11 -fPIC -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.6 -o ../libsimdjson.so.6.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.6.0.0 ../libsimdjson.so.6 ../libsimdjson.so
[ 80%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
make[3]: Nothing to be done for 'dependencies/CMakeFiles/yyjson.dir/build'.
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/clang++-11  -DRAPIDJSON_HAS_STDSTRING -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_COMPETITION_RAPIDJSON -DSIMDJSON_COMPETITION_YYJSON -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/rapidjson/include  -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/clang++-11  -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.6.0.0 ../_deps/google_benchmarks/src/libbenchmark.a ../dependencies/libyyjson.a -pthread /usr/lib/aarch64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/21/ampere-clang11.json --benchmark_out_format=json
2021-01-25 00:48:33
Running benchmark/bench_ondemand
Run on (32 X 3300 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x32)
  L1 Instruction 32 KiB (x32)
  L2 Unified 256 KiB (x16)
Load Average: 1.00, 1.01, 1.00
simdjson::dom implementation:      arm64
simdjson::ondemand implementation: arm64

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                 1573302 ns      1641436 ns          445          14.172k           406.025M         25.988k       963.211k     4.9788M               7.8839           642.938       3.20106G          3.94988M                    6.25461                     0.79334           64.2938k    14.2336k   631.515k         382.8M/s   25.9903k   964.539k   5.03129M         7.96702    635.606/s 3.19792G/s     3.94988M               6.25461               0.785063        100       63.5606k/s [BEST: throughput=  0.41 GB/s doc_throughput=   642 docs/s instructions=     3949878 cycles=     4978798 branch_miss=   14172 cache_miss=   25988 cache_ref=    963211 items=       100 avg_time=   1573301 ns]
partial_tweets<simdjson_ondemand>/manual_time            1049311 ns      1117610 ns          667           8.492k           603.583M         22.844k       445.576k    3.34976M              5.30433            955.77        3.2016G          2.72439M                    4.31406                    0.813309            95.577k    8.73493k   631.515k       573.957M/s    22.827k   446.278k   3.35601M         5.31422    953.006/s  3.1983G/s      2.7244M               4.31406               0.811797        100       95.3006k/s [BEST: throughput=  0.60 GB/s doc_throughput=   955 docs/s instructions=     2724393 cycles=     3349763 branch_miss=    8492 cache_miss=   22844 cache_ref=    445576 items=       100 avg_time=   1049310 ns]
partial_tweets<yyjson>/manual_time                       1180733 ns      1250512 ns          595          45.312k           606.702M         24.256k       1.40737M    3.33264M              5.27722           960.708        3.2017G          3.27036M                     5.1786                    0.981312           96.0708k    45.2638k   631.515k       510.072M/s   24.2702k   1.40891M   3.55368M         5.62723    846.931/s 3.00972G/s     3.27059M               5.17895               0.920338        100       84.6931k/s [BEST: throughput=  0.61 GB/s doc_throughput=   960 docs/s instructions=     3270362 cycles=     3332644 branch_miss=   45312 cache_miss=   24256 cache_ref=   1407372 items=       100 avg_time=   1180733 ns]
partial_tweets<yyjson_insitu>/manual_time                1102524 ns      1174377 ns          638          45.392k           632.295M         14.361k        1.2498M    3.19786M              5.06379           1001.24       3.20181G          3.17145M                    5.02198                    0.991743           100.124k    45.1804k   631.515k       546.255M/s    14.418k   1.24987M   3.41457M         5.40695     907.01/s 3.09705G/s     3.17182M               5.02256               0.928908        100        90.701k/s [BEST: throughput=  0.63 GB/s doc_throughput=  1001 docs/s instructions=     3171453 cycles=     3197859 branch_miss=   45392 cache_miss=   14361 cache_ref=   1249797 items=       100 avg_time=   1102524 ns]
partial_tweets<rapidjson>/manual_time                    4583848 ns      4655559 ns          153          79.661k           140.317M         12.974k       13.3758M    14.4041M              22.8088           222.191       3.20045G            20.68M                    32.7467                     1.43571           22.2191k    79.4772k   631.515k       131.387M/s   13.2199k   13.3799M   14.4529M         22.8861    218.157/s 3.15301G/s     20.6804M               32.7474                1.43088        100       21.8157k/s [BEST: throughput=  0.14 GB/s doc_throughput=   222 docs/s instructions=    20680027 cycles=    14404070 branch_miss=   79661 cache_miss=   12974 cache_ref=  13375779 items=       100 avg_time=   4583847 ns]
partial_tweets<rapidjson_insitu>/manual_time             2926027 ns      2999753 ns          239          60.879k           221.106M         13.836k       5.85483M    9.14133M              14.4752            350.12       3.20056G          12.8216M                     20.303                      1.4026            35.012k    60.7193k   631.515k       205.828M/s   13.9824k   5.85795M   9.20898M         14.5824     341.76/s 3.14727G/s     12.8224M               20.3042                1.39238        100        34.176k/s [BEST: throughput=  0.22 GB/s doc_throughput=   350 docs/s instructions=    12821628 cycles=     9141329 branch_miss=   60879 cache_miss=   13836 cache_ref=   5854832 items=       100 avg_time=   2926026 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                 310451300 ns    314041401 ns            2         1.92213M           148.277M        3.98254M       231.765M    991.797M              21.5614            3.2235       3.19705G          1040.92M                    22.6292                     1.04952            3.2235M    1.92243M   45.9988M       141.303M/s    3.9826M   231.766M   992.495M         21.5766    3.22112/s 3.19694G/s     1040.92M               22.6292                1.04879      1000k       3.22112M/s [BEST: throughput=  0.15 GB/s doc_throughput=     3 docs/s instructions=  1040915694 cycles=   991796992 branch_miss= 1922135 cache_miss= 3982536 cache_ref= 231765034 items=   1000000 avg_time= 310451300 ns]
large_random<simdjson_ondemand>/manual_time            197469671 ns    201034529 ns            4         1.20834M           232.967M        2.31832M         143.4M     631.27M              13.7236           5.06462       3.19715G          662.774M                    14.4085                     1.04991           5.06462M    1.20833M   45.9988M        222.15M/s   2.31832M   143.401M   631.264M         13.7235    5.06407/s 3.19676G/s     662.774M               14.4085                1.04992      1000k       5.06407M/s [BEST: throughput=  0.23 GB/s doc_throughput=     5 docs/s instructions=   662773946 cycles=   631270134 branch_miss= 1208344 cache_miss= 2318324 cache_ref= 143400410 items=   1000000 avg_time= 197469671 ns]
large_random<simdjson_ondemand_unordered>/manual_time  187867661 ns    191462129 ns            4          1.1907M           244.868M         2.3183M       141.209M     600.59M              13.0567           5.32336       3.19716G          674.774M                    14.6694                     1.12352           5.32336M    1.19062M   45.9988M       233.504M/s   2.31832M   141.209M   600.615M         13.0572     5.3229/s 3.19701G/s     674.774M               14.6694                1.12347      1000k        5.3229M/s [BEST: throughput=  0.24 GB/s doc_throughput=     5 docs/s instructions=   674773945 cycles=   600590207 branch_miss= 1190705 cache_miss= 2318298 cache_ref= 141208696 items=   1000000 avg_time= 187867660 ns]
large_random<yyjson>/manual_time                       204951105 ns    208533586 ns            3         1.74043M           224.596M        4.91511M       205.511M    630.009M              13.6962           4.88264       3.07611G          816.384M                     17.748                     1.29583           4.88264M    1.75538M   45.9988M       214.041M/s   4.91502M    205.54M   630.355M         13.7037    4.87921/s 3.07564G/s     816.384M                17.748                1.29512      1000k       4.87921M/s [BEST: throughput=  0.22 GB/s doc_throughput=     4 docs/s instructions=   816384406 cycles=   630009109 branch_miss= 1740427 cache_miss= 4915107 cache_ref= 205511466 items=   1000000 avg_time= 204951105 ns]
large_random<yyjson_insitu>/manual_time                198964210 ns    202557817 ns            4         1.72773M           231.366M        4.19795M        193.98M    617.778M              13.4303           5.02982       3.10731G          809.197M                    17.5917                     1.30985           5.02982M    1.75539M   45.9988M       220.481M/s   4.19796M    194.03M   618.276M         13.4411    5.02603/s 3.10747G/s     809.197M               17.5917                1.30879      1000k       5.02603M/s [BEST: throughput=  0.23 GB/s doc_throughput=     5 docs/s instructions=   809196737 cycles=   617777724 branch_miss= 1727727 cache_miss= 4197953 cache_ref= 193979815 items=   1000000 avg_time= 198964209 ns]
large_random<rapidjson>/manual_time                    358362433 ns    361956768 ns            2         2.05942M           128.494M        4.95168M       779.126M    1.11848G              24.3154           2.79342       3.12438G          1.63051G                    35.4468                     1.45779           2.79342M    2.05793M   45.9988M       122.412M/s   4.95227M   779.126M   1.11746G         24.2933    2.79047/s 3.11824G/s     1.63051G               35.4469                1.45912      1000k       2.79047M/s [BEST: throughput=  0.13 GB/s doc_throughput=     2 docs/s instructions=  1630508477 cycles=  1118479072 branch_miss= 2059419 cache_miss= 4951682 cache_ref= 779126164 items=   1000000 avg_time= 358362433 ns]
large_random<rapidjson_lossless>/manual_time           417477994 ns    421049834 ns            2          1.4194M           110.333M        4.95286M       1021.19M    1.30641G              28.4009           2.39861       3.13356G          2.05348G                    44.6421                     1.57185           2.39861M    1.40932M   45.9988M       105.078M/s   4.95355M   1021.16M   1.30581G         28.3879    2.39534/s 3.12785G/s     2.05349G               44.6422                1.57258      1000k       2.39534M/s [BEST: throughput=  0.11 GB/s doc_throughput=     2 docs/s instructions=  2053481935 cycles=  1306407203 branch_miss= 1419396 cache_miss= 4952864 cache_ref=1021194297 items=   1000000 avg_time= 417477993 ns]
large_random<rapidjson_insitu>/manual_time             398408103 ns    356093723 ns            2         2.10609M           130.389M        5.67486M       696.378M    1096.68M              23.8415           2.83462       3.10867G          1.37952G                    29.9903                     1.25791           2.83462M    2.14533M   45.9988M       110.108M/s   5.67475M   696.379M   1097.94M         23.8689    2.50999/s 2.75581G/s     1.37951G               29.9902                1.25646      1000k       2.50999M/s [BEST: throughput=  0.13 GB/s doc_throughput=     2 docs/s instructions=  1379518273 cycles=  1096679011 branch_miss= 2106091 cache_miss= 5674859 cache_ref= 696377851 items=   1000000 avg_time= 398408102 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                       376414424 ns    387018402 ns            2         883.824k           364.799M        6.95421M       248.839M    1.20336G              8.76411           2.65685       3.19714G           1.1314G                    8.24004                    0.940203           1.39296M    884.176k   137.305M       347.873M/s   6.95421M   248.841M   1.20334G         8.76401    2.65665/s 3.19685G/s      1.1314G               8.24004               0.940214   524.288k       1.39285M/s [BEST: throughput=  0.36 GB/s doc_throughput=     2 docs/s instructions=  1131399191 cycles=  1203355973 branch_miss=  883824 cache_miss= 6954213 cache_ref= 248838601 items=    524288 avg_time= 376414424 ns]
kostya<simdjson_ondemand>/manual_time                  256568247 ns    267190638 ns            3         896.927k            535.21M         5.2839M       145.067M    820.138M              5.97311           3.89796       3.19687G          791.061M                    5.76134                    0.964546           2.04366M    898.001k   137.305M       510.368M/s   5.28392M   145.071M   820.188M         5.97348     3.8976/s 3.19676G/s     791.061M               5.76134               0.964487   524.288k       2.04346M/s [BEST: throughput=  0.54 GB/s doc_throughput=     3 docs/s instructions=   791060730 cycles=   820137922 branch_miss=  896927 cache_miss= 5283905 cache_ref= 145067391 items=    524288 avg_time= 256568247 ns]
kostya<yyjson>/manual_time                             273315224 ns    283930446 ns            3         1.40046M           502.515M        7.98609M       324.153M    831.472M              6.05566           3.65985       3.04306G          948.793M                    6.91012                      1.1411           1.91881M    1.39743M   137.305M       479.096M/s   7.98709M   324.119M   831.587M          6.0565    3.65878/s 3.04259G/s     948.793M               6.91012                1.14094   524.288k       1.91825M/s [BEST: throughput=  0.50 GB/s doc_throughput=     3 docs/s instructions=   948793409 cycles=   831471839 branch_miss= 1400457 cache_miss= 7986090 cache_ref= 324152707 items=    524288 avg_time= 273315223 ns]
kostya<yyjson_insitu>/manual_time                      255817464 ns    266419846 ns            3         1.39744M           536.809M        5.84614M       289.819M    795.676M              5.79495           3.90961       3.11078G          927.339M                    6.75386                     1.16547           2.04976M    1.39286M   137.305M       511.866M/s   5.84625M   289.793M   795.753M         5.79551    3.90904/s 3.11063G/s     927.339M               6.75386                1.16536   524.288k       2.04946M/s [BEST: throughput=  0.54 GB/s doc_throughput=     3 docs/s instructions=   927339174 cycles=   795676053 branch_miss= 1397443 cache_miss= 5846137 cache_ref= 289818897 items=    524288 avg_time= 255817463 ns]
kostya<rapidjson>/manual_time                          583214350 ns    593827914 ns            1         5.51612M           235.428M        5.34437M       1.20783G    1.83037G              13.3307           1.71464       3.13841G          2.46967G                    17.9868                     1.34928           898.963k    5.51612M   137.305M       224.522M/s   5.34437M   1.20783G   1.83037G         13.3307    1.71464/s 3.13841G/s     2.46967G               17.9868                1.34928   524.288k       898.963k/s [BEST: throughput=  0.24 GB/s doc_throughput=     1 docs/s instructions=  2469673343 cycles=  1830367430 branch_miss= 5516116 cache_miss= 5344367 cache_ref=1207826390 items=    524288 avg_time= 583214350 ns]
kostya<rapidjson_lossless>/manual_time                 646626259 ns    657248559 ns            1         7.42127M           212.341M        5.34513M       1.35666G    2.03286G              14.8054           1.54649        3.1438G          2.71451G                    19.7699                     1.33531           810.805k    7.42127M   137.305M       202.504M/s   5.34513M   1.35666G   2.03286G         14.8054    1.54649/s  3.1438G/s     2.71451G               19.7699                1.33531   524.288k       810.805k/s [BEST: throughput=  0.21 GB/s doc_throughput=     1 docs/s instructions=  2714507663 cycles=  2032861204 branch_miss= 7421267 cache_miss= 5345126 cache_ref=1356664589 items=    524288 avg_time= 646626259 ns]
kostya<rapidjson_insitu>/manual_time                   527622238 ns    538245381 ns            1          4.4529M           260.234M        6.32766M       905.732M    1.65297G              12.0387            1.8953       3.13286G          1.99322G                    14.5167                     1.20584           993.681k     4.4529M   137.305M       248.178M/s   6.32766M   905.732M   1.65297G         12.0387     1.8953/s 3.13286G/s     1.99322G               14.5167                1.20584   524.288k       993.681k/s [BEST: throughput=  0.26 GB/s doc_throughput=     1 docs/s instructions=  1993215162 cycles=  1652967093 branch_miss= 4452900 cache_miss= 6327655 cache_ref= 905732468 items=    524288 avg_time= 527622237 ns]
distinct_user_id<simdjson_dom>/manual_time               1576560 ns      1669078 ns          447          13.851k           407.445M         26.515k       948.129k    4.93067M              7.80769           645.187       3.18121G          3.87901M                    6.14239                    0.786711           74.1965k    13.9784k   631.515k       382.009M/s   26.6549k   951.365k   5.04046M         7.98153    634.292/s 3.19712G/s     3.87901M               6.14239               0.769575        115       72.9436k/s [BEST: throughput=  0.41 GB/s doc_throughput=   645 docs/s instructions=     3879014 cycles=     4930672 branch_miss=   13851 cache_miss=   26515 cache_ref=    948129 items=       115 avg_time=   1576560 ns]
distinct_user_id<simdjson_ondemand>/manual_time          1040414 ns      1120560 ns          673           9.122k           610.718M         22.472k       425.483k    3.31036M              5.24193           967.067       3.20134G          2.66992M                    4.22779                    0.806533           111.213k    9.75839k   631.515k       578.865M/s   22.4708k   427.753k    3.3273M         5.26876    961.156/s 3.19806G/s     2.66992M                4.2278               0.802427        115       110.533k/s [BEST: throughput=  0.61 GB/s doc_throughput=   967 docs/s instructions=     2669915 cycles=     3310360 branch_miss=    9122 cache_miss=   22472 cache_ref=    425483 items=       115 avg_time=   1040414 ns]
distinct_user_id<yyjson>/manual_time                     1165300 ns      1248798 ns          606          45.462k           616.521M          24.23k       1.39552M    3.27953M              5.19311           976.256       3.20166G          3.23372M                    5.12058                    0.986033           112.269k    45.4385k   631.515k       516.828M/s   24.2597k   1.39623M   3.50526M         5.55056    858.148/s 3.00803G/s     3.23387M               5.12081               0.922576        115        98.687k/s [BEST: throughput=  0.62 GB/s doc_throughput=   976 docs/s instructions=     3233725 cycles=     3279530 branch_miss=   45462 cache_miss=   24230 cache_ref=   1395515 items=       115 avg_time=   1165300 ns]
distinct_user_id<yyjson_insitu>/manual_time              1084251 ns      1168027 ns          646          45.425k           643.725M         14.351k       1.23754M     3.1405M              4.97295           1019.33       3.20121G          3.13466M                    4.96371                    0.998142           117.223k    45.4028k   631.515k       555.461M/s   14.3697k   1.23739M   3.35519M         5.31292    922.296/s 3.09448G/s     3.13481M               4.96395               0.934317        115       106.064k/s [BEST: throughput=  0.64 GB/s doc_throughput=  1019 docs/s instructions=     3134660 cycles=     3140495 branch_miss=   45425 cache_miss=   14351 cache_ref=   1237544 items=       115 avg_time=   1084250 ns]
distinct_user_id<rapidjson>/manual_time                  4564999 ns      4648745 ns          153          79.195k            140.62M         13.549k       13.3694M    14.3727M              22.7591           222.671       3.20039G          20.6316M                      32.67                     1.43547           25.6072k    79.3849k   631.515k        131.93M/s    13.751k   13.3674M   14.4437M         22.8716    219.058/s 3.16402G/s     20.6321M               32.6708                1.42845        115       25.1917k/s [BEST: throughput=  0.14 GB/s doc_throughput=   222 docs/s instructions=    20631619 cycles=    14372723 branch_miss=   79195 cache_miss=   13549 cache_ref=  13369395 items=       115 avg_time=   4564998 ns]
distinct_user_id<rapidjson_insitu>/manual_time           2960997 ns      3046402 ns          238          60.764k            217.77M         14.051k       5.84783M    9.28172M              14.6975           344.837       3.20068G          12.7749M                     20.229                     1.37636           39.6562k    60.6215k   631.515k       203.398M/s   14.2106k   5.84915M   9.32483M         14.7658    337.724/s 3.14922G/s     12.7754M               20.2298                1.37004        115       38.8383k/s [BEST: throughput=  0.22 GB/s doc_throughput=   344 docs/s instructions=    12774947 cycles=     9281717 branch_miss=   60764 cache_miss=   14051 cache_ref=   5847830 items=       115 avg_time=   2960996 ns]
find_tweet<simdjson_dom>/manual_time                     1488334 ns      1568676 ns          470          13.503k           425.242M         23.531k       931.344k     4.7539M              7.52777           673.368       3.20113G           3.7886M                    5.99922                    0.796945            673.368     13.683k   631.515k       404.654M/s   23.5321k   932.047k   4.75937M         7.53644    671.892/s 3.19779G/s      3.7886M               5.99922               0.796029          1        671.892/s [BEST: throughput=  0.43 GB/s doc_throughput=   673 docs/s instructions=     3788599 cycles=     4753902 branch_miss=   13503 cache_miss=   23531 cache_ref=    931344 items=         1 avg_time=   1488333 ns]
find_tweet<simdjson_ondemand>/manual_time                 904094 ns       984961 ns          774           4.526k           700.618M         11.553k       234.381k    2.88583M              4.56969          1.10942k       3.20161G          2.11682M                    3.35197                    0.733523           1.10942k    4.76521k   631.515k       666.147M/s   11.5577k   234.985k   2.89171M           4.579   1.10608k/s 3.19846G/s     2.11682M               3.35197               0.732031          1       1.10608k/s [BEST: throughput=  0.70 GB/s doc_throughput=  1109 docs/s instructions=     2116821 cycles=     2885829 branch_miss=    4526 cache_miss=   11553 cache_ref=    234381 items=         1 avg_time=    904093 ns]
find_tweet<yyjson>/manual_time                           1115809 ns      1200683 ns          628          45.051k           646.389M         21.713k        1.3786M    3.12835M              4.95373           1023.55       3.20203G          3.17691M                    5.03061                     1.01552            1023.55    45.2612k   631.515k       539.751M/s   21.7653k   1.38096M   3.34948M         5.30388     896.21/s 3.00184G/s     3.17742M               5.03143               0.948632          1         896.21/s [BEST: throughput=  0.65 GB/s doc_throughput=  1023 docs/s instructions=     3176906 cycles=     3128352 branch_miss=   45051 cache_miss=   21713 cache_ref=   1378604 items=         1 avg_time=   1115809 ns]
find_tweet<yyjson_insitu>/manual_time                    1039226 ns      1125609 ns          676          45.443k            670.58M         11.827k       1.22264M     3.0154M              4.77486           1061.86       3.20193G            3.078M                    4.87399                     1.02076            1061.86    45.2193k   631.515k       579.527M/s   11.8506k   1.22221M   3.21189M           5.086    962.255/s 3.09065G/s     3.07836M               4.87457               0.958428          1        962.255/s [BEST: throughput=  0.67 GB/s doc_throughput=  1061 docs/s instructions=     3077997 cycles=     3015396 branch_miss=   45443 cache_miss=   11827 cache_ref=   1222642 items=         1 avg_time=   1039225 ns]
find_tweet<rapidjson>/manual_time                        5400503 ns      4895805 ns          154           79.22k           141.539M          10.78k       13.3518M    14.2794M              22.6113           224.126       3.20039G          20.5737M                    32.5782                     1.44079            224.126    79.3238k   631.515k       111.519M/s   10.9809k   13.3482M   14.3192M         22.6743    185.168/s 2.65145G/s     20.5743M               32.5792                1.43683          1        185.168/s [BEST: throughput=  0.14 GB/s doc_throughput=   224 docs/s instructions=    20573651 cycles=    14279405 branch_miss=   79220 cache_miss=   10780 cache_ref=  13351751 items=         1 avg_time=   5400503 ns]
find_tweet<rapidjson_insitu>/manual_time                 2892679 ns      2980182 ns          241           60.65k           224.622M         10.628k       5.82286M    8.99871M              14.2494           355.687       3.20073G          12.7153M                    20.1347                     1.41302            355.687     60.595k   631.515k       208.201M/s   10.8137k   5.82765M   9.10835M          14.423      345.7/s 3.14876G/s     12.7159M               20.1355                1.39607          1          345.7/s [BEST: throughput=  0.22 GB/s doc_throughput=   355 docs/s instructions=    12715336 cycles=     8998707 branch_miss=   60650 cache_miss=   10628 cache_ref=   5822859 items=         1 avg_time=   2892678 ns]
