run_benchmark: v0.8.0~17 /home/jkeiser/simdjson_benchmark_results/v0.7.0/21/skylake-x-gcc10.2-native.json -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native
git reset --hard v0.8.0~17
HEAD is now at 7dbe4caf Taking a float and adding hundreds of zeros, you may get a truncated value that is just one over the desired value (bug fix) (#1388)
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- git Version: v0.2.1-7dbe4caf
-- Version: 0.2.1
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 10
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
make[3]: Nothing to be done for '_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build'.
[ 80%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
make[3]: Nothing to be done for 'jsonexamples/generated/CMakeFiles/generated-data.dir/build'.
[ 80%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/g++-10  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/src  -march=native -O3 -DNDEBUG -fPIC   -pthread -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/g++-10 -fPIC -march=native -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.6 -o ../libsimdjson.so.6.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.6.0.0 ../libsimdjson.so.6 ../libsimdjson.so
[ 80%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
make[3]: Nothing to be done for 'dependencies/CMakeFiles/yyjson.dir/build'.
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/g++-10  -DRAPIDJSON_HAS_STDSTRING -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_COMPETITION_RAPIDJSON -DSIMDJSON_COMPETITION_YYJSON -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/rapidjson/include  -march=native -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/g++-10  -march=native -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.6.0.0 ../_deps/google_benchmarks/src/libbenchmark.a ../dependencies/libyyjson.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/21/skylake-x-gcc10.2-native.json --benchmark_out_format=json
2021-01-24 23:36:45
Running benchmark/bench_ondemand
Run on (4 X 3200 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 1024 KiB (x4)
  L3 Unified 8448 KiB (x1)
Load Average: 1.00, 1.00, 1.00
***WARNING*** CPU scaling is enabled, the benchmark real time measurements may be noisy and will incur extra overhead.
simdjson::dom implementation:      haswell
simdjson::ondemand implementation: haswell

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                  323131 ns       391141 ns         2163           4.189k           1.96807G               3        33.878k    1024.85k              1.62285          3.11643k       3.19388G          3.07044M                    4.86202                     2.99599           311.643k    4.35807k   631.515k       1.82014G/s    3.38604   34.0172k   1031.08k         1.63271   3.09472k/s  3.1909G/s     3.07044M               4.86202                2.97789        100       309.472k/s [BEST: throughput=  1.97 GB/s doc_throughput=  3116 docs/s instructions=     3070441 cycles=     1024851 branch_miss=    4189 cache_miss=       3 cache_ref=     33878 items=       100 avg_time=    323131 ns]
partial_tweets<simdjson_ondemand>/manual_time             223146 ns       276504 ns         3135           2.168k           2.85473G               4        10.035k    706.628k              1.11894          4.52045k       3.19428G          2.23694M                    3.54218                     3.16566           452.045k    2.29422k   631.515k       2.63569G/s    3.21595   9.94251k   712.075k         1.12757   4.48137k/s 3.19107G/s     2.23694M               3.54218                3.14144        100       448.137k/s [BEST: throughput=  2.85 GB/s doc_throughput=  4520 docs/s instructions=     2236942 cycles=      706628 branch_miss=    2168 cache_miss=       4 cache_ref=     10035 items=       100 avg_time=    223146 ns]
partial_tweets<yyjson>/manual_time                        846038 ns       922504 ns          827           9.774k           1.24504G             358        27.939k    1.57324M              2.49121          1.97152k       3.10167G          2.90836M                    4.60537                     1.84865           197.152k    7.86338k   631.515k       711.859M/s    629.741   25.7529k   1.73891M         2.75355   1.18198k/s 2.05535G/s     2.90885M               4.60614                 1.6728        100       118.198k/s [BEST: throughput=  1.25 GB/s doc_throughput=  1971 docs/s instructions=     2908363 cycles=     1573237 branch_miss=    9774 cache_miss=     358 cache_ref=     27939 items=       100 avg_time=    846037 ns]
partial_tweets<yyjson_insitu>/manual_time                 573339 ns       635637 ns         1232           7.089k           1.53011G          2.142k        14.856k    1.30695M              2.06955          2.42292k       3.16664G          2.90825M                     4.6052                     2.22522           242.292k    7.62921k   631.515k       1050.44M/s    141.608   12.4262k   1.43124M         2.26635   1.74417k/s 2.49632G/s     2.90852M               4.60562                2.03217        100       174.417k/s [BEST: throughput=  1.53 GB/s doc_throughput=  2422 docs/s instructions=     2908254 cycles=     1306952 branch_miss=    7089 cache_miss=    2142 cache_ref=     14856 items=       100 avg_time=    573339 ns]
partial_tweets<rapidjson>/manual_time                    1904057 ns      1969457 ns          369          27.219k           386.556M             876        22.675k    5.21606M               8.2596           612.109        3.1928G          13.1151M                    20.7677                     2.51437           61.2109k    26.9896k   631.515k       316.303M/s    412.092   15.7102k    5.3998M         8.55054    525.194/s 2.83594G/s      13.116M                20.769                2.42897        100       52.5194k/s [BEST: throughput=  0.39 GB/s doc_throughput=   612 docs/s instructions=    13115118 cycles=     5216062 branch_miss=   27219 cache_miss=     876 cache_ref=     22675 items=       100 avg_time=   1904057 ns]
partial_tweets<rapidjson_insitu>/manual_time             1223941 ns      1283949 ns          574          25.198k           601.685M             151        15.012k    3.35137M              5.30688           952.764       3.19307G          9.82278M                    15.5543                     2.93097           95.2764k    27.5237k   631.515k       492.066M/s    203.591   10.4908k   3.50972M         5.55763    817.033/s 2.86756G/s     9.82319M                15.555                2.79885        100       81.7033k/s [BEST: throughput=  0.60 GB/s doc_throughput=   952 docs/s instructions=     9822778 cycles=     3351375 branch_miss=   25198 cache_miss=     151 cache_ref=     15012 items=       100 avg_time=   1223940 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                 104825567 ns    110717070 ns            7         863.918k           439.671M        6.76111M       6.89466M    333.624M              7.25289           9.55833       3.18889G          998.581M                    21.7089                     2.99313           9.55833M    863.754k   45.9988M       418.484M/s   6.80748M   6.89485M   334.228M         7.26603    9.53966/s 3.18843G/s     998.581M               21.7089                2.98772      1000k       9.53966M/s [BEST: throughput=  0.44 GB/s doc_throughput=     9 docs/s instructions=   998581007 cycles=   333624080 branch_miss=  863918 cache_miss= 6761114 cache_ref=   6894660 items=   1000000 avg_time= 104825567 ns]
large_random<simdjson_ondemand>/manual_time             67519856 ns     73388073 ns           10         865.469k           681.722M        3.52265M       3.57273M    215.062M              4.67539           14.8204       3.18731G          650.959M                    14.1517                     3.02684           14.8204M     865.55k   45.9988M       649.703M/s   3.52453M   3.57267M   215.263M         4.67976    14.8105/s 3.18814G/s     650.959M               14.1517                3.02402      1000k       14.8105M/s [BEST: throughput=  0.68 GB/s doc_throughput=    14 docs/s instructions=   650958758 cycles=   215062001 branch_miss=  865469 cache_miss= 3522650 cache_ref=   3572731 items=   1000000 avg_time=  67519856 ns]
large_random<simdjson_ondemand_unordered>/manual_time   70342562 ns     76214778 ns           10         863.886k           654.349M        3.50983M       3.57278M    224.165M              4.87329           14.2254       3.18883G          654.959M                    14.2386                     2.92176           14.2254M    864.179k   45.9988M       623.632M/s   3.52383M   3.57272M   224.269M         4.87554    14.2161/s 3.18824G/s     654.959M               14.2386                2.92042      1000k       14.2161M/s [BEST: throughput=  0.65 GB/s doc_throughput=    14 docs/s instructions=   654958760 cycles=   224165454 branch_miss=  863886 cache_miss= 3509828 cache_ref=   3572777 items=   1000000 avg_time=  70342562 ns]
large_random<yyjson>/manual_time                       155882416 ns    161789057 ns            4         655.999k            295.34M        4.20917M       5.38258M     358.22M               7.7876           6.42061       2.29999G           942.15M                    20.4821                     2.63009           6.42061M    659.188k   45.9988M       281.416M/s   4.21519M   5.37027M   358.594M         7.79573    6.41509/s 2.30041G/s      942.15M               20.4821                2.62734      1000k       6.41509M/s [BEST: throughput=  0.30 GB/s doc_throughput=     6 docs/s instructions=   942149604 cycles=   358220165 branch_miss=  655999 cache_miss= 4209171 cache_ref=   5382585 items=   1000000 avg_time= 155882416 ns]
large_random<yyjson_insitu>/manual_time                129923370 ns    135829126 ns            5         660.948k           354.222M        3.49288M        4.6382M    316.068M              6.87123           7.70068       2.43394G          936.029M                     20.349                     2.96148           7.70068M    659.749k   45.9988M       337.644M/s   3.49387M   4.64146M   316.209M          6.8743    7.69684/s 2.43381G/s     936.029M                20.349                2.96016      1000k       7.69684M/s [BEST: throughput=  0.35 GB/s doc_throughput=     7 docs/s instructions=   936028836 cycles=   316068121 branch_miss=  660948 cache_miss= 3492880 cache_ref=   4638198 items=   1000000 avg_time= 129923369 ns]
large_random<rapidjson>/manual_time                    209981583 ns    215926654 ns            3         601.253k           228.012M        4.34362M       5.16386M    575.943M              12.5208           4.95691        2.8549G          1.66212G                     36.134                     2.88591           4.95691M    595.558k   45.9988M       208.913M/s   4.08292M    5.0822M   580.654M         12.6233    4.76232/s 2.76526G/s     1.66213G               36.1342                2.86251      1000k       4.76232M/s [BEST: throughput=  0.23 GB/s doc_throughput=     4 docs/s instructions=  1662121316 cycles=   575943215 branch_miss=  601253 cache_miss= 4343619 cache_ref=   5163863 items=   1000000 avg_time= 209981583 ns]
large_random<rapidjson_lossless>/manual_time           237111411 ns    243058851 ns            3         592.036k           200.823M        4.34481M       5.16559M    662.811M              14.4093           4.36584       2.89373G          2.01909G                    43.8945                     3.04625           4.36584M    593.393k   45.9988M       185.009M/s   4.07726M   5.09819M   666.875M         14.4977    4.21743/s  2.8125G/s      2.0191G               43.8946                 3.0277      1000k       4.21743M/s [BEST: throughput=  0.20 GB/s doc_throughput=     4 docs/s instructions=  2019091247 cycles=   662810977 branch_miss=  592036 cache_miss= 4344815 cache_ref=   5165591 items=   1000000 avg_time= 237111410 ns]
large_random<rapidjson_insitu>/manual_time             189413593 ns    195333128 ns            4         736.927k            257.29M        5.03389M       5.89593M    502.421M              10.9225            5.5934       2.81024G          1.49412G                    32.4818                     2.97385            5.5934M    857.973k   45.9988M       231.598M/s   4.74212M   5.80758M   512.162M         11.1343    5.27945/s 2.70394G/s     1.49413G                32.482                 2.9173      1000k       5.27945M/s [BEST: throughput=  0.26 GB/s doc_throughput=     5 docs/s instructions=  1494121167 cycles=   502420589 branch_miss=  736927 cache_miss= 5033892 cache_ref=   5895934 items=   1000000 avg_time= 189413592 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                       100554423 ns    118835068 ns            7         459.221k           1.36798G        10.2606M       10.3138M    320.044M               2.3309            9.9631       3.18864G           972.65M                    7.08386                     3.03911           5.22354M    459.331k   137.305M        1.2717G/s    10.252M   10.3137M   320.595M         2.33491    9.94486/s 3.18827G/s      972.65M               7.08386                3.03389   524.288k       5.21397M/s [BEST: throughput=  1.37 GB/s doc_throughput=     9 docs/s instructions=   972649990 cycles=   320044348 branch_miss=  459221 cache_miss=10260632 cache_ref=  10313771 items=    524288 avg_time= 100554422 ns]
kostya<simdjson_ondemand>/manual_time                   73873750 ns     92096363 ns            9         474.913k           1.86146G        6.43832M       6.47101M    235.208M              1.71303           13.5571       3.18875G          699.692M                     5.0959                     2.97478           7.10785M    475.896k   137.305M         1.731G/s   6.44285M    6.4711M   235.543M         1.71547    13.5366/s 3.18845G/s     699.692M                5.0959                2.97055   524.288k       7.09708M/s [BEST: throughput=  1.86 GB/s doc_throughput=    13 docs/s instructions=   699692089 cycles=   235208099 branch_miss=  474913 cache_miss= 6438322 cache_ref=   6471011 items=    524288 avg_time=  73873750 ns]
kostya<yyjson>/manual_time                             261636380 ns    280017117 ns            3           417.4k           524.871M        8.49469M       9.95042M    604.064M              4.39943           3.82266       2.30913G          983.521M                    7.16304                     1.62817           2.00418M    419.856k   137.305M       500.482M/s    8.4972M   9.94249M   604.202M         4.40043     3.8221/s 2.30932G/s     983.521M               7.16304                 1.6278   524.288k       2.00388M/s [BEST: throughput=  0.52 GB/s doc_throughput=     3 docs/s instructions=   983520944 cycles=   604063745 branch_miss=  417400 cache_miss= 8494687 cache_ref=   9950419 items=    524288 avg_time= 261636379 ns]
kostya<yyjson_insitu>/manual_time                      184393447 ns    202874529 ns            4          415.61k           744.726M        6.36104M       7.80457M    477.318M              3.47633           5.42388       2.58891G          965.251M                    7.02998                     2.02224           2.84368M    414.571k   137.305M       710.135M/s   6.36107M   7.81177M   477.284M         3.47608    5.42319/s  2.5884G/s     965.251M               7.02998                2.02239   524.288k       2.84331M/s [BEST: throughput=  0.74 GB/s doc_throughput=     5 docs/s instructions=   965251174 cycles=   477317834 branch_miss=  415610 cache_miss= 6361043 cache_ref=   7804574 items=    524288 avg_time= 184393446 ns]
kostya<rapidjson>/manual_time                          292723648 ns    311290528 ns            2         943.468k           474.525M        5.19293M       6.40709M    826.565M              6.01992           3.45599        2.8566G          2.28931G                    16.6732                     2.76967           1.81193M    945.361k   137.305M       447.331M/s   5.06683M   6.37418M   828.941M         6.03722    3.41619/s 2.83182G/s     2.28932G               16.6732                2.76174   524.288k       1.79107M/s [BEST: throughput=  0.47 GB/s doc_throughput=     3 docs/s instructions=  2289314691 cycles=   826564781 branch_miss=  943468 cache_miss= 5192931 cache_ref=   6407090 items=    524288 avg_time= 292723648 ns]
kostya<rapidjson_lossless>/manual_time                 321317046 ns    339757781 ns            2         1.59921M           430.618M        5.22157M       6.40461M     920.22M              6.70201           3.13621       2.88601G          2.49325G                    18.1585                     2.70941           1.64428M    1.51244M   137.305M       407.524M/s   5.08744M   6.36516M   919.663M         6.69796    3.11219/s 2.86217G/s     2.49326G               18.1585                2.71105   524.288k       1.63168M/s [BEST: throughput=  0.43 GB/s doc_throughput=     3 docs/s instructions=  2493254992 cycles=   920220082 branch_miss= 1599211 cache_miss= 5221573 cache_ref=   6404610 items=    524288 avg_time= 321317046 ns]
kostya<rapidjson_insitu>/manual_time                   275169831 ns    293534873 ns            3         1061.62k           506.589M        7.32464M       8.54261M     768.01M              5.59346           3.68952       2.83359G          2.03958G                    14.8544                     2.65567           1.93437M    1035.96k   137.305M       475.867M/s   7.16288M   8.48791M   769.884M         5.60711    3.63412/s 2.79785G/s     2.03958G               14.8544                2.64921   524.288k       1.90533M/s [BEST: throughput=  0.51 GB/s doc_throughput=     3 docs/s instructions=  2039579670 cycles=   768010032 branch_miss= 1061620 cache_miss= 7324642 cache_ref=   8542608 items=    524288 avg_time= 275169830 ns]
distinct_user_id<simdjson_dom>/manual_time                317649 ns       392311 ns         2203           4.289k           2.00353G               1        33.723k    1006.75k              1.59418          3.17258k       3.19399G          3.01136M                    4.76848                     2.99118           364.847k    4.41906k   631.515k       1.85155G/s   0.669088    34.003k   1013.41k         1.60474   3.14813k/s 3.19036G/s     3.01137M               4.76848                 2.9715        115       362.034k/s [BEST: throughput=  2.00 GB/s doc_throughput=  3172 docs/s instructions=     3011365 cycles=     1006749 branch_miss=    4289 cache_miss=       1 cache_ref=     33723 items=       115 avg_time=    317649 ns]
distinct_user_id<simdjson_ondemand>/manual_time           230454 ns       289500 ns         3037           2.254k           2.76085G               0         9.943k    730.561k              1.15684          4.37179k       3.19386G          2.18818M                    3.46496                      2.9952           502.756k    2.41202k   631.515k       2.55211G/s  0.0704643   9.97996k   735.524k          1.1647   4.33926k/s 3.19163G/s     2.18818M               3.46496                2.97499        115       499.015k/s [BEST: throughput=  2.76 GB/s doc_throughput=  4371 docs/s instructions=     2188175 cycles=      730561 branch_miss=    2254 cache_miss=       0 cache_ref=      9943 items=       115 avg_time=    230454 ns]
distinct_user_id<yyjson>/manual_time                      841826 ns       927615 ns          985          10.045k           1.28716G             263        27.547k     1.5672M              2.48165          2.03821k       3.19428G          2.87499M                    4.55252                     1.83447           234.394k    7.93258k   631.515k       715.421M/s     460.83   25.5105k    1.7294M         2.73849   1.18789k/s 2.05434G/s     2.87559M               4.55348                1.66277        115       136.608k/s [BEST: throughput=  1.29 GB/s doc_throughput=  2038 docs/s instructions=     2874985 cycles=     1567198 branch_miss=   10045 cache_miss=     263 cache_ref=     27547 items=       115 avg_time=    841825 ns]
distinct_user_id<yyjson_insitu>/manual_time               570812 ns       642583 ns         1239            7.28k           1.54288G          1.815k        14.543k    1.29822M              2.05573          2.44314k       3.17175G          2.87479M                    4.55221                      2.2144           280.961k    7.77767k   631.515k       1055.09M/s    134.704   12.2486k   1.42428M         2.25534   1.75189k/s 2.49518G/s     2.87505M               4.55262                 2.0186        115       201.467k/s [BEST: throughput=  1.54 GB/s doc_throughput=  2443 docs/s instructions=     2874788 cycles=     1298225 branch_miss=    7280 cache_miss=    1815 cache_ref=     14543 items=       115 avg_time=    570812 ns]
distinct_user_id<rapidjson>/manual_time                  1876862 ns      1949253 ns          373            25.9k           389.832M         12.674k        22.672k    5.17219M              8.19013           617.296       3.19277G          13.0565M                    20.6749                     2.52437            70.989k    26.9166k   631.515k       320.887M/s    1.3164k   16.6407k   5.36007M         8.48764    532.804/s 2.85587G/s     13.0574M               20.6763                2.43604        115       61.2725k/s [BEST: throughput=  0.39 GB/s doc_throughput=   617 docs/s instructions=    13056513 cycles=     5172187 branch_miss=   25900 cache_miss=   12674 cache_ref=     22672 items=       115 avg_time=   1876861 ns]
distinct_user_id<rapidjson_insitu>/manual_time           1197648 ns      1265569 ns          633          25.003k           605.124M               9        14.813k    3.33212M              5.27638           958.211       3.19287G          9.77433M                    15.4776                     2.93337           110.194k    27.0514k   631.515k       502.869M/s   1.20793k   11.7628k   3.48057M         5.51146     834.97/s 2.90617G/s     9.77467M               15.4781                2.80835        115       96.0216k/s [BEST: throughput=  0.61 GB/s doc_throughput=   958 docs/s instructions=     9774329 cycles=     3332116 branch_miss=   25003 cache_miss=       9 cache_ref=     14813 items=       115 avg_time=   1197647 ns]
find_tweet<simdjson_dom>/manual_time                      304356 ns       375970 ns         2299           4.061k           2.08805G               1        30.752k    966.166k              1.52992          3.30642k       3.19455G          2.93033M                    4.64016                     3.03294           3.30642k    4.20587k   631.515k       1.93242G/s    3.57025   30.8196k   971.273k           1.538   3.28562k/s 3.19123G/s     2.93033M               4.64016                  3.017          1       3.28562k/s [BEST: throughput=  2.09 GB/s doc_throughput=  3306 docs/s instructions=     2930328 cycles=      966166 branch_miss=    4061 cache_miss=       1 cache_ref=     30752 items=         1 avg_time=    304356 ns]
find_tweet<simdjson_ondemand>/manual_time                 147368 ns       207650 ns         4749           1.285k           4.32124G               0         7.798k    467.123k             0.739686          6.84266k       3.19636G          1.56922M                    2.48485                     3.35932           6.84266k    1.39953k   631.515k       3.99098G/s   6.52769m   7.79476k   470.484k        0.745008   6.78572k/s 3.19257G/s     1.56922M               2.48485                3.33533          1       6.78572k/s [BEST: throughput=  4.32 GB/s doc_throughput=  6842 docs/s instructions=     1569217 cycles=      467123 branch_miss=    1285 cache_miss=       0 cache_ref=      7798 items=         1 avg_time=    147368 ns]
find_tweet<yyjson>/manual_time                            831945 ns       915127 ns          867             9.4k           1.28066G             244        27.407k    1.53315M              2.42773          2.02792k        3.1091G          2.82414M                    4.47201                     1.84206           2.02792k    7.67477k   631.515k       723.917M/s     439.12   24.6278k   1.69845M         2.68948     1.202k/s 2.04154G/s     2.82483M               4.47311                1.66319          1         1.202k/s [BEST: throughput=  1.28 GB/s doc_throughput=  2027 docs/s instructions=     2824143 cycles=     1533148 branch_miss=    9400 cache_miss=     244 cache_ref=     27407 items=         1 avg_time=    831945 ns]
find_tweet<yyjson_insitu>/manual_time                     558833 ns       625100 ns         1263           7.038k           1.58183G          1.922k        13.669k    1.26847M              2.00862          2.50482k       3.17729G          2.82403M                    4.47184                     2.22632           2.50482k    7.45881k   631.515k       1077.71M/s    8.95012   10.6601k   1.38643M          2.1954   1.78944k/s 2.48094G/s     2.82429M               4.47225                 2.0371          1       1.78944k/s [BEST: throughput=  1.58 GB/s doc_throughput=  2504 docs/s instructions=     2824031 cycles=     1268474 branch_miss=    7038 cache_miss=    1922 cache_ref=     13669 items=         1 avg_time=    558832 ns]
find_tweet<rapidjson>/manual_time                        1867847 ns      1936356 ns          376          25.694k           391.501M         11.913k        20.934k    5.15022M              8.15535            619.94       3.19283G          12.9878M                    20.5662                      2.5218             619.94    26.8141k   631.515k       322.435M/s     1020.8   13.7318k   5.33201M          8.4432    535.376/s 2.85463G/s     12.9885M               20.5673                2.43595          1        535.376/s [BEST: throughput=  0.39 GB/s doc_throughput=   619 docs/s instructions=    12987847 cycles=     5150224 branch_miss=   25694 cache_miss=   11913 cache_ref=     20934 items=         1 avg_time=   1867847 ns]
find_tweet<rapidjson_insitu>/manual_time                 1185174 ns      1248189 ns          651          24.951k           610.079M             954        13.612k      3.305M              5.23344           966.056       3.19281G          9.71659M                    15.3862                     2.93997            966.056    27.0475k   631.515k       508.162M/s    1011.07   8.97176k   3.44061M         5.44818    843.758/s 2.90304G/s     9.71693M               15.3867                2.82419          1        843.758/s [BEST: throughput=  0.61 GB/s doc_throughput=   966 docs/s instructions=     9716589 cycles=     3304999 branch_miss=   24951 cache_miss=     954 cache_ref=     13612 items=         1 avg_time=   1185173 ns]
