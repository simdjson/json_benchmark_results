run_benchmark: v0.8.0~17 /home/jkeiser/simdjson_benchmark_results/v0.7.0/21/skylake-x-clang11.json -DCMAKE_BUILD_TYPE=Release
git reset --hard v0.8.0~17
HEAD is now at 7dbe4caf Taking a float and adding hundreds of zeros, you may get a truncated value that is just one over the desired value (bug fix) (#1388)
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- git Version: v0.2.1-7dbe4caf
-- Version: 0.2.1
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES -- failed to compile
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 10
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
make[3]: Nothing to be done for '_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build'.
[ 80%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
make[3]: Nothing to be done for 'jsonexamples/generated/CMakeFiles/generated-data.dir/build'.
[ 80%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/clang++-11  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/src  -O3 -DNDEBUG -fPIC   -pthread -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/clang++-11 -fPIC -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.6 -o ../libsimdjson.so.6.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.6.0.0 ../libsimdjson.so.6 ../libsimdjson.so
[ 80%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
make[3]: Nothing to be done for 'dependencies/CMakeFiles/yyjson.dir/build'.
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/clang++-11  -DRAPIDJSON_HAS_STDSTRING -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_COMPETITION_RAPIDJSON -DSIMDJSON_COMPETITION_YYJSON -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/rapidjson/include  -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/clang++-11  -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.6.0.0 ../_deps/google_benchmarks/src/libbenchmark.a ../dependencies/libyyjson.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/21/skylake-x-clang11.json --benchmark_out_format=json
2021-01-24 23:03:49
Running benchmark/bench_ondemand
Run on (4 X 3200 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 1024 KiB (x4)
  L3 Unified 8448 KiB (x1)
Load Average: 1.00, 1.02, 1.00
***WARNING*** CPU scaling is enabled, the benchmark real time measurements may be noisy and will incur extra overhead.
simdjson::dom implementation:      haswell
simdjson::ondemand implementation: fallback

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                  310170 ns       380866 ns         2248           3.596k           2.04999G               0        33.051k    984.037k              1.55822          3.24614k       3.19432G          2.98281M                    4.72326                      3.0312           324.614k    3.70139k   631.515k        1.8962G/s   0.805605   33.2564k   989.776k          1.5673   3.22404k/s 3.19108G/s     2.98281M               4.72326                3.01362        100       322.404k/s [BEST: throughput=  2.05 GB/s doc_throughput=  3246 docs/s instructions=     2982809 cycles=      984037 branch_miss=    3596 cache_miss=       0 cache_ref=     33051 items=       100 avg_time=    310169 ns]
partial_tweets<simdjson_ondemand>/manual_time            1436883 ns      1495753 ns          487          31.648k           441.352M               0        12.845k    4.56845M              7.23412           698.877       3.19279G          10.9856M                    17.3956                     2.40465           69.8877k    32.1367k   631.515k       419.143M/s   0.616016   12.8543k   4.58337M         7.25773    695.951/s  3.1898G/s     10.9856M               17.3956                2.39683        100       69.5951k/s [BEST: throughput=  0.44 GB/s doc_throughput=   698 docs/s instructions=    10985555 cycles=     4568454 branch_miss=   31648 cache_miss=       0 cache_ref=     12845 items=       100 avg_time=   1436883 ns]
partial_tweets<yyjson>/manual_time                        796349 ns       875817 ns          878           9.724k           1.44394G             248        28.022k    1.39696M              2.21207          2.28647k        3.1941G          2.91999M                    4.62379                     2.09025           228.647k    7.74649k   631.515k       756.276M/s    651.435     23.61k   1.57372M         2.49198   1.25573k/s 1.97617G/s      2.9204M               4.62443                1.85572        100       125.573k/s [BEST: throughput=  1.44 GB/s doc_throughput=  2286 docs/s instructions=     2919991 cycles=     1396957 branch_miss=    9724 cache_miss=     248 cache_ref=     28022 items=       100 avg_time=    796349 ns]
partial_tweets<yyjson_insitu>/manual_time                 516928 ns       578785 ns         1367           7.009k           1.77576G          1.636k        13.611k    1.12927M              1.78819          2.81191k        3.1754G          2.91959M                    4.62316                     2.58539           281.191k    7.45722k   631.515k       1.13777G/s    74.6906   8.67862k   1.24959M         1.97872    1.9345k/s 2.41734G/s     2.91986M               4.62358                2.33665        100        193.45k/s [BEST: throughput=  1.78 GB/s doc_throughput=  2811 docs/s instructions=     2919595 cycles=     1129267 branch_miss=    7009 cache_miss=    1636 cache_ref=     13611 items=       100 avg_time=    516928 ns]
partial_tweets<rapidjson>/manual_time                    2783761 ns      2847824 ns          251          29.485k            250.06M          7.476k        22.567k    8.06302M              12.7677           395.969       3.19271G          21.8951M                    34.6707                     2.71549           39.5969k    29.9077k   631.515k       216.347M/s    406.637   11.3679k   8.20795M         12.9972    359.226/s 2.94851G/s     21.8957M               34.6717                2.66762        100       35.9226k/s [BEST: throughput=  0.25 GB/s doc_throughput=   395 docs/s instructions=    21895056 cycles=     8063025 branch_miss=   29485 cache_miss=    7476 cache_ref=     22567 items=       100 avg_time=   2783761 ns]
partial_tweets<rapidjson_insitu>/manual_time             1827101 ns      1889374 ns          384          25.349k           381.314M             140        14.506k    5.28773M              8.37308           603.809       3.19277G          13.3566M                      21.15                     2.52596           60.3809k    28.2775k   631.515k       329.626M/s    205.654   9.44474k   5.42968M         8.59786    547.315/s 2.97175G/s     13.3572M                21.151                2.46003        100       54.7315k/s [BEST: throughput=  0.38 GB/s doc_throughput=   603 docs/s instructions=    13356561 cycles=     5287725 branch_miss=   25349 cache_miss=     140 cache_ref=     14506 items=       100 avg_time=   1827100 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                 100125656 ns    106349116 ns            7         936.504k           460.186M        6.76174M       6.89505M    318.719M              6.92885           10.0043       3.18856G          1038.74M                    22.5819                     3.25911           10.0043M    937.321k   45.9988M       438.128M/s   6.80763M   6.89519M   319.219M         6.93974    9.98745/s 3.18819G/s     1038.74M               22.5819                3.25399      1000k       9.98745M/s [BEST: throughput=  0.46 GB/s doc_throughput=    10 docs/s instructions=  1038738117 cycles=   318718597 branch_miss=  936504 cache_miss= 6761737 cache_ref=   6895051 items=   1000000 avg_time= 100125655 ns]
large_random<simdjson_ondemand>/manual_time            127048968 ns    133272960 ns            5         1.24101M           362.597M        3.54239M       3.57317M    404.573M              8.79529           7.88275       3.18915G          1.21898G                    26.5002                       3.013           7.88275M    1.23802M   45.9988M       345.283M/s    3.5321M   3.57343M   405.123M         8.80725    7.87098/s 3.18871G/s     1.21898G               26.5002                 3.0089      1000k       7.87098M/s [BEST: throughput=  0.36 GB/s doc_throughput=     7 docs/s instructions=  1218976310 cycles=   404572768 branch_miss= 1241006 cache_miss= 3542394 cache_ref=   3573170 items=   1000000 avg_time= 127048967 ns]
large_random<simdjson_ondemand_unordered>/manual_time  127112544 ns    133306749 ns            6         1.24282M           363.052M          3.542M       3.57369M    404.035M              8.78361           7.89265       3.18891G          1.22398G                    26.6089                     3.02938           7.89265M    1.24229M   45.9988M        345.11M/s   3.52712M   3.57341M   405.335M         8.81187    7.86704/s 3.18879G/s     1.22398G               26.6089                3.01966      1000k       7.86704M/s [BEST: throughput=  0.36 GB/s doc_throughput=     7 docs/s instructions=  1223976311 cycles=   404035208 branch_miss= 1242822 cache_miss= 3542003 cache_ref=   3573687 items=   1000000 avg_time= 127112543 ns]
large_random<yyjson>/manual_time                       147455202 ns    153673219 ns            5         677.972k           312.185M        4.19879M       4.32405M    329.087M              7.15426           6.78681       2.23345G          855.681M                    18.6023                     2.60017           6.78681M    681.819k   45.9988M         297.5M/s   4.19962M   4.32826M   329.469M         7.16256    6.78172/s 2.23437G/s     855.681M               18.6023                2.59715      1000k       6.78172M/s [BEST: throughput=  0.31 GB/s doc_throughput=     6 docs/s instructions=   855680960 cycles=   329087153 branch_miss=  677972 cache_miss= 4198789 cache_ref=   4324052 items=   1000000 avg_time= 147455201 ns]
large_random<yyjson_insitu>/manual_time                121293760 ns    127549230 ns            6         681.731k           379.555M         3.4814M       3.60336M     286.19M               6.2217           8.25142       2.36148G           849.56M                    18.4692                     2.96851           8.25142M    681.638k   45.9988M       361.666M/s    3.4846M   3.60584M   286.476M          6.2279    8.24445/s 2.36183G/s      849.56M               18.4692                2.96556      1000k       8.24445M/s [BEST: throughput=  0.38 GB/s doc_throughput=     8 docs/s instructions=   849560192 cycles=   286190395 branch_miss=  681731 cache_miss= 3481404 cache_ref=   3603361 items=   1000000 avg_time= 121293760 ns]
large_random<rapidjson>/manual_time                    250249968 ns    256470972 ns            3         585.806k           189.631M        4.36923M       4.88925M    705.398M              15.3351           4.12253       2.90802G          2.01412G                    43.7865                      2.8553           4.12253M    585.245k   45.9988M       175.296M/s   4.10417M   4.68063M   708.057M         15.3929      3.996/s  2.8294G/s     2.01413G               43.7867                2.84459      1000k         3.996M/s [BEST: throughput=  0.19 GB/s doc_throughput=     4 docs/s instructions=  2014124876 cycles=   705397895 branch_miss=  585806 cache_miss= 4369233 cache_ref=   4889254 items=   1000000 avg_time= 250249968 ns]
large_random<rapidjson_lossless>/manual_time           286200129 ns    292436753 ns            2         584.825k           164.136M        4.36349M       4.89818M    825.448M               17.945           3.56826       2.94541G          2.47909G                    53.8947                     3.00333           3.56826M    585.304k   45.9988M       153.277M/s   4.16559M    4.7453M   828.104M         18.0027    3.49406/s 2.89344G/s      2.4791G               53.8949                2.99371      1000k       3.49406M/s [BEST: throughput=  0.16 GB/s doc_throughput=     3 docs/s instructions=  2479092050 cycles=   825447787 branch_miss=  584825 cache_miss= 4363487 cache_ref=   4898175 items=   1000000 avg_time= 286200129 ns]
large_random<rapidjson_insitu>/manual_time             266911088 ns    273174810 ns            3         585.163k           177.309M        5.05298M       5.61034M    758.492M              16.4894           3.85466       2.92373G          1.73612G                    37.7428                     2.28892           3.85466M    585.021k   45.9988M       164.354M/s   4.80472M   5.40471M   760.374M         16.5303    3.74657/s 2.84879G/s     1.73613G                37.743                2.28326      1000k       3.74657M/s [BEST: throughput=  0.18 GB/s doc_throughput=     3 docs/s instructions=  1736124760 cycles=   758492282 branch_miss=  585163 cache_miss= 5052978 cache_ref=   5610343 items=   1000000 avg_time= 266911088 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                       106638951 ns    125950898 ns            7         1019.57k           1.28868G        10.2072M       10.3164M    339.733M              2.47429           9.38556       3.18858G          984.675M                    7.17144                     2.89838           4.92073M    1019.34k   137.305M       1.19914G/s   10.2434M   10.3165M   339.997M         2.47622    9.37744/s  3.1883G/s     984.675M               7.17144                2.89613   524.288k       4.91648M/s [BEST: throughput=  1.29 GB/s doc_throughput=     9 docs/s instructions=   984674903 cycles=   339732825 branch_miss= 1019572 cache_miss=10207191 cache_ref=  10316407 items=    524288 avg_time= 106638950 ns]
kostya<simdjson_ondemand>/manual_time                  228718877 ns    248275949 ns            3         684.923k           600.784M         6.4236M        6.4721M    728.977M              5.30918           4.37555       3.18967G          2.21249G                    16.1137                     3.03506           2.29405M     700.76k   137.305M       572.512M/s   6.43345M   6.47257M   729.491M         5.31292    4.37218/s 3.18947G/s     2.21249G               16.1137                3.03293   524.288k       2.29228M/s [BEST: throughput=  0.60 GB/s doc_throughput=     4 docs/s instructions=  2212492378 cycles=   728977179 branch_miss=  684923 cache_miss= 6423602 cache_ref=   6472103 items=    524288 avg_time= 228718877 ns]
kostya<yyjson>/manual_time                             227667632 ns    247086002 ns            3         419.243k           603.676M        8.50396M       8.64094M    493.124M              3.59145           4.39661       2.16807G          974.185M                    7.09504                     1.97554           2.30509M    417.762k   137.305M       575.155M/s    8.4987M    8.6401M   493.396M         3.59343    4.39237/s 2.16718G/s     974.185M               7.09504                1.97445   524.288k       2.30287M/s [BEST: throughput=  0.60 GB/s doc_throughput=     4 docs/s instructions=   974184700 cycles=   493123827 branch_miss=  419243 cache_miss= 8503961 cache_ref=   8640939 items=    524288 avg_time= 227667632 ns]
kostya<yyjson_insitu>/manual_time                      149842225 ns    169103961 ns            5         417.496k           916.614M        6.35828M       6.49642M    365.328M              2.66071           6.67575       2.43884G          955.915M                    6.96198                     2.61659           3.50002M    417.572k   137.305M       873.881M/s   6.35756M   6.50092M   365.502M         2.66197    6.67369/s 2.43925G/s     955.915M               6.96198                2.61535   524.288k       3.49893M/s [BEST: throughput=  0.92 GB/s doc_throughput=     6 docs/s instructions=   955915031 cycles=   365328345 branch_miss=  417496 cache_miss= 6358279 cache_ref=   6496422 items=    524288 avg_time= 149842225 ns]
kostya<rapidjson>/manual_time                          321033858 ns    339558901 ns            2         954.564k           432.163M        5.23689M       5.75996M    917.275M              6.68057           3.14746       2.88709G          2.73711G                    19.9346                     2.98396           1.65018M    955.169k   137.305M       407.883M/s   5.11286M   5.65149M   919.424M         6.69622    3.11494/s 2.86395G/s     2.73711G               19.9346                2.97699   524.288k       1.63312M/s [BEST: throughput=  0.43 GB/s doc_throughput=     3 docs/s instructions=  2737113353 cycles=   917275243 branch_miss=  954564 cache_miss= 5236891 cache_ref=   5759961 items=    524288 avg_time= 321033857 ns]
kostya<rapidjson_lossless>/manual_time                 346433877 ns    365142482 ns            2         999.207k           400.179M        5.23473M       5.77475M     998.55M              7.27249           2.91453        2.9103G          3.00606G                    21.8933                     3.01043           1.52805M    993.844k   137.305M       377.978M/s   5.11079M   5.67059M   1000.67M         7.28792    2.88655/s 2.88848G/s     3.00607G               21.8933                3.00406   524.288k       1.51339M/s [BEST: throughput=  0.40 GB/s doc_throughput=     2 docs/s instructions=  3006063748 cycles=   998549673 branch_miss=  999207 cache_miss= 5234725 cache_ref=   5774746 items=    524288 avg_time= 346433877 ns]
kostya<rapidjson_insitu>/manual_time                   309149822 ns    327615771 ns            2         989.586k           448.758M        7.37685M       7.90772M    878.969M              6.40158           3.26833       2.87276G          2.21988G                    16.1675                     2.52555           1.71355M    975.274k   137.305M       423.562M/s   7.25351M   7.80316M   880.523M          6.4129    3.23468/s 2.84821G/s     2.21988G               16.1675                2.52109   524.288k        1.6959M/s [BEST: throughput=  0.45 GB/s doc_throughput=     3 docs/s instructions=  2219877898 cycles=   878969416 branch_miss=  989586 cache_miss= 7376852 cache_ref=   7907716 items=    524288 avg_time= 309149822 ns]
distinct_user_id<simdjson_dom>/manual_time                301984 ns       378889 ns         2321           3.631k           2.11109G               3        33.783k    955.529k              1.51307          3.34291k       3.19424G          2.91783M                    4.62037                     3.05363           384.434k    3.83419k   631.515k        1.9476G/s    2.48643   33.8129k   963.681k         1.52598   3.31144k/s 3.19117G/s     2.91783M               4.62037                 3.0278        115       380.815k/s [BEST: throughput=  2.11 GB/s doc_throughput=  3342 docs/s instructions=     2917832 cycles=      955529 branch_miss=    3631 cache_miss=       3 cache_ref=     33783 items=       115 avg_time=    301983 ns]
distinct_user_id<simdjson_ondemand>/manual_time          1388390 ns      1448183 ns          504          31.141k           457.458M               0         8.661k    4.40756M              6.97934           724.382       3.19275G          10.6053M                    16.7934                     2.40616           83.3039k    31.6966k   631.515k       433.783M/s   0.406746   8.84126k   4.42891M         7.01316    720.259/s 3.18997G/s     10.6053M               16.7934                2.39456        115       82.8298k/s [BEST: throughput=  0.46 GB/s doc_throughput=   724 docs/s instructions=    10605306 cycles=     4407559 branch_miss=   31141 cache_miss=       0 cache_ref=      8661 items=       115 avg_time=   1388389 ns]
distinct_user_id<yyjson>/manual_time                      781480 ns       867901 ns          985          10.059k           1.45065G             227        27.623k    1.39066M              2.20209           2.2971k       3.19448G          2.87786M                    4.55707                     2.06942           264.167k    7.78371k   631.515k       770.666M/s    435.946   23.6518k   1.54121M          2.4405   1.27962k/s 1.97217G/s     2.87834M               4.55783                1.86758        115       147.157k/s [BEST: throughput=  1.45 GB/s doc_throughput=  2297 docs/s instructions=     2877858 cycles=     1390656 branch_miss=   10059 cache_miss=     227 cache_ref=     27623 items=       115 avg_time=    781479 ns]
distinct_user_id<yyjson_insitu>/manual_time               508666 ns       576418 ns         1387           7.085k             1.808G            1066        13.543k    1.11026M              1.75808          2.86295k       3.17861G          2.87754M                    4.55656                     2.59178           329.239k    7.47794k   631.515k       1.15625G/s    66.2754    8.7907k   1.22918M          1.9464   1.96593k/s 2.41648G/s      2.8778M               4.55698                2.34124        115       226.082k/s [BEST: throughput=  1.81 GB/s doc_throughput=  2862 docs/s instructions=     2877538 cycles=     1110256 branch_miss=    7085 cache_miss=    1066 cache_ref=     13543 items=       115 avg_time=    508665 ns]
distinct_user_id<rapidjson>/manual_time                  2745517 ns      2814783 ns          254          28.999k           250.878M           12.6k        22.671k    8.03678M              12.7262           397.263       3.19272G          21.8223M                    34.5554                      2.7153           45.6853k    29.7915k   631.515k       219.361M/s   1.70606k   12.7186k   8.16536M         12.9298     364.23/s 2.97407G/s     21.8231M               34.5567                2.67264        115       41.8865k/s [BEST: throughput=  0.25 GB/s doc_throughput=   397 docs/s instructions=    21822261 cycles=     8036782 branch_miss=   28999 cache_miss=   12600 cache_ref=     22671 items=       115 avg_time=   2745516 ns]
distinct_user_id<rapidjson_insitu>/manual_time           1837155 ns      1905127 ns          383          25.695k           351.543M             144         10.19k    5.33761M              8.45207           556.665       2.97126G          13.2896M                     21.044                      2.4898           64.0165k    34.7213k   631.515k       327.822M/s   1.86377k   11.3847k   5.56148M         8.80656     544.32/s 3.02722G/s     13.2897M               21.0441                 2.3896        115       62.5968k/s [BEST: throughput=  0.35 GB/s doc_throughput=   556 docs/s instructions=    13289601 cycles=     5337611 branch_miss=   25695 cache_miss=     144 cache_ref=     10190 items=       115 avg_time=   1837154 ns]
find_tweet<simdjson_dom>/manual_time                      287736 ns       359754 ns         2413           3.409k           2.20982G               5        29.689k     912.77k              1.44537          3.49923k       3.19399G          2.83251M                    4.48526                      3.1032           3.49923k    3.54598k   631.515k       2.04404G/s    4.34438   29.7557k   918.181k         1.45393   3.47541k/s 3.19106G/s     2.83251M               4.48526                3.08492          1       3.47541k/s [BEST: throughput=  2.21 GB/s doc_throughput=  3499 docs/s instructions=     2832512 cycles=      912770 branch_miss=    3409 cache_miss=       5 cache_ref=     29689 items=         1 avg_time=    287735 ns]
find_tweet<simdjson_ondemand>/manual_time                1333223 ns      1394124 ns          525          30.444k           476.206M               0         7.601k    4.23404M              6.70457           754.069       3.19275G          10.0995M                    15.9925                     2.38531            754.069    30.9705k   631.515k       451.732M/s    1.43619    7.7149k   4.25295M         6.73452    750.062/s 3.18998G/s     10.0995M               15.9925                2.37471          1        750.062/s [BEST: throughput=  0.48 GB/s doc_throughput=   754 docs/s instructions=    10099506 cycles=     4234036 branch_miss=   30444 cache_miss=       0 cache_ref=      7601 items=         1 avg_time=   1333222 ns]
find_tweet<yyjson>/manual_time                            764822 ns       847024 ns          920           9.537k           1.48667G             255        27.276k    1.35697M              2.14875          2.35413k       3.19448G          2.81716M                    4.46096                     2.07607           2.35413k     7.5227k   631.515k       787.451M/s    330.654   19.6596k    1.4904M         2.36004   1.30749k/s 1.94869G/s     2.81785M               4.46204                1.89066          1       1.30749k/s [BEST: throughput=  1.49 GB/s doc_throughput=  2354 docs/s instructions=     2817160 cycles=     1356966 branch_miss=    9537 cache_miss=     255 cache_ref=     27276 items=         1 avg_time=    764821 ns]
find_tweet<yyjson_insitu>/manual_time                     494786 ns       554123 ns         1415           6.978k            1.8483G            1017        12.528k    1085.86k              1.71944          2.92678k       3.17805G          2.81684M                    4.46045                     2.59412           2.92678k    7.25228k   631.515k       1.18868G/s    6.76961   4.80876k   1.18525M         1.87683   2.02108k/s 2.39547G/s      2.8171M               4.46086                2.37681          1       2.02108k/s [BEST: throughput=  1.85 GB/s doc_throughput=  2926 docs/s instructions=     2816840 cycles=     1085855 branch_miss=    6978 cache_miss=    1017 cache_ref=     12528 items=         1 avg_time=    494785 ns]
find_tweet<rapidjson>/manual_time                        2733376 ns      2797350 ns          255          29.067k           252.388M          9.391k        21.045k    7.98855M              12.6498           399.655       3.19266G          21.7389M                    34.4234                     2.72125            399.655    29.8725k   631.515k       220.335M/s    1.4996k   9.54455k   8.12791M         12.8705    365.848/s 2.97358G/s     21.7397M               34.4246                2.67469          1        365.848/s [BEST: throughput=  0.25 GB/s doc_throughput=   399 docs/s instructions=    21738873 cycles=     7988552 branch_miss=   29067 cache_miss=    9391 cache_ref=     21045 items=         1 avg_time=   2733376 ns]
find_tweet<rapidjson_insitu>/manual_time                 1798705 ns      1860987 ns          375          25.328k            385.46M          3.119k        13.171k    5.23082M              8.28296           610.374       3.19275G          13.2105M                    20.9188                     2.52552            610.374    31.6315k   631.515k       334.829M/s   1.76351k   8.13896k   5.44194M         8.61727    555.955/s 3.02547G/s     13.2108M               20.9192                2.42759          1        555.955/s [BEST: throughput=  0.39 GB/s doc_throughput=   610 docs/s instructions=    13210508 cycles=     5230816 branch_miss=   25328 cache_miss=    3119 cache_ref=     13171 items=         1 avg_time=   1798705 ns]
