run_benchmark: v0.8.0~17 /home/jkeiser/simdjson_benchmark_results/v0.7.0/21/skylake-gcc10.2.json -DCMAKE_BUILD_TYPE=Release
git reset --hard v0.8.0~17
HEAD is now at 7dbe4caf Taking a float and adding hundreds of zeros, you may get a truncated value that is just one over the desired value (bug fix) (#1388)
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- git Version: v0.2.1-7dbe4caf
-- Version: 0.2.1
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 10
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
make[3]: Nothing to be done for '_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build'.
[ 80%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
make[3]: Nothing to be done for 'jsonexamples/generated/CMakeFiles/generated-data.dir/build'.
[ 80%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/g++-10  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/src  -O3 -DNDEBUG -fPIC   -pthread -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/g++-10 -fPIC -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.6 -o ../libsimdjson.so.6.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.6.0.0 ../libsimdjson.so.6 ../libsimdjson.so
[ 80%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
make[3]: Nothing to be done for 'dependencies/CMakeFiles/yyjson.dir/build'.
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/g++-10  -DRAPIDJSON_HAS_STDSTRING -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_COMPETITION_RAPIDJSON -DSIMDJSON_COMPETITION_YYJSON -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/rapidjson/include  -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/g++-10  -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.6.0.0 ../_deps/google_benchmarks/src/libbenchmark.a ../dependencies/libyyjson.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/21/skylake-gcc10.2.json --benchmark_out_format=json
2021-01-25 02:04:49
Running benchmark/bench_ondemand
Run on (4 X 4000 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 256 KiB (x4)
  L3 Unified 8192 KiB (x1)
Load Average: 1.04, 1.03, 0.85
simdjson::dom implementation:      haswell
simdjson::ondemand implementation: fallback

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                  262918 ns       291668 ns         2660           3.835k           2.41974G               0        93.359k    963.697k              1.52601          3.83164k       3.69254G           2.9625M                     4.6911                      3.0741           383.164k    4.01878k   631.515k       2.23698G/s    6.52143   93.3636k   970.178k         1.53627   3.80346k/s 3.69003G/s      2.9625M                4.6911                3.05357        100       380.346k/s [BEST: throughput=  2.42 GB/s doc_throughput=  3831 docs/s instructions=     2962503 cycles=      963697 branch_miss=    3835 cache_miss=       0 cache_ref=     93359 items=       100 avg_time=    262918 ns]
partial_tweets<simdjson_ondemand>/manual_time            1113097 ns      1141512 ns          628           31.65k           570.269M               0        60.043k    4.08811M               6.4735           903.018       3.69164G          10.6861M                    16.9214                     2.61395           90.3018k    31.9992k   631.515k       541.067M/s   0.367834   60.2036k   4.10618M         6.50211    898.395/s 3.68897G/s     10.6861M               16.9214                2.60245        100       89.8395k/s [BEST: throughput=  0.57 GB/s doc_throughput=   903 docs/s instructions=    10686117 cycles=     4088114 branch_miss=   31650 cache_miss=       0 cache_ref=     60043 items=       100 avg_time=   1113096 ns]
partial_tweets<yyjson>/manual_time                        667884 ns       699441 ns         1046            9.85k           1.62308G             408        80.076k    1.39825M              2.21412          2.57014k        3.5937G          2.90836M                    4.60537                        2.08           257.014k    7.44226k   631.515k       901.744M/s     1020.3    51.815k   1.61183M         2.55232   1.49727k/s 2.41334G/s     2.90905M               4.60646                1.80481        100       149.727k/s [BEST: throughput=  1.62 GB/s doc_throughput=  2570 docs/s instructions=     2908360 cycles=     1398252 branch_miss=    9850 cache_miss=     408 cache_ref=     80076 items=       100 avg_time=    667883 ns]
partial_tweets<yyjson_insitu>/manual_time                 456869 ns       486245 ns         1533           6.896k           1.89584G             952        48.229k    1.22605M              1.94145          3.00205k       3.68067G          2.90804M                    4.60486                     2.37187           300.205k    7.25101k   631.515k       1.28734G/s    145.339   33.8325k   1.33868M         2.11979   2.18881k/s 2.93011G/s      2.9083M               4.60528                2.17252        100       218.881k/s [BEST: throughput=  1.90 GB/s doc_throughput=  3002 docs/s instructions=     2908038 cycles=     1226053 branch_miss=    6896 cache_miss=     952 cache_ref=     48229 items=       100 avg_time=    456868 ns]
partial_tweets<rapidjson>/manual_time                    1644184 ns      1673587 ns          426           26.93k           437.855M         10.702k        54.645k    5.32432M              8.43103            693.34       3.69157G           13.409M                     21.233                     2.51844            69.334k    27.2588k   631.515k       366.297M/s    498.869   34.1185k   5.47694M         8.67269    608.205/s  3.3311G/s     13.4097M               21.2342                 2.4484        100       60.8205k/s [BEST: throughput=  0.44 GB/s doc_throughput=   693 docs/s instructions=    13408983 cycles=     5324323 branch_miss=   26930 cache_miss=   10702 cache_ref=     54645 items=       100 avg_time=   1644183 ns]
partial_tweets<rapidjson_insitu>/manual_time             1189938 ns      1218860 ns          590          25.486k           587.542M              31         46.08k    3.96802M              6.28333           930.369       3.69172G          9.75494M                    15.4469                     2.45839           93.0369k    25.1297k   631.515k       506.127M/s    231.425   35.4224k   4.04468M         6.40473     840.38/s 3.39907G/s     9.75554M               15.4478                2.41194        100        84.038k/s [BEST: throughput=  0.59 GB/s doc_throughput=   930 docs/s instructions=     9754942 cycles=     3968017 branch_miss=   25486 cache_miss=      31 cache_ref=     46080 items=       100 avg_time=   1189937 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                  92276565 ns     95661960 ns            8         877.793k           499.121M        10.8769M       15.3883M    339.974M              7.39095           10.8507       3.68897G          983.113M                    21.3726                     2.89173           10.8507M    877.744k   45.9988M       475.395M/s   10.9322M   15.3783M    340.25M         7.39694     10.837/s 3.68729G/s     983.113M               21.3726                2.88938      1000k        10.837M/s [BEST: throughput=  0.50 GB/s doc_throughput=    10 docs/s instructions=   983112680 cycles=   339974462 branch_miss=  877793 cache_miss=10876913 cache_ref=  15388348 items=   1000000 avg_time=  92276565 ns]
large_random<simdjson_ondemand>/manual_time            130273071 ns    133637323 ns            5         2.39703M           353.594M        5.77157M       8.07663M    479.928M              10.4335           7.68702       3.68921G          1.28297G                    27.8915                     2.67327           7.68702M    2.41437M   45.9988M       336.738M/s   5.76083M   8.07599M   480.502M          10.446    7.67618/s 3.68842G/s     1.28297G               27.8915                2.67007      1000k       7.67618M/s [BEST: throughput=  0.35 GB/s doc_throughput=     7 docs/s instructions=  1282973812 cycles=   479927577 branch_miss= 2397027 cache_miss= 5771567 cache_ref=   8076627 items=   1000000 avg_time= 130273071 ns]
large_random<simdjson_ondemand_unordered>/manual_time  135389722 ns    138795455 ns            5         2.38559M           339.864M        5.77727M        8.0733M    499.234M              10.8532           7.38854       3.68861G          1.28697G                    27.9784                      2.5779           7.38854M    2.38801M   45.9988M       324.012M/s   5.78154M    8.0736M    499.45M         10.8579    7.38609/s 3.68898G/s     1.28697G               27.9784                2.57678      1000k       7.38609M/s [BEST: throughput=  0.34 GB/s doc_throughput=     7 docs/s instructions=  1286973827 cycles=   499234075 branch_miss= 2385589 cache_miss= 5777269 cache_ref=   8073302 items=   1000000 avg_time= 135389722 ns]
large_random<yyjson>/manual_time                       127338205 ns    130758976 ns            5         662.791k           361.391M        5.83926M       9.04598M    349.901M              7.60674           7.85654       2.74901G           944.15M                    20.5255                     2.69834           7.85654M     662.73k   45.9988M       344.499M/s    5.8401M   9.05582M   349.918M         7.60712     7.8531/s 2.74794G/s     944.149M               20.5255                 2.6982      1000k        7.8531M/s [BEST: throughput=  0.36 GB/s doc_throughput=     7 docs/s instructions=   944149588 cycles=   349900789 branch_miss=  662791 cache_miss= 5839263 cache_ref=   9045985 items=   1000000 avg_time= 127338204 ns]
large_random<yyjson_insitu>/manual_time                109541543 ns    112961743 ns            6         662.798k           420.068M        4.95898M       7.68167M    318.515M              6.92443           9.13215       2.90873G          938.029M                    20.3925                       2.945           9.13215M    662.823k   45.9988M       400.468M/s   4.96568M   7.69602M   318.504M         6.92418    9.12896/s 2.90761G/s     938.029M               20.3925                2.94511      1000k       9.12896M/s [BEST: throughput=  0.42 GB/s doc_throughput=     9 docs/s instructions=   938028827 cycles=   318515299 branch_miss=  662798 cache_miss= 4958975 cache_ref=   7681670 items=   1000000 avg_time= 109541543 ns]
large_random<rapidjson>/manual_time                    171091230 ns    174523169 ns            4         594.465k           280.846M         6.9621M       10.8202M    546.272M              11.8758           6.10551       3.33527G          1.65714G                    36.0258                     3.03355           6.10551M    591.955k   45.9988M         256.4M/s   6.40169M   10.0685M   551.837M         11.9968    5.84483/s  3.2254G/s     1.65715G                36.026                3.00297      1000k       5.84483M/s [BEST: throughput=  0.28 GB/s doc_throughput=     6 docs/s instructions=  1657141468 cycles=   546271529 branch_miss=  594465 cache_miss= 6962103 cache_ref=  10820171 items=   1000000 avg_time= 171091229 ns]
large_random<rapidjson_lossless>/manual_time           199793494 ns    203190305 ns            4         587.387k            238.58M        6.94926M       10.8206M    653.154M              14.1994           5.18666       3.38769G          2.00811G                    43.6557                     3.07448           5.18666M    588.049k   45.9988M       219.566M/s   6.38974M   10.0742M   657.793M         14.3002    5.00517/s 3.29236G/s     2.00812G                43.656                3.05282      1000k       5.00517M/s [BEST: throughput=  0.24 GB/s doc_throughput=     5 docs/s instructions=  2008110860 cycles=   653154101 branch_miss=  587387 cache_miss= 6949256 cache_ref=  10820570 items=   1000000 avg_time= 199793493 ns]
large_random<rapidjson_insitu>/manual_time             157968990 ns    161394134 ns            5         586.675k           306.036M         8.0524M       12.3643M    496.455M              10.7928           6.65313       3.30298G          1.49214G                    32.4387                     3.00559           6.65313M     585.97k   45.9988M       277.699M/s   7.46728M   11.5646M   502.249M         10.9187    6.33036/s 3.17942G/s     1.49215G               32.4389                2.97094      1000k       6.33036M/s [BEST: throughput=  0.31 GB/s doc_throughput=     6 docs/s instructions=  1492138960 cycles=   496454713 branch_miss=  586675 cache_miss= 8052399 cache_ref=  12364338 items=   1000000 avg_time= 157968990 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                        85878539 ns     96341662 ns            8         460.285k           1.60302G        15.5594M       22.1837M    315.953M               2.3011           11.6749       3.68871G          945.501M                    6.88614                     2.99254             6.121M    461.405k   137.305M       1.48902G/s   15.6004M   22.1454M   316.647M         2.30616    11.6444/s 3.68715G/s     945.501M               6.88614                2.98598   524.288k       6.10499M/s [BEST: throughput=  1.60 GB/s doc_throughput=    11 docs/s instructions=   945501382 cycles=   315953011 branch_miss=  460285 cache_miss=15559402 cache_ref=  22183733 items=    524288 avg_time=  85878539 ns]
kostya<simdjson_ondemand>/manual_time                  301804932 ns    312183577 ns            2          3.3194M           454.992M        10.3468M       14.3139M    1.11316G              8.10722           3.31373       3.68872G           2.8802G                    20.9767                     2.58741           1.73735M    3.31758M   137.305M        433.87M/s   10.3452M   14.2549M   1.11328G          8.1081     3.3134/s 3.68875G/s      2.8802G               20.9767                2.58712   524.288k       1.73718M/s [BEST: throughput=  0.45 GB/s doc_throughput=     3 docs/s instructions=  2880202948 cycles=  1113161392 branch_miss= 3319400 cache_miss=10346768 cache_ref=  14313898 items=    524288 avg_time= 301804932 ns]
kostya<yyjson>/manual_time                             200626527 ns    210977472 ns            3         416.011k           684.834M        11.2761M       16.0658M    541.427M              3.94324           4.98768       2.70046G          984.045M                    7.16686                      1.8175           2.61498M    417.024k   137.305M       652.677M/s   11.2765M   16.0753M    541.52M         3.94392    4.98439/s 2.69914G/s     984.045M               7.16686                1.81719   524.288k       2.61325M/s [BEST: throughput=  0.68 GB/s doc_throughput=     4 docs/s instructions=   984045123 cycles=   541426677 branch_miss=  416011 cache_miss=11276102 cache_ref=  16065771 items=    524288 avg_time= 200626527 ns]
kostya<yyjson_insitu>/manual_time                      146355270 ns    156705353 ns            5         418.582k           938.509M        8.74907M       12.2345M    444.916M              3.24035           6.83521       3.04109G          965.776M                     7.0338                     2.17069           3.58362M    419.595k   137.305M       894.701M/s   8.74821M   12.2078M   444.848M         3.23985    6.83269/s 3.03951G/s     965.776M                7.0338                2.17102   524.288k        3.5823M/s [BEST: throughput=  0.94 GB/s doc_throughput=     6 docs/s instructions=   965775558 cycles=   444915562 branch_miss=  418582 cache_miss= 8749070 cache_ref=  12234531 items=    524288 avg_time= 146355269 ns]
kostya<rapidjson>/manual_time                          244666821 ns    255034760 ns            3         969.647k           568.853M        8.09809M       11.9903M     809.18M               5.8933           4.14299       3.35242G          2.29716G                    16.7303                     2.83887           2.17212M    969.767k   137.305M       535.194M/s   7.79638M   11.6145M   811.764M         5.91212    4.08719/s 3.31783G/s     2.29716G               16.7303                2.82984   524.288k       2.14287M/s [BEST: throughput=  0.57 GB/s doc_throughput=     4 docs/s instructions=  2297155858 cycles=   809180058 branch_miss=  969647 cache_miss= 8098091 cache_ref=  11990320 items=    524288 avg_time= 244666821 ns]
kostya<rapidjson_lossless>/manual_time                 260712315 ns    271045656 ns            3         951.218k           533.668M        8.10292M       12.1844M    867.318M              6.31673           3.88673       3.37103G          2.49743G                    18.1889                     2.87948           2.03777M    951.476k   137.305M       502.256M/s   7.81975M   11.7542M   870.247M         6.33806    3.83565/s 3.33796G/s     2.49743G               18.1889                2.86979   524.288k       2.01098M/s [BEST: throughput=  0.53 GB/s doc_throughput=     3 docs/s instructions=  2497426010 cycles=   867318296 branch_miss=  951218 cache_miss= 8102916 cache_ref=  12184416 items=    524288 avg_time= 260712315 ns]
kostya<rapidjson_insitu>/manual_time                   226374424 ns    236716530 ns            3         1026.33k            615.56M        11.1786M       15.7026M    741.477M              5.40022           4.48316       3.32416G          2.03227G                    14.8012                     2.74085           2.35047M    1032.58k   137.305M       578.441M/s   10.8788M   15.3449M   744.142M         5.41962    4.41746/s 3.28722G/s     2.03228G               14.8012                2.73103   524.288k       2.31602M/s [BEST: throughput=  0.62 GB/s doc_throughput=     4 docs/s instructions=  2032274431 cycles=   741477217 branch_miss= 1026325 cache_miss=11178586 cache_ref=  15702618 items=    524288 avg_time= 226374424 ns]
distinct_user_id<simdjson_dom>/manual_time                259744 ns       290668 ns         2696           3.999k           2.44776G               0        93.831k    952.647k              1.50851          3.87601k       3.69247G          2.90343M                    4.59756                     3.04775           445.742k    4.16039k   631.515k       2.26432G/s   0.878709   93.9966k   958.487k         1.51776   3.84994k/s 3.69012G/s     2.90343M               4.59756                3.02918        115       442.744k/s [BEST: throughput=  2.45 GB/s doc_throughput=  3876 docs/s instructions=     2903428 cycles=      952647 branch_miss=    3999 cache_miss=       0 cache_ref=     93831 items=       115 avg_time=    259743 ns]
distinct_user_id<simdjson_ondemand>/manual_time          1101784 ns      1132228 ns          635          31.014k           576.348M               0         58.33k    4.04501M              6.40525           912.644       3.69165G          10.3431M                    16.3782                     2.55701           104.954k    31.5464k   631.515k       546.622M/s   0.551181   58.2122k    4.0643M         6.43579    907.619/s 3.68883G/s     10.3431M               16.3782                2.54487        115       104.376k/s [BEST: throughput=  0.58 GB/s doc_throughput=   912 docs/s instructions=    10343109 cycles=     4045009 branch_miss=   31014 cache_miss=       0 cache_ref=     58330 items=       115 avg_time=   1101783 ns]
distinct_user_id<yyjson>/manual_time                      653228 ns       687760 ns         1263           9.582k           1.69773G             615        77.612k     1.3736M              2.17508          2.68834k       3.69269G          2.87489M                    4.55237                     2.09297           309.159k       7.53k   631.515k       921.975M/s    1095.37   50.5405k   1.60248M         2.53752   1.53086k/s 2.45318G/s     2.87558M               4.55346                1.79445        115       176.049k/s [BEST: throughput=  1.70 GB/s doc_throughput=  2688 docs/s instructions=     2874892 cycles=     1373596 branch_miss=    9582 cache_miss=     615 cache_ref=     77612 items=       115 avg_time=    653227 ns]
distinct_user_id<yyjson_insitu>/manual_time               450759 ns       483846 ns         1553           6.961k           1.91351G             569        46.686k    1.21534M              1.92448          3.03004k       3.68252G          2.87478M                    4.55219                     2.36542           348.454k    7.40737k   631.515k       1.30479G/s    117.885   32.2478k   1.32915M          2.1047   2.21848k/s  2.9487G/s     2.87504M               4.55261                2.16306        115       255.125k/s [BEST: throughput=  1.91 GB/s doc_throughput=  3030 docs/s instructions=     2874778 cycles=     1215337 branch_miss=    6961 cache_miss=     569 cache_ref=     46686 items=       115 avg_time=    450758 ns]
distinct_user_id<rapidjson>/manual_time                  1624357 ns      1655291 ns          432          27.073k           439.563M             204        54.517k    5.30372M               8.3984           696.046       3.69163G          13.3489M                    21.1379                      2.5169           80.0453k    27.1552k   631.515k       370.768M/s   1.92241k   36.2028k   5.46149M         8.64824    615.628/s 3.36225G/s     13.3497M               21.1392                2.44433        115       70.7972k/s [BEST: throughput=  0.44 GB/s doc_throughput=   696 docs/s instructions=    13348898 cycles=     5303716 branch_miss=   27073 cache_miss=     204 cache_ref=     54517 items=       115 avg_time=   1624357 ns]
distinct_user_id<rapidjson_insitu>/manual_time           1167664 ns      1197721 ns          626          25.053k           590.746M             130        45.328k    3.94652M               6.2493           935.443       3.69175G          9.70519M                    15.3681                     2.45917           107.576k    25.0671k   631.515k       515.782M/s   2.12797k   36.9822k   4.02432M         6.37248    856.411/s 3.44647G/s     9.70553M               15.3686                2.41172        115       98.4873k/s [BEST: throughput=  0.59 GB/s doc_throughput=   935 docs/s instructions=     9705191 cycles=     3946524 branch_miss=   25053 cache_miss=     130 cache_ref=     45328 items=       115 avg_time=   1167663 ns]
find_tweet<simdjson_dom>/manual_time                      247718 ns       277056 ns         2824           3.701k           2.56579G               0        83.682k    908.785k              1.43906          4.06291k       3.69231G          2.82239M                    4.46923                     3.10567           4.06291k    3.84654k   631.515k       2.37424G/s   0.556303   83.5997k   914.146k         1.44754   4.03684k/s 3.69026G/s     2.82239M               4.46923                3.08746          1       4.03684k/s [BEST: throughput=  2.57 GB/s doc_throughput=  4062 docs/s instructions=     2822388 cycles=      908785 branch_miss=    3701 cache_miss=       0 cache_ref=     83682 items=         1 avg_time=    247718 ns]
find_tweet<simdjson_ondemand>/manual_time                1034670 ns      1063220 ns          677          30.508k           614.311M               2        33.903k    3.79501M              6.00938           972.758       3.69163G          9.73047M                    15.4081                     2.56401            972.758    30.9913k   631.515k       582.079M/s   0.635155   33.7914k   3.81686M         6.04397    966.491/s 3.68896G/s     9.73047M               15.4081                2.54934          1        966.491/s [BEST: throughput=  0.61 GB/s doc_throughput=   972 docs/s instructions=     9730469 cycles=     3795015 branch_miss=   30508 cache_miss=       2 cache_ref=     33903 items=         1 avg_time=   1034670 ns]
find_tweet<yyjson>/manual_time                            641775 ns       672986 ns         1113           9.331k           1.74445G             103        68.726k     1.3368M              2.11681          2.76232k       3.69267G          2.82413M                      4.472                     2.11261           2.76232k    7.27098k   631.515k       938.428M/s    1038.39   41.8093k     1.566M         2.47975   1.55818k/s 2.44011G/s     2.82482M               4.47309                1.80385          1       1.55818k/s [BEST: throughput=  1.74 GB/s doc_throughput=  2762 docs/s instructions=     2824133 cycles=     1336799 branch_miss=    9331 cache_miss=     103 cache_ref=     68726 items=         1 avg_time=    641774 ns]
find_tweet<yyjson_insitu>/manual_time                     440110 ns       470309 ns         1590           6.635k           1.97463G             648        38.089k    1.17757M              1.86467          3.12682k       3.68203G          2.82381M                    4.47149                     2.39801           3.12682k    7.12993k   631.515k       1.33636G/s    16.3742   23.6305k   1.29093M         2.04418   2.27216k/s 2.93321G/s     2.82407M                4.4719                2.18762          1       2.27216k/s [BEST: throughput=  1.97 GB/s doc_throughput=  3126 docs/s instructions=     2823812 cycles=     1177566 branch_miss=    6635 cache_miss=     648 cache_ref=     38089 items=         1 avg_time=    440109 ns]
find_tweet<rapidjson>/manual_time                        1615190 ns      1644342 ns          435          26.573k           441.543M           9.48k        48.116k     5.2799M              8.36069            699.18        3.6916G          13.2808M                      21.03                     2.51535             699.18    27.0864k   631.515k       372.872M/s   1.57828k   28.8947k   5.42665M         8.59306    619.122/s 3.35976G/s     13.2815M               21.0311                2.44745          1        619.122/s [BEST: throughput=  0.44 GB/s doc_throughput=   699 docs/s instructions=    13280779 cycles=     5279901 branch_miss=   26573 cache_miss=    9480 cache_ref=     48116 items=         1 avg_time=   1615189 ns]
find_tweet<rapidjson_insitu>/manual_time                 1159455 ns      1189170 ns          634          25.086k           595.146M               0        36.349k    3.91718M              6.20283            942.41       3.69159G          9.64683M                    15.2757                      2.4627             942.41    25.0139k   631.515k       519.433M/s    1.9072k   27.9287k   3.99332M         6.32339    862.474/s 3.44413G/s     9.64738M               15.2766                2.41588          1        862.474/s [BEST: throughput=  0.60 GB/s doc_throughput=   942 docs/s instructions=     9646831 cycles=     3917183 branch_miss=   25086 cache_miss=       0 cache_ref=     36349 items=         1 avg_time=   1159454 ns]
