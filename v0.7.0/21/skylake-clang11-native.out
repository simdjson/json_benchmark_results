run_benchmark: v0.8.0~17 /home/jkeiser/simdjson_benchmark_results/v0.7.0/21/skylake-clang11-native.json -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native
git reset --hard v0.8.0~17
HEAD is now at 7dbe4caf Taking a float and adding hundreds of zeros, you may get a truncated value that is just one over the desired value (bug fix) (#1388)
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- git Version: v0.2.1-7dbe4caf
-- Version: 0.2.1
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES -- failed to compile
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 10
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
make[3]: Nothing to be done for '_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build'.
[ 80%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
make[3]: Nothing to be done for 'jsonexamples/generated/CMakeFiles/generated-data.dir/build'.
[ 80%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/clang++-11  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/src  -march=native -O3 -DNDEBUG -fPIC   -pthread -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/clang++-11 -fPIC -march=native -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.6 -o ../libsimdjson.so.6.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.6.0.0 ../libsimdjson.so.6 ../libsimdjson.so
[ 80%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
make[3]: Nothing to be done for 'dependencies/CMakeFiles/yyjson.dir/build'.
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/clang++-11  -DRAPIDJSON_HAS_STDSTRING -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_COMPETITION_RAPIDJSON -DSIMDJSON_COMPETITION_YYJSON -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/rapidjson/include  -march=native -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/clang++-11  -march=native -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.6.0.0 ../_deps/google_benchmarks/src/libbenchmark.a ../dependencies/libyyjson.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/21/skylake-clang11-native.json --benchmark_out_format=json
2021-01-25 01:56:14
Running benchmark/bench_ondemand
Run on (4 X 4000 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 256 KiB (x4)
  L3 Unified 8192 KiB (x1)
Load Average: 1.00, 0.93, 0.66
simdjson::dom implementation:      haswell
simdjson::ondemand implementation: haswell

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                  271775 ns       300554 ns         2574           3.607k           2.33665G               2        93.927k    997.975k              1.58029          3.70007k       3.69258G          2.99337M                    4.73999                     2.99945           370.007k    3.69621k   631.515k       2.16409G/s    4.15734   93.8093k   1002.91k          1.5881   3.67952k/s 3.69022G/s     2.99337M               4.73999                2.98469        100       367.952k/s [BEST: throughput=  2.34 GB/s doc_throughput=  3700 docs/s instructions=     2993372 cycles=      997975 branch_miss=    3607 cache_miss=       2 cache_ref=     93927 items=       100 avg_time=    271774 ns]
partial_tweets<simdjson_ondemand>/manual_time             180158 ns       208770 ns         3880           2.055k           3.53015G               0        59.097k    660.811k              1.04639          5.58996k       3.69391G          1.94495M                    3.07982                     2.94328           558.996k     2.2016k   631.515k        3.2646G/s   0.555412   59.1788k   665.053k         1.05311   5.55068k/s  3.6915G/s     1.94495M               3.07982                 2.9245        100       555.068k/s [BEST: throughput=  3.53 GB/s doc_throughput=  5589 docs/s instructions=     1944950 cycles=      660811 branch_miss=    2055 cache_miss=       0 cache_ref=     59097 items=       100 avg_time=    180158 ns]
partial_tweets<yyjson>/manual_time                        638256 ns       668938 ns         1096           9.649k           1.81899G             281        77.559k    1.28206M              2.03014          2.88037k       3.69281G           2.9196M                    4.62317                     2.27727           288.037k    7.56635k   631.515k       943.602M/s    996.106    52.027k   1.50307M          2.3801   1.56677k/s 2.35497G/s     2.92009M               4.62394                1.94275        100       156.677k/s [BEST: throughput=  1.82 GB/s doc_throughput=  2880 docs/s instructions=     2919603 cycles=     1282064 branch_miss=    9649 cache_miss=     281 cache_ref=     77559 items=       100 avg_time=    638255 ns]
partial_tweets<yyjson_insitu>/manual_time                 426462 ns       455919 ns         1642           6.878k           2.05616G          5.325k        48.374k    1.13088M              1.79073          3.25592k       3.68204G          2.91929M                    4.62267                     2.58144           325.592k    7.35414k   631.515k       1.37913G/s    149.886   33.7145k   1.22679M         1.94262   2.34488k/s 2.87668G/s     2.91955M               4.62309                2.37982        100       234.488k/s [BEST: throughput=  2.06 GB/s doc_throughput=  3255 docs/s instructions=     2919288 cycles=     1130876 branch_miss=    6878 cache_miss=    5325 cache_ref=     48374 items=       100 avg_time=    426461 ns]
partial_tweets<rapidjson>/manual_time                    2197234 ns      2226517 ns          319          30.751k           316.499M             567        54.627k    7.35377M              11.6446           501.174       3.68551G          21.8952M                    34.6709                     2.97741           50.1174k    31.1423k   631.515k       274.099M/s    602.533   35.5119k   7.51417M         11.8986    455.118/s 3.41983G/s     21.8962M               34.6726                2.91399        100       45.5118k/s [BEST: throughput=  0.32 GB/s doc_throughput=   501 docs/s instructions=    21895190 cycles=     7353766 branch_miss=   30751 cache_miss=     567 cache_ref=     54627 items=       100 avg_time=   2197233 ns]
partial_tweets<rapidjson_insitu>/manual_time             1580801 ns      1610064 ns          443          25.115k           429.077M             116        45.952k    5.43327M              8.60355           679.441       3.69159G            13.32M                    21.0921                     2.45156           67.9441k     24.924k   631.515k       380.984M/s    310.201    36.383k   5.49015M         8.69362    632.591/s 3.47302G/s     13.3206M               21.0931                2.42627        100       63.2591k/s [BEST: throughput=  0.43 GB/s doc_throughput=   679 docs/s instructions=    13320005 cycles=     5433269 branch_miss=   25115 cache_miss=     116 cache_ref=     45952 items=       100 avg_time=   1580800 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                  87689358 ns     91089842 ns            8         930.729k           525.777M        10.8904M       15.4217M    322.738M              7.01624           11.4302       3.68898G          1035.69M                    22.5155                     3.20906           11.4302M    931.361k   45.9988M       500.264M/s   10.9008M   15.4247M   323.464M         7.03202    11.4039/s 3.68875G/s     1035.69M               22.5155                3.20186      1000k       11.4039M/s [BEST: throughput=  0.53 GB/s doc_throughput=    11 docs/s instructions=  1035686042 cycles=   322738270 branch_miss=  930729 cache_miss=10890373 cache_ref=  15421736 items=   1000000 avg_time=  87689357 ns]
large_random<simdjson_ondemand>/manual_time             66121552 ns     69506670 ns           11         920.808k           696.448M        5.65239M       8.02939M    243.641M              5.29669           15.1406       3.68887G          669.142M                     14.547                     2.74642           15.1406M    921.848k   45.9988M       663.443M/s   5.70502M   8.03168M   243.881M         5.30191    15.1237/s 3.68838G/s     669.142M                14.547                2.74372      1000k       15.1237M/s [BEST: throughput=  0.70 GB/s doc_throughput=    15 docs/s instructions=   669141949 cycles=   243641401 branch_miss=  920808 cache_miss= 5652393 cache_ref=   8029390 items=   1000000 avg_time=  66121551 ns]
large_random<simdjson_ondemand_unordered>/manual_time   66142717 ns     69511365 ns           11         898.302k           696.414M        5.71019M       8.03014M    243.637M              5.29659           15.1398       3.68862G          670.142M                    14.5687                     2.75058           15.1398M    901.488k   45.9988M        663.23M/s   5.72379M   8.03058M   243.923M         5.30281    15.1188/s 3.68782G/s     670.142M               14.5687                2.74735      1000k       15.1188M/s [BEST: throughput=  0.70 GB/s doc_throughput=    15 docs/s instructions=   670141947 cycles=   243636621 branch_miss=  898302 cache_miss= 5710188 cache_ref=   8030141 items=   1000000 avg_time=  66142716 ns]
large_random<yyjson>/manual_time                       115712467 ns    119145201 ns            6         676.763k           397.692M        5.73898M       8.98288M    306.892M              6.67175            8.6457        2.6533G          855.681M                    18.6023                     2.78821            8.6457M    677.241k   45.9988M       379.111M/s   5.73646M    8.9893M   307.058M         6.67535    8.64211/s 2.65363G/s     855.681M               18.6023                2.78671      1000k       8.64211M/s [BEST: throughput=  0.40 GB/s doc_throughput=     8 docs/s instructions=   855680952 cycles=   306892287 branch_miss=  676763 cache_miss= 5738981 cache_ref=   8982885 items=   1000000 avg_time= 115712466 ns]
large_random<yyjson_insitu>/manual_time                 97834978 ns    101256293 ns            7          678.49k           470.424M        4.85636M       7.61862M    275.419M              5.98753           10.2269       2.81667G           849.56M                    18.4692                     3.08461           10.2269M    677.603k   45.9988M       448.386M/s   4.85293M   7.62729M   275.498M         5.98925    10.2213/s 2.81595G/s      849.56M               18.4692                3.08373      1000k       10.2213M/s [BEST: throughput=  0.47 GB/s doc_throughput=    10 docs/s instructions=   849560188 cycles=   275418957 branch_miss=  678490 cache_miss= 4856359 cache_ref=   7618618 items=   1000000 avg_time=  97834978 ns]
large_random<rapidjson>/manual_time                    216519376 ns    219938536 ns            3         611.849k           218.393M        7.02824M       10.9018M    718.927M              15.6293            4.7478       3.41333G          2.01014G                    43.6999                     2.79603            4.7478M    611.692k   45.9988M       202.605M/s   6.52423M   10.2554M   721.963M         15.6953    4.61852/s  3.3344G/s     2.01015G               43.7001                2.78429      1000k       4.61852M/s [BEST: throughput=  0.22 GB/s doc_throughput=     4 docs/s instructions=  2010142781 cycles=   718927280 branch_miss=  611849 cache_miss= 7028236 cache_ref=  10901848 items=   1000000 avg_time= 216519376 ns]
large_random<rapidjson_lossless>/manual_time           246940904 ns    250367055 ns            3         594.732k           190.695M        7.16877M       10.9222M    831.857M              18.0843           4.14564       3.44858G          2.47511G                    53.8082                      2.9754           4.14564M    594.459k   45.9988M       177.645M/s   6.57844M   10.2779M   834.137M         18.1339    4.04955/s 3.37788G/s     2.47512G               53.8084                2.96728      1000k       4.04955M/s [BEST: throughput=  0.19 GB/s doc_throughput=     4 docs/s instructions=  2475109908 cycles=   831856554 branch_miss=  594732 cache_miss= 7168775 cache_ref=  10922176 items=   1000000 avg_time= 246940903 ns]
large_random<rapidjson_insitu>/manual_time             237188109 ns    240619307 ns            3         590.536k           198.287M        8.19688M        12.487M    797.744M              17.3427            4.3107       3.43884G          1.72014G                    37.3954                     2.15626            4.3107M    589.083k   45.9988M        184.95M/s   7.66187M   11.8423M   798.197M         17.3526    4.21606/s 3.36525G/s     1.72015G               37.3956                2.15505      1000k       4.21606M/s [BEST: throughput=  0.20 GB/s doc_throughput=     4 docs/s instructions=  1720142597 cycles=   797743741 branch_miss=  590536 cache_miss= 8196882 cache_ref=  12486966 items=   1000000 avg_time= 237188108 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                        93664683 ns    104035109 ns            7         1.11336M           1.46904G         15.786M       22.3599M    344.803M              2.51122           10.6991       3.68909G          985.796M                    7.17961                     2.85901           5.60942M    1.11378M   137.305M       1.36525G/s   15.8339M   22.3735M    345.46M           2.516    10.6764/s 3.68826G/s     985.796M               7.17961                2.85358   524.288k        5.5975M/s [BEST: throughput=  1.47 GB/s doc_throughput=    10 docs/s instructions=   985795975 cycles=   344803065 branch_miss= 1113361 cache_miss=15785950 cache_ref=  22359869 items=    524288 avg_time=  93664682 ns]
kostya<simdjson_ondemand>/manual_time                   63851146 ns     74175065 ns           11         556.748k           2.15258G        10.0798M       14.0614M     235.25M              1.71334           15.6774        3.6881G          654.158M                    4.76427                      2.7807           8.21947M    556.889k   137.305M       2.00271G/s   10.1002M   14.0197M   235.521M         1.71531    15.6614/s 3.68859G/s     654.158M               4.76427                2.77749   524.288k        8.2111M/s [BEST: throughput=  2.15 GB/s doc_throughput=    15 docs/s instructions=   654158322 cycles=   235249548 branch_miss=  556748 cache_miss=10079796 cache_ref=  14061409 items=    524288 avg_time=  63851146 ns]
kostya<yyjson>/manual_time                             173326329 ns    183711450 ns            4          418.07k           793.693M        11.2773M       16.3467M    442.258M              3.22099           5.78051       2.55648G          974.184M                    7.09504                     2.20275           3.03065M    418.191k   137.305M       755.478M/s   11.2783M   16.3402M   442.338M         3.22158    5.76946/s 2.55206G/s     974.185M               7.09504                2.20235   524.288k       3.02486M/s [BEST: throughput=  0.79 GB/s doc_throughput=     5 docs/s instructions=   974184486 cycles=   442258391 branch_miss=  418070 cache_miss=11277316 cache_ref=  16346705 items=    524288 avg_time= 173326328 ns]
kostya<yyjson_insitu>/manual_time                      120091952 ns    130490594 ns            6         417.087k           1.14425G        8.66158M       12.3159M     348.42M              2.53756           8.33363        2.9036G          955.915M                    6.96198                     2.74357           4.36922M    417.595k   137.305M       1090.37M/s   8.66155M   12.3475M   348.633M         2.53911    8.32695/s 2.90305G/s     955.915M               6.96198                 2.7419   524.288k       4.36572M/s [BEST: throughput=  1.14 GB/s doc_throughput=     8 docs/s instructions=   955915127 cycles=   348419687 branch_miss=  417087 cache_miss= 8661580 cache_ref=  12315890 items=    524288 avg_time= 120091952 ns]
kostya<rapidjson>/manual_time                          271544675 ns    281921426 ns            3         965.048k           511.459M        8.30252M       12.3601M    908.247M              6.61482           3.72498       3.38321G          2.73767G                    19.9386                     3.01424           1.95296M    965.126k   137.305M        482.22M/s   7.99833M   11.9807M    910.46M         6.63093    3.68264/s 3.35289G/s     2.73767G               19.9386                3.00691   524.288k       1.93076M/s [BEST: throughput=  0.51 GB/s doc_throughput=     3 docs/s instructions=  2737671863 cycles=   908247194 branch_miss=  965048 cache_miss= 8302520 cache_ref=  12360109 items=    524288 avg_time= 271544675 ns]
kostya<rapidjson_lossless>/manual_time                 291660014 ns    302093084 ns            2         966.668k            474.59M          8.301M       12.3903M    985.081M               7.1744           3.45647        3.4049G          3.00662G                    21.8974                     3.05216           1.81218M    965.679k   137.305M       448.962M/s   8.06982M    12.111M   986.817M         7.18704    3.42865/s 3.38345G/s     3.00662G               21.8974                3.04679   524.288k        1.7976M/s [BEST: throughput=  0.47 GB/s doc_throughput=     3 docs/s instructions=  3006622676 cycles=   985081035 branch_miss=  966668 cache_miss= 8301003 cache_ref=  12390325 items=    524288 avg_time= 291660013 ns]
kostya<rapidjson_insitu>/manual_time                   273829404 ns    284201399 ns            3         992.178k           507.199M        11.9267M       16.1119M    917.023M              6.67873           3.69396       3.38745G          2.21152G                    16.1066                     2.41163            1.9367M    994.642k   137.305M       478.196M/s   11.6394M   15.7669M   919.032M         6.69336    3.65191/s 3.35622G/s     2.21153G               16.1067                2.40636   524.288k       1.91465M/s [BEST: throughput=  0.51 GB/s doc_throughput=     3 docs/s instructions=  2211523421 cycles=   917022585 branch_miss=  992178 cache_miss=11926739 cache_ref=  16111889 items=    524288 avg_time= 273829404 ns]
distinct_user_id<simdjson_dom>/manual_time                267311 ns       297782 ns         2618           3.689k            2.3755G               0         93.99k      981.6k              1.55436          3.76159k       3.69238G          2.92855M                    4.63734                     2.98344           432.583k    3.80502k   631.515k       2.20023G/s    9.54278   93.8313k   986.263k         1.56174   3.74097k/s 3.68958G/s     2.92855M               4.63734                2.96934        115       430.211k/s [BEST: throughput=  2.38 GB/s doc_throughput=  3761 docs/s instructions=     2928548 cycles=      981600 branch_miss=    3689 cache_miss=       0 cache_ref=     93990 items=       115 avg_time=    267310 ns]
distinct_user_id<simdjson_ondemand>/manual_time           154359 ns       184116 ns         4527           1.856k            4.1216G               0        55.785k    565.825k              0.89598          6.52652k       3.69287G          1.89446M                    2.99986                     3.34813            750.55k    1.95651k   631.515k       3.81024G/s  0.0956483    55.749k   569.736k        0.902174    6.4784k/s 3.69098G/s     1.89446M               2.99986                3.32514        115       745.016k/s [BEST: throughput=  4.12 GB/s doc_throughput=  6526 docs/s instructions=     1894455 cycles=      565825 branch_miss=    1856 cache_miss=       0 cache_ref=     55785 items=       115 avg_time=    154359 ns]
distinct_user_id<yyjson>/manual_time                      621797 ns       655509 ns         1340          10.037k           1.82851G             261        76.602k    1.27527M              2.01939          2.89543k       3.69246G           2.8777M                    4.55683                     2.25654           332.974k    7.63041k   631.515k       968.579M/s    1087.03   50.7244k   1.48774M         2.35582   1.60824k/s 2.39264G/s     2.87819M               4.55759                1.93461        115       184.948k/s [BEST: throughput=  1.83 GB/s doc_throughput=  2895 docs/s instructions=     2877705 cycles=     1275273 branch_miss=   10037 cache_miss=     261 cache_ref=     76602 items=       115 avg_time=    621797 ns]
distinct_user_id<yyjson_insitu>/manual_time               418364 ns       451189 ns         1672           7.104k           2.08916G             433        46.835k    1.11284M              1.76218          3.30817k       3.68146G          2.87759M                    4.55665                     2.58581           380.439k    7.42587k   631.515k       1.40582G/s    70.3002     32.28k   1.21066M         1.91707   2.39027k/s  2.8938G/s     2.87785M               4.55706                 2.3771        115       274.881k/s [BEST: throughput=  2.09 GB/s doc_throughput=  3308 docs/s instructions=     2877592 cycles=     1112840 branch_miss=    7104 cache_miss=     433 cache_ref=     46835 items=       115 avg_time=    418363 ns]
distinct_user_id<rapidjson>/manual_time                  2169167 ns      2200005 ns          323          30.401k           317.704M          8.986k        55.936k     7.3229M              11.5958           503.082       3.68402G          21.8229M                    34.5565                      2.9801           57.8544k    31.2225k   631.515k       277.646M/s   2.54065k    37.637k   7.48126M         11.8465    461.007/s 3.44891G/s     21.8236M               34.5576                2.91711        115       53.0158k/s [BEST: throughput=  0.32 GB/s doc_throughput=   503 docs/s instructions=    21822949 cycles=     7322903 branch_miss=   30401 cache_miss=    8986 cache_ref=     55936 items=       115 avg_time=   2169166 ns]
distinct_user_id<rapidjson_insitu>/manual_time           1597761 ns      1628401 ns          422          24.851k            402.52M              69        35.236k     5.4605M              8.64667           637.388       3.48046G          13.2537M                    20.9871                     2.42719           73.2996k    32.0113k   631.515k        376.94M/s    3.1078k     38.27k   5.63785M          8.9275    625.876/s 3.52859G/s     13.2536M               20.9869                2.35082        115       71.9757k/s [BEST: throughput=  0.40 GB/s doc_throughput=   637 docs/s instructions=    13253686 cycles=     5460504 branch_miss=   24851 cache_miss=      69 cache_ref=     35236 items=       115 avg_time=   1597760 ns]
find_tweet<simdjson_dom>/manual_time                      255677 ns       285002 ns         2739           3.381k           2.48186G               0        83.489k    939.626k              1.48789          3.93001k       3.69274G          2.84337M                    4.50246                     3.02607           3.93001k     3.4911k   631.515k       2.30034G/s    10.5316   83.3024k   943.494k         1.49402   3.91119k/s 3.69018G/s     2.84337M               4.50246                3.01366          1       3.91119k/s [BEST: throughput=  2.48 GB/s doc_throughput=  3930 docs/s instructions=     2843374 cycles=      939626 branch_miss=    3381 cache_miss=       0 cache_ref=     83489 items=         1 avg_time=    255676 ns]
find_tweet<simdjson_ondemand>/manual_time                 112774 ns       141273 ns         6212             1027           5.62266G               0        32.011k    414.882k             0.656963          8.90345k       3.69388G          1.38745M                    2.19702                      3.3442           8.90345k     1058.68   631.515k       5.21522G/s     0.2368   32.1294k   416.291k        0.659194   8.86725k/s 3.69136G/s     1.38745M               2.19702                3.33289          1       8.86725k/s [BEST: throughput=  5.62 GB/s doc_throughput=  8903 docs/s instructions=     1387450 cycles=      414882 branch_miss=    1027 cache_miss=       0 cache_ref=     32011 items=         1 avg_time=    112774 ns]
find_tweet<yyjson>/manual_time                            610324 ns       641370 ns         1219           9.628k           1.88921G             170        69.482k    1.23436M               1.9546          2.99156k       3.69266G          2.81715M                    4.46094                     2.28228           2.99156k    7.39169k   631.515k       986.787M/s    1043.93   41.9219k   1.45009M         2.29621   1.63847k/s 2.37594G/s     2.81763M                4.4617                1.94307          1       1.63847k/s [BEST: throughput=  1.89 GB/s doc_throughput=  2991 docs/s instructions=     2817152 cycles=     1234359 branch_miss=    9628 cache_miss=     170 cache_ref=     69482 items=         1 avg_time=    610323 ns]
find_tweet<yyjson_insitu>/manual_time                     408398 ns       438776 ns         1717           6.701k           2.16771G             682        38.311k     1072.2k              1.69783          3.43256k        3.6804G          2.81704M                    4.46076                     2.62734           3.43256k    7.27115k   631.515k       1.44012G/s    14.6674   23.3584k   1.17437M         1.85961   2.44859k/s 2.87555G/s      2.8173M               4.46118                2.39899          1       2.44859k/s [BEST: throughput=  2.17 GB/s doc_throughput=  3432 docs/s instructions=     2817039 cycles=     1072203 branch_miss=    6701 cache_miss=     682 cache_ref=     38311 items=         1 avg_time=    408398 ns]
find_tweet<rapidjson>/manual_time                        2156968 ns      2185979 ns          325          30.326k           319.308M         21.491k        48.583k    7.30086M              11.5609           505.623       3.69148G          21.7387M                    34.4231                     2.97755            505.623    31.0392k   631.515k       279.216M/s    2.1059k    29.481k   7.43593M         11.7748    463.614/s  3.4474G/s     21.7393M               34.4241                2.92355          1        463.614/s [BEST: throughput=  0.32 GB/s doc_throughput=   505 docs/s instructions=    21738692 cycles=     7300858 branch_miss=   30326 cache_miss=   21491 cache_ref=     48583 items=         1 avg_time=   2156968 ns]
find_tweet<rapidjson_insitu>/manual_time                 1572572 ns      1602537 ns          422          24.605k           432.568M         12.699k         37.37k    5.38944M              8.53415           684.969        3.6916G          13.1749M                    20.8624                     2.44458            684.969    29.9784k   631.515k       382.978M/s   2.99007k   29.0157k    5.5494M         8.78744    635.901/s 3.52887G/s     13.1752M               20.8629                2.37417          1        635.901/s [BEST: throughput=  0.43 GB/s doc_throughput=   684 docs/s instructions=    13174929 cycles=     5389445 branch_miss=   24605 cache_miss=   12699 cache_ref=     37370 items=         1 avg_time=   1572571 ns]
