run_benchmark: v0.8.0~17 /home/jkeiser/simdjson_benchmark_results/v0.7.0/21/skylake-x-clang11-native.json -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native
git reset --hard v0.8.0~17
HEAD is now at 7dbe4caf Taking a float and adding hundreds of zeros, you may get a truncated value that is just one over the desired value (bug fix) (#1388)
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- git Version: v0.2.1-7dbe4caf
-- Version: 0.2.1
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES -- failed to compile
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 10
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
make[3]: Nothing to be done for '_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build'.
[ 80%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
make[3]: Nothing to be done for 'jsonexamples/generated/CMakeFiles/generated-data.dir/build'.
[ 80%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/clang++-11  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/src  -march=native -O3 -DNDEBUG -fPIC   -pthread -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/clang++-11 -fPIC -march=native -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.6 -o ../libsimdjson.so.6.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.6.0.0 ../libsimdjson.so.6 ../libsimdjson.so
[ 80%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
make[3]: Nothing to be done for 'dependencies/CMakeFiles/yyjson.dir/build'.
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/clang++-11  -DRAPIDJSON_HAS_STDSTRING -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_COMPETITION_RAPIDJSON -DSIMDJSON_COMPETITION_YYJSON -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/rapidjson/include  -march=native -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/clang++-11  -march=native -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.6.0.0 ../_deps/google_benchmarks/src/libbenchmark.a ../dependencies/libyyjson.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/21/skylake-x-clang11-native.json --benchmark_out_format=json
2021-01-24 23:16:57
Running benchmark/bench_ondemand
Run on (4 X 3200 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 1024 KiB (x4)
  L3 Unified 8448 KiB (x1)
Load Average: 0.91, 0.86, 0.93
***WARNING*** CPU scaling is enabled, the benchmark real time measurements may be noisy and will incur extra overhead.
simdjson::dom implementation:      haswell
simdjson::ondemand implementation: haswell

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                  322479 ns       391636 ns         2168           3.648k           1.97548G              45        33.641k    1020.92k              1.61661          3.12816k       3.19359G          2.93219M                     4.6431                     2.87212           312.816k    3.89308k   631.515k       1.82382G/s    38.0701   33.6575k   1028.95k         1.62934   3.10098k/s 3.19075G/s     2.93219M                4.6431                2.84969        100       310.098k/s [BEST: throughput=  1.98 GB/s doc_throughput=  3128 docs/s instructions=     2932189 cycles=     1020916 branch_miss=    3648 cache_miss=      45 cache_ref=     33641 items=       100 avg_time=    322479 ns]
partial_tweets<simdjson_ondemand>/manual_time             211637 ns       266350 ns         3304           2.141k           3.03543G               0        10.378k    664.602k              1.05239          4.80658k       3.19446G          1.87911M                    2.97556                     2.82742           480.658k    2.41145k   631.515k       2.77902G/s   0.640738   10.4269k   674.471k         1.06802   4.72506k/s 3.18692G/s     1.87911M               2.97556                2.78605        100       472.506k/s [BEST: throughput=  3.04 GB/s doc_throughput=  4806 docs/s instructions=     1879108 cycles=      664602 branch_miss=    2141 cache_miss=       0 cache_ref=     10378 items=       100 avg_time=    211637 ns]
partial_tweets<yyjson>/manual_time                        793077 ns       871645 ns          883           9.726k           1.41863G             231        27.828k    1.42186M              2.25151          2.24639k       3.19407G          2.91951M                    4.62303                      2.0533           224.639k    7.67865k   631.515k       759.396M/s    648.992   25.8815k   1.57861M         2.49972   1.26091k/s 1.99049G/s        2.92M                4.6238                1.84972        100       126.091k/s [BEST: throughput=  1.42 GB/s doc_throughput=  2246 docs/s instructions=     2919511 cycles=     1421864 branch_miss=    9726 cache_miss=     231 cache_ref=     27828 items=       100 avg_time=    793076 ns]
partial_tweets<yyjson_insitu>/manual_time                 519260 ns       582780 ns         1361           6.909k            1.7401G          1.451k        14.401k    1.15096M              1.82253          2.75544k        3.1714G           2.9194M                    4.62286                      2.5365           275.544k    7.42484k   631.515k       1.13266G/s    138.036   12.4234k   1.26474M         2.00271   1.92582k/s 2.43566G/s     2.91967M               4.62327                 2.3085        100       192.582k/s [BEST: throughput=  1.74 GB/s doc_throughput=  2755 docs/s instructions=     2919404 cycles=     1150958 branch_miss=    6909 cache_miss=    1451 cache_ref=     14401 items=       100 avg_time=    519260 ns]
partial_tweets<rapidjson>/manual_time                    2845066 ns      2911219 ns          246          28.867k           244.481M          7.503k            23k    8.24731M              13.0596           387.135       3.19282G           21.895M                    34.6706                     2.65481           38.7135k    29.2844k   631.515k       211.686M/s    518.293   16.0074k   8.40764M         13.3134    351.486/s 2.95516G/s     21.8957M               34.6718                2.60427        100       35.1486k/s [BEST: throughput=  0.24 GB/s doc_throughput=   387 docs/s instructions=    21895015 cycles=     8247311 branch_miss=   28867 cache_miss=    7503 cache_ref=     23000 items=       100 avg_time=   2845065 ns]
partial_tweets<rapidjson_insitu>/manual_time             1794097 ns      1854328 ns          391          24.897k           384.916M             386        15.071k    5.23849M              8.29512           609.512       3.19292G          13.3201M                    21.0923                     2.54274           60.9512k    25.7176k   631.515k        335.69M/s    248.279   10.5471k   5.32654M         8.43454    557.383/s 2.96892G/s     13.3205M               21.0929                2.50077        100       55.7383k/s [BEST: throughput=  0.38 GB/s doc_throughput=   609 docs/s instructions=    13320129 cycles=     5238492 branch_miss=   24897 cache_miss=     386 cache_ref=     15071 items=       100 avg_time=   1794097 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                 102008698 ns    107878582 ns            7         899.811k           451.286M        6.81505M       6.89529M     325.03M              7.06606           9.81083       3.18881G          1020.45M                    22.1843                     3.13956           9.81083M    899.901k   45.9988M        430.04M/s   6.80869M   6.89555M   325.252M         7.07087    9.80309/s 3.18847G/s     1020.45M               22.1843                3.13742      1000k       9.80309M/s [BEST: throughput=  0.45 GB/s doc_throughput=     9 docs/s instructions=  1020451781 cycles=   325029981 branch_miss=  899811 cache_miss= 6815051 cache_ref=   6895289 items=   1000000 avg_time= 102008698 ns]
large_random<simdjson_ondemand>/manual_time             72401428 ns     78280126 ns           10         950.827k           635.715M        3.53205M       3.57251M    230.731M              5.01603           13.8203       3.18876G          653.908M                    14.2158                     2.83407           13.8203M     952.54k   45.9988M       605.898M/s   3.51746M    3.5726M   230.865M         5.01895    13.8119/s 3.18868G/s     653.908M               14.2158                2.83242      1000k       13.8119M/s [BEST: throughput=  0.64 GB/s doc_throughput=    13 docs/s instructions=   653907679 cycles=   230731241 branch_miss=  950827 cache_miss= 3532047 cache_ref=   3572509 items=   1000000 avg_time=  72401427 ns]
large_random<simdjson_ondemand_unordered>/manual_time   72568853 ns     78429981 ns           10         898.247k           634.244M        3.49842M       3.57272M    231.293M              5.02824           13.7883       3.18913G          654.908M                    14.2375                     2.83151           13.7883M    899.939k   45.9988M         604.5M/s    3.5216M   3.57262M   231.402M         5.03061      13.78/s 3.18872G/s     654.908M               14.2375                2.83017      1000k         13.78M/s [BEST: throughput=  0.63 GB/s doc_throughput=    13 docs/s instructions=   654907678 cycles=   231292835 branch_miss=  898247 cache_miss= 3498415 cache_ref=   3572717 items=   1000000 avg_time=  72568853 ns]
large_random<yyjson>/manual_time                       153556747 ns    159462128 ns            5         708.363k           299.954M         4.2097M       5.49498M    351.295M              7.63704           6.52092       2.29076G          855.681M                    18.6023                     2.43579           6.52092M    709.267k   45.9988M       285.678M/s   4.20994M   5.49273M   351.922M         7.65068    6.51225/s  2.2918G/s     855.681M               18.6023                2.43145      1000k       6.51225M/s [BEST: throughput=  0.30 GB/s doc_throughput=     6 docs/s instructions=   855680955 cycles=   351294542 branch_miss=  708363 cache_miss= 4209704 cache_ref=   5494981 items=   1000000 avg_time= 153556747 ns]
large_random<yyjson_insitu>/manual_time                127615350 ns    133522644 ns            5         707.278k           360.767M        3.49442M       4.77015M    308.815M              6.71355           7.84297       2.42203G           849.56M                    18.4692                     2.75103           7.84297M    708.447k   45.9988M       343.751M/s   3.49456M   4.77295M   309.223M         6.72242    7.83605/s 2.42309G/s      849.56M               18.4692                 2.7474      1000k       7.83605M/s [BEST: throughput=  0.36 GB/s doc_throughput=     7 docs/s instructions=   849560293 cycles=   308815220 branch_miss=  707278 cache_miss= 3494420 cache_ref=   4770151 items=   1000000 avg_time= 127615350 ns]
large_random<rapidjson>/manual_time                    249588681 ns    255475592 ns            3         597.541k           190.259M        4.34555M       5.20312M    703.772M              15.2998           4.13617       2.91092G          2.00013G                    43.4822                     2.84201           4.13617M    593.289k   45.9988M       175.761M/s   4.08284M   5.12841M   707.182M         15.3739    4.00659/s 2.83339G/s     2.00014G               43.4824                2.82832      1000k       4.00659M/s [BEST: throughput=  0.19 GB/s doc_throughput=     4 docs/s instructions=  2000126191 cycles=   703772338 branch_miss=  597541 cache_miss= 4345550 cache_ref=   5203116 items=   1000000 avg_time= 249588680 ns]
large_random<rapidjson_lossless>/manual_time           286215208 ns    292179787 ns            2         593.878k           164.157M        4.35358M       5.20183M    826.142M              17.9601           3.56873       2.94827G          2.47709G                    53.8513                     2.99839           3.56873M    592.678k   45.9988M       153.269M/s   4.15173M   5.14538M    829.03M         18.0229    3.49387/s 2.89653G/s      2.4771G               53.8514                2.98795      1000k       3.49387M/s [BEST: throughput=  0.16 GB/s doc_throughput=     3 docs/s instructions=  2477093960 cycles=   826141609 branch_miss=  593878 cache_miss= 4353578 cache_ref=   5201835 items=   1000000 avg_time= 286215208 ns]
large_random<rapidjson_insitu>/manual_time             278865494 ns    284787440 ns            3         592.067k            169.72M        5.04361M       5.92697M    797.205M               17.331           3.68967       2.94142G          1.72813G                     37.569                     2.16773           3.68967M    594.712k   45.9988M       157.308M/s   4.77922M   5.85343M   800.651M         17.4059    3.58596/s  2.8711G/s     1.72813G               37.5691                2.15841      1000k       3.58596M/s [BEST: throughput=  0.17 GB/s doc_throughput=     3 docs/s instructions=  1728126042 cycles=   797205433 branch_miss=  592067 cache_miss= 5043612 cache_ref=   5926965 items=   1000000 avg_time= 278865494 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                       108843067 ns    127335195 ns            6         1035.62k           1.26385G        10.2158M        10.319M    346.407M               2.5229           9.20467       3.18856G          971.996M                     7.0791                     2.80594            4.8259M    1035.68k   137.305M       1.17486G/s   10.2454M   10.3191M   347.044M         2.52754    9.18754/s 3.18848G/s     971.996M                7.0791                2.80078   524.288k       4.81692M/s [BEST: throughput=  1.26 GB/s doc_throughput=     9 docs/s instructions=   971995680 cycles=   346406715 branch_miss= 1035621 cache_miss=10215772 cache_ref=  10318985 items=    524288 avg_time= 108843067 ns]
kostya<simdjson_ondemand>/manual_time                   68189485 ns     86311334 ns           10         465.034k           2.01664G        6.43136M       6.47035M    217.112M              1.58124           14.6873        3.1888G          641.407M                     4.6714                     2.95426           7.70038M    465.108k   137.305M       1.87529G/s   6.43392M   6.47039M     217.4M         1.58333     14.665/s 3.18817G/s     641.407M                4.6714                2.95036   524.288k       7.68869M/s [BEST: throughput=  2.02 GB/s doc_throughput=    14 docs/s instructions=   641406589 cycles=   217112239 branch_miss=  465034 cache_miss= 6431359 cache_ref=   6470347 items=    524288 avg_time=  68189484 ns]
kostya<yyjson>/manual_time                             228543259 ns    246778384 ns            3           421.7k           601.431M        8.49576M       9.93794M    498.691M              3.63199           4.38026       2.18439G          974.185M                    7.09504                     1.95348           2.29652M    431.763k   137.305M       572.952M/s   8.49626M   9.93819M   499.239M         3.63599    4.37554/s 2.18444G/s     974.185M               7.09504                1.95134   524.288k       2.29404M/s [BEST: throughput=  0.60 GB/s doc_throughput=     4 docs/s instructions=   974184703 cycles=   498691005 branch_miss=  421700 cache_miss= 8495756 cache_ref=   9937936 items=    524288 avg_time= 228543259 ns]
kostya<yyjson_insitu>/manual_time                      151312660 ns    169730567 ns            5         413.393k           909.705M        6.36139M       7.80196M    371.176M               2.7033           6.62543        2.4592G          955.915M                    6.96198                     2.57537           3.47364M     438.19k   137.305M       865.389M/s   6.36051M   7.80542M   372.426M          2.7124    6.60883/s  2.4613G/s     955.915M               6.96198                2.56672   524.288k       3.46493M/s [BEST: throughput=  0.91 GB/s doc_throughput=     6 docs/s instructions=   955914813 cycles=   371176298 branch_miss=  413393 cache_miss= 6361385 cache_ref=   7801956 items=    524288 avg_time= 151312659 ns]
kostya<rapidjson>/manual_time                          321774498 ns    340294731 ns            2         977.398k            431.05M        5.21814M       6.44611M    920.293M              6.70255           3.13936       2.88913G          2.73082G                    19.8887                     2.96734           1.64593M    976.646k   137.305M       406.944M/s   5.08549M   6.41421M   922.208M         6.71649    3.10777/s 2.86601G/s     2.73082G               19.8887                2.96118   524.288k       1.62936M/s [BEST: throughput=  0.43 GB/s doc_throughput=     3 docs/s instructions=  2730822338 cycles=   920293453 branch_miss=  977398 cache_miss= 5218142 cache_ref=   6446107 items=    524288 avg_time= 321774498 ns]
kostya<rapidjson_lossless>/manual_time                 347747293 ns    366048505 ns            2         971.395k           398.727M        5.19531M       6.43599M    1002.65M              7.30235           2.90395       2.91165G          3.00711G                     21.901                     2.99917           1.52251M     972.16k   137.305M        376.55M/s    5.0701M   6.39677M    1005.1M         7.32021    2.87565/s 2.89032G/s     3.00711G                21.901                2.99185   524.288k       1.50767M/s [BEST: throughput=  0.40 GB/s doc_throughput=     2 docs/s instructions=  3007113251 cycles=  1002649769 branch_miss=  971395 cache_miss= 5195310 cache_ref=   6435989 items=    524288 avg_time= 347747292 ns]
kostya<rapidjson_insitu>/manual_time                   317162199 ns    335638538 ns            2         1088.16k           437.022M         7.3313M        8.6095M    906.296M              6.60061           3.18286       2.88461G          2.21411G                    16.1255                     2.44303           1.66873M     1056.9k   137.305M       412.862M/s   7.20897M   8.57441M   907.358M         6.60834    3.15296/s 2.86086G/s     2.21411G               16.1255                2.44018   524.288k       1.65306M/s [BEST: throughput=  0.44 GB/s doc_throughput=     3 docs/s instructions=  2214111206 cycles=   906296417 branch_miss= 1088160 cache_miss= 7331298 cache_ref=   8609497 items=    524288 avg_time= 317162199 ns]
distinct_user_id<simdjson_dom>/manual_time                314710 ns       391949 ns         2225           3.784k           2.02049G               1        33.989k     998.28k              1.58077          3.19944k       3.19393G          2.86747M                    4.54061                     2.87241           367.935k    3.96668k   631.515k       1.86885G/s   0.517303   34.1044k   1004.15k         1.59006   3.17753k/s 3.19071G/s     2.86747M               4.54061                2.85562        115       365.416k/s [BEST: throughput=  2.02 GB/s doc_throughput=  3199 docs/s instructions=     2867465 cycles=      998280 branch_miss=    3784 cache_miss=       1 cache_ref=     33989 items=       115 avg_time=    314709 ns]
distinct_user_id<simdjson_ondemand>/manual_time           183748 ns       242639 ns         3806           2.097k            3.4725G               1         8.772k     580.96k             0.919946          5.49867k       3.19451G          1.82797M                    2.89458                     3.14646           632.348k    2.25063k   631.515k       3.20082G/s   0.836837   8.81498k   586.529k        0.928765   5.44223k/s 3.19202G/s     1.82797M               2.89458                3.11659        115       625.856k/s [BEST: throughput=  3.47 GB/s doc_throughput=  5498 docs/s instructions=     1827969 cycles=      580960 branch_miss=    2097 cache_miss=       1 cache_ref=      8772 items=       115 avg_time=    183748 ns]
distinct_user_id<yyjson>/manual_time                      786709 ns       873783 ns          973           9.725k           1.42986G             232        27.664k    1.41085M              2.23407          2.26417k       3.19439G           2.8778M                    4.55697                     2.03977            260.38k    7.70866k   631.515k       765.543M/s    503.657   25.6841k   1.56136M         2.47241   1.27112k/s 1.98468G/s      2.8782M               4.55761                1.84339        115       146.179k/s [BEST: throughput=  1.43 GB/s doc_throughput=  2264 docs/s instructions=     2877798 cycles=     1410846 branch_miss=    9725 cache_miss=     232 cache_ref=     27664 items=       115 avg_time=    786709 ns]
distinct_user_id<yyjson_insitu>/manual_time               514238 ns       586070 ns         1374           7.421k             1.759G              91        14.931k    1.14672M              1.81583          2.78536k       3.19404G          2.87739M                    4.55634                     2.50923           320.316k    7.47451k   631.515k       1.14372G/s    128.721    12.291k   1.24869M         1.97729   1.94462k/s 2.42824G/s     2.87766M               4.55675                2.30454        115       223.632k/s [BEST: throughput=  1.76 GB/s doc_throughput=  2785 docs/s instructions=     2877394 cycles=     1146725 branch_miss=    7421 cache_miss=      91 cache_ref=     14931 items=       115 avg_time=    514238 ns]
distinct_user_id<rapidjson>/manual_time                  2808614 ns      2881686 ns          248           28.61k           245.096M         12.708k        22.846k    8.22633M              13.0263           388.108        3.1927G          21.8223M                    34.5555                     2.65274           44.6324k    29.2205k   631.515k       214.433M/s   1.84917k   16.8626k   8.36495M         13.2459    356.047/s 2.97832G/s     21.8228M               34.5563                2.60884        115       40.9455k/s [BEST: throughput=  0.25 GB/s doc_throughput=   388 docs/s instructions=    21822337 cycles=     8226331 branch_miss=   28610 cache_miss=   12708 cache_ref=     22846 items=       115 avg_time=   2808614 ns]
distinct_user_id<rapidjson_insitu>/manual_time           1798830 ns      1866842 ns          383          25.679k           383.619M          7.153k        14.448k    5.25612M              8.32304           607.458       3.19287G          13.2532M                    20.9864                     2.52148           69.8576k    32.3071k   631.515k       334.806M/s   1.91952k   12.1598k   5.43747M          8.6102    555.917/s 3.02278G/s     13.2535M               20.9869                2.43744        115       63.9304k/s [BEST: throughput=  0.38 GB/s doc_throughput=   607 docs/s instructions=    13253235 cycles=     5256123 branch_miss=   25679 cache_miss=    7153 cache_ref=     14448 items=       115 avg_time=   1798830 ns]
find_tweet<simdjson_dom>/manual_time                      300957 ns       373835 ns         2323           3.537k            2.1132G               6        30.507k    954.556k              1.51153          3.34624k       3.19417G          2.78229M                    4.40574                     2.91475           3.34624k    3.70105k   631.515k       1.95424G/s    8.66294   30.4484k    960.44k         1.52085   3.32273k/s 3.19128G/s     2.78229M               4.40574                2.89689          1       3.32273k/s [BEST: throughput=  2.11 GB/s doc_throughput=  3346 docs/s instructions=     2782291 cycles=      954556 branch_miss=    3537 cache_miss=       6 cache_ref=     30507 items=         1 avg_time=    300957 ns]
find_tweet<simdjson_ondemand>/manual_time                 127951 ns       188674 ns         5459             1063             4.969G               2         7.531k    406.079k             0.643024          7.86838k       3.19518G          1.32098M                    2.09176                       3.253           7.86838k     1.1279k   631.515k       4.59665G/s    2.01557    7.5167k   408.489k         0.64684   7.81551k/s 3.19255G/s     1.32098M               2.09176                3.23381          1       7.81551k/s [BEST: throughput=  4.97 GB/s doc_throughput=  7868 docs/s instructions=     1320975 cycles=      406079 branch_miss=    1063 cache_miss=       2 cache_ref=      7531 items=         1 avg_time=    127950 ns]
find_tweet<yyjson>/manual_time                            776280 ns       861277 ns          907           9.535k           1.45928G             267        27.302k    1.38237M              2.18898          2.31076k       3.19433G          2.81716M                    4.46096                     2.03792           2.31076k    7.45567k   631.515k       775.827M/s    479.279   24.8169k   1.52942M         2.42182   1.28819k/s 1.97019G/s     2.81785M               4.46205                1.84243          1       1.28819k/s [BEST: throughput=  1.46 GB/s doc_throughput=  2310 docs/s instructions=     2817164 cycles=     1382371 branch_miss=    9535 cache_miss=     267 cache_ref=     27302 items=         1 avg_time=    776280 ns]
find_tweet<yyjson_insitu>/manual_time                     502594 ns       568744 ns         1000           6.832k            1.8112G          2.119k        13.415k    1.10884M              1.75584          2.86802k       3.18017G          2.81684M                    4.46045                     2.54035           2.86802k    7.25032k   631.515k       1.17022G/s      9.915   10.7259k   1.21215M         1.91943   1.98968k/s 2.41178G/s      2.8171M               4.46087                2.32406          1       1.98968k/s [BEST: throughput=  1.81 GB/s doc_throughput=  2868 docs/s instructions=     2816842 cycles=     1108840 branch_miss=    6832 cache_miss=    2119 cache_ref=     13415 items=         1 avg_time=    502594 ns]
find_tweet<rapidjson>/manual_time                        2792939 ns      2861566 ns          250          28.493k           246.776M         10.282k        21.067k    8.17018M              12.9374           390.768       3.19265G          21.7386M                     34.423                     2.66073            390.768    29.1112k   631.515k       215.636M/s   1.52589k   13.9699k   8.31402M         13.1652    358.046/s  2.9768G/s     21.7395M               34.4243                 2.6148          1        358.046/s [BEST: throughput=  0.25 GB/s doc_throughput=   390 docs/s instructions=    21738650 cycles=     8170179 branch_miss=   28493 cache_miss=   10282 cache_ref=     21067 items=         1 avg_time=   2792939 ns]
find_tweet<rapidjson_insitu>/manual_time                 1785198 ns      1848571 ns          387          28.096k           383.108M          3.615k        14.536k    5.26314M              8.33414            606.65       3.19288G          13.1752M                    20.8628                      2.5033             606.65    32.2386k   631.515k       337.363M/s   1.69134k   9.30018k   5.39342M         8.54045    560.162/s 3.02119G/s     13.1749M               20.8624                2.44277          1        560.162/s [BEST: throughput=  0.38 GB/s doc_throughput=   606 docs/s instructions=    13175189 cycles=     5263136 branch_miss=   28096 cache_miss=    3615 cache_ref=     14536 items=         1 avg_time=   1785197 ns]
