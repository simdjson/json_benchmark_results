run_benchmark: v0.8.0~17 /home/jkeiser/simdjson_benchmark_results/v0.7.0/21/skylake-gcc10.2-native.json -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native
git reset --hard v0.8.0~17
HEAD is now at 7dbe4caf Taking a float and adding hundreds of zeros, you may get a truncated value that is just one over the desired value (bug fix) (#1388)
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- git Version: v0.2.1-7dbe4caf
-- Version: 0.2.1
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 10
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
make[3]: Nothing to be done for '_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build'.
[ 80%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
make[3]: Nothing to be done for 'jsonexamples/generated/CMakeFiles/generated-data.dir/build'.
[ 80%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/g++-10  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/src  -march=native -O3 -DNDEBUG -fPIC   -pthread -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/g++-10 -fPIC -march=native -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.6 -o ../libsimdjson.so.6.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.6.0.0 ../libsimdjson.so.6 ../libsimdjson.so
[ 80%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
make[3]: Nothing to be done for 'dependencies/CMakeFiles/yyjson.dir/build'.
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/g++-10  -DRAPIDJSON_HAS_STDSTRING -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_COMPETITION_RAPIDJSON -DSIMDJSON_COMPETITION_YYJSON -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/rapidjson/include  -march=native -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/g++-10  -march=native -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.6.0.0 ../_deps/google_benchmarks/src/libbenchmark.a ../dependencies/libyyjson.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/21/skylake-gcc10.2-native.json --benchmark_out_format=json
2021-01-25 02:13:48
Running benchmark/bench_ondemand
Run on (4 X 4000 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 256 KiB (x4)
  L3 Unified 8192 KiB (x1)
Load Average: 1.00, 1.00, 0.93
simdjson::dom implementation:      haswell
simdjson::ondemand implementation: haswell

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                  258692 ns       286948 ns         2707           3.737k           2.45643G               0         87.56k    949.363k              1.50331          3.88975k       3.69278G          2.91501M                     4.6159                     3.07049           388.975k    3.86899k   631.515k       2.27353G/s    2.65645   87.4442k   954.792k         1.51191    3.8656k/s 3.69085G/s     2.91501M                4.6159                3.05304        100        386.56k/s [BEST: throughput=  2.46 GB/s doc_throughput=  3889 docs/s instructions=     2915013 cycles=      949363 branch_miss=    3737 cache_miss=       0 cache_ref=     87560 items=       100 avg_time=    258691 ns]
partial_tweets<simdjson_ondemand>/manual_time             176522 ns       204562 ns         3962           1.565k           3.60279G               0        54.496k    647.335k              1.02505          5.70499k       3.69304G          2.14384M                    3.39475                     3.31179           570.499k    1.70799k   631.515k       3.33185G/s   0.391721   54.4477k   651.565k         1.03175   5.66502k/s 3.69113G/s     2.14384M               3.39475                3.29029        100       566.502k/s [BEST: throughput=  3.60 GB/s doc_throughput=  5704 docs/s instructions=     2143837 cycles=      647335 branch_miss=    1565 cache_miss=       0 cache_ref=     54496 items=       100 avg_time=    176521 ns]
partial_tweets<yyjson>/manual_time                        700706 ns       731017 ns          999           9.771k           1.53775G             374        73.795k    1.51631M              2.40106          2.43502k       3.69223G          2.90836M                    4.60537                     1.91806           243.502k    7.57992k   631.515k       859.504M/s    967.119   49.1629k   1.73746M         2.75126   1.42713k/s 2.47958G/s     2.90884M               4.60613                1.67419        100       142.713k/s [BEST: throughput=  1.54 GB/s doc_throughput=  2435 docs/s instructions=     2908359 cycles=     1516305 branch_miss=    9771 cache_miss=     374 cache_ref=     73795 items=       100 avg_time=    700705 ns]
partial_tweets<yyjson_insitu>/manual_time                 490993 ns       519940 ns         1426           6.883k           1.71662G             713        45.715k    1.35508M              2.14577          2.71826k       3.68346G          2.90804M                    4.60486                     2.14602           271.826k     7.4057k   631.515k       1.19787G/s    135.162   31.7796k   1.46756M         2.32387   2.03669k/s 2.98896G/s      2.9083M               4.60528                1.98173        100       203.669k/s [BEST: throughput=  1.72 GB/s doc_throughput=  2718 docs/s instructions=     2908038 cycles=     1355083 branch_miss=    6883 cache_miss=     713 cache_ref=     45715 items=       100 avg_time=    490992 ns]
partial_tweets<rapidjson>/manual_time                    1620214 ns      1649115 ns          433          26.156k           448.444M             261        51.144k    5.19873M              8.23216           710.108       3.69166G           13.124M                    20.7817                     2.52446           71.0108k    26.3149k   631.515k       371.716M/s    497.503   33.3652k   5.38882M         8.53316    617.202/s 3.32599G/s     13.1251M               20.7836                2.43562        100       61.7202k/s [BEST: throughput=  0.45 GB/s doc_throughput=   710 docs/s instructions=    13123986 cycles=     5198731 branch_miss=   26156 cache_miss=     261 cache_ref=     51144 items=       100 avg_time=   1620214 ns]
partial_tweets<rapidjson_insitu>/manual_time             1164427 ns      1193106 ns          604          23.309k           603.942M              55        42.722k    3.86023M              6.11266           956.338       3.69169G          9.82431M                    15.5567                       2.545           95.6338k    23.3356k   631.515k       517.216M/s    236.038   34.1061k   3.94907M         6.25333    858.792/s 3.39143G/s     9.82471M               15.5574                2.48785        100       85.8792k/s [BEST: throughput=  0.60 GB/s doc_throughput=   956 docs/s instructions=     9824314 cycles=     3860234 branch_miss=   23309 cache_miss=      55 cache_ref=     42722 items=       100 avg_time=   1164426 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                  97122202 ns    100513105 ns            7         907.448k           474.676M        10.9188M       15.2118M    357.497M              7.77187           10.3193       3.68912G          981.675M                    21.3413                     2.74597           10.3193M    907.701k   45.9988M       451.677M/s   10.9774M   15.2235M   358.279M         7.78887    10.2963/s 3.68895G/s     981.675M               21.3413                2.73998      1000k       10.2963M/s [BEST: throughput=  0.47 GB/s doc_throughput=    10 docs/s instructions=   981674936 cycles=   357496719 branch_miss=  907448 cache_miss=10918829 cache_ref=  15211837 items=   1000000 avg_time=  97122202 ns]
large_random<simdjson_ondemand>/manual_time             58811068 ns     62218452 ns           12          869.36k            783.75M        5.68841M       7.89344M    216.514M              4.70695           17.0385       3.68908G          643.053M                    13.9798                     2.97003           17.0385M    868.936k   45.9988M       745.911M/s    5.7244M   7.89253M   216.945M         4.71633    17.0036/s 3.68885G/s     643.053M               13.9798                2.96412      1000k       17.0036M/s [BEST: throughput=  0.78 GB/s doc_throughput=    17 docs/s instructions=   643052686 cycles=   216514137 branch_miss=  869360 cache_miss= 5688410 cache_ref=   7893445 items=   1000000 avg_time=  58811068 ns]
large_random<simdjson_ondemand_unordered>/manual_time   62473558 ns     65835412 ns           11         867.184k            736.86M        5.70724M       7.89064M    230.274M              5.00609           16.0191       3.68879G          647.053M                    14.0667                     2.80993           16.0191M    866.958k   45.9988M       702.183M/s   5.71276M   7.89093M   230.462M         5.01017    16.0068/s 3.68895G/s     647.053M               14.0667                2.80764      1000k       16.0068M/s [BEST: throughput=  0.74 GB/s doc_throughput=    16 docs/s instructions=   647052691 cycles=   230273981 branch_miss=  867184 cache_miss= 5707240 cache_ref=   7890644 items=   1000000 avg_time=  62473558 ns]
large_random<yyjson>/manual_time                       127403924 ns    130820065 ns            5         661.987k           361.222M        5.86252M       8.98341M    350.329M              7.61606           7.85286       2.75109G           942.15M                    20.4821                     2.68933           7.85286M    660.998k   45.9988M       344.321M/s    5.8663M   8.99713M   350.261M         7.61458    7.84905/s 2.74922G/s     942.149M               20.4821                2.68985      1000k       7.84905M/s [BEST: throughput=  0.36 GB/s doc_throughput=     7 docs/s instructions=   942149595 cycles=   350329326 branch_miss=  661987 cache_miss= 5862521 cache_ref=   8983406 items=   1000000 avg_time= 127403924 ns]
large_random<yyjson_insitu>/manual_time                109635923 ns    113055444 ns            6         662.117k           419.726M        4.99331M       7.67221M    318.947M              6.93382           9.12471        2.9103G          936.029M                     20.349                     2.93475           9.12471M    661.012k   45.9988M       400.123M/s    4.9948M   7.67006M   318.973M         6.93439     9.1211/s 2.90939G/s     936.029M                20.349                 2.9345      1000k        9.1211M/s [BEST: throughput=  0.42 GB/s doc_throughput=     9 docs/s instructions=   936028829 cycles=   318947209 branch_miss=  662117 cache_miss= 4993307 cache_ref=   7672213 items=   1000000 avg_time= 109635923 ns]
large_random<rapidjson>/manual_time                    178434208 ns    181858326 ns            4         603.463k           268.605M        6.99008M       10.6702M    573.903M              12.4765            5.8394       3.35125G          1.67014G                    36.3083                     2.91014            5.8394M    601.925k   45.9988M       245.849M/s   6.43234M   9.91764M   579.411M         12.5962    5.60431/s  3.2472G/s     1.67015G               36.3086                2.88249      1000k       5.60431M/s [BEST: throughput=  0.27 GB/s doc_throughput=     5 docs/s instructions=  1670138886 cycles=   573902529 branch_miss=  603463 cache_miss= 6990082 cache_ref=  10670177 items=   1000000 avg_time= 178434207 ns]
large_random<rapidjson_lossless>/manual_time           202802121 ns    206224655 ns            4         593.725k           234.903M        6.98505M       10.6728M    664.458M              14.4451           5.10673       3.39321G          2.03011G                     44.134                     3.05528           5.10673M    593.435k   45.9988M       216.309M/s   6.42076M   9.92424M   669.258M         14.5495    4.93091/s 3.30005G/s     2.03012G               44.1342                3.03339      1000k       4.93091M/s [BEST: throughput=  0.23 GB/s doc_throughput=     5 docs/s instructions=  2030108373 cycles=   664458428 branch_miss=  593725 cache_miss= 6985054 cache_ref=  10672782 items=   1000000 avg_time= 202802121 ns]
large_random<rapidjson_insitu>/manual_time             161246615 ns    164658735 ns            5         595.179k           300.036M         8.0716M       12.2011M    507.688M               11.037            6.5227        3.3115G          1.50214G                    32.6561                     2.95878            6.5227M    596.125k   45.9988M       272.054M/s   7.49182M   11.4013M   514.642M         11.1882    6.20168/s 3.19165G/s     1.50215G               32.6563                2.91882      1000k       6.20168M/s [BEST: throughput=  0.30 GB/s doc_throughput=     6 docs/s instructions=  1502138711 cycles=   507688215 branch_miss=  595179 cache_miss= 8071600 cache_ref=  12201079 items=   1000000 avg_time= 161246615 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                        89055647 ns     99376257 ns            8         437.927k           1.54345G        15.7825M       22.0797M    328.157M              2.38998            11.241       3.68881G          938.041M                     6.8318                     2.85851           5.89352M    437.808k   137.305M        1.4359G/s   15.8429M   22.1305M   328.501M         2.39249    11.2289/s 3.68871G/s     938.041M                6.8318                2.85552   524.288k        5.8872M/s [BEST: throughput=  1.54 GB/s doc_throughput=    11 docs/s instructions=   938040604 cycles=   328156795 branch_miss=  437927 cache_miss=15782499 cache_ref=  22079684 items=    524288 avg_time=  89055646 ns]
kostya<simdjson_ondemand>/manual_time                   59507411 ns     69818186 ns           12         455.597k           2.31074G        10.1285M       13.7923M    219.213M              1.59654           16.8293       3.68919G          676.093M                    4.92402                     3.08419           8.82338M    455.833k   137.305M        2.1489G/s   10.1455M   13.8548M   219.517M         1.59876    16.8046/s  3.6889G/s     676.093M               4.92402                3.07991   524.288k       8.81047M/s [BEST: throughput=  2.31 GB/s doc_throughput=    16 docs/s instructions=   676092756 cycles=   219212619 branch_miss=  455597 cache_miss=10128497 cache_ref=  13792311 items=    524288 avg_time=  59507411 ns]
kostya<yyjson>/manual_time                             208033758 ns    218394945 ns            3         414.091k           661.559M        11.2721M       16.0495M    569.106M              4.14483           4.81817       2.74205G          984.045M                    7.16686                     1.72911           2.52611M    413.164k   137.305M       629.437M/s   11.2963M    16.056M   570.136M         4.15233    4.80691/s 2.74059G/s     984.045M               7.16686                1.72598   524.288k       2.52021M/s [BEST: throughput=  0.66 GB/s doc_throughput=     4 docs/s instructions=   984045127 cycles=   569106337 branch_miss=  414091 cache_miss=11272072 cache_ref=  16049509 items=    524288 avg_time= 208033757 ns]
kostya<yyjson_insitu>/manual_time                      153729080 ns    164097894 ns            5         413.429k           893.431M        8.76589M       12.2411M    472.326M              3.43998           6.50691       3.07338G          965.776M                     7.0338                     2.04472           3.41149M    414.266k   137.305M       851.786M/s   8.76718M    12.225M   472.435M         3.44077    6.50495/s 3.07316G/s     965.776M                7.0338                2.04425   524.288k       3.41047M/s [BEST: throughput=  0.89 GB/s doc_throughput=     6 docs/s instructions=   965775555 cycles=   472326133 branch_miss=  413429 cache_miss= 8765894 cache_ref=  12241129 items=    524288 avg_time= 153729079 ns]
kostya<rapidjson>/manual_time                          250925406 ns    261300190 ns            3         1017.04k           554.591M        8.13614M       12.0644M    831.953M              6.05916           4.03912       3.36035G          2.29616G                    16.7231                     2.75997           2.11766M    1012.29k   137.305M       521.845M/s   7.82887M   11.6657M   834.916M         6.08074    3.98525/s 3.32735G/s     2.29617G               16.7231                2.75018   524.288k       2.08942M/s [BEST: throughput=  0.55 GB/s doc_throughput=     4 docs/s instructions=  2296164913 cycles=   831952927 branch_miss= 1017038 cache_miss= 8136144 cache_ref=  12064358 items=    524288 avg_time= 250925406 ns]
kostya<rapidjson_lossless>/manual_time                 273268410 ns    283648882 ns            3         962.455k           508.466M         8.1182M       12.0541M    914.932M               6.6635           3.70319       3.38816G          2.50115G                     18.216                      2.7337           1.94154M     961.22k   137.305M       479.178M/s   7.81756M   11.6667M   917.441M         6.68178    3.65941/s 3.35729G/s     2.50116G               18.2161                2.72623   524.288k       1.91858M/s [BEST: throughput=  0.51 GB/s doc_throughput=     3 docs/s instructions=  2501153623 cycles=   914931808 branch_miss=  962455 cache_miss= 8118197 cache_ref=  12054098 items=    524288 avg_time= 273268410 ns]
kostya<rapidjson_insitu>/manual_time                   236613780 ns    246968682 ns            3         976.755k           588.662M        11.1887M       15.6287M    779.191M              5.67489           4.28726        3.3406G          2.04643G                    14.9043                     2.62635           2.24776M    976.926k   137.305M       553.409M/s   10.8968M   15.2798M   782.265M         5.69728     4.2263/s 3.30608G/s     2.04643G               14.9043                2.61604   524.288k        2.2158M/s [BEST: throughput=  0.59 GB/s doc_throughput=     4 docs/s instructions=  2046429881 cycles=   779191113 branch_miss=  976755 cache_miss=11188726 cache_ref=  15628712 items=    524288 avg_time= 236613780 ns]
distinct_user_id<simdjson_dom>/manual_time                254293 ns       285083 ns         2753           3.842k           2.49925G               0        88.256k    933.048k              1.47748          3.95754k       3.69258G          2.85594M                    4.52236                     3.06087           455.117k    4.00301k   631.515k       2.31286G/s   0.957138   88.2138k   938.535k         1.48616   3.93247k/s 3.69076G/s     2.85594M               4.52236                3.04297        115       452.234k/s [BEST: throughput=  2.50 GB/s doc_throughput=  3957 docs/s instructions=     2855937 cycles=      933048 branch_miss=    3842 cache_miss=       0 cache_ref=     88256 items=       115 avg_time=    254293 ns]
distinct_user_id<simdjson_ondemand>/manual_time           160834 ns       190315 ns         4346           1.498k           3.95875G               0        53.055k    589.122k             0.932871          6.26865k         3.693G          2.09786M                    3.32194                     3.56099           720.895k     1.6564k   631.515k       3.65685G/s   0.644271    53.027k   593.652k        0.940045    6.2176k/s 3.69109G/s     2.09786M               3.32194                3.53382        115       715.024k/s [BEST: throughput=  3.96 GB/s doc_throughput=  6268 docs/s instructions=     2097858 cycles=      589122 branch_miss=    1498 cache_miss=       0 cache_ref=     53055 items=       115 avg_time=    160833 ns]
distinct_user_id<yyjson>/manual_time                      687087 ns       721030 ns         1193           9.844k           1.54425G             351        73.657k    1.50985M              2.39084           2.4453k       3.69205G          2.87496M                    4.55249                     1.90413            281.21k    7.70606k   631.515k        876.54M/s    1051.02   47.8465k   1.72988M         2.73926   1.45542k/s 2.51771G/s     2.87558M               4.55346                 1.6623        115       167.373k/s [BEST: throughput=  1.54 GB/s doc_throughput=  2445 docs/s instructions=     2874963 cycles=     1509854 branch_miss=    9844 cache_miss=     351 cache_ref=     73657 items=       115 avg_time=    687087 ns]
distinct_user_id<yyjson_insitu>/manual_time               485073 ns       517776 ns         1443           7.208k           1.72067G             280        43.964k    1.35194M              2.14079          2.72467k       3.68358G          2.87478M                    4.55219                     2.12641           313.337k    7.49872k   631.515k       1.21249G/s    114.252   30.3517k   1.45849M         2.30951   2.06155k/s 3.00674G/s     2.87504M               4.55261                1.97125        115       237.078k/s [BEST: throughput=  1.72 GB/s doc_throughput=  2724 docs/s instructions=     2874778 cycles=     1351938 branch_miss=    7208 cache_miss=     280 cache_ref=     43964 items=       115 avg_time=    485072 ns]
distinct_user_id<rapidjson>/manual_time                  1597016 ns      1627995 ns          437          25.953k           448.048M         10.237k        53.032k    5.19263M               8.2225           709.481       3.68407G          13.0658M                    20.6896                     2.51622           81.5903k    26.3778k   631.515k       377.116M/s   1.96019k   34.4203k   5.36294M         8.49218    626.168/s  3.3581G/s     13.0665M               20.6907                2.43644        115       72.0093k/s [BEST: throughput=  0.45 GB/s doc_throughput=   709 docs/s instructions=    13065776 cycles=     5192630 branch_miss=   25953 cache_miss=   10237 cache_ref=     53032 items=       115 avg_time=   1597015 ns]
distinct_user_id<rapidjson_insitu>/manual_time           1141558 ns      1171602 ns          647          23.129k           607.051M              81        42.691k    3.84047M              6.08135           961.262       3.69169G          9.77626M                    15.4807                     2.54559           110.545k    23.3208k   631.515k       527.577M/s   2.11703k   34.9431k   3.92536M         6.21579    875.996/s  3.4386G/s      9.7766M               15.4812                2.49062        115       100.739k/s [BEST: throughput=  0.61 GB/s doc_throughput=   961 docs/s instructions=     9776263 cycles=     3840466 branch_miss=   23129 cache_miss=      81 cache_ref=     42691 items=       115 avg_time=   1141558 ns]
find_tweet<simdjson_dom>/manual_time                      242085 ns       270888 ns         2891           3.574k           2.62295G               0        78.153k    889.088k              1.40787          4.15343k       3.69276G           2.7749M                    4.39404                     3.12106           4.15343k    3.69308k   631.515k       2.42949G/s   0.262193   78.1624k   893.484k         1.41483   4.13078k/s 3.69079G/s      2.7749M               4.39404                3.10571          1       4.13078k/s [BEST: throughput=  2.62 GB/s doc_throughput=  4153 docs/s instructions=     2774900 cycles=      889088 branch_miss=    3574 cache_miss=       0 cache_ref=     78153 items=         1 avg_time=    242085 ns]
find_tweet<simdjson_ondemand>/manual_time                 113975 ns       142029 ns         6134              708           5.56234G               0        30.413k    419.329k             0.664005          8.80793k       3.69342G          1.47888M                     2.3418                     3.52677           8.80793k     740.294   631.515k       5.16028G/s   0.520704   30.4884k   420.792k        0.666321   8.77384k/s 3.69196G/s     1.47888M                2.3418                3.51451          1       8.77384k/s [BEST: throughput=  5.56 GB/s doc_throughput=  8807 docs/s instructions=     1478879 cycles=      419329 branch_miss=     708 cache_miss=       0 cache_ref=     30413 items=         1 avg_time=    113975 ns]
find_tweet<yyjson>/manual_time                            674758 ns       705244 ns         1092           9.122k           1.59761G             167        64.767k    1.45951M              2.31112           2.5298k       3.69226G          2.82413M                    4.47199                     1.93499            2.5298k     7.3909k   631.515k       892.557M/s    1010.34   39.3255k   1.69197M         2.67923   1.48201k/s 2.50752G/s     2.82462M               4.47276                1.66942          1       1.48201k/s [BEST: throughput=  1.60 GB/s doc_throughput=  2529 docs/s instructions=     2824130 cycles=     1459508 branch_miss=    9122 cache_miss=     167 cache_ref=     64767 items=         1 avg_time=    674757 ns]
find_tweet<yyjson_insitu>/manual_time                     475186 ns       505099 ns         1473           6.833k           1.76884G             541        36.037k    1.31503M              2.08234          2.80095k       3.68333G          2.82402M                    4.47182                      2.1475           2.80095k    7.28118k   631.515k       1.23771G/s    15.0923   21.9574k   1.42262M         2.25271   2.10444k/s 2.99381G/s     2.82428M               4.47224                1.98527          1       2.10444k/s [BEST: throughput=  1.77 GB/s doc_throughput=  2800 docs/s instructions=     2824021 cycles=     1315029 branch_miss=    6833 cache_miss=     541 cache_ref=     36037 items=         1 avg_time=    475185 ns]
find_tweet<rapidjson>/manual_time                        1585444 ns      1614202 ns          442          25.545k           452.276M         21.518k        47.014k    5.15458M              8.16224           716.177       3.69159G          12.9978M                    20.5819                      2.5216            716.177    25.8759k   631.515k       379.868M/s   1.56167k   27.2373k   5.31943M         8.42328    630.738/s 3.35516G/s     12.9984M               20.5829                2.44357          1        630.738/s [BEST: throughput=  0.45 GB/s doc_throughput=   716 docs/s instructions=    12997775 cycles=     5154579 branch_miss=   25545 cache_miss=   21518 cache_ref=     47014 items=         1 avg_time=   1585443 ns]
find_tweet<rapidjson_insitu>/manual_time                 1132824 ns      1162353 ns          659          22.741k           612.493M          2.896k        34.169k    3.80634M              6.02731           969.878       3.69168G          9.71871M                    15.3895                      2.5533            969.878    23.2045k   631.515k       531.644M/s   1.81141k   26.2839k   3.89238M         6.16356    882.749/s   3.436G/s     9.71895M               15.3899                2.49692          1        882.749/s [BEST: throughput=  0.61 GB/s doc_throughput=   969 docs/s instructions=     9718710 cycles=     3806336 branch_miss=   22741 cache_miss=    2896 cache_ref=     34169 items=         1 avg_time=   1132824 ns]
