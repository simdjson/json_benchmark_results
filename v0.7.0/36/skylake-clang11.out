run_benchmark: v0.8.0~2 /home/jkeiser/simdjson_benchmark_results/v0.7.0/36/skylake-clang11.json -DCMAKE_BUILD_TYPE=Release
git reset --hard v0.8.0~2
HEAD is now at 2a714f4e Hide the std::pair inheritance in our result instances (#1396)
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The CXX compiler identification is Clang 11.0.0
-- The C compiler identification is Clang 11.0.0
-- Check for working CXX compiler: /usr/bin/clang++-11
-- Check for working CXX compiler: /usr/bin/clang++-11 -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Check for working C compiler: /usr/bin/clang-11
-- Check for working C compiler: /usr/bin/clang-11 -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed
-- Check if compiler accepts -pthread
-- Check if compiler accepts -pthread - yes
-- Found Threads: TRUE  
-- Looking for fork
-- Looking for fork - found
-- Looking for wait
-- Looking for wait - found
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- Found Git: /usr/bin/git (found version "2.27.0") 
-- git Version: v0.2.1-2a714f4e
-- Version: 0.2.1
-- Performing Test HAVE_CXX_FLAG_STD_CXX11
-- Performing Test HAVE_CXX_FLAG_STD_CXX11 - Success
-- Performing Test HAVE_CXX_FLAG_WALL
-- Performing Test HAVE_CXX_FLAG_WALL - Success
-- Performing Test HAVE_CXX_FLAG_WEXTRA
-- Performing Test HAVE_CXX_FLAG_WEXTRA - Success
-- Performing Test HAVE_CXX_FLAG_WSHADOW
-- Performing Test HAVE_CXX_FLAG_WSHADOW - Success
-- Performing Test HAVE_CXX_FLAG_WERROR
-- Performing Test HAVE_CXX_FLAG_WERROR - Success
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32 - Success
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED - Success
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WD654
-- Performing Test HAVE_CXX_FLAG_WD654 - Failed
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY - Success
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES -- failed to compile
-- Performing Test HAVE_CXX_FLAG_COVERAGE
-- Performing Test HAVE_CXX_FLAG_COVERAGE - Success
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Performing Test USE_BOOST_JSON
-- Performing Test USE_BOOST_JSON - Failed
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Found Python3: /usr/bin/python3.8 (found version "3.8.6") found components: Interpreter 
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 10
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
Scanning dependencies of target benchmark
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_api_internal.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_name.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_name.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_register.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_register.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_runner.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_runner.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/colorprint.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/colorprint.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/commandlineflags.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/commandlineflags.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/complexity.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/complexity.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/console_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/console_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/counter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/counter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/csv_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/csv_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/json_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/json_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/sleep.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sleep.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/statistics.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/statistics.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/string_util.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/string_util.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/sysinfo.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sysinfo.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/timers.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/timers.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -P CMakeFiles/benchmark.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/benchmark.dir/link.txt --verbose=1
/usr/bin/ar qc libbenchmark.a  CMakeFiles/benchmark.dir/benchmark.cc.o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o CMakeFiles/benchmark.dir/benchmark_name.cc.o CMakeFiles/benchmark.dir/benchmark_register.cc.o CMakeFiles/benchmark.dir/benchmark_runner.cc.o CMakeFiles/benchmark.dir/colorprint.cc.o CMakeFiles/benchmark.dir/commandlineflags.cc.o CMakeFiles/benchmark.dir/complexity.cc.o CMakeFiles/benchmark.dir/console_reporter.cc.o CMakeFiles/benchmark.dir/counter.cc.o CMakeFiles/benchmark.dir/csv_reporter.cc.o CMakeFiles/benchmark.dir/json_reporter.cc.o CMakeFiles/benchmark.dir/reporter.cc.o CMakeFiles/benchmark.dir/sleep.cc.o CMakeFiles/benchmark.dir/statistics.cc.o CMakeFiles/benchmark.dir/string_util.cc.o CMakeFiles/benchmark.dir/sysinfo.cc.o CMakeFiles/benchmark.dir/timers.cc.o
/usr/bin/ranlib libbenchmark.a
[ 80%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
Scanning dependencies of target generated-data
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated && /usr/bin/ruby genfeaturejson.rb /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-miss.json ...
[ 80%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/clang++-11  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/src  -O3 -DNDEBUG -fPIC   -pthread -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/clang++-11 -fPIC -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.6 -o ../libsimdjson.so.6.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.6.0.0 ../libsimdjson.so.6 ../libsimdjson.so
[ 80%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
Scanning dependencies of target yyjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/clang-11  -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src  -O3 -DNDEBUG   -o CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o   -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src/yyjson.c
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -P CMakeFiles/yyjson.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -E cmake_link_script CMakeFiles/yyjson.dir/link.txt --verbose=1
/usr/bin/ar qc libyyjson.a  CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o
/usr/bin/ranlib libyyjson.a
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/clang++-11  -DRAPIDJSON_HAS_STDSTRING -DSAJSON_UNSORTED_OBJECT_KEYS -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_COMPETITION_NLOHMANN_JSON -DSIMDJSON_COMPETITION_RAPIDJSON -DSIMDJSON_COMPETITION_SAJSON -DSIMDJSON_COMPETITION_YYJSON -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/rapidjson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/sajson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/json  -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/clang++-11  -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.6.0.0 ../_deps/google_benchmarks/src/libbenchmark.a ../dependencies/libyyjson.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/36/skylake-clang11.json --benchmark_out_format=json
2021-01-24 23:23:53
Running benchmark/bench_ondemand
Run on (4 X 4000 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 256 KiB (x4)
  L3 Unified 8192 KiB (x1)
Load Average: 0.61, 0.76, 0.90
simdjson::dom implementation:      haswell
simdjson::ondemand implementation: fallback

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                  276111 ns       305011 ns         2601           3.373k           2.30356G              14        93.516k    1012.42k              1.60316          3.64766k       3.69296G           2.9828M                    4.72325                     2.94622           364.766k    3.57535k   631.515k        2.1301G/s    6.24029   93.4661k   1019.09k         1.61372   3.62173k/s 3.69086G/s      2.9828M               4.72325                2.92694        100       362.173k/s [BEST: throughput=  2.30 GB/s doc_throughput=  3647 docs/s instructions=     2982801 cycles=     1012417 branch_miss=    3373 cache_miss=      14 cache_ref=     93516 items=       100 avg_time=    276110 ns]
partial_tweets<simdjson_ondemand>/manual_time             201333 ns       229918 ns         3478            2.08k           3.16091G               0        59.178k    737.777k              1.16827          5.00528k       3.69278G          2.26558M                    3.58753                     3.07081           500.528k    2.22259k   631.515k       2.92125G/s  0.0750431   59.4379k   743.103k          1.1767    4.9669k/s 3.69092G/s     2.26558M               3.58753                 3.0488        100        496.69k/s [BEST: throughput=  3.16 GB/s doc_throughput=  5005 docs/s instructions=     2265576 cycles=      737777 branch_miss=    2080 cache_miss=       0 cache_ref=     59178 items=       100 avg_time=    201332 ns]
partial_tweets<yyjson>/manual_time                        644784 ns       675663 ns         1082           9.547k           1.77218G             536         78.97k    1.31583M              2.08361          2.80623k       3.69252G           2.9199M                    4.62365                     2.21906           280.623k    7.49473k   631.515k       934.049M/s    1040.02   51.7369k    1.5301M         2.42291   1.55091k/s 2.37305G/s     2.92039M               4.62442                1.90862        100       155.091k/s [BEST: throughput=  1.77 GB/s doc_throughput=  2806 docs/s instructions=     2919902 cycles=     1315831 branch_miss=    9547 cache_miss=     536 cache_ref=     78970 items=       100 avg_time=    644783 ns]
partial_tweets<yyjson_insitu>/manual_time                 434733 ns       464178 ns         1611            6.85k           2.00842G             354        48.368k    1.15449M              1.82813          3.18032k       3.67165G          2.91959M                    4.62315                     2.52889           318.032k    7.32708k   631.515k       1.35289G/s     137.97   33.9607k   1.25672M         1.99001   2.30026k/s 2.89079G/s     2.91985M               4.62356                2.32339        100       230.026k/s [BEST: throughput=  2.01 GB/s doc_throughput=  3180 docs/s instructions=     2919588 cycles=     1154493 branch_miss=    6850 cache_miss=     354 cache_ref=     48368 items=       100 avg_time=    434732 ns]
partial_tweets<sajson>/manual_time                        598464 ns       627355 ns         1170          10.257k           1061.71M               8        48.355k    2.19591M              3.47721          1.68121k       3.69178G          5.87949M                    9.31013                     2.67747           168.121k    10.6137k   631.515k       1006.34M/s    13.5675    48.478k   2.20831M         3.49685   1.67094k/s 3.68996G/s     5.87949M               9.31013                2.66244        100       167.094k/s [BEST: throughput=  1.06 GB/s doc_throughput=  1681 docs/s instructions=     5879487 cycles=     2195909 branch_miss=   10257 cache_miss=       8 cache_ref=     48355 items=       100 avg_time=    598464 ns]
partial_tweets<rapidjson>/manual_time                    2397143 ns      2426531 ns          293           30.26k           287.578M             264        54.249k     8.0955M              12.8192           455.378       3.68651G          21.8954M                    34.6712                     2.70463           45.5378k         31k   631.515k       251.241M/s    649.078   35.1032k   8.26622M         13.0895    417.163/s 3.44836G/s     21.8962M               34.6725                2.64888        100       41.7163k/s [BEST: throughput=  0.29 GB/s doc_throughput=   455 docs/s instructions=    21895359 cycles=     8095503 branch_miss=   30260 cache_miss=     264 cache_ref=     54249 items=       100 avg_time=   2397142 ns]
partial_tweets<rapidjson_insitu>/manual_time             1539848 ns      1569025 ns          456          25.902k           428.598M             455        41.213k    5.29243M              8.38052           678.683       3.59188G          13.3569M                    21.1506                     2.52378           67.8683k    26.4007k   631.515k       391.116M/s    298.191   35.5788k   5.33699M         8.45109    649.415/s 3.46592G/s     13.3573M               21.1512                2.50278        100       64.9415k/s [BEST: throughput=  0.43 GB/s doc_throughput=   678 docs/s instructions=    13356945 cycles=     5292426 branch_miss=   25902 cache_miss=     455 cache_ref=     41213 items=       100 avg_time=   1539848 ns]
partial_tweets<nlohmann_json>/manual_time                8494249 ns      8529472 ns           83          150.75k           76.4294M              86       225.525k     30.484M              48.2713           121.025       3.68935G          80.2699M                    127.107                     2.63318           12.1025k    160.366k   631.515k        70.902M/s    444.928   370.227k   31.3381M         49.6236    117.727/s 3.68933G/s     80.8027M                127.95                2.57842        100       11.7727k/s [BEST: throughput=  0.08 GB/s doc_throughput=   121 docs/s instructions=    80269850 cycles=    30484047 branch_miss=  150750 cache_miss=      86 cache_ref=    225525 items=       100 avg_time=   8494249 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                  89456545 ns     92884385 ns            8         960.281k           514.452M        11.1009M       15.5705M    329.845M              7.17073            11.184         3.689G          1038.74M                    22.5819                     3.14917            11.184M    958.341k   45.9988M       490.382M/s   11.1472M   15.5675M   330.003M         7.17417    11.1786/s 3.68898G/s     1038.74M               22.5819                3.14766      1000k       11.1786M/s [BEST: throughput=  0.51 GB/s doc_throughput=    11 docs/s instructions=  1038738109 cycles=   329844888 branch_miss=  960281 cache_miss=11100917 cache_ref=  15570454 items=   1000000 avg_time=  89456544 ns]
large_random<simdjson_ondemand>/manual_time             65451778 ns     68845740 ns           11         922.496k           703.378M        5.77104M       8.09972M    241.251M              5.24472           15.2912       3.68902G          672.195M                    14.6133                     2.78629           15.2912M    924.624k   45.9988M       670.232M/s   5.77207M   8.10065M   241.447M         5.24898    15.2784/s 3.68892G/s     672.195M               14.6133                2.78403      1000k       15.2784M/s [BEST: throughput=  0.70 GB/s doc_throughput=    15 docs/s instructions=   672194576 cycles=   241250917 branch_miss=  922496 cache_miss= 5771045 cache_ref=   8099716 items=   1000000 avg_time=  65451778 ns]
large_random<simdjson_ondemand_unordered>/manual_time   65583720 ns     68992831 ns           11         991.373k            702.02M        5.75614M       8.09775M    241.731M              5.25515           15.2617       3.68922G          669.195M                    14.5481                     2.76835           15.2617M    996.772k   45.9988M       668.883M/s    5.7979M   8.09927M   241.918M         5.25922    15.2477/s 3.68868G/s     669.195M               14.5481                2.76621      1000k       15.2477M/s [BEST: throughput=  0.70 GB/s doc_throughput=    15 docs/s instructions=   669194588 cycles=   241730638 branch_miss=  991373 cache_miss= 5756135 cache_ref=   8097752 items=   1000000 avg_time=  65583720 ns]
large_random<yyjson>/manual_time                       124876525 ns    128326591 ns            6         733.968k           368.684M        6.03871M       9.32684M    340.716M              7.40707           8.01508       2.73087G          855.681M                    18.6023                     2.51142           8.01508M    735.093k   45.9988M        351.29M/s   6.05875M   9.32146M   340.814M          7.4092    8.00791/s 2.72921G/s     855.681M               18.6023                 2.5107      1000k       8.00791M/s [BEST: throughput=  0.37 GB/s doc_throughput=     8 docs/s instructions=   855680946 cycles=   340716252 branch_miss=  733968 cache_miss= 6038714 cache_ref=   9326837 items=   1000000 avg_time= 124876524 ns]
large_random<yyjson_insitu>/manual_time                106861612 ns    110302867 ns            7          732.03k           430.767M        5.15866M       7.95529M    308.129M              6.69864           9.36476       2.88556G           849.56M                    18.4692                     2.75715           9.36476M    734.365k   45.9988M       410.511M/s   5.16902M   7.95093M    308.39M          6.7043     9.3579/s 2.88588G/s      849.56M               18.4692                2.75483      1000k        9.3579M/s [BEST: throughput=  0.43 GB/s doc_throughput=     9 docs/s instructions=   849559984 cycles=   308129377 branch_miss=  732030 cache_miss= 5158661 cache_ref=   7955294 items=   1000000 avg_time= 106861611 ns]
large_random<sajson>/manual_time                        92517832 ns     95933303 ns            8         588.383k           498.254M        8.38199M       12.4244M    340.591M              7.40435           10.8319       3.68925G          1.12599G                    24.4787                     3.30599           10.8319M    589.489k   45.9988M       474.156M/s   8.41462M    12.365M   341.305M         7.41987    10.8087/s 3.68907G/s     1.12599G               24.4787                3.29907      1000k       10.8087M/s [BEST: throughput=  0.50 GB/s doc_throughput=    10 docs/s instructions=  1125990565 cycles=   340591150 branch_miss=  588383 cache_miss= 8381988 cache_ref=  12424421 items=   1000000 avg_time=  92517831 ns]
large_random<rapidjson>/manual_time                    216265914 ns    219710442 ns            3         602.518k            218.66M        7.13451M       10.9532M    717.769M              15.6041            4.7536       3.41199G          2.01514G                    43.8086                     2.80751            4.7536M    602.122k   45.9988M       202.842M/s   6.61714M   10.2752M   720.771M         15.6693    4.62394/s  3.3328G/s     2.01515G               43.8088                2.79583      1000k       4.62394M/s [BEST: throughput=  0.22 GB/s doc_throughput=     4 docs/s instructions=  2015143879 cycles=   717769240 branch_miss=  602518 cache_miss= 7134506 cache_ref=  10953213 items=   1000000 avg_time= 216265914 ns]
large_random<rapidjson_lossless>/manual_time           245270449 ns    248735013 ns            3         592.758k           192.064M        7.18011M       10.9809M    825.245M              17.9406           4.17541       3.44574G          2.48011G                    53.9169                      3.0053           4.17541M    592.695k   45.9988M       178.855M/s   6.64927M   10.3103M   827.795M          17.996    4.07713/s 3.37503G/s     2.48012G               53.9171                2.99606      1000k       4.07713M/s [BEST: throughput=  0.19 GB/s doc_throughput=     4 docs/s instructions=  2480110854 cycles=   825245063 branch_miss=  592758 cache_miss= 7180109 cache_ref=  10980906 items=   1000000 avg_time= 245270448 ns]
large_random<rapidjson_insitu>/manual_time             230704128 ns    234142880 ns            3         581.548k           204.164M        8.25127M       12.6148M    772.732M               16.799           4.43846       3.42974G          1.73714G                     37.765                     2.24805           4.43846M    581.853k   45.9988M       190.148M/s   7.75187M   11.9503M   774.027M         16.8271    4.33456/s 3.35506G/s     1.73715G               37.7652                 2.2443      1000k       4.33456M/s [BEST: throughput=  0.20 GB/s doc_throughput=     4 docs/s instructions=  1737143570 cycles=   772731847 branch_miss=  581548 cache_miss= 8251269 cache_ref=  12614819 items=   1000000 avg_time= 230704127 ns]
large_random<nlohmann_json>/manual_time               1260593863 ns   1264052378 ns            1         4.11194M           36.4898M         48.251M        62.367M    4.63797G              100.828          0.793277        3.6792G          12.7486G                     277.15                     2.74873           793.277k    4.11194M   45.9988M       34.7994M/s    48.251M    62.367M   4.63797G         100.828   0.793277/s  3.6792G/s     12.7486G                277.15                2.74873      1000k       793.277k/s [BEST: throughput=  0.04 GB/s doc_throughput=     0 docs/s instructions= 12748552100 cycles=  4637972895 branch_miss= 4111943 cache_miss=48251019 cache_ref=  62366971 items=   1000000 avg_time=1260593863 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                        92217273 ns    102504737 ns            8         1020.77k           1.49025G        16.1898M       22.7664M    339.901M              2.47551           10.8536       3.68913G          984.675M                    7.17144                     2.89695           5.69039M    1020.96k   137.305M       1.38667G/s    16.217M   22.8156M   340.164M         2.47743     10.844/s 3.68872G/s     984.675M               7.17144                2.89471   524.288k       5.68536M/s [BEST: throughput=  1.49 GB/s doc_throughput=    10 docs/s instructions=   984674891 cycles=   339900555 branch_miss= 1020766 cache_miss=16189804 cache_ref=  22766378 items=    524288 avg_time=  92217273 ns]
kostya<simdjson_ondemand>/manual_time                   61032512 ns     71306550 ns           11         463.697k           2.25163G        10.3429M       14.3338M    224.953M              1.63834           16.3987       3.68894G          650.941M                    4.74084                     2.89368           8.59766M    461.011k   137.305M        2.0952G/s   10.3378M   14.2769M   225.136M         1.63968    16.3847/s 3.68879G/s     650.941M               4.74084                2.89132   524.288k       8.59031M/s [BEST: throughput=  2.25 GB/s doc_throughput=    16 docs/s instructions=   650940574 cycles=   224952591 branch_miss=  463697 cache_miss=10342854 cache_ref=  14333842 items=    524288 avg_time=  61032511 ns]
kostya<yyjson>/manual_time                             176824866 ns    187171272 ns            4         416.059k           776.725M        11.5699M       16.8161M    456.845M              3.32723           5.65693       2.58434G          974.184M                    7.09504                     2.13242           2.96586M    415.315k   137.305M       740.531M/s   11.5688M   16.8001M   456.751M         3.32655    5.65531/s 2.58307G/s     974.185M               7.09504                2.13285   524.288k       2.96501M/s [BEST: throughput=  0.78 GB/s doc_throughput=     5 docs/s instructions=   974184490 cycles=   456844727 branch_miss=  416059 cache_miss=11569853 cache_ref=  16816106 items=    524288 avg_time= 176824866 ns]
kostya<yyjson_insitu>/manual_time                      123369176 ns    133718686 ns            6         417.951k           1.11357G        8.98695M       12.7542M    360.697M              2.62697            8.1102       2.92532G          955.915M                    6.96198                     2.65019           4.25208M    418.314k   137.305M        1061.4M/s   8.99208M   12.7763M   360.752M         2.62738    8.10575/s 2.92417G/s     955.915M               6.96198                2.64978   524.288k       4.24975M/s [BEST: throughput=  1.11 GB/s doc_throughput=     8 docs/s instructions=   955915126 cycles=   360696755 branch_miss=  417951 cache_miss= 8986945 cache_ref=  12754181 items=    524288 avg_time= 123369176 ns]
kostya<sajson>/manual_time                             148098291 ns    158420848 ns            5         404.535k           928.716M        12.6196M       17.5365M    545.405M              3.97221           6.76389       3.68906G          1.53761G                    11.1985                     2.81921           3.54623M    403.002k   137.305M       884.171M/s   12.6349M    17.539M   546.332M         3.97897    6.75227/s 3.68898G/s     1.53761G               11.1985                2.81442   524.288k       3.54014M/s [BEST: throughput=  0.93 GB/s doc_throughput=     6 docs/s instructions=  1537609229 cycles=   545404818 branch_miss=  404535 cache_miss=12619587 cache_ref=  17536480 items=    524288 avg_time= 148098290 ns]
kostya<rapidjson>/manual_time                          283509132 ns    293868817 ns            2         974.843k           488.393M        8.50564M       12.4562M    955.941M              6.96217           3.55699       3.40027G          2.73925G                    19.9501                      2.8655           1.86489M     975.17k   137.305M        461.87M/s   8.27619M   12.2217M   957.654M         6.97465    3.52722/s 3.37786G/s     2.73925G               19.9501                2.86037   524.288k       1.84928M/s [BEST: throughput=  0.49 GB/s doc_throughput=     3 docs/s instructions=  2739245965 cycles=   955940858 branch_miss=  974843 cache_miss= 8505642 cache_ref=  12456246 items=    524288 avg_time= 283509132 ns]
kostya<rapidjson_lossless>/manual_time                 297828868 ns    308191541 ns            2         958.549k           464.727M        8.50863M        12.586M    1008.32M              7.34369           3.38463       3.41281G           3.0082G                    21.9089                     2.98336           1.77452M     959.16k   137.305M       439.663M/s   8.27932M   12.2625M      1010M          7.3559    3.35763/s 3.39122G/s      3.0082G               21.9089                2.97841   524.288k       1.76037M/s [BEST: throughput=  0.46 GB/s doc_throughput=     3 docs/s instructions=  3008196405 cycles=  1008324822 branch_miss=  958549 cache_miss= 8508632 cache_ref=  12586021 items=    524288 avg_time= 297828867 ns]
kostya<rapidjson_insitu>/manual_time                   265533798 ns    275872322 ns            3         960.447k           524.895M        12.3234M       16.5455M    883.717M              6.43616           3.82284       3.37831G          2.22201G                     16.183                     2.51439           2.00427M     1097.9k   137.305M       493.136M/s   12.0262M   16.1637M   888.888M         6.47382      3.766/s 3.34755G/s     2.22201G                16.183                2.49977   524.288k       1.97447M/s [BEST: throughput=  0.52 GB/s doc_throughput=     3 docs/s instructions=  2222010564 cycles=   883717389 branch_miss=  960447 cache_miss=12323374 cache_ref=  16545486 items=    524288 avg_time= 265533798 ns]
kostya<nlohmann_json>/manual_time                     1951985195 ns   1962340060 ns            1         14.1749M           70.3412M        70.7441M       88.8228M     7.2016G              52.4497          0.512299       3.68937G          17.7632G                     129.37                     2.46656           268.592k    14.1749M   137.305M       67.0826M/s   70.7441M   88.8228M    7.2016G         52.4497   0.512299/s 3.68937G/s     17.7632G                129.37                2.46656   524.288k       268.592k/s [BEST: throughput=  0.07 GB/s doc_throughput=     0 docs/s instructions= 17763207371 cycles=  7201604593 branch_miss=14174948 cache_miss=70744060 cache_ref=  88822753 items=    524288 avg_time=1951985195 ns]
distinct_user_id<simdjson_dom>/manual_time                264449 ns       295230 ns         2646           3.574k           2.40697G               0        94.394k    968.767k              1.53404          3.81143k       3.69238G          2.91782M                    4.62036                     3.01189           438.314k    3.77651k   631.515k       2.22404G/s    2.25586   94.5896k   975.957k         1.54542   3.78145k/s 3.69053G/s     2.91782M               4.62036                 2.9897        115       434.867k/s [BEST: throughput=  2.41 GB/s doc_throughput=  3811 docs/s instructions=     2917824 cycles=      968767 branch_miss=    3574 cache_miss=       0 cache_ref=     94394 items=       115 avg_time=    264448 ns]
distinct_user_id<simdjson_ondemand>/manual_time           153620 ns       183707 ns         4535           1.609k           4.15487G               0        56.375k    561.357k             0.888905          6.57921k       3.69328G          1.88383M                    2.98303                     3.35585           756.609k    1.67023k   631.515k       3.82857G/s   0.832856   56.4594k   567.043k        0.897909   6.50958k/s 3.69122G/s     1.88383M               2.98303                 3.3222        115       748.602k/s [BEST: throughput=  4.15 GB/s doc_throughput=  6579 docs/s instructions=     1883829 cycles=      561357 branch_miss=    1609 cache_miss=       0 cache_ref=     56375 items=       115 avg_time=    153619 ns]
distinct_user_id<yyjson>/manual_time                      554333 ns       587984 ns         1000           6.424k           1.87541G         22.511k        76.574k     1.2433M              1.96875           2.9697k       3.69222G          2.87776M                    4.55691                     2.31462           341.516k    7.35264k   631.515k       1086.46M/s   7.29237k   57.9046k   1.45156M         2.29854   1.80397k/s 2.61857G/s     2.87824M               4.55768                1.98286        115       207.456k/s [BEST: throughput=  1.88 GB/s doc_throughput=  2969 docs/s instructions=     2877756 cycles=     1243296 branch_miss=    6424 cache_miss=   22511 cache_ref=     76574 items=       115 avg_time=    554333 ns]
distinct_user_id<yyjson_insitu>/manual_time               426973 ns       459961 ns         1640           6.944k           2.03948G             342        46.714k    1.13986M              1.80497           3.2295k        3.6812G          2.87753M                    4.55655                     2.52445           371.393k    7.46379k   631.515k       1.37747G/s    57.4116   32.3884k   1.24147M         1.96585   2.34207k/s  2.9076G/s     2.87779M               4.55697                2.31806        115       269.338k/s [BEST: throughput=  2.04 GB/s doc_throughput=  3229 docs/s instructions=     2877530 cycles=     1139865 branch_miss=    6944 cache_miss=     342 cache_ref=     46714 items=       115 avg_time=    426972 ns]
distinct_user_id<sajson>/manual_time                      594645 ns       625291 ns         1176          10.208k           1069.11M               0         47.84k    2.18073M              3.45318          1.69293k       3.69184G          5.81792M                    9.21265                     2.66787           194.687k    10.6005k   631.515k        1012.8M/s    10.4065   47.7896k   2.19412M         3.47437   1.68167k/s 3.68979G/s     5.81792M               9.21265                 2.6516        115       193.393k/s [BEST: throughput=  1.07 GB/s doc_throughput=  1692 docs/s instructions=     5817924 cycles=     2180734 branch_miss=   10208 cache_miss=       0 cache_ref=     47840 items=       115 avg_time=    594645 ns]
distinct_user_id<rapidjson>/manual_time                  2379714 ns      2410617 ns          295          30.849k           287.568M             195        55.873k    8.09625M              12.8204           455.362       3.68672G          21.8225M                    34.5558                     2.69538           52.3666k    30.9121k   631.515k       253.081M/s   1.31395k   36.8641k   8.23125M         13.0341    420.219/s 3.45893G/s     21.8233M               34.5571                2.65127        115       48.3251k/s [BEST: throughput=  0.29 GB/s doc_throughput=   455 docs/s instructions=    21822500 cycles=     8096246 branch_miss=   30849 cache_miss=     195 cache_ref=     55873 items=       115 avg_time=   2379713 ns]
distinct_user_id<rapidjson_insitu>/manual_time           1533788 ns      1564618 ns          439          25.647k           449.674M              19        45.443k    5.18444M              8.20952           712.055       3.69161G          13.2897M                    21.0441                     2.56338           81.8864k    31.6414k   631.515k       392.662M/s   2.98157k    38.498k   5.39362M         8.54076     651.98/s 3.51653G/s     13.2902M               21.0449                2.46405        115       74.9778k/s [BEST: throughput=  0.45 GB/s doc_throughput=   712 docs/s instructions=    13289662 cycles=     5184435 branch_miss=   25647 cache_miss=      19 cache_ref=     45443 items=       115 avg_time=   1533788 ns]
distinct_user_id<nlohmann_json>/manual_time              8007284 ns      8041447 ns           90         127.899k           82.1645M          1.723k       224.703k    28.3442M              44.8828           130.107       3.68777G          75.7471M                    119.945                      2.6724           14.9623k    140.516k   631.515k        75.214M/s    101.022   484.924k   29.5408M         46.7776    124.886/s 3.68924G/s     74.3349M               117.709                2.51635        115       14.3619k/s [BEST: throughput=  0.08 GB/s doc_throughput=   130 docs/s instructions=    75747097 cycles=    28344192 branch_miss=  127899 cache_miss=    1723 cache_ref=    224703 items=       115 avg_time=   8007284 ns]
find_tweet<simdjson_dom>/manual_time                      251561 ns       280834 ns         2784           3.245k           2.53138G               0        83.868k    921.259k              1.45881          4.00842k       3.69279G           2.8325M                    4.48525                      3.0746           4.00842k    3.42194k   631.515k       2.33797G/s    13.1009   83.8831k   928.379k         1.47008   3.97517k/s 3.69047G/s      2.8325M               4.48525                3.05102          1       3.97517k/s [BEST: throughput=  2.53 GB/s doc_throughput=  4008 docs/s instructions=     2832504 cycles=      921259 branch_miss=    3245 cache_miss=       0 cache_ref=     83868 items=         1 avg_time=    251561 ns]
find_tweet<simdjson_ondemand>/manual_time                 107686 ns       136094 ns         6492              783           5.89045G               0        32.536k    396.099k              0.62722          9.32749k       3.69461G          1.37796M                    2.18199                     3.47883           9.32749k     803.474   631.515k       5.46168G/s   0.172828   32.4675k   397.572k        0.629552    9.2863k/s 3.69197G/s     1.37796M               2.18199                3.46594          1        9.2863k/s [BEST: throughput=  5.89 GB/s doc_throughput=  9327 docs/s instructions=     1377960 cycles=      396099 branch_miss=     783 cache_miss=       0 cache_ref=     32536 items=         1 avg_time=    107685 ns]
find_tweet<yyjson>/manual_time                            618858 ns       649833 ns         1138           9.756k           1.83189G             188        68.989k    1.27314M                2.016          2.90079k        3.6931G          2.81716M                    4.46095                     2.21277           2.90079k    7.35728k   631.515k       973.179M/s    1087.56   41.5882k   1.47983M          2.3433   1.61588k/s 2.39122G/s     2.81763M                4.4617                1.90403          1       1.61588k/s [BEST: throughput=  1.83 GB/s doc_throughput=  2900 docs/s instructions=     2817155 cycles=     1273137 branch_miss=    9756 cache_miss=     188 cache_ref=     68989 items=         1 avg_time=    618858 ns]
find_tweet<yyjson_insitu>/manual_time                     416484 ns       446747 ns         1681           6.749k           2.10358G             606        38.281k    1.10476M              1.74939          3.33101k       3.67998G          2.81683M                    4.46043                     2.54972           3.33101k    7.21155k   631.515k       1.41217G/s     14.796   23.5511k   1.20394M         1.90643   2.40106k/s 2.89072G/s     2.81709M               4.46085                 2.3399          1       2.40106k/s [BEST: throughput=  2.10 GB/s doc_throughput=  3331 docs/s instructions=     2816831 cycles=     1104763 branch_miss=    6749 cache_miss=     606 cache_ref=     38281 items=         1 avg_time=    416483 ns]
find_tweet<sajson>/manual_time                            582875 ns       612783 ns         1200          10.039k            1090.9M               0        38.307k    2.13722M              3.38428          1.72744k       3.69192G          5.72273M                    9.06191                     2.67765           1.72744k    10.4577k   631.515k       1033.26M/s    15.1067   38.3824k   2.15063M         3.40551   1.71563k/s 3.68969G/s     5.72273M               9.06191                2.66095          1       1.71563k/s [BEST: throughput=  1.09 GB/s doc_throughput=  1727 docs/s instructions=     5722731 cycles=     2137223 branch_miss=   10039 cache_miss=       0 cache_ref=     38307 items=         1 avg_time=    582875 ns]
find_tweet<rapidjson>/manual_time                        2369590 ns      2398685 ns          297          29.953k           290.163M          9.033k        48.612k     8.0342M              12.7221           459.471       3.69148G          21.7391M                    34.4238                     2.70582            459.471    30.8288k   631.515k       254.162M/s     1010.6   28.8722k   8.19457M         12.9761    422.014/s 3.45822G/s     21.7398M               34.4248                2.65295          1        422.014/s [BEST: throughput=  0.29 GB/s doc_throughput=   459 docs/s instructions=    21739120 cycles=     8034199 branch_miss=   29953 cache_miss=    9033 cache_ref=     48612 items=         1 avg_time=   2369589 ns]
find_tweet<rapidjson_insitu>/manual_time                 1521887 ns      1551750 ns          441          25.317k           450.779M         12.684k        37.906k    5.17165M              8.18927           713.806       3.69155G          13.2111M                    20.9197                     2.55453            713.806    31.2002k   631.515k       395.732M/s   2.75022k   29.3135k   5.34916M         8.47035    657.079/s 3.51482G/s     13.2114M               20.9202                2.46981          1        657.079/s [BEST: throughput=  0.45 GB/s doc_throughput=   713 docs/s instructions=    13211118 cycles=     5171648 branch_miss=   25317 cache_miss=   12684 cache_ref=     37906 items=         1 avg_time=   1521886 ns]
find_tweet<nlohmann_json>/manual_time                    6899789 ns      6930085 ns          105          104.59k           95.4836M             203       232.837k    24.4053M              38.6456           151.198       3.69002G          64.3763M                    101.939                      2.6378            151.198    113.965k   631.515k       87.2867M/s    72.9714   384.832k   25.4554M         40.3085    144.932/s 3.68931G/s     64.4642M               102.079                2.53244          1        144.932/s [BEST: throughput=  0.10 GB/s doc_throughput=   151 docs/s instructions=    64376304 cycles=    24405274 branch_miss=  104590 cache_miss=     203 cache_ref=    232837 items=         1 avg_time=   6899788 ns]
top_tweet<simdjson_dom>/manual_time                       259015 ns       287685 ns         2702           3.354k           2.45648G               0        91.844k    949.307k              1.50322          3.88982k       3.69264G          2.86939M                    4.54366                     3.02262           3.88982k    3.53623k   631.515k        2.2707G/s    9.36751   91.7053k   955.859k          1.5136   3.86079k/s 3.69037G/s     2.86939M               4.54366                 3.0019          1       3.86079k/s [BEST: throughput=  2.46 GB/s doc_throughput=  3889 docs/s instructions=     2869391 cycles=      949307 branch_miss=    3354 cache_miss=       0 cache_ref=     91844 items=         1 avg_time=    259014 ns]
top_tweet<simdjson_ondemand>/manual_time                  150749 ns       179161 ns         4634            1.43k           4.21865G               0        56.229k    552.836k             0.875412          6.68021k       3.69306G          1.90456M                    3.01585                     3.44507           6.68021k    1.51471k   631.515k       3.90149G/s    0.27104   56.4174k   556.509k        0.881229   6.63355k/s 3.69163G/s     1.90456M               3.01585                3.42233          1       6.63355k/s [BEST: throughput=  4.22 GB/s doc_throughput=  6680 docs/s instructions=     1904556 cycles=      552836 branch_miss=    1430 cache_miss=       0 cache_ref=     56229 items=         1 avg_time=    150748 ns]
top_tweet<simdjson_ondemand_forward_only>/manual_time     168872 ns       197345 ns         4146           1.708k           3.76714G               0        57.031k    619.085k             0.980317          5.96523k       3.69299G          2.13001M                    3.37286                     3.44058           5.96523k    1.86044k   631.515k       3.48278G/s   0.743608    57.194k   623.339k        0.987054   5.92165k/s 3.69119G/s     2.13001M               3.37286                 3.4171          1       5.92165k/s [BEST: throughput=  3.77 GB/s doc_throughput=  5965 docs/s instructions=     2130014 cycles=      619085 branch_miss=    1708 cache_miss=       0 cache_ref=     57031 items=         1 avg_time=    168871 ns]
top_tweet<yyjson>/manual_time                             622898 ns       653237 ns         1130           9.186k           1.83197G             318          72.3k    1.27305M              2.01587          2.90091k       3.69301G          2.84447M                     4.5042                     2.23437           2.90091k    7.37357k   631.515k       966.867M/s    1020.56   46.8387k   1.49573M         2.36848    1.6054k/s 2.40125G/s     2.84491M               4.50489                1.90202          1        1.6054k/s [BEST: throughput=  1.83 GB/s doc_throughput=  2900 docs/s instructions=     2844469 cycles=     1273050 branch_miss=    9186 cache_miss=     318 cache_ref=     72300 items=         1 avg_time=    622898 ns]
top_tweet<yyjson_insitu>/manual_time                      421014 ns       450592 ns         1664           6.873k           2.07005G             350        43.031k    1.12308M              1.77839           3.2779k       3.68134G          2.84411M                    4.50362                     2.53242            3.2779k    7.22627k   631.515k       1.39697G/s     47.226   28.8459k   1.22082M         1.93317   2.37522k/s 2.89972G/s     2.84437M               4.50404                2.32988          1       2.37522k/s [BEST: throughput=  2.07 GB/s doc_throughput=  3277 docs/s instructions=     2844106 cycles=     1123078 branch_miss=    6873 cache_miss=     350 cache_ref=     43031 items=         1 avg_time=    421013 ns]
top_tweet<sajson>/manual_time                             587202 ns       616222 ns         1193           9.973k           1084.43M               0        43.884k    2.14994M              3.40442          1.71719k       3.69186G          5.75272M                     9.1094                     2.67576           1.71719k    10.4955k   631.515k       1025.64M/s     4.1886   43.8689k   2.16665M         3.43087   1.70299k/s 3.68978G/s     5.75272M                9.1094                2.65513          1       1.70299k/s [BEST: throughput=  1.08 GB/s doc_throughput=  1717 docs/s instructions=     5752722 cycles=     2149942 branch_miss=    9973 cache_miss=       0 cache_ref=     43884 items=         1 avg_time=    587201 ns]
top_tweet<rapidjson>/manual_time                         2382652 ns      2412471 ns          295          30.016k           288.059M          8.934k        51.812k    8.07979M              12.7943           456.139       3.68551G          21.7982M                    34.5172                     2.69786            456.139    30.8326k   631.515k       252.769M/s   1.24741k   32.7601k   8.23503M         13.0401      419.7/s 3.45625G/s     21.7989M               34.5184                2.64709          1          419.7/s [BEST: throughput=  0.29 GB/s doc_throughput=   456 docs/s instructions=    21798158 cycles=     8079790 branch_miss=   30016 cache_miss=    8934 cache_ref=     51812 items=         1 avg_time=   2382651 ns]
top_tweet<rapidjson_insitu>/manual_time                  1530504 ns      1559718 ns          446          25.714k           451.289M              43         41.23k    5.16593M              8.18022           714.613       3.69164G          13.2658M                    21.0063                     2.56793            714.613    31.6241k   631.515k       393.504M/s   2.93618k   34.2625k   5.37573M         8.51244    653.379/s 3.51239G/s     13.2663M               21.0071                2.46781          1        653.379/s [BEST: throughput=  0.45 GB/s doc_throughput=   714 docs/s instructions=    13265764 cycles=     5165930 branch_miss=   25714 cache_miss=      43 cache_ref=     41230 items=         1 avg_time=   1530504 ns]
top_tweet<nlohmann_json>/manual_time                     9324248 ns      9354407 ns           75         188.269k           67.8764M              51       397.403k    34.3301M              54.3616           107.482       3.68987G          87.5794M                    138.681                     2.55109            107.482    189.659k   631.515k       64.5907M/s     256.48   404.597k   34.3986M           54.47    107.247/s 3.68916G/s     87.5888M               138.696                2.54629          1        107.247/s [BEST: throughput=  0.07 GB/s doc_throughput=   107 docs/s instructions=    87579439 cycles=    34330147 branch_miss=  188269 cache_miss=      51 cache_ref=    397403 items=         1 avg_time=   9324247 ns]
