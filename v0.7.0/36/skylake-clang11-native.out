run_benchmark: v0.8.0~2 /home/jkeiser/simdjson_benchmark_results/v0.7.0/36/skylake-clang11-native.json -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native
git reset --hard v0.8.0~2
HEAD is now at 2a714f4e Hide the std::pair inheritance in our result instances (#1396)
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The CXX compiler identification is Clang 11.0.0
-- The C compiler identification is Clang 11.0.0
-- Check for working CXX compiler: /usr/bin/clang++-11
-- Check for working CXX compiler: /usr/bin/clang++-11 -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Check for working C compiler: /usr/bin/clang-11
-- Check for working C compiler: /usr/bin/clang-11 -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed
-- Check if compiler accepts -pthread
-- Check if compiler accepts -pthread - yes
-- Found Threads: TRUE  
-- Looking for fork
-- Looking for fork - found
-- Looking for wait
-- Looking for wait - found
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- Found Git: /usr/bin/git (found version "2.27.0") 
-- git Version: v0.2.1-2a714f4e
-- Version: 0.2.1
-- Performing Test HAVE_CXX_FLAG_STD_CXX11
-- Performing Test HAVE_CXX_FLAG_STD_CXX11 - Success
-- Performing Test HAVE_CXX_FLAG_WALL
-- Performing Test HAVE_CXX_FLAG_WALL - Success
-- Performing Test HAVE_CXX_FLAG_WEXTRA
-- Performing Test HAVE_CXX_FLAG_WEXTRA - Success
-- Performing Test HAVE_CXX_FLAG_WSHADOW
-- Performing Test HAVE_CXX_FLAG_WSHADOW - Success
-- Performing Test HAVE_CXX_FLAG_WERROR
-- Performing Test HAVE_CXX_FLAG_WERROR - Success
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32 - Success
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED - Success
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WD654
-- Performing Test HAVE_CXX_FLAG_WD654 - Failed
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY - Success
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES -- failed to compile
-- Performing Test HAVE_CXX_FLAG_COVERAGE
-- Performing Test HAVE_CXX_FLAG_COVERAGE - Success
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Performing Test USE_BOOST_JSON
-- Performing Test USE_BOOST_JSON - Failed
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Found Python3: /usr/bin/python3.8 (found version "3.8.6") found components: Interpreter 
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 10
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
Scanning dependencies of target benchmark
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_api_internal.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_name.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_name.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_register.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_register.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_runner.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_runner.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/colorprint.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/colorprint.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/commandlineflags.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/commandlineflags.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/complexity.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/complexity.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/console_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/console_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/counter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/counter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/csv_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/csv_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/json_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/json_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/sleep.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sleep.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/statistics.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/statistics.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/string_util.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/string_util.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/sysinfo.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sysinfo.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/timers.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/timers.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -P CMakeFiles/benchmark.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/benchmark.dir/link.txt --verbose=1
/usr/bin/ar qc libbenchmark.a  CMakeFiles/benchmark.dir/benchmark.cc.o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o CMakeFiles/benchmark.dir/benchmark_name.cc.o CMakeFiles/benchmark.dir/benchmark_register.cc.o CMakeFiles/benchmark.dir/benchmark_runner.cc.o CMakeFiles/benchmark.dir/colorprint.cc.o CMakeFiles/benchmark.dir/commandlineflags.cc.o CMakeFiles/benchmark.dir/complexity.cc.o CMakeFiles/benchmark.dir/console_reporter.cc.o CMakeFiles/benchmark.dir/counter.cc.o CMakeFiles/benchmark.dir/csv_reporter.cc.o CMakeFiles/benchmark.dir/json_reporter.cc.o CMakeFiles/benchmark.dir/reporter.cc.o CMakeFiles/benchmark.dir/sleep.cc.o CMakeFiles/benchmark.dir/statistics.cc.o CMakeFiles/benchmark.dir/string_util.cc.o CMakeFiles/benchmark.dir/sysinfo.cc.o CMakeFiles/benchmark.dir/timers.cc.o
/usr/bin/ranlib libbenchmark.a
[ 80%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
Scanning dependencies of target generated-data
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated && /usr/bin/ruby genfeaturejson.rb /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-miss.json ...
[ 80%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/clang++-11  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/src  -march=native -O3 -DNDEBUG -fPIC   -pthread -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/clang++-11 -fPIC -march=native -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.6 -o ../libsimdjson.so.6.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.6.0.0 ../libsimdjson.so.6 ../libsimdjson.so
[ 80%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
Scanning dependencies of target yyjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/clang-11  -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src  -O3 -DNDEBUG   -o CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o   -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src/yyjson.c
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -P CMakeFiles/yyjson.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -E cmake_link_script CMakeFiles/yyjson.dir/link.txt --verbose=1
/usr/bin/ar qc libyyjson.a  CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o
/usr/bin/ranlib libyyjson.a
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/clang++-11  -DRAPIDJSON_HAS_STDSTRING -DSAJSON_UNSORTED_OBJECT_KEYS -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_COMPETITION_NLOHMANN_JSON -DSIMDJSON_COMPETITION_RAPIDJSON -DSIMDJSON_COMPETITION_SAJSON -DSIMDJSON_COMPETITION_YYJSON -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/rapidjson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/sajson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/json  -march=native -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/clang++-11  -march=native -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.6.0.0 ../_deps/google_benchmarks/src/libbenchmark.a ../dependencies/libyyjson.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/36/skylake-clang11-native.json --benchmark_out_format=json
2021-01-24 23:37:48
Running benchmark/bench_ondemand
Run on (4 X 4000 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 256 KiB (x4)
  L3 Unified 8192 KiB (x1)
Load Average: 1.08, 1.02, 1.00
simdjson::dom implementation:      haswell
simdjson::ondemand implementation: haswell

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                  272970 ns       301730 ns         2513            3.55k           2.32532G               0        93.912k    1002.88k              1.58805          3.68213k       3.69272G          2.99337M                    4.73999                     2.98479           368.213k    3.65778k   631.515k       2.15461G/s    13.2033   93.5822k   1007.14k          1.5948    3.6634k/s 3.68956G/s     2.99337M               4.73999                2.97215        100        366.34k/s [BEST: throughput=  2.33 GB/s doc_throughput=  3682 docs/s instructions=     2993372 cycles=     1002875 branch_miss=    3550 cache_miss=       0 cache_ref=     93912 items=       100 avg_time=    272970 ns]
partial_tweets<simdjson_ondemand>/manual_time             175094 ns       203679 ns         3992           1.748k           3.63138G               0        59.077k    642.216k              1.01694          5.75027k       3.69291G          1.94668M                    3.08256                     3.03119           575.027k    1.90208k   631.515k       3.35902G/s  0.0475952   59.2601k   646.267k         1.02336   5.71121k/s 3.69097G/s     1.94668M               3.08256                3.01219        100       571.121k/s [BEST: throughput=  3.63 GB/s doc_throughput=  5750 docs/s instructions=     1946680 cycles=      642216 branch_miss=    1748 cache_miss=       0 cache_ref=     59077 items=       100 avg_time=    175094 ns]
partial_tweets<yyjson>/manual_time                        635032 ns       666144 ns         1099           9.799k           1.73455G             304        78.506k    1.29075M              2.04389          2.74666k       3.54524G           2.9196M                    4.62317                     2.26195           274.666k    7.40711k   631.515k       948.393M/s    979.279   51.6006k   1.49605M         2.36899   1.57472k/s 2.35587G/s     2.92009M               4.62394                1.95186        100       157.472k/s [BEST: throughput=  1.73 GB/s doc_throughput=  2746 docs/s instructions=     2919604 cycles=     1290746 branch_miss=    9799 cache_miss=     304 cache_ref=     78506 items=       100 avg_time=    635031 ns]
partial_tweets<yyjson_insitu>/manual_time                 425110 ns       454566 ns         1647           6.788k           2.06542G          1.315k         48.32k    1.12257M              1.77757          3.27058k       3.67144G          2.91929M                    4.62268                     2.60055           327.058k    7.21727k   631.515k       1.38351G/s    139.644   33.7301k   1.22269M         1.93612   2.35233k/s 2.87617G/s     2.91955M               4.62309                2.38781        100       235.233k/s [BEST: throughput=  2.07 GB/s doc_throughput=  3270 docs/s instructions=     2919289 cycles=     1122565 branch_miss=    6788 cache_miss=    1315 cache_ref=     48320 items=       100 avg_time=    425109 ns]
partial_tweets<sajson>/manual_time                        597574 ns       626383 ns         1172          10.549k           1068.45M               0        48.384k    2.18203M              3.45523          1.69189k       3.69174G          5.87691M                    9.30604                     2.69332           169.189k    10.8574k   631.515k       1007.84M/s    14.1365   48.2194k   2.20416M         3.49027   1.67343k/s 3.68851G/s     5.87691M               9.30604                2.66628        100       167.343k/s [BEST: throughput=  1.07 GB/s doc_throughput=  1691 docs/s instructions=     5876906 cycles=     2182027 branch_miss=   10549 cache_miss=       0 cache_ref=     48384 items=       100 avg_time=    597573 ns]
partial_tweets<rapidjson>/manual_time                    2364673 ns      2394176 ns          296          30.429k           291.738M          1.443k        54.478k    7.99097M              12.6537           461.965       3.69155G          21.8946M                    34.6699                     2.73991           46.1965k    30.5264k   631.515k        254.69M/s    639.818   34.5151k   8.13866M         12.8875    422.891/s 3.44177G/s     21.8954M               34.6712                2.69029        100       42.2891k/s [BEST: throughput=  0.29 GB/s doc_throughput=   461 docs/s instructions=    21894588 cycles=     7990974 branch_miss=   30429 cache_miss=    1443 cache_ref=     54478 items=       100 avg_time=   2364672 ns]
partial_tweets<rapidjson_insitu>/manual_time             1572814 ns      1602029 ns          447          26.371k           426.661M          3.428k        46.197k    5.43302M              8.60316           675.615       3.67063G          13.3205M                    21.0929                     2.45177           67.5615k     25.976k   631.515k       382.919M/s    325.166   35.7277k   5.45728M         8.64157    635.803/s 3.46976G/s     13.3208M               21.0935                2.44093        100       63.5803k/s [BEST: throughput=  0.43 GB/s doc_throughput=   675 docs/s instructions=    13320507 cycles=     5433024 branch_miss=   26371 cache_miss=    3428 cache_ref=     46197 items=       100 avg_time=   1572813 ns]
partial_tweets<nlohmann_json>/manual_time                8580830 ns      8616013 ns           82          150.74k            75.866M               2       235.001k    30.7119M              48.6321           120.133       3.68952G          80.2973M                     127.15                     2.61454           12.0133k    162.054k   631.515k       70.1866M/s    208.085   371.997k    31.652M         50.1207    116.539/s 3.68868G/s      80.956M               128.193                2.55769        100       11.6539k/s [BEST: throughput=  0.08 GB/s doc_throughput=   120 docs/s instructions=    80297313 cycles=    30711883 branch_miss=  150740 cache_miss=       2 cache_ref=    235001 items=       100 avg_time=   8580830 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                  87563660 ns     90966999 ns            8         914.633k           526.776M        10.9378M       15.4055M    322.057M              7.00142            11.452       3.68818G          1035.69M                    22.5155                     3.21585            11.452M    917.844k   45.9988M       500.982M/s   10.9384M   15.4083M   322.989M          7.0217    11.4203/s 3.68862G/s     1035.69M               22.5155                3.20656      1000k       11.4203M/s [BEST: throughput=  0.53 GB/s doc_throughput=    11 docs/s instructions=  1035686042 cycles=   322056535 branch_miss=  914633 cache_miss=10937799 cache_ref=  15405473 items=   1000000 avg_time=  87563660 ns]
large_random<simdjson_ondemand>/manual_time             65675184 ns     69048840 ns           11         914.529k           701.794M        5.65804M       8.02671M    241.801M              5.25668           15.2568        3.6891G          670.142M                    14.5687                     2.77146           15.2568M    923.845k   45.9988M       667.952M/s   5.70052M   8.02808M    242.23M           5.266    15.2265/s  3.6883G/s     670.142M               14.5687                2.76656      1000k       15.2265M/s [BEST: throughput=  0.70 GB/s doc_throughput=    15 docs/s instructions=   670141947 cycles=   241800687 branch_miss=  914529 cache_miss= 5658042 cache_ref=   8026711 items=   1000000 avg_time=  65675183 ns]
large_random<simdjson_ondemand_unordered>/manual_time   66437038 ns     69801193 ns           11          895.87k           692.913M        5.66363M       8.02694M      244.9M              5.32406           15.0637       3.68911G          674.142M                    14.6556                     2.75272           15.0637M    897.125k   45.9988M       660.292M/s   5.70431M   8.02848M   245.022M         5.32671    15.0518/s 3.68804G/s     674.142M               14.6556                2.75135      1000k       15.0518M/s [BEST: throughput=  0.69 GB/s doc_throughput=    15 docs/s instructions=   674141946 cycles=   244900297 branch_miss=  895870 cache_miss= 5663632 cache_ref=   8026941 items=   1000000 avg_time=  66437038 ns]
large_random<yyjson>/manual_time                       115997560 ns    119427534 ns            6         676.978k           396.863M        5.67756M       8.94529M     307.84M              6.69236           8.62769       2.65595G          855.681M                    18.6023                     2.77963           8.62769M    676.283k   45.9988M       378.179M/s   5.68069M   8.94509M   307.861M         6.69281    8.62087/s 2.65403G/s     855.681M               18.6023                2.77944      1000k       8.62087M/s [BEST: throughput=  0.40 GB/s doc_throughput=     8 docs/s instructions=   855680946 cycles=   307840217 branch_miss=  676978 cache_miss= 5677565 cache_ref=   8945288 items=   1000000 avg_time= 115997560 ns]
large_random<yyjson_insitu>/manual_time                 97719608 ns    101128003 ns            7         677.169k           471.075M          4.832M       7.64862M    274.964M              5.97765            10.241       2.81592G           849.56M                    18.4692                     3.08971            10.241M    676.295k   45.9988M       448.916M/s   4.84335M   7.64568M   275.046M         5.97942    10.2334/s 2.81465G/s      849.56M               18.4692                3.08879      1000k       10.2334M/s [BEST: throughput=  0.47 GB/s doc_throughput=    10 docs/s instructions=   849560181 cycles=   274964369 branch_miss=  677169 cache_miss= 4832004 cache_ref=   7648616 items=   1000000 avg_time=  97719608 ns]
large_random<sajson>/manual_time                        88264756 ns     91667645 ns            8         577.503k            522.53M        8.27681M       12.1734M    324.746M              7.05989           11.3597       3.68901G             1087M                     23.631                     3.34721           11.3597M    577.512k   45.9988M       497.003M/s   8.24118M   12.1021M    325.54M         7.07714    11.3296/s 3.68822G/s        1087M                23.631                3.33906      1000k       11.3296M/s [BEST: throughput=  0.52 GB/s doc_throughput=    11 docs/s instructions=  1086995282 cycles=   324746284 branch_miss=  577503 cache_miss= 8276811 cache_ref=  12173357 items=   1000000 avg_time=  88264755 ns]
large_random<rapidjson>/manual_time                    212532993 ns    215906192 ns            3         583.268k            222.18M        7.10412M       10.9021M     704.79M              15.3219           4.83014       3.40424G          2.01014G                    43.6999                     2.85212           4.83014M    583.249k   45.9988M       206.405M/s   6.56095M   10.2457M   706.832M         15.3663    4.70515/s 3.32575G/s     2.01015G               43.7001                2.84389      1000k       4.70515M/s [BEST: throughput=  0.22 GB/s doc_throughput=     4 docs/s instructions=  2010143781 cycles=   704790466 branch_miss=  583268 cache_miss= 7104117 cache_ref=  10902144 items=   1000000 avg_time= 212532992 ns]
large_random<rapidjson_lossless>/manual_time           246379094 ns    249763233 ns            3         591.857k           191.291M         7.0303M       10.9165M    829.075M              18.0238           4.15861        3.4478G          2.47511G                    53.8082                     2.98539           4.15861M    592.533k   45.9988M        178.05M/s   6.52591M   10.2697M   831.978M          18.087    4.05879/s 3.37682G/s     2.47512G               53.8084                2.97498      1000k       4.05879M/s [BEST: throughput=  0.19 GB/s doc_throughput=     4 docs/s instructions=  2475111300 cycles=   829074938 branch_miss=  591857 cache_miss= 7030301 cache_ref=  10916500 items=   1000000 avg_time= 246379094 ns]
large_random<rapidjson_insitu>/manual_time             237258438 ns    240651478 ns            3          601.07k           198.528M        8.21714M       12.5225M    796.473M              17.3151           4.31594       3.43753G          1.72014G                    37.3954                      2.1597           4.31594M    599.441k   45.9988M       184.895M/s   7.68408M    11.857M   798.241M         17.3535    4.21481/s 3.36444G/s     1.72015G               37.3956                2.15493      1000k       4.21481M/s [BEST: throughput=  0.20 GB/s doc_throughput=     4 docs/s instructions=  1720144013 cycles=   796473425 branch_miss=  601070 cache_miss= 8217143 cache_ref=  12522455 items=   1000000 avg_time= 237258437 ns]
large_random<nlohmann_json>/manual_time               1281935584 ns   1285217080 ns            1         4.10545M           35.8823M        46.9211M       61.2874M    4.71532G               102.51           0.78007       3.67828G          12.7456G                    277.085                     2.70301            780.07k    4.10545M   45.9988M         34.22M/s   46.9211M   61.2874M   4.71532G          102.51    0.78007/s 3.67828G/s     12.7456G               277.085                2.70301      1000k        780.07k/s [BEST: throughput=  0.04 GB/s doc_throughput=     0 docs/s instructions= 12745552646 cycles=  4715319963 branch_miss= 4105451 cache_miss=46921116 cache_ref=  61287448 items=   1000000 avg_time=1281935584 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                        93708667 ns    103990597 ns            7          1.1101M           1.46745G        15.8003M        22.303M    345.131M              2.51361           10.6875       3.68861G          985.796M                    7.17961                     2.85629           5.60335M    1.11208M   137.305M        1.3646G/s   15.8482M   22.3436M   345.568M         2.51679    10.6714/s 3.68769G/s     985.796M               7.17961                2.85268   524.288k       5.59487M/s [BEST: throughput=  1.47 GB/s doc_throughput=    10 docs/s instructions=   985795975 cycles=   345131342 branch_miss= 1110101 cache_miss=15800302 cache_ref=  22303024 items=    524288 avg_time=  93708667 ns]
kostya<simdjson_ondemand>/manual_time                   62660145 ns     72895419 ns           11         553.988k           2.19469G        10.0611M        14.042M    230.794M              1.68088           15.9841       3.68902G          652.062M                      4.749                      2.8253           8.38025M    554.005k   137.305M       2.04077G/s   10.0854M   13.9977M   231.078M         1.68295    15.9591/s 3.68779G/s     652.062M                 4.749                2.82183   524.288k       8.36717M/s [BEST: throughput=  2.19 GB/s doc_throughput=    15 docs/s instructions=   652061659 cycles=   230793596 branch_miss=  553988 cache_miss=10061142 cache_ref=  14041968 items=    524288 avg_time=  62660144 ns]
kostya<yyjson>/manual_time                             173134693 ns    183420613 ns            4         421.836k           793.821M        11.2767M       16.4839M    442.446M              3.22236           5.78144       2.55798G          974.184M                    7.09504                     2.20181           3.03114M    421.747k   137.305M       756.314M/s   11.2741M   16.4324M   442.438M          3.2223    5.77585/s 2.55545G/s     974.185M               7.09504                2.20186   524.288k       3.02821M/s [BEST: throughput=  0.79 GB/s doc_throughput=     5 docs/s instructions=   974184481 cycles=   442446310 branch_miss=  421836 cache_miss=11276717 cache_ref=  16483909 items=    524288 avg_time= 173134692 ns]
kostya<yyjson_insitu>/manual_time                      119977766 ns    130281619 ns            6         415.948k            1.1449G        8.64755M       12.4192M    348.597M              2.53885           8.33836       2.90673G          955.915M                    6.96198                     2.74218            4.3717M    416.065k   137.305M        1091.4M/s   8.64957M   12.4054M   348.541M         2.53844    8.33488/s 2.90505G/s     955.915M               6.96198                2.74262   524.288k       4.36988M/s [BEST: throughput=  1.14 GB/s doc_throughput=     8 docs/s instructions=   955915020 cycles=   348596989 branch_miss=  415948 cache_miss= 8647551 cache_ref=  12419189 items=    524288 avg_time= 119977765 ns]
kostya<sajson>/manual_time                             137129841 ns    147430447 ns            5         356.343k           1003.75M        12.2768M       17.1898M    504.486M               3.6742           7.31037       3.68798G          1.51716G                    11.0496                     3.00734           3.83274M    356.296k   137.305M       954.892M/s   12.3035M   17.1813M   505.802M         3.68378    7.29236/s 3.68849G/s     1.51716G               11.0496                2.99952   524.288k        3.8233M/s [BEST: throughput=  1.00 GB/s doc_throughput=     7 docs/s instructions=  1517163296 cycles=   504486238 branch_miss=  356343 cache_miss=12276753 cache_ref=  17189750 items=    524288 avg_time= 137129841 ns]
kostya<rapidjson>/manual_time                          277888812 ns    288198446 ns            3         975.936k           500.135M        8.29769M       12.3261M    931.714M              6.78573           3.64251       3.39378G          2.73767G                    19.9386                     2.93832           1.90973M    972.995k   137.305M       471.211M/s    7.9941M    11.927M   934.669M         6.80725    3.59856/s 3.36347G/s     2.73768G               19.9386                2.92903   524.288k       1.88668M/s [BEST: throughput=  0.50 GB/s doc_throughput=     3 docs/s instructions=  2737673325 cycles=   931714269 branch_miss=  975936 cache_miss= 8297695 cache_ref=  12326107 items=    524288 avg_time= 277888812 ns]
kostya<rapidjson_lossless>/manual_time                 303492990 ns    313795482 ns            2         961.419k           456.125M        8.29687M       12.2514M    1028.99M              7.49418           3.32199       3.41828G          3.00662G                    21.8974                     2.92192           1.74168M    963.797k   137.305M       431.457M/s   8.07039M   11.9793M   1031.08M          7.5094    3.29497/s 3.39737G/s     3.00663G               21.8974                  2.916   524.288k       1.72751M/s [BEST: throughput=  0.46 GB/s doc_throughput=     3 docs/s instructions=  3006623761 cycles=  1028987676 branch_miss=  961419 cache_miss= 8296866 cache_ref=  12251363 items=    524288 avg_time= 303492989 ns]
kostya<rapidjson_insitu>/manual_time                   273609947 ns    283922949 ns            3         965.758k           507.504M         11.946M       16.1818M    917.222M              6.68018           3.69618       3.39022G          2.21153G                    16.1067                     2.41111           1.93786M    972.487k   137.305M        478.58M/s    11.654M   15.7562M   919.023M          6.6933    3.65484/s 3.35888G/s     2.21153G               16.1067                2.40639   524.288k       1.91619M/s [BEST: throughput=  0.51 GB/s doc_throughput=     3 docs/s instructions=  2211525015 cycles=   917222000 branch_miss=  965758 cache_miss=11945995 cache_ref=  16181823 items=    524288 avg_time= 273609946 ns]
kostya<nlohmann_json>/manual_time                     1942876297 ns   1953084269 ns            1         13.9068M            70.671M        68.8968M       86.7933M    7.16645G              52.1937          0.514701       3.68858G          17.7606G                    129.351                     2.47829           269.851k    13.9068M   137.305M       67.3971M/s   68.8968M   86.7933M   7.16645G         52.1937   0.514701/s 3.68858G/s     17.7606G               129.351                2.47829   524.288k       269.851k/s [BEST: throughput=  0.07 GB/s doc_throughput=     0 docs/s instructions= 17760584224 cycles=  7166454101 branch_miss=13906786 cache_miss=68896763 cache_ref=  86793340 items=    524288 avg_time=1942876297 ns]
distinct_user_id<simdjson_dom>/manual_time                272812 ns       303329 ns         2564           3.634k           2.32836G               0        94.947k    1001.47k              1.58582          3.68695k       3.69236G          2.92855M                    4.63734                     2.92425           423.999k    3.83649k   631.515k       2.15586G/s    7.80148   94.8003k   1006.64k         1.59401   3.66552k/s 3.68988G/s     2.92855M               4.63734                2.90922        115       421.535k/s [BEST: throughput=  2.33 GB/s doc_throughput=  3686 docs/s instructions=     2928548 cycles=     1001469 branch_miss=    3634 cache_miss=       0 cache_ref=     94947 items=       115 avg_time=    272812 ns]
distinct_user_id<simdjson_ondemand>/manual_time           162428 ns       192130 ns         4307             2.1k           3.92399G               0        56.926k    594.388k              0.94121          6.21361k        3.6933G          1.89587M                    3.00209                     3.18961           714.565k    2.27365k   631.515k       3.62096G/s   0.844671   56.8153k   599.463k        0.949245   6.15658k/s 3.69064G/s     1.89587M               3.00209                3.16261        115       708.006k/s [BEST: throughput=  3.92 GB/s doc_throughput=  6213 docs/s instructions=     1895867 cycles=      594388 branch_miss=    2100 cache_miss=       0 cache_ref=     56926 items=       115 avg_time=    162427 ns]
distinct_user_id<yyjson>/manual_time                      545801 ns       579327 ns         1000           6.561k           1.92237G         21.888k        76.326k    1.21299M              1.92076          3.04406k        3.6924G          2.87761M                    4.55668                     2.37233           350.067k    7.30443k   631.515k       1103.44M/s    7.4416k   58.0412k    1.4207M         2.24967   1.83217k/s 2.60297G/s      2.8781M               4.55745                2.02583        115       210.699k/s [BEST: throughput=  1.92 GB/s doc_throughput=  3044 docs/s instructions=     2877611 cycles=     1212988 branch_miss=    6561 cache_miss=   21888 cache_ref=     76326 items=       115 avg_time=    545801 ns]
distinct_user_id<yyjson_insitu>/manual_time               417338 ns       450068 ns         1676           7.037k           2.09139G             423        46.808k    1.11123M              1.75962          3.31171k       3.68006G          2.87739M                    4.55632                     2.58938           380.846k    7.32307k   631.515k       1.40928G/s    62.2351   32.3523k    1.2069M         1.91112   2.39614k/s  2.8919G/s     2.87765M               4.55674                2.38433        115       275.556k/s [BEST: throughput=  2.09 GB/s doc_throughput=  3311 docs/s instructions=     2877385 cycles=     1111226 branch_miss=    7037 cache_miss=     423 cache_ref=     46808 items=       115 avg_time=    417337 ns]
distinct_user_id<sajson>/manual_time                      594557 ns       625214 ns         1176          10.506k           1074.33M               0        47.921k     2.1701M              3.43634          1.70119k       3.69176G          5.81547M                    9.20876                     2.67981           195.637k    10.8729k   631.515k       1012.95M/s    1.22194   47.9686k   2.19309M         3.47274   1.68192k/s 3.68861G/s     5.81547M               9.20876                2.65173        115       193.421k/s [BEST: throughput=  1.07 GB/s doc_throughput=  1701 docs/s instructions=     5815469 cycles=     2170103 branch_miss=   10506 cache_miss=       0 cache_ref=     47921 items=       115 avg_time=    594557 ns]
distinct_user_id<rapidjson>/manual_time                  2346004 ns      2376881 ns          300          30.908k           292.453M              77        55.339k    7.97143M              12.6227           463.098       3.69155G          21.8231M                    34.5568                     2.73767           53.2562k     30.574k   631.515k       256.717M/s   1.29961k   37.0139k   8.10564M         12.8352    426.257/s 3.45508G/s     21.8239M                34.558                2.69244        115       49.0195k/s [BEST: throughput=  0.29 GB/s doc_throughput=   463 docs/s instructions=    21823107 cycles=     7971427 branch_miss=   30908 cache_miss=      77 cache_ref=     55339 items=       115 avg_time=   2346004 ns]
distinct_user_id<rapidjson_insitu>/manual_time           1562272 ns      1592641 ns          438          25.236k           437.123M             129        46.609k    5.32013M               8.4244           692.182        3.6825G          13.2541M                    20.9878                     2.49131           79.6009k    30.7468k   631.515k       385.502M/s   2.97491k   38.5015k   5.49893M         8.70752    640.093/s 3.51983G/s     13.2544M               20.9883                2.41036        115       73.6107k/s [BEST: throughput=  0.44 GB/s doc_throughput=   692 docs/s instructions=    13254100 cycles=     5320134 branch_miss=   25236 cache_miss=     129 cache_ref=     46609 items=       115 avg_time=   1562271 ns]
distinct_user_id<nlohmann_json>/manual_time              7964504 ns      7998105 ns           90         126.774k            81.801M              95       227.643k    28.4829M              45.1025           129.531       3.68943G          75.7413M                    119.936                     2.65919           14.8961k    139.731k   631.515k        75.618M/s    183.033   424.464k   29.3783M         46.5203    125.557/s 3.68865G/s      74.367M                117.76                2.53136        115       14.4391k/s [BEST: throughput=  0.08 GB/s doc_throughput=   129 docs/s instructions=    75741301 cycles=    28482897 branch_miss=  126774 cache_miss=      95 cache_ref=    227643 items=       115 avg_time=   7964504 ns]
find_tweet<simdjson_dom>/manual_time                      260707 ns       290037 ns         2683           3.394k           2.43535G               0        84.195k    957.553k              1.51628          3.85636k       3.69267G          2.84337M                    4.50246                     2.96942           3.85636k    3.52005k   631.515k       2.25596G/s    2.76146   84.2472k   962.154k         1.52357   3.83572k/s 3.69056G/s     2.84337M               4.50246                2.95522          1       3.83572k/s [BEST: throughput=  2.44 GB/s doc_throughput=  3856 docs/s instructions=     2843374 cycles=      957553 branch_miss=    3394 cache_miss=       0 cache_ref=     84195 items=         1 avg_time=    260707 ns]
find_tweet<simdjson_ondemand>/manual_time                 117376 ns       145839 ns         5957           1.103k            5.4132G               0        32.999k    430.931k             0.682377          8.57177k       3.69384G          1.38727M                    2.19673                     3.21923           8.57177k    1.16954k   631.515k       5.01076G/s   0.940071   32.9196k   433.266k        0.686074   8.51962k/s 3.69126G/s     1.38727M               2.19673                3.20188          1       8.51962k/s [BEST: throughput=  5.41 GB/s doc_throughput=  8571 docs/s instructions=     1387265 cycles=      430931 branch_miss=    1103 cache_miss=       0 cache_ref=     32999 items=         1 avg_time=    117376 ns]
find_tweet<yyjson>/manual_time                            608632 ns       639785 ns         1158           9.131k           1.91222G             101        69.695k    1.21938M              1.93089          3.02798k       3.69228G          2.81717M                    4.46097                     2.31032           3.02798k    7.24615k   631.515k       989.529M/s    1042.36   41.6425k   1.44426M         2.28698   1.64303k/s 2.37296G/s     2.81763M                4.4617                1.95092          1       1.64303k/s [BEST: throughput=  1.91 GB/s doc_throughput=  3027 docs/s instructions=     2817170 cycles=     1219385 branch_miss=    9131 cache_miss=     101 cache_ref=     69695 items=         1 avg_time=    608632 ns]
find_tweet<yyjson_insitu>/manual_time                     406789 ns       437192 ns         1722           6.637k            2.1739G             326        38.068k    1069.32k              1.69326          3.44235k       3.68097G          2.81704M                    4.46076                     2.63442           3.44235k    7.06795k   631.515k       1.44582G/s     17.011    23.471k   1.16881M          1.8508   2.45827k/s 2.87325G/s      2.8173M               4.46118                 2.4104          1       2.45827k/s [BEST: throughput=  2.17 GB/s doc_throughput=  3442 docs/s instructions=     2817038 cycles=     1069319 branch_miss=    6637 cache_miss=     326 cache_ref=     38068 items=         1 avg_time=    406789 ns]
find_tweet<sajson>/manual_time                            580905 ns       610742 ns         1204          10.194k           1.10028G               0        38.273k    2.11896M              3.35536          1.74229k       3.69185G          5.72035M                    9.05813                      2.6996           1.74229k     10.625k   631.515k       1036.76M/s    1.43355   38.4431k   2.14293M         3.39332   1.72145k/s 3.68896G/s     5.72035M               9.05814                 2.6694          1       1.72145k/s [BEST: throughput=  1.10 GB/s doc_throughput=  1742 docs/s instructions=     5720348 cycles=     2118961 branch_miss=   10194 cache_miss=       0 cache_ref=     38273 items=         1 avg_time=    580905 ns]
find_tweet<rapidjson>/manual_time                        2334552 ns      2363541 ns          301          30.096k           293.736M         15.005k        48.767k    7.93653M              12.5674           465.129       3.69151G          21.7397M                    34.4247                     2.73919            465.129    30.4055k   631.515k       257.977M/s    1009.66   28.6417k   8.06421M         12.7696    428.348/s 3.45429G/s     21.7405M                34.426                2.69593          1        428.348/s [BEST: throughput=  0.29 GB/s doc_throughput=   465 docs/s instructions=    21739688 cycles=     7936528 branch_miss=   30096 cache_miss=   15005 cache_ref=     48767 items=         1 avg_time=   2334551 ns]
find_tweet<rapidjson_insitu>/manual_time                 1552108 ns      1581771 ns          440          24.873k           441.856M              86        36.441k    5.27616M              8.35477           699.675        3.6916G          13.1755M                    20.8633                     2.49717            699.675    30.5815k   631.515k       388.027M/s   2.72715k   28.9798k   5.46133M         8.64798    644.285/s 3.51865G/s      13.176M               20.8641                 2.4126          1        644.285/s [BEST: throughput=  0.44 GB/s doc_throughput=   699 docs/s instructions=    13175504 cycles=     5276164 branch_miss=   24873 cache_miss=      86 cache_ref=     36441 items=         1 avg_time=   1552108 ns]
find_tweet<nlohmann_json>/manual_time                    6872390 ns      6902475 ns          104         100.039k           95.0901M              35       170.546k    24.5004M              38.7962           150.575       3.68914G          65.8622M                    104.292                     2.68821            150.575      113.2k   631.515k       87.6347M/s    144.904   340.762k   25.3504M         40.1422     145.51/s 3.68873G/s     64.4808M               102.105                2.54358          1         145.51/s [BEST: throughput=  0.10 GB/s doc_throughput=   150 docs/s instructions=    65862175 cycles=    24500412 branch_miss=  100039 cache_miss=      35 cache_ref=    170546 items=         1 avg_time=   6872389 ns]
top_tweet<simdjson_dom>/manual_time                       266905 ns       295598 ns         2623           3.487k           2.37981G               0        91.998k    979.805k              1.55152          3.76841k       3.69231G          2.88026M                    4.56088                     2.93963           3.76841k    3.63558k   631.515k       2.20357G/s    9.67213   92.1071k   984.772k         1.55938   3.74665k/s 3.68959G/s     2.88026M               4.56088                 2.9248          1       3.74665k/s [BEST: throughput=  2.38 GB/s doc_throughput=  3768 docs/s instructions=     2880261 cycles=      979805 branch_miss=    3487 cache_miss=       0 cache_ref=     91998 items=         1 avg_time=    266905 ns]
top_tweet<simdjson_ondemand>/manual_time                  178168 ns       206576 ns         3928           1.638k           3.56693G               0        57.112k    653.926k              1.03549          5.64822k       3.69352G          1.91005M                    3.02456                      2.9209           5.64822k    1.74135k   631.515k       3.30106G/s   0.209267   57.3065k   657.579k         1.04127   5.61267k/s 3.69077G/s     1.91005M               3.02456                2.90468          1       5.61267k/s [BEST: throughput=  3.57 GB/s doc_throughput=  5648 docs/s instructions=     1910054 cycles=      653926 branch_miss=    1638 cache_miss=       0 cache_ref=     57112 items=         1 avg_time=    178168 ns]
top_tweet<simdjson_ondemand_forward_only>/manual_time     171995 ns       200422 ns         4072           1.834k           3.71169G               0        58.047k    628.353k             0.994993          5.87744k       3.69311G          1.92496M                    3.04817                     3.06351           5.87744k    2.00631k   631.515k       3.41954G/s   0.528978   57.9268k   634.612k          1.0049   5.81412k/s 3.68971G/s     1.92497M               3.04817                 3.0333          1       5.81412k/s [BEST: throughput=  3.71 GB/s doc_throughput=  5877 docs/s instructions=     1924965 cycles=      628353 branch_miss=    1834 cache_miss=       0 cache_ref=     58047 items=         1 avg_time=    171995 ns]
top_tweet<yyjson>/manual_time                             613599 ns       644256 ns         1149           9.564k           1.86485G             337        72.776k    1.25074M              1.98055          2.95298k       3.69342G          2.84443M                    4.50414                     2.27419           2.95298k    7.36406k   631.515k        981.52M/s    986.359   46.8505k   1.46355M         2.31751   1.62973k/s 2.38518G/s     2.84491M               4.50489                1.94385          1       1.62973k/s [BEST: throughput=  1.86 GB/s doc_throughput=  2952 docs/s instructions=     2844430 cycles=     1250744 branch_miss=    9564 cache_miss=     337 cache_ref=     72776 items=         1 avg_time=    613598 ns]
top_tweet<yyjson_insitu>/manual_time                      412656 ns       442144 ns         1698           6.825k           2.13019G             483        42.891k    1091.28k              1.72803          3.37315k       3.68104G          2.84411M                    4.50362                     2.60622           3.37315k     7.1938k   631.515k       1.42527G/s    47.3475    28.764k   1.18996M         1.88429   2.42333k/s 2.88366G/s     2.84437M               4.50404                2.39031          1       2.42333k/s [BEST: throughput=  2.13 GB/s doc_throughput=  3373 docs/s instructions=     2844106 cycles=     1091277 branch_miss=    6825 cache_miss=     483 cache_ref=     42891 items=         1 avg_time=    412655 ns]
top_tweet<sajson>/manual_time                             584946 ns       613946 ns         1195          10.256k           1092.12M               0        43.371k     2.1348M              3.38045          1.72936k       3.69185G          5.75034M                    9.10563                     2.69361           1.72936k    10.6394k   631.515k        1029.6M/s    2.17741   43.6764k   2.15806M         3.41727   1.70956k/s 3.68933G/s     5.75034M               9.10563                2.66459          1       1.70956k/s [BEST: throughput=  1.09 GB/s doc_throughput=  1729 docs/s instructions=     5750340 cycles=     2134805 branch_miss=   10256 cache_miss=       0 cache_ref=     43371 items=         1 avg_time=    584945 ns]
top_tweet<rapidjson>/manual_time                         2397014 ns      2425740 ns          300          29.887k           285.932M         13.103k         52.11k    8.15318M              12.9105           452.771       3.69152G           21.798M                    34.5171                     2.67356            452.771    30.4969k   631.515k       251.254M/s    1.2058k   32.8813k   8.29054M          13.128    417.186/s  3.4587G/s     21.7987M               34.5181                2.62934          1        417.186/s [BEST: throughput=  0.29 GB/s doc_throughput=   452 docs/s instructions=    21798041 cycles=     8153184 branch_miss=   29887 cache_miss=   13103 cache_ref=     52110 items=         1 avg_time=   2397013 ns]
top_tweet<rapidjson_insitu>/manual_time                  1549132 ns      1578226 ns          440          25.107k           441.753M              38         41.47k     5.2774M              8.35672           699.513       3.69161G          13.2297M                    20.9491                     2.50685            699.513    30.6079k   631.515k       388.772M/s   2.83566k   34.5198k   5.45119M         8.63193    645.523/s 3.51887G/s     13.2299M               20.9495                2.42698          1        645.523/s [BEST: throughput=  0.44 GB/s doc_throughput=   699 docs/s instructions=    13229653 cycles=     5277395 branch_miss=   25107 cache_miss=      38 cache_ref=     41470 items=         1 avg_time=   1549132 ns]
top_tweet<nlohmann_json>/manual_time                     9434022 ns      9465910 ns           74         192.065k           67.4569M              52        397.96k    34.5425M              54.6978           106.818       3.68974G          87.8689M                     139.14                     2.54379            106.818    196.303k   631.515k       63.8391M/s    2.7108k   411.924k   34.8009M          55.107    105.999/s 3.68887G/s     88.2153M               139.688                2.53486          1        105.999/s [BEST: throughput=  0.07 GB/s doc_throughput=   106 docs/s instructions=    87868861 cycles=    34542489 branch_miss=  192065 cache_miss=      52 cache_ref=    397960 items=         1 avg_time=   9434021 ns]
