run_benchmark: v0.8.0~2 /home/jkeiser/simdjson_benchmark_results/v0.7.0/36/ampere-gcc10.2.json -DCMAKE_BUILD_TYPE=Release
git reset --hard v0.8.0~2
HEAD is now at 2a714f4e Hide the std::pair inheritance in our result instances (#1396)
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The CXX compiler identification is GNU 10.2.0
-- The C compiler identification is GNU 10.2.0
-- Check for working CXX compiler: /usr/bin/g++-10
-- Check for working CXX compiler: /usr/bin/g++-10 -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Check for working C compiler: /usr/bin/gcc-10
-- Check for working C compiler: /usr/bin/gcc-10 -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed
-- Check if compiler accepts -pthread
-- Check if compiler accepts -pthread - yes
-- Found Threads: TRUE  
-- Looking for fork
-- Looking for fork - found
-- Looking for wait
-- Looking for wait - found
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Found Git: /usr/bin/git (found version "2.27.0") 
-- git Version: v0.2.1-2a714f4e
-- Version: 0.2.1
-- Performing Test HAVE_CXX_FLAG_STD_CXX11
-- Performing Test HAVE_CXX_FLAG_STD_CXX11 - Success
-- Performing Test HAVE_CXX_FLAG_WALL
-- Performing Test HAVE_CXX_FLAG_WALL - Success
-- Performing Test HAVE_CXX_FLAG_WEXTRA
-- Performing Test HAVE_CXX_FLAG_WEXTRA - Success
-- Performing Test HAVE_CXX_FLAG_WSHADOW
-- Performing Test HAVE_CXX_FLAG_WSHADOW - Success
-- Performing Test HAVE_CXX_FLAG_WERROR
-- Performing Test HAVE_CXX_FLAG_WERROR - Success
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32 - Failed
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED - Success
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WD654
-- Performing Test HAVE_CXX_FLAG_WD654 - Failed
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY - Failed
-- Performing Test HAVE_CXX_FLAG_COVERAGE
-- Performing Test HAVE_CXX_FLAG_COVERAGE - Success
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Performing Test USE_BOOST_JSON
-- Performing Test USE_BOOST_JSON - Failed
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Found Python3: /usr/bin/python3.8 (found version "3.8.6") found components: Interpreter 
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 10
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
Scanning dependencies of target benchmark
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_api_internal.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_name.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_name.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_register.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_register.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_runner.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_runner.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/colorprint.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/colorprint.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/commandlineflags.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/commandlineflags.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/complexity.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/complexity.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/console_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/console_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/counter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/counter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/csv_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/csv_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/json_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/json_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/sleep.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sleep.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/statistics.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/statistics.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/string_util.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/string_util.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/sysinfo.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sysinfo.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/timers.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/timers.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -P CMakeFiles/benchmark.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/benchmark.dir/link.txt --verbose=1
/usr/bin/ar qc libbenchmark.a  CMakeFiles/benchmark.dir/benchmark.cc.o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o CMakeFiles/benchmark.dir/benchmark_name.cc.o CMakeFiles/benchmark.dir/benchmark_register.cc.o CMakeFiles/benchmark.dir/benchmark_runner.cc.o CMakeFiles/benchmark.dir/colorprint.cc.o CMakeFiles/benchmark.dir/commandlineflags.cc.o CMakeFiles/benchmark.dir/complexity.cc.o CMakeFiles/benchmark.dir/console_reporter.cc.o CMakeFiles/benchmark.dir/counter.cc.o CMakeFiles/benchmark.dir/csv_reporter.cc.o CMakeFiles/benchmark.dir/json_reporter.cc.o CMakeFiles/benchmark.dir/reporter.cc.o CMakeFiles/benchmark.dir/sleep.cc.o CMakeFiles/benchmark.dir/statistics.cc.o CMakeFiles/benchmark.dir/string_util.cc.o CMakeFiles/benchmark.dir/sysinfo.cc.o CMakeFiles/benchmark.dir/timers.cc.o
/usr/bin/ranlib libbenchmark.a
[ 80%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
Scanning dependencies of target generated-data
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated && /usr/bin/ruby genfeaturejson.rb /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-miss.json ...
[ 80%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/g++-10  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/src  -O3 -DNDEBUG -fPIC   -pthread -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/g++-10 -fPIC -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.6 -o ../libsimdjson.so.6.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.6.0.0 ../libsimdjson.so.6 ../libsimdjson.so
[ 80%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
Scanning dependencies of target yyjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/gcc-10  -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src  -O3 -DNDEBUG   -o CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o   -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src/yyjson.c
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -P CMakeFiles/yyjson.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -E cmake_link_script CMakeFiles/yyjson.dir/link.txt --verbose=1
/usr/bin/ar qc libyyjson.a  CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o
/usr/bin/ranlib libyyjson.a
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/g++-10  -DRAPIDJSON_HAS_STDSTRING -DSAJSON_UNSORTED_OBJECT_KEYS -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_COMPETITION_NLOHMANN_JSON -DSIMDJSON_COMPETITION_RAPIDJSON -DSIMDJSON_COMPETITION_SAJSON -DSIMDJSON_COMPETITION_YYJSON -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/rapidjson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/sajson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/json  -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/g++-10  -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.6.0.0 ../_deps/google_benchmarks/src/libbenchmark.a ../dependencies/libyyjson.a -pthread /usr/lib/aarch64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/36/ampere-gcc10.2.json --benchmark_out_format=json
2021-01-25 00:03:46
Running benchmark/bench_ondemand
Run on (32 X 3300 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x32)
  L1 Instruction 32 KiB (x32)
  L2 Unified 256 KiB (x16)
Load Average: 1.05, 1.04, 1.00
simdjson::dom implementation:      arm64
simdjson::ondemand implementation: arm64

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                 1577787 ns      1647066 ns          444          17.012k            401.38M          25.89k       905.157k    5.03688M              7.97587           635.582       3.20135G          3.92139M                    6.20949                    0.778535           63.5582k    17.2229k   631.515k       381.712M/s   25.8811k   905.562k   5.04418M         7.98743    633.799/s   3.197G/s     3.92139M               6.20949               0.777408        100       63.3799k/s [BEST: throughput=  0.40 GB/s doc_throughput=   635 docs/s instructions=     3921387 cycles=     5036880 branch_miss=   17012 cache_miss=   25890 cache_ref=    905157 items=       100 avg_time=   1577787 ns]
partial_tweets<simdjson_ondemand>/manual_time            1069207 ns      1138574 ns          655           6.983k            591.99M          22.76k       402.745k    3.41582M              5.40893           937.413       3.20203G          2.75756M                    4.36658                    0.807291           93.7413k     7.0872k   631.515k       563.277M/s   22.7779k   403.041k    3.4192M         5.41428    935.273/s 3.19788G/s     2.75756M               4.36659               0.806494        100       93.5273k/s [BEST: throughput=  0.59 GB/s doc_throughput=   937 docs/s instructions=     2757562 cycles=     3415821 branch_miss=    6983 cache_miss=   22760 cache_ref=    402745 items=       100 avg_time=   1069206 ns]
partial_tweets<yyjson>/manual_time                       1247414 ns      1319353 ns          563          48.252k           574.007M         24.331k       1.49076M    3.52282M              5.57836           908.936       3.20202G          3.54891M                    5.61968                     1.00741           90.8936k    48.1369k   631.515k       482.807M/s   24.3883k    1.4918M    3.7596M          5.9533    801.659/s 3.01392G/s     3.54899M                5.6198               0.943979        100       80.1659k/s [BEST: throughput=  0.57 GB/s doc_throughput=   908 docs/s instructions=     3548911 cycles=     3522819 branch_miss=   48252 cache_miss=   24331 cache_ref=   1490763 items=       100 avg_time=   1247413 ns]
partial_tweets<yyjson_insitu>/manual_time                1163987 ns      1237039 ns          602          47.775k           597.316M         14.572k       1.33265M    3.38537M              5.36071           945.847       3.20204G          3.45008M                    5.46317                     1.01911           94.5847k    47.9208k   631.515k       517.411M/s   14.5922k   1.33323M   3.60835M          5.7138    859.116/s 3.09999G/s     3.45022M               5.46341               0.956177        100       85.9116k/s [BEST: throughput=  0.60 GB/s doc_throughput=   945 docs/s instructions=     3450075 cycles=     3385366 branch_miss=   47775 cache_miss=   14572 cache_ref=   1332649 items=       100 avg_time=   1163987 ns]
partial_tweets<sajson>/manual_time                       1487228 ns      1558489 ns          471          69.257k           425.771M         12.739k       1.87595M    4.74813M              7.51863           674.206       3.20121G          5.31239M                    8.41213                     1.11884           67.4206k    69.5555k   631.515k       404.955M/s    12.731k   1.87688M   4.75574M         7.53068    672.392/s 3.19772G/s     5.31238M               8.41213                1.11705        100       67.2392k/s [BEST: throughput=  0.43 GB/s doc_throughput=   674 docs/s instructions=     5312387 cycles=     4748127 branch_miss=   69257 cache_miss=   12739 cache_ref=   1875953 items=       100 avg_time=   1487227 ns]
partial_tweets<rapidjson>/manual_time                    2804199 ns      2877248 ns          250          75.288k            232.71M         12.964k       6.26229M     8.6859M              13.7541           368.494        3.2007G          13.3636M                    21.1612                     1.53854           36.8494k    75.0225k   631.515k       214.771M/s   13.2149k   6.26823M   8.75522M         13.8638    356.608/s 3.12218G/s     13.3642M               21.1621                1.52642        100       35.6608k/s [BEST: throughput=  0.23 GB/s doc_throughput=   368 docs/s instructions=    13363605 cycles=     8685900 branch_miss=   75288 cache_miss=   12964 cache_ref=   6262286 items=       100 avg_time=   2804199 ns]
partial_tweets<rapidjson_insitu>/manual_time             2135560 ns      2209187 ns          328          59.523k           304.492M         13.766k       3.42869M    6.63866M              10.5123           482.161        3.2009G          9.76603M                    15.4644                     1.47109           48.2161k    59.5951k   631.515k       282.015M/s   13.9364k   3.43001M   6.67551M         10.5706    468.261/s 3.12588G/s     9.76653M               15.4652                1.46304        100       46.8261k/s [BEST: throughput=  0.30 GB/s doc_throughput=   482 docs/s instructions=     9766032 cycles=     6638656 branch_miss=   59523 cache_miss=   13766 cache_ref=   3428687 items=       100 avg_time=   2135560 ns]
partial_tweets<nlohmann_json>/manual_time               17077337 ns     17173976 ns           41          365.91k           39.8809M        198.362k       38.7006M    50.6417M              80.1908           63.1511       3.19808G          68.9564M                    109.192                     1.36165           6.31511k    382.185k   631.515k       35.2666M/s   251.799k   38.7898M    54.592M         86.4462    58.5571/s 3.19675G/s     68.9364M                109.16                1.26276        100       5.85571k/s [BEST: throughput=  0.04 GB/s doc_throughput=    63 docs/s instructions=    68956418 cycles=    50641706 branch_miss=  365910 cache_miss=  198362 cache_ref=  38700639 items=       100 avg_time=  17077337 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                 311000845 ns    314597557 ns            2         1.92364M           147.963M        3.98122M       246.815M    993.881M              21.6067           3.21667       3.19698G          1.10647G                    24.0544                     1.11329           3.21667M     1.9236M   45.9988M       141.054M/s   3.98124M   246.814M   994.223M         21.6141    3.21543/s 3.19685G/s     1.10647G               24.0544                 1.1129      1000k       3.21543M/s [BEST: throughput=  0.15 GB/s doc_throughput=     3 docs/s instructions=  1106473022 cycles=   993881174 branch_miss= 1923637 cache_miss= 3981218 cache_ref= 246815225 items=   1000000 avg_time= 311000845 ns]
large_random<simdjson_ondemand>/manual_time            182735766 ns    186345034 ns            4         1.17491M           251.766M        2.31709M       134.428M    584.143M              12.6991           5.47331        3.1972G          689.959M                    14.9995                     1.18115           5.47331M     1.1748M   45.9988M       240.062M/s    2.3171M   134.428M   584.144M         12.6991    5.47238/s 3.19666G/s     689.959M               14.9995                1.18114      1000k       5.47238M/s [BEST: throughput=  0.25 GB/s doc_throughput=     5 docs/s instructions=   689958571 cycles=   584142872 branch_miss= 1174915 cache_miss= 2317094 cache_ref= 134427535 items=   1000000 avg_time= 182735766 ns]
large_random<simdjson_ondemand_unordered>/manual_time  185481812 ns    189086256 ns            4          1.2069M            248.04M         2.3172M       138.381M    592.905M              12.8896           5.39231       3.19712G          694.959M                    15.1082                     1.17213           5.39231M    1.20692M   45.9988M       236.508M/s   2.31718M   138.381M    592.92M         12.8899    5.39136/s 3.19665G/s     694.959M               15.1082                1.17209      1000k       5.39136M/s [BEST: throughput=  0.25 GB/s doc_throughput=     5 docs/s instructions=   694958571 cycles=   592904699 branch_miss= 1206899 cache_miss= 2317195 cache_ref= 138380710 items=   1000000 avg_time= 185481812 ns]
large_random<yyjson>/manual_time                       203832878 ns    207438371 ns            3         1.56264M            225.73M        4.91261M       234.832M    625.847M              13.6057            4.9073       3.07122G          908.191M                    19.7438                     1.45114            4.9073M    1.56245M   45.9988M       215.215M/s   4.91261M   234.827M   625.921M         13.6073    4.90598/s 3.07075G/s     908.191M               19.7438                1.45097      1000k       4.90598M/s [BEST: throughput=  0.23 GB/s doc_throughput=     4 docs/s instructions=   908191186 cycles=   625846817 branch_miss= 1562641 cache_miss= 4912612 cache_ref= 234832232 items=   1000000 avg_time= 203832878 ns]
large_random<yyjson_insitu>/manual_time                197861515 ns    201486879 ns            4         1.56157M           232.576M        4.19569M       223.321M    613.802M              13.3439           5.05614       3.10347G          901.004M                    19.5876                     1.46791           5.05614M    1.56304M   45.9988M        221.71M/s    4.1956M    223.32M   614.019M         13.3486    5.05404/s 3.10328G/s     901.004M               19.5876                1.46739      1000k       5.05404M/s [BEST: throughput=  0.23 GB/s doc_throughput=     5 docs/s instructions=   901003849 cycles=   613802224 branch_miss= 1561571 cache_miss= 4195685 cache_ref= 223320792 items=   1000000 avg_time= 197861515 ns]
large_random<sajson>/manual_time                       175990354 ns    179599040 ns            4         1.65861M            275.48M        3.44363M       222.112M    533.801M              11.6047           5.98885       3.19685G          955.996M                    20.7831                     1.79092           5.98885M    1.65901M   45.9988M       249.263M/s    3.4437M   222.114M   562.572M         12.2301    5.68213/s 3.19661G/s     955.996M               20.7831                1.69933      1000k       5.68213M/s [BEST: throughput=  0.28 GB/s doc_throughput=     5 docs/s instructions=   955995643 cycles=   533800709 branch_miss= 1658611 cache_miss= 3443630 cache_ref= 222111610 items=   1000000 avg_time= 175990354 ns]
large_random<rapidjson>/manual_time                    511474203 ns    354538403 ns            1         1.90619M           89.9337M        4.95455M       755.785M    1093.62M              23.7751           1.95513       2.13818G          1.65551G                    35.9902                     1.51378           1.95513M    1.90619M   45.9988M       85.7675M/s   4.95455M   755.785M   1093.62M         23.7751    1.95513/s 2.13818G/s     1.65551G               35.9902                1.51378      1000k       1.95513M/s [BEST: throughput=  0.09 GB/s doc_throughput=     1 docs/s instructions=  1655506341 cycles=  1093623965 branch_miss= 1906189 cache_miss= 4954553 cache_ref= 755785463 items=   1000000 avg_time= 511474203 ns]
large_random<rapidjson_lossless>/manual_time           393093149 ns    396699980 ns            2         2.30157M           117.288M        4.95442M       953.223M    1.22609G              26.6549            2.5498       3.12629G          1.97048G                    42.8377                     1.60712            2.5498M    2.29525M   45.9988M       111.597M/s   4.95512M   953.228M    1.2265G         26.6637    2.54393/s 3.12012G/s     1.97049G               42.8378                1.60659      1000k       2.54393M/s [BEST: throughput=  0.12 GB/s doc_throughput=     2 docs/s instructions=  1970483093 cycles=  1226094053 branch_miss= 2301571 cache_miss= 4954423 cache_ref= 953223034 items=   1000000 avg_time= 393093149 ns]
large_random<rapidjson_insitu>/manual_time             332603420 ns    336224113 ns            2         2.06634M           138.586M        5.67002M       734.585M    1033.44M              22.4667           3.01282       3.11357G          1.55051G                    33.7076                     1.50034           3.01282M    2.05278M   45.9988M       131.892M/s   5.67035M   734.578M   1033.46M         22.4671    3.00658/s 3.10718G/s     1.55051G               33.7077                1.50031      1000k       3.00658M/s [BEST: throughput=  0.14 GB/s doc_throughput=     3 docs/s instructions=  1550507166 cycles=  1033438492 branch_miss= 2066344 cache_miss= 5670024 cache_ref= 734585040 items=   1000000 avg_time= 332603420 ns]
large_random<nlohmann_json>/manual_time               2667359442 ns   2670934279 ns            1         13.1608M           17.2451M        27.2549M       5.82672G    8.52361G              185.301          0.374903       3.19552G          12.0941G                    262.922                     1.41889           374.903k    13.1608M   45.9988M       16.4462M/s   27.2549M   5.82672G   8.52361G         185.301   0.374903/s 3.19552G/s     12.0941G               262.922                1.41889      1000k       374.903k/s [BEST: throughput=  0.02 GB/s doc_throughput=     0 docs/s instructions= 12094074991 cycles=  8523612642 branch_miss=13160773 cache_miss=27254919 cache_ref=5826724538 items=   1000000 avg_time=2667359442 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                       380108464 ns    390845946 ns            2         1.10333M           361.297M        6.94282M       246.889M    1.21494G              8.84851           2.63135       3.19694G          1.14604G                    8.34671                    0.943289           1.37958M     1.1037M   137.305M       344.492M/s    6.9428M   246.888M   1.21519G         8.85028    2.63083/s 3.19695G/s     1.14604G               8.34671               0.943101   524.288k       1.37931M/s [BEST: throughput=  0.36 GB/s doc_throughput=     2 docs/s instructions=  1146044374 cycles=  1214944534 branch_miss= 1103327 cache_miss= 6942816 cache_ref= 246889264 items=    524288 avg_time= 380108464 ns]
kostya<simdjson_ondemand>/manual_time                  260126958 ns    270848023 ns            3         1.32085M           529.014M        5.28226M       138.097M    829.736M              6.04302           3.85284       3.19684G          796.596M                    5.80166                    0.960059              2.02M    1.39055M   137.305M       503.386M/s   5.28221M   138.311M   831.574M          6.0564    3.84428/s  3.1968G/s     796.596M               5.80166               0.957938   524.288k       2.01551M/s [BEST: throughput=  0.53 GB/s doc_throughput=     3 docs/s instructions=   796596297 cycles=   829736479 branch_miss= 1320851 cache_miss= 5282262 cache_ref= 138096595 items=    524288 avg_time= 260126958 ns]
kostya<yyjson>/manual_time                             335179791 ns    304507901 ns            2         980.033k           467.348M        7.99074M       344.576M    896.187M              6.52698           3.40373       3.05037G          1052.15M                    7.66289                     1.17403           1.78453M    982.687k   137.305M       390.669M/s   7.99041M   344.585M   895.779M         6.52401    2.98347/s 2.67253G/s     1052.15M               7.66289                1.17457   524.288k        1.5642M/s [BEST: throughput=  0.47 GB/s doc_throughput=     3 docs/s instructions=  1052152416 cycles=   896186820 branch_miss=  980033 cache_miss= 7990738 cache_ref= 344576212 items=    524288 avg_time= 335179791 ns]
kostya<yyjson_insitu>/manual_time                      276098190 ns    286842424 ns            3         1040.15k           497.543M        5.84082M       310.443M    860.252M              6.26527           3.62363       3.11724G           1030.7M                    7.50663                     1.19813           1.89983M    1027.07k   137.305M       474.267M/s   5.84302M   310.406M   860.669M          6.2683     3.6219/s 3.11726G/s      1030.7M               7.50663                1.19756   524.288k       1.89892M/s [BEST: throughput=  0.50 GB/s doc_throughput=     3 docs/s instructions=  1030698164 cycles=   860252311 branch_miss= 1040154 cache_miss= 5840823 cache_ref= 310443197 items=    524288 avg_time= 276098190 ns]
kostya<sajson>/manual_time                             403663272 ns    414386580 ns            2         7.31829M           340.405M        4.64252M       424.714M    1.28947G              9.39128           2.47919       3.19684G          1.38919G                    10.1176                     1.07734           1.29981M    7.38782M   137.305M        324.39M/s   4.64251M   425.034M   1.29048G         9.39865    2.47731/s 3.19693G/s     1.38919G               10.1176                1.07649   524.288k       1.29883M/s [BEST: throughput=  0.34 GB/s doc_throughput=     2 docs/s instructions=  1389192347 cycles=  1289469448 branch_miss= 7318289 cache_miss= 4642522 cache_ref= 424713884 items=    524288 avg_time= 403663271 ns]
kostya<rapidjson>/manual_time                          565141810 ns    575871581 ns            1         7.10303M           242.957M        5.38809M       970.622M    1.77142G              12.9013           1.76947       3.13446G          2.37304G                     17.283                     1.33963           927.711k    7.10303M   137.305M       231.702M/s   5.38809M   970.622M   1.77142G         12.9013    1.76947/s 3.13446G/s     2.37304G                17.283                1.33963   524.288k       927.711k/s [BEST: throughput=  0.24 GB/s doc_throughput=     1 docs/s instructions=  2373037325 cycles=  1771416052 branch_miss= 7103032 cache_miss= 5388088 cache_ref= 970621821 items=    524288 avg_time= 565141810 ns]
kostya<rapidjson_lossless>/manual_time                 593224776 ns    603945270 ns            1         7.87523M           231.455M        5.38675M       1096.33M    1.86114G              13.5548            1.6857       3.13733G          2.55706G                    18.6232                     1.37392           883.793k    7.87523M   137.305M       220.733M/s   5.38675M   1096.33M   1.86114G         13.5548     1.6857/s 3.13733G/s     2.55706G               18.6232                1.37392   524.288k       883.793k/s [BEST: throughput=  0.23 GB/s doc_throughput=     1 docs/s instructions=  2557055769 cycles=  1861140994 branch_miss= 7875228 cache_miss= 5386749 cache_ref=1096332403 items=    524288 avg_time= 593224776 ns]
kostya<rapidjson_insitu>/manual_time                   548734665 ns    559427691 ns            1         7.40097M           250.221M        6.35586M       866.064M    1.71972G              12.5248           1.82237       3.13397G          2.17212G                    15.8197                     1.26307           955.449k    7.40097M   137.305M       238.629M/s   6.35586M   866.064M   1.71972G         12.5248    1.82237/s 3.13397G/s     2.17212G               15.8197                1.26307   524.288k       955.449k/s [BEST: throughput=  0.25 GB/s doc_throughput=     1 docs/s instructions=  2172119139 cycles=  1719716724 branch_miss= 7400965 cache_miss= 6355862 cache_ref= 866063656 items=    524288 avg_time= 548734665 ns]
kostya<nlohmann_json>/manual_time                     4012601642 ns   4023349842 ns            1         27.9343M           34.2184M        37.6494M        7.8549G    12.8276G              93.4239          0.249215       3.19682G          15.0753G                    109.794                     1.17523            130.66k    27.9343M   137.305M       32.6333M/s   37.6494M    7.8549G   12.8276G         93.4239   0.249215/s 3.19682G/s     15.0753G               109.794                1.17523   524.288k        130.66k/s [BEST: throughput=  0.03 GB/s doc_throughput=     0 docs/s instructions= 15075319697 cycles= 12827571504 branch_miss=27934335 cache_miss=37649418 cache_ref=7854904978 items=    524288 avg_time=4012601642 ns]
distinct_user_id<simdjson_dom>/manual_time               1565510 ns      1652559 ns          447          16.611k           404.672M         26.517k       890.008k    4.99603M              7.91119           640.796       3.20144G          3.85168M                    6.09911                    0.770948           73.6915k    16.9593k   631.515k       384.705M/s   26.5216k   890.355k   5.00623M         7.92733    638.769/s 3.19782G/s     3.85168M               6.09911               0.769378        115       73.4585k/s [BEST: throughput=  0.40 GB/s doc_throughput=   640 docs/s instructions=     3851681 cycles=     4996032 branch_miss=   16611 cache_miss=   26517 cache_ref=    890008 items=       115 avg_time=   1565510 ns]
distinct_user_id<simdjson_ondemand>/manual_time          1058117 ns      1142136 ns          662           6.867k           598.033M         22.415k       400.327k    3.38098M              5.35376           946.981       3.20173G          2.73848M                    4.33637                    0.809967           108.903k    6.95273k   631.515k        569.18M/s   22.4212k   400.683k   3.38421M         5.35887    945.075/s 3.19833G/s     2.73848M               4.33637               0.809194        115       108.684k/s [BEST: throughput=  0.60 GB/s doc_throughput=   946 docs/s instructions=     2738482 cycles=     3380981 branch_miss=    6867 cache_miss=   22415 cache_ref=    400327 items=       115 avg_time=   1058117 ns]
distinct_user_id<yyjson>/manual_time                     1195951 ns      1283918 ns          607          48.017k           573.856M         24.237k       1.47689M    3.47544M              5.50334           908.698       3.15812G          3.51486M                    5.56576                     1.01134             104.5k    47.6165k   631.515k       503.582M/s   24.2137k   1.47751M   3.69524M         5.85139    836.155/s 3.08979G/s       3.515M               5.56598               0.951225        115       96.1578k/s [BEST: throughput=  0.57 GB/s doc_throughput=   908 docs/s instructions=     3514860 cycles=     3475440 branch_miss=   48017 cache_miss=   24237 cache_ref=   1476888 items=       115 avg_time=   1195950 ns]
distinct_user_id<yyjson_insitu>/manual_time              1144261 ns      1231503 ns          614          47.864k           606.896M         14.408k         1.319M    3.33163M              5.27561           961.015       3.20175G          3.41573M                    5.40878                     1.02524           110.517k    47.6939k   631.515k       526.331M/s   14.3905k   1.31887M   3.54431M         5.61239    873.926/s 3.09746G/s     3.41572M               5.40877                0.96372        115       100.502k/s [BEST: throughput=  0.61 GB/s doc_throughput=   961 docs/s instructions=     3415726 cycles=     3331629 branch_miss=   47864 cache_miss=   14408 cache_ref=   1318999 items=       115 avg_time=   1144261 ns]
distinct_user_id<sajson>/manual_time                     1472420 ns      1558879 ns          475          69.165k           430.101M         12.861k       1.86058M    4.70047M              7.44316           681.062       3.20131G          5.24709M                    8.30873                     1.11629           78.3221k    69.6227k   631.515k       409.027M/s   12.9224k   1.86174M   4.70873M         7.45624    679.154/s 3.19795G/s     5.24709M               8.30874                1.11433        115       78.1027k/s [BEST: throughput=  0.43 GB/s doc_throughput=   681 docs/s instructions=     5247090 cycles=     4700467 branch_miss=   69165 cache_miss=   12861 cache_ref=   1860580 items=       115 avg_time=   1472420 ns]
distinct_user_id<rapidjson>/manual_time                  2788466 ns      2877588 ns          251          74.869k           233.179M         13.777k       6.25559M    8.66888M              13.7271           369.238       3.20088G          13.3287M                    21.1059                     1.53753           42.4624k    74.9527k   631.515k       215.982M/s   14.0132k   6.25433M   8.72685M         13.8189     358.62/s 3.12962G/s     13.3293M               21.1069                1.52739        115       41.2413k/s [BEST: throughput=  0.23 GB/s doc_throughput=   369 docs/s instructions=    13328681 cycles=     8668885 branch_miss=   74869 cache_miss=   13777 cache_ref=   6255588 items=       115 avg_time=   2788466 ns]
distinct_user_id<rapidjson_insitu>/manual_time           2126205 ns      2216473 ns          334           59.39k            306.29M         14.138k       3.41749M    6.59994M               10.451           485.008       3.20102G          9.72921M                    15.4061                     1.47414           55.7759k    59.6593k   631.515k       283.256M/s   14.3095k   3.41957M   6.64255M         10.5184    470.321/s 3.12413G/s     9.72969M               15.4069                1.46475        115        54.087k/s [BEST: throughput=  0.31 GB/s doc_throughput=   485 docs/s instructions=     9729210 cycles=     6599939 branch_miss=   59390 cache_miss=   14138 cache_ref=   3417486 items=       115 avg_time=   2126205 ns]
distinct_user_id<nlohmann_json>/manual_time             15971958 ns     16064950 ns           44         329.769k           42.9987M        161.294k       36.3761M    46.9517M              74.3477           68.0881       3.19685G          64.3715M                    101.932                     1.37102           7.83013k      343.6k   631.515k       37.7073M/s   217.366k   35.8458M   51.0543M         80.8442    62.6097/s  3.1965G/s     62.7939M               99.4337                1.22994        115       7.20012k/s [BEST: throughput=  0.04 GB/s doc_throughput=    68 docs/s instructions=    64371488 cycles=    46951690 branch_miss=  329769 cache_miss=  161294 cache_ref=  36376053 items=       115 avg_time=  15971957 ns]
find_tweet<simdjson_dom>/manual_time                     1518355 ns      1604714 ns          461          16.469k           416.859M         23.483k       874.004k    4.84964M              7.67937           660.093       3.20121G          3.76235M                    5.95766                    0.775801            660.093    16.6955k   631.515k       396.653M/s    23.464k   874.034k   4.85553M          7.6887    658.608/s 3.19789G/s     3.76235M               5.95766                0.77486          1        658.608/s [BEST: throughput=  0.42 GB/s doc_throughput=   660 docs/s instructions=     3762353 cycles=     4849637 branch_miss=   16469 cache_miss=   23483 cache_ref=    874004 items=         1 avg_time=   1518354 ns]
find_tweet<simdjson_ondemand>/manual_time                 915570 ns      1002412 ns          765           4.017k           691.095M         11.564k       194.088k    2.92616M              4.63355           1094.34       3.20222G          2.05905M                    3.26049                    0.703671            1094.34    4.11748k   631.515k       657.798M/s   11.5619k   194.121k   2.92857M         4.63738    1092.22/s 3.19864G/s     2.05905M               3.26049               0.703089          1        1092.22/s [BEST: throughput=  0.69 GB/s doc_throughput=  1094 docs/s instructions=     2059051 cycles=     2926156 branch_miss=    4017 cache_miss=   11564 cache_ref=    194088 items=         1 avg_time=    915569 ns]
find_tweet<yyjson>/manual_time                           1188935 ns      1279231 ns          591          47.728k           602.342M         21.669k       1.46035M    3.35709M              5.31593           953.805       3.20201G          3.45931M                    5.47779                     1.03045            953.805    47.5691k   631.515k       506.554M/s   21.7169k   1.46193M   3.57637M         5.66315    841.089/s 3.00804G/s     3.45952M               5.47813               0.967329          1        841.089/s [BEST: throughput=  0.60 GB/s doc_throughput=   953 docs/s instructions=     3459309 cycles=     3357092 branch_miss=   47728 cache_miss=   21669 cache_ref=   1460345 items=         1 avg_time=   1188934 ns]
find_tweet<yyjson_insitu>/manual_time                    1323537 ns      1200421 ns          634          47.567k           627.895M         11.889k       1.30234M    3.22087M              5.10023           994.267       3.20241G          3.36031M                    5.32103                     1.04329            994.267    47.5183k   631.515k       455.038M/s   11.9211k     1.303M   3.42686M         5.42641    755.551/s 2.58917G/s     3.36046M               5.32127               0.980624          1        755.551/s [BEST: throughput=  0.63 GB/s doc_throughput=   994 docs/s instructions=     3360313 cycles=     3220872 branch_miss=   47567 cache_miss=   11889 cache_ref=   1302339 items=         1 avg_time=   1323536 ns]
find_tweet<sajson>/manual_time                           1427576 ns      1518597 ns          490          68.847k           443.415M         10.307k       1.84071M    4.55929M              7.21961           702.146       3.20129G          5.16187M                    8.17378                     1.13216            702.146    69.1836k   631.515k       421.876M/s   10.2978k   1.84102M   4.56527M         7.22907    700.488/s 3.19792G/s     5.16187M               8.17379                1.13068          1        700.488/s [BEST: throughput=  0.44 GB/s doc_throughput=   702 docs/s instructions=     5161867 cycles=     4559295 branch_miss=   68847 cache_miss=   10307 cache_ref=   1840707 items=         1 avg_time=   1427576 ns]
find_tweet<rapidjson>/manual_time                        2757465 ns      2851689 ns          254          75.006k           235.237M         10.972k       6.24624M    8.59269M              13.6065           372.496       3.20075G          13.2842M                    21.0354                     1.54598            372.496    74.8829k   631.515k       218.411M/s   11.2337k   6.24606M   8.62504M         13.6577    362.652/s 3.12789G/s     13.2847M               21.0362                1.54025          1        362.652/s [BEST: throughput=  0.24 GB/s doc_throughput=   372 docs/s instructions=    13284154 cycles=     8592694 branch_miss=   75006 cache_miss=   10972 cache_ref=   6246241 items=         1 avg_time=   2757465 ns]
find_tweet<rapidjson_insitu>/manual_time                 2098349 ns      2195885 ns          339          59.475k           309.539M         10.854k       3.40585M    6.53023M              10.3406           490.154       3.20081G          9.68532M                    15.3366                     1.48315            490.154    59.5348k   631.515k       287.016M/s   10.9948k   3.40692M   6.55342M         10.3773    476.565/s 3.12313G/s      9.6858M               15.3374                1.47798          1        476.565/s [BEST: throughput=  0.31 GB/s doc_throughput=   490 docs/s instructions=     9685324 cycles=     6530228 branch_miss=   59475 cache_miss=   10854 cache_ref=   3405848 items=         1 avg_time=   2098349 ns]
find_tweet<nlohmann_json>/manual_time                   12989721 ns     13091816 ns           55         252.928k           53.1924M         89.141k       30.9902M    37.9573M              60.1051           84.2298       3.19713G          54.4251M                    86.1818                     1.43385            84.2298    266.878k   631.515k       46.3643M/s   139.861k   30.4591M   41.5252M         65.7549     76.984/s 3.19677G/s     52.8615M               83.7059                  1.273          1         76.984/s [BEST: throughput=  0.05 GB/s doc_throughput=    84 docs/s instructions=    54425121 cycles=    37957265 branch_miss=  252928 cache_miss=   89141 cache_ref=  30990191 items=         1 avg_time=  12989720 ns]
top_tweet<simdjson_dom>/manual_time                      1552705 ns      1653868 ns          450            16.8k           407.668M         25.549k        880.79k     4.9593M              7.85302           645.539       3.20142G          3.80075M                    6.01846                    0.766388            645.539    17.0137k   631.515k       387.878M/s   25.5555k   881.557k    4.9656M           7.863    644.037/s 3.19804G/s     3.80074M               6.01845               0.765414          1        644.037/s [BEST: throughput=  0.41 GB/s doc_throughput=   645 docs/s instructions=     3800745 cycles=     4959298 branch_miss=   16800 cache_miss=   25549 cache_ref=    880790 items=         1 avg_time=   1552704 ns]
top_tweet<simdjson_ondemand>/manual_time                 1054761 ns      1158501 ns          664           6.481k           600.382M         22.443k       379.445k    3.36816M              5.33346           950.701       3.20212G          2.70591M                    4.28478                    0.803378            950.701    6.68878k   631.515k       570.992M/s   22.4441k   380.139k    3.3737M         5.34223    948.082/s 3.19854G/s     2.70591M               4.28479               0.802059          1        948.082/s [BEST: throughput=  0.60 GB/s doc_throughput=   950 docs/s instructions=     2705905 cycles=     3368161 branch_miss=    6481 cache_miss=   22443 cache_ref=    379445 items=         1 avg_time=   1054760 ns]
top_tweet<simdjson_ondemand_forward_only>/manual_time    1070297 ns      1176723 ns          654           6.734k           591.509M         22.715k       394.109k    3.41801M               5.4124           936.651       3.20149G           2.7344M                     4.3299                    0.799996            936.651    6.92145k   631.515k       562.703M/s    22.715k   394.608k   3.42283M         5.42003     934.32/s 3.19802G/s     2.73439M                4.3299               0.798869          1         934.32/s [BEST: throughput=  0.59 GB/s doc_throughput=   936 docs/s instructions=     2734396 cycles=     3418012 branch_miss=    6734 cache_miss=   22715 cache_ref=    394109 items=         1 avg_time=   1070297 ns]
top_tweet<yyjson>/manual_time                            1214239 ns      1325930 ns          580          47.722k           582.323M          23.32k       1.46706M     3.4239M              5.42172           922.104       3.15719G          3.48272M                    5.51486                     1.01718            922.104    47.7823k   631.515k       495.998M/s    23.392k    1.4693M   3.65551M         5.78847    823.561/s 3.01053G/s     3.48294M               5.51522               0.952794          1        823.561/s [BEST: throughput=  0.58 GB/s doc_throughput=   922 docs/s instructions=     3482718 cycles=     3423899 branch_miss=   47722 cache_miss=   23320 cache_ref=   1467064 items=         1 avg_time=   1214239 ns]
top_tweet<yyjson_insitu>/manual_time                     1133009 ns      1246527 ns          621          47.658k           614.706M         13.597k        1.3102M    3.29008M              5.20981           973.384       3.20251G          3.38373M                    5.35812                     1.02847            973.384    47.7348k   631.515k       531.558M/s   13.6104k   1.31016M   3.50916M         5.55674    882.606/s 3.09721G/s     3.38388M               5.35836               0.964299          1        882.606/s [BEST: throughput=  0.61 GB/s doc_throughput=   973 docs/s instructions=     3383730 cycles=     3290076 branch_miss=   47658 cache_miss=   13597 cache_ref=   1310197 items=         1 avg_time=   1133008 ns]
top_tweet<sajson>/manual_time                            1449059 ns      1562866 ns          483          69.203k           437.073M         11.887k       1.84898M     4.6253M              7.32413           692.103       3.20118G          5.18707M                     8.2137                     1.12146            692.103    69.4162k   631.515k       415.621M/s    11.898k   1.84995M   4.63369M         7.33742    690.103/s 3.19772G/s     5.18708M                8.2137                1.11943          1        690.103/s [BEST: throughput=  0.44 GB/s doc_throughput=   692 docs/s instructions=     5187073 cycles=     4625296 branch_miss=   69203 cache_miss=   11887 cache_ref=   1848976 items=         1 avg_time=   1449058 ns]
top_tweet<rapidjson>/manual_time                         3127551 ns      3067752 ns          252              75k           233.691M         12.882k       6.25289M    8.64938M              13.6962           370.049       3.20069G          13.3179M                    21.0889                     1.53976            370.049    75.0477k   631.515k       192.566M/s   13.1199k   6.25514M   8.69219M          13.764    319.739/s 2.77923G/s     13.3186M               21.0898                1.53224          1        319.739/s [BEST: throughput=  0.23 GB/s doc_throughput=   370 docs/s instructions=    13317934 cycles=     8649378 branch_miss=   75000 cache_miss=   12882 cache_ref=   6252889 items=         1 avg_time=   3127551 ns]
top_tweet<rapidjson_insitu>/manual_time                  2119373 ns      2240144 ns          335          59.836k           306.647M         13.034k       3.41614M    6.59174M               10.438           485.574       3.20077G          9.71666M                    15.3863                     1.47407            485.574    59.6593k   631.515k       284.169M/s   13.2065k   3.41643M   6.61989M         10.4826    471.838/s 3.12351G/s     9.71726M               15.3872                1.46789          1        471.838/s [BEST: throughput=  0.31 GB/s doc_throughput=   485 docs/s instructions=     9716663 cycles=     6591740 branch_miss=   59836 cache_miss=   13034 cache_ref=   3416145 items=         1 avg_time=   2119373 ns]
top_tweet<nlohmann_json>/manual_time                    18521768 ns     18647828 ns           38         424.265k           34.2265M        343.095k       42.2263M    59.0117M              93.4447           54.1975       3.19829G          76.2897M                    120.804                     1.29279            54.1975     426.71k   631.515k       32.5163M/s   342.225k    42.287M    59.209M         93.7571    53.9905/s 3.19673G/s     76.4453M               121.051                1.29111          1        53.9905/s [BEST: throughput=  0.03 GB/s doc_throughput=    54 docs/s instructions=    76289664 cycles=    59011715 branch_miss=  424265 cache_miss=  343095 cache_ref=  42226326 items=         1 avg_time=  18521768 ns]
