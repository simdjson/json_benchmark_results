run_benchmark: v0.8.0~2 /home/jkeiser/simdjson_benchmark_results/v0.7.0/36/skylake-gcc10.2.json -DCMAKE_BUILD_TYPE=Release
git reset --hard v0.8.0~2
HEAD is now at 2a714f4e Hide the std::pair inheritance in our result instances (#1396)
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The CXX compiler identification is GNU 10.2.0
-- The C compiler identification is GNU 10.2.0
-- Check for working CXX compiler: /usr/bin/g++-10
-- Check for working CXX compiler: /usr/bin/g++-10 -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Check for working C compiler: /usr/bin/gcc-10
-- Check for working C compiler: /usr/bin/gcc-10 -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed
-- Check if compiler accepts -pthread
-- Check if compiler accepts -pthread - yes
-- Found Threads: TRUE  
-- Looking for fork
-- Looking for fork - found
-- Looking for wait
-- Looking for wait - found
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- Found Git: /usr/bin/git (found version "2.27.0") 
-- git Version: v0.2.1-2a714f4e
-- Version: 0.2.1
-- Performing Test HAVE_CXX_FLAG_STD_CXX11
-- Performing Test HAVE_CXX_FLAG_STD_CXX11 - Success
-- Performing Test HAVE_CXX_FLAG_WALL
-- Performing Test HAVE_CXX_FLAG_WALL - Success
-- Performing Test HAVE_CXX_FLAG_WEXTRA
-- Performing Test HAVE_CXX_FLAG_WEXTRA - Success
-- Performing Test HAVE_CXX_FLAG_WSHADOW
-- Performing Test HAVE_CXX_FLAG_WSHADOW - Success
-- Performing Test HAVE_CXX_FLAG_WERROR
-- Performing Test HAVE_CXX_FLAG_WERROR - Success
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32 - Failed
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED - Success
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WD654
-- Performing Test HAVE_CXX_FLAG_WD654 - Failed
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY - Failed
-- Performing Test HAVE_CXX_FLAG_COVERAGE
-- Performing Test HAVE_CXX_FLAG_COVERAGE - Success
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Performing Test USE_BOOST_JSON
-- Performing Test USE_BOOST_JSON - Failed
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Found Python3: /usr/bin/python3.8 (found version "3.8.6") found components: Interpreter 
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 10
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
Scanning dependencies of target benchmark
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_api_internal.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_name.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_name.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_register.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_register.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_runner.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_runner.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/colorprint.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/colorprint.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/commandlineflags.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/commandlineflags.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/complexity.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/complexity.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/console_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/console_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/counter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/counter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/csv_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/csv_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/json_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/json_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/sleep.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sleep.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/statistics.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/statistics.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/string_util.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/string_util.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/sysinfo.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sysinfo.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/timers.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/timers.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -P CMakeFiles/benchmark.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/benchmark.dir/link.txt --verbose=1
/usr/bin/ar qc libbenchmark.a  CMakeFiles/benchmark.dir/benchmark.cc.o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o CMakeFiles/benchmark.dir/benchmark_name.cc.o CMakeFiles/benchmark.dir/benchmark_register.cc.o CMakeFiles/benchmark.dir/benchmark_runner.cc.o CMakeFiles/benchmark.dir/colorprint.cc.o CMakeFiles/benchmark.dir/commandlineflags.cc.o CMakeFiles/benchmark.dir/complexity.cc.o CMakeFiles/benchmark.dir/console_reporter.cc.o CMakeFiles/benchmark.dir/counter.cc.o CMakeFiles/benchmark.dir/csv_reporter.cc.o CMakeFiles/benchmark.dir/json_reporter.cc.o CMakeFiles/benchmark.dir/reporter.cc.o CMakeFiles/benchmark.dir/sleep.cc.o CMakeFiles/benchmark.dir/statistics.cc.o CMakeFiles/benchmark.dir/string_util.cc.o CMakeFiles/benchmark.dir/sysinfo.cc.o CMakeFiles/benchmark.dir/timers.cc.o
/usr/bin/ranlib libbenchmark.a
[ 80%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
Scanning dependencies of target generated-data
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated && /usr/bin/ruby genfeaturejson.rb /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-miss.json ...
[ 80%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/g++-10  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/src  -O3 -DNDEBUG -fPIC   -pthread -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/g++-10 -fPIC -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.6 -o ../libsimdjson.so.6.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.6.0.0 ../libsimdjson.so.6 ../libsimdjson.so
[ 80%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
Scanning dependencies of target yyjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/gcc-10  -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src  -O3 -DNDEBUG   -o CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o   -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src/yyjson.c
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -P CMakeFiles/yyjson.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -E cmake_link_script CMakeFiles/yyjson.dir/link.txt --verbose=1
/usr/bin/ar qc libyyjson.a  CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o
/usr/bin/ranlib libyyjson.a
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/g++-10  -DRAPIDJSON_HAS_STDSTRING -DSAJSON_UNSORTED_OBJECT_KEYS -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_COMPETITION_NLOHMANN_JSON -DSIMDJSON_COMPETITION_RAPIDJSON -DSIMDJSON_COMPETITION_SAJSON -DSIMDJSON_COMPETITION_YYJSON -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/rapidjson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/sajson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/json  -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/g++-10  -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.6.0.0 ../_deps/google_benchmarks/src/libbenchmark.a ../dependencies/libyyjson.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/36/skylake-gcc10.2.json --benchmark_out_format=json
2021-01-24 23:51:53
Running benchmark/bench_ondemand
Run on (4 X 4000 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 256 KiB (x4)
  L3 Unified 8192 KiB (x1)
Load Average: 1.00, 1.00, 1.00
simdjson::dom implementation:      haswell
simdjson::ondemand implementation: fallback

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                  262669 ns       290841 ns         2666            3.78k           2.42086G               0        87.131k    963.274k              1.52534          3.83342k       3.69263G           2.9625M                     4.6911                     3.07545           383.342k    3.96063k   631.515k       2.23911G/s    1.31245   87.2437k   969.396k         1.53503   3.80707k/s 3.69056G/s      2.9625M                4.6911                3.05603        100       380.707k/s [BEST: throughput=  2.42 GB/s doc_throughput=  3833 docs/s instructions=     2962503 cycles=      963274 branch_miss=    3780 cache_miss=       0 cache_ref=     87131 items=       100 avg_time=    262669 ns]
partial_tweets<simdjson_ondemand>/manual_time             190842 ns       218861 ns         3670           2.237k           3.32912G               0        54.994k    700.543k              1.10931          5.27165k       3.69302G          2.46019M                    3.89569                     3.51183           527.165k    2.37591k   631.515k       3.08184G/s   0.479837   55.0071k   704.393k          1.1154   5.23994k/s 3.69098G/s     2.46019M               3.89569                3.49264        100       523.994k/s [BEST: throughput=  3.33 GB/s doc_throughput=  5271 docs/s instructions=     2460189 cycles=      700543 branch_miss=    2237 cache_miss=       0 cache_ref=     54994 items=       100 avg_time=    190841 ns]
partial_tweets<yyjson>/manual_time                        699669 ns       730094 ns         1000           9.478k           1.54285G             298        74.573k     1.5117M              2.39377          2.44309k       3.69322G          2.90845M                    4.60552                     1.92396           244.309k    7.57142k   631.515k       860.777M/s    984.756   49.3046k   1.73374M         2.74536   1.42925k/s 2.47794G/s     2.90915M               4.60661                1.67796        100       142.925k/s [BEST: throughput=  1.54 GB/s doc_throughput=  2443 docs/s instructions=     2908453 cycles=     1511699 branch_miss=    9478 cache_miss=     298 cache_ref=     74573 items=       100 avg_time=    699669 ns]
partial_tweets<yyjson_insitu>/manual_time                 490078 ns       519005 ns         1428           7.452k           1.70645G               6        45.396k    1.36658M              2.16396          2.70215k       3.69269G          2.90834M                    4.60534                      2.1282           270.215k    7.39831k   631.515k        1.2001G/s    140.761   31.9006k   1.46388M         2.31805   2.04049k/s 2.98704G/s     2.90861M               4.60576                1.98691        100       204.049k/s [BEST: throughput=  1.71 GB/s doc_throughput=  2702 docs/s instructions=     2908343 cycles=     1366576 branch_miss=    7452 cache_miss=       6 cache_ref=     45396 items=       100 avg_time=    490078 ns]
partial_tweets<sajson>/manual_time                        540951 ns       569283 ns         1292          10.594k           1.18163G               0        45.911k    1.97309M              3.12437           1.8711k       3.69185G          6.05184M                    9.58305                     3.06719            187.11k    11.1127k   631.515k       1113.33M/s    1.40248   45.8792k    1.9961M         3.16081   1.84859k/s 3.68997G/s     6.05184M               9.58305                3.03184        100       184.859k/s [BEST: throughput=  1.18 GB/s doc_throughput=  1871 docs/s instructions=     6051839 cycles=     1973089 branch_miss=   10594 cache_miss=       0 cache_ref=     45911 items=       100 avg_time=    540951 ns]
partial_tweets<rapidjson>/manual_time                    1447629 ns      1476604 ns          481          27.065k           507.865M         10.456k        52.553k    4.59037M              7.26883           804.201       3.69158G           13.409M                     21.233                     2.92111           80.4201k    27.3911k   631.515k       416.032M/s    481.349   32.7009k   4.75443M         7.52862    690.784/s 3.28429G/s     13.4097M               21.2342                2.82047        100       69.0784k/s [BEST: throughput=  0.51 GB/s doc_throughput=   804 docs/s instructions=    13408987 cycles=     4590374 branch_miss=   27065 cache_miss=   10456 cache_ref=     52553 items=       100 avg_time=   1447629 ns]
partial_tweets<rapidjson_insitu>/manual_time              989161 ns      1017784 ns          711          24.355k           728.139M              25        43.285k    3.20183M              5.07007            1.153k       3.69172G          9.75482M                    15.4467                     3.04664             115.3k    24.3343k   631.515k       608.859M/s    215.719   33.8201k   3.30283M         5.23001    1010.96/s 3.33902G/s     9.75542M               15.4476                2.95366        100       101.096k/s [BEST: throughput=  0.73 GB/s doc_throughput=  1153 docs/s instructions=     9754815 cycles=     3201827 branch_miss=   24355 cache_miss=      25 cache_ref=     43285 items=       100 avg_time=    989161 ns]
partial_tweets<nlohmann_json>/manual_time                8510565 ns      8545061 ns           90         137.623k           83.9841M              39       223.053k      27.75M              43.9419           132.988       3.69042G          71.1843M                     112.72                      2.5652           13.2988k    240.567k   631.515k       70.7661M/s      481.9   381.263k   31.3976M         49.7179    117.501/s 3.68925G/s     70.2195M               111.192                2.23646        100       11.7501k/s [BEST: throughput=  0.08 GB/s doc_throughput=   132 docs/s instructions=    71184329 cycles=    27749960 branch_miss=  137623 cache_miss=      39 cache_ref=    223053 items=       100 avg_time=   8510564 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                  91933609 ns     95325718 ns            8          872.95k           503.165M        10.9487M       15.1848M    337.236M               7.3314           10.9387        3.6889G          983.113M                    21.3726                     2.91521           10.9387M    868.097k   45.9988M       477.169M/s   10.9561M   15.1961M   339.113M         7.37223    10.8774/s 3.68868G/s     983.113M               21.3726                2.89907      1000k       10.8774M/s [BEST: throughput=  0.50 GB/s doc_throughput=    10 docs/s instructions=   983112701 cycles=   337235606 branch_miss=  872950 cache_miss=10948734 cache_ref=  15184763 items=   1000000 avg_time=  91933609 ns]
large_random<simdjson_ondemand>/manual_time             59899302 ns     63260099 ns           12         895.458k            769.69M        5.65365M       7.87418M    220.469M              4.79293           16.7328       3.68907G           642.49M                    13.9675                      2.9142           16.7328M     898.24k   45.9988M        732.36M/s   5.67573M   7.87812M   220.955M         4.80349    16.6947/s 3.68877G/s      642.49M               13.9675                2.90779      1000k       16.6947M/s [BEST: throughput=  0.77 GB/s doc_throughput=    16 docs/s instructions=   642489790 cycles=   220468764 branch_miss=  895458 cache_miss= 5653646 cache_ref=   7874179 items=   1000000 avg_time=  59899302 ns]
large_random<simdjson_ondemand_unordered>/manual_time   62896177 ns     66262584 ns           11         878.177k           731.705M        5.65727M        7.8819M    231.907M              5.04159           15.9071       3.68896G           646.49M                    14.0545                     2.78771           15.9071M    879.425k   45.9988M       697.465M/s   5.68402M   7.87906M   232.013M         5.04391    15.8992/s 3.68883G/s      646.49M               14.0545                2.78643      1000k       15.8992M/s [BEST: throughput=  0.73 GB/s doc_throughput=    15 docs/s instructions=   646489795 cycles=   231906982 branch_miss=  878177 cache_miss= 5657275 cache_ref=   7881898 items=   1000000 avg_time=  62896177 ns]
large_random<yyjson>/manual_time                       127455716 ns    130865442 ns            5         661.531k           361.177M        5.86049M       9.00967M    350.367M              7.61687           7.85187       2.75103G           944.15M                    20.5255                     2.69475           7.85187M    662.686k   45.9988M       344.181M/s   5.85639M   8.99746M   350.497M          7.6197    7.84586/s 2.74995G/s     944.149M               20.5255                2.69375      1000k       7.84586M/s [BEST: throughput=  0.36 GB/s doc_throughput=     7 docs/s instructions=   944149619 cycles=   350366690 branch_miss=  661531 cache_miss= 5860487 cache_ref=   9009668 items=   1000000 avg_time= 127455715 ns]
large_random<yyjson_insitu>/manual_time                109690318 ns    113103839 ns            6         662.777k           419.601M         4.9855M       7.67027M     319.13M               6.9378             9.122        2.9111G          938.029M                    20.3925                     2.93933             9.122M    662.983k   45.9988M       399.925M/s   4.98227M   7.64204M   319.227M         6.93989    9.11657/s 2.91025G/s     938.029M               20.3925                2.93844      1000k       9.11657M/s [BEST: throughput=  0.42 GB/s doc_throughput=     9 docs/s instructions=   938028858 cycles=   319130101 branch_miss=  662777 cache_miss= 4985496 cache_ref=   7670275 items=   1000000 avg_time= 109690318 ns]
large_random<sajson>/manual_time                        93426923 ns     96811925 ns            7         584.173k           492.784M        8.36737M       12.1849M    344.358M              7.48624            10.713        3.6891G          1099.99M                    23.9134                     3.19432            10.713M    584.139k   45.9988M       469.542M/s   8.38493M   12.1075M   344.649M         7.49258    10.7036/s 3.68897G/s     1099.99M               23.9134                3.19161      1000k       10.7036M/s [BEST: throughput=  0.49 GB/s doc_throughput=    10 docs/s instructions=  1099987388 cycles=   344357781 branch_miss=  584173 cache_miss= 8367375 cache_ref=  12184949 items=   1000000 avg_time=  93426923 ns]
large_random<rapidjson>/manual_time                    173171629 ns    176589264 ns            4          607.18k           277.298M        6.99971M       10.6807M    554.096M              12.0459           6.02838        3.3403G          1.66014G                     36.091                     2.99613           6.02838M    602.988k   45.9988M        253.32M/s   6.43147M   9.92366M   560.081M          12.176    5.77462/s 3.23425G/s     1.66015G               36.0912                2.96413      1000k       5.77462M/s [BEST: throughput=  0.28 GB/s doc_throughput=     6 docs/s instructions=  1660142653 cycles=   554096197 branch_miss=  607180 cache_miss= 6999712 cache_ref=  10680658 items=   1000000 avg_time= 173171629 ns]
large_random<rapidjson_lossless>/manual_time           200666542 ns    204080733 ns            4         594.632k           237.719M        6.99676M       10.6907M    655.955M              14.2603           5.16795       3.38994G          2.02311G                    43.9818                     3.08422           5.16795M    592.367k   45.9988M       218.611M/s   6.42569M   9.93567M   661.464M           14.38    4.98339/s 3.29634G/s     2.02312G                43.982                3.05855      1000k       4.98339M/s [BEST: throughput=  0.24 GB/s doc_throughput=     5 docs/s instructions=  2023109564 cycles=   655955310 branch_miss=  594632 cache_miss= 6996762 cache_ref=  10690706 items=   1000000 avg_time= 200666542 ns]
large_random<rapidjson_insitu>/manual_time             161378942 ns    164781185 ns            5         586.124k           299.477M        8.08243M       12.2124M    508.645M              11.0578           6.51055       3.31156G          1.49214G                    32.4387                     2.93356           6.51055M    585.308k   45.9988M       271.831M/s   7.49352M   11.4207M   515.021M         11.1964     6.1966/s 3.19138G/s     1.49215G               32.4389                2.89726      1000k        6.1966M/s [BEST: throughput=  0.30 GB/s doc_throughput=     6 docs/s instructions=  1492140159 cycles=   508645299 branch_miss=  586124 cache_miss= 8082433 cache_ref=  12212430 items=   1000000 avg_time= 161378942 ns]
large_random<nlohmann_json>/manual_time               1215936754 ns   1219357281 ns            1         4.55741M           37.8299M        46.9294M       60.2596M    4.47337G              97.2497          0.822411       3.67895G          11.9494G                    259.776                     2.67122           822.411k    4.55741M   45.9988M       36.0774M/s   46.9294M   60.2596M   4.47337G         97.2497   0.822411/s 3.67895G/s     11.9494G               259.776                2.67122      1000k       822.411k/s [BEST: throughput=  0.04 GB/s doc_throughput=     0 docs/s instructions= 11949359215 cycles=  4473368285 branch_miss= 4557408 cache_miss=46929408 cache_ref=  60259615 items=   1000000 avg_time=1215936754 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                        85181869 ns     95671329 ns            8         460.404k            1.6149G        15.6488M       21.9536M    313.639M              2.28425           11.7614       3.68884G          945.501M                    6.88614                     3.01461           6.16636M    460.989k   137.305M        1.5012G/s   15.6414M   21.9322M   314.201M         2.28834    11.7396/s 3.68859G/s     945.501M               6.88614                3.00922   524.288k       6.15492M/s [BEST: throughput=  1.61 GB/s doc_throughput=    11 docs/s instructions=   945501401 cycles=   313639495 branch_miss=  460404 cache_miss=15648794 cache_ref=  21953562 items=    524288 avg_time=  85181869 ns]
kostya<simdjson_ondemand>/manual_time                   58245646 ns     68604876 ns           12         493.639k           2.36028G        10.0012M       13.8248M    214.599M              1.56294             17.19       3.68896G          676.213M                     4.9249                     3.15106           9.01252M    494.905k   137.305M       2.19545G/s   10.0173M   13.7347M    214.86M         1.56483    17.1687/s 3.68885G/s     676.213M                4.9249                3.14723   524.288k       9.00133M/s [BEST: throughput=  2.36 GB/s doc_throughput=    17 docs/s instructions=   676213307 cycles=   214598975 branch_miss=  493639 cache_miss=10001156 cache_ref=  13824775 items=    524288 avg_time=  58245645 ns]
kostya<yyjson>/manual_time                             206973276 ns    217411550 ns            3         429.127k           664.008M        11.4237M       16.1708M    565.748M              4.12037           4.83601       2.73596G          984.045M                    7.16686                     1.73937           2.53546M    428.158k   137.305M       632.663M/s    11.425M   16.1902M   565.722M         4.12019    4.83154/s 2.73331G/s     984.045M               7.16686                1.73945   524.288k       2.53312M/s [BEST: throughput=  0.66 GB/s doc_throughput=     4 docs/s instructions=   984045271 cycles=   565747812 branch_miss=  429127 cache_miss=11423676 cache_ref=  16170823 items=    524288 avg_time= 206973275 ns]
kostya<yyjson_insitu>/manual_time                      153553652 ns    164000869 ns            5         421.619k           894.437M        8.80129M       12.1673M    472.083M              3.43821           6.51423       3.07526G          965.775M                     7.0338                     2.04578           3.41533M    421.299k   137.305M       852.759M/s   8.80519M   12.1819M   472.114M         3.43843    6.51238/s 3.07458G/s     965.776M                7.0338                2.04564   524.288k       3.41436M/s [BEST: throughput=  0.89 GB/s doc_throughput=     6 docs/s instructions=   965775476 cycles=   472082791 branch_miss=  421619 cache_miss= 8801286 cache_ref=  12167290 items=    524288 avg_time= 153553652 ns]
kostya<sajson>/manual_time                             135577275 ns    146003475 ns            5         437.881k           1018.33M        12.3747M       17.2518M    497.337M              3.62213           7.41655       3.68852G          1.62034G                     11.801                     3.25804           3.88841M    435.303k   137.305M       965.827M/s   12.4051M   17.2531M   500.143M         3.64257    7.37587/s 3.68899G/s     1.62034G                11.801                3.23976   524.288k       3.86708M/s [BEST: throughput=  1.02 GB/s doc_throughput=     7 docs/s instructions=  1620343045 cycles=   497336609 branch_miss=  437881 cache_miss=12374652 cache_ref=  17251769 items=    524288 avg_time= 135577274 ns]
kostya<rapidjson>/manual_time                          237979038 ns    248440310 ns            3          1026.7k           585.199M        8.13023M       11.8944M    784.342M              5.71241           4.26204        3.3429G          2.29873G                    16.7418                     2.93077           2.23454M    1024.97k   137.305M       550.234M/s   7.82811M   11.5647M   787.147M         5.73284    4.20205/s 3.30763G/s     2.29873G               16.7418                2.92033   524.288k       2.20308M/s [BEST: throughput=  0.59 GB/s doc_throughput=     4 docs/s instructions=  2298729942 cycles=   784342328 branch_miss= 1026700 cache_miss= 8130231 cache_ref=  11894371 items=    524288 avg_time= 237979038 ns]
kostya<rapidjson_lossless>/manual_time                 252843084 ns    263297795 ns            3          946.44k           550.879M        8.12619M       12.0456M    838.066M              6.10368           4.01208       3.36239G          2.50529G                    18.2462                     2.98937           2.10349M    964.725k   137.305M       517.887M/s   7.82292M   11.6353M   841.838M         6.13115    3.95502/s 3.32949G/s     2.50529G               18.2462                2.97598   524.288k       2.07357M/s [BEST: throughput=  0.55 GB/s doc_throughput=     4 docs/s instructions=  2505290876 cycles=   838066194 branch_miss=  946440 cache_miss= 8126189 cache_ref=  12045637 items=    524288 avg_time= 252843084 ns]
kostya<rapidjson_insitu>/manual_time                   222398327 ns    232837768 ns            3         995.535k           627.152M        11.2149M        15.671M    726.632M               5.2921           4.56758       3.31895G          2.03228G                    14.8012                     2.79684           2.39473M    997.889k   137.305M       588.783M/s    10.912M   15.3194M   729.878M         5.31574    4.49644/s 3.28185G/s     2.03228G               14.8012                2.78441   524.288k       2.35743M/s [BEST: throughput=  0.63 GB/s doc_throughput=     4 docs/s instructions=  2032275491 cycles=   726632251 branch_miss=  995535 cache_miss=11214855 cache_ref=  15671031 items=    524288 avg_time= 222398326 ns]
kostya<nlohmann_json>/manual_time                     1604317289 ns   1614780820 ns            1         3.77572M           85.5847M        69.5878M       86.4112M    5.91873G              43.1065          0.623318       3.68925G          15.1471G                    110.317                     2.55917           326.798k    3.77572M   137.305M       81.6199M/s   69.5878M   86.4112M   5.91873G         43.1065   0.623318/s 3.68925G/s     15.1471G               110.317                2.55917   524.288k       326.798k/s [BEST: throughput=  0.09 GB/s doc_throughput=     0 docs/s instructions= 15147050314 cycles=  5918731338 branch_miss= 3775724 cache_miss=69587794 cache_ref=  86411205 items=    524288 avg_time=1604317289 ns]
distinct_user_id<simdjson_dom>/manual_time                258341 ns       288739 ns         2708           3.985k              2.46G               0        88.599k    947.921k              1.50103           3.8954k       3.69253G          2.90343M                    4.59756                     3.06294           447.971k     4.1062k   631.515k       2.27662G/s    1.05945   88.6149k   953.432k         1.50975   3.87085k/s  3.6906G/s     2.90343M               4.59756                3.04524        115       445.148k/s [BEST: throughput=  2.46 GB/s doc_throughput=  3895 docs/s instructions=     2903428 cycles=      947921 branch_miss=    3985 cache_miss=       0 cache_ref=     88599 items=       115 avg_time=    258341 ns]
distinct_user_id<simdjson_ondemand>/manual_time           183292 ns       213012 ns         3817           1.955k           3.47024G               0        53.559k    672.122k               1.0643          5.49511k       3.69338G          2.15107M                    3.40621                     3.20042           631.938k    2.08297k   631.515k       3.20878G/s   0.571391   53.5396k   676.602k         1.07139   5.45577k/s 3.69138G/s     2.15108M               3.40621                3.17923        115       627.413k/s [BEST: throughput=  3.47 GB/s doc_throughput=  5495 docs/s instructions=     2151075 cycles=      672122 branch_miss=    1955 cache_miss=       0 cache_ref=     53559 items=       115 avg_time=    183292 ns]
distinct_user_id<yyjson>/manual_time                      610784 ns       644262 ns         1000           6.615k           1.60602G         22.039k        73.376k    1.45177M              2.29887          2.54312k       3.69202G          2.87509M                    4.55268                      1.9804           292.459k    7.46836k   631.515k       986.044M/s   7.26797k   55.1191k   1.66115M         2.63043   1.63724k/s 2.71971G/s     2.87528M                 4.553                 1.7309        115       188.283k/s [BEST: throughput=  1.61 GB/s doc_throughput=  2543 docs/s instructions=     2875088 cycles=     1451770 branch_miss=    6615 cache_miss=   22039 cache_ref=     73376 items=       115 avg_time=    610783 ns]
distinct_user_id<yyjson_insitu>/manual_time               483927 ns       516300 ns         1445           7.038k           1.72689G           1.28k        44.012k    1.34507M              2.12991          2.73453k       3.67813G          2.87457M                    4.55186                     2.13711           314.471k    7.51003k   631.515k       1.21536G/s    90.5592   30.4185k   1.45411M         2.30258   2.06643k/s 3.00482G/s     2.87483M               4.55228                1.97704        115       237.639k/s [BEST: throughput=  1.73 GB/s doc_throughput=  2734 docs/s instructions=     2874571 cycles=     1345071 branch_miss=    7038 cache_miss=    1280 cache_ref=     44012 items=       115 avg_time=    483927 ns]
distinct_user_id<sajson>/manual_time                      537115 ns       567611 ns         1302          10.746k           1.18798G               0          45.3k    1.96259M              3.10774          1.88117k       3.69195G           5.9843M                    9.47611                     3.04919           216.334k    11.1996k   631.515k       1121.29M/s   0.649002   45.2503k   1.98188M          3.1383    1.8618k/s 3.68987G/s     5.98431M               9.47611                3.01951        115       214.107k/s [BEST: throughput=  1.19 GB/s doc_throughput=  1881 docs/s instructions=     5984305 cycles=     1962587 branch_miss=   10746 cache_miss=       0 cache_ref=     45300 items=       115 avg_time=    537114 ns]
distinct_user_id<rapidjson>/manual_time                  1436562 ns      1466858 ns          492          27.126k           507.296M          9.157k        53.123k    4.59559M              7.27709           803.299       3.69163G            13.35M                    21.1397                     2.90496           92.3794k    27.4434k   631.515k       419.237M/s    875.244   33.5742k   4.74374M         7.51169    696.106/s 3.30215G/s     13.3507M               21.1407                2.81437        115       80.0522k/s [BEST: throughput=  0.51 GB/s doc_throughput=   803 docs/s instructions=    13350023 cycles=     4595589 branch_miss=   27126 cache_miss=    9157 cache_ref=     53123 items=       115 avg_time=   1436562 ns]
distinct_user_id<rapidjson_insitu>/manual_time            967970 ns       998031 ns          801          24.208k           730.732M              76        43.148k    3.19051M              5.05216          1.15711k       3.69177G          9.70627M                    15.3698                     3.04223           133.068k     24.325k   631.515k       622.188M/s   2.06047k   35.1949k   3.28428M         5.20063    1033.09/s 3.39295G/s      9.7066M               15.3703                2.95548        115       118.805k/s [BEST: throughput=  0.73 GB/s doc_throughput=  1157 docs/s instructions=     9706267 cycles=     3190513 branch_miss=   24208 cache_miss=      76 cache_ref=     43148 items=       115 avg_time=    967970 ns]
distinct_user_id<nlohmann_json>/manual_time              7179662 ns      7214516 ns           99         114.387k           91.1109M              53       217.066k    25.5709M              40.4914           144.274       3.68921G          66.6519M                    105.543                     2.60655           16.5915k    130.587k   631.515k       83.8841M/s    943.697   384.602k   26.4869M         41.9418    139.282/s 3.68916G/s     65.3369M               103.461                2.46676        115       16.0175k/s [BEST: throughput=  0.09 GB/s doc_throughput=   144 docs/s instructions=    66651918 cycles=    25570903 branch_miss=  114387 cache_miss=      53 cache_ref=    217066 items=       115 avg_time=   7179662 ns]
find_tweet<simdjson_dom>/manual_time                      245983 ns       274696 ns         2845            3.66k           2.58316G               0        78.598k    902.866k              1.42968          4.09041k        3.6931G          2.82239M                    4.46923                     3.12603           4.09041k    3.77525k   631.515k       2.39099G/s   0.842179    78.564k   907.855k         1.43758   4.06531k/s 3.69072G/s     2.82239M               4.46923                3.10885          1       4.06531k/s [BEST: throughput=  2.58 GB/s doc_throughput=  4090 docs/s instructions=     2822388 cycles=      902866 branch_miss=    3660 cache_miss=       0 cache_ref=     78598 items=         1 avg_time=    245983 ns]
find_tweet<simdjson_ondemand>/manual_time                 116212 ns       144230 ns         6013              865           5.46728G               0        30.799k    426.705k             0.675685          8.65741k       3.69416G          1.50672M                    2.38588                     3.53106           8.65741k     941.902   631.515k       5.06097G/s   0.576251   30.7688k    429.02k        0.679351   8.60498k/s 3.69171G/s     1.50672M               2.38588                3.51201          1       8.60498k/s [BEST: throughput=  5.47 GB/s doc_throughput=  8657 docs/s instructions=     1506722 cycles=      426705 branch_miss=     865 cache_miss=       0 cache_ref=     30799 items=         1 avg_time=    116211 ns]
find_tweet<yyjson>/manual_time                            674442 ns       705011 ns         1088           9.491k           1.59032G             241        64.032k    1.46625M               2.3218          2.51826k        3.6924G          2.82414M                      4.472                     1.92609           2.51826k    7.41994k   631.515k       892.975M/s    1026.16   39.4581k   1.68956M          2.6754   1.48271k/s 2.50512G/s     2.82482M               4.47308                1.67193          1       1.48271k/s [BEST: throughput=  1.59 GB/s doc_throughput=  2518 docs/s instructions=     2824136 cycles=     1466250 branch_miss=    9491 cache_miss=     241 cache_ref=     64032 items=         1 avg_time=    674441 ns]
find_tweet<yyjson_insitu>/manual_time                     473592 ns       503408 ns         1479           6.921k           1.76744G             582        36.015k    1.31597M              2.08383          2.79874k       3.68306G          2.82381M                    4.47149                      2.1458           2.79874k    7.24104k   631.515k       1.24188G/s    15.5098   22.0494k   1.41699M          2.2438   2.11152k/s   2.992G/s     2.82407M                4.4719                1.99301          1       2.11152k/s [BEST: throughput=  1.77 GB/s doc_throughput=  2798 docs/s instructions=     2823811 cycles=     1315971 branch_miss=    6921 cache_miss=     582 cache_ref=     36015 items=         1 avg_time=    473592 ns]
find_tweet<sajson>/manual_time                            524621 ns       554044 ns         1332          10.533k           1.21557G               0        36.094k    1.91803M              3.03719          1.92484k       3.69191G          5.89219M                    9.33024                       3.072           1.92484k    10.9418k   631.515k       1.12108G/s    1.16817   36.1053k    1.9358M         3.06533   1.90614k/s  3.6899G/s     5.89219M               9.33024                 3.0438          1       1.90614k/s [BEST: throughput=  1.22 GB/s doc_throughput=  1924 docs/s instructions=     5892186 cycles=     1918031 branch_miss=   10533 cache_miss=       0 cache_ref=     36094 items=         1 avg_time=    524620 ns]
find_tweet<rapidjson>/manual_time                        1425262 ns      1454085 ns          495          26.527k           512.351M         21.648k        47.759k    4.55025M              7.20529           811.305       3.69164G          13.2811M                    21.0305                     2.91876            811.305    27.2466k   631.515k       422.561M/s    640.549    26.455k   4.70389M         7.44858    701.625/s 3.30037G/s      13.282M               21.0319                2.82362          1        701.625/s [BEST: throughput=  0.51 GB/s doc_throughput=   811 docs/s instructions=    13281071 cycles=     4550249 branch_miss=   26527 cache_miss=   21648 cache_ref=     47759 items=         1 avg_time=   1425262 ns]
find_tweet<rapidjson_insitu>/manual_time                  957160 ns       986549 ns          813          23.354k           741.816M              50        34.428k    3.14055M              4.97304          1.17466k       3.68908G          9.64746M                    15.2767                      3.0719           1.17466k    24.1171k   631.515k       629.215M/s   1.92203k   26.5136k   3.24726M         5.14202    1044.76/s  3.3926G/s     9.64799M               15.2775                2.97111          1        1044.76/s [BEST: throughput=  0.74 GB/s doc_throughput=  1174 docs/s instructions=     9647455 cycles=     3140547 branch_miss=   23354 cache_miss=      50 cache_ref=     34428 items=         1 avg_time=    957160 ns]
find_tweet<nlohmann_json>/manual_time                    6274586 ns      6305501 ns          117          91.326k           107.104M              71       162.766k    21.7491M              34.4395           169.598        3.6886G          57.0672M                    90.3655                     2.62389            169.598    125.314k   631.515k        95.984M/s    840.692   311.521k   23.1487M         36.6558    159.373/s 3.68928G/s     55.7028M                88.205                 2.4063          1        159.373/s [BEST: throughput=  0.11 GB/s doc_throughput=   169 docs/s instructions=    57067194 cycles=    21749057 branch_miss=   91326 cache_miss=      71 cache_ref=    162766 items=         1 avg_time=   6274586 ns]
top_tweet<simdjson_dom>/manual_time                       252156 ns       280317 ns         2777           3.706k           2.52423G               0        86.103k    923.813k              1.46285          3.99711k       3.69258G          2.85646M                    4.52318                     3.09203           3.99711k    3.88691k   631.515k       2.33246G/s    4.26539    86.148k   930.583k         1.47357    3.9658k/s  3.6905G/s     2.85646M               4.52318                3.06953          1        3.9658k/s [BEST: throughput=  2.52 GB/s doc_throughput=  3997 docs/s instructions=     2856456 cycles=      923813 branch_miss=    3706 cache_miss=       0 cache_ref=     86103 items=         1 avg_time=    252156 ns]
top_tweet<simdjson_ondemand>/manual_time                  169692 ns       197618 ns         4125            1.65k           3.74371G               0        53.176k    623.022k             0.986551          5.92814k       3.69336G           2.1282M                    3.36998                     3.41592           5.92814k    1.78209k   631.515k       3.46594G/s   0.961939   53.2934k   626.335k        0.991797   5.89301k/s   3.691G/s      2.1282M               3.36998                3.39786          1       5.89301k/s [BEST: throughput=  3.74 GB/s doc_throughput=  5928 docs/s instructions=     2128196 cycles=      623022 branch_miss=    1650 cache_miss=       0 cache_ref=     53176 items=         1 avg_time=    169692 ns]
top_tweet<simdjson_ondemand_forward_only>/manual_time     178464 ns       206461 ns         3923           1.872k           3.56591G               0        54.093k    654.104k              1.03577          5.64659k       3.69346G          2.34909M                    3.71978                     3.59132           5.64659k    2.00367k   631.515k       3.29558G/s   0.222279   54.0994k   658.741k         1.04311   5.60336k/s 3.69116G/s      2.3491M               3.71978                3.56604          1       5.60336k/s [BEST: throughput=  3.57 GB/s doc_throughput=  5646 docs/s instructions=     2349095 cycles=      654104 branch_miss=    1872 cache_miss=       0 cache_ref=     54093 items=         1 avg_time=    178464 ns]
top_tweet<yyjson>/manual_time                             678569 ns       708402 ns         1099          10.237k           1.54402G             294        69.308k     1.5103M              2.39156          2.44495k       3.69261G          2.84502M                    4.50507                     1.88374           2.44495k    7.48105k   631.515k       887.543M/s    1022.67   44.2706k    1.7057M         2.70097   1.47369k/s 2.51368G/s      2.8455M               4.50582                1.66822          1       1.47369k/s [BEST: throughput=  1.54 GB/s doc_throughput=  2444 docs/s instructions=     2845019 cycles=     1510303 branch_miss=   10237 cache_miss=     294 cache_ref=     69308 items=         1 avg_time=    678569 ns]
top_tweet<yyjson_insitu>/manual_time                      478844 ns       507850 ns         1461           7.409k           1.74085G               6        40.275k    1.33951M               2.1211          2.75663k       3.69252G          2.84469M                    4.50455                     2.12369           2.75663k    7.33509k   631.515k       1.22826G/s    44.3648   27.0939k   1.43593M         2.27379   2.08836k/s 2.99875G/s     2.84496M               4.50497                1.98126          1       2.08836k/s [BEST: throughput=  1.74 GB/s doc_throughput=  2756 docs/s instructions=     2844693 cycles=     1339505 branch_miss=    7409 cache_miss=       6 cache_ref=     40275 items=         1 avg_time=    478843 ns]
top_tweet<sajson>/manual_time                             529183 ns       557679 ns         1319           10.63k           1.20526G               9        41.419k    1.93444M              3.06318          1.90852k       3.69192G          5.91933M                    9.37322                     3.05997           1.90852k     11.029k   631.515k       1.11142G/s      10.74   41.2969k   1.95255M         3.09186   1.88971k/s 3.68975G/s     5.91933M               9.37322                3.03158          1       1.88971k/s [BEST: throughput=  1.21 GB/s doc_throughput=  1908 docs/s instructions=     5919331 cycles=     1934444 branch_miss=   10630 cache_miss=       9 cache_ref=     41419 items=         1 avg_time=    529183 ns]
top_tweet<rapidjson>/manual_time                         1443019 ns      1471557 ns          490          27.015k           505.047M          8.889k        49.376k    4.61601M              7.30943           799.739       3.69161G          13.3308M                    21.1093                     2.88796            799.739    27.4221k   631.515k       417.361M/s    754.684   30.4067k   4.76828M         7.55055    692.992/s 3.30438G/s     13.3316M               21.1105                2.79588          1        692.992/s [BEST: throughput=  0.51 GB/s doc_throughput=   799 docs/s instructions=    13330848 cycles=     4616014 branch_miss=   27015 cache_miss=    8889 cache_ref=     49376 items=         1 avg_time=   1443018 ns]
top_tweet<rapidjson_insitu>/manual_time                   964189 ns       992825 ns          806          23.818k           734.992M              74        39.766k    3.17203M              5.02289          1.16385k       3.69178G          9.68905M                    15.3425                     3.05453           1.16385k    24.1578k   631.515k       624.628M/s   1.89632k   32.0003k    3.2694M         5.17708    1037.14/s 3.39083G/s     9.68938M               15.3431                2.96365          1        1037.14/s [BEST: throughput=  0.73 GB/s doc_throughput=  1163 docs/s instructions=     9689046 cycles=     3172030 branch_miss=   23818 cache_miss=      74 cache_ref=     39766 items=         1 avg_time=    964188 ns]
top_tweet<nlohmann_json>/manual_time                     8664886 ns      8694939 ns           81         180.711k            73.469M              22       384.058k    31.7113M              50.2147           116.338       3.68922G          78.4887M                    124.286                      2.4751            116.338     186.42k   631.515k       69.5058M/s    95.0617   388.563k   31.9681M         50.6212    115.408/s 3.68938G/s     78.8476M               124.855                2.46645          1        115.408/s [BEST: throughput=  0.07 GB/s doc_throughput=   116 docs/s instructions=    78488738 cycles=    31711312 branch_miss=  180711 cache_miss=      22 cache_ref=    384058 items=         1 avg_time=   8664886 ns]
