run_benchmark: v0.8.0~2 /home/jkeiser/simdjson_benchmark_results/v0.7.0/36/ampere-clang11.json -DCMAKE_BUILD_TYPE=Release
git reset --hard v0.8.0~2
HEAD is now at 2a714f4e Hide the std::pair inheritance in our result instances (#1396)
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The CXX compiler identification is Clang 11.0.0
-- The C compiler identification is Clang 11.0.0
-- Check for working CXX compiler: /usr/bin/clang++-11
-- Check for working CXX compiler: /usr/bin/clang++-11 -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Check for working C compiler: /usr/bin/clang-11
-- Check for working C compiler: /usr/bin/clang-11 -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed
-- Check if compiler accepts -pthread
-- Check if compiler accepts -pthread - yes
-- Found Threads: TRUE  
-- Looking for fork
-- Looking for fork - found
-- Looking for wait
-- Looking for wait - found
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Found Git: /usr/bin/git (found version "2.27.0") 
-- git Version: v0.2.1-2a714f4e
-- Version: 0.2.1
-- Performing Test HAVE_CXX_FLAG_STD_CXX11
-- Performing Test HAVE_CXX_FLAG_STD_CXX11 - Success
-- Performing Test HAVE_CXX_FLAG_WALL
-- Performing Test HAVE_CXX_FLAG_WALL - Success
-- Performing Test HAVE_CXX_FLAG_WEXTRA
-- Performing Test HAVE_CXX_FLAG_WEXTRA - Success
-- Performing Test HAVE_CXX_FLAG_WSHADOW
-- Performing Test HAVE_CXX_FLAG_WSHADOW - Success
-- Performing Test HAVE_CXX_FLAG_WERROR
-- Performing Test HAVE_CXX_FLAG_WERROR - Success
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32 - Success
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED - Success
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WD654
-- Performing Test HAVE_CXX_FLAG_WD654 - Failed
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY - Success
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES -- failed to compile
-- Performing Test HAVE_CXX_FLAG_COVERAGE
-- Performing Test HAVE_CXX_FLAG_COVERAGE - Success
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Performing Test USE_BOOST_JSON
-- Performing Test USE_BOOST_JSON - Failed
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Found Python3: /usr/bin/python3.8 (found version "3.8.6") found components: Interpreter 
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 10
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
Scanning dependencies of target benchmark
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_api_internal.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_name.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_name.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_register.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_register.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_runner.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_runner.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/colorprint.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/colorprint.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/commandlineflags.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/commandlineflags.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/complexity.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/complexity.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/console_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/console_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/counter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/counter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/csv_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/csv_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/json_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/json_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/sleep.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sleep.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/statistics.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/statistics.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/string_util.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/string_util.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/sysinfo.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sysinfo.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/timers.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/timers.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -P CMakeFiles/benchmark.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/benchmark.dir/link.txt --verbose=1
/usr/bin/ar qc libbenchmark.a  CMakeFiles/benchmark.dir/benchmark.cc.o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o CMakeFiles/benchmark.dir/benchmark_name.cc.o CMakeFiles/benchmark.dir/benchmark_register.cc.o CMakeFiles/benchmark.dir/benchmark_runner.cc.o CMakeFiles/benchmark.dir/colorprint.cc.o CMakeFiles/benchmark.dir/commandlineflags.cc.o CMakeFiles/benchmark.dir/complexity.cc.o CMakeFiles/benchmark.dir/console_reporter.cc.o CMakeFiles/benchmark.dir/counter.cc.o CMakeFiles/benchmark.dir/csv_reporter.cc.o CMakeFiles/benchmark.dir/json_reporter.cc.o CMakeFiles/benchmark.dir/reporter.cc.o CMakeFiles/benchmark.dir/sleep.cc.o CMakeFiles/benchmark.dir/statistics.cc.o CMakeFiles/benchmark.dir/string_util.cc.o CMakeFiles/benchmark.dir/sysinfo.cc.o CMakeFiles/benchmark.dir/timers.cc.o
/usr/bin/ranlib libbenchmark.a
[ 80%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
Scanning dependencies of target generated-data
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated && /usr/bin/ruby genfeaturejson.rb /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-miss.json ...
[ 80%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/clang++-11  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/src  -O3 -DNDEBUG -fPIC   -pthread -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/clang++-11 -fPIC -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.6 -o ../libsimdjson.so.6.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.6.0.0 ../libsimdjson.so.6 ../libsimdjson.so
[ 80%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
Scanning dependencies of target yyjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/clang-11  -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src  -O3 -DNDEBUG   -o CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o   -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src/yyjson.c
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -P CMakeFiles/yyjson.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -E cmake_link_script CMakeFiles/yyjson.dir/link.txt --verbose=1
/usr/bin/ar qc libyyjson.a  CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o
/usr/bin/ranlib libyyjson.a
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/clang++-11  -DRAPIDJSON_HAS_STDSTRING -DSAJSON_UNSORTED_OBJECT_KEYS -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_COMPETITION_NLOHMANN_JSON -DSIMDJSON_COMPETITION_RAPIDJSON -DSIMDJSON_COMPETITION_SAJSON -DSIMDJSON_COMPETITION_YYJSON -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/rapidjson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/sajson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/json  -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/clang++-11  -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.6.0.0 ../_deps/google_benchmarks/src/libbenchmark.a ../dependencies/libyyjson.a -pthread /usr/lib/aarch64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/36/ampere-clang11.json --benchmark_out_format=json
2021-01-24 23:38:36
Running benchmark/bench_ondemand
Run on (32 X 3300 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x32)
  L1 Instruction 32 KiB (x32)
  L2 Unified 256 KiB (x16)
Load Average: 1.03, 1.01, 0.95
simdjson::dom implementation:      arm64
simdjson::ondemand implementation: arm64

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
partial_tweets<simdjson_dom>/manual_time                 1556065 ns      1624287 ns          450          13.974k           406.815M         25.977k       960.755k    4.96919M              7.86868            644.19        3.2011G          3.94988M                    6.25461                    0.794875            64.419k    14.1492k   631.515k        387.04M/s   25.9748k   961.548k   4.97531M         7.87837    642.647/s 3.19737G/s     3.94988M               6.25461               0.793896        100       64.2647k/s [BEST: throughput=  0.41 GB/s doc_throughput=   644 docs/s instructions=     3949882 cycles=     4969189 branch_miss=   13974 cache_miss=   25977 cache_ref=    960755 items=       100 avg_time=   1556064 ns]
partial_tweets<simdjson_ondemand>/manual_time            1052438 ns      1121506 ns          664           8.704k           602.636M         22.935k       446.245k      3.355M              5.31262           954.269       3.20158G          2.72661M                    4.31757                    0.812701           95.4269k    9.17677k   631.515k       572.252M/s   22.8971k   446.772k   3.36595M         5.32995    950.175/s 3.19824G/s     2.72662M               4.31758               0.810059        100       95.0175k/s [BEST: throughput=  0.60 GB/s doc_throughput=   954 docs/s instructions=     2726613 cycles=     3355002 branch_miss=    8704 cache_miss=   22935 cache_ref=    446245 items=       100 avg_time=   1052438 ns]
partial_tweets<yyjson>/manual_time                       1189262 ns      1259536 ns          590          46.563k            598.46M         24.282k       1.40971M    3.37851M              5.34984           947.658       3.20167G          3.27051M                    5.17884                    0.968035           94.7658k    46.2393k   631.515k       506.415M/s   24.2887k   1.41055M   3.58812M         5.68176    840.858/s  3.0171G/s     3.27059M               5.17896               0.911506        100       84.0858k/s [BEST: throughput=  0.60 GB/s doc_throughput=   947 docs/s instructions=     3270512 cycles=     3378507 branch_miss=   46563 cache_miss=   24282 cache_ref=   1409714 items=       100 avg_time=   1189261 ns]
partial_tweets<yyjson_insitu>/manual_time                1106617 ns      1178061 ns          633          46.154k           625.958M          14.41k       1.25152M    3.23004M              5.11474           991.201       3.20162G          3.17167M                    5.02232                     0.98193           99.1201k    46.1675k   631.515k       544.235M/s   14.4453k   1.25151M   3.43144M         5.43366    903.655/s 3.10083G/s     3.17182M               5.02256               0.924343        100       90.3655k/s [BEST: throughput=  0.63 GB/s doc_throughput=   991 docs/s instructions=     3171670 cycles=     3230036 branch_miss=   46154 cache_miss=   14410 cache_ref=   1251522 items=       100 avg_time=   1106617 ns]
partial_tweets<sajson>/manual_time                       1465538 ns      1536056 ns          478          58.032k            432.07M         12.778k       1.86846M     4.6784M              7.40822           684.179       3.20087G           5.5518M                    8.79125                     1.18669           68.4179k    58.3782k   631.515k       410.948M/s   12.7702k   1.86899M   4.68589M         7.42007    682.343/s 3.19738G/s     5.55181M               8.79125                1.18479        100       68.2343k/s [BEST: throughput=  0.43 GB/s doc_throughput=   684 docs/s instructions=     5551804 cycles=     4678405 branch_miss=   58032 cache_miss=   12778 cache_ref=   1868463 items=       100 avg_time=   1465538 ns]
partial_tweets<rapidjson>/manual_time                    4598618 ns      4671050 ns          152          82.699k           139.239M          13.07k       13.3945M    14.4666M              22.9078           220.485       3.18967G          20.6799M                    32.7465                     1.42949           22.0485k     82.399k   631.515k       130.965M/s   13.2951k   13.3935M   14.4994M         22.9597    217.457/s 3.15299G/s     20.6804M               32.7473                 1.4263        100       21.7457k/s [BEST: throughput=  0.14 GB/s doc_throughput=   220 docs/s instructions=    20679910 cycles=    14466624 branch_miss=   82699 cache_miss=   13070 cache_ref=  13394548 items=       100 avg_time=   4598617 ns]
partial_tweets<rapidjson_insitu>/manual_time             2934825 ns      3008085 ns          238           60.65k           217.833M         13.782k       5.86113M    9.27904M              14.6933           344.937       3.20069G           12.822M                    20.3035                     1.38182           34.4937k    60.6586k   631.515k       205.211M/s   13.9369k   5.86019M   9.23491M         14.6234    340.736/s 3.14666G/s     12.8225M               20.3044                1.38848        100       34.0736k/s [BEST: throughput=  0.22 GB/s doc_throughput=   344 docs/s instructions=    12821996 cycles=     9279036 branch_miss=   60650 cache_miss=   13782 cache_ref=   5861125 items=       100 avg_time=   2934825 ns]
partial_tweets<nlohmann_json>/manual_time               22653548 ns     22747761 ns           31         437.136k           29.4958M        200.226k       50.8636M    68.4468M              108.385           46.7064        3.1969G          81.4987M                    129.053                     1.19069           4.67064k    460.437k   631.515k       26.5857M/s   256.113k   50.9918M   72.4143M         114.668    44.1432/s  3.1966G/s     81.6088M               129.227                1.12697        100       4.41432k/s [BEST: throughput=  0.03 GB/s doc_throughput=    46 docs/s instructions=    81498711 cycles=    68446782 branch_miss=  437136 cache_miss=  200226 cache_ref=  50863572 items=       100 avg_time=  22653547 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                 311136877 ns    314712357 ns            2         1.92212M           148.141M        3.98195M       231.771M    992.401M              21.5745           3.22054       3.19607G          1040.92M                    22.6292                     1.04889           3.22054M    1.92153M   45.9988M       140.992M/s   3.98191M    231.77M   994.585M          21.622    3.21402/s 3.19662G/s     1040.92M               22.6292                1.04658      1000k       3.21402M/s [BEST: throughput=  0.15 GB/s doc_throughput=     3 docs/s instructions=  1040915692 cycles=   992401210 branch_miss= 1922120 cache_miss= 3981945 cache_ref= 231771055 items=   1000000 avg_time= 311136877 ns]
large_random<simdjson_ondemand>/manual_time            198009672 ns    201600340 ns            4          1.2047M           232.358M        2.31722M       143.308M    632.995M              13.7611           5.05139       3.19751G          662.774M                    14.4085                     1.04704           5.05139M    1.20475M   45.9988M       221.544M/s   2.31723M   143.308M   633.027M         13.7618    5.05026/s 3.19695G/s     662.774M               14.4085                1.04699      1000k       5.05026M/s [BEST: throughput=  0.23 GB/s doc_throughput=     5 docs/s instructions=   662773947 cycles=   632995138 branch_miss= 1204699 cache_miss= 2317221 cache_ref= 143308392 items=   1000000 avg_time= 198009671 ns]
large_random<simdjson_ondemand_unordered>/manual_time  188117174 ns    191701262 ns            4         1.20465M           244.562M        2.31723M       141.227M    601.331M              13.0728            5.3167        3.1971G          674.774M                    14.6694                     1.12213            5.3167M    1.20458M   45.9988M       233.194M/s   2.31723M   141.227M   601.372M         13.0737    5.31584/s  3.1968G/s     674.774M               14.6694                1.12206      1000k       5.31584M/s [BEST: throughput=  0.24 GB/s doc_throughput=     5 docs/s instructions=   674773944 cycles=   601331097 branch_miss= 1204650 cache_miss= 2317231 cache_ref= 141227296 items=   1000000 avg_time= 188117174 ns]
large_random<yyjson>/manual_time                       203029635 ns    206614942 ns            3         1.56832M           226.645M        4.91208M       205.597M    624.237M              13.5707           4.92719       3.07574G          816.385M                     17.748                     1.30781           4.92719M    1.57242M   45.9988M       216.066M/s   4.91209M   205.581M   624.451M         13.5754    4.92539/s 3.07567G/s     816.385M                17.748                1.30736      1000k       4.92539M/s [BEST: throughput=  0.23 GB/s doc_throughput=     4 docs/s instructions=   816384706 cycles=   624237203 branch_miss= 1568318 cache_miss= 4912076 cache_ref= 205596931 items=   1000000 avg_time= 203029635 ns]
large_random<yyjson_insitu>/manual_time                197176820 ns    200770590 ns            4          1.5683M           233.375M        4.19495M       194.074M    612.517M              13.3159           5.07351       3.10761G          809.197M                    17.5917                      1.3211           5.07351M    1.57007M   45.9988M        222.48M/s   4.19503M   194.085M   612.645M         13.3187    5.07159/s 3.10708G/s     809.197M               17.5917                1.32083      1000k       5.07159M/s [BEST: throughput=  0.23 GB/s doc_throughput=     5 docs/s instructions=   809196735 cycles=   612517016 branch_miss= 1568300 cache_miss= 4194949 cache_ref= 194073731 items=   1000000 avg_time= 197176819 ns]
large_random<sajson>/manual_time                       244861450 ns    248438942 ns            3         2.70209M           196.798M        3.44626M         214.9M    747.118M              16.2421           4.27833       3.19641G          963.995M                     20.957                     1.29029           4.27833M    2.70507M   45.9988M       179.154M/s   3.44627M    214.92M   782.811M         17.0181    4.08394/s 3.19695G/s     963.995M                20.957                1.23145      1000k       4.08394M/s [BEST: throughput=  0.20 GB/s doc_throughput=     4 docs/s instructions=   963995037 cycles=   747117527 branch_miss= 2702094 cache_miss= 3446259 cache_ref= 214900210 items=   1000000 avg_time= 244861449 ns]
large_random<rapidjson>/manual_time                    352831774 ns    356407558 ns            2         2.37434M           130.442M        4.95325M       782.204M    1.10075G              23.9299           2.83577       3.12147G          1.63051G                    35.4468                     1.48128           2.83577M    2.24706M   45.9988M       124.331M/s    4.9541M   780.715M   1099.19M          23.896    2.83421/s 3.11533G/s     1.63052G               35.4469                1.48338      1000k       2.83421M/s [BEST: throughput=  0.13 GB/s doc_throughput=     2 docs/s instructions=  1630510404 cycles=  1100747258 branch_miss= 2374338 cache_miss= 4953253 cache_ref= 782204111 items=   1000000 avg_time= 352831774 ns]
large_random<rapidjson_lossless>/manual_time           418988400 ns    422575768 ns            2          2.0638M           110.014M        4.95477M       1024.01M    1.30987G              28.4762           2.39167       3.13278G          2.05348G                    44.6421                      1.5677           2.39167M    2.06389M   45.9988M       104.699M/s   4.95563M   1024.02M   1.31014G         28.4822     2.3867/s 3.12692G/s     2.05349G               44.6422                1.56738      1000k        2.3867M/s [BEST: throughput=  0.11 GB/s doc_throughput=     2 docs/s instructions=  2053483746 cycles=  1309869382 branch_miss= 2063803 cache_miss= 4954772 cache_ref=1024011607 items=   1000000 avg_time= 418988399 ns]
large_random<rapidjson_insitu>/manual_time             355135781 ns    358740602 ns            2         2.00153M           129.815M        5.67544M       696.036M    1.10617G              24.0479           2.82215       3.12178G          1.37951G                    29.9902                      1.2471           2.82215M    2.00291M   45.9988M       123.524M/s   5.67651M    696.04M   1.10636G         24.0519    2.81582/s 3.11531G/s     1.37952G               29.9903                 1.2469      1000k       2.81582M/s [BEST: throughput=  0.13 GB/s doc_throughput=     2 docs/s instructions=  1379510264 cycles=  1106173449 branch_miss= 2001526 cache_miss= 5675436 cache_ref= 696035649 items=   1000000 avg_time= 355135781 ns]
large_random<nlohmann_json>/manual_time               3264943467 ns   3223969038 ns            1         20.7676M           14.0887M        27.6671M       6.93771G    10.2916G              223.737          0.306284       3.15217G           12.884G                    280.094                     1.25189           306.284k    20.7676M   45.9988M        13.436M/s   27.6671M   6.93771G   10.2916G         223.737   0.306284/s 3.15217G/s      12.884G               280.094                1.25189      1000k       306.284k/s [BEST: throughput=  0.01 GB/s doc_throughput=     0 docs/s instructions= 12883982397 cycles= 10291641876 branch_miss=20767584 cache_miss=27667133 cache_ref=6937714494 items=   1000000 avg_time=3264943467 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                       376288159 ns    386949280 ns            2         884.409k           364.896M        6.95232M       248.828M    1.20268G              8.75915           2.65755       3.19618G           1.1314G                    8.24004                    0.940735           1.39332M    884.958k   137.305M       347.989M/s    6.9523M   248.831M   1.20286G          8.7605    2.65754/s 3.19665G/s      1.1314G               8.24004                0.94059   524.288k       1.39332M/s [BEST: throughput=  0.36 GB/s doc_throughput=     2 docs/s instructions=  1131399189 cycles=  1202675467 branch_miss=  884409 cache_miss= 6952320 cache_ref= 248827865 items=    524288 avg_time= 376288159 ns]
kostya<simdjson_ondemand>/manual_time                  255879426 ns    266505542 ns            3         890.506k           536.652M        5.28404M       145.544M    817.735M              5.95561           3.90847       3.19609G          791.585M                    5.76516                    0.968021           2.04916M    890.799k   137.305M       511.742M/s   5.28412M   145.547M   817.857M          5.9565    3.90809/s 3.19626G/s     791.585M               5.76516               0.967877   524.288k       2.04897M/s [BEST: throughput=  0.54 GB/s doc_throughput=     3 docs/s instructions=   791585016 cycles=   817735420 branch_miss=  890506 cache_miss= 5284045 cache_ref= 145544211 items=    524288 avg_time= 255879426 ns]
kostya<yyjson>/manual_time                             286714536 ns    297383113 ns            2         2.73876M           478.949M        7.96991M       328.131M    873.685M               6.3631           3.48821        3.0476G          948.794M                    6.91012                     1.08597           1.82883M    2.74206M   137.305M       456.706M/s   7.96966M   328.208M   873.632M         6.36271    3.48779/s 3.04704G/s     948.794M               6.91012                1.08603   524.288k       1.82861M/s [BEST: throughput=  0.48 GB/s doc_throughput=     3 docs/s instructions=   948793707 cycles=   873685088 branch_miss= 2738758 cache_miss= 7969908 cache_ref= 328131124 items=    524288 avg_time= 286714536 ns]
kostya<yyjson_insitu>/manual_time                      269288701 ns    279927853 ns            3         2.77514M           509.973M        5.82966M       293.989M    838.314M              6.10549           3.71416       3.11364G          927.339M                    6.75386                     1.10619           1.94729M    2.74487M   137.305M        486.26M/s   5.82939M    293.93M   838.527M         6.10704    3.71349/s 3.11386G/s     927.339M               6.75386                1.10591   524.288k       1.94694M/s [BEST: throughput=  0.51 GB/s doc_throughput=     3 docs/s instructions=   927339172 cycles=   838314377 branch_miss= 2775143 cache_miss= 5829656 cache_ref= 293988677 items=    524288 avg_time= 269288700 ns]
kostya<sajson>/manual_time                             409923516 ns    420569947 ns            2         7.14218M           335.212M         4.6315M       417.927M    1.30966G              9.53833           2.44137       3.19736G          1.41335G                    10.2935                     1.07918           1.27998M    7.17372M   137.305M       319.436M/s   4.63146M   418.125M   1.31054G         9.54471    2.43948/s 3.19703G/s     1.41335G               10.2935                1.07845   524.288k       1.27899M/s [BEST: throughput=  0.34 GB/s doc_throughput=     2 docs/s instructions=  1413353471 cycles=  1309660147 branch_miss= 7142184 cache_miss= 4631500 cache_ref= 417927353 items=    524288 avg_time= 409923516 ns]
kostya<rapidjson>/manual_time                          603320395 ns    613979869 ns            1         8.13013M           227.582M        5.34323M       1.21205G    1.89438G              13.7969           1.65749       3.13993G          2.46968G                    17.9868                     1.30368           869.004k    8.13013M   137.305M       217.039M/s   5.34323M   1.21205G   1.89438G         13.7969    1.65749/s 3.13993G/s     2.46968G               17.9868                1.30368   524.288k       869.004k/s [BEST: throughput=  0.23 GB/s doc_throughput=     1 docs/s instructions=  2469675251 cycles=  1894383359 branch_miss= 8130131 cache_miss= 5343226 cache_ref=1212052972 items=    524288 avg_time= 603320395 ns]
kostya<rapidjson_lossless>/manual_time                 653021533 ns    663924247 ns            1         9.31343M           210.261M        5.34468M       1.35204G    2.05245G              14.9481           1.53134         3.143G          2.71451G                    19.7699                     1.32257           802.865k    9.31343M   137.305M       200.521M/s   5.34468M   1.35204G   2.05245G         14.9481    1.53134/s   3.143G/s     2.71451G               19.7699                1.32257   524.288k       802.865k/s [BEST: throughput=  0.21 GB/s doc_throughput=     1 docs/s instructions=  2714509502 cycles=  2052448996 branch_miss= 9313426 cache_miss= 5344681 cache_ref=1352041758 items=    524288 avg_time= 653021533 ns]
kostya<rapidjson_insitu>/manual_time                   539107625 ns    549596046 ns            1         5.94509M           254.689M         6.3321M       915.322M    1.68832G              12.2962           1.85492        3.1317G          1.99322G                    14.5167                     1.18059           972.511k    5.94509M   137.305M       242.891M/s    6.3321M   915.322M   1.68832G         12.2962    1.85492/s  3.1317G/s     1.99322G               14.5167                1.18059   524.288k       972.511k/s [BEST: throughput=  0.25 GB/s doc_throughput=     1 docs/s instructions=  1993217001 cycles=  1688323761 branch_miss= 5945092 cache_miss= 6332103 cache_ref= 915321776 items=    524288 avg_time= 539107625 ns]
kostya<nlohmann_json>/manual_time                     5664463363 ns   5643329493 ns            1         50.7997M           24.2397M        38.9146M        11.108G    18.0062G               131.14          0.176539       3.17881G           18.087G                    131.729                     1.00449           92.5574k    50.7997M   137.305M       23.1168M/s   38.9146M    11.108G   18.0062G          131.14   0.176539/s 3.17881G/s      18.087G               131.729                1.00449   524.288k       92.5574k/s [BEST: throughput=  0.02 GB/s doc_throughput=     0 docs/s instructions= 18087022833 cycles= 18006241768 branch_miss=50799739 cache_miss=38914599 cache_ref=11108025798 items=    524288 avg_time=5664463363 ns]
distinct_user_id<simdjson_dom>/manual_time               1535691 ns      1618583 ns          456          13.758k           412.394M         26.527k       945.696k    4.90182M                7.762           653.024         3.201G          3.87901M                    6.14239                    0.791341           75.0977k    13.9869k   631.515k       392.175M/s   26.5423k   946.715k   4.91064M         7.77596    651.173/s 3.19767G/s     3.87901M               6.14239                0.78992        115       74.8849k/s [BEST: throughput=  0.41 GB/s doc_throughput=   653 docs/s instructions=     3879010 cycles=     4901820 branch_miss=   13758 cache_miss=   26527 cache_ref=    945696 items=       115 avg_time=   1535690 ns]
distinct_user_id<simdjson_ondemand>/manual_time          1040331 ns      1122935 ns          672            9.29k           609.042M         22.598k       425.291k    3.31947M              5.25636           964.414       3.20134G          2.67029M                    4.22838                    0.804433           110.908k    9.34189k   631.515k       578.911M/s   22.5835k    425.76k   3.32659M         5.26764    961.232/s 3.19763G/s     2.67029M               4.22839                0.80271        115       110.542k/s [BEST: throughput=  0.61 GB/s doc_throughput=   964 docs/s instructions=     2670288 cycles=     3319468 branch_miss=    9290 cache_miss=   22598 cache_ref=    425291 items=       115 avg_time=   1040331 ns]
distinct_user_id<yyjson>/manual_time                     1142288 ns      1228217 ns          636          46.844k           608.429M          24.23k        1.3977M    3.32314M              5.26217           963.444       3.20166G          3.23395M                    5.12094                    0.973162           110.796k    46.2286k   631.515k        527.24M/s   24.2719k   1.39752M   3.52611M         5.58357    875.436/s 3.08688G/s     3.23383M               5.12075               0.917111        115       100.675k/s [BEST: throughput=  0.61 GB/s doc_throughput=   963 docs/s instructions=     3233949 cycles=     3323137 branch_miss=   46844 cache_miss=   24230 cache_ref=   1397699 items=       115 avg_time=   1142287 ns]
distinct_user_id<yyjson_insitu>/manual_time              1089560 ns      1175483 ns          640          46.274k           638.475M         14.307k       1.23803M    3.16666M              5.01438           1011.02       3.20156G          3.13466M                    4.96371                    0.989894           116.267k    46.1503k   631.515k       552.755M/s    14.354k   1.23814M   3.37727M         5.34788    917.801/s 3.09966G/s     3.13481M               4.96395               0.928209        115       105.547k/s [BEST: throughput=  0.64 GB/s doc_throughput=  1011 docs/s instructions=     3134656 cycles=     3166659 branch_miss=   46274 cache_miss=   14307 cache_ref=   1238035 items=       115 avg_time=   1089560 ns]
distinct_user_id<sajson>/manual_time                     1451105 ns      1535973 ns          482          57.814k           436.422M         12.761k       1.85523M    4.63174M              7.33434           691.072       3.20087G          5.49513M                     8.7015                     1.18641           79.4732k    58.3293k   631.515k       415.035M/s   12.7777k   1.85553M   4.64011M         7.34759     689.13/s 3.19764G/s     5.49513M                8.7015                1.18427        115       79.2499k/s [BEST: throughput=  0.44 GB/s doc_throughput=   691 docs/s instructions=     5495130 cycles=     4631743 branch_miss=   57814 cache_miss=   12761 cache_ref=   1855229 items=       115 avg_time=   1451105 ns]
distinct_user_id<rapidjson>/manual_time                  4585852 ns      4673383 ns          151          82.233k           140.016M         13.814k       13.3874M    14.4347M              22.8573           221.715       3.20039G          20.6347M                    32.6749                     1.42952           25.4972k    82.3702k   631.515k        131.33M/s   14.0416k   13.3819M   14.4883M         22.9421    218.062/s 3.15934G/s     20.6353M               32.6758                1.42427        115       25.0771k/s [BEST: throughput=  0.14 GB/s doc_throughput=   221 docs/s instructions=    20634712 cycles=    14434726 branch_miss=   82233 cache_miss=   13814 cache_ref=  13387364 items=       115 avg_time=   4585851 ns]
distinct_user_id<rapidjson_insitu>/manual_time           2914750 ns      3004351 ns          180          60.996k           220.297M         14.145k       5.84927M    9.17473M              14.5281           348.839        3.2005G          12.7768M                     20.232                     1.39261           40.1164k     60.765k   631.515k       206.625M/s   14.2963k   5.84833M   9.16758M         14.5168    343.083/s 3.14524G/s     12.7774M               20.2329                1.39376        115       39.4545k/s [BEST: throughput=  0.22 GB/s doc_throughput=   348 docs/s instructions=    12776805 cycles=     9174728 branch_miss=   60996 cache_miss=   14145 cache_ref=   5849268 items=       115 avg_time=   2914750 ns]
distinct_user_id<nlohmann_json>/manual_time             21522227 ns     21614243 ns           33          394.67k           31.2273M        163.399k       48.4343M    64.6514M              102.375           49.4482        3.1969G          76.8795M                    121.738                     1.18914           5.68655k    413.672k   631.515k       27.9831M/s    222.17k   47.9157M   68.7939M         108.935    46.4636/s 3.19641G/s     75.3598M               119.332                1.09544        115       5.34331k/s [BEST: throughput=  0.03 GB/s doc_throughput=    49 docs/s instructions=    76879462 cycles=    64651372 branch_miss=  394670 cache_miss=  163399 cache_ref=  48434345 items=       115 avg_time=  21522227 ns]
find_tweet<simdjson_dom>/manual_time                     1523574 ns      1609759 ns          462          13.762k           423.904M         23.572k       931.492k    4.76907M               7.5518           671.249       3.20124G           3.7886M                    5.99922                     0.79441            671.249    13.6809k   631.515k       395.294M/s   23.5658k   933.575k   4.87234M         7.71531    656.351/s 3.19796G/s      3.7886M               5.99923               0.777574          1        656.351/s [BEST: throughput=  0.42 GB/s doc_throughput=   671 docs/s instructions=     3788599 cycles=     4769075 branch_miss=   13762 cache_miss=   23572 cache_ref=    931492 items=         1 avg_time=   1523574 ns]
find_tweet<simdjson_ondemand>/manual_time                 905216 ns       991342 ns          773           4.593k           699.722M         11.571k       233.981k    2.88955M              4.57558          1.10801k       3.20163G          2.11629M                    3.35113                    0.732396           1.10801k    4.80188k   631.515k       665.322M/s   11.5673k   234.662k   2.89534M         4.58475   1.10471k/s  3.1985G/s     2.11629M               3.35113               0.730931          1       1.10471k/s [BEST: throughput=  0.70 GB/s doc_throughput=  1108 docs/s instructions=     2116292 cycles=     2889545 branch_miss=    4593 cache_miss=   11571 cache_ref=    233981 items=         1 avg_time=    905215 ns]
find_tweet<yyjson>/manual_time                           1123300 ns      1213064 ns          634           46.57k           636.344M         21.739k       1.38161M    3.17797M              5.03229           1007.65       3.20227G          3.17691M                    5.03062                    0.999667            1007.65    46.1198k   631.515k       536.152M/s   21.7849k   1.38237M   3.37708M         5.34759    890.234/s 3.00639G/s     3.17743M               5.03143               0.940879          1        890.234/s [BEST: throughput=  0.64 GB/s doc_throughput=  1007 docs/s instructions=     3176910 cycles=     3177969 branch_miss=   46570 cache_miss=   21739 cache_ref=   1381609 items=         1 avg_time=   1123300 ns]
find_tweet<yyjson_insitu>/manual_time                    1043405 ns      1133741 ns          673          45.974k           666.663M         11.839k       1.22274M    3.03318M              4.80303           1055.66         3.202G          3.07791M                    4.87385                     1.01475            1055.66    46.0189k   631.515k       577.206M/s   11.8577k   1.22262M   3.23158M         5.11718    958.401/s 3.09715G/s     3.07807M                4.8741               0.952496          1        958.401/s [BEST: throughput=  0.67 GB/s doc_throughput=  1055 docs/s instructions=     3077912 cycles=     3033183 branch_miss=   45974 cache_miss=   11839 cache_ref=   1222742 items=         1 avg_time=   1043405 ns]
find_tweet<sajson>/manual_time                           1409237 ns      1499370 ns          497          57.814k           449.219M         10.202k       1.83507M    4.50028M              7.12616           711.336       3.20121G           5.4077M                    8.56306                     1.20164            711.336    58.1564k   631.515k       427.366M/s    10.212k   1.83606M   4.50687M          7.1366    709.604/s 3.19809G/s      5.4077M               8.56306                1.19988          1        709.604/s [BEST: throughput=  0.45 GB/s doc_throughput=   711 docs/s instructions=     5407701 cycles=     4500279 branch_miss=   57814 cache_miss=   10202 cache_ref=   1835073 items=         1 avg_time=   1409237 ns]
find_tweet<rapidjson>/manual_time                        4550935 ns      4645524 ns          154          82.134k           140.873M         11.014k       13.3674M    14.3472M              22.7188           223.072       3.20047G          20.5764M                    32.5825                     1.43417            223.072    82.2866k   631.515k       132.338M/s   11.2348k   13.3639M   14.3818M         22.7735    219.735/s 3.16019G/s     20.5769M               32.5834                1.43076          1        219.735/s [BEST: throughput=  0.14 GB/s doc_throughput=   223 docs/s instructions=    20576357 cycles=    14347243 branch_miss=   82134 cache_miss=   11014 cache_ref=  13367362 items=         1 avg_time=   4550934 ns]
find_tweet<rapidjson_insitu>/manual_time                 2881039 ns      2977195 ns          243           60.59k           224.351M         10.841k       5.82913M    9.00971M              14.2668           355.258       3.20077G          12.7184M                    20.1395                     1.41163            355.258    60.6381k   631.515k       209.043M/s    11.013k   5.83093M   9.06011M         14.3466    347.097/s 3.14474G/s      12.719M               20.1404                1.40384          1        347.097/s [BEST: throughput=  0.22 GB/s doc_throughput=   355 docs/s instructions=    12718391 cycles=     9009715 branch_miss=   60590 cache_miss=   10841 cache_ref=   5829129 items=         1 avg_time=   2881038 ns]
find_tweet<nlohmann_json>/manual_time                   18327581 ns     18427096 ns           39         317.365k           36.3684M         90.464k       42.6747M    55.5106M              87.9008           57.5892       3.19681G          66.7011M                    105.621                     1.20159            57.5892     324.62k   631.515k       32.8608M/s   138.756k    42.151M   58.5886M         92.7746    54.5626/s 3.19674G/s     65.1503M               103.165                  1.112          1        54.5626/s [BEST: throughput=  0.04 GB/s doc_throughput=    57 docs/s instructions=    66701141 cycles=    55510644 branch_miss=  317365 cache_miss=   90464 cache_ref=  42674748 items=         1 avg_time=  18327581 ns]
top_tweet<simdjson_dom>/manual_time                      1556587 ns      1661110 ns          450          13.945k           410.506M         25.663k       939.283k    4.92427M              7.79756           650.034       3.20094G          3.82788M                    6.06142                    0.777348            650.034     13.974k   631.515k        386.91M/s   25.6475k   940.438k   4.97623M         7.87983    642.431/s 3.19689G/s     3.82788M               6.06142               0.769232          1        642.431/s [BEST: throughput=  0.41 GB/s doc_throughput=   650 docs/s instructions=     3827875 cycles=     4924273 branch_miss=   13945 cache_miss=   25663 cache_ref=    939283 items=         1 avg_time=   1556586 ns]
top_tweet<simdjson_ondemand>/manual_time                 1043374 ns      1144704 ns          670           9.319k           609.486M         22.574k       426.606k    3.31718M              5.25274           965.117       3.20147G          2.67404M                    4.23433                    0.806119            965.117    10.2397k   631.515k       577.223M/s   22.5924k   429.703k   3.33663M         5.28354    958.429/s 3.19793G/s     2.67404M               4.23433               0.801419          1        958.429/s [BEST: throughput=  0.61 GB/s doc_throughput=   965 docs/s instructions=     2674043 cycles=     3317181 branch_miss=    9319 cache_miss=   22574 cache_ref=    426606 items=         1 avg_time=   1043374 ns]
top_tweet<simdjson_ondemand_forward_only>/manual_time    1047496 ns      1151137 ns          666           8.553k           605.447M         22.714k       433.088k    3.33945M                5.288           958.722       3.20161G           2.6954M                    4.26815                    0.807139            958.722    8.96502k   631.515k       574.952M/s   22.7481k   434.121k   3.34861M         5.30251    954.657/s 3.19678G/s      2.6954M               4.26815               0.804931          1        954.657/s [BEST: throughput=  0.61 GB/s doc_throughput=   958 docs/s instructions=     2695402 cycles=     3339454 branch_miss=    8553 cache_miss=   22714 cache_ref=    433088 items=         1 avg_time=   1047496 ns]
top_tweet<yyjson>/manual_time                            1155170 ns      1264084 ns          610          46.534k            609.46M         23.279k       1.38784M    3.27726M              5.18951           965.076        3.1628G          3.20175M                    5.06996                    0.976962            965.076    46.3238k   631.515k        521.36M/s   23.2986k   1.38873M   3.47985M         5.51033    865.674/s 3.01242G/s     3.20227M               5.07077               0.920231          1        865.674/s [BEST: throughput=  0.61 GB/s doc_throughput=   965 docs/s instructions=     3201755 cycles=     3277255 branch_miss=   46534 cache_miss=   23279 cache_ref=   1387838 items=         1 avg_time=   1155169 ns]
top_tweet<yyjson_insitu>/manual_time                     1077426 ns      1188929 ns          654          46.323k           648.085M         13.323k         1.229M    3.11981M              4.94019           1026.24       3.20166G          3.10276M                     4.9132                    0.994535            1026.24    46.2807k   631.515k        558.98M/s   13.3574k   1.22922M   3.33826M         5.28611    928.138/s 3.09837G/s     3.10291M               4.91344               0.929499          1        928.138/s [BEST: throughput=  0.65 GB/s doc_throughput=  1026 docs/s instructions=     3102757 cycles=     3119806 branch_miss=   46323 cache_miss=   13323 cache_ref=   1228996 items=         1 avg_time=   1077425 ns]
top_tweet<sajson>/manual_time                            1428690 ns      1540328 ns          490          57.818k           443.485M           11.8k        1.8432M    4.55814M              7.21779           702.255       3.20098G          5.43458M                    8.60563                     1.19228            702.255    58.3504k   631.515k       421.547M/s   11.8092k   1.84398M   4.56807M          7.2335    699.942/s 3.19738G/s     5.43458M               8.60562                1.18969          1        699.942/s [BEST: throughput=  0.44 GB/s doc_throughput=   702 docs/s instructions=     5434583 cycles=     4558141 branch_miss=   57818 cache_miss=   11800 cache_ref=   1843197 items=         1 avg_time=   1428689 ns]
top_tweet<rapidjson>/manual_time                         4576671 ns      4692546 ns          153            82.5k           140.136M          12.92k       13.3897M    14.4224M              22.8378           221.904       3.20039G          20.6219M                    32.6546                     1.42985            221.904    82.7798k   631.515k       131.593M/s   13.1876k   13.3833M   14.4605M         22.8982    218.499/s 3.15962G/s     20.6224M               32.6554                1.42611          1        218.499/s [BEST: throughput=  0.14 GB/s doc_throughput=   221 docs/s instructions=    20621891 cycles=    14422407 branch_miss=   82500 cache_miss=   12920 cache_ref=  13389716 items=         1 avg_time=   4576671 ns]
top_tweet<rapidjson_insitu>/manual_time                  2933853 ns      3052308 ns          239          60.799k           218.039M         13.246k       5.84363M    9.11496M              14.4335           345.263       3.14706G          12.7643M                    20.2121                     1.40036            345.263    60.8758k   631.515k       205.279M/s   13.2427k   5.84649M   9.22908M         14.6142    340.849/s 3.14572G/s     12.7644M               20.2123                1.38306          1        340.849/s [BEST: throughput=  0.22 GB/s doc_throughput=   345 docs/s instructions=    12764254 cycles=     9114961 branch_miss=   60799 cache_miss=   13246 cache_ref=   5843626 items=         1 avg_time=   2933852 ns]
top_tweet<nlohmann_json>/manual_time                    24206566 ns     24328566 ns           29         496.944k           26.1952M        347.378k       54.6318M    77.0911M              122.073             41.48       3.19774G          89.1379M                    141.149                     1.15627              41.48    509.027k   631.515k         24.88M/s   345.986k   54.7528M   77.3524M         122.487    41.3111/s 3.19551G/s     89.3113M               141.424                 1.1546          1        41.3111/s [BEST: throughput=  0.03 GB/s doc_throughput=    41 docs/s instructions=    89137861 cycles=    77091088 branch_miss=  496944 cache_miss=  347378 cache_ref=  54631822 items=         1 avg_time=  24206566 ns]
