run_benchmark: v0.8.0~2 /home/jkeiser/simdjson_benchmark_results/v0.7.0/36/skylake-gcc10.2-native.json -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native
git reset --hard v0.8.0~2
HEAD is now at 2a714f4e Hide the std::pair inheritance in our result instances (#1396)
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The CXX compiler identification is GNU 10.2.0
-- The C compiler identification is GNU 10.2.0
-- Check for working CXX compiler: /usr/bin/g++-10
-- Check for working CXX compiler: /usr/bin/g++-10 -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Check for working C compiler: /usr/bin/gcc-10
-- Check for working C compiler: /usr/bin/gcc-10 -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed
-- Check if compiler accepts -pthread
-- Check if compiler accepts -pthread - yes
-- Found Threads: TRUE  
-- Looking for fork
-- Looking for fork - found
-- Looking for wait
-- Looking for wait - found
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- Found Git: /usr/bin/git (found version "2.27.0") 
-- git Version: v0.2.1-2a714f4e
-- Version: 0.2.1
-- Performing Test HAVE_CXX_FLAG_STD_CXX11
-- Performing Test HAVE_CXX_FLAG_STD_CXX11 - Success
-- Performing Test HAVE_CXX_FLAG_WALL
-- Performing Test HAVE_CXX_FLAG_WALL - Success
-- Performing Test HAVE_CXX_FLAG_WEXTRA
-- Performing Test HAVE_CXX_FLAG_WEXTRA - Success
-- Performing Test HAVE_CXX_FLAG_WSHADOW
-- Performing Test HAVE_CXX_FLAG_WSHADOW - Success
-- Performing Test HAVE_CXX_FLAG_WERROR
-- Performing Test HAVE_CXX_FLAG_WERROR - Success
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32 - Failed
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED - Success
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WD654
-- Performing Test HAVE_CXX_FLAG_WD654 - Failed
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY - Failed
-- Performing Test HAVE_CXX_FLAG_COVERAGE
-- Performing Test HAVE_CXX_FLAG_COVERAGE - Success
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Performing Test USE_BOOST_JSON
-- Performing Test USE_BOOST_JSON - Failed
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Found Python3: /usr/bin/python3.8 (found version "3.8.6") found components: Interpreter 
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 10
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
Scanning dependencies of target benchmark
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_api_internal.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_name.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_name.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_register.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_register.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_runner.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_runner.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/colorprint.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/colorprint.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/commandlineflags.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/commandlineflags.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/complexity.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/complexity.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/console_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/console_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/counter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/counter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/csv_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/csv_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/json_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/json_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/sleep.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sleep.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/statistics.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/statistics.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/string_util.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/string_util.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/sysinfo.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sysinfo.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/timers.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/timers.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -P CMakeFiles/benchmark.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/benchmark.dir/link.txt --verbose=1
/usr/bin/ar qc libbenchmark.a  CMakeFiles/benchmark.dir/benchmark.cc.o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o CMakeFiles/benchmark.dir/benchmark_name.cc.o CMakeFiles/benchmark.dir/benchmark_register.cc.o CMakeFiles/benchmark.dir/benchmark_runner.cc.o CMakeFiles/benchmark.dir/colorprint.cc.o CMakeFiles/benchmark.dir/commandlineflags.cc.o CMakeFiles/benchmark.dir/complexity.cc.o CMakeFiles/benchmark.dir/console_reporter.cc.o CMakeFiles/benchmark.dir/counter.cc.o CMakeFiles/benchmark.dir/csv_reporter.cc.o CMakeFiles/benchmark.dir/json_reporter.cc.o CMakeFiles/benchmark.dir/reporter.cc.o CMakeFiles/benchmark.dir/sleep.cc.o CMakeFiles/benchmark.dir/statistics.cc.o CMakeFiles/benchmark.dir/string_util.cc.o CMakeFiles/benchmark.dir/sysinfo.cc.o CMakeFiles/benchmark.dir/timers.cc.o
/usr/bin/ranlib libbenchmark.a
[ 80%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
Scanning dependencies of target generated-data
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated && /usr/bin/ruby genfeaturejson.rb /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-miss.json ...
[ 80%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/g++-10  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/src  -march=native -O3 -DNDEBUG -fPIC   -pthread -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/g++-10 -fPIC -march=native -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.6 -o ../libsimdjson.so.6.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.6.0.0 ../libsimdjson.so.6 ../libsimdjson.so
[ 80%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
Scanning dependencies of target yyjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/gcc-10  -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src  -O3 -DNDEBUG   -o CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o   -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src/yyjson.c
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -P CMakeFiles/yyjson.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -E cmake_link_script CMakeFiles/yyjson.dir/link.txt --verbose=1
/usr/bin/ar qc libyyjson.a  CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o
/usr/bin/ranlib libyyjson.a
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/g++-10  -DRAPIDJSON_HAS_STDSTRING -DSAJSON_UNSORTED_OBJECT_KEYS -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_COMPETITION_NLOHMANN_JSON -DSIMDJSON_COMPETITION_RAPIDJSON -DSIMDJSON_COMPETITION_SAJSON -DSIMDJSON_COMPETITION_YYJSON -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/rapidjson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/sajson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/json  -march=native -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/g++-10  -march=native -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.6.0.0 ../_deps/google_benchmarks/src/libbenchmark.a ../dependencies/libyyjson.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/36/skylake-gcc10.2-native.json --benchmark_out_format=json
2021-01-25 00:05:52
Running benchmark/bench_ondemand
Run on (4 X 4000 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 256 KiB (x4)
  L3 Unified 8192 KiB (x1)
Load Average: 1.05, 1.01, 1.00
simdjson::dom implementation:      haswell
simdjson::ondemand implementation: haswell

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                  259756 ns       288436 ns         2625           3.632k           2.44602G               0        92.435k    953.346k              1.50962          3.87325k       3.69255G          2.91501M                     4.6159                     3.05767           387.325k    3.79758k   631.515k       2.26422G/s      2.696   92.4785k   958.448k          1.5177   3.84976k/s  3.6898G/s     2.91501M                4.6159                3.04139        100       384.976k/s [BEST: throughput=  2.45 GB/s doc_throughput=  3873 docs/s instructions=     2915013 cycles=      953346 branch_miss=    3632 cache_miss=       0 cache_ref=     92435 items=       100 avg_time=    259756 ns]
partial_tweets<simdjson_ondemand>/manual_time             188577 ns       217172 ns         3709           1.599k           3.37757G               0        58.325k    690.473k              1.09336          5.34837k        3.6929G           2.1433M                     3.3939                      3.1041           534.837k    1.79245k   631.515k       3.11885G/s   0.725532   57.9676k   695.591k         1.10146   5.30286k/s 3.68862G/s      2.1433M                3.3939                3.08127        100       530.286k/s [BEST: throughput=  3.38 GB/s doc_throughput=  5348 docs/s instructions=     2143300 cycles=      690473 branch_miss=    1599 cache_miss=       0 cache_ref=     58325 items=       100 avg_time=    188577 ns]
partial_tweets<yyjson>/manual_time                        688950 ns       719718 ns         1016           9.815k           1.58724G             161        78.437k    1.46914M              2.32637          2.51338k       3.69251G          2.90845M                    4.60552                      1.9797           251.338k    7.58557k   631.515k       874.171M/s    1013.62   51.5636k   1.69049M         2.67687   1.45149k/s 2.45372G/s     2.90894M               4.60629                1.72077        100       145.149k/s [BEST: throughput=  1.59 GB/s doc_throughput=  2513 docs/s instructions=     2908453 cycles=     1469138 branch_miss=    9815 cache_miss=     161 cache_ref=     78437 items=       100 avg_time=    688949 ns]
partial_tweets<yyjson_insitu>/manual_time                 478233 ns       507723 ns         1464           7.068k           1.77264G             751        48.366k    1.30881M              2.07249          2.80696k       3.67378G          2.90814M                    4.60502                     2.22197           280.696k    7.42978k   631.515k       1.22983G/s    146.941   33.9491k    1.4179M         2.24524   2.09103k/s 2.96488G/s      2.9084M               4.60543                 2.0512        100       209.103k/s [BEST: throughput=  1.77 GB/s doc_throughput=  2806 docs/s instructions=     2908138 cycles=     1308810 branch_miss=    7068 cache_miss=     751 cache_ref=     48366 items=       100 avg_time=    478233 ns]
partial_tweets<sajson>/manual_time                        554757 ns       583614 ns         1260          10.056k           1.14829G               0        48.372k    2.03036M              3.21507          1.81832k       3.69185G          6.04844M                    9.57767                     2.97899           181.832k    10.5474k   631.515k       1085.63M/s    3.71984   48.3306k   2.04673M         3.24099   1.80259k/s 3.68943G/s     6.04844M               9.57767                2.95517        100       180.259k/s [BEST: throughput=  1.15 GB/s doc_throughput=  1818 docs/s instructions=     6048442 cycles=     2030364 branch_miss=   10056 cache_miss=       0 cache_ref=     48372 items=       100 avg_time=    554756 ns]
partial_tweets<rapidjson>/manual_time                    1634774 ns      1663817 ns          429          26.961k           442.544M          1.209k        53.873k    5.26795M              8.34177           700.765        3.6916G          13.1238M                    20.7814                     2.49124           70.0765k    27.1103k   631.515k       368.405M/s    536.811   34.8222k   5.44107M         8.61589    611.705/s 3.32833G/s     13.1247M               20.7829                2.41216        100       61.1705k/s [BEST: throughput=  0.44 GB/s doc_throughput=   700 docs/s instructions=    13123763 cycles=     5267955 branch_miss=   26961 cache_miss=    1209 cache_ref=     53873 items=       100 avg_time=   1634774 ns]
partial_tweets<rapidjson_insitu>/manual_time             1030832 ns      1060075 ns          682          23.725k           694.365M             306        45.596k     3.3576M              5.31673           1099.52       3.69175G          9.82451M                     15.557                     2.92605           109.952k    23.9994k   631.515k       584.246M/s    221.317    35.563k   3.45761M          5.4751     970.09/s 3.35419G/s     9.82491M               15.5577                2.84153        100        97.009k/s [BEST: throughput=  0.69 GB/s doc_throughput=  1099 docs/s instructions=     9824510 cycles=     3357596 branch_miss=   23725 cache_miss=     306 cache_ref=     45596 items=       100 avg_time=   1030832 ns]
partial_tweets<nlohmann_json>/manual_time                7698765 ns      7733645 ns           92         134.317k           84.7045M              42       232.837k    27.5045M              43.5531           134.129       3.68915G           70.793M                      112.1                     2.57387           13.4129k    147.306k   631.515k       78.2281M/s   1.74036k   362.596k   28.3929M         44.9599    129.891/s 3.68798G/s     71.1231M               112.623                2.50496        100       12.9891k/s [BEST: throughput=  0.08 GB/s doc_throughput=   134 docs/s instructions=    70793017 cycles=    27504461 branch_miss=  134317 cache_miss=      42 cache_ref=    232837 items=       100 avg_time=   7698764 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                  97409435 ns    100808498 ns            7         872.291k           473.359M        10.9695M       15.4183M    358.457M              7.79275           10.2907       3.68877G          981.675M                    21.3413                     2.73861           10.2907M    872.493k   45.9988M       450.345M/s   10.9792M   15.4177M   359.094M         7.80659    10.2659/s 3.68643G/s     981.675M               21.3413                2.73376      1000k       10.2659M/s [BEST: throughput=  0.47 GB/s doc_throughput=    10 docs/s instructions=   981674958 cycles=   358456930 branch_miss=  872291 cache_miss=10969466 cache_ref=  15418322 items=   1000000 avg_time=  97409434 ns]
large_random<simdjson_ondemand>/manual_time             60605181 ns     63969725 ns           12         887.657k           760.333M        5.67111M       8.02325M    223.171M              4.85167           16.5294       3.68889G          644.053M                    14.0015                     2.88592           16.5294M    888.619k   45.9988M        723.83M/s    5.6897M    8.0226M   223.483M         4.85846    16.5002/s 3.68752G/s     644.053M               14.0015                2.88189      1000k       16.5002M/s [BEST: throughput=  0.76 GB/s doc_throughput=    16 docs/s instructions=   644052609 cycles=   223170907 branch_miss=  887657 cache_miss= 5671114 cache_ref=   8023252 items=   1000000 avg_time=  60605180 ns]
large_random<simdjson_ondemand_unordered>/manual_time   61930155 ns     65298175 ns           11         869.609k           743.675M        5.70588M       8.02384M    228.159M              4.96011           16.1673       3.68871G          644.053M                    14.0015                     2.82282           16.1673M    869.608k   45.9988M       708.344M/s   5.67931M   8.02153M   228.438M         4.96617    16.1472/s 3.68863G/s     644.053M               14.0015                2.81938      1000k       16.1472M/s [BEST: throughput=  0.74 GB/s doc_throughput=    16 docs/s instructions=   644052614 cycles=   228158960 branch_miss=  869609 cache_miss= 5705876 cache_ref=   8023838 items=   1000000 avg_time=  61930154 ns]
large_random<yyjson>/manual_time                       127606253 ns    131038654 ns            5         661.941k           360.688M        5.80286M       9.00209M    350.561M               7.6211           7.84125       2.74884G           942.15M                    20.4821                     2.68755           7.84125M    661.367k   45.9988M       343.775M/s   5.79432M   9.00519M   350.528M         7.62037    7.83661/s 2.74695G/s     942.149M               20.4821                 2.6878      1000k       7.83661M/s [BEST: throughput=  0.36 GB/s doc_throughput=     7 docs/s instructions=   942149611 cycles=   350561301 branch_miss=  661941 cache_miss= 5802857 cache_ref=   9002093 items=   1000000 avg_time= 127606252 ns]
large_random<yyjson_insitu>/manual_time                109574994 ns    112973802 ns            6         657.574k           420.067M        4.94945M       7.71197M    318.146M              6.91641           9.13212       2.90535G          936.029M                     20.349                     2.94213           9.13212M    661.528k   45.9988M       400.345M/s   4.94465M   7.69995M   318.355M         6.92095    9.12617/s 2.90536G/s     936.029M                20.349                 2.9402      1000k       9.12617M/s [BEST: throughput=  0.42 GB/s doc_throughput=     9 docs/s instructions=   936028847 cycles=   318146450 branch_miss=  657574 cache_miss= 4949451 cache_ref=   7711967 items=   1000000 avg_time= 109574994 ns]
large_random<sajson>/manual_time                        90236225 ns     93664125 ns            8         583.829k           510.395M        8.32905M       12.0226M    332.151M              7.22086           11.0958       3.68549G          1066.99M                    23.1961                     3.21237           11.0958M    584.044k   45.9988M       486.145M/s   8.35171M   12.1205M   332.807M         7.23513     11.082/s 3.68817G/s     1066.99M               23.1961                3.20604      1000k        11.082M/s [BEST: throughput=  0.51 GB/s doc_throughput=    11 docs/s instructions=  1066991826 cycles=   332150861 branch_miss=  583829 cache_miss= 8329052 cache_ref=  12022553 items=   1000000 avg_time=  90236225 ns]
large_random<rapidjson>/manual_time                    182147683 ns    185575553 ns            4          1.1044M           262.726M         6.9973M       10.8423M    587.701M              12.7764           5.71158        3.3567G          1.67314G                    36.3736                     2.84693           5.71158M    1.10087M   45.9988M       240.837M/s   6.42016M   10.1072M   592.839M         12.8882    5.49005/s 3.25472G/s     1.67315G               36.3738                2.82227      1000k       5.49005M/s [BEST: throughput=  0.26 GB/s doc_throughput=     5 docs/s instructions=  1673140414 cycles=   587700750 branch_miss= 1104402 cache_miss= 6997296 cache_ref=  10842331 items=   1000000 avg_time= 182147682 ns]
large_random<rapidjson_lossless>/manual_time           204973376 ns    208398197 ns            4         589.528k           232.376M        6.95314M       10.8227M    672.297M              14.6155           5.05179        3.3963G          2.06011G                    44.7861                     3.06428           5.05179M    589.644k   45.9988M       214.017M/s   6.39931M   10.0976M   677.034M         14.7185    4.87868/s 3.30303G/s     2.06012G               44.7863                3.04286      1000k       4.87868M/s [BEST: throughput=  0.23 GB/s doc_throughput=     5 docs/s instructions=  2060105357 cycles=   672296799 branch_miss=  589528 cache_miss= 6953140 cache_ref=  10822741 items=   1000000 avg_time= 204973375 ns]
large_random<rapidjson_insitu>/manual_time             156633167 ns    160055927 ns            5         624.566k           309.037M        8.03946M       12.3452M    491.169M              10.6779           6.71836       3.29985G          1.50514G                    32.7213                     3.06441           6.71836M    624.582k   45.9988M       280.067M/s   7.46425M   11.5703M   497.355M         10.8124    6.38434/s 3.17529G/s     1.50515G               32.7215                3.02631      1000k       6.38434M/s [BEST: throughput=  0.31 GB/s doc_throughput=     6 docs/s instructions=  1505140067 cycles=   491168703 branch_miss=  624566 cache_miss= 8039456 cache_ref=  12345226 items=   1000000 avg_time= 156633166 ns]
large_random<nlohmann_json>/manual_time               1229669429 ns   1232943109 ns            1         4.53236M           37.4074M        46.7359M        60.698M    4.52297G               98.328          0.813227        3.6782G          11.9464G                     259.71                     2.64126           813.227k    4.53236M   45.9988M       35.6745M/s   46.7359M    60.698M   4.52297G          98.328   0.813227/s  3.6782G/s     11.9464G                259.71                2.64126      1000k       813.227k/s [BEST: throughput=  0.04 GB/s doc_throughput=     0 docs/s instructions= 11946360051 cycles=  4522969388 branch_miss= 4532361 cache_miss=46735918 cache_ref=  60698048 items=   1000000 avg_time=1229669429 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                        89195500 ns     99650594 ns            8         444.717k           1.54232G        15.6709M       22.2252M    328.417M              2.39188           11.2328       3.68905G          938.041M                     6.8318                     2.85625           5.88923M    444.805k   137.305M       1.43365G/s   15.7336M   22.2201M   328.899M         2.39539    11.2113/s 3.68739G/s     938.041M                6.8318                2.85206   524.288k       5.87796M/s [BEST: throughput=  1.54 GB/s doc_throughput=    11 docs/s instructions=   938040622 cycles=   328417198 branch_miss=  444717 cache_miss=15670871 cache_ref=  22225214 items=    524288 avg_time=  89195499 ns]
kostya<simdjson_ondemand>/manual_time                   61306130 ns     71677414 ns           11         525.479k           2.24375G         10.076M       14.0444M    225.753M              1.64418           16.3413       3.68911G          676.617M                    4.92784                     2.99715           8.56756M    526.072k   137.305M       2.08585G/s   10.0865M    13.973M   226.057M         1.64638    16.3116/s 3.68734G/s     676.617M               4.92784                2.99313   524.288k       8.55197M/s [BEST: throughput=  2.24 GB/s doc_throughput=    16 docs/s instructions=   676617059 cycles=   225753470 branch_miss=  525479 cache_miss=10076016 cache_ref=  14044404 items=    524288 avg_time=  61306130 ns]
kostya<yyjson>/manual_time                             205084381 ns    215476806 ns            3         421.311k           670.319M        11.3141M       16.2757M    558.015M              4.06406           4.88197       2.72421G          984.045M                    7.16686                     1.76347           2.55956M    417.669k   137.305M        638.49M/s   11.3203M   16.2351M   558.165M         4.06515    4.87604/s 2.72163G/s     984.045M               7.16686                  1.763   524.288k       2.55645M/s [BEST: throughput=  0.67 GB/s doc_throughput=     4 docs/s instructions=   984045355 cycles=   558015072 branch_miss=  421311 cache_miss=11314095 cache_ref=  16275747 items=    524288 avg_time= 205084380 ns]
kostya<yyjson_insitu>/manual_time                      151453480 ns    161902039 ns            5         410.147k           907.286M        8.71423M       12.2796M    463.401M              3.37498           6.60781       3.06207G          965.776M                     7.0338                      2.0841            3.4644M     410.52k   137.305M       864.584M/s   8.71667M   12.2704M   463.568M         3.37619    6.60269/s 3.06079G/s     965.776M                7.0338                2.08335   524.288k       3.46171M/s [BEST: throughput=  0.91 GB/s doc_throughput=     6 docs/s instructions=   965775578 cycles=   463401048 branch_miss=  410147 cache_miss= 8714234 cache_ref=  12279580 items=    524288 avg_time= 151453479 ns]
kostya<sajson>/manual_time                             132155114 ns    142598595 ns            5         358.226k           1040.39M         12.342M       17.1443M    486.809M              3.54546            7.5772       3.68865G          1.60304G                    11.6751                     3.29296           3.97264M    361.028k   137.305M       990.838M/s   12.3629M   17.1364M   487.472M         3.55029    7.56687/s 3.68864G/s     1.60304G               11.6751                3.28848   524.288k       3.96722M/s [BEST: throughput=  1.04 GB/s doc_throughput=     7 docs/s instructions=  1603042689 cycles=   486808818 branch_miss=  358226 cache_miss=12342045 cache_ref=  17144328 items=    524288 avg_time= 132155113 ns]
kostya<rapidjson>/manual_time                          253466175 ns    263904007 ns            3         972.174k            549.44M        8.11886M       12.0373M    840.459M              6.12111            4.0016       3.36318G          2.29774G                    16.7346                     2.73391           2.09799M    973.619k   137.305M       516.614M/s   7.81113M   11.6381M   844.174M         6.14817     3.9453/s 3.33052G/s     2.29774G               16.7346                2.72188   524.288k       2.06847M/s [BEST: throughput=  0.55 GB/s doc_throughput=     4 docs/s instructions=  2297739119 cycles=   840459312 branch_miss=  972174 cache_miss= 8118862 cache_ref=  12037313 items=    524288 avg_time= 253466175 ns]
kostya<rapidjson_lossless>/manual_time                 265925519 ns    276392247 ns            3         948.399k           523.229M        8.11684M       12.0389M    887.128M              6.46101            3.8107       3.38058G          2.51583G                     18.323                     2.83593           1.99791M    948.558k   137.305M       492.409M/s   7.81259M   11.6786M   890.542M         6.48587    3.76045/s 3.34884G/s     2.51584G                18.323                2.82506   524.288k       1.97156M/s [BEST: throughput=  0.52 GB/s doc_throughput=     3 docs/s instructions=  2515834029 cycles=   887128310 branch_miss=  948399 cache_miss= 8116837 cache_ref=  12038883 items=    524288 avg_time= 265925519 ns]
kostya<rapidjson_insitu>/manual_time                   229692872 ns    240151211 ns            3          1062.5k           606.998M        11.0984M       15.6939M    753.202M              5.48561            4.4208       3.32975G            2.048G                    14.9157                     2.71906           2.31777M    1058.35k   137.305M       570.084M/s   10.7879M   15.3138M   756.622M         5.51052    4.35364/s 3.29406G/s     2.04801G               14.9157                2.70678   524.288k       2.28256M/s [BEST: throughput=  0.61 GB/s doc_throughput=     4 docs/s instructions=  2048004085 cycles=   753202226 branch_miss= 1062502 cache_miss=11098366 cache_ref=  15693871 items=    524288 avg_time= 229692872 ns]
kostya<nlohmann_json>/manual_time                     1612695975 ns   1622949908 ns            1         4.80403M             85.14M        69.7364M       87.5163M    5.94813G              43.3205           0.62008       3.68831G          15.1309G                    110.199                      2.5438             325.1k    4.80403M   137.305M       81.1959M/s   69.7364M   87.5163M   5.94813G         43.3205    0.62008/s 3.68831G/s     15.1309G               110.199                 2.5438   524.288k         325.1k/s [BEST: throughput=  0.09 GB/s doc_throughput=     0 docs/s instructions= 15130854605 cycles=  5948125316 branch_miss= 4804027 cache_miss=69736423 cache_ref=  87516293 items=    524288 avg_time=1612695975 ns]
distinct_user_id<simdjson_dom>/manual_time                262646 ns       293711 ns         2667           3.772k           2.42146G               0        94.578k     963.06k                1.525          3.83437k       3.69273G          2.85594M                    4.52236                     2.96548           440.953k    3.94737k   631.515k       2.23931G/s    7.48219   94.5684k   969.012k         1.53442   3.80741k/s 3.68943G/s     2.85594M               4.52236                2.94727        115       437.852k/s [BEST: throughput=  2.42 GB/s doc_throughput=  3834 docs/s instructions=     2855937 cycles=      963060 branch_miss=    3772 cache_miss=       0 cache_ref=     94578 items=       115 avg_time=    262645 ns]
distinct_user_id<simdjson_ondemand>/manual_time           184242 ns       214505 ns         3798           1.776k           3.45003G               0        57.033k    676.017k              1.07047          5.46311k       3.69315G          2.10219M                    3.32881                     3.10968           628.257k    1.92927k   631.515k       3.19224G/s   0.104265   57.2032k   680.002k         1.07678   5.42765k/s 3.69081G/s     2.10219M               3.32881                3.09145        115        624.18k/s [BEST: throughput=  3.45 GB/s doc_throughput=  5463 docs/s instructions=     2102194 cycles=      676017 branch_miss=    1776 cache_miss=       0 cache_ref=     57033 items=       115 avg_time=    184241 ns]
distinct_user_id<yyjson>/manual_time                      600206 ns       634069 ns         1000           7.081k           1.66653G          15.95k         76.23k    1.39916M              2.21555          2.63893k       3.69228G          2.87515M                    4.55279                     2.05492           303.477k     7.4984k   631.515k       1003.42M/s   7.51223k   57.9616k   1.61892M         2.56354   1.66609k/s 2.69727G/s     2.87531M               4.55303                1.77607        115       191.601k/s [BEST: throughput=  1.67 GB/s doc_throughput=  2638 docs/s instructions=     2875153 cycles=     1399156 branch_miss=    7081 cache_miss=   15950 cache_ref=     76230 items=       115 avg_time=    600205 ns]
distinct_user_id<yyjson_insitu>/manual_time               472709 ns       505832 ns         1481            7.09k           1.79283G             372        46.803k    1.29728M              2.05423          2.83893k       3.68288G          2.87478M                    4.55219                     2.21601           326.477k     7.6144k   631.515k        1.2442G/s    100.917   32.5239k   1.41095M         2.23423   2.11547k/s 2.98482G/s     2.87504M               4.55261                2.03766        115       243.279k/s [BEST: throughput=  1.79 GB/s doc_throughput=  2838 docs/s instructions=     2874779 cycles=     1297275 branch_miss=    7090 cache_miss=     372 cache_ref=     46803 items=       115 avg_time=    472708 ns]
distinct_user_id<sajson>/manual_time                      551630 ns       582543 ns         1268          10.159k           1.15355G               0        47.892k    2.02111M              3.20042          1.82664k       3.69185G          5.98101M                    9.47089                     2.95926           210.064k    10.6354k   631.515k       1091.78M/s    8.25237   47.7539k   2.03479M         3.22208   1.81281k/s 3.68869G/s     5.98101M               9.47089                2.93937        115       208.473k/s [BEST: throughput=  1.15 GB/s doc_throughput=  1826 docs/s instructions=     5981008 cycles=     2021114 branch_miss=   10159 cache_miss=       0 cache_ref=     47892 items=       115 avg_time=    551629 ns]
distinct_user_id<rapidjson>/manual_time                  1621804 ns      1652941 ns          435          26.894k            442.48M         10.159k        55.432k    5.26877M              8.34307           700.664       3.69164G          13.0656M                    20.6893                     2.47982           80.5763k    27.0467k   631.515k       371.352M/s    959.278   35.9359k   5.42841M         8.59586    616.597/s 3.34715G/s     13.0665M               20.6907                2.40705        115       70.9087k/s [BEST: throughput=  0.44 GB/s doc_throughput=   700 docs/s instructions=    13065594 cycles=     5268773 branch_miss=   26894 cache_miss=   10159 cache_ref=     55432 items=       115 avg_time=   1621803 ns]
distinct_user_id<rapidjson_insitu>/manual_time           1010302 ns      1040724 ns          701           23.76k           696.064M             225        45.358k    3.34933M              5.30365          1.10221k       3.69168G           9.7769M                    15.4817                     2.91906           126.754k     23.943k   631.515k       596.119M/s   1.90229k    37.064k   3.43642M         5.44155    989.803/s 3.40138G/s     9.77724M               15.4822                2.84518        115       113.827k/s [BEST: throughput=  0.70 GB/s doc_throughput=  1102 docs/s instructions=     9776900 cycles=     3349332 branch_miss=   23760 cache_miss=     225 cache_ref=     45358 items=       115 avg_time=   1010301 ns]
distinct_user_id<nlohmann_json>/manual_time              7093420 ns      7128132 ns          101         110.781k            91.848M              43       225.381k    25.3635M               40.163           145.441       3.68889G          66.2465M                    104.901                     2.61188           16.7257k    127.994k   631.515k        84.904M/s    203.792   390.242k   26.1646M         41.4315    140.976/s 3.68857G/s     64.8894M               102.752                2.48005        115       16.2122k/s [BEST: throughput=  0.09 GB/s doc_throughput=   145 docs/s instructions=    66246537 cycles=    25363511 branch_miss=  110781 cache_miss=      43 cache_ref=    225381 items=       115 avg_time=   7093420 ns]
find_tweet<simdjson_dom>/manual_time                      250645 ns       279876 ns         2792           3.463k           2.53563G               0        83.983k    919.614k               1.4562          4.01516k        3.6924G           2.7749M                    4.39403                     3.01746           4.01516k    3.58649k   631.515k       2.34652G/s    10.2296   83.8752k   924.726k          1.4643   3.98971k/s 3.68939G/s      2.7749M               4.39403                3.00078          1       3.98971k/s [BEST: throughput=  2.54 GB/s doc_throughput=  4015 docs/s instructions=     2774898 cycles=      919614 branch_miss=    3463 cache_miss=       0 cache_ref=     83983 items=         1 avg_time=    250644 ns]
find_tweet<simdjson_ondemand>/manual_time                 119037 ns       147581 ns         5870              722           5.32722G               0        32.866k      437.9k             0.693412          8.43562k       3.69396G          1.47887M                    2.34178                     3.37718           8.43562k     758.248   631.515k       4.94087G/s   0.086201   32.9686k   439.442k        0.695854   8.40078k/s 3.69166G/s     1.47887M               2.34178                3.36533          1       8.40078k/s [BEST: throughput=  5.33 GB/s doc_throughput=  8435 docs/s instructions=     1478869 cycles=      437900 branch_miss=     722 cache_miss=       0 cache_ref=     32866 items=         1 avg_time=    119036 ns]
find_tweet<yyjson>/manual_time                            663874 ns       694881 ns         1189           9.488k           1.63688G             637        69.335k    1.42452M              2.25571            2.592k       3.69234G          2.82413M                    4.47199                     1.98252             2.592k    7.49324k   631.515k        907.19M/s    1045.58   41.6176k   1.64718M          2.6083   1.50631k/s 2.48116G/s     2.82482M               4.47309                1.71495          1       1.50631k/s [BEST: throughput=  1.64 GB/s doc_throughput=  2591 docs/s instructions=     2824129 cycles=     1424515 branch_miss=    9488 cache_miss=     637 cache_ref=     69335 items=         1 avg_time=    663874 ns]
find_tweet<yyjson_insitu>/manual_time                     461616 ns       492040 ns         1517           6.735k           1.84806G             444        38.188k    1.25833M              1.99255          2.92639k       3.68235G          2.82381M                    4.47149                      2.2441           2.92639k     7.2909k   631.515k        1.2741G/s    16.2624   23.6512k   1.37099M         2.17096    2.1663k/s 2.96999G/s     2.82407M                4.4719                2.05987          1        2.1663k/s [BEST: throughput=  1.85 GB/s doc_throughput=  2926 docs/s instructions=     2823811 cycles=     1258325 branch_miss=    6735 cache_miss=     444 cache_ref=     38188 items=         1 avg_time=    461616 ns]
find_tweet<sajson>/manual_time                            538911 ns       568779 ns         1295            9.93k           1.18153G               0        38.263k    1.97324M              3.12461          1.87094k        3.6918G          5.88886M                    9.32498                     2.98437           1.87094k    10.3828k   631.515k       1117.55M/s    11.3544   38.2075k   1.98792M         3.14786    1.8556k/s 3.68878G/s     5.88886M               9.32498                2.96232          1        1.8556k/s [BEST: throughput=  1.18 GB/s doc_throughput=  1870 docs/s instructions=     5888863 cycles=     1973236 branch_miss=    9930 cache_miss=       0 cache_ref=     38263 items=         1 avg_time=    538910 ns]
find_tweet<rapidjson>/manual_time                        1612696 ns      1641810 ns          437          26.799k           445.541M          9.606k        48.822k     5.2324M              8.28547           705.511       3.69152G           12.998M                    20.5823                     2.48414            705.511    26.9075k   631.515k       373.449M/s    686.622   28.5205k   5.39526M         8.54336     620.08/s 3.34549G/s     12.9989M               20.5837                2.40932          1         620.08/s [BEST: throughput=  0.45 GB/s doc_throughput=   705 docs/s instructions=    12998004 cycles=     5232400 branch_miss=   26799 cache_miss=    9606 cache_ref=     48822 items=         1 avg_time=   1612695 ns]
find_tweet<rapidjson_insitu>/manual_time                 1000292 ns      1030277 ns          711          23.632k           703.276M              41        36.679k    3.31508M              5.24941          1.11363k       3.69178G          9.71923M                    15.3903                     2.93182           1.11363k     23.839k   631.515k       602.084M/s   1.69039k    27.803k   3.39947M         5.38303    999.709/s 3.39848G/s     9.71957M               15.3909                2.85915          1        999.709/s [BEST: throughput=  0.70 GB/s doc_throughput=  1113 docs/s instructions=     9719230 cycles=     3315081 branch_miss=   23632 cache_miss=      41 cache_ref=     36679 items=         1 avg_time=   1000291 ns]
find_tweet<nlohmann_json>/manual_time                    6052438 ns      6082898 ns          117          88.681k           108.192M              62        170.16k    21.5388M              34.1065           171.321       3.69005G          56.6597M                    89.7203                     2.63059            171.321    104.624k   631.515k        99.507M/s    54.1538   329.682k    22.326M         35.3531    165.223/s 3.68876G/s      55.298M               87.5641                2.47684          1        165.223/s [BEST: throughput=  0.11 GB/s doc_throughput=   171 docs/s instructions=    56659695 cycles=    21538770 branch_miss=   88681 cache_miss=      62 cache_ref=    170160 items=         1 avg_time=   6052437 ns]
top_tweet<simdjson_dom>/manual_time                       256532 ns       285247 ns         2726            3.51k           2.47736G               0        91.837k    941.293k              1.49053          3.92289k       3.69259G          2.80907M                    4.44814                     2.98426           3.92289k    3.68196k   631.515k       2.29267G/s    0.50807   91.8668k   946.699k         1.49909   3.89815k/s 3.69038G/s     2.80907M               4.44814                2.96722          1       3.89815k/s [BEST: throughput=  2.48 GB/s doc_throughput=  3922 docs/s instructions=     2809067 cycles=      941293 branch_miss=    3510 cache_miss=       0 cache_ref=     91837 items=         1 avg_time=    256531 ns]
top_tweet<simdjson_ondemand>/manual_time                  177390 ns       205834 ns         3947           1.524k           3.58536G               0        57.232k    650.524k               1.0301           5.6774k       3.69328G          2.10137M                     3.3275                     3.23027            5.6774k    1.66314k   631.515k       3.31555G/s   0.508234   57.1892k   654.623k         1.03659    5.6373k/s 3.69031G/s     2.10137M                3.3275                3.21004          1        5.6373k/s [BEST: throughput=  3.59 GB/s doc_throughput=  5677 docs/s instructions=     2101367 cycles=      650524 branch_miss=    1524 cache_miss=       0 cache_ref=     57232 items=         1 avg_time=    177389 ns]
top_tweet<simdjson_ondemand_forward_only>/manual_time     175306 ns       203723 ns         3993           1.477k             3.625G               0        58.048k     643.39k               1.0188          5.74017k       3.69317G          2.12693M                    3.36799                     3.30582           5.74017k    1.61568k   631.515k       3.35496G/s  0.0383171   57.9276k   646.917k         1.02439   5.70431k/s 3.69022G/s     2.12693M               3.36799                 3.2878          1       5.70431k/s [BEST: throughput=  3.63 GB/s doc_throughput=  5740 docs/s instructions=     2126934 cycles=      643390 branch_miss=    1477 cache_miss=       0 cache_ref=     58048 items=         1 avg_time=    175306 ns]
top_tweet<yyjson>/manual_time                             668608 ns       698952 ns         1198            9.54k           1.62019G             446        73.809k    1.43921M              2.27899          2.56556k       3.69239G          2.84502M                    4.50508                     1.97679           2.56556k    7.59252k   631.515k       900.766M/s    1036.89   46.9295k   1.66571M         2.63764   1.49564k/s 2.49131G/s      2.8455M               4.50583                1.70828          1       1.49564k/s [BEST: throughput=  1.62 GB/s doc_throughput=  2565 docs/s instructions=     2845023 cycles=     1439215 branch_miss=    9540 cache_miss=     446 cache_ref=     73809 items=         1 avg_time=    668608 ns]
top_tweet<yyjson_insitu>/manual_time                      467736 ns       497206 ns         1496           6.894k            1.8181G             461        42.664k      1.279M              2.02529          2.87895k       3.68217G           2.8447M                    4.50456                     2.22416           2.87895k    7.46932k   631.515k       1.25743G/s    54.2754   28.8087k   1.39262M         2.20521   2.13796k/s 2.97737G/s     2.84496M               4.50497                2.04288          1       2.13796k/s [BEST: throughput=  1.82 GB/s doc_throughput=  2878 docs/s instructions=     2844696 cycles=     1278998 branch_miss=    6894 cache_miss=     461 cache_ref=     42664 items=         1 avg_time=    467735 ns]
top_tweet<sajson>/manual_time                             543109 ns       572131 ns         1289          10.019k           1.17165G               0        43.642k    1.98993M              3.15104           1.8553k       3.69191G          5.91603M                      9.368                     2.97299            1.8553k    10.4359k   631.515k       1108.91M/s    1.03879   43.7124k   2.00375M         3.17293   1.84125k/s 3.68941G/s     5.91604M                 9.368                2.95248          1       1.84125k/s [BEST: throughput=  1.17 GB/s doc_throughput=  1855 docs/s instructions=     5916035 cycles=     1989927 branch_miss=   10019 cache_miss=       0 cache_ref=     43642 items=         1 avg_time=    543108 ns]
top_tweet<rapidjson>/manual_time                         1616835 ns      1645989 ns          436          26.656k           444.303M          9.557k        51.736k    5.24701M               8.3086           703.551       3.69154G          13.0479M                    20.6612                     2.48673            703.551    27.0692k   631.515k       372.493M/s    821.388   32.5812k   5.41047M         8.56744    618.492/s 3.34633G/s     13.0487M               20.6626                2.41176          1        618.492/s [BEST: throughput=  0.44 GB/s doc_throughput=   703 docs/s instructions=    13047883 cycles=     5247008 branch_miss=   26656 cache_miss=    9557 cache_ref=     51736 items=         1 avg_time=   1616835 ns]
top_tweet<rapidjson_insitu>/manual_time                  1005728 ns      1035114 ns          704          23.783k           698.857M              23        41.489k     3.3359M              5.28238          1.10664k       3.69163G          9.76103M                    15.4565                     2.92605           1.10664k    23.9091k   631.515k       598.829M/s   1.80989k   33.4731k   3.42117M          5.4174    994.304/s 3.40168G/s     9.76137M               15.4571                2.85322          1        994.304/s [BEST: throughput=  0.70 GB/s doc_throughput=  1106 docs/s instructions=     9761031 cycles=     3335902 branch_miss=   23783 cache_miss=      23 cache_ref=     41489 items=         1 avg_time=   1005728 ns]
top_tweet<nlohmann_json>/manual_time                     8625535 ns      8655365 ns           81         177.817k           73.7265M              21       395.119k    31.5995M              50.0375           116.745       3.68909G          78.2017M                    123.832                     2.47478            116.745    182.809k   631.515k       69.8229M/s    60.2716   411.694k   31.8151M         50.3791    115.935/s 3.68848G/s     78.4645M               124.248                2.46626          1        115.935/s [BEST: throughput=  0.07 GB/s doc_throughput=   116 docs/s instructions=    78201696 cycles=    31599462 branch_miss=  177817 cache_miss=      21 cache_ref=    395119 items=         1 avg_time=   8625535 ns]
