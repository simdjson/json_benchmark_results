run_benchmark: v0.8.0~2 /home/jkeiser/simdjson_benchmark_results/v0.7.0/36/ampere-gcc10.2-native.json -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native
git reset --hard v0.8.0~2
HEAD is now at 2a714f4e Hide the std::pair inheritance in our result instances (#1396)
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The CXX compiler identification is GNU 10.2.0
-- The C compiler identification is GNU 10.2.0
-- Check for working CXX compiler: /usr/bin/g++-10
-- Check for working CXX compiler: /usr/bin/g++-10 -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Check for working C compiler: /usr/bin/gcc-10
-- Check for working C compiler: /usr/bin/gcc-10 -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed
-- Check if compiler accepts -pthread
-- Check if compiler accepts -pthread - yes
-- Found Threads: TRUE  
-- Looking for fork
-- Looking for fork - found
-- Looking for wait
-- Looking for wait - found
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Found Git: /usr/bin/git (found version "2.27.0") 
-- git Version: v0.2.1-2a714f4e
-- Version: 0.2.1
-- Performing Test HAVE_CXX_FLAG_STD_CXX11
-- Performing Test HAVE_CXX_FLAG_STD_CXX11 - Success
-- Performing Test HAVE_CXX_FLAG_WALL
-- Performing Test HAVE_CXX_FLAG_WALL - Success
-- Performing Test HAVE_CXX_FLAG_WEXTRA
-- Performing Test HAVE_CXX_FLAG_WEXTRA - Success
-- Performing Test HAVE_CXX_FLAG_WSHADOW
-- Performing Test HAVE_CXX_FLAG_WSHADOW - Success
-- Performing Test HAVE_CXX_FLAG_WERROR
-- Performing Test HAVE_CXX_FLAG_WERROR - Success
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32 - Failed
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED - Success
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WD654
-- Performing Test HAVE_CXX_FLAG_WD654 - Failed
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY - Failed
-- Performing Test HAVE_CXX_FLAG_COVERAGE
-- Performing Test HAVE_CXX_FLAG_COVERAGE - Success
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Performing Test USE_BOOST_JSON
-- Performing Test USE_BOOST_JSON - Failed
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Found Python3: /usr/bin/python3.8 (found version "3.8.6") found components: Interpreter 
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 10
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
Scanning dependencies of target benchmark
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_api_internal.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_name.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_name.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_register.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_register.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_runner.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_runner.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/colorprint.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/colorprint.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/commandlineflags.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/commandlineflags.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/complexity.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/complexity.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/console_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/console_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/counter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/counter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/csv_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/csv_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/json_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/json_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/sleep.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sleep.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/statistics.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/statistics.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/string_util.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/string_util.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/sysinfo.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sysinfo.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/timers.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/timers.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -P CMakeFiles/benchmark.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/benchmark.dir/link.txt --verbose=1
/usr/bin/ar qc libbenchmark.a  CMakeFiles/benchmark.dir/benchmark.cc.o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o CMakeFiles/benchmark.dir/benchmark_name.cc.o CMakeFiles/benchmark.dir/benchmark_register.cc.o CMakeFiles/benchmark.dir/benchmark_runner.cc.o CMakeFiles/benchmark.dir/colorprint.cc.o CMakeFiles/benchmark.dir/commandlineflags.cc.o CMakeFiles/benchmark.dir/complexity.cc.o CMakeFiles/benchmark.dir/console_reporter.cc.o CMakeFiles/benchmark.dir/counter.cc.o CMakeFiles/benchmark.dir/csv_reporter.cc.o CMakeFiles/benchmark.dir/json_reporter.cc.o CMakeFiles/benchmark.dir/reporter.cc.o CMakeFiles/benchmark.dir/sleep.cc.o CMakeFiles/benchmark.dir/statistics.cc.o CMakeFiles/benchmark.dir/string_util.cc.o CMakeFiles/benchmark.dir/sysinfo.cc.o CMakeFiles/benchmark.dir/timers.cc.o
/usr/bin/ranlib libbenchmark.a
[ 80%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
Scanning dependencies of target generated-data
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated && /usr/bin/ruby genfeaturejson.rb /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-miss.json ...
[ 80%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/g++-10  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/src  -march=native -O3 -DNDEBUG -fPIC   -pthread -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/g++-10 -fPIC -march=native -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.6 -o ../libsimdjson.so.6.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.6.0.0 ../libsimdjson.so.6 ../libsimdjson.so
[ 80%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
Scanning dependencies of target yyjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/gcc-10  -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src  -O3 -DNDEBUG   -o CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o   -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src/yyjson.c
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -P CMakeFiles/yyjson.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -E cmake_link_script CMakeFiles/yyjson.dir/link.txt --verbose=1
/usr/bin/ar qc libyyjson.a  CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o
/usr/bin/ranlib libyyjson.a
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/g++-10  -DRAPIDJSON_HAS_STDSTRING -DSAJSON_UNSORTED_OBJECT_KEYS -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_COMPETITION_NLOHMANN_JSON -DSIMDJSON_COMPETITION_RAPIDJSON -DSIMDJSON_COMPETITION_SAJSON -DSIMDJSON_COMPETITION_YYJSON -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/rapidjson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/sajson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/json  -march=native -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/g++-10  -march=native -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.6.0.0 ../_deps/google_benchmarks/src/libbenchmark.a ../dependencies/libyyjson.a -pthread /usr/lib/aarch64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/36/ampere-gcc10.2-native.json --benchmark_out_format=json
2021-01-25 00:25:33
Running benchmark/bench_ondemand
Run on (32 X 3300 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x32)
  L1 Instruction 32 KiB (x32)
  L2 Unified 256 KiB (x16)
Load Average: 1.03, 1.04, 1.00
simdjson::dom implementation:      arm64
simdjson::ondemand implementation: arm64

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                 1574530 ns      1642248 ns          444          17.007k           402.084M         25.923k       905.166k    5.02795M              7.96173           636.698       3.20128G          3.92138M                    6.20949                    0.779917           63.6698k    17.2975k   631.515k       382.501M/s   25.9191k   906.147k   5.03488M          7.9727     635.11/s  3.1977G/s     3.92139M               6.20949               0.778844        100        63.511k/s [BEST: throughput=  0.40 GB/s doc_throughput=   636 docs/s instructions=     3921383 cycles=     5027951 branch_miss=   17007 cache_miss=   25923 cache_ref=    905166 items=       100 avg_time=   1574529 ns]
partial_tweets<simdjson_ondemand>/manual_time            1067698 ns      1135483 ns          656           6.969k           592.781M         22.776k       402.734k    3.41118M              5.40158           938.665       3.20195G          2.75756M                    4.36658                     0.80839           93.8665k    7.08059k   631.515k       564.073M/s   22.7756k   402.984k   3.41502M         5.40767    936.594/s 3.19849G/s     2.75756M               4.36659                0.80748        100       93.6594k/s [BEST: throughput=  0.59 GB/s doc_throughput=   938 docs/s instructions=     2757562 cycles=     3411178 branch_miss=    6969 cache_miss=   22776 cache_ref=    402734 items=       100 avg_time=   1067698 ns]
partial_tweets<yyjson>/manual_time                       1236629 ns      1306507 ns          568          48.269k           577.002M         24.455k       1.49124M    3.50424M              5.54894           913.678       3.20174G          3.54891M                    5.61968                     1.01275           91.3678k    47.9828k   631.515k       487.017M/s   24.3878k   1.49235M   3.73528M         5.91479     808.65/s 3.02053G/s     3.54899M                5.6198               0.950127        100        80.865k/s [BEST: throughput=  0.58 GB/s doc_throughput=   913 docs/s instructions=     3548911 cycles=     3504236 branch_miss=   48269 cache_miss=   24455 cache_ref=   1491238 items=       100 avg_time=   1236628 ns]
partial_tweets<yyjson_insitu>/manual_time                1155486 ns      1226658 ns          607          48.082k           599.306M         14.437k       1.33272M    3.37433M              5.34322           948.997       3.20223G          3.45007M                    5.46317                     1.02245           94.8997k    47.9218k   631.515k       521.218M/s   14.4767k   1.33279M   3.58615M         5.67865    865.437/s 3.10359G/s     3.45022M               5.46341               0.962096        100       86.5437k/s [BEST: throughput=  0.60 GB/s doc_throughput=   948 docs/s instructions=     3450071 cycles=     3374326 branch_miss=   48082 cache_miss=   14437 cache_ref=   1332722 items=       100 avg_time=   1155486 ns]
partial_tweets<sajson>/manual_time                       1483633 ns      1553254 ns          472           68.87k           426.736M         12.713k       1.87569M    4.73759M              7.50194           675.734       3.20135G          5.31238M                    8.41212                     1.12133           67.5734k    69.2472k   631.515k       405.936M/s   12.7012k   1.87679M   4.74436M         7.51267    674.021/s  3.1978G/s     5.31239M               8.41213                1.11973        100       67.4021k/s [BEST: throughput=  0.43 GB/s doc_throughput=   675 docs/s instructions=     5312383 cycles=     4737590 branch_miss=   68870 cache_miss=   12713 cache_ref=   1875688 items=       100 avg_time=   1483632 ns]
partial_tweets<rapidjson>/manual_time                    2814917 ns      2886533 ns          250          76.685k           230.752M         12.953k       6.27353M    8.75957M              13.8707           365.394        3.2007G          13.3636M                    21.1612                      1.5256           36.5394k     76.512k   631.515k       213.953M/s   13.1899k   6.28174M   8.80016M          13.935     355.25/s 3.12626G/s     13.3642M               21.1621                1.51863        100        35.525k/s [BEST: throughput=  0.23 GB/s doc_throughput=   365 docs/s instructions=    13363601 cycles=     8759573 branch_miss=   76685 cache_miss=   12953 cache_ref=   6273535 items=       100 avg_time=   2814917 ns]
partial_tweets<rapidjson_insitu>/manual_time             2130121 ns      2202398 ns          329          59.626k           304.802M          13.74k       3.42967M    6.63177M              10.5014           482.652       3.20084G          9.76597M                    15.4644                      1.4726           48.2652k    59.6561k   631.515k       282.735M/s   13.8878k    3.4308M   6.66452M         10.5532    469.457/s  3.1287G/s     9.76653M               15.4652                1.46545        100       46.9457k/s [BEST: throughput=  0.30 GB/s doc_throughput=   482 docs/s instructions=     9765970 cycles=     6631773 branch_miss=   59626 cache_miss=   13740 cache_ref=   3429666 items=       100 avg_time=   2130120 ns]
partial_tweets<nlohmann_json>/manual_time               16901189 ns     16995151 ns           41         367.781k            40.151M        197.289k       38.7207M    50.3017M              79.6524           63.5789       3.19813G          68.9807M                     109.23                     1.37134           6.35789k      384.8k   631.515k       35.6342M/s   253.062k   39.0564M    54.029M         85.5546    59.1674/s 3.19676G/s     69.6159M               110.236                1.28849        100       5.91674k/s [BEST: throughput=  0.04 GB/s doc_throughput=    63 docs/s instructions=    68980690 cycles=    50301662 branch_miss=  367781 cache_miss=  197289 cache_ref=  38720678 items=       100 avg_time=  16901189 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                 310973174 ns    314558679 ns            2         1.92213M           147.922M        3.98127M       246.808M    994.209M              21.6138           3.21578       3.19715G          1.10647G                    24.0544                     1.11292           3.21578M    1.92217M   45.9988M       141.066M/s   3.98128M   246.807M   994.214M         21.6139    3.21571/s 3.19711G/s     1.10647G               24.0544                1.11291      1000k       3.21571M/s [BEST: throughput=  0.15 GB/s doc_throughput=     3 docs/s instructions=  1106473020 cycles=   994208745 branch_miss= 1922127 cache_miss= 3981268 cache_ref= 246807917 items=   1000000 avg_time= 310973173 ns]
large_random<simdjson_ondemand>/manual_time            182697277 ns    186309168 ns            4         1.17515M           251.799M        2.31734M       134.428M     584.09M               12.698           5.47404       3.19733G          689.959M                    14.9995                     1.18125           5.47404M    1.17513M   45.9988M       240.112M/s   2.31736M   134.428M    584.08M         12.6977    5.47354/s 3.19698G/s     689.959M               14.9995                1.18127      1000k       5.47354M/s [BEST: throughput=  0.25 GB/s doc_throughput=     5 docs/s instructions=   689958569 cycles=   584090497 branch_miss= 1175153 cache_miss= 2317343 cache_ref= 134427656 items=   1000000 avg_time= 182697277 ns]
large_random<simdjson_ondemand_unordered>/manual_time  185415301 ns    189014407 ns            4         1.20696M           248.105M        2.31732M       138.381M     592.81M              12.8875           5.39372       3.19746G          694.959M                    15.1082                     1.17231           5.39372M    1.20662M   45.9988M       236.592M/s   2.31735M   138.381M   592.812M         12.8876     5.3933/s 3.19721G/s     694.959M               15.1082                1.17231      1000k        5.3933M/s [BEST: throughput=  0.25 GB/s doc_throughput=     5 docs/s instructions=   694958571 cycles=   592810359 branch_miss= 1206964 cache_miss= 2317320 cache_ref= 138381149 items=   1000000 avg_time= 185415301 ns]
large_random<yyjson>/manual_time                       202474935 ns    206079371 ns            3          1.5672M           227.278M         4.9127M       234.839M    622.145M              13.5252           4.94095       3.07399G          908.192M                    19.7438                     1.45978           4.94095M     1.5659M   45.9988M       216.658M/s   4.91268M   234.835M   622.418M         13.5312    4.93888/s 3.07405G/s     908.192M               19.7438                1.45914      1000k       4.93888M/s [BEST: throughput=  0.23 GB/s doc_throughput=     4 docs/s instructions=   908191577 cycles=   622144898 branch_miss= 1567201 cache_miss= 4912702 cache_ref= 234839335 items=   1000000 avg_time= 202474934 ns]
large_random<yyjson_insitu>/manual_time                196378680 ns    199963673 ns            4         1.56504M           234.317M        4.19569M       223.323M    609.523M              13.2508           5.09399        3.1049G          901.004M                    19.5876                     1.47821           5.09399M    1.56421M   45.9988M       223.384M/s   4.19574M   223.324M   609.709M         13.2549     5.0922/s 3.10476G/s     901.004M               19.5876                1.47776      1000k        5.0922M/s [BEST: throughput=  0.23 GB/s doc_throughput=     5 docs/s instructions=   901004037 cycles=   609522592 branch_miss= 1565044 cache_miss= 4195694 cache_ref= 223323466 items=   1000000 avg_time= 196378679 ns]
large_random<sajson>/manual_time                       178179596 ns    181760595 ns            4         1.65894M           277.098M         3.4436M        222.11M    530.584M              11.5347           6.02403       3.19626G          955.996M                    20.7831                     1.80178           6.02403M    1.65889M   45.9988M         246.2M/s   3.44358M   222.112M   569.571M         12.3823    5.61231/s 3.19661G/s     955.996M               20.7831                1.67845      1000k       5.61231M/s [BEST: throughput=  0.28 GB/s doc_throughput=     6 docs/s instructions=   955995643 cycles=   530584141 branch_miss= 1658944 cache_miss= 3443599 cache_ref= 222110446 items=   1000000 avg_time= 178179596 ns]
large_random<rapidjson>/manual_time                    348036600 ns    351655802 ns            2         1.91417M           132.507M        4.95639M       755.859M    1083.34M              23.5514           2.88066       3.12073G          1.65551G                    35.9903                     1.52816           2.88066M    1.91974M   45.9988M       126.044M/s   4.95733M   755.863M   1083.81M         23.5617    2.87326/s 3.11407G/s     1.65551G               35.9904                1.52749      1000k       2.87326M/s [BEST: throughput=  0.13 GB/s doc_throughput=     2 docs/s instructions=  1655507695 cycles=  1083336311 branch_miss= 1914175 cache_miss= 4956391 cache_ref= 755858719 items=   1000000 avg_time= 348036600 ns]
large_random<rapidjson_lossless>/manual_time           390548629 ns    394143936 ns            2         2.29299M           117.994M         4.9561M       953.198M    1.21976G              26.5173           2.56516       3.12888G          1.97048G                    42.8377                     1.61546           2.56516M    2.28999M   45.9988M       112.324M/s   4.95709M   953.196M   1.21966G         26.5151     2.5605/s 3.12295G/s     1.97049G               42.8378                 1.6156      1000k        2.5605M/s [BEST: throughput=  0.12 GB/s doc_throughput=     2 docs/s instructions=  1970483463 cycles=  1219762816 branch_miss= 2292988 cache_miss= 4956098 cache_ref= 953197656 items=   1000000 avg_time= 390548629 ns]
large_random<rapidjson_insitu>/manual_time             329906288 ns    333496934 ns            2         2.09678M           139.766M         5.6703M       734.588M    1026.07M              22.3065           3.03847       3.11769G          1.55051G                    33.7076                     1.51111           3.03847M    2.10352M   45.9988M       132.971M/s   5.67119M   734.601M    1026.3M         22.3114    3.03116/s 3.11088G/s     1.55051G               33.7077                1.51078      1000k       3.03116M/s [BEST: throughput=  0.14 GB/s doc_throughput=     3 docs/s instructions=  1550507533 cycles=  1026072955 branch_miss= 2096782 cache_miss= 5670304 cache_ref= 734588329 items=   1000000 avg_time= 329906288 ns]
large_random<nlohmann_json>/manual_time               2672221740 ns   2675784037 ns            1         13.1903M           17.2137M        27.5515M       5.82437G    8.53906G              185.637           0.37422       3.19549G          12.0941G                    262.922                     1.41632            374.22k    13.1903M   45.9988M       16.4162M/s   27.5515M   5.82437G   8.53906G         185.637    0.37422/s 3.19549G/s     12.0941G               262.922                1.41632      1000k        374.22k/s [BEST: throughput=  0.02 GB/s doc_throughput=     0 docs/s instructions= 12094073252 cycles=  8539059978 branch_miss=13190339 cache_miss=27551484 cache_ref=5824365793 items=   1000000 avg_time=2672221740 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                       379494724 ns    390198424 ns            2         1.10351M           361.841M        6.94303M       246.886M    1.21322G              8.83597           2.63531       3.19721G          1.14604G                    8.34671                    0.944628           1.38166M    1.10335M   137.305M       345.049M/s   6.94297M   246.885M    1.2133G         8.83655    2.63508/s 3.19715G/s     1.14604G               8.34671               0.944566   524.288k       1.38154M/s [BEST: throughput=  0.36 GB/s doc_throughput=     2 docs/s instructions=  1146044374 cycles=  1213222441 branch_miss= 1103512 cache_miss= 6943029 cache_ref= 246886241 items=    524288 avg_time= 379494723 ns]
kostya<simdjson_ondemand>/manual_time                  260987997 ns    271654564 ns            3         1.36009M           528.419M         5.2831M       138.224M    830.679M              6.04988            3.8485       3.19687G          796.596M                    5.80166                    0.958971           2.01772M    1.49606M   137.305M       501.725M/s   5.28306M   138.636M   834.325M         6.07644    3.83159/s  3.1968G/s     796.596M               5.80166               0.954779   524.288k       2.00886M/s [BEST: throughput=  0.53 GB/s doc_throughput=     3 docs/s instructions=   796596293 cycles=   830678576 branch_miss= 1360094 cache_miss= 5283098 cache_ref= 138223704 items=    524288 avg_time= 260987997 ns]
kostya<yyjson>/manual_time                             290929716 ns    301641713 ns            2         996.211k           472.098M         7.9891M       344.627M    887.796M              6.46587           3.43832       3.05252G          1052.15M                    7.66289                     1.18513           1.80267M    998.097k   137.305M       450.089M/s   7.98855M   344.632M   888.061M          6.4678    3.43726/s 3.05249G/s     1052.15M               7.66289                1.18477   524.288k       1.80211M/s [BEST: throughput=  0.47 GB/s doc_throughput=     3 docs/s instructions=  1052152407 cycles=   887795812 branch_miss=  996211 cache_miss= 7989101 cache_ref= 344626817 items=    524288 avg_time= 290929716 ns]
kostya<yyjson_insitu>/manual_time                      273809212 ns    284497076 ns            3         976.322k           501.677M        5.85179M       310.257M    853.539M              6.21637           3.65374       3.11861G           1030.7M                    7.50663                     1.20756           1.91561M    986.922k   137.305M       478.232M/s   5.85047M   310.286M   853.896M         6.21897    3.65218/s 3.11858G/s      1030.7M               7.50663                1.20705   524.288k       1.91479M/s [BEST: throughput=  0.50 GB/s doc_throughput=     3 docs/s instructions=  1030698181 cycles=   853539248 branch_miss=  976322 cache_miss= 5851791 cache_ref= 310256912 items=    524288 avg_time= 273809211 ns]
kostya<sajson>/manual_time                             399635402 ns    410313102 ns            2         7.40939M           343.763M        4.64264M       425.191M    1.27703G              9.30071           2.50364       3.19724G          1.38919G                    10.1176                     1.08783           1.31263M     7.5098M   137.305M       327.659M/s   4.64265M   425.948M   1.27764G          9.3051    2.50228/s 3.19701G/s     1.38919G               10.1176                1.08731   524.288k       1.31192M/s [BEST: throughput=  0.34 GB/s doc_throughput=     2 docs/s instructions=  1389192349 cycles=  1277034139 branch_miss= 7409392 cache_miss= 4642642 cache_ref= 425191395 items=    524288 avg_time= 399635402 ns]
kostya<rapidjson>/manual_time                          561751979 ns    572444892 ns            1         7.40538M           244.423M        5.38901M        971.57M    1.76151G              12.8292           1.78015       3.13574G          2.37304G                     17.283                     1.34716           933.309k    7.40538M   137.305M         233.1M/s   5.38901M    971.57M   1.76151G         12.8292    1.78015/s 3.13574G/s     2.37304G                17.283                1.34716   524.288k       933.309k/s [BEST: throughput=  0.24 GB/s doc_throughput=     1 docs/s instructions=  2373037674 cycles=  1761508128 branch_miss= 7405379 cache_miss= 5389005 cache_ref= 971570090 items=    524288 avg_time= 561751979 ns]
kostya<rapidjson_lossless>/manual_time                 589724010 ns    600418558 ns            1         7.78234M           232.829M        5.39026M        1096.2M    1.85085G              13.4798           1.69571        3.1385G          2.55706G                    18.6232                     1.38156            889.04k    7.78234M   137.305M       222.043M/s   5.39026M    1096.2M   1.85085G         13.4798    1.69571/s  3.1385G/s     2.55706G               18.6232                1.38156   524.288k        889.04k/s [BEST: throughput=  0.23 GB/s doc_throughput=     1 docs/s instructions=  2557056116 cycles=  1850849930 branch_miss= 7782336 cache_miss= 5390264 cache_ref=1096201161 items=    524288 avg_time= 589724010 ns]
kostya<rapidjson_insitu>/manual_time                   541780588 ns    552473181 ns            1         6.72979M           253.433M        6.35791M       862.906M    1.69784G              12.3655           1.84577       3.13381G          2.17212G                    15.8197                     1.27934           967.713k    6.72979M   137.305M       241.692M/s   6.35791M   862.906M   1.69784G         12.3655    1.84577/s 3.13381G/s     2.17212G               15.8197                1.27934   524.288k       967.713k/s [BEST: throughput=  0.25 GB/s doc_throughput=     1 docs/s instructions=  2172119483 cycles=  1697838919 branch_miss= 6729791 cache_miss= 6357910 cache_ref= 862905682 items=    524288 avg_time= 541780588 ns]
kostya<nlohmann_json>/manual_time                     4104917402 ns   4115645219 ns            1         26.3584M           33.4489M        38.0089M       7.85657G    13.1236G              95.5799           0.24361       3.19704G          15.0753G                    109.794                     1.14872           127.722k    26.3584M   137.305M       31.8994M/s   38.0089M   7.85657G   13.1236G         95.5799    0.24361/s 3.19704G/s     15.0753G               109.794                1.14872   524.288k       127.722k/s [BEST: throughput=  0.03 GB/s doc_throughput=     0 docs/s instructions= 15075317970 cycles= 13123600618 branch_miss=26358369 cache_miss=38008915 cache_ref=7856573328 items=    524288 avg_time=4104917402 ns]
distinct_user_id<simdjson_dom>/manual_time               1562131 ns      1644194 ns          448          16.749k            405.33M         26.512k       890.063k    4.98743M              7.89756           641.838       3.20112G          3.85168M                    6.09911                    0.772278           73.8113k    17.0301k   631.515k       385.537M/s   26.5068k   890.534k   4.99557M         7.91045    640.151/s 3.19792G/s     3.85168M               6.09911               0.771019        115       73.6174k/s [BEST: throughput=  0.41 GB/s doc_throughput=   641 docs/s instructions=     3851677 cycles=     4987426 branch_miss=   16749 cache_miss=   26512 cache_ref=    890063 items=       115 avg_time=   1562131 ns]
distinct_user_id<simdjson_ondemand>/manual_time          1055640 ns      1138078 ns          663           6.811k           599.622M         22.411k       400.307k    3.37188M              5.33935           949.498       3.20159G          2.73848M                    4.33636                    0.812152           109.192k    6.95329k   631.515k       570.516M/s   22.4139k   400.694k    3.3765M         5.34667    947.293/s 3.19854G/s     2.73848M               4.33637                0.81104        115       108.939k/s [BEST: throughput=  0.60 GB/s doc_throughput=   949 docs/s instructions=     2738478 cycles=     3371880 branch_miss=    6811 cache_miss=   22411 cache_ref=    400307 items=       115 avg_time=   1055640 ns]
distinct_user_id<yyjson>/manual_time                     1187642 ns      1273820 ns          610          47.868k            586.19M         24.219k       1.47672M    3.44944M              5.46217           928.228       3.20187G          3.51486M                    5.56576                     1.01897           106.746k    47.6279k   631.515k       507.105M/s   24.2119k    1.4769M   3.67271M         5.81572    842.005/s 3.09244G/s       3.515M               5.56598               0.957059        115       96.8306k/s [BEST: throughput=  0.59 GB/s doc_throughput=   928 docs/s instructions=     3514864 cycles=     3449440 branch_miss=   47868 cache_miss=   24219 cache_ref=   1476716 items=       115 avg_time=   1187641 ns]
distinct_user_id<yyjson_insitu>/manual_time              1138216 ns      1224138 ns          613          47.571k           611.203M         14.273k       1.31722M    3.30859M              5.23913           967.836       3.20217G          3.41557M                    5.40854                     1.03234           111.301k    47.7322k   631.515k       529.126M/s   14.3079k   1.31807M    3.5293M         5.58862    878.568/s 3.10073G/s     3.41572M               5.40877               0.967819        115       101.035k/s [BEST: throughput=  0.61 GB/s doc_throughput=   967 docs/s instructions=     3415573 cycles=     3308587 branch_miss=   47571 cache_miss=   14273 cache_ref=   1317221 items=       115 avg_time=   1138216 ns]
distinct_user_id<sajson>/manual_time                     1468773 ns      1553405 ns          477          68.874k           431.099M         12.742k       1.86012M    4.68945M              7.42572           682.643       3.20122G          5.24709M                    8.30873                     1.11891            78.504k    69.4636k   631.515k       410.043M/s   12.7519k   1.86124M   4.69719M         7.43797     680.84/s 3.19804G/s     5.24709M               8.30874                1.11707        115       78.2967k/s [BEST: throughput=  0.43 GB/s doc_throughput=   682 docs/s instructions=     5247090 cycles=     4689452 branch_miss=   68874 cache_miss=   12742 cache_ref=   1860122 items=       115 avg_time=   1468772 ns]
distinct_user_id<rapidjson>/manual_time                  2793119 ns      2880406 ns          251          76.382k           232.879M         13.734k       6.26405M    8.67978M              13.7444           368.763       3.20078G          13.3289M                    21.1063                     1.53563           42.4078k     76.428k   631.515k       215.623M/s   13.9832k    6.2642M   8.74876M         13.8536    358.023/s 3.13225G/s     13.3295M               21.1072                1.52359        115       41.1726k/s [BEST: throughput=  0.23 GB/s doc_throughput=   368 docs/s instructions=    13328936 cycles=     8679776 branch_miss=   76382 cache_miss=   13734 cache_ref=   6264052 items=       115 avg_time=   2793118 ns]
distinct_user_id<rapidjson_insitu>/manual_time           2122140 ns      2210701 ns          335          59.641k           306.439M         14.117k       3.41864M    6.59675M              10.4459           485.244       3.20103G          9.72936M                    15.4064                     1.47487            55.803k    59.6605k   631.515k       283.798M/s   14.3401k   3.41991M   6.63491M         10.5063    471.222/s 3.12652G/s     9.72995M               15.4073                1.46648        115       54.1906k/s [BEST: throughput=  0.31 GB/s doc_throughput=   485 docs/s instructions=     9729364 cycles=     6596750 branch_miss=   59641 cache_miss=   14117 cache_ref=   3418640 items=       115 avg_time=   2122140 ns]
distinct_user_id<nlohmann_json>/manual_time             15762546 ns     15854546 ns           45         331.121k           43.3085M        160.249k       36.3829M    46.6323M               73.842           68.5788       3.19799G          64.3691M                    101.928                     1.38035           7.88656k    345.811k   631.515k       38.2083M/s   218.306k   35.8624M   50.3902M         79.7925    63.4415/s 3.19683G/s     62.8706M               99.5552                1.24768        115       7.29578k/s [BEST: throughput=  0.04 GB/s doc_throughput=    68 docs/s instructions=    64369079 cycles=    46632324 branch_miss=  331121 cache_miss=  160249 cache_ref=  36382940 items=       115 avg_time=  15762545 ns]
find_tweet<simdjson_dom>/manual_time                     1517575 ns      1602268 ns          461          16.515k           416.951M         23.468k       873.897k    4.84862M              7.67776           660.239       3.20125G          3.76236M                    5.95767                    0.775964            660.239     16.696k   631.515k       396.857M/s   23.4761k   874.409k   4.85333M         7.68521    658.946/s 3.19808G/s     3.76236M               5.95767               0.775212          1        658.946/s [BEST: throughput=  0.42 GB/s doc_throughput=   660 docs/s instructions=     3762357 cycles=     4848621 branch_miss=   16515 cache_miss=   23468 cache_ref=    873897 items=         1 avg_time=   1517574 ns]
find_tweet<simdjson_ondemand>/manual_time                 915259 ns      1000138 ns          765           4.005k           691.464M         11.575k       194.181k    2.92447M              4.63088           1094.93       3.20209G          2.05905M                    3.26049                    0.704076            1094.93    4.11949k   631.515k       658.021M/s   11.5706k   194.198k    2.9276M         4.63583    1092.59/s 3.19865G/s     2.05905M               3.26049               0.703324          1        1092.59/s [BEST: throughput=  0.69 GB/s doc_throughput=  1094 docs/s instructions=     2059051 cycles=     2924471 branch_miss=    4005 cache_miss=   11575 cache_ref=    194181 items=         1 avg_time=    915259 ns]
find_tweet<yyjson>/manual_time                           1414369 ns      1276143 ns          594           47.65k           593.301M         21.718k        1.4598M    3.35257M              5.30877           939.488       3.14969G           3.4593M                    5.47779                     1.03184            939.488    47.6178k   631.515k       425.815M/s   21.7285k   1.46076M   3.56868M         5.65098    707.029/s 2.52316G/s     3.45982M                5.4786               0.969495          1        707.029/s [BEST: throughput=  0.59 GB/s doc_throughput=   939 docs/s instructions=     3459305 cycles=     3352566 branch_miss=   47650 cache_miss=   21718 cache_ref=   1459801 items=         1 avg_time=   1414369 ns]
find_tweet<yyjson_insitu>/manual_time                    1105524 ns      1196271 ns          635          47.719k           629.327M         11.792k       1.30209M    3.21299M              5.08774           996.535       3.20185G           3.3604M                    5.32117                     1.04588            996.535    47.5974k   631.515k       544.773M/s   11.8071k   1.30137M   3.42436M         5.42245    904.549/s  3.0975G/s     3.36046M               5.32127                0.98134          1        904.549/s [BEST: throughput=  0.63 GB/s doc_throughput=   996 docs/s instructions=     3360398 cycles=     3212987 branch_miss=   47719 cache_miss=   11792 cache_ref=   1302088 items=         1 avg_time=   1105523 ns]
find_tweet<sajson>/manual_time                           1426834 ns      1517228 ns          491          68.699k           443.741M         10.215k       1.83968M      4.556M              7.21439           702.661       3.20132G          5.16187M                    8.17378                     1.13298            702.661    69.1129k   631.515k       422.095M/s    10.213k   1.84089M   4.56327M          7.2259    700.852/s 3.19817G/s     5.16187M               8.17379                1.13118          1        700.852/s [BEST: throughput=  0.44 GB/s doc_throughput=   702 docs/s instructions=     5161867 cycles=     4555998 branch_miss=   68699 cache_miss=   10215 cache_ref=   1839681 items=         1 avg_time=   1426834 ns]
find_tweet<rapidjson>/manual_time                        2758002 ns      2851324 ns          254          76.254k           235.223M         10.991k       6.25942M    8.59305M               13.607           372.475       3.20069G          13.2842M                    21.0355                     1.54593            372.475     76.336k   631.515k       218.368M/s   11.2485k   6.25498M   8.63482M         13.6732    362.581/s 3.13082G/s     13.2848M               21.0364                1.53852          1        362.581/s [BEST: throughput=  0.24 GB/s doc_throughput=   372 docs/s instructions=    13284235 cycles=     8593051 branch_miss=   76254 cache_miss=   10991 cache_ref=   6259423 items=         1 avg_time=   2758002 ns]
find_tweet<rapidjson_insitu>/manual_time                 2095008 ns      2190153 ns          339          59.496k           309.705M         10.809k       3.40632M    6.52686M              10.3352           490.416       3.20088G          9.68504M                    15.3362                     1.48387            490.416    59.5671k   631.515k       287.474M/s   10.9972k    3.4072M   6.54855M         10.3696    477.325/s 3.12579G/s     9.68563M               15.3371                1.47905          1        477.325/s [BEST: throughput=  0.31 GB/s doc_throughput=   490 docs/s instructions=     9685037 cycles=     6526865 branch_miss=   59496 cache_miss=   10809 cache_ref=   3406315 items=         1 avg_time=   2095007 ns]
find_tweet<nlohmann_json>/manual_time                   12827338 ns     12925317 ns           56         252.651k           53.4861M         88.665k       30.9992M    37.7498M              59.7766           84.6949       3.19722G          54.4249M                    86.1815                     1.44173            84.6949    268.188k   631.515k       46.9513M/s   139.991k    30.444M    41.007M         64.9343    77.9585/s 3.19684G/s     52.8572M                83.699                1.28898          1        77.9585/s [BEST: throughput=  0.05 GB/s doc_throughput=    84 docs/s instructions=    54424903 cycles=    37749795 branch_miss=  252651 cache_miss=   88665 cache_ref=  30999202 items=         1 avg_time=  12827338 ns]
top_tweet<simdjson_dom>/manual_time                      1550295 ns      1648844 ns          452          16.839k           408.341M         25.589k       880.934k    4.95088M              7.83969           646.606       3.20127G          3.80075M                    6.01846                     0.76769            646.606    17.0709k   631.515k       388.481M/s   25.5779k   881.532k   4.95789M         7.85079    645.038/s 3.19803G/s     3.80074M               6.01845               0.766604          1        645.038/s [BEST: throughput=  0.41 GB/s doc_throughput=   646 docs/s instructions=     3800745 cycles=     4950883 branch_miss=   16839 cache_miss=   25589 cache_ref=    880934 items=         1 avg_time=   1550295 ns]
top_tweet<simdjson_ondemand>/manual_time                 1052069 ns      1152179 ns          665           6.502k           601.781M         22.441k       379.885k    3.35991M              5.32039           952.916       3.20171G          2.70591M                    4.28479                    0.805352            952.916    6.69319k   631.515k       572.453M/s   22.4377k     380.3k    3.3652M         5.32877    950.508/s 3.19865G/s     2.70591M               4.28479               0.804085          1        950.508/s [BEST: throughput=  0.60 GB/s doc_throughput=   952 docs/s instructions=     2705909 cycles=     3359909 branch_miss=    6502 cache_miss=   22441 cache_ref=    379885 items=         1 avg_time=   1052068 ns]
top_tweet<simdjson_ondemand_forward_only>/manual_time    1066741 ns      1169776 ns          656           6.675k           593.387M         22.743k       394.169k    3.40738M              5.39557           939.624       3.20166G          2.73439M                    4.32989                     0.80249            939.624    6.82597k   631.515k       564.579M/s   22.7268k   394.252k   3.41193M         5.40277    937.435/s 3.19846G/s     2.73439M               4.32989               0.801421          1        937.435/s [BEST: throughput=  0.59 GB/s doc_throughput=   939 docs/s instructions=     2734392 cycles=     3407383 branch_miss=    6675 cache_miss=   22743 cache_ref=    394169 items=         1 avg_time=   1066740 ns]
top_tweet<yyjson>/manual_time                            1208131 ns      1315602 ns          583          48.195k           591.498M         23.415k        1.4682M    3.41825M              5.41278           936.633       3.20165G          3.48273M                    5.51488                     1.01886            936.633    47.8669k   631.515k       498.505M/s   23.3918k   1.46829M   3.64177M         5.76671    827.725/s 3.01438G/s     3.48294M               5.51522               0.956388          1        827.725/s [BEST: throughput=  0.59 GB/s doc_throughput=   936 docs/s instructions=     3482730 cycles=     3418254 branch_miss=   48195 cache_miss=   23415 cache_ref=   1468196 items=         1 avg_time=   1208130 ns]
top_tweet<yyjson_insitu>/manual_time                     1127314 ns      1236407 ns          622          48.057k           617.995M         13.467k       1.30887M    3.27183M              5.18092           978.591       3.20179G          3.38373M                    5.35812                      1.0342            978.591    47.8073k   631.515k       534.243M/s   13.4979k   1.30906M   3.49425M         5.53312    887.064/s 3.09962G/s     3.38388M               5.35836               0.968415          1        887.064/s [BEST: throughput=  0.62 GB/s doc_throughput=   978 docs/s instructions=     3383734 cycles=     3271831 branch_miss=   48057 cache_miss=   13467 cache_ref=   1308872 items=         1 avg_time=   1127313 ns]
top_tweet<sajson>/manual_time                            1445628 ns      1555914 ns          484          68.734k           438.036M         11.787k       1.84777M    4.61523M              7.30818           693.628       3.20125G          5.18708M                     8.2137                     1.12391            693.628    69.2316k   631.515k       416.608M/s    11.787k   1.84898M   4.62346M         7.32122    691.741/s 3.19824G/s     5.18707M                8.2137                 1.1219          1        691.741/s [BEST: throughput=  0.44 GB/s doc_throughput=   693 docs/s instructions=     5187077 cycles=     4615225 branch_miss=   68734 cache_miss=   11787 cache_ref=   1847765 items=         1 avg_time=   1445627 ns]
top_tweet<rapidjson>/manual_time                         2781867 ns      2897164 ns          251          76.391k           233.325M         12.813k       6.26279M    8.66284M              13.7176           369.468       3.20065G          13.3179M                    21.0888                     1.53736            369.468    76.4934k   631.515k       216.495M/s   13.0641k   6.25797M   8.71285M         13.7967    359.471/s 3.13202G/s     13.3185M               21.0897                 1.5286          1        359.471/s [BEST: throughput=  0.23 GB/s doc_throughput=   369 docs/s instructions=    13317906 cycles=     8662841 branch_miss=   76391 cache_miss=   12813 cache_ref=   6262789 items=         1 avg_time=   2781866 ns]
top_tweet<rapidjson_insitu>/manual_time                  2113718 ns      2230361 ns          336          59.685k           307.028M         13.037k       3.41649M    6.58398M              10.4257           486.177       3.20098G          9.71672M                    15.3864                     1.47581            486.177    59.7066k   631.515k       284.929M/s   13.2003k   3.41701M   6.60922M         10.4657      473.1/s 3.12682G/s      9.7172M               15.3871                1.47025          1          473.1/s [BEST: throughput=  0.31 GB/s doc_throughput=   486 docs/s instructions=     9716721 cycles=     6583981 branch_miss=   59685 cache_miss=   13037 cache_ref=   3416492 items=         1 avg_time=   2113718 ns]
top_tweet<nlohmann_json>/manual_time                    18384390 ns     18503347 ns           38         429.354k           34.4344M        339.335k       42.3434M    58.6613M              92.8898           54.5267       3.19861G          76.5687M                    121.246                     1.30527            54.5267    429.998k   631.515k       32.7593M/s   337.459k   42.4087M   58.7524M         93.0341     54.394/s 3.19578G/s     76.7241M               121.492                1.30589          1         54.394/s [BEST: throughput=  0.03 GB/s doc_throughput=    54 docs/s instructions=    76568662 cycles=    58661316 branch_miss=  429354 cache_miss=  339335 cache_ref=  42343361 items=         1 avg_time=  18384389 ns]
