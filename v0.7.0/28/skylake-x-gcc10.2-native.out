run_benchmark: v0.8.0~10 /home/jkeiser/simdjson_benchmark_results/v0.7.0/28/skylake-x-gcc10.2-native.json -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native
git reset --hard v0.8.0~10
HEAD is now at 84b0e844 fix function was exited without releasing (#1389)
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- git Version: v0.2.1-84b0e844
-- Version: 0.2.1
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 11
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
make[3]: Nothing to be done for '_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build'.
[ 72%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
make[3]: Nothing to be done for 'jsonexamples/generated/CMakeFiles/generated-data.dir/build'.
[ 72%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/g++-10  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/src  -march=native -O3 -DNDEBUG -fPIC   -pthread -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/g++-10 -fPIC -march=native -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.6 -o ../libsimdjson.so.6.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.6.0.0 ../libsimdjson.so.6 ../libsimdjson.so
[ 81%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
make[3]: Nothing to be done for 'dependencies/CMakeFiles/yyjson.dir/build'.
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/g++-10  -DRAPIDJSON_HAS_STDSTRING -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_COMPETITION_RAPIDJSON -DSIMDJSON_COMPETITION_YYJSON -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/rapidjson/include  -march=native -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/g++-10  -march=native -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.6.0.0 ../_deps/google_benchmarks/src/libbenchmark.a ../dependencies/libyyjson.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/28/skylake-x-gcc10.2-native.json --benchmark_out_format=json
2021-01-24 21:27:04
Running benchmark/bench_ondemand
Run on (4 X 3200 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 1024 KiB (x4)
  L3 Unified 8448 KiB (x1)
Load Average: 1.00, 1.00, 1.00
***WARNING*** CPU scaling is enabled, the benchmark real time measurements may be noisy and will incur extra overhead.
simdjson::dom implementation:      haswell
simdjson::ondemand implementation: haswell

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                  325674 ns       394261 ns         2149            4.33k           1.95307G               0        34.455k    1032.81k              1.63545          3.09267k       3.19415G          3.07044M                    4.86203                      2.9729           309.267k    4.43959k   631.515k       1.80593G/s    0.28711   34.3463k   1039.21k         1.64559   3.07055k/s 3.19095G/s     3.07044M               4.86203                2.95459        100       307.055k/s [BEST: throughput=  1.95 GB/s doc_throughput=  3092 docs/s instructions=     3070443 cycles=     1032812 branch_miss=    4330 cache_miss=       0 cache_ref=     34455 items=       100 avg_time=    325674 ns]
partial_tweets<simdjson_ondemand>/manual_time             217411 ns       271873 ns         3209           2.255k           2.92451G               0        11.697k    689.784k              1.09227          4.63094k       3.19435G          2.23542M                    3.53977                     3.24075           463.094k    2.37431k   631.515k       2.70522G/s  0.0772826   11.7965k   693.875k         1.09875   4.59959k/s 3.19154G/s     2.23542M               3.53977                3.22164        100       459.959k/s [BEST: throughput=  2.92 GB/s doc_throughput=  4630 docs/s instructions=     2235416 cycles=      689784 branch_miss=    2255 cache_miss=       0 cache_ref=     11697 items=       100 avg_time=    217410 ns]
partial_tweets<yyjson>/manual_time                        846060 ns       922376 ns          829           9.697k           1.27926G             218        28.716k    1.57646M              2.49632          2.02569k       3.19343G          2.90839M                    4.60541                     1.84488           202.569k    7.80834k   631.515k        711.84M/s    615.657   23.4756k   1.74313M         2.76024   1.18195k/s 2.06029G/s     2.90885M               4.60614                1.66875        100       118.195k/s [BEST: throughput=  1.28 GB/s doc_throughput=  2025 docs/s instructions=     2908386 cycles=     1576464 branch_miss=    9697 cache_miss=     218 cache_ref=     28716 items=       100 avg_time=    846060 ns]
partial_tweets<yyjson_insitu>/manual_time                 573162 ns       631529 ns         1231           7.148k            1.5326G          1.258k        13.622k    1.30717M              2.06989          2.42687k       3.17232G          2.90805M                    4.60487                      2.2247           242.687k    7.57464k   631.515k       1050.77M/s    61.9919   8.50975k   1.43394M         2.27063   1.74471k/s  2.5018G/s     2.90831M               4.60529                2.02819        100       174.471k/s [BEST: throughput=  1.53 GB/s doc_throughput=  2426 docs/s instructions=     2908047 cycles=     1307166 branch_miss=    7148 cache_miss=    1258 cache_ref=     13622 items=       100 avg_time=    573161 ns]
partial_tweets<rapidjson>/manual_time                    1831932 ns      1892982 ns          382          26.334k            404.76M          7.725k        22.775k    4.98134M              7.88792           640.935       3.19271G          13.1151M                    20.7677                     2.63285           64.0935k    26.9606k   631.515k       328.757M/s    334.518   11.2975k   5.17211M            8.19    545.872/s 2.82331G/s     13.1158M               20.7689                2.53588        100       54.5872k/s [BEST: throughput=  0.40 GB/s doc_throughput=   640 docs/s instructions=    13115123 cycles=     4981337 branch_miss=   26334 cache_miss=    7725 cache_ref=     22775 items=       100 avg_time=   1831931 ns]
partial_tweets<rapidjson_insitu>/manual_time             1236411 ns      1295289 ns          569          25.297k           602.194M             150        14.135k     3.3483M              5.30201           953.571       3.19284G          9.82313M                    15.5549                     2.93377           95.3571k    28.5272k   631.515k       487.103M/s     184.65    9.6409k   3.54081M         5.60685    808.792/s 2.86378G/s     9.82373M               15.5558                2.77443        100       80.8792k/s [BEST: throughput=  0.60 GB/s doc_throughput=   953 docs/s instructions=     9823129 cycles=     3348300 branch_miss=   25297 cache_miss=     150 cache_ref=     14135 items=       100 avg_time=   1236411 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                 103851800 ns    109771049 ns            7         858.029k           444.722M        6.78632M       6.89537M     329.59M              7.16518           9.66813       3.18651G          998.581M                    21.7089                     3.02977           9.66813M    858.138k   45.9988M       422.408M/s   6.80991M   6.89521M   331.086M         7.19772    9.62911/s 3.18806G/s     998.581M               21.7089                3.01608      1000k       9.62911M/s [BEST: throughput=  0.44 GB/s doc_throughput=     9 docs/s instructions=   998581010 cycles=   329589537 branch_miss=  858029 cache_miss= 6786321 cache_ref=   6895372 items=   1000000 avg_time= 103851800 ns]
large_random<simdjson_ondemand>/manual_time             68061302 ns     73958612 ns           10         865.321k           678.317M        3.49343M       3.57239M    216.262M              4.70147           14.7464       3.18909G          650.959M                    14.1517                     3.01005           14.7464M    865.513k   45.9988M       644.534M/s   3.51927M   3.57249M   217.004M          4.7176    14.6926/s 3.18836G/s     650.959M               14.1517                2.99976      1000k       14.6926M/s [BEST: throughput=  0.68 GB/s doc_throughput=    14 docs/s instructions=   650958757 cycles=   216261845 branch_miss=  865321 cache_miss= 3493434 cache_ref=   3572385 items=   1000000 avg_time=  68061302 ns]
large_random<simdjson_ondemand_unordered>/manual_time   70770900 ns     76700207 ns           10         860.985k           650.617M        3.50069M       3.57271M    225.459M              4.90142           14.1442       3.18895G          654.959M                    14.2386                       2.905           14.1442M    860.531k   45.9988M       619.857M/s    3.5144M   3.57269M    225.66M         4.90577    14.1301/s 3.18859G/s     654.959M               14.2386                2.90242      1000k       14.1301M/s [BEST: throughput=  0.65 GB/s doc_throughput=    14 docs/s instructions=   654958760 cycles=   225459164 branch_miss=  860985 cache_miss= 3500689 cache_ref=   3572713 items=   1000000 avg_time=  70770899 ns]
large_random<yyjson>/manual_time                       157713517 ns    163634829 ns            4          658.41k           291.888M        4.20034M       4.32096M    363.667M              7.90601           6.34556       2.30767G           942.15M                    20.4821                      2.5907           6.34556M    661.368k   45.9988M       278.149M/s   4.20086M   4.32226M   364.172M           7.917    6.34061/s 2.30907G/s      942.15M               20.4821                 2.5871      1000k       6.34061M/s [BEST: throughput=  0.29 GB/s doc_throughput=     6 docs/s instructions=   942149599 cycles=   363666696 branch_miss=  658410 cache_miss= 4200341 cache_ref=   4320961 items=   1000000 avg_time= 157713517 ns]
large_random<yyjson_insitu>/manual_time                131877886 ns    137804339 ns            5         657.803k           349.268M          3.484M       3.60267M    320.877M              6.97578           7.59297       2.43641G          936.029M                     20.349                     2.91709           7.59297M    660.365k   45.9988M        332.64M/s    3.4855M   3.60517M   321.395M         6.98703    7.58277/s 2.43706G/s     936.029M                20.349                 2.9124      1000k       7.58277M/s [BEST: throughput=  0.35 GB/s doc_throughput=     7 docs/s instructions=   936028840 cycles=   320877273 branch_miss=  657803 cache_miss= 3484003 cache_ref=   3602672 items=   1000000 avg_time= 131877885 ns]
large_random<rapidjson>/manual_time                    211852547 ns    217734265 ns            3         606.232k           225.358M        4.38121M       4.88951M    583.137M              12.6772           4.89923       2.85692G          1.66212G                     36.134                     2.85031           4.89923M    611.081k   45.9988M       207.068M/s   4.11303M   4.68195M   586.374M         12.7476    4.72026/s 2.76784G/s     1.66213G               36.1342                2.83459      1000k       4.72026M/s [BEST: throughput=  0.23 GB/s doc_throughput=     4 docs/s instructions=  1662121336 cycles=   583136949 branch_miss=  606232 cache_miss= 4381212 cache_ref=   4889513 items=   1000000 avg_time= 211852547 ns]
large_random<rapidjson_lossless>/manual_time           239659077 ns    245582414 ns            3         614.482k           198.481M        4.36406M       4.89595M     671.71M              14.6028           4.31491       2.89837G          2.04909G                    44.5465                     3.05055           4.31491M     625.41k   45.9988M       183.043M/s   4.11246M   4.68985M   675.075M         14.6759    4.17259/s 2.81681G/s      2.0491G               44.5467                3.03536      1000k       4.17259M/s [BEST: throughput=  0.20 GB/s doc_throughput=     4 docs/s instructions=  2049086689 cycles=   671710189 branch_miss=  614482 cache_miss= 4364057 cache_ref=   4895953 items=   1000000 avg_time= 239659077 ns]
large_random<rapidjson_insitu>/manual_time             188262228 ns    194207824 ns            4          625.85k           257.088M        5.04895M       5.59994M    503.114M              10.9376           5.58901       2.81191G          1.49412G                    32.4818                     2.96975           5.58901M     625.07k   45.9988M       233.015M/s   4.77565M   5.36268M   508.482M         11.0542    5.31174/s 2.70092G/s     1.49413G                32.482                2.93842      1000k       5.31174M/s [BEST: throughput=  0.26 GB/s doc_throughput=     5 docs/s instructions=  1494121324 cycles=   503114197 branch_miss=  625850 cache_miss= 5048946 cache_ref=   5599942 items=   1000000 avg_time= 188262228 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                       100463217 ns    118995535 ns            7         450.635k           1.36877G        10.2082M       10.3145M    319.878M              2.32969           9.96887       3.18882G           972.65M                    7.08386                     3.04069           5.22656M    450.345k   137.305M       1.27286G/s   10.2432M   10.3145M   320.328M         2.33296    9.95389/s 3.18851G/s      972.65M               7.08386                3.03642   524.288k       5.21871M/s [BEST: throughput=  1.37 GB/s doc_throughput=     9 docs/s instructions=   972649990 cycles=   319878381 branch_miss=  450635 cache_miss=10208153 cache_ref=  10314491 items=    524288 avg_time= 100463216 ns]
kostya<simdjson_ondemand>/manual_time                   70132004 ns     88636053 ns           10         497.609k           1.96168G        6.43176M       6.47065M    223.118M              1.62498            14.287        3.1877G          700.741M                    5.10353                     3.14067           7.49053M    498.178k   137.305M       1.82335G/s   6.43929M   6.47062M    223.61M         1.62856    14.2588/s 3.18841G/s     700.741M               5.10353                3.13376   524.288k       7.47573M/s [BEST: throughput=  1.96 GB/s doc_throughput=    14 docs/s instructions=   700740659 cycles=   223118477 branch_miss=  497609 cache_miss= 6431761 cache_ref=   6470645 items=    524288 avg_time=  70132004 ns]
kostya<yyjson>/manual_time                             262164006 ns    280675025 ns            3         422.154k           523.854M        8.48864M       8.63978M    605.392M               4.4091           3.81526       2.30973G          983.521M                    7.16304                      1.6246            2.0003M     421.51k   137.305M       499.475M/s   8.48863M    8.6316M   605.349M         4.40879    3.81441/s 2.30905G/s     983.521M               7.16304                1.62472   524.288k       1.99985M/s [BEST: throughput=  0.52 GB/s doc_throughput=     3 docs/s instructions=   983520848 cycles=   605391761 branch_miss=  422154 cache_miss= 8488641 cache_ref=   8639780 items=    524288 avg_time= 262164006 ns]
kostya<yyjson_insitu>/manual_time                      184851523 ns    203179480 ns            4          418.57k           742.999M        6.34922M       6.48496M    477.984M              3.48118            5.4113       2.58652G          965.251M                    7.02998                     2.01942           2.83708M    419.579k   137.305M       708.375M/s   6.34914M   6.49193M   478.134M         3.48228    5.40975/s 2.58659G/s     965.251M               7.02998                2.01879   524.288k       2.83627M/s [BEST: throughput=  0.74 GB/s doc_throughput=     5 docs/s instructions=   965251168 cycles=   477983948 branch_miss=  418570 cache_miss= 6349216 cache_ref=   6484959 items=    524288 avg_time= 184851523 ns]
kostya<rapidjson>/manual_time                          292912492 ns    311229314 ns            2         1029.74k           474.215M        5.24582M       5.75079M    827.293M              6.02522           3.45373       2.85725G          2.28931G                    16.6732                     2.76724           1.81075M    1015.53k   137.305M       447.042M/s   5.12127M    5.6441M   829.517M         6.04142    3.41399/s 2.83196G/s     2.28932G               16.6732                2.75982   524.288k       1.78991M/s [BEST: throughput=  0.47 GB/s doc_throughput=     3 docs/s instructions=  2289314848 cycles=   827293122 branch_miss= 1029744 cache_miss= 5245819 cache_ref=   5750794 items=    524288 avg_time= 292912491 ns]
kostya<rapidjson_lossless>/manual_time                 309981966 ns    328375167 ns            2         1036.06k           447.968M        5.24169M       5.75628M    880.607M              6.41351           3.26257       2.87304G          2.50793G                    18.2654                     2.84796           1.71053M    1045.58k   137.305M       422.425M/s   5.12049M   5.65168M   883.259M         6.43283    3.22599/s 2.84939G/s     2.50794G               18.2654                2.83941   524.288k       1.69135M/s [BEST: throughput=  0.45 GB/s doc_throughput=     3 docs/s instructions=  2507933904 cycles=   880606554 branch_miss= 1036057 cache_miss= 5241690 cache_ref=   5756278 items=    524288 avg_time= 309981966 ns]
kostya<rapidjson_insitu>/manual_time                   280862224 ns    299198596 ns            3         1.74592M           495.451M        7.37981M       7.88974M    787.503M              5.73543            3.6084       2.84162G          2.03958G                    14.8544                     2.58993           1.89184M    1.66151M   137.305M       466.222M/s   7.21669M   7.74911M   788.107M         5.73983    3.56046/s 2.80603G/s     2.03958G               14.8544                2.58795   524.288k       1.86671M/s [BEST: throughput=  0.50 GB/s doc_throughput=     3 docs/s instructions=  2039579823 cycles=   787502609 branch_miss= 1745919 cache_miss= 7379812 cache_ref=   7889745 items=    524288 avg_time= 280862224 ns]
distinct_user_id<simdjson_dom>/manual_time                318321 ns       393141 ns         2200           4.286k           1.99919G              44        33.807k    1008.83k              1.59747          3.16571k       3.19365G          3.01136M                    4.76848                     2.98502           364.057k    4.45654k   631.515k       1.84764G/s      42.26   34.0307k   1015.69k         1.60834   3.14148k/s 3.19077G/s     3.01137M               4.76848                2.96485        115        361.27k/s [BEST: throughput=  2.00 GB/s doc_throughput=  3165 docs/s instructions=     3011365 cycles=     1008826 branch_miss=    4286 cache_miss=      44 cache_ref=     33807 items=       115 avg_time=    318321 ns]
distinct_user_id<simdjson_ondemand>/manual_time           215040 ns       274149 ns         3257           2.289k           2.96274G               0         7.981k    680.915k              1.07822          4.69149k        3.1945G          2.18875M                    3.46587                     3.21442           539.521k    2.44246k   631.515k       2.73504G/s   4.29843m   7.97055k   686.221k         1.08663    4.6503k/s 3.19113G/s     2.18875M               3.46587                3.18957        115       534.784k/s [BEST: throughput=  2.96 GB/s doc_throughput=  4691 docs/s instructions=     2188749 cycles=      680915 branch_miss=    2289 cache_miss=       0 cache_ref=      7981 items=       115 avg_time=    215040 ns]
distinct_user_id<yyjson>/manual_time                      843882 ns       928776 ns          990          10.046k           1.24037G             278        28.005k    1.57921M              2.50068          1.96412k       3.10177G          2.87343M                    4.55005                     1.81953           225.874k    7.98092k   631.515k       713.677M/s    439.336   23.4847k    1.7385M          2.7529     1.185k/s 2.06012G/s     2.87382M               4.55068                1.65305        115       136.275k/s [BEST: throughput=  1.24 GB/s doc_throughput=  1964 docs/s instructions=     2873426 cycles=     1579214 branch_miss=   10046 cache_miss=     278 cache_ref=     28005 items=       115 avg_time=    843882 ns]
distinct_user_id<yyjson_insitu>/manual_time               571155 ns       638044 ns         1235           7.552k           1.54303G             145        14.544k    1.30702M              2.06965          2.44337k       3.19353G          2.87302M                    4.54941                     2.19816           280.988k    7.68427k   631.515k       1054.46M/s    65.5279   8.62078k   1.42778M         2.26088   1.75084k/s 2.49982G/s     2.87329M               4.54983                2.01241        115       201.347k/s [BEST: throughput=  1.54 GB/s doc_throughput=  2443 docs/s instructions=     2873022 cycles=     1307015 branch_miss=    7552 cache_miss=     145 cache_ref=     14544 items=       115 avg_time=    571154 ns]
distinct_user_id<rapidjson>/manual_time                  1809510 ns      1877704 ns          387          26.384k           405.089M         12.697k        22.772k    4.97737M              7.88164           641.455       3.19276G          13.0567M                    20.6751                      2.6232           73.7674k    26.9953k   631.515k        332.83M/s   1.18652k   12.0278k   5.14763M         8.15124    552.636/s 2.84477G/s     13.0572M                20.676                2.53655        115       63.5531k/s [BEST: throughput=  0.41 GB/s doc_throughput=   641 docs/s instructions=    13056652 cycles=     4977371 branch_miss=   26384 cache_miss=   12697 cache_ref=     22772 items=       115 avg_time=   1809509 ns]
distinct_user_id<rapidjson_insitu>/manual_time           1214768 ns      1281491 ns          660          24.941k           605.759M          2.489k        14.171k    3.32852M              5.27069           959.215       3.19277G          9.77452M                    15.4779                      2.9366            110.31k    28.7565k   631.515k       495.782M/s   1.12393k   10.5923k   3.52616M         5.58366    823.202/s 2.90275G/s     9.77477M               15.4783                2.77207        115       94.6683k/s [BEST: throughput=  0.61 GB/s doc_throughput=   959 docs/s instructions=     9774521 cycles=     3328519 branch_miss=   24941 cache_miss=    2489 cache_ref=     14171 items=       115 avg_time=   1214768 ns]
find_tweet<simdjson_dom>/manual_time                      304160 ns       374978 ns         2302           4.087k           2.09068G               0        29.545k    964.755k              1.52768          3.31058k        3.1939G          2.93033M                    4.64016                     3.03738           3.31058k    4.23322k   631.515k       1.93367G/s   0.136403      29.6k   970.613k         1.53696   3.28774k/s 3.19112G/s     2.93033M               4.64016                3.01905          1       3.28774k/s [BEST: throughput=  2.09 GB/s doc_throughput=  3310 docs/s instructions=     2930328 cycles=      964755 branch_miss=    4087 cache_miss=       0 cache_ref=     29545 items=         1 avg_time=    304160 ns]
find_tweet<simdjson_ondemand>/manual_time                 150655 ns       211142 ns         4642           1.322k           4.21645G               0         7.309k    478.471k             0.757656          6.67673k       3.19462G          1.56922M                    2.48485                     3.27965           6.67673k    1.38299k   631.515k       3.90391G/s  0.0788453   7.32657k   480.816k        0.761369   6.63767k/s  3.1915G/s     1.56922M               2.48485                3.26366          1       6.63767k/s [BEST: throughput=  4.22 GB/s doc_throughput=  6676 docs/s instructions=     1569217 cycles=      478471 branch_miss=    1322 cache_miss=       0 cache_ref=      7309 items=         1 avg_time=    150655 ns]
find_tweet<yyjson>/manual_time                            825945 ns       906655 ns          914           9.417k           1.31597G             179        27.211k    1.53274M              2.42709          2.08383k       3.19397G          2.82415M                    4.47202                     1.84255           2.08383k    7.57825k   631.515k       729.176M/s    342.235    19.489k   1.68292M         2.66489   1.21073k/s 2.03757G/s     2.82462M               4.47277                1.67841          1       1.21073k/s [BEST: throughput=  1.32 GB/s doc_throughput=  2083 docs/s instructions=     2824148 cycles=     1532742 branch_miss=    9417 cache_miss=     179 cache_ref=     27211 items=         1 avg_time=    825945 ns]
find_tweet<yyjson_insitu>/manual_time                     556543 ns       615764 ns         1266           7.356k             1.576G             116        13.727k    1.27972M              2.02643          2.49559k       3.19365G          2.82382M                     4.4715                      2.2066           2.49559k    7.39391k   631.515k       1082.14M/s    6.81754   4.66905k   1.38202M         2.18842   1.79681k/s 2.48322G/s     2.82408M               4.47192                2.04345          1       1.79681k/s [BEST: throughput=  1.58 GB/s doc_throughput=  2495 docs/s instructions=     2823821 cycles=     1279718 branch_miss=    7356 cache_miss=     116 cache_ref=     13727 items=         1 avg_time=    556542 ns]
find_tweet<rapidjson>/manual_time                        1796549 ns      1859426 ns          391          25.786k           408.938M         11.916k        20.854k    4.93051M              7.80743           647.551       3.19275G          12.9883M                    20.5668                     2.63426            647.551    26.7749k   631.515k       335.231M/s    986.995   8.79205k   5.10684M         8.08665    556.623/s 2.84258G/s     12.9889M               20.5679                2.54343          1        556.623/s [BEST: throughput=  0.41 GB/s doc_throughput=   647 docs/s instructions=    12988251 cycles=     4930506 branch_miss=   25786 cache_miss=   11916 cache_ref=     20854 items=         1 avg_time=   1796549 ns]
find_tweet<rapidjson_insitu>/manual_time                 1197975 ns      1259125 ns          670          24.893k           611.334M               5        13.258k    3.29824M              5.22274           968.044       3.19284G           9.7161M                    15.3854                     2.94585            968.044    28.1838k   631.515k       502.731M/s    1033.66   7.47817k   3.47486M         5.50241    834.742/s 2.90061G/s     9.71666M               15.3863                2.79628          1        834.742/s [BEST: throughput=  0.61 GB/s doc_throughput=   968 docs/s instructions=     9716103 cycles=     3298236 branch_miss=   24893 cache_miss=       5 cache_ref=     13258 items=         1 avg_time=   1197975 ns]
