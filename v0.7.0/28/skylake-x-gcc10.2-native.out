run_benchmark: v0.8.0~10 /home/jkeiser/simdjson_benchmark_results/v0.7.0/28/skylake-gcc10.2-native.json -DCMAKE_CXX_FLAGS=-march=native
git reset --hard v0.8.0~10
HEAD is now at 84b0e844 fix function was exited without releasing (#1389)
cmake -DCMAKE_CXX_FLAGS=-march=native ..
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- git Version: v0.2.1-84b0e844
-- Version: 0.2.1
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
make[1]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[2]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 72%] Built target benchmark
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 72%] Built target generated-data
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
Scanning dependencies of target simdjson
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 72%] Building CXX object src/CMakeFiles/simdjson.dir/simdjson.cpp.o
[ 81%] Linking CXX shared library ../libsimdjson.so
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 81%] Built target simdjson
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 90%] Built target yyjson
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
Scanning dependencies of target bench_ondemand
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 90%] Building CXX object benchmark/CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o
[100%] Linking CXX executable bench_ondemand
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[100%] Built target bench_ondemand
make[2]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[1]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/28/skylake-gcc10.2-native.json --benchmark_out_format=json
2021-01-23 05:15:21
Running benchmark/bench_ondemand
Run on (4 X 3200 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 1024 KiB (x4)
  L3 Unified 8448 KiB (x1)
Load Average: 1.07, 1.04, 1.01
***WARNING*** CPU scaling is enabled, the benchmark real time measurements may be noisy and will incur extra overhead.
simdjson::dom implementation:      haswell
simdjson::ondemand implementation: haswell

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                  323466 ns       393081 ns         2158           4.179k           1.96618G              12        33.796k    1025.76k              1.62429          3.11344k       3.19366G          3.07044M                    4.86203                     2.99332           311.344k    4.35205k   631.515k       1.81826G/s    14.4421   33.8437k   1032.19k         1.63446   3.09152k/s 3.19102G/s     3.07044M               4.86203                 2.9747        100       309.152k/s [BEST: throughput=  1.97 GB/s doc_throughput=  3113 docs/s instructions=     3070443 cycles=     1025764 branch_miss=    4179 cache_miss=      12 cache_ref=     33796 items=       100 avg_time=    323465 ns]
partial_tweets<simdjson_ondemand>/manual_time             216011 ns       269634 ns         3232           2.112k           2.94455G               4        11.461k     685.14k              1.08491          4.66268k       3.19459G          2.23542M                    3.53977                     3.26271           466.268k    2.23145k   631.515k       2.72275G/s     4.0625   11.5351k    689.49k          1.0918    4.6294k/s 3.19192G/s     2.23542M               3.53977                3.24213        100        462.94k/s [BEST: throughput=  2.94 GB/s doc_throughput=  4662 docs/s instructions=     2235416 cycles=      685140 branch_miss=    2112 cache_miss=       4 cache_ref=     11461 items=       100 avg_time=    216010 ns]
partial_tweets<yyjson>/manual_time                        843373 ns       921613 ns          833           9.982k           1.27355G             302        27.845k    1.58376M              2.50787          2.01666k        3.1939G          2.90839M                    4.60541                     1.83638           201.666k    7.68609k   631.515k       714.109M/s    580.609   23.4378k   1.74007M         2.75539   1.18572k/s 2.06323G/s     2.90885M               4.60614                1.67168        100       118.572k/s [BEST: throughput=  1.27 GB/s doc_throughput=  2016 docs/s instructions=     2908386 cycles=     1583758 branch_miss=    9982 cache_miss=     302 cache_ref=     27845 items=       100 avg_time=    843372 ns]
partial_tweets<yyjson_insitu>/manual_time                 572111 ns       631174 ns         1232           6.929k           1.53571G          1.627k         14.14k    1.30092M                 2.06          2.43179k       3.16357G          2.90825M                     4.6052                     2.23553           243.179k    7.51018k   631.515k        1052.7M/s    67.7151   8.75583k   1.43302M         2.26918   1.74791k/s 2.50479G/s     2.90852M               4.60562                2.02964        100       174.791k/s [BEST: throughput=  1.54 GB/s doc_throughput=  2431 docs/s instructions=     2908254 cycles=     1300922 branch_miss=    6929 cache_miss=    1627 cache_ref=     14140 items=       100 avg_time=    572111 ns]
partial_tweets<rapidjson>/manual_time                    1818383 ns      1879663 ns          385           25.94k           407.512M             824        22.715k    4.94793M              7.83501           645.293       3.19286G          13.1148M                    20.7672                     2.65057           64.5293k    25.8333k   631.515k       331.206M/s    319.901   11.1367k   5.13259M         8.12742    549.939/s 2.82261G/s     13.1157M               20.7686                2.55537        100       54.9939k/s [BEST: throughput=  0.41 GB/s doc_throughput=   645 docs/s instructions=    13114822 cycles=     4947927 branch_miss=   25940 cache_miss=     824 cache_ref=     22715 items=       100 avg_time=   1818383 ns]
partial_tweets<rapidjson_insitu>/manual_time             1213491 ns      1273017 ns          579          24.464k           606.802M             191        15.155k    3.32297M               5.2619           960.868       3.19293G          9.82292M                    15.5545                     2.95607           96.0868k    26.2828k   631.515k       496.303M/s    165.323   9.57878k   3.47106M         5.49639    824.069/s 2.86039G/s     9.82331M               15.5552                2.83007        100       82.4069k/s [BEST: throughput=  0.61 GB/s doc_throughput=   960 docs/s instructions=     9822921 cycles=     3322968 branch_miss=   24464 cache_miss=     191 cache_ref=     15155 items=       100 avg_time=   1213490 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                 103382001 ns    109254661 ns            7         863.487k           446.194M        6.81839M       6.89437M    328.737M              7.14665           9.70013       3.18879G          998.581M                    21.7089                     3.03763           9.70013M    863.603k   45.9988M       424.328M/s    6.8083M   6.89455M    329.63M         7.16607    9.67286/s 3.18847G/s     998.581M               21.7089                 3.0294      1000k       9.67286M/s [BEST: throughput=  0.45 GB/s doc_throughput=     9 docs/s instructions=   998581006 cycles=   328737136 branch_miss=  863487 cache_miss= 6818392 cache_ref=   6894371 items=   1000000 avg_time= 103382001 ns]
large_random<simdjson_ondemand>/manual_time             67862579 ns     73741583 ns           10         866.195k           681.499M        3.49573M       3.57283M    215.238M              4.67921           14.8156       3.18888G          650.959M                    14.1517                     3.02437           14.8156M    866.586k   45.9988M       646.422M/s   3.51423M   3.57308M   216.372M         4.70386    14.7357/s 3.18838G/s     650.959M               14.1517                3.00852      1000k       14.7357M/s [BEST: throughput=  0.68 GB/s doc_throughput=    14 docs/s instructions=   650958757 cycles=   215237986 branch_miss=  866195 cache_miss= 3495726 cache_ref=   3572831 items=   1000000 avg_time=  67862578 ns]
large_random<simdjson_ondemand_unordered>/manual_time   70788064 ns     76596379 ns           10         862.275k           650.381M        3.49038M       3.57307M    225.542M              4.90322           14.1391       3.18896G          654.959M                    14.2386                     2.90393           14.1391M     862.72k   45.9988M       619.707M/s   3.51348M   3.57307M   225.723M         4.90715    14.1267/s 3.18871G/s     654.959M               14.2386                2.90161      1000k       14.1267M/s [BEST: throughput=  0.65 GB/s doc_throughput=    14 docs/s instructions=   654958760 cycles=   225541950 branch_miss=  862275 cache_miss= 3490383 cache_ref=   3573072 items=   1000000 avg_time=  70788063 ns]
large_random<yyjson>/manual_time                       157018245 ns    162859089 ns            4         660.591k           293.225M        4.20639M        4.3199M    361.625M              7.86162           6.37463       2.30522G           942.15M                    20.4821                     2.60532           6.37463M    663.676k   45.9988M       279.381M/s   4.20258M   4.33256M   362.142M         7.87287    6.36869/s 2.30637G/s      942.15M               20.4821                 2.6016      1000k       6.36869M/s [BEST: throughput=  0.29 GB/s doc_throughput=     6 docs/s instructions=   942149603 cycles=   361624789 branch_miss=  660591 cache_miss= 4206387 cache_ref=   4319896 items=   1000000 avg_time= 157018245 ns]
large_random<yyjson_insitu>/manual_time                131107307 ns    136972789 ns            5         660.785k           351.023M        3.48608M       3.60695M    319.365M               6.9429           7.63114       2.43712G          936.029M                     20.349                     2.93091           7.63114M    663.412k   45.9988M       334.595M/s   3.48435M   3.61966M   319.621M         6.94846    7.62734/s 2.43786G/s     936.029M                20.349                2.92856      1000k       7.62734M/s [BEST: throughput=  0.35 GB/s doc_throughput=     7 docs/s instructions=   936028631 cycles=   319364876 branch_miss=  660785 cache_miss= 3486077 cache_ref=   3606952 items=   1000000 avg_time= 131107306 ns]
large_random<rapidjson>/manual_time                    211691369 ns    217555631 ns            3         596.578k           226.944M        4.36634M       4.87763M    579.071M              12.5888           4.93369       2.85696G          1.66212G                     36.134                     2.87033           4.93369M    597.686k   45.9988M       207.226M/s   4.09825M   4.67007M   586.325M         12.7465    4.72386/s 2.76972G/s     1.66213G               36.1342                2.83483      1000k       4.72386M/s [BEST: throughput=  0.23 GB/s doc_throughput=     4 docs/s instructions=  1662121317 cycles=   579070692 branch_miss=  596578 cache_miss= 4366341 cache_ref=   4877633 items=   1000000 avg_time= 211691369 ns]
large_random<rapidjson_lossless>/manual_time           238888935 ns    244753191 ns            3         604.236k           199.777M        4.35968M        4.8871M    667.004M              14.5005           4.34309       2.89686G          2.04909G                    44.5465                     3.07208           4.34309M    601.492k   45.9988M       183.633M/s   4.09761M   4.67768M   673.036M         14.6316    4.18605/s 2.81736G/s      2.0491G               44.5467                3.04455      1000k       4.18605M/s [BEST: throughput=  0.20 GB/s doc_throughput=     4 docs/s instructions=  2049086529 cycles=   667004028 branch_miss=  604236 cache_miss= 4359681 cache_ref=   4887105 items=   1000000 avg_time= 238888935 ns]
large_random<rapidjson_insitu>/manual_time             187901101 ns    193816138 ns            4         620.482k           258.344M        5.05907M       5.59877M    500.545M              10.8817           5.61631       2.81122G          1.49412G                    32.4818                     2.98499           5.61631M     613.35k   45.9988M       233.462M/s   4.76986M   5.35846M   507.691M         11.0371    5.32195/s  2.7019G/s     1.49413G                32.482                2.94299      1000k       5.32195M/s [BEST: throughput=  0.26 GB/s doc_throughput=     5 docs/s instructions=  1494121162 cycles=   500544868 branch_miss=  620482 cache_miss= 5059071 cache_ref=   5598766 items=   1000000 avg_time= 187901101 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                        99087710 ns    117177008 ns            7         447.415k           1.38749G        10.1995M       10.3151M    315.559M              2.29824           10.1052       3.18879G           972.65M                    7.08386                      3.0823           5.29803M    447.601k   137.305M       1.29053G/s   10.2374M   10.3151M   315.954M         2.30111    10.0921/s 3.18863G/s      972.65M               7.08386                3.07846   524.288k       5.29115M/s [BEST: throughput=  1.39 GB/s doc_throughput=    10 docs/s instructions=   972649990 cycles=   315559426 branch_miss=  447415 cache_miss=10199451 cache_ref=  10315061 items=    524288 avg_time=  99087710 ns]
kostya<simdjson_ondemand>/manual_time                   69160433 ns     87257428 ns           10         502.421k           1.99068G        6.44473M       6.47104M    219.929M              1.60175           14.4983       3.18859G          700.741M                    5.10353                     3.18621           7.60126M    502.813k   137.305M       1.84897G/s   6.43779M   6.47089M   220.523M         1.60608    14.4591/s 3.18858G/s     700.741M               5.10353                3.17763   524.288k       7.58075M/s [BEST: throughput=  1.99 GB/s doc_throughput=    14 docs/s instructions=   700740657 cycles=   219928923 branch_miss=  502421 cache_miss= 6444731 cache_ref=   6471037 items=    524288 avg_time=  69160433 ns]
kostya<yyjson>/manual_time                             260828158 ns    278974955 ns            3         416.776k           526.516M        8.48771M       8.64652M    602.598M              4.38875           3.83464       2.31075G          983.521M                    7.16304                     1.63213           2.01046M     415.64k   137.305M       502.033M/s   8.49022M   8.64635M   602.421M         4.38747    3.83394/s 2.30965G/s     983.521M               7.16304                1.63261   524.288k       2.01009M/s [BEST: throughput=  0.53 GB/s doc_throughput=     3 docs/s instructions=   983520850 cycles=   602597762 branch_miss=  416776 cache_miss= 8487708 cache_ref=   8646520 items=    524288 avg_time= 260828157 ns]
kostya<yyjson_insitu>/manual_time                      183670795 ns    201720573 ns            4         414.189k           747.626M        6.34842M       6.55199M    474.886M              3.45862           5.44501       2.58576G          965.251M                    7.02998                      2.0326           2.85475M    414.721k   137.305M       712.929M/s   6.34914M   6.51815M   474.951M          3.4591    5.44452/s 2.58588G/s     965.251M               7.02998                2.03232   524.288k        2.8545M/s [BEST: throughput=  0.75 GB/s doc_throughput=     5 docs/s instructions=   965251171 cycles=   474885911 branch_miss=  414189 cache_miss= 6348419 cache_ref=   6551986 items=    524288 avg_time= 183670795 ns]
kostya<rapidjson>/manual_time                          291966186 ns    310227342 ns            2         1038.77k           475.785M        5.24437M       5.73136M    824.846M               6.0074           3.46517       2.85823G          2.28931G                    16.6732                     2.77545           1.81675M    1049.61k   137.305M       448.491M/s   5.11999M   5.62222M   827.105M         6.02385    3.42505/s 2.83288G/s     2.28932G               16.6732                2.76787   524.288k       1.79571M/s [BEST: throughput=  0.48 GB/s doc_throughput=     3 docs/s instructions=  2289314848 cycles=   824845998 branch_miss= 1038771 cache_miss= 5244368 cache_ref=   5731361 items=    524288 avg_time= 291966186 ns]
kostya<rapidjson_lossless>/manual_time                 308242045 ns    326558525 ns            2         1038.85k           450.438M         5.2478M       5.74197M    875.741M              6.37807           3.28056       2.87292G          2.50793G                    18.2654                     2.86379           1.71996M    1039.55k   137.305M        424.81M/s   5.12198M   5.63516M   878.309M         6.39677     3.2442/s 2.84941G/s     2.50794G               18.2654                2.85541   524.288k        1.7009M/s [BEST: throughput=  0.45 GB/s doc_throughput=     3 docs/s instructions=  2507933900 cycles=   875740655 branch_miss= 1038850 cache_miss= 5247796 cache_ref=   5741970 items=    524288 avg_time= 308242044 ns]
kostya<rapidjson_insitu>/manual_time                   273933486 ns    292186458 ns            3         1070.05k           509.444M        7.38089M       7.87033M    763.735M              5.56232           3.71031       2.83369G          2.03958G                    14.8544                     2.67053           1.94527M    1079.63k   137.305M       478.015M/s   7.21454M    7.7255M   766.657M         5.58361    3.65052/s  2.7987G/s     2.03958G               14.8544                2.66036   524.288k       1.91392M/s [BEST: throughput=  0.51 GB/s doc_throughput=     3 docs/s instructions=  2039579823 cycles=   763734851 branch_miss= 1070054 cache_miss= 7380892 cache_ref=   7870334 items=    524288 avg_time= 273933486 ns]
distinct_user_id<simdjson_dom>/manual_time                317123 ns       393532 ns         2210           4.233k           2.00569G               0        34.242k    1005.64k              1.59242          3.17599k        3.1939G          3.01136M                    4.76848                     2.99448           365.239k    4.39555k   631.515k       1.85462G/s   0.118552   34.2238k   1011.95k         1.60242   3.15335k/s 3.19104G/s     3.01137M               4.76848                 2.9758        115       362.635k/s [BEST: throughput=  2.01 GB/s doc_throughput=  3175 docs/s instructions=     3011365 cycles=     1005639 branch_miss=    4233 cache_miss=       0 cache_ref=     34242 items=       115 avg_time=    317123 ns]
distinct_user_id<simdjson_ondemand>/manual_time           215266 ns       275396 ns         3251           2.287k           2.95958G               0         9.773k    681.595k               1.0793          4.68647k       3.19428G          2.18875M                    3.46587                     3.21122           538.945k    2.41979k   631.515k       2.73218G/s  0.0547524   9.74865k   686.989k         1.08784   4.64542k/s 3.19135G/s     2.18875M               3.46587                  3.186        115       534.223k/s [BEST: throughput=  2.96 GB/s doc_throughput=  4686 docs/s instructions=     2188749 cycles=      681595 branch_miss=    2287 cache_miss=       0 cache_ref=      9773 items=       115 avg_time=    215265 ns]
distinct_user_id<yyjson>/manual_time                      841229 ns       928379 ns          987           9.673k           1.28814G             219        27.488k    1.56594M              2.47966          2.03975k       3.19414G          2.87343M                    4.55005                     1.83495           234.572k    7.80776k   631.515k       715.928M/s    439.126   23.4275k   1.73406M         2.74587   1.18874k/s 2.06134G/s     2.87403M               4.55101                 1.6574        115       136.705k/s [BEST: throughput=  1.29 GB/s doc_throughput=  2039 docs/s instructions=     2873425 cycles=     1565942 branch_miss=    9673 cache_miss=     219 cache_ref=     27488 items=       115 avg_time=    841228 ns]
distinct_user_id<yyjson_insitu>/manual_time               569679 ns       637352 ns         1240           7.112k           1.55105G          1.203k         13.54k    1.29543M               2.0513          2.45609k       3.18168G          2.87323M                    4.54974                     2.21798            282.45k    7.60129k   631.515k       1057.19M/s    69.0347   8.89923k   1.42525M         2.25687   1.75537k/s 2.50185G/s     2.87349M               4.55016                2.01613        115       201.868k/s [BEST: throughput=  1.55 GB/s doc_throughput=  2456 docs/s instructions=     2873230 cycles=     1295429 branch_miss=    7112 cache_miss=    1203 cache_ref=     13540 items=       115 avg_time=    569678 ns]
distinct_user_id<rapidjson>/manual_time                  1797706 ns      1866382 ns          390           25.55k           408.057M             589        22.803k    4.94151M              7.82485           646.156       3.19299G          13.0568M                    20.6754                     2.64227            74.308k    25.7818k   631.515k       335.016M/s    1.1653k   12.0458k   5.11309M         8.09655    556.264/s 2.84423G/s     13.0576M               20.6766                2.55375        115       63.9704k/s [BEST: throughput=  0.41 GB/s doc_throughput=   646 docs/s instructions=    13056806 cycles=     4941511 branch_miss=   25550 cache_miss=     589 cache_ref=     22803 items=       115 avg_time=   1797706 ns]
distinct_user_id<rapidjson_insitu>/manual_time           1189976 ns      1257281 ns          663          24.323k           610.243M               3        15.018k     3.3043M              5.23233           966.316       3.19299G          9.77408M                    15.4772                     2.95799           111.126k    26.1491k   631.515k       506.111M/s   1.15407k   10.9184k   3.45133M         5.46515    840.353/s 2.90033G/s     9.77462M               15.4781                2.83214        115       96.6406k/s [BEST: throughput=  0.61 GB/s doc_throughput=   966 docs/s instructions=     9774077 cycles=     3304296 branch_miss=   24323 cache_miss=       3 cache_ref=     15018 items=       115 avg_time=   1189975 ns]
find_tweet<simdjson_dom>/manual_time                      304077 ns       376503 ns         2302            4.07k           2.09054G               0        30.509k    965.005k              1.52808          3.31036k       3.19451G          2.93033M                    4.64016                     3.03659           3.31036k     4.2048k   631.515k       1.93419G/s   0.228063   30.5734k   970.414k         1.53664   3.28864k/s 3.19134G/s     2.93033M               4.64016                3.01967          1       3.28864k/s [BEST: throughput=  2.09 GB/s doc_throughput=  3310 docs/s instructions=     2930328 cycles=      965005 branch_miss=    4070 cache_miss=       0 cache_ref=     30509 items=         1 avg_time=    304077 ns]
find_tweet<simdjson_ondemand>/manual_time                 150770 ns       211720 ns         4637           1.297k           4.21406G               6         7.492k    478.817k             0.758204          6.67294k       3.19512G          1.56922M                    2.48485                     3.27728           6.67294k    1.37581k   631.515k       3.90093G/s    2.64115   7.51538k   481.279k        0.762103   6.63261k/s 3.19214G/s     1.56922M               2.48485                3.26051          1       6.63261k/s [BEST: throughput=  4.21 GB/s doc_throughput=  6672 docs/s instructions=     1569217 cycles=      478817 branch_miss=    1297 cache_miss=       6 cache_ref=      7492 items=         1 avg_time=    150770 ns]
find_tweet<yyjson>/manual_time                            825140 ns       907861 ns          920           9.589k           1.30292G             243        27.289k    1.54794M              2.45116          2.06317k       3.19367G          2.82415M                    4.47202                     1.82445           2.06317k    7.57348k   631.515k       729.887M/s    335.834   19.5705k   1.68426M         2.66701   1.21191k/s 2.04117G/s     2.82462M               4.47277                1.67708          1       1.21191k/s [BEST: throughput=  1.30 GB/s doc_throughput=  2063 docs/s instructions=     2824148 cycles=     1547944 branch_miss=    9589 cache_miss=     243 cache_ref=     27289 items=         1 avg_time=    825140 ns]
find_tweet<yyjson_insitu>/manual_time                     555347 ns       614704 ns         1271           6.947k           1.57981G            1095        13.142k    1.27157M              2.01352          2.50161k       3.18096G          2.82382M                     4.4715                     2.22075           2.50161k    7.31422k   631.515k       1084.47M/s     6.8395   5.06716k   1.38024M          2.1856   1.80067k/s 2.48536G/s     2.82408M               4.47192                2.04609          1       1.80067k/s [BEST: throughput=  1.58 GB/s doc_throughput=  2501 docs/s instructions=     2823822 cycles=     1271565 branch_miss=    6947 cache_miss=    1095 cache_ref=     13142 items=         1 avg_time=    555347 ns]
find_tweet<rapidjson>/manual_time                        1780674 ns      1843415 ns          384          25.302k           410.953M         11.936k        20.971k    4.90634M              7.76916           650.741       3.19275G          12.9877M                    20.5659                     2.64712            650.741    25.6226k   631.515k        338.22M/s    999.299   8.50516k   5.06067M         8.01354    561.585/s   2.842G/s     12.9885M               20.5672                2.56655          1        561.585/s [BEST: throughput=  0.41 GB/s doc_throughput=   650 docs/s instructions=    12987669 cycles=     4906338 branch_miss=   25302 cache_miss=   11936 cache_ref=     20971 items=         1 avg_time=   1780673 ns]
find_tweet<rapidjson_insitu>/manual_time                 1175410 ns      1236765 ns          667          24.401k           614.159M               1        14.017k    3.28324M              5.19899           972.518       3.19301G          9.71645M                    15.3859                     2.95941            972.518    25.8768k   631.515k       512.383M/s     988.57   7.57025k   3.40437M          5.3908    850.767/s 2.89633G/s       9.717M               15.3868                2.85427          1        850.767/s [BEST: throughput=  0.61 GB/s doc_throughput=   972 docs/s instructions=     9716451 cycles=     3283238 branch_miss=   24401 cache_miss=       1 cache_ref=     14017 items=         1 avg_time=   1175409 ns]
