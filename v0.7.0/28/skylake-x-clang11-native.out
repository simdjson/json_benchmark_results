run_benchmark: v0.8.0~10 /home/jkeiser/simdjson_benchmark_results/v0.7.0/28/skylake-x-clang11-native.json -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native
git reset --hard v0.8.0~10
HEAD is now at 84b0e844 fix function was exited without releasing (#1389)
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- git Version: v0.2.1-84b0e844
-- Version: 0.2.1
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES -- failed to compile
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 11
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
make[3]: Nothing to be done for '_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build'.
[ 72%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
make[3]: Nothing to be done for 'jsonexamples/generated/CMakeFiles/generated-data.dir/build'.
[ 72%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/clang++-11  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/src  -march=native -O3 -DNDEBUG -fPIC   -pthread -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/clang++-11 -fPIC -march=native -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.6 -o ../libsimdjson.so.6.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.6.0.0 ../libsimdjson.so.6 ../libsimdjson.so
[ 81%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
make[3]: Nothing to be done for 'dependencies/CMakeFiles/yyjson.dir/build'.
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/clang++-11  -DRAPIDJSON_HAS_STDSTRING -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_COMPETITION_RAPIDJSON -DSIMDJSON_COMPETITION_YYJSON -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/rapidjson/include  -march=native -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/clang++-11  -march=native -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.6.0.0 ../_deps/google_benchmarks/src/libbenchmark.a ../dependencies/libyyjson.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/28/skylake-x-clang11-native.json --benchmark_out_format=json
2021-01-24 21:17:46
Running benchmark/bench_ondemand
Run on (4 X 3200 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 1024 KiB (x4)
  L3 Unified 8448 KiB (x1)
Load Average: 1.08, 1.05, 1.00
***WARNING*** CPU scaling is enabled, the benchmark real time measurements may be noisy and will incur extra overhead.
simdjson::dom implementation:      haswell
simdjson::ondemand implementation: haswell

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                  324519 ns       395051 ns         2152           3.731k           1.95923G               0        32.703k    1029.46k              1.63015          3.10243k       3.19383G          2.93219M                     4.6431                     2.84827           310.243k    3.84127k   631.515k       1.81236G/s   0.497677   32.9676k   1035.33k         1.63945   3.08149k/s 3.19037G/s     2.93219M                4.6431                2.83212        100       308.149k/s [BEST: throughput=  1.96 GB/s doc_throughput=  3102 docs/s instructions=     2932189 cycles=     1029462 branch_miss=    3731 cache_miss=       0 cache_ref=     32703 items=       100 avg_time=    324518 ns]
partial_tweets<simdjson_ondemand>/manual_time             197333 ns       254427 ns         3530           2.267k           3.23554G               1         9.737k    623.623k             0.987503          5.12345k        3.1951G          1.87965M                    2.97642                     3.01408           512.345k    2.43437k   631.515k       2.98046G/s    1.03909   9.79415k   629.961k        0.997539   5.06757k/s 3.19237G/s     1.87965M               2.97642                2.98376        100       506.757k/s [BEST: throughput=  3.24 GB/s doc_throughput=  5123 docs/s instructions=     1879651 cycles=      623623 branch_miss=    2267 cache_miss=       1 cache_ref=      9737 items=       100 avg_time=    197333 ns]
partial_tweets<yyjson>/manual_time                        805162 ns       884632 ns          870           9.504k           1.41685G             294        28.308k    1.42386M              2.25467          2.24358k       3.19453G          2.91953M                    4.62307                     2.05044           224.358k      7.521k   631.515k       747.998M/s    602.938   23.5339k   1.59539M         2.52628   1.24199k/s 1.98145G/s        2.92M                4.6238                1.83028        100       124.199k/s [BEST: throughput=  1.42 GB/s doc_throughput=  2243 docs/s instructions=     2919535 cycles=     1423856 branch_miss=    9504 cache_miss=     294 cache_ref=     28308 items=       100 avg_time=    805162 ns]
partial_tweets<yyjson_insitu>/manual_time                 525062 ns       587851 ns         1346           7.129k           1.74312G             104        14.791k    1.15723M              1.83247          2.76023k       3.19422G           2.9192M                    4.62253                     2.52257           276.023k    7.28619k   631.515k       1.12014G/s    70.2459   8.97947k   1.27344M         2.01649   1.90454k/s 2.42532G/s     2.91946M               4.62294                2.29257        100       190.454k/s [BEST: throughput=  1.74 GB/s doc_throughput=  2760 docs/s instructions=     2919195 cycles=     1157230 branch_miss=    7129 cache_miss=     104 cache_ref=     14791 items=       100 avg_time=    525061 ns]
partial_tweets<rapidjson>/manual_time                    2521821 ns      2586474 ns          278          30.726k           278.638M             887        23.017k    7.22248M              11.4367           441.222       3.18672G          21.8943M                    34.6694                     3.03141           44.1222k    31.1492k   631.515k       238.819M/s    388.723   11.6488k   7.36161M         11.6571    396.539/s 2.91917G/s     21.8953M                34.671                2.97425        100       39.6539k/s [BEST: throughput=  0.28 GB/s doc_throughput=   441 docs/s instructions=    21894265 cycles=     7222477 branch_miss=   30726 cache_miss=     887 cache_ref=     23017 items=       100 avg_time=   2521820 ns]
partial_tweets<rapidjson_insitu>/manual_time             1838105 ns      1900444 ns          381          25.012k           373.071M          6.956k        14.282k    5.40462M              8.55818           590.755       3.19281G          13.3197M                    21.0917                     2.46451           59.0755k    25.2985k   631.515k       327.653M/s    210.286   9.62745k    5.4573M         8.64159    544.039/s 2.96898G/s     13.3203M               21.0927                2.44083        100       54.4039k/s [BEST: throughput=  0.37 GB/s doc_throughput=   590 docs/s instructions=    13319731 cycles=     5404616 branch_miss=   25012 cache_miss=    6956 cache_ref=     14282 items=       100 avg_time=   1838104 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                 101687481 ns    107902118 ns            7         899.555k           454.238M        6.87754M       6.89552M    322.823M              7.01808           9.87499       3.18788G          1020.45M                    22.1843                     3.16102           9.87499M    897.895k   45.9988M       431.399M/s   6.81252M   6.89574M   324.194M         7.04788    9.83405/s 3.18814G/s     1020.45M               22.1843                3.14766      1000k       9.83405M/s [BEST: throughput=  0.45 GB/s doc_throughput=     9 docs/s instructions=  1020451781 cycles=   322823175 branch_miss=  899555 cache_miss= 6877539 cache_ref=   6895524 items=   1000000 avg_time= 101687480 ns]
large_random<simdjson_ondemand>/manual_time             72270706 ns     78469230 ns           10         909.685k           636.797M        3.50094M       3.57252M    230.355M              5.00784           13.8438       3.18898G          651.908M                    14.1723                     2.83002           13.8438M     911.24k   45.9988M       606.994M/s   3.51493M   3.57264M   230.447M         5.00986    13.8369/s 3.18867G/s     651.908M               14.1723                2.82888      1000k       13.8369M/s [BEST: throughput=  0.64 GB/s doc_throughput=    13 docs/s instructions=   651907678 cycles=   230354727 branch_miss=  909685 cache_miss= 3500941 cache_ref=   3572517 items=   1000000 avg_time=  72270705 ns]
large_random<simdjson_ondemand_unordered>/manual_time   73560413 ns     79737685 ns           10         918.504k           625.643M        3.50944M       3.57242M    234.468M              5.09726           13.6013       3.18907G          658.908M                    14.3245                     2.81023           13.6013M    918.836k   45.9988M       596.351M/s   3.50707M   3.57249M   234.571M         5.09951    13.5943/s 3.18882G/s     658.908M               14.3245                2.80899      1000k       13.5943M/s [BEST: throughput=  0.63 GB/s doc_throughput=    13 docs/s instructions=   658907678 cycles=   234467805 branch_miss=  918504 cache_miss= 3509436 cache_ref=   3572420 items=   1000000 avg_time=  73560413 ns]
large_random<yyjson>/manual_time                       154902472 ns    161132568 ns            5           687.2k           297.063M        4.20145M       4.32451M    352.671M              7.66696           6.45806       2.27757G          855.681M                    18.6023                     2.42629           6.45806M    689.624k   45.9988M       283.197M/s    4.2002M   4.32543M   352.801M         7.66978    6.45567/s 2.27757G/s     855.681M               18.6023                2.42539      1000k       6.45567M/s [BEST: throughput=  0.30 GB/s doc_throughput=     6 docs/s instructions=   855680753 cycles=   352670698 branch_miss=  687200 cache_miss= 4201449 cache_ref=   4324514 items=   1000000 avg_time= 154902471 ns]
large_random<yyjson_insitu>/manual_time                128473476 ns    134752057 ns            5         687.682k            358.55M        3.48395M       3.60852M     308.83M              6.71388           7.79477       2.40726G           849.56M                    18.4692                      2.7509           7.79477M    689.238k   45.9988M       341.455M/s    3.4831M   3.60797M   309.281M         6.72367    7.78371/s 2.40735G/s      849.56M               18.4692                2.74689      1000k       7.78371M/s [BEST: throughput=  0.36 GB/s doc_throughput=     7 docs/s instructions=   849560193 cycles=   308830334 branch_miss=  687682 cache_miss= 3483950 cache_ref=   3608517 items=   1000000 avg_time= 128473476 ns]
large_random<rapidjson>/manual_time                    250480285 ns    256717239 ns            3         594.834k           189.504M        4.37197M        4.8987M    705.087M              15.3284           4.11977       2.90479G          2.00013G                    43.4822                     2.83671           4.11977M     601.33k   45.9988M       175.135M/s    4.1113M   4.69115M   707.938M         15.3904    3.99233/s 2.82632G/s     2.00014G               43.4824                 2.8253      1000k       3.99233M/s [BEST: throughput=  0.19 GB/s doc_throughput=     4 docs/s instructions=  2000126351 cycles=   705086648 branch_miss=  594834 cache_miss= 4371970 cache_ref=   4898696 items=   1000000 avg_time= 250480285 ns]
large_random<rapidjson_lossless>/manual_time           287408192 ns    293649786 ns            3         659.086k           164.476M        4.37437M       4.89889M    822.725M              17.8858           3.57565       2.94178G          2.47709G                    53.8513                     3.01084           3.57565M    658.882k   45.9988M       152.633M/s   4.11022M   4.69179M   825.392M         17.9438    3.47937/s 2.87185G/s      2.4771G               53.8515                3.00112      1000k       3.47937M/s [BEST: throughput=  0.16 GB/s doc_throughput=     3 docs/s instructions=  2477094075 cycles=   822725264 branch_miss=  659086 cache_miss= 4374365 cache_ref=   4898891 items=   1000000 avg_time= 287408192 ns]
large_random<rapidjson_insitu>/manual_time             276366876 ns    282633210 ns            3         588.495k           171.046M        5.05677M       5.61866M    788.848M              17.1493            3.7185       2.93333G          1.72813G                     37.569                      2.1907            3.7185M    590.094k   45.9988M        158.73M/s   4.82689M   5.40978M   790.614M         17.1877    3.61838/s 2.86074G/s     1.72813G               37.5691                2.18581      1000k       3.61838M/s [BEST: throughput=  0.17 GB/s doc_throughput=     3 docs/s instructions=  1728126157 cycles=   788848213 branch_miss=  588495 cache_miss= 5056767 cache_ref=   5618664 items=   1000000 avg_time= 276366876 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                       109311308 ns    128981932 ns            6         1034.85k           1.25765G        10.2092M       10.3178M    348.139M              2.53552           9.15957       3.18881G          971.996M                     7.0791                     2.79197           4.80225M    1034.67k   137.305M       1.16983G/s   10.2458M    10.318M   348.535M          2.5384    9.14818/s 3.18846G/s     971.996M                7.0791                 2.7888   524.288k       4.79628M/s [BEST: throughput=  1.26 GB/s doc_throughput=     9 docs/s instructions=   971995679 cycles=   348139284 branch_miss= 1034850 cache_miss=10209247 cache_ref=  10317842 items=    524288 avg_time= 109311308 ns]
kostya<simdjson_ondemand>/manual_time                   72214498 ns     91669164 ns           10         480.371k           1.90397G        6.43125M       6.47057M    229.892M              1.67432           13.8667       3.18784G          638.261M                    4.64849                     2.77635           7.27014M    484.794k   137.305M       1.77077G/s    6.4369M    6.4705M   230.235M         1.67681    13.8476/s  3.1882G/s     638.261M               4.64849                2.77222   524.288k       7.26015M/s [BEST: throughput=  1.90 GB/s doc_throughput=    13 docs/s instructions=   638261352 cycles=   229892139 branch_miss=  480371 cache_miss= 6431247 cache_ref=   6470569 items=    524288 avg_time=  72214497 ns]
kostya<yyjson>/manual_time                             231853087 ns    251308887 ns            3         423.197k            592.35M        8.49005M       8.62607M    504.157M               3.6718           4.31412       2.17499G          974.184M                    7.09504                      1.9323           2.26184M    422.256k   137.305M       564.772M/s   8.49051M   8.62915M   504.299M         3.67284    4.31308/s 2.17508G/s     974.185M               7.09504                1.93176   524.288k       2.26129M/s [BEST: throughput=  0.59 GB/s doc_throughput=     4 docs/s instructions=   974184496 cycles=   504156800 branch_miss=  423197 cache_miss= 8490055 cache_ref=   8626071 items=    524288 avg_time= 231853087 ns]
kostya<yyjson_insitu>/manual_time                      152803761 ns    172137411 ns            5         421.299k           898.807M        6.34991M        6.4859M     373.91M              2.72321           6.54607       2.44764G          955.915M                    6.96198                     2.55654           3.43202M    421.215k   137.305M       856.944M/s   6.35035M   6.48778M   373.947M         2.72348    6.54434/s 2.44724G/s     955.915M               6.96198                2.55628   524.288k       3.43112M/s [BEST: throughput=  0.90 GB/s doc_throughput=     6 docs/s instructions=   955914820 cycles=   373909818 branch_miss=  421299 cache_miss= 6349906 cache_ref=   6485899 items=    524288 avg_time= 152803760 ns]
kostya<rapidjson>/manual_time                          325216370 ns    344701396 ns            2         981.167k           426.705M        5.24738M       5.75693M    928.061M              6.75912           3.10771       2.88415G          2.73082G                    19.8887                      2.9425           1.62934M    983.271k   137.305M       402.637M/s   5.12559M   5.64962M   930.345M         6.77576    3.07488/s  2.8607G/s     2.73082G               19.8887                2.93528   524.288k       1.61212M/s [BEST: throughput=  0.43 GB/s doc_throughput=     3 docs/s instructions=  2730822443 cycles=   928061439 branch_miss=  981167 cache_miss= 5247382 cache_ref=   5756928 items=    524288 avg_time= 325216369 ns]
kostya<rapidjson_lossless>/manual_time                 344808244 ns    364292375 ns            2         963.599k           402.254M        5.24382M        5.7709M    989.719M              7.20818           2.92964       2.89952G          3.00711G                     21.901                     3.03835           1.53597M    963.866k   137.305M        379.76M/s   5.12023M   5.66314M   992.056M          7.2252    2.90016/s 2.87712G/s     3.00711G                21.901                3.03119   524.288k       1.52052M/s [BEST: throughput=  0.40 GB/s doc_throughput=     2 docs/s instructions=  3007113207 cycles=   989719208 branch_miss=  963599 cache_miss= 5243821 cache_ref=   5770897 items=    524288 avg_time= 344808244 ns]
kostya<rapidjson_insitu>/manual_time                   313395165 ns    332800018 ns            2         484.666k           442.581M        7.38637M       7.90201M    891.369M              6.49189           3.22334       2.87318G          2.21411G                    16.1255                     2.48395           1.68996M     469.56k   137.305M       417.825M/s   7.26426M   7.79545M   892.853M          6.5027    3.19086/s 2.84897G/s     2.21411G               16.1255                2.47982   524.288k       1.67293M/s [BEST: throughput=  0.44 GB/s doc_throughput=     3 docs/s instructions=  2214111352 cycles=   891368701 branch_miss=  484666 cache_miss= 7386368 cache_ref=   7902011 items=    524288 avg_time= 313395165 ns]
distinct_user_id<simdjson_dom>/manual_time                316692 ns       394525 ns         2212           3.827k           2.00975G               0        33.706k    1003.54k               1.5891          3.18243k       3.19371G          2.86747M                    4.54061                     2.85734            365.98k    3.97715k   631.515k       1.85715G/s    0.56962    33.645k   1010.53k         1.60018   3.15764k/s 3.19091G/s     2.86747M               4.54061                2.83757        115       363.129k/s [BEST: throughput=  2.01 GB/s doc_throughput=  3182 docs/s instructions=     2867465 cycles=     1003542 branch_miss=    3827 cache_miss=       0 cache_ref=     33706 items=       115 avg_time=    316692 ns]
distinct_user_id<simdjson_ondemand>/manual_time           192394 ns       254011 ns         3634           1.988k           3.31231G               0         8.265k    609.053k             0.964432          5.24502k        3.1945G          1.82938M                    2.89681                     3.00365           603.177k    2.13713k   631.515k       3.05698G/s  0.0756742   8.39185k   614.055k        0.972352   5.19768k/s 3.19166G/s     1.82938M               2.89681                2.97918        115       597.733k/s [BEST: throughput=  3.31 GB/s doc_throughput=  5245 docs/s instructions=     1829381 cycles=      609053 branch_miss=    1988 cache_miss=       0 cache_ref=      8265 items=       115 avg_time=    192393 ns]
distinct_user_id<yyjson>/manual_time                      801941 ns       889801 ns          957           9.891k           1.42486G             181        27.569k    1.41556M              2.24154          2.25626k       3.19387G           2.8778M                    4.55697                     2.03297            259.47k    7.70894k   631.515k       751.003M/s    453.302   23.6682k   1.58717M         2.51327   1.24697k/s 1.97916G/s      2.8782M               4.55761                1.81341        115       143.402k/s [BEST: throughput=  1.42 GB/s doc_throughput=  2256 docs/s instructions=     2877798 cycles=     1415563 branch_miss=    9891 cache_miss=     181 cache_ref=     27569 items=       115 avg_time=    801940 ns]
distinct_user_id<yyjson_insitu>/manual_time               522162 ns       592735 ns         1353            6.89k            1.7577G          1.196k        13.602k    1.14022M              1.80554          2.78331k        3.1736G          2.87739M                    4.55634                     2.52353           320.081k    7.42586k   631.515k       1.12636G/s    74.2542   8.97524k   1.26398M          2.0015   1.91511k/s 2.42067G/s     2.87766M               4.55675                2.27666        115       220.238k/s [BEST: throughput=  1.76 GB/s doc_throughput=  2783 docs/s instructions=     2877395 cycles=     1140225 branch_miss=    6890 cache_miss=    1196 cache_ref=     13602 items=       115 avg_time=    522162 ns]
distinct_user_id<rapidjson>/manual_time                  2489430 ns      2561696 ns          280          30.301k           280.585M          7.513k        22.624k    7.18616M              11.3792           444.305       3.19285G           21.823M                    34.5565                     3.03681           51.0951k    30.9881k   631.515k       241.927M/s   1.57014k   12.9774k   7.32392M         11.5974    401.698/s 2.94201G/s     21.8235M               34.5575                2.97976        115       46.1953k/s [BEST: throughput=  0.28 GB/s doc_throughput=   444 docs/s instructions=    21822961 cycles=     7186157 branch_miss=   30301 cache_miss=    7513 cache_ref=     22624 items=       115 avg_time=   2489429 ns]
distinct_user_id<rapidjson_insitu>/manual_time           1855138 ns      1925036 ns          378          25.254k           373.715M          7.058k        14.419k    5.39535M               8.5435           591.776       3.19284G          13.2532M                    20.9864                     2.45642           68.0542k    32.4462k   631.515k       324.644M/s   1.89154k    11.569k   5.60903M         8.88187    539.043/s 3.02351G/s     13.2534M               20.9867                2.36287        115         61.99k/s [BEST: throughput=  0.37 GB/s doc_throughput=   591 docs/s instructions=    13253226 cycles=     5395350 branch_miss=   25254 cache_miss=    7058 cache_ref=     14419 items=       115 avg_time=   1855138 ns]
find_tweet<simdjson_dom>/manual_time                      302285 ns       376357 ns         2317           3.524k           2.10269G               0        29.524k    959.233k              1.51894           3.3296k       3.19387G          2.78229M                    4.40574                     2.90054            3.3296k    3.67207k   631.515k       1.94566G/s   0.152352   29.7353k   964.615k         1.52746   3.30814k/s 3.19108G/s     2.78229M               4.40574                2.88435          1       3.30814k/s [BEST: throughput=  2.10 GB/s doc_throughput=  3329 docs/s instructions=     2782291 cycles=      959233 branch_miss=    3524 cache_miss=       0 cache_ref=     29524 items=         1 avg_time=    302284 ns]
find_tweet<simdjson_ondemand>/manual_time                 127316 ns       190623 ns         5489             1021           4.99782G               0         7.329k    403.829k             0.639461          7.91402k       3.19591G            1.321M                     2.0918                      3.2712           7.91402k     1096.86   631.515k       4.61956G/s  0.0200401   7.35267k   406.352k        0.643456   7.85447k/s 3.19168G/s       1.321M                2.0918                3.25088          1       7.85447k/s [BEST: throughput=  5.00 GB/s doc_throughput=  7914 docs/s instructions=     1321004 cycles=      403829 branch_miss=    1021 cache_miss=       0 cache_ref=      7329 items=         1 avg_time=    127316 ns]
find_tweet<yyjson>/manual_time                            783204 ns       866802 ns          899           9.272k           1.46368G             184        27.266k    1.37826M              2.18247          2.31773k       3.19444G          2.81716M                    4.46095                     2.04399           2.31773k    7.37617k   631.515k       768.969M/s    336.761   19.6803k   1.52907M         2.42128   1.27681k/s 1.95233G/s     2.81764M               4.46172                1.84272          1       1.27681k/s [BEST: throughput=  1.46 GB/s doc_throughput=  2317 docs/s instructions=     2817159 cycles=     1378264 branch_miss=    9272 cache_miss=     184 cache_ref=     27266 items=         1 avg_time=    783203 ns]
find_tweet<yyjson_insitu>/manual_time                     506188 ns       568604 ns         1397           6.747k           1.80827G             896        12.706k    1.11073M              1.75884          2.86339k       3.18046G          2.81684M                    4.46045                     2.53602           2.86339k    7.17557k   631.515k       1.16191G/s    7.06586   4.99057k   1.21424M         1.92274   1.97555k/s 2.39879G/s      2.8171M               4.46087                2.32005          1       1.97555k/s [BEST: throughput=  1.81 GB/s doc_throughput=  2863 docs/s instructions=     2816842 cycles=     1110735 branch_miss=    6747 cache_miss=     896 cache_ref=     12706 items=         1 avg_time=    506188 ns]
find_tweet<rapidjson>/manual_time                        2470826 ns      2537205 ns          281          30.252k           282.232M         11.908k        20.884k    7.14404M              11.3125           446.913       3.19276G          21.7391M                    34.4237                     3.04297            446.913      30.91k   631.515k       243.748M/s   1.36217k    9.5306k    7.2654M         11.5047    404.723/s 2.94047G/s     21.7399M                34.425                2.99225          1        404.723/s [BEST: throughput=  0.28 GB/s doc_throughput=   446 docs/s instructions=    21739066 cycles=     7144039 branch_miss=   30252 cache_miss=   11908 cache_ref=     20884 items=         1 avg_time=   2470826 ns]
find_tweet<rapidjson_insitu>/manual_time                 1831942 ns      1896603 ns          382          24.894k           376.549M          6.825k        13.335k    5.35468M               8.4791           596.262       3.19279G          13.1741M                    20.8611                      2.4603            596.262    31.1542k   631.515k       328.755M/s   1.71004k    8.4132k    5.5358M          8.7659    545.869/s 3.02182G/s     13.1744M               20.8616                2.37986          1        545.869/s [BEST: throughput=  0.38 GB/s doc_throughput=   596 docs/s instructions=    13174128 cycles=     5354676 branch_miss=   24894 cache_miss=    6825 cache_ref=     13335 items=         1 avg_time=   1831942 ns]
