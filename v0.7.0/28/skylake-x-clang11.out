run_benchmark: v0.8.0~10 /home/jkeiser/simdjson_benchmark_results/v0.7.0/28/skylake-clang11.json 
git reset --hard v0.8.0~10
HEAD is now at 84b0e844 fix function was exited without releasing (#1389)
cmake ..
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- git Version: v0.2.1-84b0e844
-- Version: 0.2.1
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES -- failed to compile
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
make[1]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[2]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 72%] Built target benchmark
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 72%] Built target generated-data
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
Scanning dependencies of target simdjson
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 72%] Building CXX object src/CMakeFiles/simdjson.dir/simdjson.cpp.o
[ 81%] Linking CXX shared library ../libsimdjson.so
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 81%] Built target simdjson
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 90%] Built target yyjson
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
Scanning dependencies of target bench_ondemand
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 90%] Building CXX object benchmark/CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o
[100%] Linking CXX executable bench_ondemand
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[100%] Built target bench_ondemand
make[2]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[1]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/28/skylake-clang11.json --benchmark_out_format=json
2021-01-23 04:47:03
Running benchmark/bench_ondemand
Run on (4 X 3200 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 1024 KiB (x4)
  L3 Unified 8448 KiB (x1)
Load Average: 1.00, 1.01, 0.92
***WARNING*** CPU scaling is enabled, the benchmark real time measurements may be noisy and will incur extra overhead.
simdjson::dom implementation:      haswell
simdjson::ondemand implementation: fallback

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                  313769 ns       384227 ns         2243           3.414k           2.04158G               0        34.108k    988.003k               1.5645          3.23284k       3.19405G          2.98281M                    4.72326                     3.01903           323.284k    3.75445k   631.515k       1.87445G/s   0.434686   34.1345k   1001.13k         1.58528   3.18706k/s 3.19065G/s     2.98281M               4.72326                2.97945        100       318.706k/s [BEST: throughput=  2.04 GB/s doc_throughput=  3232 docs/s instructions=     2982809 cycles=      988003 branch_miss=    3414 cache_miss=       0 cache_ref=     34108 items=       100 avg_time=    313769 ns]
partial_tweets<simdjson_ondemand>/manual_time             209315 ns       266130 ns         3348           2.055k           3.03986G               1        11.278k    663.715k              1.05099          4.81359k       3.19485G           2.2643M                    3.58551                     3.41156           481.359k    2.17927k   631.515k       2.80985G/s  0.0806452   11.3281k   668.029k         1.05782   4.77748k/s 3.19149G/s      2.2643M               3.58551                3.38953        100       477.748k/s [BEST: throughput=  3.04 GB/s doc_throughput=  4813 docs/s instructions=     2264303 cycles=      663715 branch_miss=    2055 cache_miss=       1 cache_ref=     11278 items=       100 avg_time=    209315 ns]
partial_tweets<yyjson>/manual_time                        792949 ns       872196 ns          885             9.5k           1.45304G             179        27.787k    1.38862M              2.19888          2.30088k       3.19505G          2.91993M                     4.6237                     2.10275           230.088k    7.55272k   631.515k       759.519M/s    529.206   25.5844k   1.55832M         2.46759   1.26112k/s 1.96523G/s      2.9204M               4.62443                1.87406        100       126.112k/s [BEST: throughput=  1.45 GB/s doc_throughput=  2300 docs/s instructions=     2919934 cycles=     1388624 branch_miss=    9500 cache_miss=     179 cache_ref=     27787 items=       100 avg_time=    792948 ns]
partial_tweets<yyjson_insitu>/manual_time                 512592 ns       577322 ns         1380           7.304k           1.79339G             114        15.012k    1.12487M              1.78122          2.83983k       3.19443G           2.9198M                    4.62349                     2.59568           283.983k    7.33105k   631.515k       1.14739G/s    94.3659   11.6085k   1.23402M         1.95407   1.95087k/s 2.40741G/s     2.92006M                4.6239                 2.3663        100       195.087k/s [BEST: throughput=  1.79 GB/s doc_throughput=  2839 docs/s instructions=     2919801 cycles=     1124869 branch_miss=    7304 cache_miss=     114 cache_ref=     15012 items=       100 avg_time=    512592 ns]
partial_tweets<rapidjson>/manual_time                    2797314 ns      2863705 ns          250          30.451k           249.319M         12.455k        22.527k     8.0869M              12.8056           394.795       3.19267G          21.8952M                    34.6709                     2.70749           39.4795k    30.9134k   631.515k       215.299M/s    472.224   15.1971k    8.2399M         13.0478    357.486/s 2.94565G/s     21.8961M               34.6723                2.65732        100       35.7486k/s [BEST: throughput=  0.25 GB/s doc_throughput=   394 docs/s instructions=    21895199 cycles=     8086901 branch_miss=   30451 cache_miss=   12455 cache_ref=     22527 items=       100 avg_time=   2797314 ns]
partial_tweets<rapidjson_insitu>/manual_time             1803497 ns      1865469 ns          388          27.879k           369.469M             717          12.1k    5.26848M               8.3426           585.052       3.08233G           13.357M                    21.1507                     2.53526           58.5052k    29.9278k   631.515k        333.94M/s    218.415   10.1447k   5.35098M         8.47324    554.478/s   2.967G/s     13.3573M               21.1512                2.49624        100       55.4478k/s [BEST: throughput=  0.37 GB/s doc_throughput=   585 docs/s instructions=    13356955 cycles=     5268477 branch_miss=   27879 cache_miss=     717 cache_ref=     12100 items=       100 avg_time=   1803496 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                  99225279 ns    105453240 ns            7         932.113k           464.083M        6.76572M       6.89575M    315.931M              6.86824            10.089       3.18744G          1038.74M                    22.5819                     3.28787            10.089M    928.431k   45.9988M       442.104M/s   6.80851M    6.8956M   316.331M         6.87694    10.0781/s 3.18801G/s     1038.74M               22.5819                3.28371      1000k       10.0781M/s [BEST: throughput=  0.46 GB/s doc_throughput=    10 docs/s instructions=  1038738122 cycles=   315930713 branch_miss=  932113 cache_miss= 6765716 cache_ref=   6895747 items=   1000000 avg_time=  99225279 ns]
large_random<simdjson_ondemand>/manual_time             74560146 ns     80711125 ns            9         943.807k           617.293M         3.5258M       3.57317M    237.615M              5.16569           13.4198       3.18875G          671.195M                    14.5916                     2.82471           13.4198M    945.642k   45.9988M       588.355M/s   3.51209M   3.57311M   237.752M         5.16865     13.412/s 3.18872G/s     671.195M               14.5916                2.82309      1000k        13.412M/s [BEST: throughput=  0.62 GB/s doc_throughput=    13 docs/s instructions=   671194587 cycles=   237615490 branch_miss=  943807 cache_miss= 3525802 cache_ref=   3573173 items=   1000000 avg_time=  74560145 ns]
large_random<simdjson_ondemand_unordered>/manual_time   73453887 ns     79607362 ns           10         946.248k           629.151M         3.5214M       3.57359M    233.143M              5.06846           13.6776       3.18883G          669.195M                    14.5481                     2.87032           13.6776M    990.721k   45.9988M       597.216M/s   3.50723M   3.57352M   234.219M         5.09185     13.614/s 3.18865G/s     669.195M               14.5481                2.85714      1000k        13.614M/s [BEST: throughput=  0.63 GB/s doc_throughput=    13 docs/s instructions=   669194598 cycles=   233143118 branch_miss=  946248 cache_miss= 3521399 cache_ref=   3573585 items=   1000000 avg_time=  73453887 ns]
large_random<yyjson>/manual_time                       146579532 ns    152840895 ns            5         675.582k           314.008M        4.20068M       4.33323M    325.676M              7.08011           6.82643       2.22321G          855.681M                    18.6023                      2.6274           6.82643M    676.558k   45.9988M       299.277M/s   4.20111M   4.34181M   325.979M         7.08668    6.82223/s  2.2239G/s     855.681M               18.6023                2.62496      1000k       6.82223M/s [BEST: throughput=  0.31 GB/s doc_throughput=     6 docs/s instructions=   855680749 cycles=   325676390 branch_miss=  675582 cache_miss= 4200681 cache_ref=   4333227 items=   1000000 avg_time= 146579531 ns]
large_random<yyjson_insitu>/manual_time                120112202 ns    126334054 ns            6         672.793k           383.253M        3.48337M       3.72029M    282.088M               6.1325           8.33182        2.3503G           849.56M                    18.4692                     3.01169           8.33182M    676.493k   45.9988M       365.224M/s   3.48339M   3.70089M   282.363M          6.1385    8.32555/s 2.35083G/s      849.56M               18.4692                3.00875      1000k       8.32555M/s [BEST: throughput=  0.38 GB/s doc_throughput=     8 docs/s instructions=   849559988 cycles=   282087677 branch_miss=  672793 cache_miss= 3483371 cache_ref=   3720285 items=   1000000 avg_time= 120112202 ns]
large_random<rapidjson>/manual_time                    251821415 ns    258070574 ns            3         594.487k           188.725M        4.36386M       4.93927M     708.64M              15.4056           4.10284       2.90743G          2.01413G                    43.7865                     2.84224           4.10284M    592.831k   45.9988M       174.202M/s   4.10095M   4.74382M    712.44M         15.4882    3.97107/s 2.82915G/s     2.01413G               43.7867                2.82709      1000k       3.97107M/s [BEST: throughput=  0.19 GB/s doc_throughput=     4 docs/s instructions=  2014125056 cycles=   708639906 branch_miss=  594487 cache_miss= 4363856 cache_ref=   4939273 items=   1000000 avg_time= 251821415 ns]
large_random<rapidjson_lossless>/manual_time           286984579 ns    293221985 ns            3         597.532k           164.884M        4.36266M       4.94035M    820.684M              17.8414           3.58453       2.94177G          2.47909G                    53.8947                     3.02076           3.58453M    597.618k   45.9988M       152.858M/s   4.10212M   4.75611M   823.999M         17.9135    3.48451/s 2.87123G/s      2.4791G               53.8949                3.00862      1000k       3.48451M/s [BEST: throughput=  0.16 GB/s doc_throughput=     3 docs/s instructions=  2479092041 cycles=   820683922 branch_miss=  597532 cache_miss= 4362663 cache_ref=   4940348 items=   1000000 avg_time= 286984578 ns]
large_random<rapidjson_insitu>/manual_time             270259051 ns    276483708 ns            3         587.983k           175.509M        5.06565M        5.7486M    767.093M              16.6764           3.81552       2.92686G          1.73612G                    37.7429                     2.26325           3.81552M    590.251k   45.9988M       162.318M/s   4.78669M   5.77101M   771.208M         16.7658    3.70015/s 2.85359G/s     1.73613G                37.743                2.25119      1000k       3.70015M/s [BEST: throughput=  0.18 GB/s doc_throughput=     3 docs/s instructions=  1736124908 cycles=   767092553 branch_miss=  587983 cache_miss= 5065655 cache_ref=   5748605 items=   1000000 avg_time= 270259051 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                       104673078 ns    123933805 ns            7         1020.92k           1.31311G        10.2015M       10.3187M    333.418M               2.4283           9.56344       3.18862G          984.675M                    7.17144                     2.95327             5.014M       1021k   137.305M       1.22166G/s   10.2384M   10.3192M   333.736M         2.43062    9.55355/s 3.18836G/s     984.675M               7.17144                2.95046   524.288k       5.00881M/s [BEST: throughput=  1.31 GB/s doc_throughput=     9 docs/s instructions=   984674902 cycles=   333418179 branch_miss= 1020925 cache_miss=10201517 cache_ref=  10318735 items=    524288 avg_time= 104673077 ns]
kostya<simdjson_ondemand>/manual_time                   67834240 ns     87088820 ns           10         476.989k           2.02577G        6.42664M       6.47126M    216.147M              1.57421           14.7538       3.18898G          649.892M                     4.7332                     3.00672           7.73523M    476.208k   137.305M       1.88511G/s   6.43512M    6.4714M    216.28M         1.57518    14.7418/s 3.18835G/s     649.892M                4.7332                3.00487   524.288k       7.72896M/s [BEST: throughput=  2.03 GB/s doc_throughput=    14 docs/s instructions=   649892006 cycles=   216146653 branch_miss=  476989 cache_miss= 6426636 cache_ref=   6471257 items=    524288 avg_time=  67834240 ns]
kostya<yyjson>/manual_time                             228508825 ns    247742484 ns            3         417.376k           601.126M        8.49406M       8.66575M    493.481M              3.59405           4.37804       2.16048G          974.185M                    7.09504                     1.97411           2.29535M    417.105k   137.305M       573.038M/s   8.50225M   8.67312M   493.524M         3.59436     4.3762/s 2.15976G/s     974.185M               7.09504                1.97393   524.288k       2.29439M/s [BEST: throughput=  0.60 GB/s doc_throughput=     4 docs/s instructions=   974184709 cycles=   493480658 branch_miss=  417376 cache_miss= 8494057 cache_ref=   8665748 items=    524288 avg_time= 228508825 ns]
kostya<yyjson_insitu>/manual_time                      149345586 ns    168634134 ns            5         415.227k           919.522M        6.35758M       6.74107M    362.881M              2.64288           6.69693       2.43019G          955.915M                    6.96198                     2.63424           3.51112M    415.273k   137.305M       876.787M/s   6.35781M   6.61887M   362.998M         2.64374    6.69588/s 2.43059G/s     955.915M               6.96198                2.63339   524.288k       3.51057M/s [BEST: throughput=  0.92 GB/s doc_throughput=     6 docs/s instructions=   955914823 cycles=   362881211 branch_miss=  415227 cache_miss= 6357582 cache_ref=   6741066 items=    524288 avg_time= 149345586 ns]
kostya<rapidjson>/manual_time                          329552784 ns    348945808 ns            2         983.237k           420.815M        5.23886M       5.84192M    942.653M              6.86539           3.06482       2.88906G          2.73711G                    19.9346                     2.90363           1.60685M    982.933k   137.305M       397.339M/s   5.11343M   5.74091M   944.542M         6.87915    3.03442/s 2.86613G/s     2.73711G               19.9346                2.89782   524.288k       1.59091M/s [BEST: throughput=  0.42 GB/s doc_throughput=     3 docs/s instructions=  2737113322 cycles=   942652670 branch_miss=  983237 cache_miss= 5238863 cache_ref=   5841921 items=    524288 avg_time= 329552784 ns]
kostya<rapidjson_lossless>/manual_time                 348961546 ns    368404991 ns            2         962.133k           397.239M        5.22949M        5.8481M    1003.76M              7.31047           2.89311         2.904G          3.00606G                    21.8933                     2.99479           1.51683M    962.135k   137.305M        375.24M/s   5.10835M    5.7444M   1005.63M         7.32405    2.86565/s 2.88178G/s     3.00607G               21.8933                2.98924   524.288k       1.50242M/s [BEST: throughput=  0.40 GB/s doc_throughput=     2 docs/s instructions=  3006063628 cycles=  1003763752 branch_miss=  962133 cache_miss= 5229487 cache_ref=   5848100 items=    524288 avg_time= 348961546 ns]
kostya<rapidjson_insitu>/manual_time                   313162281 ns    332568178 ns            2         1.63311M           440.342M        7.34233M       8.34117M    896.517M              6.52938           3.20703       2.87516G          2.21988G                    16.1675                     2.47611           1.68141M    1.38793M   137.305M       418.135M/s   7.21045M    8.4181M   892.288M         6.49858    3.19323/s 2.84928G/s     2.21988G               16.1675                2.48785   524.288k       1.67417M/s [BEST: throughput=  0.44 GB/s doc_throughput=     3 docs/s instructions=  2219877917 cycles=   896516819 branch_miss= 1633110 cache_miss= 7342327 cache_ref=   8341175 items=    524288 avg_time= 313162281 ns]
distinct_user_id<simdjson_dom>/manual_time                310674 ns       388219 ns         2251           3.663k           2.04777G               1        33.838k    984.959k              1.55968          3.24263k       3.19385G          2.91783M                    4.62037                     2.96239           372.902k     3.7823k   631.515k       1.89312G/s    1.13105   33.6705k   991.354k          1.5698   3.21881k/s 3.19098G/s     2.91783M               4.62037                2.94328        115       370.163k/s [BEST: throughput=  2.05 GB/s doc_throughput=  3242 docs/s instructions=     2917832 cycles=      984959 branch_miss=    3663 cache_miss=       1 cache_ref=     33838 items=       115 avg_time=    310673 ns]
distinct_user_id<simdjson_ondemand>/manual_time           182718 ns       243847 ns         3828           1.611k           3.50062G               5         9.032k    576.237k             0.912468          5.54321k        3.1942G          1.88384M                    2.98304                     3.26921           637.469k    1.80262k   631.515k       3.21886G/s    4.14812   9.00995k   583.056k        0.923266   5.47291k/s 3.19101G/s     1.88384M               2.98304                3.23097        115       629.384k/s [BEST: throughput=  3.50 GB/s doc_throughput=  5543 docs/s instructions=     1883837 cycles=      576237 branch_miss=    1611 cache_miss=       5 cache_ref=      9032 items=       115 avg_time=    182718 ns]
distinct_user_id<yyjson>/manual_time                      788402 ns       876635 ns          978          10.065k            1.4511G             186        27.591k    1.39026M              2.20147          2.29781k       3.19455G          2.87794M                     4.5572                     2.07007           264.248k    7.59612k   631.515k         763.9M/s    448.583   25.4174k   1.54536M         2.44707   1.26839k/s 1.96012G/s     2.87834M               4.55783                1.86257        115       145.865k/s [BEST: throughput=  1.45 GB/s doc_throughput=  2297 docs/s instructions=     2877939 cycles=     1390259 branch_miss=   10065 cache_miss=     186 cache_ref=     27591 items=       115 avg_time=    788401 ns]
distinct_user_id<yyjson_insitu>/manual_time               508652 ns       581664 ns         1390           6.887k            1.8138G          1.585k        14.567k    1.10727M              1.75336          2.87214k       3.18024G          2.87754M                    4.55656                     2.59876           330.296k      7.369k   631.515k       1.15628G/s    98.5856   11.7446k   1.22135M           1.934   1.96598k/s 2.40115G/s      2.8778M               4.55698                2.35624        115       226.088k/s [BEST: throughput=  1.81 GB/s doc_throughput=  2872 docs/s instructions=     2877538 cycles=     1107274 branch_miss=    6887 cache_miss=    1585 cache_ref=     14567 items=       115 avg_time=    508652 ns]
distinct_user_id<rapidjson>/manual_time                  2765459 ns      2839658 ns          252          30.278k           249.584M         12.598k        22.652k    8.07857M              12.7924           395.214       3.19277G          21.8228M                    34.5563                     2.70132           45.4497k    30.8833k   631.515k       217.779M/s   1.77209k    16.007k   8.21225M          13.004    361.604/s 2.96958G/s     21.8235M               34.5573                2.65743        115       41.5844k/s [BEST: throughput=  0.25 GB/s doc_throughput=   395 docs/s instructions=    21822808 cycles=     8078567 branch_miss=   30278 cache_miss=   12598 cache_ref=     22652 items=       115 avg_time=   2765459 ns]
distinct_user_id<rapidjson_insitu>/manual_time           1842956 ns      1913286 ns          369          28.762k            375.26M          1.531k        18.403k    5.34066M               8.4569           594.223       3.17354G          13.2891M                    21.0432                     2.48829           68.3356k    36.5708k   631.515k        326.79M/s   1.94412k    11.907k   5.57677M         8.83079    542.606/s 3.02599G/s     13.2891M               21.0432                2.38294        115       62.3997k/s [BEST: throughput=  0.38 GB/s doc_throughput=   594 docs/s instructions=    13289083 cycles=     5340659 branch_miss=   28762 cache_miss=    1531 cache_ref=     18403 items=       115 avg_time=   1842956 ns]
find_tweet<simdjson_dom>/manual_time                      296362 ns       369921 ns         2366           3.349k           2.14822G              80        30.092k    939.169k              1.48717           3.4017k       3.19477G          2.83251M                    4.48526                     3.01598            3.4017k    3.49625k   631.515k       1.98455G/s    69.5008   30.2419k   945.712k         1.49753   3.37425k/s 3.19107G/s     2.83251M               4.48526                2.99511          1       3.37425k/s [BEST: throughput=  2.15 GB/s doc_throughput=  3401 docs/s instructions=     2832512 cycles=      939169 branch_miss=    3349 cache_miss=      80 cache_ref=     30092 items=         1 avg_time=    296361 ns]
find_tweet<simdjson_ondemand>/manual_time                 128778 ns       191330 ns         5425              787           4.94561G               5         7.613k    407.952k             0.645989          7.83134k       3.19481G          1.37818M                    2.18234                      3.3783           7.83134k     809.365   631.515k        4.5671G/s    6.01622   7.62179k   411.089k        0.650956   7.76528k/s 3.19222G/s     1.37818M               2.18234                3.35252          1       7.76528k/s [BEST: throughput=  4.95 GB/s doc_throughput=  7831 docs/s instructions=     1378183 cycles=      407952 branch_miss=     787 cache_miss=       5 cache_ref=      7613 items=         1 avg_time=    128778 ns]
find_tweet<yyjson>/manual_time                            776679 ns       862727 ns          907           9.285k           1.49445G             136        27.277k    1.34982M              2.13743          2.36646k       3.19429G          2.81717M                    4.46096                     2.08707           2.36646k    7.32931k   631.515k       775.429M/s    406.895   24.0116k   1.50885M         2.38926   1.28753k/s  1.9427G/s     2.81785M               4.46204                1.86754          1       1.28753k/s [BEST: throughput=  1.49 GB/s doc_throughput=  2366 docs/s instructions=     2817165 cycles=     1349820 branch_miss=    9285 cache_miss=     136 cache_ref=     27277 items=         1 avg_time=    776679 ns]
find_tweet<yyjson_insitu>/manual_time                     495797 ns       563379 ns         1411             6.8k           1.85493G          1.223k        12.635k    1082.24k              1.71371          2.93727k       3.17882G          2.81705M                    4.46078                     2.60299           2.93727k    7.07964k   631.515k       1.18626G/s     7.8703   9.46451k    1.1808M          1.8698   2.01695k/s 2.38163G/s     2.81731M               4.46119                2.38592          1       2.01695k/s [BEST: throughput=  1.85 GB/s doc_throughput=  2937 docs/s instructions=     2817047 cycles=     1082236 branch_miss=    6800 cache_miss=    1223 cache_ref=     12635 items=         1 avg_time=    495796 ns]
find_tweet<rapidjson>/manual_time                        2751525 ns      2820841 ns          254          30.162k           251.066M          11.97k        21.094k    8.03063M              12.7165           397.562       3.19267G          21.7391M                    34.4238                     2.70703            397.562    30.7534k   631.515k       218.882M/s   1.50182k   12.8161k   8.16658M         12.9317    363.435/s 2.96802G/s     21.7397M               34.4246                2.66203          1        363.435/s [BEST: throughput=  0.25 GB/s doc_throughput=   397 docs/s instructions=    21739134 cycles=     8030629 branch_miss=   30162 cache_miss=   11970 cache_ref=     21094 items=         1 avg_time=   2751524 ns]
find_tweet<rapidjson_insitu>/manual_time                 1818204 ns      1883613 ns          372          26.617k           355.951M              22         7.943k    5.24906M              8.31186           563.646       2.95861G          13.2111M                    20.9197                     2.51684            563.646    36.9368k   631.515k       331.239M/s   1.76588k   9.29353k   5.49769M         8.70556    549.993/s 3.02369G/s     13.2112M               20.9198                2.40304          1        549.993/s [BEST: throughput=  0.36 GB/s doc_throughput=   563 docs/s instructions=    13211081 cycles=     5249065 branch_miss=   26617 cache_miss=      22 cache_ref=      7943 items=         1 avg_time=   1818203 ns]
