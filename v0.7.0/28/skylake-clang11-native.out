run_benchmark: v0.8.0~10 /home/jkeiser/simdjson_benchmark_results/v0.7.0/28/skylake-clang11-native.json -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native
git reset --hard v0.8.0~10
HEAD is now at 84b0e844 fix function was exited without releasing (#1389)
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- git Version: v0.2.1-84b0e844
-- Version: 0.2.1
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES -- failed to compile
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 11
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
make[3]: Nothing to be done for '_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build'.
[ 72%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
make[3]: Nothing to be done for 'jsonexamples/generated/CMakeFiles/generated-data.dir/build'.
[ 72%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/clang++-11  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/src  -march=native -O3 -DNDEBUG -fPIC   -pthread -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/clang++-11 -fPIC -march=native -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.6 -o ../libsimdjson.so.6.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.6.0.0 ../libsimdjson.so.6 ../libsimdjson.so
[ 81%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
make[3]: Nothing to be done for 'dependencies/CMakeFiles/yyjson.dir/build'.
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/clang++-11  -DRAPIDJSON_HAS_STDSTRING -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_COMPETITION_RAPIDJSON -DSIMDJSON_COMPETITION_YYJSON -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/rapidjson/include  -march=native -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/clang++-11  -march=native -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.6.0.0 ../_deps/google_benchmarks/src/libbenchmark.a ../dependencies/libyyjson.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/28/skylake-clang11-native.json --benchmark_out_format=json
2021-01-24 21:08:47
Running benchmark/bench_ondemand
Run on (4 X 4000 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 256 KiB (x4)
  L3 Unified 8192 KiB (x1)
Load Average: 1.00, 1.00, 0.95
simdjson::dom implementation:      haswell
simdjson::ondemand implementation: haswell

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                  271465 ns       299707 ns         2584           3.654k           2.34018G               0        87.846k    996.393k              1.57778          3.70565k       3.69229G          2.99337M                    4.73999                     3.00421           370.565k    3.82808k   631.515k       2.16656G/s    1.97678   87.9967k   1001.92k         1.58654   3.68372k/s  3.6908G/s     2.99337M               4.73999                2.98763        100       368.372k/s [BEST: throughput=  2.34 GB/s doc_throughput=  3705 docs/s instructions=     2993372 cycles=      996393 branch_miss=    3654 cache_miss=       0 cache_ref=     87846 items=       100 avg_time=    271464 ns]
partial_tweets<simdjson_ondemand>/manual_time             168906 ns       196910 ns         4121           1.824k           3.76597G               0        55.249k    619.228k             0.980544          5.96338k       3.69269G          1.94549M                    3.08068                      3.1418           596.338k    1.96592k   631.515k       3.48208G/s  0.0378549   55.1818k   623.471k        0.987263   5.92046k/s 3.69124G/s     1.94549M               3.08068                3.12042        100       592.046k/s [BEST: throughput=  3.77 GB/s doc_throughput=  5963 docs/s instructions=     1945493 cycles=      619228 branch_miss=    1824 cache_miss=       0 cache_ref=     55249 items=       100 avg_time=    168905 ns]
partial_tweets<yyjson>/manual_time                        634353 ns       664800 ns         1098           9.609k           1.82647G             197        73.886k    1.27692M                2.022           2.8922k       3.69312G           2.9196M                    4.62317                     2.28644            289.22k    7.40092k   631.515k       949.407M/s    1089.83    49.505k   1.49655M         2.36978   1.57641k/s 2.35918G/s     2.92009M               4.62394                1.95121        100       157.641k/s [BEST: throughput=  1.83 GB/s doc_throughput=  2892 docs/s instructions=     2919603 cycles=     1276923 branch_miss=    9609 cache_miss=     197 cache_ref=     73886 items=       100 avg_time=    634353 ns]
partial_tweets<yyjson_insitu>/manual_time                 424413 ns       453337 ns         1649           6.974k           2.05147G             636        45.371k    1.12881M              1.78747          3.24848k       3.66692G          2.91929M                    4.62268                     2.58616           324.848k    7.17713k   631.515k       1.38578G/s    154.543   31.7305k   1.21997M         1.93181   2.35619k/s 2.87449G/s     2.91955M               4.62309                2.39313        100       235.619k/s [BEST: throughput=  2.05 GB/s doc_throughput=  3248 docs/s instructions=     2919289 cycles=     1128811 branch_miss=    6974 cache_miss=     636 cache_ref=     45371 items=       100 avg_time=    424413 ns]
partial_tweets<rapidjson>/manual_time                    2181938 ns      2210833 ns          320          29.928k           318.849M             554        51.768k    7.31153M              11.5778           504.895       3.69155G          21.8948M                    34.6703                     2.99456           50.4895k    30.3351k   631.515k       276.021M/s    615.828   32.9892k   7.46088M         11.8143    458.308/s 3.41938G/s     21.8958M               34.6719                2.93475        100       45.8308k/s [BEST: throughput=  0.32 GB/s doc_throughput=   504 docs/s instructions=    21894816 cycles=     7311526 branch_miss=   29928 cache_miss=     554 cache_ref=     51768 items=       100 avg_time=   2181937 ns]
partial_tweets<rapidjson_insitu>/manual_time             1577996 ns      1606693 ns          445          24.748k           432.488M              72        42.953k    5.39046M              8.53577           684.841       3.69161G          13.3206M                    21.0931                     2.47114           68.4841k    25.3633k   631.515k       381.661M/s    287.942   33.9021k   5.47504M         8.66969    633.715/s 3.46962G/s      13.321M               21.0937                2.43304        100       63.3715k/s [BEST: throughput=  0.43 GB/s doc_throughput=   684 docs/s instructions=    13320597 cycles=     5390464 branch_miss=   24748 cache_miss=      72 cache_ref=     42953 items=       100 avg_time=   1577995 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                  87338815 ns     90734776 ns            8         922.948k           527.089M        10.9489M        15.289M    321.939M              6.99886           11.4588       3.68902G          1035.69M                    22.5155                     3.21703           11.4588M    922.184k   45.9988M       502.272M/s    11.019M   15.2776M   322.195M         7.00443    11.4497/s 3.68903G/s     1035.69M               22.5155                3.21447      1000k       11.4497M/s [BEST: throughput=  0.53 GB/s doc_throughput=    11 docs/s instructions=  1035686042 cycles=   321938766 branch_miss=  922948 cache_miss=10948893 cache_ref=  15288967 items=   1000000 avg_time=  87338815 ns]
large_random<simdjson_ondemand>/manual_time             64788364 ns     68146903 ns           11          892.99k            710.39M        5.70838M       7.91495M    238.869M              5.19295           15.4437       3.68902G          667.142M                    14.5035                     2.79291           15.4437M    892.926k   45.9988M       677.095M/s   5.72635M   7.91395M   238.996M          5.1957    15.4349/s 3.68887G/s     667.142M               14.5035                2.79144      1000k       15.4349M/s [BEST: throughput=  0.71 GB/s doc_throughput=    15 docs/s instructions=   667141947 cycles=   238869465 branch_miss=  892990 cache_miss= 5708383 cache_ref=   7914946 items=   1000000 avg_time=  64788364 ns]
large_random<simdjson_ondemand_unordered>/manual_time   66052730 ns     69420546 ns           11         889.541k           696.972M        5.68862M       7.91735M     243.48M              5.29319            15.152       3.68921G          674.142M                    14.6556                     2.76877            15.152M    890.376k   45.9988M       664.134M/s   5.74071M   7.92113M   243.665M         5.29721    15.1394/s 3.68895G/s     674.142M               14.6556                2.76667      1000k       15.1394M/s [BEST: throughput=  0.70 GB/s doc_throughput=    15 docs/s instructions=   674141946 cycles=   243480310 branch_miss=  889541 cache_miss= 5688624 cache_ref=   7917351 items=   1000000 avg_time=  66052730 ns]
large_random<yyjson>/manual_time                       115760890 ns    119176127 ns            6         695.425k           397.752M        5.80833M       9.03391M    307.628M              6.68774           8.64701       2.66006G          855.681M                    18.6023                     2.78154           8.64701M     694.85k   45.9988M       378.952M/s   5.80262M   9.02702M   307.643M         6.68808     8.6385/s 2.65758G/s     855.681M               18.6023                 2.7814      1000k        8.6385M/s [BEST: throughput=  0.40 GB/s doc_throughput=     8 docs/s instructions=   855680951 cycles=   307628066 branch_miss=  695425 cache_miss= 5808332 cache_ref=   9033911 items=   1000000 avg_time= 115760890 ns]
large_random<yyjson_insitu>/manual_time                 97903333 ns    101319532 ns            7         695.823k            470.05M        4.95702M       7.73216M    275.536M              5.99006           10.2187       2.81563G           849.56M                    18.4692                     3.08331           10.2187M    694.496k   45.9988M       448.073M/s   4.95374M   7.71883M   275.559M         5.99057    10.2142/s  2.8146G/s      849.56M               18.4692                3.08304      1000k       10.2142M/s [BEST: throughput=  0.47 GB/s doc_throughput=    10 docs/s instructions=   849560186 cycles=   275535530 branch_miss=  695823 cache_miss= 4957022 cache_ref=   7732158 items=   1000000 avg_time=  97903332 ns]
large_random<rapidjson>/manual_time                    216332422 ns    219750833 ns            3         606.254k           218.505M        7.08334M       10.7695M    718.556M              15.6212           4.75023       3.41331G          2.01014G                    43.6999                     2.79748           4.75023M    606.487k   45.9988M        202.78M/s   6.57334M   10.1101M   721.293M         15.6807    4.62252/s 3.33419G/s     2.01015G               43.7001                2.78687      1000k       4.62252M/s [BEST: throughput=  0.22 GB/s doc_throughput=     4 docs/s instructions=  2010142757 cycles=   718555849 branch_miss=  606254 cache_miss= 7083344 cache_ref=  10769488 items=   1000000 avg_time= 216332421 ns]
large_random<rapidjson_lossless>/manual_time           251277771 ns    254693851 ns            3          596.84k           187.191M        7.07825M       10.7685M    848.467M              18.4454           4.06949       3.45282G          2.47511G                    53.8082                     2.91715           4.06949M    596.391k   45.9988M       174.579M/s    6.5826M   10.1167M   850.337M         18.4861    3.97966/s 3.38405G/s     2.47512G               53.8084                2.91075      1000k       3.97966M/s [BEST: throughput=  0.19 GB/s doc_throughput=     4 docs/s instructions=  2475109889 cycles=   848467159 branch_miss=  596840 cache_miss= 7078248 cache_ref=  10768524 items=   1000000 avg_time= 251277771 ns]
large_random<rapidjson_insitu>/manual_time             237460997 ns    240883387 ns            3         592.037k           198.014M        8.18985M       12.3405M     799.12M              17.3726           4.30477       3.44003G          1.72014G                    37.3954                     2.15255           4.30477M    591.222k   45.9988M       184.737M/s   7.70715M   11.6833M   799.523M         17.3814    4.21122/s 3.36697G/s     1.72015G               37.3956                2.15147      1000k       4.21122M/s [BEST: throughput=  0.20 GB/s doc_throughput=     4 docs/s instructions=  1720142608 cycles=   799120059 branch_miss=  592037 cache_miss= 8189853 cache_ref=  12340489 items=   1000000 avg_time= 237460996 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                        92702824 ns    103045998 ns            8          1044.4k           1.48416G        15.9653M       22.3402M    341.293M              2.48565           10.8092       3.68911G          985.796M                    7.17961                     2.88842           5.66715M    1043.57k   137.305M       1.37941G/s   16.0147M   22.2708M   341.978M         2.49064    10.7872/s 3.68897G/s     985.796M               7.17961                2.88263   524.288k       5.65558M/s [BEST: throughput=  1.48 GB/s doc_throughput=    10 docs/s instructions=   985795976 cycles=   341292752 branch_miss= 1044404 cache_miss=15965322 cache_ref=  22340242 items=    524288 avg_time=  92702823 ns]
kostya<simdjson_ondemand>/manual_time                   60566465 ns     70862517 ns           12         479.988k           2.26896G         10.215M       14.0296M    223.244M               1.6259            16.525        3.6891G          649.965M                    4.73373                     2.91145           8.66386M    478.942k   137.305M       2.11132G/s   10.2211M   13.9376M   223.431M         1.62726    16.5108/s 3.68902G/s     649.965M               4.73373                2.90902   524.288k       8.65641M/s [BEST: throughput=  2.27 GB/s doc_throughput=    16 docs/s instructions=   649964507 cycles=   223243922 branch_miss=  479988 cache_miss=10215034 cache_ref=  14029589 items=    524288 avg_time=  60566464 ns]
kostya<yyjson>/manual_time                             173626753 ns    184009988 ns            4         424.193k           791.937M        11.4489M       16.5195M    443.833M              3.23246           5.76772        2.5599G          974.184M                    7.09504                     2.19494           3.02395M    424.811k   137.305M       754.171M/s   11.4481M   16.5387M   443.857M         3.23263    5.75948/s 2.55639G/s     974.185M               7.09504                2.19482   524.288k       3.01963M/s [BEST: throughput=  0.79 GB/s doc_throughput=     5 docs/s instructions=   974184483 cycles=   443832562 branch_miss=  424193 cache_miss=11448902 cache_ref=  16519536 items=    524288 avg_time= 173626752 ns]
kostya<yyjson_insitu>/manual_time                      120513968 ns    130875458 ns            6         418.954k           1.14006G        8.81937M       12.5461M    349.842M              2.54792           8.30313       2.90479G          955.915M                    6.96198                     2.73242           4.35323M    423.267k   137.305M       1086.55M/s   8.82156M   12.5615M    350.05M         2.54943    8.29779/s 2.90464G/s     955.915M               6.96198                 2.7308   524.288k       4.35043M/s [BEST: throughput=  1.14 GB/s doc_throughput=     8 docs/s instructions=   955914813 cycles=   349842365 branch_miss=  418954 cache_miss= 8819369 cache_ref=  12546135 items=    524288 avg_time= 120513967 ns]
kostya<rapidjson>/manual_time                          271287680 ns    281804036 ns            3         963.102k           512.314M        8.39698M        12.269M    907.181M              6.60705           3.73121       3.38488G          2.73767G                    19.9386                     3.01778           1.95623M    962.596k   137.305M       482.677M/s   8.14048M   11.8689M   909.657M         6.62508    3.68612/s 3.35311G/s     2.73767G               19.9386                3.00957   524.288k       1.93259M/s [BEST: throughput=  0.51 GB/s doc_throughput=     3 docs/s instructions=  2737671982 cycles=   907181012 branch_miss=  963102 cache_miss= 8396982 cache_ref=  12268979 items=    524288 avg_time= 271287680 ns]
kostya<rapidjson_lossless>/manual_time                 293085824 ns    303487118 ns            2          962.32k           472.334M        8.41482M       12.1588M    990.929M              7.21699           3.44004       3.40883G          3.00662G                    21.8974                     3.03415           1.80357M    962.207k   137.305M       446.778M/s   8.19286M   11.8929M   992.606M          7.2292    3.41197/s 3.38674G/s     3.00662G               21.8974                3.02902   524.288k       1.78885M/s [BEST: throughput=  0.47 GB/s doc_throughput=     3 docs/s instructions=  3006622601 cycles=   990928934 branch_miss=  962320 cache_miss= 8414822 cache_ref=  12158760 items=    524288 avg_time= 293085824 ns]
kostya<rapidjson_insitu>/manual_time                   273487693 ns    283847973 ns            3         992.719k           507.779M        12.1289M       16.2249M    916.248M              6.67308           3.69818       3.38845G          2.21152G                    16.1067                     2.41367           1.93891M    993.805k   137.305M       478.794M/s   11.8416M   15.8288M   918.219M         6.68744    3.65647/s 3.35744G/s     2.21153G               16.1067                 2.4085   524.288k       1.91704M/s [BEST: throughput=  0.51 GB/s doc_throughput=     3 docs/s instructions=  2211523813 cycles=   916247793 branch_miss=  992719 cache_miss=12128902 cache_ref=  16224898 items=    524288 avg_time= 273487692 ns]
distinct_user_id<simdjson_dom>/manual_time                269966 ns       299977 ns         2597           3.754k           2.35433G               0        89.088k    990.489k              1.56843          3.72807k       3.69262G          2.92855M                    4.63734                     2.95667           428.729k    3.93268k   631.515k       2.17859G/s   0.309203   88.9151k    996.33k         1.57768   3.70417k/s 3.69058G/s     2.92855M               4.63734                2.93934        115        425.98k/s [BEST: throughput=  2.35 GB/s doc_throughput=  3728 docs/s instructions=     2928548 cycles=      990489 branch_miss=    3754 cache_miss=       0 cache_ref=     89088 items=       115 avg_time=    269965 ns]
distinct_user_id<simdjson_ondemand>/manual_time           156377 ns       185601 ns         4470           1.825k           4.07495G               0        53.218k    572.368k             0.906341          6.45265k       3.69329G          1.89587M                    3.00209                     3.31232           742.055k    1.96883k   631.515k       3.76106G/s   0.153915   53.1733k   577.277k        0.914114   6.39479k/s 3.69156G/s     1.89587M               3.00209                3.28416        115         735.4k/s [BEST: throughput=  4.07 GB/s doc_throughput=  6452 docs/s instructions=     1895867 cycles=      572368 branch_miss=    1825 cache_miss=       0 cache_ref=     53218 items=       115 avg_time=    156377 ns]
distinct_user_id<yyjson>/manual_time                      620569 ns       653948 ns         1338           9.731k             1.841G             424        73.028k    1.26691M              2.00614          2.91521k        3.6933G          2.87779M                    4.55696                      2.2715           335.249k    7.54784k   631.515k       970.497M/s    1.1064k    48.393k   1.48429M         2.35037   1.61143k/s 2.39182G/s     2.87839M               4.55792                1.93924        115       185.314k/s [BEST: throughput=  1.84 GB/s doc_throughput=  2915 docs/s instructions=     2877786 cycles=     1266908 branch_miss=    9731 cache_miss=     424 cache_ref=     73028 items=       115 avg_time=    620568 ns]
distinct_user_id<yyjson_insitu>/manual_time               417266 ns       449425 ns         1679            6.97k           2.09159G             506        44.215k    1.10969M              1.75719          3.31203k       3.67534G          2.87759M                    4.55665                     2.59314           380.883k    7.30817k   631.515k       1.40952G/s    60.5015   30.5802k    1.2061M         1.90985   2.39655k/s 2.89048G/s     2.87785M               4.55707                2.38608        115       275.604k/s [BEST: throughput=  2.09 GB/s doc_throughput=  3312 docs/s instructions=     2877592 cycles=     1109694 branch_miss=    6970 cache_miss=     506 cache_ref=     44215 items=       115 avg_time=    417265 ns]
distinct_user_id<rapidjson>/manual_time                  2161348 ns      2191671 ns          325          29.942k            318.85M             209        52.463k    7.31166M               11.578           504.898       3.69164G          21.8234M                    34.5572                     2.98473           58.0632k    30.2956k   631.515k        278.65M/s    2.5074k   35.4967k   7.44919M         11.7957    462.674/s 3.44655G/s     21.8241M               34.5584                2.92974        115       53.2075k/s [BEST: throughput=  0.32 GB/s doc_throughput=   504 docs/s instructions=    21823371 cycles=     7311662 branch_miss=   29942 cache_miss=     209 cache_ref=     52463 items=       115 avg_time=   2161347 ns]
distinct_user_id<rapidjson_insitu>/manual_time           1562213 ns      1592018 ns          455          25.258k           432.738M              32        42.904k    5.38728M              8.53073           685.238       3.69157G          13.2529M                    20.9859                     2.46004           78.8024k    27.5755k   631.515k       385.517M/s   2.95488k   36.2373k   5.50057M         8.71012    640.117/s 3.52101G/s     13.2534M               20.9867                2.40946        115       73.6135k/s [BEST: throughput=  0.43 GB/s doc_throughput=   685 docs/s instructions=    13252921 cycles=     5387284 branch_miss=   25258 cache_miss=      32 cache_ref=     42904 items=       115 avg_time=   1562213 ns]
find_tweet<simdjson_dom>/manual_time                      258363 ns       287044 ns         2711           3.474k           2.46009G               0        78.623k    947.861k              1.50093          3.89554k       3.69243G          2.84337M                    4.50246                     2.99978           3.89554k    3.64903k   631.515k       2.27643G/s    3.60937   78.7248k   953.474k         1.50982   3.87053k/s 3.69045G/s     2.84337M               4.50246                2.98212          1       3.87053k/s [BEST: throughput=  2.46 GB/s doc_throughput=  3895 docs/s instructions=     2843374 cycles=      947861 branch_miss=    3474 cache_miss=       0 cache_ref=     78623 items=         1 avg_time=    258362 ns]
find_tweet<simdjson_ondemand>/manual_time                 116038 ns       144102 ns         6021              937            5.4635G               0         30.94k     426.89k             0.675978          8.65142k        3.6932G          1.38748M                    2.19706                      3.2502           8.65142k     970.493   631.515k       5.06857G/s    0.17522   30.9149k   428.399k        0.678367    8.6179k/s  3.6919G/s     1.38748M               2.19706                3.23876          1        8.6179k/s [BEST: throughput=  5.46 GB/s doc_throughput=  8651 docs/s instructions=     1387479 cycles=      426890 branch_miss=     937 cache_miss=       0 cache_ref=     30940 items=         1 avg_time=    116037 ns]
find_tweet<yyjson>/manual_time                            609563 ns       640160 ns         1296           9.271k           1.89301G             124         65.33k    1.23189M               1.9507          2.99757k       3.69269G          2.81715M                    4.46093                     2.28684           2.99757k    7.22224k   631.515k       988.018M/s    1094.62   39.7011k   1.44605M         2.28982   1.64052k/s 2.37228G/s     2.81763M                4.4617                 1.9485          1       1.64052k/s [BEST: throughput=  1.89 GB/s doc_throughput=  2997 docs/s instructions=     2817147 cycles=     1231895 branch_miss=    9271 cache_miss=     124 cache_ref=     65330 items=         1 avg_time=    609563 ns]
find_tweet<yyjson_insitu>/manual_time                     407367 ns       437350 ns         1719            6.69k           2.16205G             420        35.916k    1075.27k              1.70269          3.42359k       3.68129G          2.81704M                    4.46076                     2.61984           3.42359k    7.08701k   631.515k       1.44377G/s    19.3618    21.856k   1.17062M         1.85367   2.45479k/s 2.87362G/s      2.8173M               4.46118                2.40668          1       2.45479k/s [BEST: throughput=  2.16 GB/s doc_throughput=  3423 docs/s instructions=     2817039 cycles=     1075272 branch_miss=    6690 cache_miss=     420 cache_ref=     35916 items=         1 avg_time=    407367 ns]
find_tweet<rapidjson>/manual_time                        2147147 ns      2175958 ns          326          29.621k           320.916M             250        45.664k    7.25488M               11.488           508.168       3.68669G          21.7391M                    34.4237                     2.99648            508.168    30.2232k   631.515k       280.493M/s   2.09108k   27.9201k    7.3975M         11.7139    465.734/s 3.44527G/s     21.7399M               34.4251                2.93882          1        465.734/s [BEST: throughput=  0.32 GB/s doc_throughput=   508 docs/s instructions=    21739057 cycles=     7254875 branch_miss=   29621 cache_miss=     250 cache_ref=     45664 items=         1 avg_time=   2147147 ns]
find_tweet<rapidjson_insitu>/manual_time                 1567471 ns      1596973 ns          450          24.688k           436.974M              21         34.22k    5.33507M              8.44805           691.946       3.69158G          13.1744M                    20.8615                     2.46939            691.946     29.693k   631.515k       384.224M/s   2.80397k    27.143k   5.52045M          8.7416    637.971/s 3.52188G/s     13.1749M               20.8623                2.38656          1        637.971/s [BEST: throughput=  0.44 GB/s doc_throughput=   691 docs/s instructions=    13174369 cycles=     5335072 branch_miss=   24688 cache_miss=      21 cache_ref=     34220 items=         1 avg_time=   1567470 ns]
