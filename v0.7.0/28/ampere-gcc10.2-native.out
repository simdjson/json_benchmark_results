run_benchmark: v0.8.0~10 /home/jkeiser/simdjson_benchmark_results/v0.7.0/28/skylake-gcc10.2-native.json -DCMAKE_CXX_FLAGS=-march=native
git reset --hard v0.8.0~10
HEAD is now at 84b0e844 fix function was exited without releasing (#1389)
cmake -DCMAKE_CXX_FLAGS=-march=native ..
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- git Version: v0.2.1-84b0e844
-- Version: 0.2.1
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
make[1]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[2]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 72%] Built target benchmark
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 72%] Built target generated-data
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
Scanning dependencies of target simdjson
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 72%] Building CXX object src/CMakeFiles/simdjson.dir/simdjson.cpp.o
[ 81%] Linking CXX shared library ../libsimdjson.so
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 81%] Built target simdjson
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 90%] Built target yyjson
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
Scanning dependencies of target bench_ondemand
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 90%] Building CXX object benchmark/CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o
[100%] Linking CXX executable bench_ondemand
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[100%] Built target bench_ondemand
make[2]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[1]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/28/skylake-gcc10.2-native.json --benchmark_out_format=json
2021-01-23 05:26:10
Running benchmark/bench_ondemand
Run on (32 X 3300 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x32)
  L1 Instruction 32 KiB (x32)
  L2 Unified 256 KiB (x16)
Load Average: 1.11, 1.07, 1.01
simdjson::dom implementation:      arm64
simdjson::ondemand implementation: arm64

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                 1580137 ns      1649264 ns          443          17.075k           401.295M         25.925k       905.509k    5.03782M              7.97735           635.448       3.20127G          3.92138M                    6.20949                    0.778389           63.5448k    17.2712k   631.515k       381.144M/s   25.9201k   905.929k   5.05215M         8.00005    632.857/s 3.19729G/s     3.92138M               6.20949               0.776181        100       63.2857k/s [BEST: throughput=  0.40 GB/s doc_throughput=   635 docs/s instructions=     3921383 cycles=     5037816 branch_miss=   17075 cache_miss=   25925 cache_ref=    905509 items=       100 avg_time=   1580136 ns]
partial_tweets<simdjson_ondemand>/manual_time            1066930 ns      1136102 ns          656           6.665k           593.399M         22.771k       403.267k    3.40753M              5.39581           939.644       3.20187G          2.76039M                    4.37106                    0.810084           93.9644k    6.83377k   631.515k       564.479M/s   22.7751k   403.593k   3.41228M         5.40333    937.269/s 3.19823G/s     2.76039M               4.37105               0.808956        100       93.7269k/s [BEST: throughput=  0.59 GB/s doc_throughput=   939 docs/s instructions=     2760389 cycles=     3407533 branch_miss=    6665 cache_miss=   22771 cache_ref=    403267 items=       100 avg_time=   1066930 ns]
partial_tweets<yyjson>/manual_time                       1236987 ns      1309200 ns          567          46.702k           577.635M          24.42k       1.48617M    3.50045M              5.54295           914.682        3.2018G          3.54867M                    5.61929                     1.01377           91.4682k    46.8953k   631.515k       486.876M/s   24.3839k   1.48725M   3.73238M         5.91019    808.416/s 3.01731G/s     3.54889M               5.61964               0.950839        100       80.8416k/s [BEST: throughput=  0.58 GB/s doc_throughput=   914 docs/s instructions=     3548665 cycles=     3500453 branch_miss=   46702 cache_miss=   24420 cache_ref=   1486170 items=       100 avg_time=   1236986 ns]
partial_tweets<yyjson_insitu>/manual_time                1157729 ns      1231032 ns          607          46.772k           600.827M         14.512k       1.32816M    3.36571M              5.32958           951.406       3.20216G          3.44997M                    5.46301                     1.02504           95.1406k    46.8577k   631.515k       520.208M/s   14.4999k   1.32823M    3.5906M         5.68569     863.76/s 3.10142G/s     3.45012M               5.46325               0.960877        100        86.376k/s [BEST: throughput=  0.60 GB/s doc_throughput=   951 docs/s instructions=     3449975 cycles=     3365709 branch_miss=   46772 cache_miss=   14512 cache_ref=   1328160 items=       100 avg_time=   1157728 ns]
partial_tweets<rapidjson>/manual_time                    2849690 ns      2923154 ns          246           80.58k           226.661M         13.061k       6.28943M    8.85894M              14.0281           358.916       3.17961G           13.404M                    21.2252                     1.51305           35.8916k    80.4705k   631.515k       211.342M/s   13.2233k   6.28922M   8.90061M         14.0941    350.915/s 3.12336G/s     13.4046M               21.2262                1.50604        100       35.0915k/s [BEST: throughput=  0.23 GB/s doc_throughput=   358 docs/s instructions=    13404035 cycles=     8858937 branch_miss=   80580 cache_miss=   13061 cache_ref=   6289428 items=       100 avg_time=   2849689 ns]
partial_tweets<rapidjson_insitu>/manual_time             2140736 ns      2214960 ns          326          61.622k           303.464M         13.688k       3.48933M    6.66131M              10.5481           480.534       3.20098G          9.78114M                    15.4884                     1.46835           48.0534k    61.5911k   631.515k       281.333M/s   13.8428k   3.48958M    6.6919M         10.5966    467.129/s 3.12598G/s     9.78174M               15.4893                1.46173        100       46.7129k/s [BEST: throughput=  0.30 GB/s doc_throughput=   480 docs/s instructions=     9781138 cycles=     6661313 branch_miss=   61622 cache_miss=   13688 cache_ref=   3489331 items=       100 avg_time=   2140735 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                 311160129 ns    314780724 ns            2         1.92276M           147.873M        3.98131M       246.815M    994.288M              21.6155           3.21473       3.19636G          1.10647G                    24.0544                     1.11283           3.21473M    1.92264M   45.9988M       140.982M/s   3.98131M   246.812M   994.574M         21.6217    3.21378/s 3.19634G/s     1.10647G               24.0544                1.11251      1000k       3.21378M/s [BEST: throughput=  0.15 GB/s doc_throughput=     3 docs/s instructions=  1106472994 cycles=   994287681 branch_miss= 1922760 cache_miss= 3981308 cache_ref= 246815027 items=   1000000 avg_time= 311160129 ns]
large_random<simdjson_ondemand>/manual_time            183529963 ns    187129290 ns            4         1.21562M           250.682M        2.31765M       134.485M    586.618M              12.7529           5.44974       3.19692G          689.959M                    14.9995                     1.17616           5.44974M    1.21572M   45.9988M       239.023M/s    2.3176M   134.485M   586.661M         12.7538     5.4487/s 3.19654G/s     689.959M               14.9995                1.17608      1000k        5.4487M/s [BEST: throughput=  0.25 GB/s doc_throughput=     5 docs/s instructions=   689958642 cycles=   586618296 branch_miss= 1215620 cache_miss= 2317649 cache_ref= 134484948 items=   1000000 avg_time= 183529963 ns]
large_random<simdjson_ondemand_unordered>/manual_time  184925507 ns    188538379 ns            4         1.20142M           248.764M        2.31759M       138.405M    591.159M              12.8516           5.40805       3.19702G          693.959M                    15.0865                     1.17389           5.40805M    1.20193M   45.9988M       237.219M/s   2.31759M   138.405M   591.161M         12.8517    5.40758/s 3.19675G/s     693.959M               15.0865                1.17389      1000k       5.40758M/s [BEST: throughput=  0.25 GB/s doc_throughput=     5 docs/s instructions=   693958644 cycles=   591159314 branch_miss= 1201420 cache_miss= 2317591 cache_ref= 138405322 items=   1000000 avg_time= 184925507 ns]
large_random<yyjson>/manual_time                       204230916 ns    207846623 ns            3         1.58012M           225.285M        4.91337M       234.947M    627.704M              13.6461           4.89763       3.07426G          908.192M                    19.7438                     1.44685           4.89763M    1.57646M   45.9988M       214.795M/s    4.9134M   234.942M   627.786M         13.6479    4.89642/s  3.0739G/s     908.191M               19.7438                1.44666      1000k       4.89642M/s [BEST: throughput=  0.23 GB/s doc_throughput=     4 docs/s instructions=   908191589 cycles=   627704283 branch_miss= 1580119 cache_miss= 4913367 cache_ref= 234947219 items=   1000000 avg_time= 204230915 ns]
large_random<yyjson_insitu>/manual_time                198215582 ns    201826551 ns            4         1.57621M           232.127M        4.19634M       223.416M    615.269M              13.3758           5.04637       3.10487G          901.004M                    19.5876                     1.46441           5.04637M    1.57615M   45.9988M       221.314M/s   4.19642M   223.432M    615.54M         13.3817    5.04501/s 3.10541G/s     901.004M               19.5876                1.46376      1000k       5.04501M/s [BEST: throughput=  0.23 GB/s doc_throughput=     5 docs/s instructions=   901003918 cycles=   615269309 branch_miss= 1576209 cache_miss= 4196338 cache_ref= 223416147 items=   1000000 avg_time= 198215581 ns]
large_random<rapidjson>/manual_time                    352559305 ns    356171436 ns            2         1.96201M           130.799M        4.95581M       764.819M    1097.26M              23.8542           2.84353        3.1201G          1.67651G                    36.4467                      1.5279           2.84353M    1.95914M   45.9988M       124.427M/s   4.95607M   764.863M    1097.6M         23.8615     2.8364/s 3.11323G/s     1.67651G               36.4469                1.52743      1000k        2.8364M/s [BEST: throughput=  0.13 GB/s doc_throughput=     2 docs/s instructions=  1676505539 cycles=  1097262314 branch_miss= 1962011 cache_miss= 4955814 cache_ref= 764818706 items=   1000000 avg_time= 352559305 ns]
large_random<rapidjson_lossless>/manual_time           391247990 ns    394862091 ns            2         1.99918M           117.832M        4.95666M       954.903M    1.22057G              26.5347           2.56164       3.12665G          1.97648G                    42.9681                     1.61932           2.56164M    2.00974M   45.9988M       112.123M/s   4.95688M   954.929M   1.22105G         26.5452    2.55592/s 3.12091G/s     1.97649G               42.9682                1.61868      1000k       2.55592M/s [BEST: throughput=  0.12 GB/s doc_throughput=     2 docs/s instructions=  1976481706 cycles=  1220565643 branch_miss= 1999180 cache_miss= 4956659 cache_ref= 954902560 items=   1000000 avg_time= 391247990 ns]
large_random<rapidjson_insitu>/manual_time             340423324 ns    344035324 ns            2         2.15004M           135.463M        5.67298M       749.514M    1058.27M              23.0064           2.94492       3.11651G           1.5665G                    34.0553                     1.48025           2.94492M    2.15163M   45.9988M       128.863M/s   5.67365M   749.508M   1058.58M         23.0131    2.93752/s 3.10959G/s     1.56651G               34.0554                1.47982      1000k       2.93752M/s [BEST: throughput=  0.14 GB/s doc_throughput=     2 docs/s instructions=  1566500973 cycles=  1058265551 branch_miss= 2150036 cache_miss= 5672983 cache_ref= 749513899 items=   1000000 avg_time= 340423323 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                       379885611 ns    390579868 ns            2         1.10458M           361.449M        6.94674M       246.888M    1.21427G              8.84363           2.63246       3.19653G          1.14604G                    8.34671                     0.94381           1.38017M    1.10424M   137.305M       344.694M/s   6.94665M   246.887M   1.21422G         8.84323    2.63237/s 3.19628G/s     1.14604G               8.34671               0.943853   524.288k       1.38012M/s [BEST: throughput=  0.36 GB/s doc_throughput=     2 docs/s instructions=  1146044350 cycles=  1214274840 branch_miss= 1104584 cache_miss= 6946737 cache_ref= 246887772 items=    524288 avg_time= 379885610 ns]
kostya<simdjson_ondemand>/manual_time                  261527800 ns    272201253 ns            3         1.40079M           527.159M        5.28187M       138.882M    832.429M              6.06263           3.83933       3.19597G          797.121M                    5.80547                    0.957584           2.01291M    1.52439M   137.305M        500.69M/s    5.2819M   139.263M   835.937M         6.08817    3.82369/s 3.19636G/s     797.121M               5.80547               0.953566   524.288k       2.00471M/s [BEST: throughput=  0.53 GB/s doc_throughput=     3 docs/s instructions=   797120561 cycles=   832429100 branch_miss= 1400786 cache_miss= 5281869 cache_ref= 138882401 items=    524288 avg_time= 261527800 ns]
kostya<yyjson>/manual_time                             294013228 ns    304704135 ns            2         973.854k           467.312M        7.99191M       344.727M    896.104M              6.52637           3.40346       3.04986G          1052.15M                    7.66288                     1.17414           1.78439M    977.166k   137.305M       445.369M/s   7.99145M   344.738M   896.584M         6.52987    3.40121/s 3.04947G/s     1052.15M               7.66288                1.17351   524.288k       1.78321M/s [BEST: throughput=  0.47 GB/s doc_throughput=     3 docs/s instructions=  1052152090 cycles=   896103850 branch_miss=  973854 cache_miss= 7991909 cache_ref= 344727193 items=    524288 avg_time= 294013227 ns]
kostya<yyjson_insitu>/manual_time                      276504137 ns    287214298 ns            3          999.71k           496.982M        5.84749M       310.468M    860.622M              6.26796           3.61955       3.11506G           1030.7M                    7.50663                     1.19762           1.89769M     979.34k   137.305M       473.571M/s   5.85099M   310.406M   861.316M         6.27301    3.61658/s 3.11502G/s      1030.7M               7.50663                1.19665   524.288k       1.89613M/s [BEST: throughput=  0.50 GB/s doc_throughput=     3 docs/s instructions=  1030697857 cycles=   860622200 branch_miss=  999710 cache_miss= 5847487 cache_ref= 310467900 items=    524288 avg_time= 276504137 ns]
kostya<rapidjson>/manual_time                          588477139 ns    599217226 ns            1         9.18499M           233.323M        5.38746M       977.536M    1.84574G              13.4427            1.6993       3.13647G          2.38981G                    17.4051                     1.29477           890.923k    9.18499M   137.305M       222.514M/s   5.38746M   977.536M   1.84574G         13.4427     1.6993/s 3.13647G/s     2.38981G               17.4051                1.29477   524.288k       890.923k/s [BEST: throughput=  0.23 GB/s doc_throughput=     1 docs/s instructions=  2389812721 cycles=  1845743078 branch_miss= 9184992 cache_miss= 5387460 cache_ref= 977535665 items=    524288 avg_time= 588477139 ns]
kostya<rapidjson_lossless>/manual_time                 613971755 ns    624678070 ns            1         9.07012M           223.634M        5.39064M        1096.1M    1.92717G              14.0357           1.62874       3.13886G          2.56492G                    18.6804                     1.33092           853.929k    9.07012M   137.305M       213.274M/s   5.39064M    1096.1M   1.92717G         14.0357    1.62874/s 3.13886G/s     2.56492G               18.6804                1.33092   524.288k       853.929k/s [BEST: throughput=  0.22 GB/s doc_throughput=     1 docs/s instructions=  2564918617 cycles=  1927173758 branch_miss= 9070124 cache_miss= 5390635 cache_ref=1096103157 items=    524288 avg_time= 613971755 ns]
kostya<rapidjson_insitu>/manual_time                   544036454 ns    554771024 ns            1         7.40204M           252.382M        6.36427M       880.583M    1.70412G              12.4112           1.83811       3.13236G          2.17945G                    15.8731                     1.27893             963.7k    7.40204M   137.305M        240.69M/s   6.36427M   880.583M   1.70412G         12.4112    1.83811/s 3.13236G/s     2.17945G               15.8731                1.27893   524.288k         963.7k/s [BEST: throughput=  0.25 GB/s doc_throughput=     1 docs/s instructions=  2179452296 cycles=  1704116944 branch_miss= 7402042 cache_miss= 6364267 cache_ref= 880582773 items=    524288 avg_time= 544036454 ns]
distinct_user_id<simdjson_dom>/manual_time               1567292 ns      1651025 ns          447          16.806k           404.045M         26.447k       890.212k    5.00352M              7.92305           639.803       3.20127G          3.85168M                     6.0991                    0.769793           73.5773k    16.9834k   631.515k       384.268M/s   26.4445k   890.485k   5.01118M         7.93517    638.043/s 3.19735G/s     3.85168M               6.09911               0.768617        115        73.375k/s [BEST: throughput=  0.40 GB/s doc_throughput=   639 docs/s instructions=     3851676 cycles=     5003522 branch_miss=   16806 cache_miss=   26447 cache_ref=    890212 items=       115 avg_time=   1567291 ns]
distinct_user_id<simdjson_ondemand>/manual_time          1049121 ns      1129763 ns          665           6.335k           603.493M         22.391k       378.488k    3.35035M              5.30525           955.627       3.20168G          2.69513M                    4.26772                    0.804432           109.897k    6.48385k   631.515k       574.061M/s   22.3925k   378.772k   3.35499M          5.3126    953.179/s  3.1979G/s     2.69513M               4.26772               0.803321        115       109.616k/s [BEST: throughput=  0.60 GB/s doc_throughput=   955 docs/s instructions=     2695128 cycles=     3350347 branch_miss=    6335 cache_miss=   22391 cache_ref=    378488 items=       115 avg_time=   1049121 ns]
distinct_user_id<yyjson>/manual_time                     1218075 ns      1303374 ns          579          46.597k           587.232M         24.111k       1.47162M    3.44353M              5.45281           929.878       3.20206G           3.5132M                    5.56313                     1.02023           106.936k    46.8386k   631.515k       494.435M/s   24.1864k   1.47299M   3.67261M         5.81555    820.967/s 3.01509G/s     3.51334M               5.56335               0.956634        115       94.4112k/s [BEST: throughput=  0.59 GB/s doc_throughput=   929 docs/s instructions=     3513197 cycles=     3443530 branch_miss=   46597 cache_miss=   24111 cache_ref=   1471615 items=       115 avg_time=   1218075 ns]
distinct_user_id<yyjson_insitu>/manual_time              1133689 ns      1219324 ns          619          46.476k           612.362M         14.248k       1.31297M    3.30194M               5.2286           969.672        3.2018G          3.41413M                    5.40626                     1.03398           111.512k    46.6165k   631.515k       531.239M/s    14.268k   1.31362M   3.51499M         5.56597    882.076/s 3.10049G/s     3.41428M               5.40649               0.971348        115       101.439k/s [BEST: throughput=  0.61 GB/s doc_throughput=   969 docs/s instructions=     3414134 cycles=     3301938 branch_miss=   46476 cache_miss=   14248 cache_ref=   1312973 items=       115 avg_time=   1133689 ns]
distinct_user_id<rapidjson>/manual_time                  2840634 ns      2927166 ns          247          80.327k           228.061M         13.512k       6.28262M    8.86267M               14.034           361.134       3.20061G          13.3654M                     21.164                     1.50805           41.5304k    80.3398k   631.515k       212.016M/s   13.7354k   6.28297M    8.9053M         14.1015    352.034/s 3.13497G/s     13.3662M               21.1653                1.50092        115       40.4839k/s [BEST: throughput=  0.23 GB/s doc_throughput=   361 docs/s instructions=    13365388 cycles=     8862668 branch_miss=   80327 cache_miss=   13512 cache_ref=   6282616 items=       115 avg_time=   2840634 ns]
distinct_user_id<rapidjson_insitu>/manual_time           2126059 ns      2212994 ns          331          61.406k            305.49M         13.973k       3.47462M    6.61675M              10.4776           483.741        3.2008G          9.74165M                    15.4258                     1.47227           55.6303k    61.5522k   631.515k       283.275M/s   14.1248k   3.47574M   6.64898M         10.5286    470.354/s 3.12737G/s     9.74216M               15.4267                1.46521        115       54.0907k/s [BEST: throughput=  0.31 GB/s doc_throughput=   483 docs/s instructions=     9741651 cycles=     6616754 branch_miss=   61406 cache_miss=   13973 cache_ref=   3474624 items=       115 avg_time=   2126059 ns]
find_tweet<simdjson_dom>/manual_time                     1519333 ns      1601311 ns          461           16.64k            416.62M         23.444k       874.114k    4.85236M              7.68368           659.715       3.20118G          3.76236M                    5.95767                    0.775366            659.715    16.8134k   631.515k       396.397M/s   23.4562k    874.59k   4.85795M         7.69254    658.184/s 3.19742G/s     3.76236M               5.95767               0.774474          1        658.184/s [BEST: throughput=  0.42 GB/s doc_throughput=   659 docs/s instructions=     3762356 cycles=     4852361 branch_miss=   16640 cache_miss=   23444 cache_ref=    874114 items=         1 avg_time=   1519333 ns]
find_tweet<simdjson_ondemand>/manual_time                 915934 ns       998013 ns          764           4.109k            690.96M         11.561k         194.4k    2.92677M              4.63453           1094.13       3.20227G          2.05906M                    3.26051                    0.703526            1094.13     4.2486k   631.515k       657.536M/s   11.5632k   194.453k   2.92967M         4.63912    1091.78/s 3.19857G/s     2.05906M               3.26051               0.702829          1        1091.78/s [BEST: throughput=  0.69 GB/s doc_throughput=  1094 docs/s instructions=     2059061 cycles=     2926773 branch_miss=    4109 cache_miss=   11561 cache_ref=    194400 items=         1 avg_time=    915933 ns]
find_tweet<yyjson>/manual_time                           1180601 ns      1266365 ns          594          46.051k           605.887M         21.679k       1.45416M      3.337M              5.28412           959.418       3.20158G          3.45929M                    5.47777                     1.03665            959.418    46.4453k   631.515k        510.13M/s   21.7074k   1.45635M   3.55452M         5.62855    847.026/s 3.01077G/s      3.4599M               5.47873               0.973382          1        847.026/s [BEST: throughput=  0.61 GB/s doc_throughput=   959 docs/s instructions=     3459291 cycles=     3337002 branch_miss=   46051 cache_miss=   21679 cache_ref=   1454156 items=         1 avg_time=   1180601 ns]
find_tweet<yyjson_insitu>/manual_time                    1102472 ns      1189907 ns          637          46.061k           631.635M         11.778k       1.29689M    3.20127M              5.06919           1000.19       3.20188G          3.36038M                    5.32114                      1.0497            1000.19    46.3377k   631.515k       546.281M/s   11.7944k    1.2973M   3.41499M         5.40762    907.052/s 3.09758G/s     3.36075M               5.32172               0.984115          1        907.052/s [BEST: throughput=  0.63 GB/s doc_throughput=  1000 docs/s instructions=     3360380 cycles=     3201272 branch_miss=   46061 cache_miss=   11778 cache_ref=   1296885 items=         1 avg_time=   1102472 ns]
find_tweet<rapidjson>/manual_time                        2884207 ns      2970230 ns          249          81.374k           224.381M         10.893k       6.30767M    9.00819M              14.2644           355.306       3.20066G          13.3222M                    21.0957                      1.4789            355.306    81.6569k   631.515k       208.813M/s   11.0675k   6.30991M   9.04495M         14.3226    346.716/s 3.13603G/s     13.3228M               21.0965                1.47295          1        346.716/s [BEST: throughput=  0.22 GB/s doc_throughput=   355 docs/s instructions=    13322244 cycles=     9008194 branch_miss=   81374 cache_miss=   10893 cache_ref=   6307673 items=         1 avg_time=   2884206 ns]
find_tweet<rapidjson_insitu>/manual_time                 2369023 ns      2326015 ns          336          61.363k            309.23M         10.651k       3.46177M    6.53678M              10.3509           489.663       3.20082G          9.69754M                     15.356                     1.48354            489.663    61.4736k   631.515k       254.223M/s   10.8021k   3.46319M   6.56424M         10.3944    422.115/s 2.77086G/s     9.69814M               15.3569                1.47742          1        422.115/s [BEST: throughput=  0.31 GB/s doc_throughput=   489 docs/s instructions=     9697543 cycles=     6536779 branch_miss=   61363 cache_miss=   10651 cache_ref=   3461773 items=         1 avg_time=   2369022 ns]
