run_benchmark: v0.8.0~10 /home/jkeiser/simdjson_benchmark_results/v0.7.0/28/skylake-clang11.json 
git reset --hard v0.8.0~10
HEAD is now at 84b0e844 fix function was exited without releasing (#1389)
cmake ..
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- git Version: v0.2.1-84b0e844
-- Version: 0.2.1
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES -- failed to compile
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
make[1]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[2]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 72%] Built target benchmark
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 72%] Built target generated-data
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
Scanning dependencies of target simdjson
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 72%] Building CXX object src/CMakeFiles/simdjson.dir/simdjson.cpp.o
[ 81%] Linking CXX shared library ../libsimdjson.so
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 81%] Built target simdjson
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 90%] Built target yyjson
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
Scanning dependencies of target bench_ondemand
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 90%] Building CXX object benchmark/CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o
[100%] Linking CXX executable bench_ondemand
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[100%] Built target bench_ondemand
make[2]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[1]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/28/skylake-clang11.json --benchmark_out_format=json
2021-01-23 04:55:11
Running benchmark/bench_ondemand
Run on (32 X 3300 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x32)
  L1 Instruction 32 KiB (x32)
  L2 Unified 256 KiB (x16)
Load Average: 1.03, 1.02, 0.97
simdjson::dom implementation:      arm64
simdjson::ondemand implementation: arm64

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                 1550193 ns      1619760 ns          451          13.933k           408.453M         25.986k       961.832k    4.94944M              7.83741           646.782       3.20121G          3.94988M                    6.25461                    0.798045           64.6782k     14.211k   631.515k       388.506M/s   25.9916k   962.243k   4.95726M         7.84979    645.081/s 3.19784G/s     3.94988M               6.25461               0.796787        100       64.5081k/s [BEST: throughput=  0.41 GB/s doc_throughput=   646 docs/s instructions=     3949882 cycles=     4949445 branch_miss=   13933 cache_miss=   25986 cache_ref=    961832 items=       100 avg_time=   1550192 ns]
partial_tweets<simdjson_ondemand>/manual_time            1047702 ns      1117220 ns          668           8.263k           604.778M         22.873k       443.756k    3.34355M              5.29449           957.662       3.20199G          2.72477M                    4.31466                    0.814933           95.7662k    8.48016k   631.515k       574.839M/s   22.8723k   444.471k   3.35123M         5.30665     954.47/s 3.19865G/s     2.72477M               4.31465               0.813065        100        95.447k/s [BEST: throughput=  0.60 GB/s doc_throughput=   957 docs/s instructions=     2724770 cycles=     3343550 branch_miss=    8263 cache_miss=   22873 cache_ref=    443756 items=       100 avg_time=   1047701 ns]
partial_tweets<yyjson>/manual_time                       1202524 ns      1269323 ns          587          46.573k           595.888M         24.271k       1.40764M     3.3928M              5.37247           943.585       3.20139G          3.27036M                     5.1786                    0.963913           94.3585k     46.196k   631.515k        500.83M/s   24.2772k    1.4079M   3.60699M         5.71165    831.585/s 2.99952G/s     3.27059M               5.17896               0.906735        100       83.1585k/s [BEST: throughput=  0.60 GB/s doc_throughput=   943 docs/s instructions=     3270362 cycles=     3392798 branch_miss=   46573 cache_miss=   24271 cache_ref=   1407638 items=       100 avg_time=   1202523 ns]
partial_tweets<yyjson_insitu>/manual_time                1114899 ns      1188809 ns          629          45.973k            622.49M         14.429k       1.24851M    3.24816M              5.14345           985.708       3.20174G          3.17167M                    5.02232                     0.97645           98.5708k    46.0214k   631.515k       540.192M/s   14.4162k   1.24922M   3.45681M         5.47384    896.943/s 3.10056G/s     3.17182M               5.02256               0.917556        100       89.6943k/s [BEST: throughput=  0.62 GB/s doc_throughput=   985 docs/s instructions=     3171670 cycles=     3248164 branch_miss=   45973 cache_miss=   14429 cache_ref=   1248510 items=       100 avg_time=   1114898 ns]
partial_tweets<rapidjson>/manual_time                    4602447 ns      4676133 ns          153          82.697k           139.084M         12.989k        13.401M    14.4827M              22.9332           220.239       3.18965G          20.6804M                    32.7473                     1.42794           22.0239k    82.3372k   631.515k       130.856M/s   13.2136k   13.4082M   14.5085M         22.9741    217.276/s 3.15235G/s     20.6813M               32.7487                1.42546        100       21.7276k/s [BEST: throughput=  0.14 GB/s doc_throughput=   220 docs/s instructions=    20680438 cycles=    14482685 branch_miss=   82697 cache_miss=   12989 cache_ref=  13401001 items=       100 avg_time=   4602447 ns]
partial_tweets<rapidjson_insitu>/manual_time             2871541 ns      2945851 ns          244          60.334k           224.807M          13.78k       5.85277M    8.99139M              14.2378            355.98       3.20076G          12.8219M                    20.3035                     1.42602            35.598k    60.4836k   631.515k       209.734M/s   13.9723k   5.85437M   9.02884M         14.2971    348.245/s 3.14425G/s     12.8224M               20.3042                1.42016        100       34.8245k/s [BEST: throughput=  0.22 GB/s doc_throughput=   355 docs/s instructions=    12821934 cycles=     8991393 branch_miss=   60334 cache_miss=   13780 cache_ref=   5852775 items=       100 avg_time=   2871540 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                 310506910 ns    314106713 ns            2         1.92207M           148.178M        3.98205M       231.776M    992.454M              21.5757           3.22135       3.19704G          1040.92M                    22.6292                     1.04883           3.22135M    1.92167M   45.9988M       141.278M/s   3.98213M   231.774M   992.576M         21.5783    3.22054/s 3.19663G/s     1040.92M               22.6292                 1.0487      1000k       3.22054M/s [BEST: throughput=  0.15 GB/s doc_throughput=     3 docs/s instructions=  1040915692 cycles=   992453783 branch_miss= 1922072 cache_miss= 3982054 cache_ref= 231776441 items=   1000000 avg_time= 310506909 ns]
large_random<simdjson_ondemand>/manual_time            197954952 ns    201562117 ns            4         1.19906M            232.54M        2.31795M       143.273M    632.418M              13.7486           5.05534       3.19709G          662.774M                    14.4085                       1.048           5.05534M    1.21169M   45.9988M       221.605M/s   2.31799M   143.273M   632.806M          13.757    5.05165/s 3.19672G/s     662.774M               14.4085                1.04736      1000k       5.05165M/s [BEST: throughput=  0.23 GB/s doc_throughput=     5 docs/s instructions=   662773947 cycles=   632418361 branch_miss= 1199059 cache_miss= 2317953 cache_ref= 143272586 items=   1000000 avg_time= 197954952 ns]
large_random<simdjson_ondemand_unordered>/manual_time  187713732 ns    191317818 ns            4          1.2004M           245.086M        2.31801M       141.233M    600.055M               13.045            5.3281       3.19715G          674.774M                    14.6694                     1.12452            5.3281M    1.20066M   45.9988M       233.695M/s   2.31803M   141.233M    600.08M         13.0456    5.32726/s 3.19678G/s     674.774M               14.6694                1.12447      1000k       5.32726M/s [BEST: throughput=  0.25 GB/s doc_throughput=     5 docs/s instructions=   674773942 cycles=   600054761 branch_miss= 1200403 cache_miss= 2318009 cache_ref= 141232674 items=   1000000 avg_time= 187713732 ns]
large_random<yyjson>/manual_time                       203597727 ns    207214786 ns            3         1.57956M           225.984M        4.91299M       205.604M    626.189M              13.6132           4.91282       3.07635G          816.385M                     17.748                     1.30373           4.91282M    1.57845M   45.9988M       215.463M/s   4.91296M   205.598M   626.358M         13.6168    4.91165/s 3.07645G/s     816.385M                17.748                1.30338      1000k       4.91165M/s [BEST: throughput=  0.23 GB/s doc_throughput=     4 docs/s instructions=   816384799 cycles=   626189270 branch_miss= 1579557 cache_miss= 4912988 cache_ref= 205603712 items=   1000000 avg_time= 203597727 ns]
large_random<yyjson_insitu>/manual_time                197755576 ns    201365656 ns            4         1.59071M           232.679M          4.196M       194.085M    614.436M              13.3577           5.05837       3.10805G          809.197M                    17.5917                     1.31697           5.05837M    1.58779M   45.9988M       221.829M/s   4.19603M   194.092M    614.53M         13.3597    5.05675/s 3.10752G/s     809.197M               17.5917                1.31677      1000k       5.05675M/s [BEST: throughput=  0.23 GB/s doc_throughput=     5 docs/s instructions=   809197128 cycles=   614436222 branch_miss= 1590709 cache_miss= 4196003 cache_ref= 194084866 items=   1000000 avg_time= 197755576 ns]
large_random<rapidjson>/manual_time                    363578025 ns    367160224 ns            2         2.03451M           126.798M        4.95258M       779.136M    1.13318G              24.6351           2.75655       3.12367G          1.63051G                    35.4468                     1.43888           2.75655M    2.03475M   45.9988M       120.656M/s   4.95304M   779.128M   1.13333G         24.6383    2.75044/s 3.11716G/s     1.63051G               35.4469                1.43869      1000k       2.75044M/s [BEST: throughput=  0.13 GB/s doc_throughput=     2 docs/s instructions=  1630508591 cycles=  1133182179 branch_miss= 2034508 cache_miss= 4952580 cache_ref= 779135975 items=   1000000 avg_time= 363578025 ns]
large_random<rapidjson_lossless>/manual_time           419935358 ns    423544468 ns            2          2.3987M           109.694M        4.95158M       1024.76M    1.31403G              28.5667           2.38472       3.13359G          2.05348G                    44.6421                     1.56273           2.38472M    2.42582M   45.9988M       104.463M/s   4.95203M   1024.82M   1.31369G         28.5593    2.38132/s 3.12832G/s     2.05349G               44.6422                1.56314      1000k       2.38132M/s [BEST: throughput=  0.11 GB/s doc_throughput=     2 docs/s instructions=  2053481935 cycles=  1314031958 branch_miss= 2398703 cache_miss= 4951580 cache_ref=1024759126 items=   1000000 avg_time= 419935358 ns]
large_random<rapidjson_insitu>/manual_time             397845348 ns    354897945 ns            2           2.358M           130.753M        5.67306M       696.249M    1093.28M              23.7677           2.84254        3.1077G          1.37952G                    29.9903                     1.26181           2.84254M    2.25527M   45.9988M       110.264M/s   5.67261M   696.259M   1093.87M         23.7805    2.51354/s  2.7495G/s     1.37951G               29.9902                1.26113      1000k       2.51354M/s [BEST: throughput=  0.13 GB/s doc_throughput=     2 docs/s instructions=  1379518480 cycles=  1093283487 branch_miss= 2357998 cache_miss= 5673061 cache_ref= 696249405 items=   1000000 avg_time= 397845348 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                       376825538 ns    387497679 ns            2         884.478k            364.45M        6.95234M       248.828M    1.20436G              8.77143           2.65431       3.19675G           1.1314G                    8.24004                    0.939418           1.39162M     884.92k   137.305M       347.493M/s   6.95237M   248.828M   1.20453G         8.77267    2.65375/s 3.19652G/s      1.1314G               8.24004               0.939286   524.288k       1.39133M/s [BEST: throughput=  0.36 GB/s doc_throughput=     2 docs/s instructions=  1131399189 cycles=  1204361475 branch_miss=  884478 cache_miss= 6952343 cache_ref= 248827682 items=    524288 avg_time= 376825537 ns]
kostya<simdjson_ondemand>/manual_time                  256207071 ns    266882231 ns            3         904.052k           535.957M         5.2849M       145.606M    818.961M              5.96454           3.90341       3.19674G          791.585M                    5.76516                    0.966573           2.04651M    903.897k   137.305M       511.088M/s   5.28498M   145.607M    818.98M         5.96468    3.90309/s 3.19655G/s     791.585M               5.76516                0.96655   524.288k       2.04634M/s [BEST: throughput=  0.54 GB/s doc_throughput=     3 docs/s instructions=   791585016 cycles=   818960826 branch_miss=  904052 cache_miss= 5284901 cache_ref= 145605611 items=    524288 avg_time= 256207070 ns]
kostya<yyjson>/manual_time                             278966288 ns    289645616 ns            3         2.02638M           492.442M        7.97393M        325.97M    849.465M               6.1867           3.58649        3.0466G          948.793M                    6.91012                     1.11693           1.88035M    2.04198M   137.305M       469.391M/s   7.97383M   326.032M   849.824M         6.18931    3.58466/s 3.04633G/s     948.793M               6.91012                1.11646   524.288k        1.8794M/s [BEST: throughput=  0.49 GB/s doc_throughput=     3 docs/s instructions=   948793409 cycles=   849465367 branch_miss= 2026381 cache_miss= 7973932 cache_ref= 325969686 items=    524288 avg_time= 278966287 ns]
kostya<yyjson_insitu>/manual_time                      261260990 ns    271943557 ns            3         2.01074M           525.841M        5.83517M       291.663M    812.764M               5.9194           3.82973       3.11266G          927.339M                    6.75386                     1.14097           2.00788M    2.01595M   137.305M       501.201M/s   5.83475M   291.621M   813.141M         5.92215    3.82759/s 3.11237G/s     927.339M               6.75386                1.14044   524.288k       2.00676M/s [BEST: throughput=  0.53 GB/s doc_throughput=     3 docs/s instructions=   927339172 cycles=   812763818 branch_miss= 2010741 cache_miss= 5835170 cache_ref= 291662682 items=    524288 avg_time= 261260989 ns]
kostya<rapidjson>/manual_time                          586258846 ns    596939092 ns            1         4.66323M           234.205M        5.34128M       1.20031G    1.84006G              13.4013           1.70573       3.13865G          2.46967G                    17.9868                     1.34217           894.294k    4.66323M   137.305M       223.356M/s   5.34128M   1.20031G   1.84006G         13.4013    1.70573/s 3.13865G/s     2.46967G               17.9868                1.34217   524.288k       894.294k/s [BEST: throughput=  0.23 GB/s doc_throughput=     1 docs/s instructions=  2469673190 cycles=  1840061056 branch_miss= 4663229 cache_miss= 5341277 cache_ref=1200309398 items=    524288 avg_time= 586258846 ns]
kostya<rapidjson_lossless>/manual_time                 633118411 ns    643784626 ns            1           6.523M           216.871M        5.34051M       1.34676G    1.98958G              14.4902           1.57948       3.14251G          2.71451G                    19.7699                     1.36436           828.104k      6.523M   137.305M       206.824M/s   5.34051M   1.34676G   1.98958G         14.4902    1.57948/s 3.14251G/s     2.71451G               19.7699                1.36436   524.288k       828.104k/s [BEST: throughput=  0.22 GB/s doc_throughput=     1 docs/s instructions=  2714507776 cycles=  1989579470 branch_miss= 6523002 cache_miss= 5340510 cache_ref=1346764064 items=    524288 avg_time= 633118411 ns]
kostya<rapidjson_insitu>/manual_time                   534737800 ns    545427335 ns            1         6.01507M           256.771M        6.33265M       908.024M    1.67548G              12.2026           1.87008       3.13328G          1.99322G                    14.5167                     1.18964           980.458k    6.01507M   137.305M       244.876M/s   6.33265M   908.024M   1.67548G         12.2026    1.87008/s 3.13328G/s     1.99322G               14.5167                1.18964   524.288k       980.458k/s [BEST: throughput=  0.26 GB/s doc_throughput=     1 docs/s instructions=  1993215159 cycles=  1675481204 branch_miss= 6015069 cache_miss= 6332654 cache_ref= 908024214 items=    524288 avg_time= 534737800 ns]
distinct_user_id<simdjson_dom>/manual_time               1569831 ns      1657863 ns          446          13.872k           406.618M         26.555k       949.232k    4.97196M              7.87306           643.876       3.20133G          3.87901M                    6.14239                    0.780178           74.0458k    13.9009k   631.515k       383.646M/s   26.5534k   950.146k   5.01882M         7.94727    637.011/s 3.19705G/s     3.87901M               6.14239               0.772893        115       73.2563k/s [BEST: throughput=  0.41 GB/s doc_throughput=   643 docs/s instructions=     3879010 cycles=     4971957 branch_miss=   13872 cache_miss=   26555 cache_ref=    949232 items=       115 avg_time=   1569831 ns]
distinct_user_id<simdjson_ondemand>/manual_time          1040764 ns      1122493 ns          672            9.55k           608.833M         22.544k       427.631k    3.32136M              5.25935           964.083       3.20207G          2.67029M                    4.22838                    0.803974            110.87k    9.72606k   631.515k       578.671M/s   22.5459k   427.831k   3.32909M         5.27159    960.833/s 3.19869G/s     2.67029M               4.22839               0.802109        115       110.496k/s [BEST: throughput=  0.61 GB/s doc_throughput=   964 docs/s instructions=     2670288 cycles=     3321360 branch_miss=    9550 cache_miss=   22544 cache_ref=    427631 items=       115 avg_time=   1040763 ns]
distinct_user_id<yyjson>/manual_time                     1175707 ns      1261253 ns          600          46.433k            608.95M         24.296k       1.39493M    3.32104M              5.25884           964.269       3.20237G          3.23372M                    5.12058                     0.97371           110.891k     46.183k   631.515k       512.253M/s   24.2741k   1.39544M   3.54083M         5.60688    850.552/s 3.01166G/s     3.23387M               5.12081               0.913309        115       97.8135k/s [BEST: throughput=  0.61 GB/s doc_throughput=   964 docs/s instructions=     3233725 cycles=     3321036 branch_miss=   46433 cache_miss=   24296 cache_ref=   1394926 items=       115 avg_time=   1175706 ns]
distinct_user_id<yyjson_insitu>/manual_time              1092687 ns      1179421 ns          641          46.409k           635.022M         14.376k       1.23732M    3.18424M              5.04223           1005.55       3.20193G          3.13496M                    4.96419                    0.984523           115.639k    46.0788k   631.515k       551.173M/s   14.3935k   1.23652M   3.38574M          5.3613    915.175/s 3.09855G/s     3.13511M               4.96442               0.925973        115       105.245k/s [BEST: throughput=  0.64 GB/s doc_throughput=  1005 docs/s instructions=     3134958 cycles=     3184241 branch_miss=   46409 cache_miss=   14376 cache_ref=   1237323 items=       115 avg_time=   1092686 ns]
distinct_user_id<rapidjson>/manual_time                  4571601 ns      4657566 ns          153          82.278k           140.245M         13.562k        13.395M    14.4112M              22.8201           222.077        3.2004G          20.6318M                    32.6702                     1.43164           25.5388k      82.37k   631.515k       131.739M/s   13.7572k   13.3867M   14.4626M         22.9014    218.742/s 3.16356G/s     20.6323M               32.6711                 1.4266        115       25.1553k/s [BEST: throughput=  0.14 GB/s doc_throughput=   222 docs/s instructions=    20631752 cycles=    14411231 branch_miss=   82278 cache_miss=   13562 cache_ref=  13395006 items=       115 avg_time=   4571601 ns]
distinct_user_id<rapidjson_insitu>/manual_time           2856370 ns      2943981 ns          247           60.41k           225.726M         14.003k       5.83952M    8.95458M              14.1795           357.436       3.20069G          12.7739M                    20.2274                     1.42652           41.1052k    60.4995k   631.515k       210.848M/s   14.1629k   5.84032M   8.98873M         14.2336    350.095/s 3.14691G/s     12.7745M               20.2283                1.42116        115       40.2609k/s [BEST: throughput=  0.23 GB/s doc_throughput=   357 docs/s instructions=    12773928 cycles=     8954579 branch_miss=   60410 cache_miss=   14003 cache_ref=   5839515 items=       115 avg_time=   2856369 ns]
find_tweet<simdjson_dom>/manual_time                     1521513 ns      1603684 ns          460          13.732k           421.621M         23.522k       932.995k    4.79482M              7.59256           667.634       3.20118G           3.7886M                    5.99922                    0.790145            667.634    13.6928k   631.515k       395.829M/s    23.526k   934.444k   4.86568M         7.70477    657.241/s 3.19792G/s      3.7886M               5.99922               0.778637          1        657.241/s [BEST: throughput=  0.42 GB/s doc_throughput=   667 docs/s instructions=     3788599 cycles=     4794816 branch_miss=   13732 cache_miss=   23522 cache_ref=    932995 items=         1 avg_time=   1521512 ns]
find_tweet<simdjson_ondemand>/manual_time                 904430 ns       986661 ns          773           4.624k           699.859M         11.563k       234.868k    2.88978M              4.57596          1.10822k       3.20252G          2.11684M                    3.35201                    0.732526           1.10822k    4.73962k   631.515k         665.9M/s   11.5617k   235.116k   2.89313M         4.58125   1.10567k/s 3.19884G/s     2.11685M               3.35201                0.73168          1       1.10567k/s [BEST: throughput=  0.70 GB/s doc_throughput=  1108 docs/s instructions=     2116844 cycles=     2889785 branch_miss=    4624 cache_miss=   11563 cache_ref=    234868 items=         1 avg_time=    904430 ns]
find_tweet<yyjson>/manual_time                           1127570 ns      1213882 ns          622          46.357k            622.79M         21.759k        1.3789M    3.19076M              5.05255           986.184       3.14668G          3.17691M                    5.03062                    0.995658            986.184    46.0845k   631.515k       534.122M/s   21.7511k   1.37961M   3.38887M         5.36625    886.863/s 3.00546G/s     3.17713M               5.03096               0.937519          1        886.863/s [BEST: throughput=  0.62 GB/s doc_throughput=   986 docs/s instructions=     3176910 cycles=     3190764 branch_miss=   46357 cache_miss=   21759 cache_ref=   1378899 items=         1 avg_time=   1127569 ns]
find_tweet<yyjson_insitu>/manual_time                    1050367 ns      1137878 ns          669          45.954k           662.513M         11.828k       1.22075M    3.05208M              4.83294           1049.09       3.20189G          3.07792M                    4.87386                     1.00847            1049.09    45.9398k   631.515k        573.38M/s   11.8399k   1.22059M   3.24999M         5.14633    952.048/s 3.09414G/s     3.07806M                4.8741               0.947101          1        952.048/s [BEST: throughput=  0.66 GB/s doc_throughput=  1049 docs/s instructions=     3077916 cycles=     3052076 branch_miss=   45954 cache_miss=   11828 cache_ref=   1220751 items=         1 avg_time=   1050367 ns]
find_tweet<rapidjson>/manual_time                        5416756 ns      4909279 ns          154          82.404k           140.979M         10.787k       13.3812M    14.3366M              22.7019           223.239       3.20049G          20.5732M                    32.5775                     1.43501            223.239    82.2401k   631.515k       111.185M/s   10.9985k   13.3749M   14.3675M         22.7509    184.612/s 2.65242G/s     20.5737M               32.5784                1.43196          1        184.612/s [BEST: throughput=  0.14 GB/s doc_throughput=   223 docs/s instructions=    20573151 cycles=    14336611 branch_miss=   82404 cache_miss=   10787 cache_ref=  13381152 items=         1 avg_time=   5416755 ns]
find_tweet<rapidjson_insitu>/manual_time                 2823064 ns      2910846 ns          250          60.393k           228.298M          10.66k       5.82173M    8.85345M              14.0194           361.508       3.20059G          12.7155M                    20.1349                     1.43622            361.508    60.5445k   631.515k       213.335M/s   10.8113k   5.82301M   8.88219M         14.0649    354.225/s 3.14629G/s     12.7159M               20.1356                1.43162          1        354.225/s [BEST: throughput=  0.23 GB/s doc_throughput=   361 docs/s instructions=    12715497 cycles=     8853446 branch_miss=   60393 cache_miss=   10660 cache_ref=   5821732 items=         1 avg_time=   2823063 ns]
