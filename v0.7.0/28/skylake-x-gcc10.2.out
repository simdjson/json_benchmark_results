run_benchmark: v0.8.0~10 /home/jkeiser/simdjson_benchmark_results/v0.7.0/28/skylake-gcc10.2.json 
git reset --hard v0.8.0~10
HEAD is now at 84b0e844 fix function was exited without releasing (#1389)
cmake ..
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- git Version: v0.2.1-84b0e844
-- Version: 0.2.1
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
make[1]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[2]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 72%] Built target benchmark
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 72%] Built target generated-data
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
Scanning dependencies of target simdjson
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 72%] Building CXX object src/CMakeFiles/simdjson.dir/simdjson.cpp.o
[ 81%] Linking CXX shared library ../libsimdjson.so
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 81%] Built target simdjson
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 90%] Built target yyjson
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
Scanning dependencies of target bench_ondemand
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 90%] Building CXX object benchmark/CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o
[100%] Linking CXX executable bench_ondemand
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[100%] Built target bench_ondemand
make[2]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[1]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/28/skylake-gcc10.2.json --benchmark_out_format=json
2021-01-23 05:05:33
Running benchmark/bench_ondemand
Run on (4 X 3200 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 1024 KiB (x4)
  L3 Unified 8448 KiB (x1)
Load Average: 1.00, 1.00, 1.00
***WARNING*** CPU scaling is enabled, the benchmark real time measurements may be noisy and will incur extra overhead.
simdjson::dom implementation:      haswell
simdjson::ondemand implementation: fallback

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                  303963 ns       374695 ns         2295           3.895k           2.09263G               1        32.799k    963.848k              1.52625          3.31366k       3.19387G          2.96251M                    4.69112                     3.07363           331.366k    4.01309k   631.515k       1.93492G/s   0.653595   32.9176k   970.005k           1.536   3.28987k/s 3.19119G/s     2.96251M               4.69112                3.05412        100       328.987k/s [BEST: throughput=  2.09 GB/s doc_throughput=  3313 docs/s instructions=     2962513 cycles=      963848 branch_miss=    3895 cache_miss=       1 cache_ref=     32799 items=       100 avg_time=    303963 ns]
partial_tweets<simdjson_ondemand>/manual_time             233222 ns       290886 ns         3004           2.269k            2.7367G               0         10.52k    737.117k              1.16722          4.33354k       3.19433G          2.46248M                    3.89932                     3.34069           433.354k    2.41452k   631.515k       2.52182G/s  0.0685752   10.5631k   744.226k         1.17848   4.28776k/s 3.19106G/s     2.46248M               3.89932                3.30878        100       428.776k/s [BEST: throughput=  2.74 GB/s doc_throughput=  4333 docs/s instructions=     2462480 cycles=      737117 branch_miss=    2269 cache_miss=       0 cache_ref=     10520 items=       100 avg_time=    233221 ns]
partial_tweets<yyjson>/manual_time                        853155 ns       932800 ns          823           9.933k           1.27202G             275        27.841k    1.58567M               2.5109          2.01424k       3.19393G          2.90839M                    4.60541                     1.83417           201.424k    7.82373k   631.515k        705.92M/s    565.868   23.7282k   1.75812M         2.78397   1.17212k/s 2.06073G/s     2.90885M               4.60614                1.65452        100       117.212k/s [BEST: throughput=  1.27 GB/s doc_throughput=  2014 docs/s instructions=     2908386 cycles=     1585673 branch_miss=    9933 cache_miss=     275 cache_ref=     27841 items=       100 avg_time=    853155 ns]
partial_tweets<yyjson_insitu>/manual_time                 575083 ns       637543 ns         1229           7.342k           1.53896G             113        14.693k    1.31047M              2.07512          2.43693k       3.19352G          2.90825M                     4.6052                     2.21924           243.693k    7.61395k   631.515k       1047.26M/s     66.227   8.91415k   1.43622M         2.27425   1.73888k/s 2.49741G/s     2.90852M               4.60562                2.02512        100       173.888k/s [BEST: throughput=  1.54 GB/s doc_throughput=  2436 docs/s instructions=     2908252 cycles=     1310470 branch_miss=    7342 cache_miss=     113 cache_ref=     14693 items=       100 avg_time=    575083 ns]
partial_tweets<rapidjson>/manual_time                    1910171 ns      1975424 ns          367          26.672k           384.489M          7.156k        22.442k    5.24431M              8.30434           608.837       3.19293G          13.4095M                    21.2338                     2.55695           60.8837k    27.2743k   631.515k       315.291M/s    334.578    11.601k   5.41546M         8.57535    523.513/s 2.83507G/s     13.4101M               21.2348                2.47626        100       52.3513k/s [BEST: throughput=  0.38 GB/s doc_throughput=   608 docs/s instructions=    13409454 cycles=     5244313 branch_miss=   26672 cache_miss=    7156 cache_ref=     22442 items=       100 avg_time=   1910171 ns]
partial_tweets<rapidjson_insitu>/manual_time             1351322 ns      1413955 ns          521           24.42k           542.066M             145         14.66k    3.71993M              5.89049           858.357       3.19303G          9.75492M                    15.4469                     2.62234           85.8357k    28.0315k   631.515k       445.682M/s    180.436   9.47204k   3.90544M         6.18424    740.016/s 2.89009G/s     9.75552M               15.4478                2.49793        100       74.0016k/s [BEST: throughput=  0.54 GB/s doc_throughput=   858 docs/s instructions=     9754920 cycles=     3719935 branch_miss=   24420 cache_miss=     145 cache_ref=     14660 items=       100 avg_time=   1351321 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                 103932022 ns    110023635 ns            7         863.745k           444.326M        6.82009M       6.89494M    330.087M              7.17599           9.65951       3.18847G          983.113M                    21.3726                     2.97835           9.65951M    864.696k   45.9988M       422.082M/s   6.80547M   6.89507M   331.373M         7.20396    9.62167/s 3.18837G/s     983.113M               21.3726                2.96678      1000k       9.62167M/s [BEST: throughput=  0.44 GB/s doc_throughput=     9 docs/s instructions=   983112691 cycles=   330086622 branch_miss=  863745 cache_miss= 6820094 cache_ref=   6894944 items=   1000000 avg_time= 103932021 ns]
large_random<simdjson_ondemand>/manual_time             65848120 ns     71876264 ns           11         1044.28k           699.223M         3.4898M       3.57274M    209.768M              4.56031           15.2009       3.18867G           641.49M                    13.9458                     3.05809           15.2009M    1047.32k   45.9988M       666.197M/s   3.51263M   3.57284M   209.964M         4.56456    15.1865/s 3.18861G/s      641.49M               13.9458                3.05524      1000k       15.1865M/s [BEST: throughput=  0.70 GB/s doc_throughput=    15 docs/s instructions=   641489876 cycles=   209768471 branch_miss= 1044275 cache_miss= 3489801 cache_ref=   3572743 items=   1000000 avg_time=  65848119 ns]
large_random<simdjson_ondemand_unordered>/manual_time   69802763 ns     75841263 ns           10         865.991k           659.747M        3.48615M       3.57338M    222.337M              4.83354           14.3427       3.18891G           645.49M                    14.0328                     2.90321           14.3427M    867.274k   45.9988M       628.454M/s   3.51583M   3.57331M   222.562M         4.83844    14.3261/s 3.18844G/s      645.49M               14.0328                2.90027      1000k       14.3261M/s [BEST: throughput=  0.66 GB/s doc_throughput=    14 docs/s instructions=   645489880 cycles=   222336774 branch_miss=  865991 cache_miss= 3486148 cache_ref=   3573376 items=   1000000 avg_time=  69802763 ns]
large_random<yyjson>/manual_time                       156957705 ns    163094811 ns            4         660.114k           293.143M         4.2035M       4.40766M    360.113M              7.82876           6.37283       2.29494G          944.149M                    20.5255                     2.62181           6.37283M    659.635k   45.9988M       279.488M/s   4.20139M   4.42452M   360.298M         7.83278    6.37114/s 2.29551G/s     944.149M               20.5255                2.62046      1000k       6.37114M/s [BEST: throughput=  0.29 GB/s doc_throughput=     6 docs/s instructions=   944149399 cycles=   360113169 branch_miss=  660114 cache_miss= 4203498 cache_ref=   4407660 items=   1000000 avg_time= 156957705 ns]
large_random<yyjson_insitu>/manual_time                130813737 ns    136970863 ns            5          656.31k           351.934M        3.48199M       3.65649M     316.99M              6.89126           7.65094       2.42527G          938.029M                    20.3925                     2.95918           7.65094M        659k   45.9988M       335.346M/s    3.4834M   3.65424M   317.267M         6.89729    7.64446/s 2.42533G/s     938.029M               20.3925                2.95659      1000k       7.64446M/s [BEST: throughput=  0.35 GB/s doc_throughput=     7 docs/s instructions=   938028843 cycles=   316989719 branch_miss=  656310 cache_miss= 3481988 cache_ref=   3656492 items=   1000000 avg_time= 130813736 ns]
large_random<rapidjson>/manual_time                    200990311 ns    207109195 ns            4         616.144k           240.067M        4.35512M       4.89587M    542.883M              11.8021           5.21899        2.8333G          1.65612G                    36.0036                     3.05061           5.21899M    613.962k   45.9988M       218.259M/s   4.06404M   4.66461M   548.218M         11.9181    4.97536/s 2.72758G/s     1.65613G               36.0039                3.02094      1000k       4.97536M/s [BEST: throughput=  0.24 GB/s doc_throughput=     5 docs/s instructions=  1656123776 cycles=   542882874 branch_miss=  616144 cache_miss= 4355121 cache_ref=   4895870 items=   1000000 avg_time= 200990311 ns]
large_random<rapidjson_lossless>/manual_time           231822855 ns    237947654 ns            3         595.003k           205.754M        4.36372M       4.90436M    644.856M               14.019           4.47303       2.88446G          2.00709G                    43.6336                     3.11247           4.47303M    594.867k   45.9988M        189.23M/s   4.10227M   4.70141M   649.358M         14.1169    4.31364/s  2.8011G/s      2.0071G               43.6338                 3.0909      1000k       4.31364M/s [BEST: throughput=  0.21 GB/s doc_throughput=     4 docs/s instructions=  2007093164 cycles=   644856247 branch_miss=  595003 cache_miss= 4363724 cache_ref=   4904362 items=   1000000 avg_time= 231822854 ns]
large_random<rapidjson_insitu>/manual_time             183983776 ns    190117660 ns            4         588.411k           264.159M        5.04611M       5.61102M     487.12M              10.5898           5.74274       2.79741G          1.49112G                    32.4165                      3.0611           5.74274M    594.082k   45.9988M       238.433M/s   4.77315M   5.38376M   493.886M         10.7369    5.43526/s  2.6844G/s     1.49113G               32.4168                3.01918      1000k       5.43526M/s [BEST: throughput=  0.26 GB/s doc_throughput=     5 docs/s instructions=  1491121264 cycles=   487120092 branch_miss=  588411 cache_miss= 5046113 cache_ref=   5611015 items=   1000000 avg_time= 183983776 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                        97318583 ns    116322278 ns            7         460.765k           1.41247G        10.2156M       10.3153M    309.971M              2.25754           10.2871        3.1887G          945.501M                    6.88614                     3.05029           5.39339M    460.701k   137.305M       1.31399G/s   10.2376M   10.3151M   310.287M         2.25983    10.2755/s 3.18836G/s     945.501M               6.88614                3.04719   524.288k       5.38734M/s [BEST: throughput=  1.41 GB/s doc_throughput=    10 docs/s instructions=   945501391 cycles=   309971369 branch_miss=  460765 cache_miss=10215604 cache_ref=  10315262 items=    524288 avg_time=  97318583 ns]
kostya<simdjson_ondemand>/manual_time                   64926695 ns     83823416 ns           11         474.485k           2.11584G        6.42778M        6.4699M    206.919M                1.507           15.4098       3.18858G          676.738M                    4.92872                     3.27055           8.07917M    475.301k   137.305M       1.96953G/s   6.43657M      6.47M   207.016M         1.50771     15.402/s 3.18845G/s     676.738M               4.92872                3.26901   524.288k       8.07508M/s [BEST: throughput=  2.12 GB/s doc_throughput=    15 docs/s instructions=   676737583 cycles=   206918723 branch_miss=  474485 cache_miss= 6427776 cache_ref=   6469905 items=    524288 avg_time=  64926695 ns]
kostya<yyjson>/manual_time                             263008962 ns    282026578 ns            3         430.871k           522.176M        8.48825M       8.80928M    605.842M              4.41238           3.80304       2.30404G          984.045M                    7.16686                     1.62426           1.99389M    429.835k   137.305M        497.87M/s   8.48726M   8.80598M   605.724M         4.41153    3.80215/s 2.30306G/s     984.045M               7.16686                1.62458   524.288k       1.99342M/s [BEST: throughput=  0.52 GB/s doc_throughput=     3 docs/s instructions=   984045142 cycles=   605841945 branch_miss=  430871 cache_miss= 8488245 cache_ref=   8809285 items=    524288 avg_time= 263008962 ns]
kostya<yyjson_insitu>/manual_time                      185044594 ns    204265806 ns            4          425.57k           742.115M        6.35299M       6.62289M    477.708M              3.47917           5.40486       2.58195G          965.775M                     7.0338                     2.02169           2.83371M    426.816k   137.305M       707.636M/s   6.34975M   6.61382M    477.75M         3.47948     5.4041/s 2.58181G/s     965.775M                7.0338                2.02151   524.288k       2.83331M/s [BEST: throughput=  0.74 GB/s doc_throughput=     5 docs/s instructions=   965775469 cycles=   477707709 branch_miss=  425570 cache_miss= 6352994 cache_ref=   6622889 items=    524288 avg_time= 185044593 ns]
kostya<rapidjson>/manual_time                          287109984 ns    306301017 ns            2         964.983k           484.042M        5.23206M       5.78049M    807.407M              5.88039           3.52531       2.84636G          2.29502G                    16.7148                     2.84246           1.84828M    966.819k   137.305M       456.077M/s   5.10905M   5.67402M   809.849M         5.89817    3.48299/s 2.82069G/s     2.29503G               16.7148                2.83389   524.288k       1.82609M/s [BEST: throughput=  0.48 GB/s doc_throughput=     3 docs/s instructions=  2295024369 cycles=   807407095 branch_miss=  964983 cache_miss= 5232059 cache_ref=   5780488 items=    524288 avg_time= 287109984 ns]
kostya<rapidjson_lossless>/manual_time                 303133624 ns    322207433 ns            2         1.12991M           457.665M        5.23536M       5.77269M    859.441M              6.25936            3.3332       2.86469G          2.49529G                    18.1734                     2.90339           1.74756M    1.10629M   137.305M       431.969M/s   5.11369M   5.67238M   860.735M         6.26878    3.29888/s 2.83946G/s      2.4953G               18.1734                2.89903   524.288k       1.72956M/s [BEST: throughput=  0.46 GB/s doc_throughput=     3 docs/s instructions=  2495294339 cycles=   859441147 branch_miss= 1129908 cache_miss= 5235365 cache_ref=   5772686 items=    524288 avg_time= 303133624 ns]
kostya<rapidjson_insitu>/manual_time                   264854095 ns    284054407 ns            3         1.25596M           528.359M        7.37234M       7.90943M    731.463M              5.32729           3.84807       2.81472G          2.03014G                    14.7856                     2.77545            2.0175M    1.33295M   137.305M       494.401M/s   7.21358M   7.77708M   736.072M         5.36086    3.77566/s 2.77916G/s     2.03014G               14.7857                2.75808   524.288k       1.97954M/s [BEST: throughput=  0.53 GB/s doc_throughput=     3 docs/s instructions=  2030142769 cycles=   731463418 branch_miss= 1255962 cache_miss= 7372342 cache_ref=   7909430 items=    524288 avg_time= 264854095 ns]
distinct_user_id<simdjson_dom>/manual_time                300691 ns       379832 ns         2327           3.978k           2.11667G               4        34.147k    952.958k                1.509          3.35173k       3.19406G          2.90344M                    4.59757                     3.04676           385.449k     4.1799k   631.515k       1.95597G/s    2.12076   34.2961k    959.42k         1.51924   3.32567k/s 3.19072G/s     2.90344M               4.59757                3.02624        115       382.452k/s [BEST: throughput=  2.12 GB/s doc_throughput=  3351 docs/s instructions=     2903436 cycles=      952958 branch_miss=    3978 cache_miss=       4 cache_ref=     34147 items=       115 avg_time=    300691 ns]
distinct_user_id<simdjson_ondemand>/manual_time           196791 ns       258817 ns         3552           1.766k            3.2394G              25         8.202k    622.885k             0.986334          5.12957k       3.19513G          2.11936M                    3.35599                     3.40249           589.901k    1.94366k   631.515k       2.98867G/s    29.8302   8.17277k   628.057k        0.994524   5.08153k/s 3.19149G/s     2.11936M               3.35599                3.37447        115       584.376k/s [BEST: throughput=  3.24 GB/s doc_throughput=  5129 docs/s instructions=     2119361 cycles=      622885 branch_miss=    1766 cache_miss=      25 cache_ref=      8202 items=       115 avg_time=    196791 ns]
distinct_user_id<yyjson>/manual_time                      850765 ns       939866 ns          980          10.077k           1.23485G             281        27.584k    1.58694M              2.51291          1.95538k       3.10306G          2.87343M                    4.55005                     1.81067           224.869k    7.94556k   631.515k       707.904M/s    434.784   23.7362k   1.75201M         2.77429   1.17541k/s 2.05933G/s     2.87382M               4.55068                1.64031        115       135.173k/s [BEST: throughput=  1.23 GB/s doc_throughput=  1955 docs/s instructions=     2873426 cycles=     1586938 branch_miss=   10077 cache_miss=     281 cache_ref=     27584 items=       115 avg_time=    850764 ns]
distinct_user_id<yyjson_insitu>/manual_time               573490 ns       644803 ns         1231           7.302k           1.54388G            1051        13.398k    1.30077M              2.05975          2.44473k       3.18002G          2.87302M                    4.54941                     2.20872           281.144k    7.74895k   631.515k       1050.17M/s    70.6734   9.04078k   1.43138M         2.26657   1.74371k/s  2.4959G/s     2.87329M               4.54983                2.00736        115       200.527k/s [BEST: throughput=  1.54 GB/s doc_throughput=  2444 docs/s instructions=     2873023 cycles=     1300765 branch_miss=    7302 cache_miss=    1051 cache_ref=     13398 items=       115 avg_time=    573490 ns]
distinct_user_id<rapidjson>/manual_time                  1890256 ns      1963237 ns          371          27.161k           385.253M             775        23.042k    5.23369M              8.28752           610.046       3.19279G          13.3498M                    21.1393                     2.55074           70.1553k    27.3254k   631.515k       318.613M/s   1.22974k    12.621k   5.40121M         8.55278    529.029/s  2.8574G/s     13.3506M               21.1406                2.47178        115       60.8383k/s [BEST: throughput=  0.39 GB/s doc_throughput=   610 docs/s instructions=    13349800 cycles=     5233691 branch_miss=   27161 cache_miss=     775 cache_ref=     23042 items=       115 avg_time=   1890256 ns]
distinct_user_id<rapidjson_insitu>/manual_time           1318784 ns      1390306 ns          573          24.268k           545.018M             247        14.678k    3.69969M              5.85843           863.032       3.19295G           9.7052M                    15.3681                     2.62325           99.2487k    27.0301k   631.515k       456.678M/s   1.29474k   10.8356k   3.86418M         6.11891    758.274/s 2.93011G/s     9.70553M               15.3687                2.51166        115       87.2015k/s [BEST: throughput=  0.55 GB/s doc_throughput=   863 docs/s instructions=     9705204 cycles=     3699687 branch_miss=   24268 cache_miss=     247 cache_ref=     14678 items=       115 avg_time=   1318784 ns]
find_tweet<simdjson_dom>/manual_time                      284446 ns       360096 ns         2459           3.666k            2.2377G               0        30.126k    901.487k               1.4275          3.54339k       3.19432G           2.8224M                    4.46925                     3.13082           3.54339k     3.8258k   631.515k       2.06768G/s   0.126881   30.0947k   907.612k          1.4372    3.5156k/s  3.1908G/s      2.8224M               4.46925                3.10969          1        3.5156k/s [BEST: throughput=  2.24 GB/s doc_throughput=  3543 docs/s instructions=     2822396 cycles=      901487 branch_miss=    3666 cache_miss=       0 cache_ref=     30126 items=         1 avg_time=    284446 ns]
find_tweet<simdjson_ondemand>/manual_time                 134375 ns       199641 ns         5197              947           4.72525G              10         7.306k    427.002k             0.676155           7.4824k         3.195G          1.50675M                    2.38592                     3.52866            7.4824k      977.87   631.515k        4.3769G/s    6.32865   7.35014k    428.92k        0.679193   7.44188k/s 3.19197G/s     1.50675M               2.38592                3.51288          1       7.44188k/s [BEST: throughput=  4.73 GB/s doc_throughput=  7482 docs/s instructions=     1506745 cycles=      427002 branch_miss=     947 cache_miss=      10 cache_ref=      7306 items=         1 avg_time=    134374 ns]
find_tweet<yyjson>/manual_time                            833394 ns       918768 ns          845           9.618k           1.30447G             179        27.161k    1.54621M              2.44842          2.06561k       3.19388G          2.82414M                      4.472                     1.82648           2.06561k    7.61764k   631.515k       722.659M/s    337.557   20.0829k   1.69832M         2.68928   1.19991k/s 2.03783G/s     2.82462M               4.47277                1.66319          1       1.19991k/s [BEST: throughput=  1.30 GB/s doc_throughput=  2065 docs/s instructions=     2824136 cycles=     1546215 branch_miss=    9618 cache_miss=     179 cache_ref=     27161 items=         1 avg_time=    833393 ns]
find_tweet<yyjson_insitu>/manual_time                     558377 ns       622097 ns         1265           6.987k           1.57914G             938        12.541k     1.2721M              2.01437          2.50056k       3.18096G          2.82403M                    4.47183                     2.21997           2.50056k    7.46772k   631.515k       1078.59M/s    7.39684   5.26792k   1.38372M         2.19111    1.7909k/s 2.47811G/s     2.82429M               4.47224                2.04109          1        1.7909k/s [BEST: throughput=  1.58 GB/s doc_throughput=  2500 docs/s instructions=     2824027 cycles=     1272102 branch_miss=    6987 cache_miss=     938 cache_ref=     12541 items=         1 avg_time=    558377 ns]
find_tweet<rapidjson>/manual_time                        1873448 ns      1941011 ns          374          26.708k           388.204M          7.071k        20.972k    5.19378M              8.22432           614.718       3.19271G          13.2812M                    21.0307                     2.55714            614.718    27.1699k   631.515k       321.471M/s    1027.47   8.97055k    5.3479M         8.46837    533.775/s 2.85458G/s     13.2819M               21.0318                2.48357          1        533.775/s [BEST: throughput=  0.39 GB/s doc_throughput=   614 docs/s instructions=    13281219 cycles=     5193783 branch_miss=   26708 cache_miss=    7071 cache_ref=     20972 items=         1 avg_time=   1873447 ns]
find_tweet<rapidjson_insitu>/manual_time                 1304768 ns      1369855 ns          583           23.84k           551.244M          2.762k         13.24k    3.65789M              5.79224           872.891       3.19294G            9.647M                     15.276                     2.63732            872.891    27.0456k   631.515k       461.584M/s   1.12565k   7.38866k   3.82031M         6.04943     766.42/s 2.92796G/s     9.64724M               15.2763                2.52525          1         766.42/s [BEST: throughput=  0.55 GB/s doc_throughput=   872 docs/s instructions=     9647004 cycles=     3657886 branch_miss=   23840 cache_miss=    2762 cache_ref=     13240 items=         1 avg_time=   1304767 ns]
