run_benchmark: v0.8.0~10 /home/jkeiser/simdjson_benchmark_results/v0.7.0/28/skylake-gcc10.2-native.json -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native
git reset --hard v0.8.0~10
HEAD is now at 84b0e844 fix function was exited without releasing (#1389)
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- git Version: v0.2.1-84b0e844
-- Version: 0.2.1
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 11
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
make[3]: Nothing to be done for '_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build'.
[ 72%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
make[3]: Nothing to be done for 'jsonexamples/generated/CMakeFiles/generated-data.dir/build'.
[ 72%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/g++-10  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/src  -march=native -O3 -DNDEBUG -fPIC   -pthread -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/g++-10 -fPIC -march=native -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.6 -o ../libsimdjson.so.6.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.6.0.0 ../libsimdjson.so.6 ../libsimdjson.so
[ 81%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
make[3]: Nothing to be done for 'dependencies/CMakeFiles/yyjson.dir/build'.
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/g++-10  -DRAPIDJSON_HAS_STDSTRING -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_COMPETITION_RAPIDJSON -DSIMDJSON_COMPETITION_YYJSON -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/rapidjson/include  -march=native -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/g++-10  -march=native -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.6.0.0 ../_deps/google_benchmarks/src/libbenchmark.a ../dependencies/libyyjson.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/28/skylake-gcc10.2-native.json --benchmark_out_format=json
2021-01-24 21:17:02
Running benchmark/bench_ondemand
Run on (4 X 4000 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 256 KiB (x4)
  L3 Unified 8192 KiB (x1)
Load Average: 1.00, 1.00, 1.00
simdjson::dom implementation:      haswell
simdjson::ondemand implementation: haswell

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                  258868 ns       287759 ns         2704           3.657k           2.45364G               0        92.964k    950.416k              1.50498          3.88532k       3.69267G          2.91501M                    4.61591                     3.06709           388.532k    3.78797k   631.515k       2.27199G/s     3.2696   92.8534k   955.406k         1.51288   3.86298k/s 3.69071G/s     2.91502M               4.61591                3.05107        100       386.298k/s [BEST: throughput=  2.45 GB/s doc_throughput=  3885 docs/s instructions=     2915015 cycles=      950416 branch_miss=    3657 cache_miss=       0 cache_ref=     92964 items=       100 avg_time=    258867 ns]
partial_tweets<simdjson_ondemand>/manual_time             178627 ns       207133 ns         3897           1.561k           3.56365G               0        58.732k    654.369k              1.03619          5.64302k       3.69262G          2.14231M                    3.39234                     3.27386           564.302k    1.67384k   631.515k       3.29258G/s  0.0890429   58.7491k   659.308k         1.04401   5.59826k/s 3.69098G/s     2.14231M               3.39234                3.24933        100       559.826k/s [BEST: throughput=  3.56 GB/s doc_throughput=  5643 docs/s instructions=     2142311 cycles=      654369 branch_miss=    1561 cache_miss=       0 cache_ref=     58732 items=       100 avg_time=    178626 ns]
partial_tweets<yyjson>/manual_time                        687962 ns       718804 ns         1013          10.101k           1.57655G             508        77.885k      1.479M              2.34199          2.49646k       3.69226G          2.90835M                    4.60536                     1.96643           249.646k     7.6379k   631.515k       875.426M/s    1039.19   51.5284k   1.69523M         2.68439   1.45357k/s 2.46414G/s     2.90884M               4.60613                1.71589        100       145.357k/s [BEST: throughput=  1.58 GB/s doc_throughput=  2496 docs/s instructions=     2908354 cycles=     1478999 branch_miss=   10101 cache_miss=     508 cache_ref=     77885 items=       100 avg_time=    687961 ns]
partial_tweets<yyjson_insitu>/manual_time                 479172 ns       508794 ns         1461           6.963k           1.77629G             637        48.085k    1.30643M              2.06872          2.81274k       3.67465G          2.90825M                    4.60519                      2.2261           281.274k    7.46907k   631.515k       1.22742G/s    139.142   33.4126k   1.42319M         2.25361   2.08693k/s  2.9701G/s     2.90851M                4.6056                2.04366        100       208.693k/s [BEST: throughput=  1.78 GB/s doc_throughput=  2812 docs/s instructions=     2908246 cycles=     1306429 branch_miss=    6963 cache_miss=     637 cache_ref=     48085 items=       100 avg_time=    479172 ns]
partial_tweets<rapidjson>/manual_time                    1668813 ns      1698219 ns          420           26.32k           430.693M         10.022k        55.145k    5.41282M              8.57116           681.999       3.69154G          13.1237M                    20.7814                     2.42457           68.1999k    26.2167k   631.515k       360.891M/s    492.676   34.1682k   5.57053M         8.82089    599.228/s 3.33802G/s     13.1245M               20.7825                2.35606        100       59.9228k/s [BEST: throughput=  0.43 GB/s doc_throughput=   681 docs/s instructions=    13123748 cycles=     5412819 branch_miss=   26320 cache_miss=   10022 cache_ref=     55145 items=       100 avg_time=   1668813 ns]
partial_tweets<rapidjson_insitu>/manual_time              974503 ns      1003544 ns          722          25.042k           737.158M              66        45.524k    3.16264M              5.00803          1.16728k       3.69171G          9.82437M                    15.5568                     3.10638           116.728k    25.0274k   631.515k       618.017M/s    206.565   35.0751k   3.25032M         5.14687    1026.16/s 3.33537G/s     9.82477M               15.5575                 3.0227        100       102.616k/s [BEST: throughput=  0.74 GB/s doc_throughput=  1167 docs/s instructions=     9824369 cycles=     3162645 branch_miss=   25042 cache_miss=      66 cache_ref=     45524 items=       100 avg_time=    974502 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                  96641446 ns    100042141 ns            7          866.94k           477.761M        11.0316M       15.6283M    355.184M              7.72159           10.3864       3.68908G          981.675M                    21.3413                     2.76385           10.3864M     867.36k   45.9988M       453.924M/s     11.08M   15.6265M   356.499M          7.7502    10.3475/s 3.68889G/s     981.675M               21.3413                2.75365      1000k       10.3475M/s [BEST: throughput=  0.48 GB/s doc_throughput=    10 docs/s instructions=   981674936 cycles=   355183855 branch_miss=  866940 cache_miss=11031558 cache_ref=  15628324 items=   1000000 avg_time=  96641446 ns]
large_random<simdjson_ondemand>/manual_time             59446371 ns     62811679 ns           12         892.184k           775.446M        5.72091M       8.09697M    218.846M              4.75764            16.858        3.6893G          643.053M                    13.9798                     2.93838            16.858M    892.388k   45.9988M        737.94M/s   5.74661M   8.09768M   219.295M         4.76741    16.8219/s 3.68895G/s     643.053M               13.9798                2.93236      1000k       16.8219M/s [BEST: throughput=  0.78 GB/s doc_throughput=    16 docs/s instructions=   643052685 cycles=   218845802 branch_miss=  892184 cache_miss= 5720906 cache_ref=   8096973 items=   1000000 avg_time=  59446371 ns]
large_random<simdjson_ondemand_unordered>/manual_time   62238493 ns     65608822 ns           11         865.855k           739.496M        5.72957M       8.09643M    229.461M              4.98841           16.0764       3.68891G          647.053M                    14.0667                     2.81988           16.0764M    865.782k   45.9988M       704.835M/s   5.75035M   8.09747M   229.592M         4.99126    16.0672/s 3.68891G/s     647.053M               14.0667                2.81827      1000k       16.0672M/s [BEST: throughput=  0.74 GB/s doc_throughput=    16 docs/s instructions=   647052689 cycles=   229460934 branch_miss=  865855 cache_miss= 5729566 cache_ref=   8096427 items=   1000000 avg_time=  62238492 ns]
large_random<yyjson>/manual_time                       127554736 ns    130993006 ns            5         662.417k           361.172M        6.01098M       9.27768M    350.662M              7.62329           7.85177       2.75332G           942.15M                    20.4821                     2.68678           7.85177M    661.686k   45.9988M       343.914M/s   6.01867M   9.29056M   350.917M         7.62883    7.83977/s 2.75111G/s     942.149M               20.4821                2.68482      1000k       7.83977M/s [BEST: throughput=  0.36 GB/s doc_throughput=     7 docs/s instructions=   942149594 cycles=   350661807 branch_miss=  662417 cache_miss= 6010982 cache_ref=   9277684 items=   1000000 avg_time= 127554736 ns]
large_random<yyjson_insitu>/manual_time                109466607 ns    112890042 ns            6         658.285k           420.414M        5.14694M       7.92393M    318.258M              6.91883           9.13967       2.90877G          936.029M                     20.349                      2.9411           9.13967M    661.711k   45.9988M       400.742M/s   5.14588M   7.92171M   318.483M         6.92373    9.13521/s 2.90941G/s     936.029M                20.349                2.93902      1000k       9.13521M/s [BEST: throughput=  0.42 GB/s doc_throughput=     9 docs/s instructions=   936028831 cycles=   318257560 branch_miss=  658285 cache_miss= 5146940 cache_ref=   7923925 items=   1000000 avg_time= 109466607 ns]
large_random<rapidjson>/manual_time                    178491962 ns    181922694 ns            4         610.251k           268.523M        7.08151M       10.9796M    574.164M              12.4822           5.83762       3.35175G          1.67014G                    36.3083                     2.90882           5.83762M    614.106k   45.9988M       245.769M/s   6.51611M   10.2163M   579.576M         12.5998    5.60249/s 3.24707G/s     1.67015G               36.3085                2.88167      1000k       5.60249M/s [BEST: throughput=  0.27 GB/s doc_throughput=     5 docs/s instructions=  1670138854 cycles=   574164033 branch_miss=  610251 cache_miss= 7081514 cache_ref=  10979577 items=   1000000 avg_time= 178491961 ns]
large_random<rapidjson_lossless>/manual_time           203256231 ns    206685762 ns            4         589.668k            234.48M         7.0718M       10.9938M    665.868M              14.4758           5.09753       3.39428G           2.0601G                    44.7861                     3.09386           5.09753M    590.152k   45.9988M       215.825M/s   6.50886M    10.235M   670.912M         14.5854     4.9199/s 3.30082G/s     2.06011G               44.7863                3.07061      1000k        4.9199M/s [BEST: throughput=  0.23 GB/s doc_throughput=     5 docs/s instructions=  2060103783 cycles=   665868440 branch_miss=  589668 cache_miss= 7071798 cache_ref=  10993789 items=   1000000 avg_time= 203256231 ns]
large_random<rapidjson_insitu>/manual_time             155935185 ns    159357683 ns            5         627.969k           309.952M        8.19294M       12.5712M    489.547M              10.6426           6.73827        3.2987G          1.50214G                    32.6561                     3.06842           6.73827M    615.582k   45.9988M       281.321M/s   7.60253M   11.7425M   494.897M         10.7589    6.41292/s 3.17373G/s     1.50215G               32.6563                3.03528      1000k       6.41292M/s [BEST: throughput=  0.31 GB/s doc_throughput=     6 docs/s instructions=  1502138704 cycles=   489547312 branch_miss=  627969 cache_miss= 8192938 cache_ref=  12571209 items=   1000000 avg_time= 155935184 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                        89140482 ns     99499375 ns            8         447.677k           1.54154G         16.077M       22.6702M    328.593M              2.39316           11.2271       3.68915G          938.041M                     6.8318                     2.85472           5.88625M    447.961k   137.305M       1.43454G/s   16.1245M   22.7328M   328.814M         2.39477    11.2182/s 3.68872G/s     938.041M                6.8318                 2.8528   524.288k       5.88159M/s [BEST: throughput=  1.54 GB/s doc_throughput=    11 docs/s instructions=   938040601 cycles=   328592540 branch_miss=  447677 cache_miss=16076980 cache_ref=  22670173 items=    524288 avg_time=  89140482 ns]
kostya<simdjson_ondemand>/manual_time                   60417146 ns     70742828 ns           12         470.558k           2.27768G        10.3113M       14.2278M    222.289M              1.61894           16.5885       3.68744G          677.141M                    4.93166                     3.04622           8.69714M    469.322k   137.305M       2.11654G/s    10.338M   14.2996M   222.864M         1.62313    16.5516/s 3.68876G/s     677.141M               4.93166                3.03835   524.288k        8.6778M/s [BEST: throughput=  2.28 GB/s doc_throughput=    16 docs/s instructions=   677141327 cycles=   222288993 branch_miss=  470558 cache_miss=10311326 cache_ref=  14227790 items=    524288 avg_time=  60417145 ns]
kostya<yyjson>/manual_time                             206803560 ns    217214852 ns            3         420.913k           664.467M        11.6784M       16.4909M    564.991M              4.11486           4.83935       2.73419G          984.045M                    7.16686                      1.7417           2.53721M    419.712k   137.305M       633.182M/s   11.6763M   16.4842M   564.923M         4.11437    4.83551/s 2.73169G/s     984.045M               7.16686                1.74191   524.288k        2.5352M/s [BEST: throughput=  0.66 GB/s doc_throughput=     4 docs/s instructions=   984045128 cycles=   564991292 branch_miss=  420913 cache_miss=11678371 cache_ref=  16490907 items=    524288 avg_time= 206803560 ns]
kostya<yyjson_insitu>/manual_time                      152109753 ns    162526387 ns            5         416.897k           902.969M        9.04392M        12.543M    466.758M              3.39943           6.57638       3.06958G          965.775M                     7.0338                     2.06911           3.44791M    417.411k   137.305M       860.854M/s   9.04451M   12.5768M   466.656M         3.39868     6.5742/s 3.06789G/s     965.775M                7.0338                2.06957   524.288k       3.44677M/s [BEST: throughput=  0.90 GB/s doc_throughput=     6 docs/s instructions=   965775454 cycles=   466758366 branch_miss=  416897 cache_miss= 9043921 cache_ref=  12542996 items=    524288 avg_time= 152109752 ns]
kostya<rapidjson>/manual_time                          260996005 ns    271434981 ns            3         966.947k           532.835M        8.33246M       12.3321M    869.334M              6.33141           3.88067        3.3736G          2.29617G                    16.7231                     2.64129           2.03459M    968.588k   137.305M        501.71M/s   8.02592M   11.9691M   872.072M         6.35135    3.83148/s 3.34132G/s     2.29617G               16.7231                  2.633   524.288k        2.0088M/s [BEST: throughput=  0.53 GB/s doc_throughput=     3 docs/s instructions=  2296165091 cycles=   869334188 branch_miss=  966947 cache_miss= 8332459 cache_ref=  12332105 items=    524288 avg_time= 260996004 ns]
kostya<rapidjson_lossless>/manual_time                 261659960 ns    272068014 ns            3         972.475k           531.361M        8.33512M       12.3753M    872.108M              6.35161           3.86993       3.37499G          2.51583G                     18.323                     2.88477           2.02896M    970.078k   137.305M       500.437M/s    8.0288M   11.9501M   874.605M          6.3698    3.82175/s 3.34252G/s     2.51583G                18.323                2.87654   524.288k        2.0037M/s [BEST: throughput=  0.53 GB/s doc_throughput=     3 docs/s instructions=  2515832562 cycles=   872107571 branch_miss=  972475 cache_miss= 8335121 cache_ref=  12375252 items=    524288 avg_time= 261659960 ns]
kostya<rapidjson_insitu>/manual_time                   217669766 ns    228093464 ns            3         1094.77k           640.371M        11.4918M       16.0805M    709.931M              5.17047           4.66386       3.31101G          2.04643G                    14.9043                     2.88258            2.4452M    1092.81k   137.305M       601.573M/s   11.1938M   15.7131M   712.424M         5.18862    4.59412/s 3.27296G/s     2.04643G               14.9043                2.87249   524.288k       2.40864M/s [BEST: throughput=  0.64 GB/s doc_throughput=     4 docs/s instructions=  2046430057 cycles=   709930794 branch_miss= 1094769 cache_miss=11491791 cache_ref=  16080477 items=    524288 avg_time= 217669766 ns]
distinct_user_id<simdjson_dom>/manual_time                257012 ns       288298 ns         2701           3.727k           2.47236G               0         93.62k    943.297k               1.4937          3.91497k       3.69298G          2.85594M                    4.52236                     3.02761           450.221k    3.89453k   631.515k       2.28839G/s   0.597556    93.475k   948.647k         1.50218   3.89086k/s 3.69105G/s     2.85594M               4.52236                3.01054        115       447.449k/s [BEST: throughput=  2.47 GB/s doc_throughput=  3914 docs/s instructions=     2855937 cycles=      943297 branch_miss=    3727 cache_miss=       0 cache_ref=     93620 items=       115 avg_time=    257012 ns]
distinct_user_id<simdjson_ondemand>/manual_time           181389 ns       211543 ns         3863           1.701k           3.57129G               0        56.136k    653.046k              1.03409          5.65512k       3.69305G          2.09843M                    3.32285                      3.2133           650.338k    1.83823k   631.515k       3.24245G/s   0.132022   56.1335k   669.558k         1.06024   5.51301k/s 3.69128G/s     2.09843M               3.32285                3.13406        115       633.997k/s [BEST: throughput=  3.57 GB/s doc_throughput=  5655 docs/s instructions=     2098432 cycles=      653046 branch_miss=    1701 cache_miss=       0 cache_ref=     56136 items=       115 avg_time=    181388 ns]
distinct_user_id<yyjson>/manual_time                      675772 ns       710423 ns         1215          10.126k           1.58213G             556        78.365k    1.47391M              2.33393          2.50529k       3.69258G          2.87342M                    4.55004                     1.94952           288.109k    7.75404k   631.515k       891.217M/s   1.10067k   50.2502k   1.68744M         2.67204   1.47979k/s 2.49705G/s     2.87402M                 4.551                1.70319        115       170.176k/s [BEST: throughput=  1.58 GB/s doc_throughput=  2505 docs/s instructions=     2873417 cycles=     1473910 branch_miss=   10126 cache_miss=     556 cache_ref=     78365 items=       115 avg_time=    675772 ns]
distinct_user_id<yyjson_insitu>/manual_time               472978 ns       506346 ns         1480           7.085k            1.7917G             385         46.63k    1.29808M               2.0555          2.83715k       3.68285G          2.87322M                    4.54973                     2.21344           326.273k    7.59425k   631.515k       1.24349G/s    59.7453   32.0768k   1.41274M         2.23707   2.11426k/s 2.98691G/s     2.87348M               4.55014                2.03397        115        243.14k/s [BEST: throughput=  1.79 GB/s doc_throughput=  2837 docs/s instructions=     2873222 cycles=     1298079 branch_miss=    7085 cache_miss=     385 cache_ref=     46630 items=       115 avg_time=    472978 ns]
distinct_user_id<rapidjson>/manual_time                  1646973 ns      1677804 ns          426          25.818k           432.628M          9.094k        55.036k    5.38868M              8.53293           685.064       3.69159G          13.0651M                    20.6886                     2.42456           78.7824k    26.1509k   631.515k       365.677M/s     1.959k   35.7528k   5.54721M         8.78398    607.175/s 3.36813G/s     13.0658M               20.6897                2.35539        115       69.8251k/s [BEST: throughput=  0.43 GB/s doc_throughput=   685 docs/s instructions=    13065144 cycles=     5388676 branch_miss=   25818 cache_miss=    9094 cache_ref=     55036 items=       115 avg_time=   1646972 ns]
distinct_user_id<rapidjson_insitu>/manual_time            953939 ns       984367 ns          766          24.705k            740.93M           2.74k        45.193k    3.14658M               4.9826          1.17326k       3.69176G          9.77592M                    15.4801                     3.10684           134.925k    24.9881k   631.515k        631.34M/s   1.69461k   36.0737k   3.22756M         5.11082    1048.28/s  3.3834G/s     9.77617M               15.4805                3.02897        115       120.553k/s [BEST: throughput=  0.74 GB/s doc_throughput=  1173 docs/s instructions=     9775922 cycles=     3146584 branch_miss=   24705 cache_miss=    2740 cache_ref=     45193 items=       115 avg_time=    953939 ns]
find_tweet<simdjson_dom>/manual_time                      245890 ns       275142 ns         2848           3.445k           2.58409G              15         83.24k    902.446k              1.42902          4.09189k       3.69271G           2.7749M                    4.39404                     3.07487           4.09189k    3.61571k   631.515k        2.3919G/s    10.7444   82.9219k   907.553k          1.4371   4.06687k/s  3.6909G/s      2.7749M               4.39404                3.05756          1       4.06687k/s [BEST: throughput=  2.58 GB/s doc_throughput=  4091 docs/s instructions=     2774900 cycles=      902446 branch_miss=    3445 cache_miss=      15 cache_ref=     83240 items=         1 avg_time=    245889 ns]
find_tweet<simdjson_ondemand>/manual_time                 117290 ns       145833 ns         5968              647           5.40514G               0        31.785k    431.571k              0.68339          8.55901k       3.69382G          1.47888M                     2.3418                     3.42673           8.55901k     689.486   631.515k       5.01446G/s  0.0382038   31.9753k    433.01k        0.685669    8.5259k/s  3.6918G/s     1.47888M                2.3418                3.41535          1        8.5259k/s [BEST: throughput=  5.41 GB/s doc_throughput=  8559 docs/s instructions=     1478879 cycles=      431571 branch_miss=     647 cache_miss=       0 cache_ref=     31785 items=         1 avg_time=    117289 ns]
find_tweet<yyjson>/manual_time                            664544 ns       695616 ns         1118           9.343k           1.64211G             206        69.935k    1.42005M              2.24864          2.60027k       3.69251G          2.82413M                    4.47199                     1.98876           2.60027k    7.52925k   631.515k       906.276M/s    1071.99   41.5083k   1.65181M         2.61563   1.50479k/s 2.48563G/s     2.82462M               4.47276                1.71001          1       1.50479k/s [BEST: throughput=  1.64 GB/s doc_throughput=  2600 docs/s instructions=     2824130 cycles=     1420047 branch_miss=    9343 cache_miss=     206 cache_ref=     69935 items=         1 avg_time=    664543 ns]
find_tweet<yyjson_insitu>/manual_time                     463099 ns       493466 ns         1512           6.845k           1.84146G             525        38.264k    1.26272M              1.99951          2.91594k       3.68201G          2.82381M                    4.47149                      2.2363           2.91594k    7.34721k   631.515k       1.27002G/s     15.295   23.3596k    1.3769M         2.18032   2.15937k/s 2.97324G/s     2.82408M               4.47191                2.05104          1       2.15937k/s [BEST: throughput=  1.84 GB/s doc_throughput=  2915 docs/s instructions=     2823814 cycles=     1262718 branch_miss=    6845 cache_miss=     525 cache_ref=     38264 items=         1 avg_time=    463098 ns]
find_tweet<rapidjson>/manual_time                        1640793 ns      1669609 ns          428          25.837k           434.311M         14.901k        48.336k     5.3678M              8.49988           687.729       3.69159G          12.9964M                    20.5798                     2.42118            687.729    26.2033k   631.515k       367.054M/s   1.60041k   28.2799k   5.52262M         8.74504    609.461/s 3.36583G/s     12.9973M               20.5811                2.35346          1        609.461/s [BEST: throughput=  0.43 GB/s doc_throughput=   687 docs/s instructions=    12996429 cycles=     5367802 branch_miss=   25837 cache_miss=   14901 cache_ref=     48336 items=         1 avg_time=   1640793 ns]
find_tweet<rapidjson_insitu>/manual_time                  946421 ns       976321 ns          777          25.038k           746.835M              13        35.906k    3.12171M              4.94321          1.18261k       3.69176G          9.71794M                    15.3883                     3.11302           1.18261k    24.9354k   631.515k       636.355M/s   1.52445k   26.7681k   3.19832M         5.06453    1056.61/s 3.37939G/s      9.7185M               15.3892                3.03862          1        1056.61/s [BEST: throughput=  0.75 GB/s doc_throughput=  1182 docs/s instructions=     9717937 cycles=     3121711 branch_miss=   25038 cache_miss=      13 cache_ref=     35906 items=         1 avg_time=    946420 ns]
