run_benchmark: v0.8.0~10 /home/jkeiser/simdjson_benchmark_results/v0.7.0/28/skylake-gcc10.2.json 
git reset --hard v0.8.0~10
HEAD is now at 84b0e844 fix function was exited without releasing (#1389)
cmake ..
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- git Version: v0.2.1-84b0e844
-- Version: 0.2.1
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
make[1]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[2]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 72%] Built target benchmark
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 72%] Built target generated-data
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
Scanning dependencies of target simdjson
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 72%] Building CXX object src/CMakeFiles/simdjson.dir/simdjson.cpp.o
[ 81%] Linking CXX shared library ../libsimdjson.so
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 81%] Built target simdjson
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 90%] Built target yyjson
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
Scanning dependencies of target bench_ondemand
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 90%] Building CXX object benchmark/CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o
[100%] Linking CXX executable bench_ondemand
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[100%] Built target bench_ondemand
make[2]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[1]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/28/skylake-gcc10.2.json --benchmark_out_format=json
2021-01-23 04:48:11
Running benchmark/bench_ondemand
Run on (4 X 4000 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 256 KiB (x4)
  L3 Unified 8192 KiB (x1)
Load Average: 1.00, 1.00, 0.97
simdjson::dom implementation:      haswell
simdjson::ondemand implementation: fallback

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
partial_tweets<simdjson_dom>/manual_time                  262328 ns       291026 ns         2663           3.872k           2.42166G               0         93.51k     962.96k              1.52484          3.83468k       3.69264G          2.96251M                    4.69111                     3.07646           383.468k    3.96539k   631.515k       2.24202G/s    1.42396   93.4415k   968.167k         1.53309   3.81202k/s 3.69067G/s     2.96251M               4.69111                3.05991        100       381.202k/s [BEST: throughput=  2.42 GB/s doc_throughput=  3834 docs/s instructions=     2962505 cycles=      962960 branch_miss=    3872 cache_miss=       0 cache_ref=     93510 items=       100 avg_time=    262328 ns]
partial_tweets<simdjson_ondemand>/manual_time             201190 ns       229678 ns         3463           2.229k           3.16822G               0        59.525k    736.126k              1.16565          5.01686k       3.69304G          2.46247M                    3.89931                     3.34518           501.686k    2.34103k   631.515k       2.92333G/s   0.177303   59.4699k   742.594k         1.17589   4.97043k/s 3.69101G/s     2.46247M               3.89931                3.31604        100       497.043k/s [BEST: throughput=  3.17 GB/s doc_throughput=  5016 docs/s instructions=     2462472 cycles=      736126 branch_miss=    2229 cache_miss=       0 cache_ref=     59525 items=       100 avg_time=    201190 ns]
partial_tweets<yyjson>/manual_time                        698127 ns       729523 ns         1009           9.942k           1.57269G             553        79.696k    1.48277M              2.34796          2.49035k       3.69262G          2.90835M                    4.60536                     1.96143           249.035k    7.71378k   631.515k        862.68M/s    941.622   51.4274k   1.70724M         2.70341    1.4324k/s 2.44546G/s     2.90884M               4.60613                1.70382        100        143.24k/s [BEST: throughput=  1.57 GB/s doc_throughput=  2490 docs/s instructions=     2908354 cycles=     1482772 branch_miss=    9942 cache_miss=     553 cache_ref=     79696 items=       100 avg_time=    698126 ns]
partial_tweets<yyjson_insitu>/manual_time                 483172 ns       512735 ns         1448           6.979k           1.77172G             765        48.264k    1.30982M               2.0741          2.80551k       3.67473G          2.90825M                    4.60519                     2.22033           280.551k    7.55112k   631.515k       1.21726G/s    154.769   33.5699k   1.43634M         2.27443   2.06966k/s 2.97273G/s     2.90851M                4.6056                2.02495        100       206.966k/s [BEST: throughput=  1.77 GB/s doc_throughput=  2805 docs/s instructions=     2908246 cycles=     1309824 branch_miss=    6979 cache_miss=     765 cache_ref=     48264 items=       100 avg_time=    483171 ns]
partial_tweets<rapidjson>/manual_time                    1628618 ns      1657847 ns          431          26.973k            443.87M             780        54.481k    5.23962M              8.29691           702.865       3.68275G          13.4091M                    21.2332                     2.55918           70.2865k    27.4289k   631.515k       369.798M/s    503.893   35.0699k   5.42214M         8.58593    614.017/s 3.32929G/s     13.4101M               21.2347                 2.4732        100       61.4017k/s [BEST: throughput=  0.44 GB/s doc_throughput=   702 docs/s instructions=    13409109 cycles=     5239620 branch_miss=   26973 cache_miss=     780 cache_ref=     54481 items=       100 avg_time=   1628618 ns]
partial_tweets<rapidjson_insitu>/manual_time             1128751 ns      1157945 ns          623          23.938k           624.782M              47        45.565k    3.73149M               5.9088           989.339       3.69171G          9.75512M                    15.4472                     2.61427           98.9339k     24.265k   631.515k       533.563M/s    223.443   35.5919k   3.82045M         6.04965    885.935/s 3.38467G/s     9.75552M               15.4478                 2.5535        100       88.5935k/s [BEST: throughput=  0.62 GB/s doc_throughput=   989 docs/s instructions=     9755121 cycles=     3731495 branch_miss=   23938 cache_miss=      47 cache_ref=     45565 items=       100 avg_time=   1128750 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                  91980519 ns     95386512 ns            8         865.746k           502.193M        11.0349M       15.6019M    337.906M              7.34598           10.9175        3.6891G          983.113M                    21.3726                     2.90943           10.9175M    868.522k   45.9988M       476.925M/s   11.0844M   15.6023M   339.309M         7.37648    10.8719/s 3.68892G/s     983.113M               21.3726                 2.8974      1000k       10.8719M/s [BEST: throughput=  0.50 GB/s doc_throughput=    10 docs/s instructions=   983112680 cycles=   337906088 branch_miss=  865746 cache_miss=11034905 cache_ref=  15601937 items=   1000000 avg_time=  91980519 ns]
large_random<simdjson_ondemand>/manual_time             58864158 ns     62226563 ns           12         1006.34k           783.128M        5.81892M       8.09234M    216.565M              4.70807            17.025       3.68702G           641.49M                    13.9458                     2.96211            17.025M    1049.32k   45.9988M       745.239M/s    5.7317M   8.09004M   217.148M         4.72073    16.9883/s 3.68896G/s      641.49M               13.9458                2.95417      1000k       16.9883M/s [BEST: throughput=  0.78 GB/s doc_throughput=    17 docs/s instructions=   641489867 cycles=   216565365 branch_miss= 1006335 cache_miss= 5818924 cache_ref=   8092340 items=   1000000 avg_time=  58864157 ns]
large_random<simdjson_ondemand_unordered>/manual_time   62707319 ns     66080523 ns           11         867.649k           734.397M        5.72389M        8.0923M     231.04M              5.02274           15.9656       3.68868G           645.49M                    14.0328                     2.79385           15.9656M    871.003k   45.9988M       699.565M/s   5.73325M   8.09158M   231.325M         5.02895    15.9471/s 3.68897G/s      645.49M               14.0328                 2.7904      1000k       15.9471M/s [BEST: throughput=  0.73 GB/s doc_throughput=    15 docs/s instructions=   645489871 cycles=   231039971 branch_miss=  867649 cache_miss= 5723890 cache_ref=   8092295 items=   1000000 avg_time=  62707318 ns]
large_random<yyjson>/manual_time                       127401727 ns    130836798 ns            5         664.188k           361.639M        6.01559M       9.28038M    350.174M              7.61268           7.86193       2.75304G          944.149M                    20.5255                     2.69623           7.86193M    663.416k   45.9988M       344.327M/s   6.01219M   9.27069M   350.207M          7.6134    7.84919/s 2.74884G/s     944.149M               20.5255                2.69597      1000k       7.84919M/s [BEST: throughput=  0.36 GB/s doc_throughput=     7 docs/s instructions=   944149391 cycles=   350173777 branch_miss=  664188 cache_miss= 6015592 cache_ref=   9280384 items=   1000000 avg_time= 127401726 ns]
large_random<yyjson_insitu>/manual_time                109411317 ns    112842912 ns            6         662.499k           420.679M        5.13525M       7.91894M    318.484M              6.92374           9.14544       2.91267G          938.029M                    20.3925                      2.9453           9.14544M    663.089k   45.9988M       400.944M/s   5.12352M   7.91323M   318.544M         6.92505    9.13982/s 2.91143G/s     938.029M               20.3925                2.94474      1000k       9.13982M/s [BEST: throughput=  0.42 GB/s doc_throughput=     9 docs/s instructions=   938028829 cycles=   318483759 branch_miss=  662499 cache_miss= 5135248 cache_ref=   7918942 items=   1000000 avg_time= 109411316 ns]
large_random<rapidjson>/manual_time                    169051945 ns    172482723 ns            4         588.833k           283.983M        7.08085M        10.942M    539.767M              11.7344           6.17371       3.33236G          1.65714G                    36.0258                      3.0701           6.17371M    589.132k   45.9988M       259.493M/s   6.51856M   10.2053M   544.841M         11.8447    5.91534/s 3.22292G/s     1.65715G                36.026                3.04153      1000k       5.91534M/s [BEST: throughput=  0.28 GB/s doc_throughput=     6 docs/s instructions=  1657141469 cycles=   539767121 branch_miss=  588833 cache_miss= 7080853 cache_ref=  10941959 items=   1000000 avg_time= 169051945 ns]
large_random<rapidjson_lossless>/manual_time           197261411 ns    200692989 ns            4         587.856k           241.565M        7.08382M       10.9381M    644.521M              14.0117           5.25155       3.38474G          2.00811G                    43.6557                     3.11566           5.25155M    589.078k   45.9988M       222.384M/s   6.51914M   10.2065M     648.7M         14.1025    5.06942/s 3.28853G/s     2.00812G                43.656                3.09561      1000k       5.06942M/s [BEST: throughput=  0.24 GB/s doc_throughput=     5 docs/s instructions=  2008110860 cycles=   644521487 branch_miss=  587856 cache_miss= 7083817 cache_ref=  10938074 items=   1000000 avg_time= 197261411 ns]
large_random<rapidjson_insitu>/manual_time             155505276 ns    158928781 ns            5         587.467k           311.188M        8.26058M       12.5145M    487.682M              10.6021           6.76514       3.29923G          1.49214G                    32.4387                     3.05966           6.76514M    587.208k   45.9988M       282.099M/s   7.62653M   11.7233M   493.602M         10.7308    6.43065/s 3.17418G/s     1.49215G               32.4389                3.02298      1000k       6.43065M/s [BEST: throughput=  0.31 GB/s doc_throughput=     6 docs/s instructions=  1492138963 cycles=   487681714 branch_miss=  587467 cache_miss= 8260581 cache_ref=  12514550 items=   1000000 avg_time= 155505276 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                        85670478 ns     96050669 ns            8         461.574k           1.60553G          15.97M       22.5674M    315.488M              2.29772           11.6932       3.68906G          945.501M                    6.88614                     2.99695            6.1306M    461.094k   137.305M       1.49264G/s   15.9936M   22.5978M   316.028M         2.30165    11.6726/s 3.68888G/s     945.501M               6.88614                2.99183   524.288k       6.11982M/s [BEST: throughput=  1.61 GB/s doc_throughput=    11 docs/s instructions=   945501380 cycles=   315488199 branch_miss=  461574 cache_miss=15970009 cache_ref=  22567425 items=    524288 avg_time=  85670478 ns]
kostya<simdjson_ondemand>/manual_time                   58567305 ns     68902485 ns           12         473.446k           2.34726G        10.2466M       14.2318M    215.794M              1.57164           17.0953       3.68905G          676.738M                    4.92872                     3.13604           8.96284M    474.212k   137.305M       2.18339G/s   10.2622M   14.1782M   216.048M         1.57349    17.0744/s 3.68889G/s     676.738M               4.92872                3.13235   524.288k       8.95189M/s [BEST: throughput=  2.35 GB/s doc_throughput=    17 docs/s instructions=   676737574 cycles=   215793611 branch_miss=  473446 cache_miss=10246640 cache_ref=  14231824 items=    524288 avg_time=  58567304 ns]
kostya<yyjson>/manual_time                             205314061 ns    215709640 ns            3         417.016k           669.357M        11.7733M       16.6906M    560.079M              4.07909           4.87497       2.73037G          984.045M                    7.16686                     1.75697           2.55589M    416.263k   137.305M       637.775M/s   11.7748M    16.659M    560.07M         4.07902    4.87059/s 2.72787G/s     984.045M               7.16686                  1.757   524.288k       2.55359M/s [BEST: throughput=  0.67 GB/s doc_throughput=     4 docs/s instructions=   984045125 cycles=   560079261 branch_miss=  417016 cache_miss=11773322 cache_ref=  16690618 items=    524288 avg_time= 205314060 ns]
kostya<yyjson_insitu>/manual_time                      152328085 ns    162727779 ns            5         414.739k           901.564M        9.07573M       12.5467M    467.153M               3.4023           6.56614       3.06739G          965.775M                     7.0338                     2.06736           3.44255M    414.896k   137.305M        859.62M/s   9.07765M   12.5224M   467.264M         3.40311    6.56478/s 3.06749G/s     965.775M                7.0338                2.06687   524.288k       3.44183M/s [BEST: throughput=  0.90 GB/s doc_throughput=     6 docs/s instructions=   965775245 cycles=   467153070 branch_miss=  414739 cache_miss= 9075732 cache_ref=  12546662 items=    524288 avg_time= 152328085 ns]
kostya<rapidjson>/manual_time                          244437891 ns    254838575 ns            3         967.234k           569.367M        8.38327M       12.2468M    808.351M              5.88727           4.14673       3.35201G          2.29716G                    16.7303                     2.84178           2.17408M    967.219k   137.305M       535.695M/s   8.07779M   11.8859M   810.927M         5.90602    4.09102/s 3.31752G/s     2.29716G               16.7303                2.83276   524.288k       2.14487M/s [BEST: throughput=  0.57 GB/s doc_throughput=     4 docs/s instructions=  2297155886 cycles=   808351273 branch_miss=  967234 cache_miss= 8383275 cache_ref=  12246829 items=    524288 avg_time= 244437891 ns]
kostya<rapidjson_lossless>/manual_time                 258309270 ns    268723263 ns            3         1012.53k           538.826M        8.37787M       12.2959M    858.635M              6.25349            3.9243       3.36954G          2.49743G                    18.1889                      2.9086           2.05746M    1017.52k   137.305M       506.928M/s   8.07681M   11.9404M    861.96M          6.2777    3.87133/s 3.33693G/s     2.49743G               18.1889                2.89738   524.288k       2.02969M/s [BEST: throughput=  0.54 GB/s doc_throughput=     3 docs/s instructions=  2497425988 cycles=   858634903 branch_miss= 1012531 cache_miss= 8377866 cache_ref=  12295914 items=    524288 avg_time= 258309270 ns]
kostya<rapidjson_insitu>/manual_time                   219370961 ns    229770012 ns            3         1014.36k           635.301M        11.5464M       16.1459M    716.296M              5.21683           4.62693       3.31425G          2.03227G                    14.8012                      2.8372           2.42584M    1016.34k   137.305M       596.908M/s   11.2506M   15.7635M   718.716M         5.23445    4.55849/s 3.27626G/s     2.03228G               14.8012                2.82765   524.288k       2.38996M/s [BEST: throughput=  0.64 GB/s doc_throughput=     4 docs/s instructions=  2032274420 cycles=   716296356 branch_miss= 1014360 cache_miss=11546433 cache_ref=  16145928 items=    524288 avg_time= 219370961 ns]
distinct_user_id<simdjson_dom>/manual_time                260251 ns       291228 ns         2690           4.006k           2.44269G               0        94.024k    954.652k              1.51169          3.86798k       3.69257G          2.90343M                    4.59756                     3.04135           444.817k    4.18971k   631.515k       2.25991G/s    2.66803   94.1682k   960.482k         1.52092   3.84244k/s  3.6906G/s     2.90343M               4.59756                3.02289        115       441.881k/s [BEST: throughput=  2.44 GB/s doc_throughput=  3867 docs/s instructions=     2903428 cycles=      954652 branch_miss=    4006 cache_miss=       0 cache_ref=     94024 items=       115 avg_time=    260251 ns]
distinct_user_id<simdjson_ondemand>/manual_time           171089 ns       201011 ns         4089           1.701k           3.72143G               0        56.645k     626.64k              0.99228          5.89286k        3.6927G          2.11935M                    3.35598                     3.38209           677.678k    1.87919k   631.515k       3.43765G/s   0.175348   56.5711k   631.517k               1   5.84491k/s 3.69117G/s     2.11935M               3.35598                3.35597        115       672.165k/s [BEST: throughput=  3.72 GB/s doc_throughput=  5892 docs/s instructions=     2119353 cycles=      626640 branch_miss=    1701 cache_miss=       0 cache_ref=     56645 items=       115 avg_time=    171088 ns]
distinct_user_id<yyjson>/manual_time                      680726 ns       715456 ns         1205          10.115k            1.5451G             394        76.261k     1.4715M              2.33011          2.44665k       3.60024G          2.87342M                    4.55005                     1.95272           281.365k    7.86626k   631.515k       884.731M/s   1.10203k   50.3443k   1.70098M          2.6935   1.46902k/s 2.49878G/s     2.87382M               4.55068                1.68951        115       168.937k/s [BEST: throughput=  1.55 GB/s doc_throughput=  2446 docs/s instructions=     2873422 cycles=     1471498 branch_miss=   10115 cache_miss=     394 cache_ref=     76261 items=       115 avg_time=    680725 ns]
distinct_user_id<yyjson_insitu>/manual_time               477876 ns       511200 ns         1463           7.276k           1.78073G             404        46.519k    1.30596M              2.06798          2.81978k       3.68252G          2.87322M                    4.54973                     2.20008           324.274k    7.69525k   631.515k       1.23075G/s    59.7327   32.2326k   1.42674M         2.25923   2.09259k/s 2.98559G/s     2.87349M               4.55015                2.01402        115       240.648k/s [BEST: throughput=  1.78 GB/s doc_throughput=  2819 docs/s instructions=     2873224 cycles=     1305961 branch_miss=    7276 cache_miss=     404 cache_ref=     46519 items=       115 avg_time=    477875 ns]
distinct_user_id<rapidjson>/manual_time                  1604174 ns      1635235 ns          438          27.142k           446.991M              87        54.505k    5.21565M              8.25894           707.808       3.69168G          13.3497M                    21.1391                     2.55955           81.3979k     27.319k   631.515k       375.433M/s   1.91236k   36.2157k   5.38892M         8.53331    623.374/s 3.35931G/s     13.3506M               21.1406                2.47742        115        71.688k/s [BEST: throughput=  0.45 GB/s doc_throughput=   707 docs/s instructions=    13349686 cycles=     5215647 branch_miss=   27142 cache_miss=      87 cache_ref=     54505 items=       115 avg_time=   1604174 ns]
distinct_user_id<rapidjson_insitu>/manual_time           1106398 ns      1137038 ns          669          23.532k           629.022M              30        44.919k    3.70627M              5.86886           996.052       3.69164G          9.70529M                    15.3683                     2.61861           114.546k     24.166k   631.515k       544.343M/s   1.93992k   36.2618k   3.79525M         6.00975    903.834/s 3.43028G/s     9.70563M               15.3688                2.55731        115       103.941k/s [BEST: throughput=  0.63 GB/s doc_throughput=   996 docs/s instructions=     9705289 cycles=     3706272 branch_miss=   23532 cache_miss=      30 cache_ref=     44919 items=       115 avg_time=   1106397 ns]
find_tweet<simdjson_dom>/manual_time                      247375 ns       276562 ns         2830           3.621k            2.5737G               2         83.65k    906.006k              1.43465          4.07544k       3.69238G          2.82239M                    4.46923                      3.1152           4.07544k    3.82628k   631.515k       2.37754G/s   0.369965   83.5527k   912.752k         1.44534   4.04244k/s 3.68974G/s     2.82239M               4.46923                3.09218          1       4.04244k/s [BEST: throughput=  2.57 GB/s doc_throughput=  4075 docs/s instructions=     2822388 cycles=      906006 branch_miss=    3621 cache_miss=       2 cache_ref=     83650 items=         1 avg_time=    247375 ns]
find_tweet<simdjson_ondemand>/manual_time                 116992 ns       145511 ns         5982              934           5.42595G               0        32.855k    429.855k             0.680673          8.59195k       3.69329G          1.50674M                    2.38591                     3.50522           8.59195k     999.496   631.515k       5.02723G/s   0.219325   32.7186k   431.835k        0.683807   8.54761k/s 3.69115G/s     1.50674M               2.38591                3.48915          1       8.54761k/s [BEST: throughput=  5.43 GB/s doc_throughput=  8591 docs/s instructions=     1506737 cycles=      429855 branch_miss=     934 cache_miss=       0 cache_ref=     32855 items=         1 avg_time=    116991 ns]
find_tweet<yyjson>/manual_time                            669538 ns       700531 ns         1141           9.506k            1.6377G             305        68.126k    1.42392M              2.25477          2.59329k       3.69264G          2.82414M                      4.472                     1.98335           2.59329k    7.61579k   631.515k       899.516M/s    1042.03   41.5387k   1.66473M         2.63609   1.49357k/s 2.48639G/s     2.82462M               4.47277                1.69674          1       1.49357k/s [BEST: throughput=  1.64 GB/s doc_throughput=  2593 docs/s instructions=     2824137 cycles=     1423924 branch_miss=    9506 cache_miss=     305 cache_ref=     68126 items=         1 avg_time=    669537 ns]
find_tweet<yyjson_insitu>/manual_time                     468128 ns       498598 ns         1495           7.043k           1.82993G             596         38.31k    1.27083M              2.01236          2.89768k       3.68247G          2.82402M                    4.47182                     2.22218           2.89768k    7.46011k   631.515k       1.25637G/s    16.4395   23.5747k   1.39089M         2.20247   2.13617k/s 2.97118G/s     2.82428M               4.47224                2.03055          1       2.13617k/s [BEST: throughput=  1.83 GB/s doc_throughput=  2897 docs/s instructions=     2824021 cycles=     1270835 branch_miss=    7043 cache_miss=     596 cache_ref=     38310 items=         1 avg_time=    468128 ns]
find_tweet<rapidjson>/manual_time                        1594823 ns      1624089 ns          440           26.41k           449.352M         12.627k         47.87k    5.18811M              8.21535           711.546       3.69158G          13.2815M                    21.0311                     2.55998            711.546     27.255k   631.515k       377.634M/s    1.5615k     28.71k   5.35432M         8.47854    627.029/s 3.35731G/s     13.2821M               21.0321                2.48063          1        627.029/s [BEST: throughput=  0.45 GB/s doc_throughput=   711 docs/s instructions=    13281456 cycles=     5188114 branch_miss=   26410 cache_miss=   12627 cache_ref=     47870 items=         1 avg_time=   1594823 ns]
find_tweet<rapidjson_insitu>/manual_time                 1097607 ns      1127596 ns          679          23.362k           635.406M          2.345k        36.127k    3.66912M              5.81003           1006.16       3.69173G          9.64709M                    15.2761                     2.62927            1006.16    24.0209k   631.515k       548.702M/s   1.75931k   27.5826k   3.76222M         5.95746    911.073/s 3.42766G/s     9.64742M               15.2766                2.56429          1        911.073/s [BEST: throughput=  0.64 GB/s doc_throughput=  1006 docs/s instructions=     9647092 cycles=     3669119 branch_miss=   23362 cache_miss=    2345 cache_ref=     36127 items=         1 avg_time=   1097607 ns]
