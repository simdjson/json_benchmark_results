run_benchmark: v0.8.0~29 /home/jkeiser/simdjson_benchmark_results/v0.7.0/9/skylake-x-gcc10.2-native.json -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native
git reset --hard v0.8.0~29
HEAD is now at 5f92cd2b Merge pull request #1349 from simdjson/dlemire/prune_validate_utf8
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- git Version: v0.2.1-5f92cd2b
-- Version: 0.2.1
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 11
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
make[3]: Nothing to be done for '_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build'.
[ 72%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
make[3]: Nothing to be done for 'jsonexamples/generated/CMakeFiles/generated-data.dir/build'.
[ 81%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
make[3]: Nothing to be done for 'src/CMakeFiles/simdjson.dir/build'.
[ 90%] Built target simdjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
make[3]: Nothing to be done for 'benchmark/CMakeFiles/bench_ondemand.dir/build'.
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/9/skylake-x-gcc10.2-native.json --benchmark_out_format=json
2021-01-24 23:44:07
Running benchmark/bench_ondemand
Run on (4 X 3200 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 1024 KiB (x4)
  L3 Unified 8448 KiB (x1)
Load Average: 1.00, 1.00, 1.00
***WARNING*** CPU scaling is enabled, the benchmark real time measurements may be noisy and will incur extra overhead.
On Demand implementation: haswell
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Benchmark                         Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
PartialTweets<OnDemand>      229573 ns       229570 ns         3046           2.272k           2.97156G               0         5.461k    678.626k               1.0746          4.70544k       3.19323G          2.23696M                    3.54222                     3.29631           470.544k     2.4572k   631.515k       2.56194G/s   3.93959m   5.23577k   685.275k         1.08513   4.35598k/s 2.98504G/s     2.23696M               3.54222                3.26433        100       435.598k/s [best: throughput=  2.97 GB/s doc_throughput=  4705 docs/s instructions=     2236963 cycles=      678626 branch_miss=    2272 cache_miss=       0 cache_ref=      5461 items=       100 avg_time=    214744 ns]
PartialTweets<Dom>           340826 ns       340823 ns         2053           3.747k           1.96052G               0        32.155k    1028.64k              1.62884          3.10447k       3.19337G          3.07043M                    4.86201                     2.98495           310.447k     3.8843k   631.515k       1.72566G/s    2.70093   32.3052k   1035.08k         1.63904   2.93407k/s   3.037G/s     3.07043M               4.86201                2.96638        100       293.407k/s [best: throughput=  1.96 GB/s doc_throughput=  3104 docs/s instructions=     3070434 cycles=     1028637 branch_miss=    3747 cache_miss=       0 cache_ref=     32155 items=       100 avg_time=    324466 ns]
Creating a source file spanning 44921 KB 
LargeRandom<Dom>           99504995 ns     99502081 ns            7         854.832k           462.633M        6.85156M        6.8948M    316.942M              6.89023           10.0575       3.18765G          989.581M                    21.5132                     3.12228           10.0575M    856.356k   45.9988M       440.874M/s   6.81146M   6.89481M   317.158M         6.89491      10.05/s 3.18745G/s     989.581M               21.5132                3.12016      1000k         10.05M/s [best: throughput=  0.46 GB/s doc_throughput=    10 docs/s instructions=   989581014 cycles=   316942295 branch_miss=  854832 cache_miss= 6851562 cache_ref=   6894805 items=   1000000 avg_time=  99478216 ns]
LargeRandomSum<Dom>        98884209 ns     98883262 ns            7         856.865k           466.087M        6.41525M       6.51971M     314.66M              6.84061           10.1326       3.18832G          994.581M                    21.6219                     3.16082           10.1326M    855.238k   45.9988M       443.633M/s   6.42575M   6.51963M   315.182M         6.85196    10.1129/s 3.18741G/s     994.581M               21.6219                3.15558      1000k       10.1129M/s [best: throughput=  0.47 GB/s doc_throughput=    10 docs/s instructions=   994581028 cycles=   314659602 branch_miss=  856865 cache_miss= 6415254 cache_ref=   6519712 items=   1000000 avg_time=  98856875 ns]
LargeRandom<OnDemand>      69049113 ns     69045781 ns           10         863.438k            668.33M         3.4402M       3.57276M     219.46M              4.77099           14.5293        3.1886G          666.959M                    14.4995                     3.03909           14.5293M    864.247k   45.9988M       635.344M/s    3.4909M   3.57272M   220.061M         4.78406    14.4831/s 3.18717G/s     666.959M               14.4995                3.03079      1000k       14.4831M/s [best: throughput=  0.67 GB/s doc_throughput=    14 docs/s instructions=   666958640 cycles=   219459793 branch_miss=  863438 cache_miss= 3440201 cache_ref=   3572762 items=   1000000 avg_time=  69022214 ns]
LargeRandomSum<OnDemand>   67903993 ns     67901662 ns           10         866.609k           678.461M        3.08736M       3.19656M    216.186M              4.69983           14.7495       3.18865G          640.958M                    13.9342                     2.96484           14.7495M    866.193k   45.9988M        646.05M/s   3.11544M   3.19655M   216.416M         4.70483    14.7272/s  3.1872G/s     640.958M               13.9342                2.96169      1000k       14.7272M/s [best: throughput=  0.68 GB/s doc_throughput=    14 docs/s instructions=   640958346 cycles=   216186378 branch_miss=  866609 cache_miss= 3087359 cache_ref=   3196559 items=   1000000 avg_time=  67877142 ns]
Creating a source file spanning 134087 KB 
Kostya<Dom>                98803229 ns     98798564 ns            7         455.258k           1.39144G        10.2614M       10.3145M    314.602M              2.29126           10.1339       3.18816G          972.126M                    7.08005                     3.09002           5.31311M    455.505k   137.305M        1.2943G/s   10.2122M   10.3147M   314.867M         2.29319    10.1216/s 3.18696G/s     972.126M               7.08005                3.08742   524.288k       5.30664M/s [best: throughput=  1.39 GB/s doc_throughput=    10 docs/s instructions=   972125799 cycles=   314601936 branch_miss=  455258 cache_miss=10261360 cache_ref=  10314542 items=    524288 avg_time=  98774248 ns]
KostyaSum<Dom>             98041410 ns     98037692 ns            7         455.487k           1.40283G        10.0008M       10.1188M    312.061M              2.27276           10.2169       3.18829G          974.747M                    7.09914                     3.12358           5.35658M    455.578k   137.305M       1.30435G/s   10.0112M   10.1186M   312.462M         2.27568    10.2002/s 3.18716G/s     974.747M               7.09914                3.11957   524.288k       5.34782M/s [best: throughput=  1.40 GB/s doc_throughput=    10 docs/s instructions=   974747251 cycles=   312060791 branch_miss=  455487 cache_miss=10000765 cache_ref=  10118784 items=    524288 avg_time=  98013295 ns]
Kostya<OnDemand>           69585976 ns     69585318 ns           10         465.182k           1.97616G        6.28642M       6.47127M    221.527M              1.61339           14.3925       3.18833G          697.595M                    5.08062                     3.14903           7.54582M    465.702k   137.305M       1.83768G/s    6.3586M   6.47132M   221.755M         1.61506    14.3708/s 3.18681G/s     697.595M               5.08062                3.14579   524.288k       7.53446M/s [best: throughput=  1.98 GB/s doc_throughput=    14 docs/s instructions=   697594941 cycles=   221527045 branch_miss=  465182 cache_miss= 6286422 cache_ref=   6471273 items=    524288 avg_time=  69557772 ns]
KostyaSum<OnDemand>        69731064 ns     69727864 ns           10         462.952k           1.97115G        6.15216M       6.27412M     222.09M              1.61749            14.356       3.18832G          695.498M                    5.06535                      3.1316           7.52666M    463.119k   137.305M       1.83392G/s   6.18277M   6.27406M   222.211M         1.61838    14.3415/s 3.18683G/s     695.498M               5.06535                 3.1299   524.288k       7.51906M/s [best: throughput=  1.97 GB/s doc_throughput=    14 docs/s instructions=   695497792 cycles=   222089983 branch_miss=  462952 cache_miss= 6152159 cache_ref=   6274115 items=    524288 avg_time=  69703166 ns]
DistinctUserID<Dom>          339946 ns       339936 ns         2053           4.085k           1.97867G               0        32.692k    1019.16k              1.61383          3.13321k       3.19323G          3.02096M                    4.78367                     2.96418            360.32k    4.20175k   631.515k       1.73016G/s   0.838773   32.6763k   1025.74k         1.62425   2.94173k/s 3.01744G/s     3.02096M               4.78367                2.94517        115       338.299k/s [best: throughput=  1.98 GB/s doc_throughput=  3133 docs/s instructions=     3020962 cycles=     1019156 branch_miss=    4085 cache_miss=       0 cache_ref=     32692 items=       115 avg_time=    321569 ns]
On Demand implementation: haswell
DistinctUserID<OnDemand>     225303 ns       225299 ns         3132           2.101k           3.04821G               0         5.067k    661.527k              1.04752          4.82681k       3.19307G           2.2004M                    3.48432                     3.32624           555.084k    2.19571k   631.515k       2.61051G/s   7.02427m   5.10012k   666.723k         1.05575   4.43855k/s 2.95928G/s      2.2004M               3.48432                3.30032        115       510.433k/s [best: throughput=  3.05 GB/s doc_throughput=  4826 docs/s instructions=     2200400 cycles=      661527 branch_miss=    2101 cache_miss=       0 cache_ref=      5067 items=       115 avg_time=    208931 ns]
FindTweet<Dom>               323404 ns       323395 ns         2164           3.619k           2.08949G               0         28.08k    965.272k               1.5285          3.30869k       3.19379G          2.93044M                    4.64034                     3.03587           3.30869k    3.77236k   631.515k       1.81866G/s  0.0138632   27.9685k   970.685k         1.53707   3.09219k/s 3.00155G/s     2.93044M               4.64034                3.01894          1       3.09219k/s [best: throughput=  2.09 GB/s doc_throughput=  3308 docs/s instructions=     2930442 cycles=      965272 branch_miss=    3619 cache_miss=       0 cache_ref=     28080 items=         1 avg_time=    304267 ns]
On Demand implementation: haswell
FindTweet<OnDemand>          171534 ns       171529 ns         4109           1.262k           4.10458G               0         3.086k    491.335k             0.778026          6.49958k       3.19347G           1.5712M                    2.48798                     3.19782           6.49958k    1.31604k   631.515k       3.42883G/s   3.16379m   3.18273k   494.453k        0.782964   5.82992k/s 2.88262G/s      1.5712M               2.48798                3.17765          1       5.82992k/s [best: throughput=  4.10 GB/s doc_throughput=  6499 docs/s instructions=     1571199 cycles=      491335 branch_miss=    1262 cache_miss=       0 cache_ref=      3086 items=         1 avg_time=    154925 ns]
