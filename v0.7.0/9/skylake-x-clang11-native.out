run_benchmark: v0.8.0~29 /home/jkeiser/simdjson_benchmark_results/v0.7.0/9/skylake-x-clang11-native.json -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native
git reset --hard v0.8.0~29
HEAD is now at 5f92cd2b Merge pull request #1349 from simdjson/dlemire/prune_validate_utf8
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- git Version: v0.2.1-5f92cd2b
-- Version: 0.2.1
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES -- failed to compile
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 11
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
make[3]: Nothing to be done for '_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build'.
[ 72%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
make[3]: Nothing to be done for 'jsonexamples/generated/CMakeFiles/generated-data.dir/build'.
[ 81%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
make[3]: Nothing to be done for 'src/CMakeFiles/simdjson.dir/build'.
[ 90%] Built target simdjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
make[3]: Nothing to be done for 'benchmark/CMakeFiles/bench_ondemand.dir/build'.
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/9/skylake-x-clang11-native.json --benchmark_out_format=json
2021-01-24 23:24:00
Running benchmark/bench_ondemand
Run on (4 X 3200 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 1024 KiB (x4)
  L3 Unified 8448 KiB (x1)
Load Average: 1.00, 0.98, 0.98
***WARNING*** CPU scaling is enabled, the benchmark real time measurements may be noisy and will incur extra overhead.
On Demand implementation: haswell
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Benchmark                         Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
PartialTweets<OnDemand>      204308 ns       204304 ns         3407           2.045k           3.34936G               0         5.873k    602.102k             0.953425          5.30369k       3.19336G          1.81542M                    2.87471                     3.01514           530.369k    2.15317k   631.515k       2.87876G/s  0.0187849   5.91162k   606.924k         0.96106   4.89466k/s 2.97068G/s     1.81542M               2.87471                2.99118        100       489.466k/s [best: throughput=  3.35 GB/s doc_throughput=  5303 docs/s instructions=     1815421 cycles=      602102 branch_miss=    2045 cache_miss=       0 cache_ref=      5873 items=       100 avg_time=    190217 ns]
PartialTweets<Dom>           342277 ns       342268 ns         2047           3.758k           1.95134G               2        32.327k    1033.47k              1.63649          3.08994k       3.19335G          2.93688M                    4.65054                     2.84178           308.994k    3.90116k   631.515k       1.71837G/s   0.529555   32.1363k    1039.6k          1.6462   2.92168k/s 3.03738G/s     2.93688M               4.65054                2.82502        100       292.168k/s [best: throughput=  1.95 GB/s doc_throughput=  3089 docs/s instructions=     2936884 cycles=     1033468 branch_miss=    3758 cache_miss=       2 cache_ref=     32327 items=       100 avg_time=    325888 ns]
Creating a source file spanning 44921 KB 
LargeRandom<Dom>          101573988 ns    101571534 ns            7         900.186k           455.016M        6.80108M       6.89648M    322.371M              7.00826           9.89191       3.18887G          1019.45M                    22.1626                     3.16235           9.89191M    902.362k   45.9988M       431.891M/s   6.81063M   6.89654M   323.752M         7.03827    9.84528/s 3.18743G/s     1019.45M               22.1626                3.14887      1000k       9.84528M/s [best: throughput=  0.46 GB/s doc_throughput=     9 docs/s instructions=  1019451749 cycles=   322371491 branch_miss=  900186 cache_miss= 6801079 cache_ref=   6896476 items=   1000000 avg_time= 101546568 ns]
LargeRandomSum<Dom>       101853439 ns    101849664 ns            7         899.867k           453.868M        6.42756M       6.52062M    322.972M              7.02133           9.86697       3.18676G          1012.45M                    22.0104                     3.13479           9.86697M    900.602k   45.9988M       430.712M/s   6.43252M    6.5199M   324.632M         7.05742    9.81839/s 3.18737G/s     1012.45M               22.0104                3.11876      1000k       9.81839M/s [best: throughput=  0.45 GB/s doc_throughput=     9 docs/s instructions=  1012451751 cycles=   322972397 branch_miss=  899867 cache_miss= 6427562 cache_ref=   6520625 items=   1000000 avg_time= 101825920 ns]
LargeRandom<OnDemand>      68575319 ns     68574870 ns           10          916.76k           671.555M        3.51247M       3.57281M    218.425M              4.74849           14.5994       3.18887G          607.908M                    13.2157                     2.78315           14.5994M    921.899k   45.9988M       639.707M/s   3.48896M   3.57279M   218.575M         4.75176    14.5826/s 3.18739G/s     607.908M               13.2157                2.78123      1000k       14.5826M/s [best: throughput=  0.67 GB/s doc_throughput=    14 docs/s instructions=   607907830 cycles=   218424678 branch_miss=  916760 cache_miss= 3512473 cache_ref=   3572806 items=   1000000 avg_time=  68547993 ns]
LargeRandomSum<OnDemand>   68980900 ns     68978853 ns           10         903.185k           667.582M        3.08241M       3.19647M    219.733M              4.77693            14.513       3.18899G          606.908M                     13.194                     2.76203            14.513M    905.374k   45.9988M       635.961M/s   3.11735M    3.1965M   219.842M          4.7793    14.4972/s 3.18709G/s     606.908M                13.194                2.76066      1000k       14.4972M/s [best: throughput=  0.67 GB/s doc_throughput=    14 docs/s instructions=   606907638 cycles=   219732770 branch_miss=  903185 cache_miss= 3082410 cache_ref=   3196473 items=   1000000 avg_time=  68953044 ns]
Creating a source file spanning 134087 KB 
Kostya<Dom>               109599290 ns    109596059 ns            6         1020.37k           1.25753G        10.2226M       10.3198M    348.157M              2.53565           9.15868       3.18866G          971.471M                    7.07528                     2.79032           4.80179M    1019.59k   137.305M       1.16679G/s   10.2197M   10.3198M   349.304M           2.544    9.12442/s 3.18719G/s     971.471M               7.07528                2.78117   524.288k       4.78382M/s [best: throughput=  1.26 GB/s doc_throughput=     9 docs/s instructions=   971471362 cycles=   348157412 branch_miss= 1020367 cache_miss=10222609 cache_ref=  10319804 items=    524288 avg_time= 109569457 ns]
KostyaSum<Dom>            107865123 ns    107862070 ns            6         1019.63k           1.27473G        9.98687M       10.1209M     343.37M              2.50078           9.28395       3.18783G          968.326M                    7.05237                     2.82006           4.86746M    1019.46k   137.305M       1.18554G/s   10.0243M   10.1207M   343.783M         2.50379     9.2711/s 3.18724G/s     968.326M               7.05237                2.81668   524.288k       4.86073M/s [best: throughput=  1.27 GB/s doc_throughput=     9 docs/s instructions=   968325635 cycles=   343370027 branch_miss= 1019626 cache_miss= 9986867 cache_ref=  10120851 items=    524288 avg_time= 107835143 ns]
Kostya<OnDemand>           66600617 ns     66600153 ns           11         454.409k           2.06386G        6.35437M       6.47037M    212.118M              1.54487           15.0312       3.18839G          616.241M                    4.48812                     2.90518           7.88068M    454.699k   137.305M       1.92004G/s   6.39263M   6.47047M    212.22M         1.54561     15.015/s 3.18648G/s     616.241M               4.48812                2.90378   524.288k       7.87217M/s [best: throughput=  2.06 GB/s doc_throughput=    15 docs/s instructions=   616241413 cycles=   212118342 branch_miss=  454409 cache_miss= 6354370 cache_ref=   6470375 items=    524288 avg_time=  66571803 ns]
KostyaSum<OnDemand>        67383159 ns     67381084 ns           10         454.906k            2.0397G        6.21556M       6.27268M    214.634M              1.56319           14.8552       3.18843G          620.959M                    4.52248                     2.89311           7.78842M    455.947k   137.305M       1.89779G/s   6.19803M   6.27261M   214.739M         1.56396     14.841/s 3.18693G/s     620.959M               4.52248                2.89169   524.288k       7.78094M/s [best: throughput=  2.04 GB/s doc_throughput=    14 docs/s instructions=   620959316 cycles=   214633503 branch_miss=  454906 cache_miss= 6215562 cache_ref=   6272680 items=    524288 avg_time=  67353781 ns]
DistinctUserID<Dom>          341443 ns       341437 ns         2050           3.993k           1.97156G              12        32.215k    1022.86k               1.6197          3.12196k       3.19333G          2.87669M                    4.55523                      2.8124           359.025k    4.12361k   631.515k       1.72256G/s    15.9029   32.3683k   1030.63k           1.632    2.9288k/s 3.01851G/s     2.87669M               4.55523                 2.7912        115       336.812k/s [best: throughput=  1.97 GB/s doc_throughput=  3121 docs/s instructions=     2876694 cycles=     1022862 branch_miss=    3993 cache_miss=      12 cache_ref=     32215 items=       115 avg_time=    323027 ns]
On Demand implementation: haswell
DistinctUserID<OnDemand>     201147 ns       201142 ns         3447            2.23k            3.4585G               0         7.049k    583.159k             0.923429          5.47651k       3.19368G          1.81907M                    2.88049                     3.11934           629.799k    2.43284k   631.515k       2.92402G/s  0.0127647    7.0665k   589.281k        0.933123   4.97161k/s 2.92968G/s     1.81907M               2.88049                3.08693        115       571.735k/s [best: throughput=  3.46 GB/s doc_throughput=  5476 docs/s instructions=     1819070 cycles=      583159 branch_miss=    2230 cache_miss=       0 cache_ref=      7049 items=       115 avg_time=    184667 ns]
FindTweet<Dom>               321999 ns       321993 ns         2158           3.491k           2.09838G               0        27.335k    961.062k              1.52184          3.32278k        3.1934G          2.78235M                    4.40583                     2.89508           3.32278k    3.65541k   631.515k       1.82657G/s  0.0157553   27.4605k   967.424k         1.53191   3.10566k/s 3.00449G/s     2.78235M               4.40583                2.87604          1       3.10566k/s [best: throughput=  2.10 GB/s doc_throughput=  3322 docs/s instructions=     2782348 cycles=      961062 branch_miss=    3491 cache_miss=       0 cache_ref=     27335 items=         1 avg_time=    303206 ns]
On Demand implementation: haswell
FindTweet<OnDemand>          145982 ns       145980 ns         4806              975           4.90985G               0         3.844k    410.797k             0.650494          7.77472k       3.19383G          1.31308M                    2.07926                     3.19643           7.77472k      1043.5   631.515k       4.02894G/s   1.87266m   3.86324k   413.613k        0.654954   6.85027k/s 2.83336G/s     1.31308M               2.07926                3.17467          1       6.85027k/s [best: throughput=  4.91 GB/s doc_throughput=  7774 docs/s instructions=     1313084 cycles=      410797 branch_miss=     975 cache_miss=       0 cache_ref=      3844 items=         1 avg_time=    129582 ns]
