run_benchmark: v0.8.0~24 /home/jkeiser/simdjson_benchmark_results/v0.7.0/14/skylake-clang11-native.json -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native
git reset --hard v0.8.0~24
HEAD is now at 0314889c Merge pull request #1357 from simdjson/jkeiser/ondemand-quickstart
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- git Version: v0.2.1-0314889c
-- Version: 0.2.1
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES -- failed to compile
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 8
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
make[3]: Nothing to be done for '_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build'.
[ 87%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
make[3]: Nothing to be done for 'jsonexamples/generated/CMakeFiles/generated-data.dir/build'.
[ 87%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
make[3]: Nothing to be done for 'src/CMakeFiles/simdjson.dir/build'.
[ 87%] Built target simdjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/clang++-11  -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/clang++-11  -march=native -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.6.0.0 ../_deps/google_benchmarks/src/libbenchmark.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/14/skylake-clang11-native.json --benchmark_out_format=json
2021-01-25 02:01:09
Running benchmark/bench_ondemand
Run on (4 X 4000 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 256 KiB (x4)
  L3 Unified 8192 KiB (x1)
Load Average: 1.01, 1.00, 0.78
On Demand implementation: haswell
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Benchmark                               Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
PartialTweets<OnDemand>            177690 ns       177654 ns         3929           1.816k           3.74731G               0        58.683k    622.412k             0.985585          5.93384k       3.69329G          1.88201M                    2.98015                     3.02374           593.384k    1.92991k   631.515k       3.31062G/s  0.0246882   58.7371k   626.026k        0.991308   5.62893k/s 3.52385G/s     1.88201M               2.98015                3.00628        100       562.893k/s [best: throughput=  3.75 GB/s doc_throughput=  5933 docs/s instructions=     1882011 cycles=      622412 branch_miss=    1816 cache_miss=       0 cache_ref=     58683 items=       100 avg_time=    169649 ns]
PartialTweets<Dom>                 287270 ns       287268 ns         2433           3.821k           2.27811G               0         93.65k    1023.47k              1.62065          3.60737k       3.69203G          2.99807M                    4.74742                     2.92932           360.737k    3.92341k   631.515k       2.04737G/s  0.0505549   93.5103k   1029.49k         1.63019   3.48106k/s 3.58372G/s     2.99807M               4.74742                2.91219        100       348.106k/s [best: throughput=  2.28 GB/s doc_throughput=  3607 docs/s instructions=     2998067 cycles=     1023467 branch_miss=    3821 cache_miss=       0 cache_ref=     93650 items=       100 avg_time=    278982 ns]
Creating a source file spanning 44921 KB 
LargeRandom<Dom>                 88548105 ns     88547518 ns            8          913.53k           520.766M        10.9251M       15.3753M    325.833M              7.08351           11.3213       3.68885G          1034.69M                    22.4938                     3.17551           11.3213M    921.337k   45.9988M       495.416M/s   10.8905M   15.3831M   326.557M         7.09925    11.2934/s 3.68793G/s     1034.69M               22.4938                3.16847      1000k       11.2934M/s [best: throughput=  0.52 GB/s doc_throughput=    11 docs/s instructions=  1034686010 cycles=   325832739 branch_miss=  913530 cache_miss=10925102 cache_ref=  15375337 items=   1000000 avg_time=  88533954 ns]
LargeRandom<OnDemand>            62548354 ns     62547503 ns           11         892.931k           736.194M        5.54194M       8.02156M    230.496M              5.01093           16.0046       3.68901G          623.142M                    13.5469                     2.70348           16.0046M    892.367k   45.9988M       701.353M/s   5.59632M    8.0237M   230.661M          5.0145    15.9878/s 3.68777G/s     623.142M               13.5469                2.70155      1000k       15.9878M/s [best: throughput=  0.74 GB/s doc_throughput=    16 docs/s instructions=   623142096 cycles=   230496463 branch_miss=  892931 cache_miss= 5541939 cache_ref=   8021563 items=   1000000 avg_time=  62535939 ns]
LargeRandom<OnDemandUnordered>   63579564 ns     63565344 ns           11         887.538k           724.434M        5.57197M       8.02572M    234.234M              5.09217            15.749       3.68894G          635.142M                    13.8078                     2.71157            15.749M    888.695k   45.9988M       690.122M/s   5.62242M    8.0271M   234.402M         5.09584    15.7318/s 3.68758G/s     635.142M               13.8078                2.70962      1000k       15.7318M/s [best: throughput=  0.72 GB/s doc_throughput=    15 docs/s instructions=   635141906 cycles=   234233768 branch_miss=  887538 cache_miss= 5571968 cache_ref=   8025721 items=   1000000 avg_time=  63566544 ns]
Creating a source file spanning 134087 KB 
Kostya<Dom>                      92930150 ns     92928868 ns            8         1047.16k           1.47988G        15.6802M       22.3914M    342.184M              2.49215            10.778       3.68807G          985.272M                    7.17579                     2.87936           5.65079M    1044.29k   137.305M       1.37606G/s   15.7004M   22.2833M   342.695M         2.49587    10.7609/s 3.68771G/s     985.272M               7.17579                2.87507   524.288k       5.64182M/s [best: throughput=  1.48 GB/s doc_throughput=    10 docs/s instructions=   985271659 cycles=   342184283 branch_miss= 1047165 cache_miss=15680160 cache_ref=  22391401 items=    524288 avg_time=  92915339 ns]
KostyaSum<Dom>                   93765973 ns     93745716 ns            7         1043.59k           1.46583G        15.4971M       21.8504M     345.55M              2.51666           10.6757         3.689G          982.126M                    7.15288                     2.84221           5.59715M    1043.35k   137.305M       1.36406G/s   15.5407M   21.8903M   345.679M          2.5176    10.6672/s 3.68741G/s     982.126M               7.15288                2.84115   524.288k       5.59266M/s [best: throughput=  1.47 GB/s doc_throughput=    10 docs/s instructions=   982125930 cycles=   345550356 branch_miss= 1043593 cache_miss=15497052 cache_ref=  21850362 items=    524288 avg_time=  93751181 ns]
Kostya<OnDemand>                 60761392 ns     60760732 ns           11         485.128k            2.2615G        9.90391M       14.0572M    223.971M               1.6312           16.4707       3.68896G          632.663M                    4.60772                     2.82475           8.63537M    484.915k   137.305M       2.10457G/s    9.9329M   14.0488M    224.06M         1.63184     16.458/s 3.68757G/s     632.663M               4.60772                2.82364   524.288k       8.62873M/s [best: throughput=  2.26 GB/s doc_throughput=    16 docs/s instructions=   632663010 cycles=   223971472 branch_miss=  485128 cache_miss= 9903906 cache_ref=  14057224 items=    524288 avg_time=  60748266 ns]
KostyaSum<OnDemand>              62185102 ns     62185457 ns           11         476.466k           2.21071G        9.57487M       13.6111M    229.088M              1.66846           16.1007       3.68849G          632.663M                    4.60772                     2.76165           8.44141M    476.326k   137.305M       2.05635G/s   9.64662M   13.6104M   229.294M         1.66996    16.0809/s 3.68726G/s     632.663M               4.60772                2.75918   524.288k       8.43104M/s [best: throughput=  2.21 GB/s doc_throughput=    16 docs/s instructions=   632663126 cycles=   229088433 branch_miss=  476466 cache_miss= 9574873 cache_ref=  13611121 items=    524288 avg_time=  62170853 ns]
DistinctUserID<Dom>                283899 ns       283897 ns         2474           3.992k           2.30399G               0        94.443k    1012.09k              1.60263          3.64836k       3.69245G            2.938M                     4.6523                     2.90291           419.561k    4.15409k   631.515k       2.07168G/s    1.38925   94.6018k   1017.51k         1.61122    3.5224k/s 3.58408G/s       2.938M                4.6523                2.88743        115       405.076k/s [best: throughput=  2.30 GB/s doc_throughput=  3648 docs/s instructions=     2937997 cycles=     1012086 branch_miss=    3992 cache_miss=       0 cache_ref=     94443 items=       115 avg_time=    275764 ns]
On Demand implementation: haswell
DistinctUserID<OnDemand>           167010 ns       167011 ns         4218            1.76k           4.00654G               0        56.816k     582.04k             0.921657          6.34433k       3.69266G          1.88465M                    2.98434                     3.23801           729.598k    1.91296k   631.515k       3.52159G/s   0.605026    56.837k   587.027k        0.929554   5.98764k/s 3.51491G/s     1.88465M               2.98434                 3.2105        115       688.578k/s [best: throughput=  4.01 GB/s doc_throughput=  6344 docs/s instructions=     1884654 cycles=      582040 branch_miss=    1760 cache_miss=       0 cache_ref=     56816 items=       115 avg_time=    159061 ns]
FindTweet<Dom>                     269097 ns       269095 ns         2605           3.562k           2.43315G               0        84.177k    958.313k              1.51748          3.85288k       3.69227G          2.84343M                    4.50255                     2.96712           3.85288k    3.68532k   631.515k       2.18564G/s    2.62418   84.1293k   962.759k         1.52452   3.71616k/s 3.57776G/s     2.84343M               4.50256                2.95342          1       3.71616k/s [best: throughput=  2.43 GB/s doc_throughput=  3852 docs/s instructions=     2843431 cycles=      958313 branch_miss=    3562 cache_miss=       0 cache_ref=     84177 items=         1 avg_time=    260932 ns]
On Demand implementation: haswell
FindTweet<OnDemand>                123728 ns       123729 ns         5644             1033           5.48233G               0        29.771k    425.469k             0.673727          8.68123k        3.6936G          1.37956M                    2.18452                     3.24244           8.68123k     1075.05   631.515k        4.7535G/s   0.536499   29.7174k   427.484k        0.676919   8.08221k/s 3.45502G/s     1.37956M               2.18452                3.22716          1       8.08221k/s [best: throughput=  5.48 GB/s doc_throughput=  8681 docs/s instructions=     1379559 cycles=      425469 branch_miss=    1033 cache_miss=       0 cache_ref=     29771 items=         1 avg_time=    115824 ns]
