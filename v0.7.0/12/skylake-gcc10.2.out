run_benchmark: v0.8.0~26 /home/jkeiser/simdjson_benchmark_results/v0.7.0/12/skylake-gcc10.2.json -DCMAKE_BUILD_TYPE=Release
git reset --hard v0.8.0~26
HEAD is now at 93807bf2 Merge pull request #1352 from simdjson/jkeiser/assert-test-release
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- git Version: v0.2.1-93807bf2
-- Version: 0.2.1
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 11
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
make[3]: Nothing to be done for '_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build'.
[ 72%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
make[3]: Nothing to be done for 'jsonexamples/generated/CMakeFiles/generated-data.dir/build'.
[ 81%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/g++-10  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/src  -O3 -DNDEBUG -fPIC   -pthread -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/g++-10 -fPIC -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.6 -o ../libsimdjson.so.6.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.6.0.0 ../libsimdjson.so.6 ../libsimdjson.so
[ 90%] Built target simdjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/g++-10  -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/g++-10  -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.6.0.0 ../_deps/google_benchmarks/src/libbenchmark.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/12/skylake-gcc10.2.json --benchmark_out_format=json
2021-01-25 02:10:33
Running benchmark/bench_ondemand
Run on (4 X 4000 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 256 KiB (x4)
  L3 Unified 8192 KiB (x1)
Load Average: 1.00, 1.00, 0.91
On Demand implementation: fallback
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Benchmark                         Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
PartialTweets<OnDemand>     1119529 ns      1119526 ns          626          32.189k           572.066M               0        55.653k    4.07523M              6.45311           905.864       3.69161G          10.6878M                     16.924                     2.62262           90.5864k    32.7951k   631.515k       537.959M/s    21.5639   55.7923k   4.10085M         6.49367    893.235/s 3.66302G/s     10.6878M                16.924                2.60623        100       89.3235k/s [best: throughput=  0.57 GB/s doc_throughput=   905 docs/s instructions=    10687770 cycles=     4075233 branch_miss=   32189 cache_miss=       0 cache_ref=     55653 items=       100 avg_time=   1111454 ns]
PartialTweets<Dom>           271100 ns       271100 ns         2579            3.87k            2.4147G               0        87.402k     965.58k              1.52899          3.82367k       3.69206G           2.9625M                    4.69109                      3.0681           382.367k    4.01775k   631.515k       2.16947G/s   0.691741   87.5313k   970.186k         1.53628   3.68868k/s 3.57871G/s      2.9625M               4.69109                3.05353        100       368.868k/s [best: throughput=  2.41 GB/s doc_throughput=  3823 docs/s instructions=     2962496 cycles=      965580 branch_miss=    3870 cache_miss=       0 cache_ref=     87402 items=       100 avg_time=    262909 ns]
Creating a source file spanning 44921 KB 
LargeRandom<Dom>           87300273 ns     87299561 ns            8         921.748k           529.001M        10.8058M       15.1517M    320.778M              6.97363           11.5003       3.68905G          974.113M                    21.1769                     3.03671           11.5003M    923.267k   45.9988M       502.498M/s   10.8797M    15.157M   321.976M         6.99966    11.4548/s 3.68817G/s     974.113M               21.1769                3.02542      1000k       11.4548M/s [best: throughput=  0.53 GB/s doc_throughput=    11 docs/s instructions=   974112687 cycles=   320778483 branch_miss=  921748 cache_miss=10805773 cache_ref=  15151677 items=   1000000 avg_time=  87285957 ns]
LargeRandomSum<Dom>        87985160 ns     87984694 ns            8         921.696k           523.937M        10.2728M       14.3397M    323.889M              7.04124           11.3902       3.68917G          979.113M                    21.2856                     3.02299           11.3902M    923.473k   45.9988M       498.585M/s   10.3183M   14.3441M   324.517M         7.05491    11.3656/s 3.68834G/s     979.113M               21.2856                3.01714      1000k       11.3656M/s [best: throughput=  0.52 GB/s doc_throughput=    11 docs/s instructions=   979112702 cycles=   323888523 branch_miss=  921696 cache_miss=10272784 cache_ref=  14339716 items=   1000000 avg_time=  87971013 ns]
LargeRandom<OnDemand>     132420766 ns    132418129 ns            5         2.38182M           347.885M        5.80555M        7.9097M    487.818M               10.605           7.56292       3.68932G          1.28997G                    28.0437                     2.64438           7.56292M     2.3796M   45.9988M       331.283M/s   5.69087M     7.901M   488.491M         10.6197    7.55184/s 3.68901G/s     1.28997G               28.0437                2.64073      1000k       7.55184M/s [best: throughput=  0.35 GB/s doc_throughput=     7 docs/s instructions=  1289973902 cycles=   487817543 branch_miss= 2381821 cache_miss= 5805554 cache_ref=   7909702 items=   1000000 avg_time= 132406570 ns]
LargeRandomSum<OnDemand>  128696480 ns    128697287 ns            5         2.38028M           357.689M        5.14053M       7.06009M    474.465M              10.3147           7.77605       3.68946G          1.26697G                    27.5436                     2.67032           7.77605M    2.37424M   45.9988M       340.861M/s   5.14015M   7.06067M   474.744M         10.3208    7.77017/s 3.68884G/s     1.26697G               27.5436                2.66875      1000k       7.77017M/s [best: throughput=  0.36 GB/s doc_throughput=     7 docs/s instructions=  1266973890 cycles=   474465173 branch_miss= 2380277 cache_miss= 5140526 cache_ref=   7060087 items=   1000000 avg_time= 128681807 ns]
Creating a source file spanning 134087 KB 
Kostya<Dom>                83877531 ns     83876537 ns            8         460.649k            1.6414G        15.5624M       21.8875M    308.556M              2.24723           11.9544       3.68861G          944.977M                    6.88232                     3.06258           6.26756M    471.726k   137.305M       1.52457G/s   15.5985M   21.9399M   309.322M         2.25281    11.9223/s 3.68782G/s     944.977M               6.88232                  3.055   524.288k       6.25071M/s [best: throughput=  1.64 GB/s doc_throughput=    11 docs/s instructions=   944977188 cycles=   308555822 branch_miss=  460649 cache_miss=15562434 cache_ref=  21887517 items=    524288 avg_time=  83862371 ns]
KostyaSum<Dom>             83624230 ns     83623470 ns            8          460.02k            1.6458G        15.2737M       21.4062M    307.776M              2.24155           11.9864       3.68913G          947.599M                    6.90141                     3.07886           6.28434M    460.925k   137.305M       1.52918G/s   15.3199M   21.4607M   308.424M         2.24627    11.9584/s 3.68825G/s     947.599M               6.90141                3.07239   524.288k       6.26963M/s [best: throughput=  1.65 GB/s doc_throughput=    11 docs/s instructions=   947598642 cycles=   307775688 branch_miss=  460020 cache_miss=15273715 cache_ref=  21406184 items=    524288 avg_time=  83609535 ns]
Kostya<OnDemand>          298746833 ns    298743470 ns            2         3.32199M           459.918M        10.2287M        13.966M    1.10147G              8.02209           3.34961        3.6895G          2.87706G                    20.9538                     2.61201           1.75616M    3.32239M   137.305M       438.317M/s   10.2772M   14.0266M   1.10217G         8.02714    3.34735/s 3.68934G/s     2.87706G               20.9538                2.61037   524.288k       1.75498M/s [best: throughput=  0.46 GB/s doc_throughput=     3 docs/s instructions=  2877057295 cycles=  1101472547 branch_miss= 3321991 cache_miss=10228692 cache_ref=  13966029 items=    524288 avg_time= 298728771 ns]
KostyaSum<OnDemand>       300017689 ns    300014292 ns            2         3.32665M            457.88M        9.90716M       13.6545M    1.10637G              8.05778           3.33477        3.6895G          2.87286G                    20.9232                     2.59665           1.74838M    3.32466M   137.305M        436.46M/s   9.95716M   13.5978M   1.10688G          8.0615    3.33317/s 3.68944G/s     2.87286G               20.9232                2.59545   524.288k       1.74754M/s [best: throughput=  0.46 GB/s doc_throughput=     3 docs/s instructions=  2872862994 cycles=  1106373450 branch_miss= 3326654 cache_miss= 9907164 cache_ref=  13654475 items=    524288 avg_time= 300000579 ns]
DistinctUserID<Dom>          269114 ns       269112 ns         2601           4.155k           2.43888G               0         88.51k    956.083k              1.51395          3.86194k       3.69234G          2.91303M                    4.61276                     3.04684           444.123k    4.36542k   631.515k        2.1855G/s    4.43522   88.5158k    962.91k         1.52476   3.71592k/s  3.5781G/s     2.91303M               4.61276                3.02524        115       427.331k/s [best: throughput=  2.44 GB/s doc_throughput=  3861 docs/s instructions=     2913030 cycles=      956083 branch_miss=    4155 cache_miss=       0 cache_ref=     88510 items=       115 avg_time=    260930 ns]
On Demand implementation: fallback
DistinctUserID<OnDemand>    1119017 ns      1119025 ns          626          32.164k           571.332M               0        54.125k    4.08042M              6.46131             904.7       3.69155G          10.3575M                     16.401                     2.53834            104.04k    32.5165k   631.515k         538.2M/s    3.30032   54.2024k   4.09926M         6.49116    893.635/s 3.66324G/s     10.3575M                16.401                2.52667        115       102.768k/s [best: throughput=  0.57 GB/s doc_throughput=   904 docs/s instructions=    10357491 cycles=     4080416 branch_miss=   32164 cache_miss=       0 cache_ref=     54125 items=       115 avg_time=   1110991 ns]
FindTweet<Dom>               254498 ns       254500 ns         2746           3.687k           2.57764G               0        78.177k    904.514k              1.43229          4.08168k       3.69194G           2.8225M                    4.46942                     3.12046           4.08168k    3.82735k   631.515k       2.31098G/s    6.67844   78.3124k   909.026k         1.43944   3.92927k/s 3.57181G/s      2.8225M               4.46942                3.10498          1       3.92927k/s [best: throughput=  2.58 GB/s doc_throughput=  4081 docs/s instructions=     2822504 cycles=      904514 branch_miss=    3687 cache_miss=       0 cache_ref=     78177 items=         1 avg_time=    246328 ns]
On Demand implementation: fallback
FindTweet<OnDemand>         1048550 ns      1048545 ns          667          31.302k           610.528M               0        28.734k    3.81842M              6.04645           966.766       3.69152G          9.73228M                     15.411                     2.54877            966.766    31.8035k   631.515k       574.377M/s   0.605697   28.7644k   3.83914M         6.07925    953.703/s  3.6614G/s     9.73229M                15.411                2.53502          1        953.703/s [best: throughput=  0.61 GB/s doc_throughput=   966 docs/s instructions=     9732285 cycles=     3818424 branch_miss=   31302 cache_miss=       0 cache_ref=     28734 items=         1 avg_time=   1040470 ns]
