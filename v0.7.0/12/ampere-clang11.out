run_benchmark: v0.8.0~26 /home/jkeiser/simdjson_benchmark_results/v0.7.0/12/ampere-clang11.json -DCMAKE_BUILD_TYPE=Release
git reset --hard v0.8.0~26
HEAD is now at 93807bf2 Merge pull request #1352 from simdjson/jkeiser/assert-test-release
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- git Version: v0.2.1-93807bf2
-- Version: 0.2.1
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES -- failed to compile
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 11
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
make[3]: Nothing to be done for '_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build'.
[ 72%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
make[3]: Nothing to be done for 'jsonexamples/generated/CMakeFiles/generated-data.dir/build'.
[ 81%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/clang++-11  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/src  -O3 -DNDEBUG -fPIC   -pthread -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/clang++-11 -fPIC -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.6 -o ../libsimdjson.so.6.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.6.0.0 ../libsimdjson.so.6 ../libsimdjson.so
[ 90%] Built target simdjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/clang++-11  -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/clang++-11  -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.6.0.0 ../_deps/google_benchmarks/src/libbenchmark.a -pthread /usr/lib/aarch64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/12/ampere-clang11.json --benchmark_out_format=json
2021-01-25 00:58:44
Running benchmark/bench_ondemand
Run on (32 X 3300 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x32)
  L1 Instruction 32 KiB (x32)
  L2 Unified 256 KiB (x16)
Load Average: 1.00, 1.01, 1.00
On Demand implementation: arm64
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Benchmark                         Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
PartialTweets<OnDemand>     1085860 ns      1085871 ns          643          10.534k           597.266M         22.842k       386.722k    3.38464M              5.35955           945.767       3.20108G          2.65318M                    4.20129                    0.783887           94.5767k    11.0791k   631.515k       554.633M/s   22.8371k   388.091k   3.39609M         5.37769    920.919/s 3.12753G/s     2.65318M               4.20129               0.781244        100       92.0919k/s [best: throughput=  0.60 GB/s doc_throughput=   945 docs/s instructions=     2653175 cycles=     3384639 branch_miss=   10534 cache_miss=   22842 cache_ref=    386722 items=       100 avg_time=   1062037 ns]
PartialTweets<Dom>          1605215 ns      1605206 ns          436          13.589k            406.53M         25.944k       959.576k    4.97207M              7.87324           643.738       3.20071G          3.95041M                    6.25545                    0.794521           64.3738k    13.5922k   631.515k       375.191M/s   25.9445k   962.779k   5.05398M         8.00295    622.973/s 3.14849G/s     3.95041M               6.25546               0.781644        100       62.2973k/s [best: throughput=  0.41 GB/s doc_throughput=   643 docs/s instructions=     3950413 cycles=     4972069 branch_miss=   13589 cache_miss=   25944 cache_ref=    959576 items=       100 avg_time=   1580711 ns]
Creating a source file spanning 44921 KB 
LargeRandom<Dom>          310649365 ns    310652368 ns            2         1.95289M           148.114M        3.98244M       232.976M    992.898M              21.5853           3.21995       3.19708G          1040.92M                    22.6292                     1.04836           3.21995M    1.95251M   45.9988M       141.212M/s   3.98247M   232.974M   992.962M         21.5867    3.21903/s 3.19638G/s     1040.92M               22.6292                1.04829      1000k       3.21903M/s [best: throughput=  0.15 GB/s doc_throughput=     3 docs/s instructions=  1040915657 cycles=   992897658 branch_miss= 1952890 cache_miss= 3982437 cache_ref= 232976350 items=   1000000 avg_time= 310589332 ns]
LargeRandomSum<Dom>       305274072 ns    305277412 ns            2         1.95108M           150.743M        3.98067M       230.959M     975.64M              21.2101           3.27712       3.19729G          1039.92M                    22.6075                     1.06588           3.27712M    1.95168M   45.9988M       143.698M/s    3.9807M   230.961M   975.815M         21.2139    3.27571/s 3.19649G/s     1039.92M               22.6075                1.06569      1000k       3.27571M/s [best: throughput=  0.15 GB/s doc_throughput=     3 docs/s instructions=  1039915656 cycles=   975640281 branch_miss= 1951080 cache_miss= 3980667 cache_ref= 230959466 items=   1000000 avg_time= 305214416 ns]
LargeRandom<OnDemand>     199586182 ns    199588218 ns            4         1.20216M           230.546M        2.31825M       106.237M    637.959M               13.869           5.01201       3.19745G          621.774M                    13.5172                    0.974631           5.01201M    1.20249M   45.9988M       219.792M/s   2.31826M   106.238M   637.955M          13.869    5.01032/s 3.19636G/s     621.774M               13.5172               0.974636      1000k       5.01032M/s [best: throughput=  0.23 GB/s doc_throughput=     5 docs/s instructions=   621773967 cycles=   637958635 branch_miss= 1202156 cache_miss= 2318251 cache_ref= 106237044 items=   1000000 avg_time= 199532393 ns]
LargeRandomSum<OnDemand>  198818368 ns    198820518 ns            4         1.19636M           231.445M        2.31657M       106.188M    635.525M              13.8161           5.03154       3.19767G          626.774M                    13.6259                    0.986231           5.03154M    1.19646M   45.9988M        220.64M/s   2.31659M   106.188M   635.526M         13.8162    5.02966/s 3.19648G/s     626.774M               13.6259               0.986228      1000k       5.02966M/s [best: throughput=  0.23 GB/s doc_throughput=     5 docs/s instructions=   626773965 cycles=   635524624 branch_miss= 1196363 cache_miss= 2316571 cache_ref= 106188315 items=   1000000 avg_time= 198762713 ns]
Creating a source file spanning 134087 KB 
Kostya<Dom>               377738745 ns    377742569 ns            2         880.022k           363.608M        6.95657M       249.401M    1.20722G              8.79225           2.64818       3.19693G           1.1314G                    8.24004                    0.937194           1.38841M    880.859k   137.305M       346.649M/s   6.95654M   249.404M   1.20738G         8.79343    2.64731/s 3.19631G/s      1.1314G               8.24004               0.937068   524.288k       1.38795M/s [best: throughput=  0.36 GB/s doc_throughput=     2 docs/s instructions=  1131399141 cycles=  1207219201 branch_miss=  880022 cache_miss= 6956567 cache_ref= 249400605 items=    524288 avg_time= 377675367 ns]
KostyaSum<Dom>            376170986 ns    376156191 ns            2         881.007k           365.262M        6.95416M        248.34M    1.20171G              8.75212           2.66022       3.19681G          1.13087G                    8.23623                    0.941055           1.39472M     881.13k   137.305M       348.111M/s   6.95415M   248.341M   1.20223G         8.75593    2.65847/s  3.1961G/s     1.13087G               8.23623               0.940645   524.288k        1.3938M/s [best: throughput=  0.37 GB/s doc_throughput=     2 docs/s instructions=  1130874852 cycles=  1201709228 branch_miss=  881007 cache_miss= 6954164 cache_ref= 248340294 items=    524288 avg_time= 376109330 ns]
Kostya<OnDemand>          257274997 ns    257257379 ns            3         905.178k           533.899M        5.28379M       116.685M    822.183M                5.988           3.88841       3.19699G          767.992M                    5.59333                    0.934089           2.03865M    905.008k   137.305M       509.001M/s   5.28383M   116.684M   822.192M         5.98807    3.88716/s 3.19599G/s     767.992M               5.59333               0.934079   524.288k       2.03799M/s [best: throughput=  0.53 GB/s doc_throughput=     3 docs/s instructions=   767992064 cycles=   822182578 branch_miss=  905178 cache_miss= 5283792 cache_ref= 116685298 items=    524288 avg_time= 257215871 ns]
KostyaSum<OnDemand>       255751473 ns    255718661 ns            3         893.531k           537.091M        5.28176M       115.047M    817.121M              5.95114           3.91167       3.19631G          770.089M                     5.6086                    0.942442           2.05084M    894.785k   137.305M       512.064M/s   5.28174M   115.053M   817.167M         5.95148    3.91055/s 3.19557G/s     770.089M                5.6086               0.942389   524.288k       2.05025M/s [best: throughput=  0.54 GB/s doc_throughput=     3 docs/s instructions=   770089266 cycles=   817121429 branch_miss=  893531 cache_miss= 5281763 cache_ref= 115047405 items=    524288 avg_time= 255691140 ns]
DistinctUserID<Dom>         1574581 ns      1574572 ns          444          13.436k            409.63M         26.573k       948.803k    4.93446M              7.81369           648.647       3.20072G          3.88741M                     6.1557                    0.787809           74.5944k    13.5298k   631.515k       382.491M/s   26.5699k   949.709k   4.94396M         7.82873    635.093/s 3.13987G/s     3.88742M                6.1557               0.786296        115       73.0357k/s [best: throughput=  0.41 GB/s doc_throughput=   648 docs/s instructions=     3887414 cycles=     4934464 branch_miss=   13436 cache_miss=   26573 cache_ref=    948803 items=       115 avg_time=   1546238 ns]
On Demand implementation: arm64
DistinctUserID<OnDemand>    1080771 ns      1080725 ns          648          11.228k            601.87M         22.519k       364.625k    3.35863M              5.31836           953.058       3.20097G          2.64123M                    4.18237                    0.786401           109.602k    11.3966k   631.515k       557.274M/s   22.5216k   365.111k   3.36336M         5.32585    925.304/s 3.11213G/s     2.64123M               4.18236               0.785294        115        106.41k/s [best: throughput=  0.60 GB/s doc_throughput=   953 docs/s instructions=     2641228 cycles=     3358626 branch_miss=   11228 cache_miss=   22519 cache_ref=    364625 items=       115 avg_time=   1051855 ns]
FindTweet<Dom>              1526035 ns      1526051 ns          451          13.085k           422.901M         23.487k       929.461k    4.77971M              7.56864            669.66       3.20078G          3.78856M                    5.99917                    0.792635             669.66    13.1584k   631.515k       394.652M/s   23.4838k   929.967k   4.78613M         7.57881    655.286/s 3.13629G/s     3.78856M               5.99916               0.791571          1        655.286/s [best: throughput=  0.42 GB/s doc_throughput=   669 docs/s instructions=     3788563 cycles=     4779707 branch_miss=   13085 cache_miss=   23487 cache_ref=    929461 items=         1 avg_time=   1496823 ns]
On Demand implementation: arm64
FindTweet<OnDemand>          932759 ns       932747 ns          751           4.451k           700.567M         11.546k       225.123k    2.88539M                4.569          1.10934k       3.20089G          2.10999M                    3.34116                    0.731266           1.10934k    4.56409k   631.515k       645.683M/s   11.5447k   225.458k   2.88892M         4.57458     1072.1/s 3.09721G/s     2.10999M               3.34116               0.730374          1         1072.1/s [best: throughput=  0.70 GB/s doc_throughput=  1109 docs/s instructions=     2109991 cycles=     2885393 branch_miss=    4451 cache_miss=   11546 cache_ref=    225123 items=         1 avg_time=    903422 ns]
