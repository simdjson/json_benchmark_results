run_benchmark: v0.8.0~26 /home/jkeiser/simdjson_benchmark_results/v0.7.0/12/skylake-x-gcc10.2-native.json -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native
git reset --hard v0.8.0~26
HEAD is now at 93807bf2 Merge pull request #1352 from simdjson/jkeiser/assert-test-release
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- git Version: v0.2.1-93807bf2
-- Version: 0.2.1
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 11
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
make[3]: Nothing to be done for '_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build'.
[ 72%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
make[3]: Nothing to be done for 'jsonexamples/generated/CMakeFiles/generated-data.dir/build'.
[ 81%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/g++-10  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/src  -march=native -O3 -DNDEBUG -fPIC   -pthread -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/g++-10 -fPIC -march=native -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.6 -o ../libsimdjson.so.6.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.6.0.0 ../libsimdjson.so.6 ../libsimdjson.so
[ 90%] Built target simdjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/g++-10  -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/g++-10  -march=native -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.6.0.0 ../_deps/google_benchmarks/src/libbenchmark.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/12/skylake-x-gcc10.2-native.json --benchmark_out_format=json
2021-01-24 23:43:06
Running benchmark/bench_ondemand
Run on (4 X 3200 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 1024 KiB (x4)
  L3 Unified 8448 KiB (x1)
Load Average: 1.00, 1.00, 1.00
***WARNING*** CPU scaling is enabled, the benchmark real time measurements may be noisy and will incur extra overhead.
On Demand implementation: haswell
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Benchmark                         Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
PartialTweets<OnDemand>      228730 ns       228714 ns         3052           2.261k           2.97698G               0         4.543k    677.363k               1.0726          4.71402k       3.19311G          2.23696M                    3.54222                     3.30246           471.402k    2.45055k   631.515k       2.57153G/s   6.88073m   4.62391k   682.889k         1.08135   4.37227k/s 2.98578G/s     2.23696M               3.54222                3.27573        100       437.227k/s [best: throughput=  2.98 GB/s doc_throughput=  4714 docs/s instructions=     2236963 cycles=      677363 branch_miss=    2261 cache_miss=       0 cache_ref=      4543 items=       100 avg_time=    214022 ns]
PartialTweets<Dom>           341443 ns       341437 ns         2049           3.693k           1.95982G               0        30.992k    1028.98k              1.62938          3.10336k       3.19329G          3.07043M                    4.86201                     2.98396           310.336k    3.86792k   631.515k       1.72256G/s    1.34749   31.2964k   1036.31k         1.64098    2.9288k/s 3.03513G/s     3.07043M               4.86201                2.96287        100        292.88k/s [best: throughput=  1.96 GB/s doc_throughput=  3103 docs/s instructions=     3070434 cycles=     1028978 branch_miss=    3693 cache_miss=       0 cache_ref=     30992 items=       100 avg_time=    324842 ns]
Creating a source file spanning 44921 KB 
LargeRandom<Dom>           99626214 ns     99618156 ns            7         856.354k           462.345M        6.76923M         6.895M    317.243M              6.89676           10.0512       3.18868G          989.581M                    21.5132                     3.11932           10.0512M     856.14k   45.9988M        440.36M/s   6.79832M   6.89507M   317.529M         6.90299    10.0383/s 3.18746G/s     989.581M               21.5132                3.11651      1000k       10.0383M/s [best: throughput=  0.46 GB/s doc_throughput=    10 docs/s instructions=   989581013 cycles=   317242511 branch_miss=  856354 cache_miss= 6769229 cache_ref=   6894997 items=   1000000 avg_time=  99597243 ns]
LargeRandomSum<Dom>        98975014 ns     98971853 ns            7         855.025k            465.23M         6.4446M       6.51906M    315.227M              6.85294            10.114       3.18819G          994.581M                    21.6219                     3.15513            10.114M    855.535k   45.9988M       443.236M/s   6.42978M   6.51919M   315.466M         6.85814    10.1039/s 3.18743G/s     994.581M               21.6219                3.15274      1000k       10.1039M/s [best: throughput=  0.47 GB/s doc_throughput=    10 docs/s instructions=   994581029 cycles=   315226981 branch_miss=  855025 cache_miss= 6444596 cache_ref=   6519055 items=   1000000 avg_time=  98945276 ns]
LargeRandom<OnDemand>      68976274 ns     68974499 ns           10          862.65k           668.134M        3.47362M       3.57262M    219.508M              4.77203            14.525       3.18836G          666.959M                    14.4995                     3.03843            14.525M    862.296k   45.9988M       636.001M/s   3.50007M   3.57269M   219.838M         4.77922    14.4981/s 3.18724G/s     666.959M               14.4995                3.03386      1000k       14.4981M/s [best: throughput=  0.67 GB/s doc_throughput=    14 docs/s instructions=   666958641 cycles=   219507606 branch_miss=  862650 cache_miss= 3473624 cache_ref=   3572618 items=   1000000 avg_time=  68948687 ns]
LargeRandomSum<OnDemand>   67878454 ns     67872868 ns           10         864.916k           679.409M        3.12386M        3.1966M    215.892M              4.69342           14.7702       3.18875G          640.958M                    13.9342                     2.96889           14.7702M    864.915k   45.9988M       646.324M/s   3.13703M   3.19662M   216.328M          4.7029    14.7334/s 3.18725G/s     640.958M               13.9342                2.96291      1000k       14.7334M/s [best: throughput=  0.68 GB/s doc_throughput=    14 docs/s instructions=   640958346 cycles=   215891669 branch_miss=  864916 cache_miss= 3123859 cache_ref=   3196603 items=   1000000 avg_time=  67850319 ns]
Creating a source file spanning 134087 KB 
Kostya<Dom>                99039110 ns     99036278 ns            7         451.441k           1.38926G        10.1778M       10.3149M    315.114M                2.295           10.1181       3.18834G          972.126M                    7.08005                     3.08499           5.30477M     451.37k   137.305M        1.2912G/s   10.2232M   10.3147M    315.64M         2.29882    10.0973/s 3.18711G/s     972.126M               7.08005                3.07986   524.288k        5.2939M/s [best: throughput=  1.39 GB/s doc_throughput=    10 docs/s instructions=   972125799 cycles=   315114295 branch_miss=  451441 cache_miss=10177769 cache_ref=  10314938 items=    524288 avg_time=  99008603 ns]
KostyaSum<Dom>             98668700 ns     98658781 ns            7         455.208k           1.39377G         10.021M       10.1173M    314.075M              2.28742           10.1509       3.18814G          974.747M                    7.09914                     3.10355             5.322M    455.376k   137.305M       1.29614G/s   10.0293M   10.1174M   314.419M         2.28993    10.1359/s 3.18694G/s     974.747M               7.09914                3.10015   524.288k       5.31415M/s [best: throughput=  1.39 GB/s doc_throughput=    10 docs/s instructions=   974747252 cycles=   314074706 branch_miss=  455208 cache_miss=10021026 cache_ref=  10117293 items=    524288 avg_time=  98638103 ns]
Kostya<OnDemand>           69786406 ns     69784285 ns           10          463.59k           1.97004G         6.4612M       6.47139M    222.118M               1.6177           14.3479       3.18693G          697.595M                    5.08062                     3.14065           7.52244M    464.639k   137.305M       1.83244G/s   6.36047M   6.47121M   222.391M         1.61968    14.3299/s 3.18683G/s     697.595M               5.08062                 3.1368   524.288k       7.51298M/s [best: throughput=  1.97 GB/s doc_throughput=    14 docs/s instructions=   697594941 cycles=   222118354 branch_miss=  463590 cache_miss= 6461201 cache_ref=   6471393 items=    524288 avg_time=  69756489 ns]
KostyaSum<OnDemand>        69847230 ns     69845198 ns           10         462.481k           1.96832G        6.16538M       6.27395M    222.439M              1.62003           14.3354       3.18873G          695.498M                    5.06535                      3.1267           7.51585M    462.836k   137.305M       1.83084G/s   6.19227M    6.2739M   222.585M          1.6211    14.3174/s 3.18684G/s     695.498M               5.06535                3.12463   524.288k       7.50643M/s [best: throughput=  1.97 GB/s doc_throughput=    14 docs/s instructions=   695497791 cycles=   222438525 branch_miss=  462481 cache_miss= 6165382 cache_ref=   6273946 items=    524288 avg_time=  69816904 ns]
DistinctUserID<Dom>          341368 ns       341360 ns         2044           4.038k           1.97541G               2        32.584k    1020.85k              1.61651          3.12805k       3.19328G          3.02096M                    4.78367                     2.95926           359.726k    4.23924k   631.515k       1.72295G/s    2.11008   32.7706k   1028.84k         1.62916   2.92946k/s 3.01395G/s     3.02096M               4.78367                2.93628        115       336.888k/s [best: throughput=  1.98 GB/s doc_throughput=  3128 docs/s instructions=     3020962 cycles=     1020852 branch_miss=    4038 cache_miss=       2 cache_ref=     32584 items=       115 avg_time=    322509 ns]
On Demand implementation: haswell
DistinctUserID<OnDemand>     225603 ns       225598 ns         3128           2.063k           3.04289G               0         6.956k    662.738k              1.04944          4.81839k       3.19333G           2.2004M                    3.48432                     3.32017           554.115k    2.19253k   631.515k       2.60704G/s   319.693u   7.05191k   668.024k         1.05781   4.43266k/s 2.96112G/s      2.2004M               3.48432                3.29389        115       509.755k/s [best: throughput=  3.04 GB/s doc_throughput=  4818 docs/s instructions=     2200400 cycles=      662738 branch_miss=    2063 cache_miss=       0 cache_ref=      6956 items=       115 avg_time=    209321 ns]
FindTweet<Dom>               322596 ns       322594 ns         2170           3.592k           2.09458G               5        26.663k    962.837k              1.52465          3.31676k        3.1935G          2.93044M                    4.64034                     3.04355           3.31676k    3.73927k   631.515k       1.82317G/s     4.8871   26.6836k   969.008k         1.53442   3.09987k/s  3.0038G/s     2.93044M               4.64034                3.02417          1       3.09987k/s [best: throughput=  2.09 GB/s doc_throughput=  3316 docs/s instructions=     2930442 cycles=      962837 branch_miss=    3592 cache_miss=       5 cache_ref=     26663 items=         1 avg_time=    303693 ns]
On Demand implementation: haswell
FindTweet<OnDemand>          171790 ns       171783 ns         4115           1.264k           4.09516G               1         3.789k    492.605k             0.780037          6.48466k       3.19438G           1.5712M                    2.48798                     3.18957           6.48466k    1.34659k   631.515k       3.42376G/s    1.01264   3.86194k   495.405k        0.784471    5.8213k/s  2.8839G/s      1.5712M               2.48798                3.17154          1        5.8213k/s [best: throughput=  4.10 GB/s doc_throughput=  6484 docs/s instructions=     1571199 cycles=      492605 branch_miss=    1264 cache_miss=       1 cache_ref=      3789 items=         1 avg_time=    155287 ns]
