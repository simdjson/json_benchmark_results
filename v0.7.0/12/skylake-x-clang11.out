run_benchmark: v0.8.0~26 /home/jkeiser/simdjson_benchmark_results/v0.7.0/12/skylake-x-clang11.json -DCMAKE_BUILD_TYPE=Release
git reset --hard v0.8.0~26
HEAD is now at 93807bf2 Merge pull request #1352 from simdjson/jkeiser/assert-test-release
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- git Version: v0.2.1-93807bf2
-- Version: 0.2.1
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES -- failed to compile
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 11
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
make[3]: Nothing to be done for '_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build'.
[ 72%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
make[3]: Nothing to be done for 'jsonexamples/generated/CMakeFiles/generated-data.dir/build'.
[ 81%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/clang++-11  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/src  -O3 -DNDEBUG -fPIC   -pthread -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/clang++-11 -fPIC -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.6 -o ../libsimdjson.so.6.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.6.0.0 ../libsimdjson.so.6 ../libsimdjson.so
[ 90%] Built target simdjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/clang++-11  -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/clang++-11  -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.6.0.0 ../_deps/google_benchmarks/src/libbenchmark.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/12/skylake-x-clang11.json --benchmark_out_format=json
2021-01-24 23:09:52
Running benchmark/bench_ondemand
Run on (4 X 3200 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 1024 KiB (x4)
  L3 Unified 8448 KiB (x1)
Load Average: 1.02, 1.01, 1.00
***WARNING*** CPU scaling is enabled, the benchmark real time measurements may be noisy and will incur extra overhead.
On Demand implementation: fallback
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Benchmark                         Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
PartialTweets<OnDemand>     1448266 ns      1448189 ns          483          33.183k           444.572M               0         2.329k    4.53528M              7.18158           703.976       3.19273G          10.9174M                    17.2877                     2.40723           70.3976k    34.0968k   631.515k       415.871M/s     1.5176   2.66644k    4.5726M         7.24068    690.517/s 3.15746G/s     10.9174M               17.2877                2.38758        100       69.0517k/s [best: throughput=  0.44 GB/s doc_throughput=   703 docs/s instructions=    10917444 cycles=     4535278 branch_miss=   33183 cache_miss=       0 cache_ref=      2329 items=       100 avg_time=   1433532 ns]
PartialTweets<Dom>           328895 ns       328892 ns         2108           3.535k            2.0334G               1        31.278k    991.736k              1.57041          3.21988k       3.19327G           2.9875M                    4.73069                      3.0124           321.988k    3.69807k   631.515k       1.78826G/s   0.818786   31.2658k   998.318k         1.58083   3.04052k/s  3.0354G/s      2.9875M               4.73069                2.99254        100       304.052k/s [best: throughput=  2.03 GB/s doc_throughput=  3219 docs/s instructions=     2987503 cycles=      991736 branch_miss=    3535 cache_miss=       1 cache_ref=     31278 items=       100 avg_time=    312922 ns]
Creating a source file spanning 44921 KB 
LargeRandom<Dom>          101122582 ns    101121644 ns            7         959.615k           456.057M        6.80026M       6.89549M    321.625M              6.99203           9.91454       3.18876G          1036.74M                    22.5384                     3.22344           9.91454M    961.757k   45.9988M       433.813M/s   6.80763M   6.89584M   322.349M         7.00778    9.88908/s 3.18774G/s     1036.74M               22.5384                3.21619      1000k       9.88908M/s [best: throughput=  0.46 GB/s doc_throughput=     9 docs/s instructions=  1036738085 cycles=   321624648 branch_miss=  959615 cache_miss= 6800259 cache_ref=   6895493 items=   1000000 avg_time= 101095301 ns]
LargeRandomSum<Dom>       101064757 ns    101055199 ns            7         959.984k           457.214M        6.38614M       6.51929M    320.729M              6.97255           9.93971       3.18795G          1025.74M                    22.2992                     3.19815           9.93971M    961.584k   45.9988M       434.098M/s   6.41524M    6.5197M   322.108M         7.00253    9.89558/s 3.18744G/s     1025.74M               22.2992                3.18446      1000k       9.89558M/s [best: throughput=  0.46 GB/s doc_throughput=     9 docs/s instructions=  1025738086 cycles=   320728863 branch_miss=  959984 cache_miss= 6386136 cache_ref=   6519294 items=   1000000 avg_time= 101037642 ns]
LargeRandom<OnDemand>     117241202 ns    117238032 ns            6         1.28677M           393.604M        3.51266M       3.57409M    372.673M              8.10181           8.55685       3.18891G          1.17998G                    25.6523                     3.16625           8.55685M    1.28632M   45.9988M       374.178M/s   3.52579M   3.57437M   373.531M         8.12045    8.52966/s 3.18609G/s     1.17998G               25.6523                3.15898      1000k       8.52966M/s [best: throughput=  0.39 GB/s doc_throughput=     8 docs/s instructions=  1179976268 cycles=   372673449 branch_miss= 1286770 cache_miss= 3512661 cache_ref=   3574086 items=   1000000 avg_time= 117213678 ns]
LargeRandomSum<OnDemand>  118059080 ns    118055981 ns            6         1.32953M           391.793M        3.08691M       3.19766M    374.369M              8.13868           8.51746       3.18867G          1.17498G                    25.5436                     3.13855           8.51746M    1.32765M   45.9988M       371.585M/s   3.11585M   3.19783M   376.363M         8.18201    8.47056/s   3.188G/s     1.17498G               25.5436                3.12193      1000k       8.47056M/s [best: throughput=  0.39 GB/s doc_throughput=     8 docs/s instructions=  1174976270 cycles=   374369280 branch_miss= 1329527 cache_miss= 3086908 cache_ref=   3197661 items=   1000000 avg_time= 118031513 ns]
Creating a source file spanning 134087 KB 
Kostya<Dom>               107201416 ns    107198615 ns            7         1022.58k           1.28301G         10.134M       10.3175M    341.253M              2.48537           9.34421       3.18874G          984.675M                    7.17144                     2.88547           4.89906M    1021.95k   137.305M       1.19288G/s   10.1948M   10.3175M   341.716M         2.48873    9.32848/s 3.18769G/s     984.675M               7.17144                2.88156   524.288k       4.89081M/s [best: throughput=  1.28 GB/s doc_throughput=     9 docs/s instructions=   984674877 cycles=   341253392 branch_miss= 1022583 cache_miss=10133980 cache_ref=  10317479 items=    524288 avg_time= 107172400 ns]
KostyaSum<Dom>            106600364 ns    106599391 ns            7         1022.21k           1.29064G        9.96628M       10.1204M    339.249M              2.47077           9.39979       3.18887G          977.859M                     7.1218                     2.88242            4.9282M     1022.6k   137.305M       1.19959G/s    10.011M   10.1205M   339.806M         2.47483    9.38092/s  3.1877G/s     977.859M                7.1218                 2.8777   524.288k        4.9183M/s [best: throughput=  1.29 GB/s doc_throughput=     9 docs/s instructions=   977859128 cycles=   339249385 branch_miss= 1022210 cache_miss= 9966281 cache_ref=  10120442 items=    524288 avg_time= 106571492 ns]
Kostya<OnDemand>          221657662 ns    221650741 ns            3         692.099k           619.711M        6.41053M       6.47163M    706.721M              5.14709           4.51339        3.1897G          2.19309G                    15.9724                      3.1032           2.36631M    692.011k   137.305M       590.768M/s   6.43255M   6.47202M   706.871M         5.14818     4.5116/s 3.18912G/s     2.19309G               15.9724                3.10254   524.288k       2.36538M/s [best: throughput=  0.62 GB/s doc_throughput=     4 docs/s instructions=  2193094021 cycles=   706720859 branch_miss=  692099 cache_miss= 6410532 cache_ref=   6471630 items=    524288 avg_time= 221625618 ns]
KostyaSum<OnDemand>       224413107 ns    224406716 ns            3         726.617k           612.318M        6.22808M       6.27506M    715.207M              5.20889           4.45955        3.1895G          2.19519G                    15.9877                     3.06931           2.33809M    726.245k   137.305M       583.513M/s    6.2311M   6.27484M   715.661M          5.2122    4.45619/s 3.18913G/s     2.19519G               15.9877                3.06736   524.288k       2.33633M/s [best: throughput=  0.61 GB/s doc_throughput=     4 docs/s instructions=  2195190643 cycles=   715206591 branch_miss=  726617 cache_miss= 6228079 cache_ref=   6275064 items=    524288 avg_time= 224380482 ns]
DistinctUserID<Dom>          325651 ns       325641 ns         2155           3.943k           2.06861G               1        32.436k    974.964k              1.54385          3.27564k       3.19363G           2.9272M                    4.63521                     3.00237           376.698k    4.06985k   631.515k       1.80611G/s    1.99443   32.5426k   981.923k         1.55487   3.07086k/s 3.01535G/s     2.92721M               4.63521                 2.9811        115       353.149k/s [best: throughput=  2.07 GB/s doc_throughput=  3275 docs/s instructions=     2927205 cycles=      974964 branch_miss=    3943 cache_miss=       1 cache_ref=     32436 items=       115 avg_time=    307782 ns]
On Demand implementation: fallback
DistinctUserID<OnDemand>    1415978 ns      1415949 ns          494           32.37k           455.276M               4         3.138k    4.42865M              7.01274           720.926       3.19273G          10.5944M                    16.7761                     2.39224           82.9065k    33.3873k   631.515k        425.34M/s    2.99393    3.2559k   4.46411M         7.06889     706.24/s 3.15273G/s     10.5944M               16.7761                2.37323        115       81.2176k/s [best: throughput=  0.46 GB/s doc_throughput=   720 docs/s instructions=    10594382 cycles=     4428653 branch_miss=   32370 cache_miss=       4 cache_ref=      3138 items=       115 avg_time=   1399148 ns]
FindTweet<Dom>               308339 ns       308333 ns         2245             3.4k           2.19592G               0        26.962k    918.416k              1.45431          3.47722k       3.19354G          2.83257M                    4.48536                     3.08419           3.47722k    3.53771k   631.515k        1.9075G/s  0.0146993   27.0366k   925.455k         1.46545   3.24325k/s 3.00148G/s     2.83257M               4.48536                3.06073          1       3.24325k/s [best: throughput=  2.20 GB/s doc_throughput=  3477 docs/s instructions=     2832569 cycles=      918416 branch_miss=    3400 cache_miss=       0 cache_ref=     26962 items=         1 avg_time=    290044 ns]
On Demand implementation: fallback
FindTweet<OnDemand>         1359062 ns      1359037 ns          515          31.419k            475.59M               0         2.181k    4.23958M              6.71334           753.094        3.1928G          10.0923M                    15.9812                     2.38051            753.094    32.7295k   631.515k       443.152M/s   0.133981   2.51884k   4.28253M         6.78136    735.815/s 3.15115G/s     10.0923M               15.9812                2.35663          1        735.815/s [best: throughput=  0.48 GB/s doc_throughput=   753 docs/s instructions=    10092344 cycles=     4239578 branch_miss=   31419 cache_miss=       0 cache_ref=      2181 items=         1 avg_time=   1342236 ns]
