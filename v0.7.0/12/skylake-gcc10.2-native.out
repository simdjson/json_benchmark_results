run_benchmark: v0.8.0~26 /home/jkeiser/simdjson_benchmark_results/v0.7.0/12/skylake-gcc10.2-native.json -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native
git reset --hard v0.8.0~26
HEAD is now at 93807bf2 Merge pull request #1352 from simdjson/jkeiser/assert-test-release
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- git Version: v0.2.1-93807bf2
-- Version: 0.2.1
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 11
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
make[3]: Nothing to be done for '_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build'.
[ 72%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
make[3]: Nothing to be done for 'jsonexamples/generated/CMakeFiles/generated-data.dir/build'.
[ 81%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/g++-10  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/src  -march=native -O3 -DNDEBUG -fPIC   -pthread -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/g++-10 -fPIC -march=native -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.6 -o ../libsimdjson.so.6.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.6.0.0 ../libsimdjson.so.6 ../libsimdjson.so
[ 90%] Built target simdjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/g++-10  -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/g++-10  -march=native -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.6.0.0 ../_deps/google_benchmarks/src/libbenchmark.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/12/skylake-gcc10.2-native.json --benchmark_out_format=json
2021-01-25 02:19:31
Running benchmark/bench_ondemand
Run on (4 X 4000 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 256 KiB (x4)
  L3 Unified 8192 KiB (x1)
Load Average: 1.08, 1.02, 0.97
On Demand implementation: haswell
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Benchmark                         Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
PartialTweets<OnDemand>      180243 ns       180243 ns         3882           1.681k           3.68975G               0        58.393k    632.051k              1.00085          5.84269k       3.69288G          2.14256M                    3.39273                     3.38985           584.269k    1.77893k   631.515k       3.26307G/s  0.0669758   58.5308k   635.942k         1.00701   5.54807k/s 3.52826G/s     2.14256M               3.39273                3.36911        100       554.807k/s [best: throughput=  3.69 GB/s doc_throughput=  5842 docs/s instructions=     2142559 cycles=      632051 branch_miss=    1681 cache_miss=       0 cache_ref=     58393 items=       100 avg_time=    172319 ns]
PartialTweets<Dom>           267208 ns       267208 ns         2624           3.665k           2.45093G               0        93.102k     951.42k              1.50657          3.88104k        3.6925G          2.91501M                    4.61589                     3.06385           388.104k    3.79067k   631.515k       2.20108G/s   0.940549   93.1061k   956.012k         1.51384   3.74241k/s 3.57778G/s     2.91501M               4.61589                3.04913        100       374.241k/s [best: throughput=  2.45 GB/s doc_throughput=  3881 docs/s instructions=     2915006 cycles=      951420 branch_miss=    3665 cache_miss=       0 cache_ref=     93102 items=       100 avg_time=    259049 ns]
Creating a source file spanning 44921 KB 
LargeRandom<Dom>           91573612 ns     91573067 ns            8         871.705k           504.405M        11.1609M       15.6163M    336.377M              7.31275           10.9656       3.68859G          972.675M                    21.1457                     2.89162           10.9656M    871.414k   45.9988M       479.048M/s   11.0887M   15.6154M   337.734M         7.34223    10.9202/s 3.68813G/s     972.675M               21.1457                2.88001      1000k       10.9202M/s [best: throughput=  0.50 GB/s doc_throughput=    10 docs/s instructions=   972674948 cycles=   336377473 branch_miss=  871705 cache_miss=11160855 cache_ref=  15616253 items=   1000000 avg_time=  91559178 ns]
LargeRandomSum<Dom>        91835602 ns     91833922 ns            8         871.983k           502.433M          10.41M       14.7502M    337.731M              7.34218           10.9227       3.68895G          977.675M                    21.2544                     2.89483           10.9227M    872.162k   45.9988M       477.687M/s   10.4665M   14.7518M   338.703M          7.3633    10.8892/s 3.68821G/s     977.675M               21.2544                2.88653      1000k       10.8892M/s [best: throughput=  0.50 GB/s doc_throughput=    10 docs/s instructions=   977674957 cycles=   337731435 branch_miss=  871983 cache_miss=10409974 cache_ref=  14750161 items=   1000000 avg_time=  91821359 ns]
LargeRandom<OnDemand>      60926866 ns     60927246 ns           11         856.893k           757.386M        5.60247M       8.09152M    224.048M              4.87073           16.4654       3.68903G          659.053M                    14.3276                     2.94157           16.4654M     857.24k   45.9988M       720.004M/s   5.65812M   8.09441M   224.712M         4.88517     16.413/s  3.6882G/s     659.053M               14.3276                2.93288      1000k        16.413M/s [best: throughput=  0.76 GB/s doc_throughput=    16 docs/s instructions=   659052570 cycles=   224047772 branch_miss=  856893 cache_miss= 5602474 cache_ref=   8091516 items=   1000000 avg_time=  60914147 ns]
LargeRandomSum<OnDemand>   59234549 ns     59234055 ns           12         862.204k           777.832M        4.99532M       7.22557M    218.159M              4.74272           16.9098       3.68904G          633.052M                    13.7624                     2.90179           16.9098M     862.15k   45.9988M       740.585M/s   5.04609M   7.22774M   218.463M         4.74932    16.8822/s 3.68813G/s     633.052M               13.7624                2.89776      1000k       16.8822M/s [best: throughput=  0.78 GB/s doc_throughput=    16 docs/s instructions=   633052275 cycles=   218159134 branch_miss=  862204 cache_miss= 4995321 cache_ref=   7225570 items=   1000000 avg_time=  59222020 ns]
Creating a source file spanning 134087 KB 
Kostya<Dom>                86253253 ns     86252469 ns            8          441.12k           1.59432G        16.0152M       22.7668M    317.683M              2.31371           11.6115       3.68879G          937.516M                    6.82798                      2.9511           6.08779M     440.75k   137.305M       1.48257G/s   16.0108M   22.7316M    318.11M         2.31681    11.5939/s 3.68813G/s     937.516M               6.82798                2.94714   524.288k       6.07853M/s [best: throughput=  1.59 GB/s doc_throughput=    11 docs/s instructions=   937516409 cycles=   317683311 branch_miss=  441120 cache_miss=16015207 cache_ref=  22766783 items=    524288 avg_time=  86238621 ns]
KostyaSum<Dom>             86114403 ns     86114864 ns            8         441.177k           1.59692G        15.7465M       22.2382M    317.163M              2.30992           11.6305       3.68876G          940.138M                    6.84708                     2.96421           6.09772M    441.127k   137.305M       1.48494G/s   15.7696M   22.2213M   317.598M         2.31309    11.6124/s 3.68808G/s     940.138M               6.84708                2.96015   524.288k       6.08824M/s [best: throughput=  1.60 GB/s doc_throughput=    11 docs/s instructions=   940137863 cycles=   317163056 branch_miss=  441177 cache_miss=15746531 cache_ref=  22238182 items=    524288 avg_time=  86099042 ns]
Kostya<OnDemand>           63665261 ns     63665666 ns           11         481.255k           2.16242G        10.1604M       14.2185M    234.238M              1.70597            15.749       3.68902G          673.996M                    4.90875                     2.87739           8.25703M    480.676k   137.305M       2.00854G/s   10.2457M   14.2754M   234.781M         1.70993    15.7071/s 3.68772G/s     673.996M               4.90875                2.87074   524.288k       8.23502M/s [best: throughput=  2.16 GB/s doc_throughput=    15 docs/s instructions=   673995610 cycles=   234238153 branch_miss=  481255 cache_miss=10160432 cache_ref=  14218461 items=    524288 avg_time=  63651459 ns]
KostyaSum<OnDemand>        63454430 ns     63453707 ns           11         476.589k           2.16768G        9.84293M       13.8888M      233.6M              1.70133           15.7873       3.68793G          671.898M                    4.89347                     2.87627           8.27711M    476.406k   137.305M       2.01525G/s    9.8888M   13.8901M   234.019M         1.70438    15.7595/s 3.68804G/s     671.898M               4.89347                2.87112   524.288k       8.26253M/s [best: throughput=  2.17 GB/s doc_throughput=    15 docs/s instructions=   671898461 cycles=   233600436 branch_miss=  476589 cache_miss= 9842929 cache_ref=  13888776 items=    524288 avg_time=  63441690 ns]
DistinctUserID<Dom>          271596 ns       271593 ns         2578            3.95k           2.41334G               0        94.461k    966.131k              1.52986          3.82151k       3.69207G          2.86553M                    4.53755                     2.96599           439.473k    4.10826k   631.515k       2.16553G/s    6.29597   94.4539k   971.946k         1.53907   3.68197k/s 3.57868G/s     2.86553M               4.53756                2.94824        115       423.427k/s [best: throughput=  2.41 GB/s doc_throughput=  3821 docs/s instructions=     2865534 cycles=      966131 branch_miss=    3950 cache_miss=       0 cache_ref=     94461 items=       115 avg_time=    263396 ns]
On Demand implementation: haswell
DistinctUserID<OnDemand>     194960 ns       194959 ns         3586           1.781k           3.40104G               0        57.071k    685.599k              1.08564          5.38552k       3.69231G          2.11008M                     3.3413                     3.07772           619.335k    1.90828k   631.515k       3.01676G/s  0.0290017   57.1081k   690.193k         1.09292   5.12929k/s  3.5402G/s     2.11008M                3.3413                3.05723        115       589.868k/s [best: throughput=  3.40 GB/s doc_throughput=  5385 docs/s instructions=     2110083 cycles=      685599 branch_miss=    1781 cache_miss=       0 cache_ref=     57071 items=       115 avg_time=    187019 ns]
FindTweet<Dom>               257514 ns       257511 ns         2716           3.449k           2.54702G               0        83.614k    915.519k              1.44972          4.03319k       3.69246G          2.77501M                    4.39422                     3.03108           4.03319k    3.59429k   631.515k       2.28395G/s    6.00221   83.7206k   920.059k         1.45691   3.88332k/s 3.57288G/s     2.77501M               4.39422                3.01613          1       3.88332k/s [best: throughput=  2.55 GB/s doc_throughput=  4033 docs/s instructions=     2775014 cycles=      915519 branch_miss=    3449 cache_miss=       0 cache_ref=     83614 items=         1 avg_time=    249324 ns]
On Demand implementation: haswell
FindTweet<OnDemand>          129921 ns       129920 ns         5382              686           5.19594G               0        29.663k    448.802k             0.710675          8.22774k       3.69263G          1.48067M                    2.34464                     3.29917           8.22774k     730.828   631.515k       4.52698G/s   0.017094   29.6526k   450.433k        0.713257   7.69706k/s 3.46701G/s     1.48067M               2.34464                3.28722          1       7.69706k/s [best: throughput=  5.20 GB/s doc_throughput=  8227 docs/s instructions=     1480673 cycles=      448802 branch_miss=     686 cache_miss=       0 cache_ref=     29663 items=         1 avg_time=    122032 ns]
