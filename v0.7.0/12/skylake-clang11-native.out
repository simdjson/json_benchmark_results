run_benchmark: v0.8.0~26 /home/jkeiser/simdjson_benchmark_results/v0.7.0/12/skylake-clang11-native.json -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native
git reset --hard v0.8.0~26
HEAD is now at 93807bf2 Merge pull request #1352 from simdjson/jkeiser/assert-test-release
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- git Version: v0.2.1-93807bf2
-- Version: 0.2.1
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES -- failed to compile
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 11
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
make[3]: Nothing to be done for '_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build'.
[ 72%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
make[3]: Nothing to be done for 'jsonexamples/generated/CMakeFiles/generated-data.dir/build'.
[ 81%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/clang++-11  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/src  -march=native -O3 -DNDEBUG -fPIC   -pthread -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/clang++-11 -fPIC -march=native -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.6 -o ../libsimdjson.so.6.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.6.0.0 ../libsimdjson.so.6 ../libsimdjson.so
[ 90%] Built target simdjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/clang++-11  -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/clang++-11  -march=native -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.6.0.0 ../_deps/google_benchmarks/src/libbenchmark.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/12/skylake-clang11-native.json --benchmark_out_format=json
2021-01-25 02:01:39
Running benchmark/bench_ondemand
Run on (4 X 4000 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 256 KiB (x4)
  L3 Unified 8192 KiB (x1)
Load Average: 1.00, 1.00, 0.79
On Demand implementation: haswell
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Benchmark                         Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
PartialTweets<OnDemand>      170352 ns       170353 ns         4109           1.708k           3.91737G               0        58.303k    595.285k              0.94263          6.20313k       3.69263G          1.88126M                    2.97897                     3.16027           620.313k    1.82299k   631.515k        3.4525G/s   0.301533   58.2553k   599.271k        0.948942   5.87016k/s 3.51782G/s     1.88126M               2.97897                3.13925        100       587.016k/s [best: throughput=  3.92 GB/s doc_throughput=  6203 docs/s instructions=     1881263 cycles=      595285 branch_miss=    1708 cache_miss=       0 cache_ref=     58303 items=       100 avg_time=    162383 ns]
PartialTweets<Dom>           282072 ns       282071 ns         2485           3.738k            2.3195G               0        93.035k    1005.24k              1.59179          3.67291k       3.69214G          2.99807M                    4.74742                     2.98244           367.291k    3.87864k   631.515k       2.08509G/s   0.157344     93.06k   1010.29k         1.59978    3.5452k/s 3.58167G/s     2.99807M               4.74742                2.96754        100        354.52k/s [best: throughput=  2.32 GB/s doc_throughput=  3672 docs/s instructions=     2998067 cycles=     1005238 branch_miss=    3738 cache_miss=       0 cache_ref=     93035 items=       100 avg_time=    273766 ns]
Creating a source file spanning 44921 KB 
LargeRandom<Dom>           88572903 ns     88556150 ns            8         922.507k            520.46M        10.8638M       15.4168M    326.037M              7.08795           11.3147       3.68899G          1034.69M                    22.4938                     3.17352           11.3147M    921.043k   45.9988M       495.368M/s   10.9261M    15.424M     326.6M         7.10019    11.2923/s 3.68806G/s     1034.69M               22.4938                3.16805      1000k       11.2923M/s [best: throughput=  0.52 GB/s doc_throughput=    11 docs/s instructions=  1034686010 cycles=   326036960 branch_miss=  922507 cache_miss=10863774 cache_ref=  15416800 items=   1000000 avg_time=  88558906 ns]
LargeRandomSum<Dom>        88051300 ns     88050577 ns            8         915.377k           523.039M         10.261M       14.5698M    324.432M              7.05306           11.3707       3.68902G          1027.69M                    22.3416                     3.16764           11.3707M    919.203k   45.9988M       498.212M/s   10.2958M   14.5704M    324.72M         7.05932    11.3571/s 3.68788G/s     1027.69M               22.3416                3.16484      1000k       11.3571M/s [best: throughput=  0.52 GB/s doc_throughput=    11 docs/s instructions=  1027686009 cycles=   324432240 branch_miss=  915377 cache_miss=10261025 cache_ref=  14569800 items=   1000000 avg_time=  88037068 ns]
LargeRandom<OnDemand>      62587417 ns     62586814 ns           11         897.769k            735.64M        5.55627M        8.0232M    230.673M              5.01475           15.9926       3.68905G          623.142M                    13.5469                     2.70141           15.9926M    897.343k   45.9988M       700.912M/s   5.60837M   8.02521M   230.812M         5.01779    15.9778/s 3.68787G/s     623.142M               13.5469                2.69978      1000k       15.9778M/s [best: throughput=  0.74 GB/s doc_throughput=    15 docs/s instructions=   623142097 cycles=   230672552 branch_miss=  897769 cache_miss= 5556266 cache_ref=   8023203 items=   1000000 avg_time=  62574656 ns]
LargeRandomSum<OnDemand>   62907128 ns     62894938 ns           11         908.402k           732.384M        4.95438M        7.1576M    231.695M              5.03697           15.9218         3.689G          622.142M                    13.5252                     2.68518           15.9218M    912.601k   45.9988M       697.478M/s   5.00057M   7.16008M   231.951M         5.04255    15.8995/s 3.68792G/s     622.142M               13.5252                2.68221      1000k       15.8995M/s [best: throughput=  0.73 GB/s doc_throughput=    15 docs/s instructions=   622141905 cycles=   231694582 branch_miss=  908402 cache_miss= 4954383 cache_ref=   7157599 items=   1000000 avg_time=  62894721 ns]
Creating a source file spanning 134087 KB 
Kostya<Dom>                94117182 ns     94117734 ns            7         1044.48k            1.4607G        15.8412M       22.4778M    346.506M              2.52362           10.6384       3.68626G          985.272M                    7.17579                     2.84345           5.57757M    1044.43k   137.305M       1.35867G/s   15.8278M    22.421M    347.05M         2.52758     10.625/s  3.6874G/s     985.272M               7.17579                2.83899   524.288k       5.57055M/s [best: throughput=  1.46 GB/s doc_throughput=    10 docs/s instructions=   985271659 cycles=   346505975 branch_miss= 1044481 cache_miss=15841188 cache_ref=  22477756 items=    524288 avg_time=  94101974 ns]
KostyaSum<Dom>             92737958 ns     92720622 ns            8         1043.02k           1.48357G         15.379M       21.8537M     341.42M              2.48658           10.8049       3.68902G          982.126M                    7.15288                     2.87659           5.66489M    1044.76k   137.305M       1.37915G/s   15.4153M   21.7938M   341.969M         2.49058    10.7851/s 3.68816G/s     982.126M               7.15288                2.87198   524.288k       5.65449M/s [best: throughput=  1.48 GB/s doc_throughput=    10 docs/s instructions=   982125929 cycles=   341419849 branch_miss= 1043017 cache_miss=15379019 cache_ref=  21853663 items=    524288 avg_time=  92723337 ns]
Kostya<OnDemand>           60253463 ns     60251650 ns           12         491.394k            2.2808G        9.89775M       13.9198M    222.059M              1.61727           16.6112       3.68867G          630.566M                    4.59245                     2.83963           8.70905M    492.618k   137.305M       2.12235G/s   9.93299M   13.9183M   222.196M         1.61827    16.5971/s  3.6878G/s     630.566M               4.59245                2.83788   524.288k       8.70164M/s [best: throughput=  2.28 GB/s doc_throughput=    16 docs/s instructions=   630566007 cycles=   222059359 branch_miss=  491394 cache_miss= 9897747 cache_ref=  13919814 items=    524288 avg_time=  60239986 ns]
KostyaSum<OnDemand>        62380954 ns     62381332 ns           11         479.185k           2.20428G        9.60237M        13.608M    229.769M              1.67342           16.0539        3.6887G           634.76M                    4.62299                     2.76259           8.41687M    479.997k   137.305M        2.0499G/s   9.67619M   13.6064M   229.988M         1.67502    16.0304/s 3.68681G/s      634.76M               4.62299                2.75996   524.288k       8.40457M/s [best: throughput=  2.20 GB/s doc_throughput=    16 docs/s instructions=   634759621 cycles=   229769338 branch_miss=  479185 cache_miss= 9602368 cache_ref=  13607985 items=    524288 avg_time=  62366953 ns]
DistinctUserID<Dom>          285142 ns       285144 ns         2454            4.06k           2.29238G               0        94.708k    1017.15k              1.61065          3.62996k       3.69222G            2.938M                     4.6523                     2.88846           417.446k    4.18691k   631.515k       2.06262G/s   0.219641    94.676k    1021.9k         1.61817     3.507k/s  3.5838G/s       2.938M                4.6523                2.87504        115       403.306k/s [best: throughput=  2.29 GB/s doc_throughput=  3629 docs/s instructions=     2937997 cycles=     1017151 branch_miss=    4060 cache_miss=       0 cache_ref=     94708 items=       115 avg_time=    276952 ns]
On Demand implementation: haswell
DistinctUserID<OnDemand>     169696 ns       169698 ns         4120            1.87k           3.93624G               0        56.524k    592.433k             0.938114          6.23302k       3.69264G          1.88556M                    2.98577                     3.18273           716.797k    2.00305k   631.515k       3.46584G/s   0.442233   56.5293k   596.931k        0.945237   5.89284k/s 3.51762G/s     1.88556M               2.98577                3.15875        115       677.676k/s [best: throughput=  3.94 GB/s doc_throughput=  6233 docs/s instructions=     1885556 cycles=      592433 branch_miss=    1870 cache_miss=       0 cache_ref=     56524 items=       115 avg_time=    161745 ns]
FindTweet<Dom>               271298 ns       271297 ns         2580           3.645k           2.41384G               0        83.828k    966.013k              1.52968          3.82229k       3.69239G          2.84343M                    4.50255                     2.94347           3.82229k    3.75761k   631.515k        2.1679G/s    0.17907   83.9452k   970.999k         1.53757     3.686k/s 3.57911G/s     2.84343M               4.50256                2.92836          1         3.686k/s [best: throughput=  2.41 GB/s doc_throughput=  3822 docs/s instructions=     2843431 cycles=      966013 branch_miss=    3645 cache_miss=       0 cache_ref=     83828 items=         1 avg_time=    263138 ns]
On Demand implementation: haswell
FindTweet<OnDemand>          125184 ns       125161 ns         5589           1.124k           5.42259G               0        29.756k    430.113k             0.681081          8.58664k       3.69323G          1.37956M                    2.18452                     3.20743           8.58664k     1.1931k   631.515k        4.6991G/s   0.470746   29.7932k   432.677k        0.685141   7.98971k/s 3.45696G/s     1.37956M               2.18452                3.18843          1       7.98971k/s [best: throughput=  5.42 GB/s doc_throughput=  8586 docs/s instructions=     1379559 cycles=      430113 branch_miss=    1124 cache_miss=       0 cache_ref=     29756 items=         1 avg_time=    117260 ns]
