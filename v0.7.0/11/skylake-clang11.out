run_benchmark: v0.8.0~27 /home/jkeiser/simdjson_benchmark_results/v0.7.0/11/skylake-clang11.json -DCMAKE_BUILD_TYPE=Release
git reset --hard v0.8.0~27
HEAD is now at 0b67847b Adding clang/msys-ci (#1354)
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- git Version: v0.2.1-0b67847b
-- Version: 0.2.1
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES -- failed to compile
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 11
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
make[3]: Nothing to be done for '_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build'.
[ 72%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
make[3]: Nothing to be done for 'jsonexamples/generated/CMakeFiles/generated-data.dir/build'.
[ 81%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
make[3]: Nothing to be done for 'src/CMakeFiles/simdjson.dir/build'.
[ 90%] Built target simdjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
make[3]: Nothing to be done for 'benchmark/CMakeFiles/bench_ondemand.dir/build'.
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/11/skylake-clang11.json --benchmark_out_format=json
2021-01-25 01:53:28
Running benchmark/bench_ondemand
Run on (4 X 4000 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 256 KiB (x4)
  L3 Unified 8192 KiB (x1)
Load Average: 1.00, 0.87, 0.59
On Demand implementation: fallback
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Benchmark                         Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
PartialTweets<OnDemand>     1247482 ns      1247474 ns          561           33.09k           513.492M               0        55.678k    4.54019M              7.18937           813.111       3.69168G          10.9174M                    17.2877                     2.40462           81.3111k    33.8755k   631.515k       482.783M/s   0.843137   55.8869k   4.57267M          7.2408     801.62/s 3.66555G/s     10.9174M               17.2877                2.38754        100        80.162k/s [best: throughput=  0.51 GB/s doc_throughput=   813 docs/s instructions=    10917436 cycles=     4540193 branch_miss=   33090 cache_miss=       0 cache_ref=     55678 items=       100 avg_time=   1239306 ns]
PartialTweets<Dom>           280979 ns       280981 ns         2479           3.461k           2.32937G               2        87.571k    1001.05k              1.58516          3.68854k       3.69242G           2.9875M                    4.73068                     2.98436           368.854k    3.58015k   631.515k       2.09318G/s    2.27269   87.6718k   1006.54k         1.59385   3.55896k/s 3.58223G/s      2.9875M               4.73068                2.96808        100       355.896k/s [best: throughput=  2.33 GB/s doc_throughput=  3688 docs/s instructions=     2987495 cycles=     1001051 branch_miss=    3461 cache_miss=       2 cache_ref=     87571 items=       100 avg_time=    272756 ns]
Creating a source file spanning 44921 KB 
LargeRandom<Dom>           89805861 ns     89805346 ns            8         962.898k           513.031M        10.9353M       15.2216M    330.749M              7.19039           11.1531       3.68889G          1036.74M                    22.5384                     3.13451           11.1531M    969.266k   45.9988M       488.477M/s   10.9751M   15.2285M   331.213M         7.20048    11.1352/s 3.68812G/s     1036.74M               22.5384                3.13012      1000k       11.1352M/s [best: throughput=  0.51 GB/s doc_throughput=    11 docs/s instructions=  1036738075 cycles=   330749350 branch_miss=  962898 cache_miss=10935288 cache_ref=  15221560 items=   1000000 avg_time=  89791902 ns]
LargeRandomSum<Dom>        90077306 ns     90077896 ns            8         967.504k           511.458M        10.3403M       14.3879M    331.763M              7.21242           11.1189       3.68885G          1025.74M                    22.2992                     3.09178           11.1189M    967.572k   45.9988M       486.999M/s   10.3873M   14.3889M   332.205M         7.22203    11.1015/s 3.68797G/s     1025.74M               22.2992                3.08767      1000k       11.1015M/s [best: throughput=  0.51 GB/s doc_throughput=    11 docs/s instructions=  1025738076 cycles=   331762672 branch_miss=  967504 cache_miss=10340290 cache_ref=  14387946 items=   1000000 avg_time=  90062945 ns]
LargeRandom<OnDemand>     103958661 ns    103959344 ns            7         1.28328M           444.035M        5.68247M       7.91477M    382.172M              8.30831            9.6532       3.68918G          1.17998G                    25.6523                     3.08755            9.6532M    1.28135M   45.9988M       421.971M/s   5.67474M   7.91418M   383.462M         8.33634    9.61914/s 3.68857G/s     1.17998G               25.6523                3.07717      1000k       9.61914M/s [best: throughput=  0.44 GB/s doc_throughput=     9 docs/s instructions=  1179976256 cycles=   382171905 branch_miss= 1283284 cache_miss= 5682473 cache_ref=   7914771 items=   1000000 avg_time= 103945176 ns]
LargeRandomSum<OnDemand>  104349170 ns    104348496 ns            7         1.33133M           442.155M        5.02933M       7.05895M    383.785M              8.34337           9.61232       3.68906G          1.17498G                    25.5436                     3.06155           9.61232M    1.33189M   45.9988M       420.398M/s   5.06801M   7.06075M   384.897M         8.36756    9.58327/s 3.68858G/s     1.17498G               25.5436                 3.0527      1000k       9.58327M/s [best: throughput=  0.44 GB/s doc_throughput=     9 docs/s instructions=  1174976260 cycles=   383784914 branch_miss= 1331335 cache_miss= 5029327 cache_ref=   7058954 items=   1000000 avg_time= 104336328 ns]
Creating a source file spanning 134087 KB 
Kostya<Dom>                93308334 ns     93308922 ns            7          1019.2k           1.47249G        15.8259M       22.2426M    343.962M              2.50509           10.7242       3.68872G          984.675M                    7.17144                     2.86275           5.62258M    1019.38k   137.305M       1.37045G/s   15.8267M   22.2261M   344.147M         2.50645    10.7171/s 3.68826G/s     984.675M               7.17144                 2.8612   524.288k       5.61884M/s [best: throughput=  1.47 GB/s doc_throughput=    10 docs/s instructions=   984674863 cycles=   343961575 branch_miss= 1019197 cache_miss=15825932 cache_ref=  22242597 items=    524288 avg_time=  93293609 ns]
KostyaSum<Dom>             93151337 ns     93150615 ns            8         1019.71k           1.47578G        15.5144M        21.813M    343.218M              2.49968           10.7482       3.68897G          977.859M                     7.1218                     2.84909           5.63514M    1019.61k   137.305M       1.37278G/s    15.554M   21.7763M   343.577M         2.50229    10.7353/s  3.6884G/s     977.859M                7.1218                2.84612   524.288k       5.62839M/s [best: throughput=  1.48 GB/s doc_throughput=    10 docs/s instructions=   977859117 cycles=   343218180 branch_miss= 1019711 cache_miss=15514433 cache_ref=  21812993 items=    524288 avg_time=  93137250 ns]
Kostya<OnDemand>          197081727 ns    197082905 ns            4         690.704k            696.97M        10.2179M       14.0917M    726.853M              5.29371           5.07607       3.68956G          2.19309G                    15.9724                     3.01724           2.66133M    690.913k   137.305M       664.412M/s   10.2592M   14.0919M   727.066M         5.29526    5.07401/s 3.68914G/s     2.19309G               15.9724                3.01636   524.288k       2.66024M/s [best: throughput=  0.70 GB/s doc_throughput=     5 docs/s instructions=  2193094010 cycles=   726853204 branch_miss=  690704 cache_miss=10217911 cache_ref=  14091671 items=    524288 avg_time= 197066121 ns]
KostyaSum<OnDemand>       198973105 ns    198974337 ns            4         725.656k           690.856M        9.83819M       13.5304M    733.296M              5.34064           5.03155       3.68961G          2.19519G                    15.9877                     2.99359           2.63798M    739.188k   137.305M       658.096M/s   9.91677M    13.531M   734.014M         5.34587    5.02577/s 3.68899G/s     2.19519G               15.9877                2.99067   524.288k       2.63495M/s [best: throughput=  0.69 GB/s doc_throughput=     5 docs/s instructions=  2195190629 cycles=   733296037 branch_miss=  725656 cache_miss= 9838194 cache_ref=  13530407 items=    524288 avg_time= 198957112 ns]
DistinctUserID<Dom>          275931 ns       275933 ns         2544           3.657k           2.37614G               0        88.802k    981.293k              1.55387           3.7626k       3.69221G           2.9272M                     4.6352                       2.983           432.698k    3.87011k   631.515k       2.13147G/s    1.43318   88.8835k   988.264k         1.56491   3.62407k/s 3.58154G/s      2.9272M                4.6352                2.96196        115       416.768k/s [best: throughput=  2.38 GB/s doc_throughput=  3762 docs/s instructions=     2927197 cycles=      981293 branch_miss=    3657 cache_miss=       0 cache_ref=     88802 items=       115 avg_time=    267809 ns]
On Demand implementation: fallback
DistinctUserID<OnDemand>    1220971 ns      1220980 ns          573           32.26k           525.528M               0        53.962k    4.43615M              7.02461            832.17       3.69163G          10.5944M                    16.7761                     2.38819           95.6996k    33.4507k   631.515k       493.259M/s    25.2461    54.032k   4.47528M         7.08658    819.014/s 3.66532G/s     10.5944M               16.7761                2.36731        115       94.1866k/s [best: throughput=  0.53 GB/s doc_throughput=   832 docs/s instructions=    10594374 cycles=     4436147 branch_miss=   32260 cache_miss=       0 cache_ref=     53962 items=       115 avg_time=   1212883 ns]
FindTweet<Dom>               261821 ns       261823 ns         2671           3.311k           2.50471G               0        78.625k    930.944k              1.47414          3.96619k        3.6923G          2.83256M                    4.48534                     3.04268           3.96619k    3.46594k   631.515k       2.24634G/s   0.408461   78.5825k   936.357k         1.48272   3.81937k/s  3.5763G/s     2.83256M               4.48534                3.02509          1       3.81937k/s [best: throughput=  2.50 GB/s doc_throughput=  3966 docs/s instructions=     2832561 cycles=      930944 branch_miss=    3311 cache_miss=       0 cache_ref=     78625 items=         1 avg_time=    253721 ns]
On Demand implementation: fallback
FindTweet<OnDemand>         1169954 ns      1169963 ns          598          31.629k           548.759M               0        28.412k    4.24826M               6.7271           868.957       3.69156G          10.0923M                    15.9812                     2.37564            868.957    32.7324k   631.515k       514.768M/s    32.1789   28.5076k   4.28705M         6.78852    854.728/s 3.66426G/s     10.0923M               15.9812                2.35414          1        854.728/s [best: throughput=  0.55 GB/s doc_throughput=   868 docs/s instructions=    10092336 cycles=     4248263 branch_miss=   31629 cache_miss=       0 cache_ref=     28412 items=         1 avg_time=   1161868 ns]
