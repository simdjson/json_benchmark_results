run_benchmark: v0.8.0~22 /home/jkeiser/simdjson_benchmark_results/v0.7.0/16/skylake-x-gcc10.2.json -DCMAKE_BUILD_TYPE=Release
git reset --hard v0.8.0~22
HEAD is now at cfff8a5e Merge pull request #1368 from simdjson/jkeiser/ondemand-rapidjson
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- git Version: v0.2.1-cfff8a5e
-- Version: 0.2.1
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 11
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
make[3]: Nothing to be done for '_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build'.
[ 72%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
make[3]: Nothing to be done for 'jsonexamples/generated/CMakeFiles/generated-data.dir/build'.
[ 72%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
make[3]: Nothing to be done for 'src/CMakeFiles/simdjson.dir/build'.
[ 81%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
make[3]: Nothing to be done for 'dependencies/CMakeFiles/yyjson.dir/build'.
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/g++-10  -DRAPIDJSON_HAS_STDSTRING -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_COMPETITION_RAPIDJSON -DSIMDJSON_COMPETITION_YYJSON -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/rapidjson/include  -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/g++-10  -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.6.0.0 ../_deps/google_benchmarks/src/libbenchmark.a ../dependencies/libyyjson.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/16/skylake-x-gcc10.2.json --benchmark_out_format=json
2021-01-24 23:30:45
Running benchmark/bench_ondemand
Run on (4 X 3200 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 1024 KiB (x4)
  L3 Unified 8448 KiB (x1)
Load Average: 0.97, 0.99, 1.00
***WARNING*** CPU scaling is enabled, the benchmark real time measurements may be noisy and will incur extra overhead.
simdjson::dom implementation:      haswell
simdjson::ondemand implementation: fallback

Benchmark                                          Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>                  318957 ns       318947 ns         2193           3.882k           2.09978G               0        31.137k    960.482k              1.52092          3.32499k       3.19359G          2.96251M                    4.69112                      3.0844           332.499k    4.06476k   631.515k       1.84402G/s   0.113543   31.2809k   966.824k         1.53096   3.13532k/s  3.0313G/s     2.96251M               4.69112                3.06417        100       313.532k/s [BEST: throughput=  2.10 GB/s doc_throughput=  3324 docs/s instructions=     2962512 cycles=      960482 branch_miss=    3882 cache_miss=       0 cache_ref=     31137 items=       100 avg_time=    303096 ns]
partial_tweets<simdjson_ondemand>            1309988 ns      1309963 ns          534          32.426k           490.502M               0         7.309k    4.11058M              6.50908           776.707       3.19272G          10.6861M                    16.9214                     2.59966           77.6707k    32.7441k   631.515k       459.753M/s   0.222846   7.57872k    4.1309M         6.54125     763.38/s 3.15345G/s     10.6861M               16.9214                2.58688        100        76.338k/s [BEST: throughput=  0.49 GB/s doc_throughput=   776 docs/s instructions=    10686125 cycles=     4110582 branch_miss=   32426 cache_miss=       0 cache_ref=      7309 items=       100 avg_time=   1294985 ns]
partial_tweets<yyjson>                        867479 ns       867446 ns          806          10.594k           1088.67M             375        26.609k    1.64469M              2.60436           1.7239k       2.83529G          2.90852M                    4.60562                     1.76843            172.39k    7.71249k   631.515k       694.291M/s    665.515   25.7128k    1.7423M         2.75893   1.15281k/s 2.00854G/s     2.90895M                4.6063                 1.6696        100       115.281k/s [BEST: throughput=  1.09 GB/s doc_throughput=  1723 docs/s instructions=     2908518 cycles=     1644694 branch_miss=   10594 cache_miss=     375 cache_ref=     26609 items=       100 avg_time=    849438 ns]
partial_tweets<rapidjson>                    1928782 ns      1928731 ns          362          26.613k           383.237M          7.384k        23.089k    5.26106M              8.33085           606.853       3.19269G           13.409M                    21.2331                     2.54874           60.6853k     26.875k   631.515k       312.257M/s    482.682   16.3091k   5.41618M         8.57649    518.476/s 2.80816G/s     13.4097M               21.2342                2.47586        100       51.8476k/s [BEST: throughput=  0.38 GB/s doc_throughput=   606 docs/s instructions=    13409047 cycles=     5261055 branch_miss=   26613 cache_miss=    7384 cache_ref=     23089 items=       100 avg_time=   1911682 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>                 100625279 ns    100624526 ns            7          965.75k           459.519M        6.75161M       6.89528M    319.168M              6.93862            9.9898       3.18842G          983.113M                    21.3726                     3.08024            9.9898M    967.698k   45.9988M       435.956M/s   6.79798M   6.89567M   320.726M         6.97249    9.93794/s 3.18736G/s     983.113M               21.3726                3.06527      1000k       9.93794M/s [BEST: throughput=  0.46 GB/s doc_throughput=     9 docs/s instructions=   983112692 cycles=   319167931 branch_miss=  965750 cache_miss= 6751608 cache_ref=   6895284 items=   1000000 avg_time= 100596488 ns]
large_random<simdjson_ondemand>            148252731 ns    148248982 ns            5         2.39294M           310.711M         3.4755M       3.57417M    472.245M              10.2665           6.75477        3.1899G          1.28297G                    27.8915                     2.71676           6.75477M    2.39162M   45.9988M       295.907M/s   3.51333M   3.57419M   472.772M         10.2779    6.74541/s 3.18904G/s     1.28297G               27.8915                2.71373      1000k       6.74541M/s [BEST: throughput=  0.31 GB/s doc_throughput=     6 docs/s instructions=  1282973823 cycles=   472244857 branch_miss= 2392944 cache_miss= 3475500 cache_ref=   3574167 items=   1000000 avg_time= 148224694 ns]
large_random<simdjson_ondemand_unordered>  153872814 ns    153869209 ns            5         2.40532M           299.101M        3.46322M       3.57343M    490.319M              10.6594           6.50236       3.18823G          1.28697G                    27.9784                     2.62477           6.50236M    2.40287M   45.9988M       285.098M/s   3.49626M   3.57363M   490.449M         10.6622    6.49903/s 3.18744G/s     1.28697G               27.9784                2.62407      1000k       6.49903M/s [BEST: throughput=  0.30 GB/s doc_throughput=     6 docs/s instructions=  1286973836 cycles=   490318730 branch_miss= 2405323 cache_miss= 3463217 cache_ref=   3573431 items=   1000000 avg_time= 153842360 ns]
large_random<yyjson>                       155823802 ns    155818828 ns            4         661.938k           295.419M        4.21929M       5.63251M    358.318M              7.78972           6.42232       2.30123G           944.15M                    20.5255                     2.63495           6.42232M      661.4k   45.9988M       281.531M/s   4.21911M   5.63184M   358.579M          7.7954    6.41771/s 2.30125G/s      944.15M               20.5255                2.63303      1000k       6.41771M/s [BEST: throughput=  0.30 GB/s doc_throughput=     6 docs/s instructions=   944149710 cycles=   358317615 branch_miss=  661938 cache_miss= 4219288 cache_ref=   5632507 items=   1000000 avg_time= 155788931 ns]
large_random<rapidjson>                    200131616 ns    200121879 ns            4         590.033k           241.285M        4.34849M       5.17156M    540.376M              11.7476           5.24546       2.83452G          1.65612G                    36.0037                     3.06476           5.24546M    591.039k   45.9988M       219.206M/s   4.04874M    5.0689M   546.074M         11.8715    4.99695/s 2.72871G/s     1.65613G               36.0039                 3.0328      1000k       4.99695M/s [BEST: throughput=  0.24 GB/s doc_throughput=     5 docs/s instructions=  1656123989 cycles=   540375710 branch_miss=  590033 cache_miss= 4348488 cache_ref=   5171558 items=   1000000 avg_time= 200095919 ns]
large_random<rapidjson_lossless>           233807364 ns    233799042 ns            3         593.828k           203.884M         4.3501M       5.16889M    651.762M              14.1691           4.43237       2.88885G          2.00709G                    43.6336                     3.07949           4.43237M    596.475k   45.9988M       187.631M/s   4.08614M   5.07949M   656.167M         14.2649    4.27718/s 2.80654G/s      2.0071G               43.6338                3.05883      1000k       4.27718M/s [BEST: throughput=  0.20 GB/s doc_throughput=     4 docs/s instructions=  2007093385 cycles=   651762265 branch_miss=  593828 cache_miss= 4350095 cache_ref=   5168889 items=   1000000 avg_time= 233769163 ns]
large_random<rapidjson_insitu>             210356823 ns    210355051 ns            3         595.338k           227.535M        5.75354M       6.59985M    533.473M              11.5975           4.94655       2.63885G          1.49724G                    32.5496                      2.8066           4.94655M    590.825k   45.9988M       208.542M/s   5.50298M   6.50919M    537.82M         11.6921    4.75387/s 2.55673G/s     1.49725G               32.5498                2.78393      1000k       4.75387M/s [BEST: throughput=  0.23 GB/s doc_throughput=     4 docs/s instructions=  1497242364 cycles=   533472522 branch_miss=  595338 cache_miss= 5753537 cache_ref=   6599847 items=   1000000 avg_time= 210317868 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>                        95845035 ns     95842156 ns            7         473.212k           1.43466G        10.1678M        10.315M    305.177M              2.22262           10.4487        3.1887G          945.501M                    6.88614                      3.0982           5.47812M    473.341k   137.305M       1.33423G/s   10.2049M   10.3151M   305.462M          2.2247    10.4338/s 3.18714G/s     945.501M               6.88614                3.09532   524.288k       5.47033M/s [BEST: throughput=  1.43 GB/s doc_throughput=    10 docs/s instructions=   945501392 cycles=   305177278 branch_miss=  473212 cache_miss=10167763 cache_ref=  10314992 items=    524288 avg_time=  95813575 ns]
kostya<simdjson_ondemand>                  344277113 ns    344260737 ns            2         3.32648M           398.878M        6.42676M       6.47233M    1097.99M              7.99673           2.90505       3.18972G           2.8802G                    20.9767                     2.62316           1.52308M    3.32629M   137.305M       380.364M/s   6.44155M   6.47228M   1097.86M          7.9958    2.90478/s 3.18905G/s      2.8802G               20.9767                2.62346   524.288k       1.52294M/s [BEST: throughput=  0.40 GB/s doc_throughput=     2 docs/s instructions=  2880202965 cycles=  1097990549 branch_miss= 3326480 cache_miss= 6426757 cache_ref=   6472327 items=    524288 avg_time= 344238466 ns]
kostya<yyjson>                             263656248 ns    263648583 ns            3         560.447k           521.064M        8.49289M       9.90751M    610.384M              4.44546           3.79494       2.31637G          984.045M                    7.16686                     1.61218           1.98964M     560.45k   137.305M       496.662M/s    8.4923M   9.91243M   610.161M         4.44384    3.79293/s  2.3143G/s     984.045M               7.16686                1.61276   524.288k       1.98859M/s [BEST: throughput=  0.52 GB/s doc_throughput=     3 docs/s instructions=   984045139 cycles=   610383533 branch_miss=  560447 cache_miss= 8492890 cache_ref=   9907509 items=    524288 avg_time= 263617863 ns]
kostya<rapidjson>                          286591881 ns    286571107 ns            2          952.73k           484.742M        5.19481M       6.39649M    806.976M              5.87725            3.5304       2.84895G          2.29502G                    16.7148                     2.84398           1.85095M    952.826k   137.305M       456.935M/s   5.06904M   6.35831M   808.861M         5.89098    3.48954/s 2.82255G/s     2.29503G               16.7148                2.83736   524.288k       1.82952M/s [BEST: throughput=  0.48 GB/s doc_throughput=     3 docs/s instructions=  2295024360 cycles=   806976138 branch_miss=  952730 cache_miss= 5194813 cache_ref=   6396490 items=    524288 avg_time= 286549192 ns]
kostya<rapidjson_lossless>                 302682573 ns    302670347 ns            2         996.153k           458.988M        5.19573M       6.37934M    857.435M              6.24475           3.34283       2.86626G          2.49529G                    18.1734                     2.91018           1.75261M    1015.62k   137.305M        432.63M/s   5.07243M   6.33992M   860.064M         6.26389    3.30392/s 2.84159G/s      2.4953G               18.1734                2.90129   524.288k       1.73221M/s [BEST: throughput=  0.46 GB/s doc_throughput=     3 docs/s instructions=  2495294399 cycles=   857435287 branch_miss=  996153 cache_miss= 5195729 cache_ref=   6379335 items=    524288 avg_time= 302639460 ns]
kostya<rapidjson_insitu>                   347215492 ns    347193871 ns            2         1029.17k            399.31M        9.46572M       10.6719M    870.072M              6.33678            2.9082       2.53034G          2.04841G                    14.9187                      2.3543           1.52473M    1028.95k   137.305M        377.15M/s   9.34189M    10.634M   872.109M         6.35162    2.88024/s 2.51188G/s     2.04841G               14.9187                 2.3488   524.288k       1.51007M/s [BEST: throughput=  0.40 GB/s doc_throughput=     2 docs/s instructions=  2048412366 cycles=   870071867 branch_miss= 1029168 cache_miss= 9465722 cache_ref=  10671932 items=    524288 avg_time= 347170670 ns]
distinct_user_id<simdjson_dom>                319157 ns       319150 ns         2192           4.057k           2.14276G               4        33.005k    941.308k              1.49056          3.39305k       3.19391G          2.90344M                    4.59757                     3.08447           390.201k    4.20719k   631.515k       1.84284G/s    3.47993   33.0501k   947.591k         1.50051   3.13332k/s 2.96911G/s     2.90344M               4.59757                3.06402        115       360.332k/s [BEST: throughput=  2.14 GB/s doc_throughput=  3393 docs/s instructions=     2903436 cycles=      941308 branch_miss=    4057 cache_miss=       4 cache_ref=     33005 items=       115 avg_time=    297030 ns]
distinct_user_id<simdjson_ondemand>          1303693 ns      1303670 ns          537          31.865k             495.7M               0         3.613k    4.06749M              6.44084           784.938       3.19273G          10.3431M                    16.3783                     2.54287           90.2679k    32.4944k   631.515k       461.972M/s   0.108007   3.83049k   4.09656M         6.48688    767.065/s 3.14233G/s     10.3431M               16.3783                2.52483        115       88.2125k/s [BEST: throughput=  0.50 GB/s doc_throughput=   784 docs/s instructions=    10343117 cycles=     4067490 branch_miss=   31865 cache_miss=       0 cache_ref=      3613 items=       115 avg_time=   1283957 ns]
distinct_user_id<yyjson>                      871138 ns       871118 ns          876           9.884k           1095.46M             308        25.308k    1.61078M              2.55065          1.73465k       2.79414G          2.87504M                    4.55261                     1.78488           199.485k    7.75361k   631.515k       691.364M/s     536.65   25.5025k   1.73314M         2.74441   1.14795k/s 1.98955G/s     2.87539M               4.55316                1.65907        115       132.014k/s [BEST: throughput=  1.10 GB/s doc_throughput=  1734 docs/s instructions=     2875042 cycles=     1610776 branch_miss=    9884 cache_miss=     308 cache_ref=     25308 items=       115 avg_time=    845233 ns]
distinct_user_id<rapidjson>                  1914169 ns      1914156 ns          365          26.282k           384.018M         12.573k        23.318k    5.25039M              8.31396            608.09       3.19271G            13.35M                    21.1396                     2.54266           69.9303k    27.1064k   631.515k       314.635M/s   1.40247k   17.1682k   5.40105M         8.55252    522.423/s 2.82163G/s     13.3505M               21.1404                2.47183        115       60.0787k/s [BEST: throughput=  0.38 GB/s doc_throughput=   608 docs/s instructions=    13349956 cycles=     5250389 branch_miss=   26282 cache_miss=   12573 cache_ref=     23318 items=       115 avg_time=   1891054 ns]
distinct_user_id<rapidjson_insitu>           1361660 ns      1361629 ns          537          23.748k           522.752M          6.977k        24.235k    3.85709M              6.10768           827.774        3.1928G          9.70707M                    15.3711                     2.51668            95.194k    24.0179k   631.515k       442.308M/s   1.42183k   20.9985k   3.94014M         6.23919    734.414/s  2.8937G/s     9.70589M               15.3692                2.46334        115       84.4577k/s [BEST: throughput=  0.52 GB/s doc_throughput=   827 docs/s instructions=     9707069 cycles=     3857092 branch_miss=   23748 cache_miss=    6977 cache_ref=     24235 items=       115 avg_time=   1339012 ns]
find_tweet<simdjson_dom>                      303812 ns       303810 ns         2304           3.749k           2.24933G               1        28.372k    896.608k              1.41977           3.5618k       3.19354G           2.8224M                    4.46925                     3.14786            3.5618k    3.89468k   631.515k        1.9359G/s   0.165365   28.3456k   902.529k         1.42915   3.29154k/s 2.97071G/s      2.8224M               4.46925                3.12721          1       3.29154k/s [BEST: throughput=  2.25 GB/s doc_throughput=  3561 docs/s instructions=     2822398 cycles=      896608 branch_miss=    3749 cache_miss=       1 cache_ref=     28372 items=         1 avg_time=    282882 ns]
find_tweet<simdjson_ondemand>                1220928 ns      1220904 ns          574          31.202k           528.821M               2         3.041k    3.81271M               6.0374           837.385        3.1927G          9.73048M                    15.4081                     2.55212            837.385    31.6955k   631.515k        493.29M/s    2.25087   2.99301k   3.83612M         6.07448    819.065/s 3.14204G/s     9.73048M               15.4081                2.53654          1        819.065/s [BEST: throughput=  0.53 GB/s doc_throughput=   837 docs/s instructions=     9730477 cycles=     3812709 branch_miss=   31202 cache_miss=       2 cache_ref=      3041 items=         1 avg_time=   1202364 ns]
find_tweet<yyjson>                            858112 ns       858090 ns          867           9.816k           1.10956G             369        23.777k    1.57098M              2.48763          1.75699k       2.76019G          2.82429M                    4.47224                     1.79779           1.75699k    7.50762k   631.515k       701.861M/s    510.059   24.5767k    1.7017M         2.69463   1.16538k/s 1.98313G/s     2.82471M               4.47291                1.65994          1       1.16538k/s [BEST: throughput=  1.11 GB/s doc_throughput=  1756 docs/s instructions=     2824287 cycles=     1570978 branch_miss=    9816 cache_miss=     369 cache_ref=     23777 items=         1 avg_time=    835213 ns]
find_tweet<rapidjson>                        1897113 ns      1897042 ns          369          26.428k           387.067M         11.912k        21.792k    5.20925M              8.24882           612.917       3.19284G          13.2809M                    21.0302                     2.54948            612.917    26.8863k   631.515k       317.473M/s    1070.64   13.8802k   5.35167M         8.47433    527.137/s 2.82106G/s     13.2815M               21.0311                2.48174          1        527.137/s [BEST: throughput=  0.39 GB/s doc_throughput=   612 docs/s instructions=    13280884 cycles=     5209255 branch_miss=   26428 cache_miss=   11912 cache_ref=     21792 items=         1 avg_time=   1875537 ns]
find_tweet<rapidjson_insitu>                 1344213 ns      1344178 ns          549          23.786k           528.221M          6.798k        23.096k    3.81717M              6.04446           836.435       3.19281G          9.64915M                    15.2794                     2.52783            836.435    23.8176k   631.515k       448.051M/s   1.23379k   17.9142k   3.88499M         6.15186    743.949/s 2.89024G/s     9.64796M               15.2775                2.48339          1        743.949/s [BEST: throughput=  0.53 GB/s doc_throughput=   836 docs/s instructions=     9649149 cycles=     3817167 branch_miss=   23786 cache_miss=    6798 cache_ref=     23096 items=         1 avg_time=   1321965 ns]
