run_benchmark: v0.8.0~22 /home/jkeiser/simdjson_benchmark_results/v0.7.0/16/skylake-x-gcc10.2-native.json -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native
git reset --hard v0.8.0~22
HEAD is now at cfff8a5e Merge pull request #1368 from simdjson/jkeiser/ondemand-rapidjson
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- git Version: v0.2.1-cfff8a5e
-- Version: 0.2.1
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 11
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
make[3]: Nothing to be done for '_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build'.
[ 72%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
make[3]: Nothing to be done for 'jsonexamples/generated/CMakeFiles/generated-data.dir/build'.
[ 72%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
make[3]: Nothing to be done for 'src/CMakeFiles/simdjson.dir/build'.
[ 81%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
make[3]: Nothing to be done for 'dependencies/CMakeFiles/yyjson.dir/build'.
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/g++-10  -DRAPIDJSON_HAS_STDSTRING -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_COMPETITION_RAPIDJSON -DSIMDJSON_COMPETITION_YYJSON -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/rapidjson/include  -march=native -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/g++-10  -march=native -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.6.0.0 ../_deps/google_benchmarks/src/libbenchmark.a ../dependencies/libyyjson.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/16/skylake-x-gcc10.2-native.json --benchmark_out_format=json
2021-01-24 23:40:53
Running benchmark/bench_ondemand
Run on (4 X 3200 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 1024 KiB (x4)
  L3 Unified 8448 KiB (x1)
Load Average: 1.00, 1.00, 1.00
***WARNING*** CPU scaling is enabled, the benchmark real time measurements may be noisy and will incur extra overhead.
simdjson::dom implementation:      haswell
simdjson::ondemand implementation: haswell

Benchmark                                          Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
partial_tweets<simdjson_dom>                  335737 ns       335728 ns         2062           3.678k           1.99444G               3        31.645k    1011.13k              1.60113          3.15819k       3.19336G          3.07044M                    4.86203                     3.03663           315.819k    3.85679k   631.515k       1.75185G/s    2.61979   31.7427k    1019.9k           1.615    2.9786k/s 3.03788G/s     3.07044M               4.86203                3.01054        100        297.86k/s [BEST: throughput=  1.99 GB/s doc_throughput=  3158 docs/s instructions=     3070442 cycles=     1011135 branch_miss=    3678 cache_miss=       3 cache_ref=     31645 items=       100 avg_time=    319745 ns]
partial_tweets<simdjson_ondemand>             232032 ns       232028 ns         3015           2.307k           2.93159G               0         4.272k        688k              1.08944          4.64216k       3.19381G          2.23694M                    3.54218                     3.25137           464.216k    2.45586k   631.515k        2.5348G/s  0.0139303   4.38403k   692.708k          1.0969   4.30983k/s 2.98546G/s     2.23694M               3.54218                3.22927        100       430.983k/s [BEST: throughput=  2.93 GB/s doc_throughput=  4642 docs/s instructions=     2236942 cycles=      688000 branch_miss=    2307 cache_miss=       0 cache_ref=      4272 items=       100 avg_time=    217070 ns]
partial_tweets<yyjson>                        876758 ns       876751 ns          798          10.051k           1076.49M             233        26.235k    1.66777M              2.64091          1.70461k       2.84291G          2.90852M                    4.60562                     1.74395           170.461k    7.72091k   631.515k       686.922M/s    627.514   25.7804k   1.78311M         2.82355   1.14057k/s 2.03377G/s     2.90895M                4.6063                1.63139        100       114.057k/s [BEST: throughput=  1.08 GB/s doc_throughput=  1704 docs/s instructions=     2908518 cycles=     1667772 branch_miss=   10051 cache_miss=     233 cache_ref=     26235 items=       100 avg_time=    858696 ns]
partial_tweets<rapidjson>                    1874719 ns      1874704 ns          373          25.041k           399.069M         12.608k        23.278k    5.05229M              8.00027           631.923       3.19266G          13.1154M                    20.7681                     2.59593           63.1923k    26.1187k   631.515k       321.256M/s    496.257   16.6219k   5.24258M         8.30159    533.418/s 2.79648G/s     13.1163M               20.7695                2.50187        100       53.3418k/s [BEST: throughput=  0.40 GB/s doc_throughput=   631 docs/s instructions=    13115380 cycles=     5052290 branch_miss=   25041 cache_miss=   12608 cache_ref=     23278 items=       100 avg_time=   1857397 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>                  99847885 ns     99844842 ns            7         851.591k           462.416M        6.76941M       6.89612M    317.106M              6.89379           10.0528       3.18779G          998.581M                    21.7089                     3.14905           10.0528M    850.945k   45.9988M        439.36M/s   6.78819M   6.89605M   318.233M         6.91828    10.0155/s 3.18727G/s     998.581M               21.7089                 3.1379      1000k       10.0155M/s [BEST: throughput=  0.46 GB/s doc_throughput=    10 docs/s instructions=   998581007 cycles=   317105739 branch_miss=  851591 cache_miss= 6769411 cache_ref=   6896118 items=   1000000 avg_time=  99817928 ns]
large_random<simdjson_ondemand>             65273499 ns     65271719 ns           11         861.592k           707.286M        3.43617M       3.57262M    207.382M              4.50841           15.3762       3.18874G          650.959M                    14.1517                     3.13894           15.3762M    862.356k   45.9988M       672.081M/s   3.47049M   3.57259M   207.996M         4.52177    15.3206/s 3.18662G/s     650.959M               14.1517                3.12967      1000k       15.3206M/s [BEST: throughput=  0.71 GB/s doc_throughput=    15 docs/s instructions=   650958757 cycles=   207381559 branch_miss=  861592 cache_miss= 3436167 cache_ref=   3572619 items=   1000000 avg_time=  65245946 ns]
large_random<simdjson_ondemand_unordered>   69869096 ns     69865862 ns           10         873.021k           660.111M        3.44341M       3.57264M    222.196M              4.83047           14.3506       3.18865G          654.959M                    14.2386                     2.94767           14.3506M    880.029k   45.9988M       627.887M/s   3.47525M   3.57272M   222.659M         4.84054    14.3131/s 3.18695G/s     654.959M               14.2386                2.94153      1000k       14.3131M/s [BEST: throughput=  0.66 GB/s doc_throughput=    14 docs/s instructions=   654958760 cycles=   222195772 branch_miss=  873021 cache_miss= 3443414 cache_ref=   3572641 items=   1000000 avg_time=  69840591 ns]
large_random<yyjson>                       156348831 ns    156342508 ns            4         658.548k           294.531M        4.20789M       5.29125M    359.901M              7.82414           6.40302       2.30445G          942.149M                    20.4821                      2.6178           6.40302M    661.962k   45.9988M       280.588M/s   4.21121M    5.2953M   360.391M         7.83479    6.39621/s 2.30514G/s     942.149M               20.4821                2.61425      1000k       6.39621M/s [BEST: throughput=  0.29 GB/s doc_throughput=     6 docs/s instructions=   942149402 cycles=   359900770 branch_miss=  658548 cache_miss= 4207885 cache_ref=   5291248 items=   1000000 avg_time= 156312470 ns]
large_random<rapidjson>                    207373371 ns    207366932 ns            4         659.624k           232.123M        4.35402M       5.14861M    563.558M              12.2516           5.04628       2.84387G          1.66212G                     36.134                     2.94933           5.04628M     659.74k   45.9988M       211.547M/s   4.06261M   5.04435M   568.352M         12.3558    4.82237/s  2.7408G/s     1.66213G               36.1342                2.92448      1000k       4.82237M/s [BEST: throughput=  0.23 GB/s doc_throughput=     5 docs/s instructions=  1662121236 cycles=   563558147 branch_miss=  659624 cache_miss= 4354024 cache_ref=   5148611 items=   1000000 avg_time= 207336743 ns]
large_random<rapidjson_lossless>           236641624 ns    236633240 ns            3         632.358k           201.115M        4.36688M       5.17917M    661.214M              14.3746           4.37219       2.89095G          2.01909G                    43.8945                     3.05361           4.37219M     637.89k   45.9988M       185.383M/s    4.0957M   5.09902M   664.846M         14.4536    4.22595/s 2.80961G/s      2.0191G               43.8946                3.03694      1000k       4.22595M/s [BEST: throughput=  0.20 GB/s doc_throughput=     4 docs/s instructions=  2019091208 cycles=   661213556 branch_miss=  632358 cache_miss= 4366882 cache_ref=   5179173 items=   1000000 avg_time= 236603610 ns]
large_random<rapidjson_insitu>             218885857 ns    218883800 ns            3         605.958k            218.51M        5.75171M       6.59217M    560.208M              12.1788           4.75034       2.66118G          1.50024G                    32.6148                     2.67801           4.75034M    615.998k   45.9988M       200.416M/s   5.50215M   6.50647M   565.189M         12.2871    4.56863/s 2.58214G/s     1.50025G                32.615                2.65442      1000k       4.56863M/s [BEST: throughput=  0.22 GB/s doc_throughput=     4 docs/s instructions=  1500241949 cycles=   560208210 branch_miss=  605958 cache_miss= 5751713 cache_ref=   6592167 items=   1000000 avg_time= 218843890 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>                        98691642 ns     98688875 ns            7         449.165k           1.39458G        10.1591M       10.3148M    313.795M              2.28539           10.1568       3.18715G           972.65M                    7.08386                     3.09963           5.32508M    449.384k   137.305M       1.29574G/s   10.1927M   10.3146M   314.523M         2.29069    10.1329/s 3.18701G/s      972.65M               7.08386                3.09246   524.288k       5.31253M/s [BEST: throughput=  1.39 GB/s doc_throughput=    10 docs/s instructions=   972649991 cycles=   313795494 branch_miss=  449165 cache_miss=10159083 cache_ref=  10314817 items=    524288 avg_time=  98659445 ns]
kostya<simdjson_ondemand>                   69809727 ns     69809156 ns           10         498.694k           1.97023G        6.34211M       6.47075M     222.22M              1.61844           14.3493       3.18869G          699.692M                     5.0959                     3.14865           7.52315M    497.978k   137.305M       1.83178G/s    6.3646M   6.47074M   222.463M         1.62021    14.3248/s 3.18673G/s     699.692M                5.0959                 3.1452   524.288k        7.5103M/s [BEST: throughput=  1.97 GB/s doc_throughput=    14 docs/s instructions=   699692079 cycles=   222219818 branch_miss=  498694 cache_miss= 6342115 cache_ref=   6470748 items=    524288 avg_time=  69778380 ns]
kostya<yyjson>                             263581475 ns    263570404 ns            3         418.579k           521.103M        8.50727M       9.79227M    610.256M              4.44453           3.79522       2.31606G          983.521M                    7.16304                     1.61165           1.98979M    417.133k   137.305M       496.809M/s   8.49893M   9.79708M   610.233M         4.44436    3.79405/s 2.31526G/s     983.521M               7.16304                1.61171   524.288k       1.98918M/s [BEST: throughput=  0.52 GB/s doc_throughput=     3 docs/s instructions=   983520851 cycles=   610256280 branch_miss=  418579 cache_miss= 8507267 cache_ref=   9792270 items=    524288 avg_time= 263541845 ns]
kostya<rapidjson>                          298643171 ns    298632274 ns            2         1015.74k           464.903M         5.2002M       6.40682M    844.135M              6.14788           3.38591       2.85817G          2.28931G                    16.6732                     2.71203           1.77519M    1012.65k   137.305M        438.48M/s   5.07359M   6.37155M   846.045M          6.1618     3.3486/s 2.83307G/s     2.28932G               16.6732                 2.7059   524.288k       1.75563M/s [BEST: throughput=  0.46 GB/s doc_throughput=     3 docs/s instructions=  2289314701 cycles=   844134553 branch_miss= 1015739 cache_miss= 5200201 cache_ref=   6406822 items=    524288 avg_time= 298599882 ns]
kostya<rapidjson_lossless>                 310806731 ns    310787254 ns            2         1049.02k            446.93M        5.20539M       6.38794M    882.698M              6.42874           3.25501       2.87319G          2.49326G                    18.1585                     2.82459           1.70656M    1053.54k   137.305M       421.331M/s   5.07919M   6.35179M   885.504M         6.44917    3.21764/s 2.84923G/s     2.49326G               18.1585                2.81564   524.288k       1.68697M/s [BEST: throughput=  0.45 GB/s doc_throughput=     3 docs/s instructions=  2493255004 cycles=   882697760 branch_miss= 1049019 cache_miss= 5205393 cache_ref=   6387941 items=    524288 avg_time= 310763672 ns]
kostya<rapidjson_insitu>                   355985128 ns    355972374 ns            2         1.15213M           389.279M        9.47904M        10.692M    898.495M              6.54379           2.83514       2.54736G          2.05785G                    14.9874                     2.29033           1.48643M    1.14895M   137.305M       367.849M/s   9.35648M   10.6626M   900.232M         6.55644    2.80921/s 2.52894G/s     2.05785G               14.9874                2.28591   524.288k       1.47283M/s [BEST: throughput=  0.39 GB/s doc_throughput=     2 docs/s instructions=  2057849561 cycles=   898495192 branch_miss= 1152128 cache_miss= 9479043 cache_ref=  10692008 items=    524288 avg_time= 355942693 ns]
distinct_user_id<simdjson_dom>                339087 ns       339079 ns         2063           3.824k           2.00506G               3        33.047k    1005.98k              1.59296          3.17501k       3.19398G          3.01136M                    4.76848                     2.99348           365.126k    3.99651k   631.515k       1.73453G/s    2.94571   33.0129k   1011.69k         1.60201   2.94916k/s 2.98365G/s     3.01137M               4.76848                2.97656        115       339.154k/s [BEST: throughput=  2.01 GB/s doc_throughput=  3175 docs/s instructions=     3011365 cycles=     1005975 branch_miss=    3824 cache_miss=       3 cache_ref=     33047 items=       115 avg_time=    317071 ns]
distinct_user_id<simdjson_ondemand>           251356 ns       251349 ns         2781             2.3k           2.73831G               0         3.151k    736.525k              1.16628           4.3361k       3.19365G          2.18798M                    3.46465                     2.97068           498.651k    2.42232k   631.515k       2.33995G/s    2.1575m   3.17465k   740.961k         1.17331   3.97853k/s 2.94794G/s     2.18798M               3.46465                2.95289        115       457.531k/s [BEST: throughput=  2.74 GB/s doc_throughput=  4336 docs/s instructions=     2187978 cycles=      736525 branch_miss=    2300 cache_miss=       0 cache_ref=      3151 items=       115 avg_time=    232187 ns]
distinct_user_id<yyjson>                      881199 ns       881178 ns          864           9.838k           1092.67M             231        25.126k    1.64514M              2.60507          1.73023k       2.84648G          2.87504M                    4.55261                     1.74759           198.977k    7.85588k   631.515k       683.471M/s    498.442   25.5595k   1.77501M         2.81071   1.13485k/s 2.01436G/s     2.87539M               4.55316                1.61993        115       130.507k/s [BEST: throughput=  1.09 GB/s doc_throughput=  1730 docs/s instructions=     2875041 cycles=     1645143 branch_miss=    9838 cache_miss=     231 cache_ref=     25126 items=       115 avg_time=    855239 ns]
distinct_user_id<rapidjson>                  1855296 ns      1855252 ns          378          25.537k           400.966M          2.496k        23.234k    5.02845M              7.96252           634.928        3.1927G          13.0565M                    20.6749                     2.59653           73.0167k    25.9319k   631.515k       324.624M/s   1.37553k   17.3103k   5.21227M          8.2536     539.01/s 2.80947G/s     13.0574M               20.6763                2.50513        115       61.9862k/s [BEST: throughput=  0.40 GB/s doc_throughput=   634 docs/s instructions=    13056497 cycles=     5028448 branch_miss=   25537 cache_miss=    2496 cache_ref=     23234 items=       115 avg_time=   1832058 ns]
distinct_user_id<rapidjson_insitu>           1398932 ns      1398893 ns          536           25.17k           506.388M          4.403k        23.499k     3.9816M              6.30484           801.863        3.1927G          9.77461M                     15.478                     2.45494           92.2142k    25.3851k   631.515k       430.526M/s   1.41794k   20.7119k   4.06397M         6.43527    714.851/s 2.90513G/s     9.77493M               15.4785                2.40527        115       82.2078k/s [BEST: throughput=  0.51 GB/s doc_throughput=   801 docs/s instructions=     9774613 cycles=     3981604 branch_miss=   25170 cache_miss=    4403 cache_ref=     23499 items=       115 avg_time=   1375998 ns]
find_tweet<simdjson_dom>                      324502 ns       324491 ns         2158           3.616k            2.0955G               0        27.654k    962.449k              1.52403          3.31821k       3.19361G          2.93033M                    4.64016                     3.04466           3.31821k     3.7201k   631.515k       1.81251G/s  0.0291937   27.8332k   968.407k         1.53347   3.08175k/s 2.98438G/s     2.93033M               4.64016                3.02593          1       3.08175k/s [BEST: throughput=  2.10 GB/s doc_throughput=  3318 docs/s instructions=     2930328 cycles=      962449 branch_miss=    3616 cache_miss=       0 cache_ref=     27654 items=         1 avg_time=    303526 ns]
find_tweet<simdjson_ondemand>                 171429 ns       171426 ns         4089           1.251k           4.14486G               0         2.651k    486.632k             0.770579          6.56336k       3.19394G          1.56922M                    2.48485                     3.22465           6.56336k    1.32394k   631.515k        3.4309G/s   3.66838m    2.6524k    488.88k        0.774139   5.83343k/s 2.85185G/s     1.56922M               2.48485                3.20982          1       5.83343k/s [BEST: throughput=  4.14 GB/s doc_throughput=  6563 docs/s instructions=     1569217 cycles=      486632 branch_miss=    1251 cache_miss=       0 cache_ref=      2651 items=         1 avg_time=    153188 ns]
find_tweet<yyjson>                            868526 ns       868503 ns          853           9.536k            1090.7M             211        24.073k    1.60645M               2.5438          1.72712k       2.77453G          2.82428M                    4.47224                     1.75809           1.72712k    7.52445k   631.515k       693.446M/s    461.325   24.7655k   1.74464M         2.76262   1.15141k/s 2.00879G/s     2.82471M               4.47291                1.61908          1       1.15141k/s [BEST: throughput=  1.09 GB/s doc_throughput=  1727 docs/s instructions=     2824284 cycles=     1606448 branch_miss=    9536 cache_miss=     211 cache_ref=     24073 items=         1 avg_time=    845317 ns]
find_tweet<rapidjson>                        1841285 ns      1841234 ns          381          24.755k           404.294M         11.949k        21.616k    4.98708M              7.89701           640.196       3.19271G          12.9879M                    20.5663                     2.60432            640.196    26.0596k   631.515k       327.096M/s    1033.87   13.7793k   5.17005M         8.18674    543.114/s 2.80793G/s     12.9889M               20.5678                2.51233          1        543.114/s [BEST: throughput=  0.40 GB/s doc_throughput=   640 docs/s instructions=    12987944 cycles=     4987081 branch_miss=   24755 cache_miss=   11949 cache_ref=     21616 items=         1 avg_time=   1819350 ns]
find_tweet<rapidjson_insitu>                 1382585 ns      1382574 ns          546          25.005k           512.118M          4.104k        21.971k    3.93719M              6.23452           810.936       3.19281G          9.71706M                    15.3869                     2.46802            810.936    25.3012k   631.515k       435.607M/s   1.24116k   17.8065k   4.01135M         6.35194    723.288/s 2.90136G/s     9.71737M               15.3874                2.42247          1        723.288/s [BEST: throughput=  0.51 GB/s doc_throughput=   810 docs/s instructions=     9717057 cycles=     3937191 branch_miss=   25005 cache_miss=    4104 cache_ref=     21971 items=         1 avg_time=   1360090 ns]
