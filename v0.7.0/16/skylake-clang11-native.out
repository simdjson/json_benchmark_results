run_benchmark: v0.8.0~22 /home/jkeiser/simdjson_benchmark_results/v0.7.0/16/skylake-clang11-native.json -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native
git reset --hard v0.8.0~22
HEAD is now at cfff8a5e Merge pull request #1368 from simdjson/jkeiser/ondemand-rapidjson
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- git Version: v0.2.1-cfff8a5e
-- Version: 0.2.1
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES -- failed to compile
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 11
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
make[3]: Nothing to be done for '_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build'.
[ 72%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
make[3]: Nothing to be done for 'jsonexamples/generated/CMakeFiles/generated-data.dir/build'.
[ 72%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
make[3]: Nothing to be done for 'src/CMakeFiles/simdjson.dir/build'.
[ 81%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
make[3]: Nothing to be done for 'dependencies/CMakeFiles/yyjson.dir/build'.
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/clang++-11  -DRAPIDJSON_HAS_STDSTRING -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_COMPETITION_RAPIDJSON -DSIMDJSON_COMPETITION_YYJSON -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/rapidjson/include  -march=native -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/clang++-11  -march=native -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.6.0.0 ../_deps/google_benchmarks/src/libbenchmark.a ../dependencies/libyyjson.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/16/skylake-clang11-native.json --benchmark_out_format=json
2021-01-25 01:59:57
Running benchmark/bench_ondemand
Run on (4 X 4000 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 256 KiB (x4)
  L3 Unified 8192 KiB (x1)
Load Average: 1.03, 1.00, 0.76
simdjson::dom implementation:      haswell
simdjson::ondemand implementation: haswell

Benchmark                                          Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>                  280932 ns       280930 ns         2456           3.569k           2.32818G               0        92.598k    1001.45k              1.58579          3.68666k       3.69201G          2.99337M                    4.73999                     2.98904           368.666k    3.73905k   631.515k       2.09356G/s    1.04479   92.8189k   1006.65k         1.59403    3.5596k/s 3.58328G/s     2.99337M               4.73999                2.97359        100        355.96k/s [BEST: throughput=  2.33 GB/s doc_throughput=  3686 docs/s instructions=     2993372 cycles=     1001450 branch_miss=    3569 cache_miss=       0 cache_ref=     92598 items=       100 avg_time=    272835 ns]
partial_tweets<simdjson_ondemand>             180640 ns       180608 ns         3878           1.833k            3.6837G               0        58.249k    633.108k              1.00252          5.83311k       3.69299G          1.94495M                    3.07982                     3.07207           583.311k    1.94015k   631.515k       3.25647G/s  0.0180505   58.2957k   637.077k         1.00881   5.53686k/s 3.52741G/s     1.94495M               3.07982                3.05293        100       553.686k/s [BEST: throughput=  3.68 GB/s doc_throughput=  5833 docs/s instructions=     1944950 cycles=      633108 branch_miss=    1833 cache_miss=       0 cache_ref=     58249 items=       100 avg_time=    172675 ns]
partial_tweets<yyjson>                        647370 ns       647375 ns         1080           9.545k           1.54535G             509        71.493k    1.33259M              2.11014          2.44705k       3.26091G          2.91896M                    4.62215                     2.19045           244.705k    7.40876k   631.515k        930.31M/s    1072.24    51.684k   1.50576M         2.38436    1.5447k/s 2.32595G/s     2.91939M               4.62284                1.93881        100        154.47k/s [BEST: throughput=  1.55 GB/s doc_throughput=  2447 docs/s instructions=     2918959 cycles=     1332586 branch_miss=    9545 cache_miss=     509 cache_ref=     71493 items=       100 avg_time=    638357 ns]
partial_tweets<rapidjson>                    2170925 ns      2170873 ns          323          28.561k            320.74M          9.283k        54.617k    7.25754M              11.4923           507.889       3.68602G          21.8955M                    34.6714                     3.01694           50.7889k    29.0738k   631.515k       277.427M/s    696.495   34.8906k   7.39192M         11.7051    460.644/s 3.40504G/s     21.8962M               34.6725                2.96218        100       46.0644k/s [BEST: throughput=  0.32 GB/s doc_throughput=   507 docs/s instructions=    21895528 cycles=     7257538 branch_miss=   28561 cache_miss=    9283 cache_ref=     54617 items=       100 avg_time=   2162561 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>                  87614416 ns     87594414 ns            8         919.895k           525.876M         10.839M       15.3968M    322.679M              7.01494           11.4324       3.68899G          1035.69M                    22.5155                     3.20965           11.4324M    917.388k   45.9988M       500.806M/s   10.8708M   15.3989M   323.031M         7.02259    11.4163/s  3.6878G/s     1035.69M               22.5155                3.20615      1000k       11.4163M/s [BEST: throughput=  0.53 GB/s doc_throughput=    11 docs/s instructions=  1035686041 cycles=   322678528 branch_miss=  919895 cache_miss=10838990 cache_ref=  15396844 items=   1000000 avg_time=  87600636 ns]
large_random<simdjson_ondemand>             66008296 ns     66006643 ns           11         912.609k           697.623M        5.63235M       8.02965M    243.234M              5.28784           15.1661       3.68892G          669.142M                     14.547                     2.75102           15.1661M    913.898k   45.9988M       664.598M/s   5.64418M   8.03023M   243.393M          5.2913      15.15/s  3.6874G/s     669.142M                14.547                2.74922      1000k         15.15M/s [BEST: throughput=  0.70 GB/s doc_throughput=    15 docs/s instructions=   669141946 cycles=   243234243 branch_miss=  912609 cache_miss= 5632349 cache_ref=   8029648 items=   1000000 avg_time=  65995384 ns]
large_random<simdjson_ondemand_unordered>   66152147 ns     66152547 ns           11         897.794k           696.602M        5.58861M        8.0277M    243.575M              5.29524           15.1439       3.68868G          670.142M                    14.5687                     2.75128           15.1439M    900.291k   45.9988M       663.132M/s    5.6505M   8.02866M   243.932M         5.30301    15.1166/s 3.68742G/s     670.142M               14.5687                2.74725      1000k       15.1166M/s [BEST: throughput=  0.70 GB/s doc_throughput=    15 docs/s instructions=   670141945 cycles=   243574750 branch_miss=  897794 cache_miss= 5588612 cache_ref=   8027697 items=   1000000 avg_time=  66138377 ns]
large_random<yyjson>                       118351360 ns    118325671 ns            6         677.373k           388.986M        5.86108M       9.04941M    314.319M               6.8332           8.45644       2.65802G          855.681M                    18.6023                     2.72233           8.45644M    676.729k   45.9988M       370.738M/s   5.86555M   9.03913M   314.581M         6.83889    8.45125/s  2.6586G/s     855.681M               18.6023                2.72007      1000k       8.45125M/s [BEST: throughput=  0.39 GB/s doc_throughput=     8 docs/s instructions=   855680955 cycles=   314318929 branch_miss=  677373 cache_miss= 5861082 cache_ref=   9049413 items=   1000000 avg_time= 118332496 ns]
large_random<rapidjson>                    216162731 ns    216160016 ns            3         628.026k           218.847M         7.0152M       10.8704M    717.283M              15.5935           4.75766       3.41259G          2.01014G                    43.6999                     2.80244           4.75766M    626.354k   45.9988M       202.942M/s   6.51537M   10.1857M   720.407M         15.6614     4.6262/s 3.33275G/s     2.01015G               43.7001                 2.7903      1000k        4.6262M/s [BEST: throughput=  0.22 GB/s doc_throughput=     4 docs/s instructions=  2010142676 cycles=   717282783 branch_miss=  628026 cache_miss= 7015200 cache_ref=  10870422 items=   1000000 avg_time= 216142450 ns]
large_random<rapidjson_lossless>           245822300 ns    245823865 ns            3         598.315k           191.625M        7.00388M       10.8939M    827.463M              17.9888           4.16586       3.44709G          2.47511G                    53.8082                      2.9912           4.16586M    594.303k   45.9988M       178.452M/s   6.51471M   10.2178M   829.837M         18.0404    4.06795/s 3.37574G/s     2.47512G               53.8084                2.98266      1000k       4.06795M/s [BEST: throughput=  0.19 GB/s doc_throughput=     4 docs/s instructions=  2475109841 cycles=   827462579 branch_miss=  598315 cache_miss= 7003877 cache_ref=  10893860 items=   1000000 avg_time= 245802777 ns]
large_random<rapidjson_insitu>             259880495 ns    259869490 ns            3         602.827k            180.84M          8.946M       13.7665M    839.501M              18.2505           3.93141       3.30042G          1.72626G                    37.5285                      2.0563           3.93141M    597.004k   45.9988M       168.807M/s   8.47558M   13.0815M   841.261M         18.2888    3.84809/s 3.23725G/s     1.72627G               37.5286                  2.052      1000k       3.84809M/s [BEST: throughput=  0.18 GB/s doc_throughput=     3 docs/s instructions=  1726263418 cycles=   839501098 branch_miss=  602827 cache_miss= 8946001 cache_ref=  13766526 items=   1000000 avg_time= 259860820 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>                        93038130 ns     93020190 ns            8         1046.86k           1.47787G          15.76M       22.3846M    342.659M               2.4956           10.7634       3.68819G          985.796M                    7.17961                      2.8769           5.64314M    1047.57k   137.305M        1.3747G/s   15.7141M   22.3195M   343.046M         2.49843    10.7504/s 3.68787G/s     985.796M               7.17961                2.87365   524.288k       5.63628M/s [BEST: throughput=  1.48 GB/s doc_throughput=    10 docs/s instructions=   985795975 cycles=   342658981 branch_miss= 1046855 cache_miss=15759961 cache_ref=  22384583 items=    524288 avg_time=  93024517 ns]
kostya<simdjson_ondemand>                   63607849 ns     63605650 ns           11         475.587k           2.16252G        9.89948M       13.9466M    234.224M              1.70587           15.7497       3.68897G          654.158M                    4.76427                     2.79287            8.2574M    477.817k   137.305M       2.01044G/s   9.96487M   14.0104M   234.551M         1.70825    15.7219/s 3.68758G/s     654.158M               4.76427                2.78898   524.288k       8.24279M/s [BEST: throughput=  2.16 GB/s doc_throughput=    15 docs/s instructions=   654158321 cycles=   234224287 branch_miss=  475587 cache_miss= 9899476 cache_ref=  13946649 items=    524288 avg_time=  63594670 ns]
kostya<yyjson>                             174556496 ns    174551297 ns            4         423.347k           787.388M        11.2498M       16.3075M    445.855M              3.24719           5.73459        2.5568G          974.185M                    7.09504                     2.18498           3.00658M    421.961k   137.305M       750.176M/s   11.2445M   16.2679M   445.641M         3.24563    5.72897/s 2.55307G/s     974.185M               7.09504                2.18603   524.288k       3.00363M/s [BEST: throughput=  0.79 GB/s doc_throughput=     5 docs/s instructions=   974184686 cycles=   445855206 branch_miss=  423347 cache_miss=11249779 cache_ref=  16307520 items=    524288 avg_time= 174536627 ns]
kostya<rapidjson>                          272919087 ns    272913834 ns            3         983.552k           509.231M         8.3202M       12.2264M    911.739M              6.64025           3.70876       3.38142G          2.73767G                    19.9386                     3.00269           1.94446M     983.36k   137.305M       479.801M/s   8.00347M   11.9435M   913.963M         6.65645    3.66416/s 3.34891G/s     2.73767G               19.9386                2.99539   524.288k       1.92108M/s [BEST: throughput=  0.51 GB/s doc_throughput=     3 docs/s instructions=  2737672113 cycles=   911739248 branch_miss=  983552 cache_miss= 8320198 cache_ref=  12226418 items=    524288 avg_time= 272898900 ns]
kostya<rapidjson_lossless>                 292690069 ns    292692022 ns            2         977.512k           473.275M        8.31858M       12.4148M    987.095M              7.18907           3.44689        3.4024G          3.00662G                    21.8974                     3.04593           1.80716M    977.679k   137.305M       447.379M/s   8.08638M   12.0814M   989.166M         7.20415    3.41656/s 3.37955G/s     3.00662G               21.8974                3.03955   524.288k       1.79126M/s [BEST: throughput=  0.47 GB/s doc_throughput=     3 docs/s instructions=  3006622431 cycles=   987094646 branch_miss=  977512 cache_miss= 8318578 cache_ref=  12414848 items=    524288 avg_time= 292668884 ns]
kostya<rapidjson_insitu>                   335474128 ns    335476356 ns            2         997.172k           412.253M        14.5029M       20.0456M    1029.23M              7.49595           3.00246       3.09023G          2.22979G                    16.2397                     2.16646           1.57415M    996.638k   137.305M       390.323M/s    14.281M    19.725M   1030.67M         7.50643    2.98084/s 3.07226G/s     2.22979G               16.2397                2.16344   524.288k       1.56282M/s [BEST: throughput=  0.41 GB/s doc_throughput=     3 docs/s instructions=  2229793420 cycles=  1029231539 branch_miss=  997172 cache_miss=14502862 cache_ref=  20045606 items=    524288 avg_time= 335452241 ns]
distinct_user_id<simdjson_dom>                280442 ns       280437 ns         2497           3.672k           2.34852G               0        94.897k    992.967k              1.57236          3.71887k       3.69271G          2.92855M                    4.63734                     2.94929            427.67k    3.85143k   631.515k       2.09724G/s   0.123748   94.7595k   998.649k         1.58135   3.56586k/s 3.56105G/s     2.92855M               4.63734                2.93251        115       410.074k/s [BEST: throughput=  2.35 GB/s doc_throughput=  3718 docs/s instructions=     2928547 cycles=      992967 branch_miss=    3672 cache_miss=       0 cache_ref=     94897 items=       115 avg_time=    270632 ns]
distinct_user_id<simdjson_ondemand>           169565 ns       169567 ns         4126           1.665k           3.97547G               0        56.942k    586.595k             0.928869          6.29513k       3.69269G          1.89445M                    2.99986                     3.22958            723.94k    1.81666k   631.515k       3.46851G/s    0.57271   57.0011k   591.885k        0.937247   5.89739k/s 3.49058G/s     1.89445M               2.99986                3.20071        115       678.199k/s [BEST: throughput=  3.98 GB/s doc_throughput=  6295 docs/s instructions=     1894454 cycles=      586595 branch_miss=    1665 cache_miss=       0 cache_ref=     56942 items=       115 avg_time=    160381 ns]
distinct_user_id<yyjson>                      639240 ns       639223 ns         1199           9.703k           1.56148G             387        71.056k    1.32204M              2.09344           2.4726k       3.26887G          2.87799M                    4.55728                     2.17693           284.349k    7.48209k   631.515k       942.175M/s   1.13721k   50.5862k   1.49113M         2.36119    1.5644k/s 2.33272G/s     2.87834M               4.55783                1.93031        115       179.906k/s [BEST: throughput=  1.56 GB/s doc_throughput=  2472 docs/s instructions=     2877991 cycles=     1322040 branch_miss=    9703 cache_miss=     387 cache_ref=     71056 items=       115 avg_time=    626648 ns]
distinct_user_id<rapidjson>                  2149177 ns      2148597 ns          326          28.706k           321.427M         11.999k         55.93k    7.23867M              11.4624           508.978       3.68432G          21.8231M                    34.5567                     3.01479           58.5324k    29.0114k   631.515k       280.304M/s    2.7182k   37.1289k   7.36158M          11.657     465.42/s 3.42623G/s     21.8238M               34.5578                2.96455        115       53.5233k/s [BEST: throughput=  0.32 GB/s doc_throughput=   508 docs/s instructions=    21823103 cycles=     7238672 branch_miss=   28706 cache_miss=   11999 cache_ref=     55930 items=       115 avg_time=   2139239 ns]
distinct_user_id<rapidjson_insitu>           1597942 ns      1597839 ns          429          31.776k           417.364M         14.524k        76.226k    5.58587M               8.8452           660.894       3.69167G          13.2547M                    20.9887                     2.37289           76.0028k    31.8253k   631.515k       376.921M/s   3.52557k    67.842k    5.5907M         8.85283    625.845/s 3.49891G/s     13.2538M               20.9873                2.37069        115       71.9722k/s [BEST: throughput=  0.42 GB/s doc_throughput=   660 docs/s instructions=    13254667 cycles=     5585874 branch_miss=   31776 cache_miss=   14524 cache_ref=     76226 items=       115 avg_time=   1588112 ns]
find_tweet<simdjson_dom>                      267167 ns       267112 ns         2620           3.521k           2.45159G               0        84.301k    951.075k              1.50602          3.88208k       3.69215G          2.84337M                    4.50246                     2.98964           3.88208k    3.64542k   631.515k       2.20186G/s    8.40229   84.2467k   955.519k         1.51306   3.74374k/s 3.57722G/s     2.84337M               4.50246                2.97574          1       3.74374k/s [BEST: throughput=  2.45 GB/s doc_throughput=  3882 docs/s instructions=     2843373 cycles=      951075 branch_miss=    3521 cache_miss=       0 cache_ref=     84301 items=         1 avg_time=    259035 ns]
find_tweet<simdjson_ondemand>                 123520 ns       123517 ns         5657              998           5.48538G               0        29.965k    425.182k             0.673273          8.68606k       3.69316G          1.38745M                    2.19702                     3.26319           8.68606k     1031.89   631.515k       4.76166G/s  0.0806081   30.0293k     426.5k         0.67536   8.09607k/s 3.45297G/s     1.38745M               2.19702                3.25311          1       8.09607k/s [BEST: throughput=  5.49 GB/s doc_throughput=  8686 docs/s instructions=     1387449 cycles=      425182 branch_miss=     998 cache_miss=       0 cache_ref=     29965 items=         1 avg_time=    115564 ns]
find_tweet<yyjson>                            624397 ns       624246 ns         1204           9.307k           1.60914G             230        61.243k    1.27988M              2.02667          2.54807k       3.26121G           2.8173M                    4.46117                     2.20123           2.54807k     7.2059k   631.515k        964.78M/s   1.16971k   41.9545k   1.45448M         2.30315   1.60193k/s 2.32997G/s     2.81773M               4.46185                1.93728          1       1.60193k/s [BEST: throughput=  1.61 GB/s doc_throughput=  2548 docs/s instructions=     2817296 cycles=     1279875 branch_miss=    9307 cache_miss=     230 cache_ref=     61243 items=         1 avg_time=    615373 ns]
find_tweet<rapidjson>                        2132131 ns      2132147 ns          328          28.337k           323.767M         21.422k        48.413k    7.20029M              11.4016           512.684       3.69147G          21.7384M                    34.4226                      3.0191            512.684    28.9052k   631.515k       282.466M/s   2.28002k   29.3237k   7.31453M         11.5825    469.011/s 3.43059G/s     21.7393M                34.424                2.97207          1        469.011/s [BEST: throughput=  0.32 GB/s doc_throughput=   512 docs/s instructions=    21738395 cycles=     7200287 branch_miss=   28337 cache_miss=   21422 cache_ref=     48413 items=         1 avg_time=   2123757 ns]
find_tweet<rapidjson_insitu>                 1586672 ns      1586574 ns          430          24.548k           405.767M              59        57.919k    5.40116M              8.55269            642.53       3.47041G           13.175M                    20.8626                      2.4393             642.53     32.076k   631.515k       379.598M/s   3.14916k   60.6144k   5.56167M         8.80687    630.289/s 3.50546G/s     13.1751M               20.8627                2.36891          1        630.289/s [BEST: throughput=  0.41 GB/s doc_throughput=   642 docs/s instructions=    13175018 cycles=     5401155 branch_miss=   24548 cache_miss=      59 cache_ref=     57919 items=         1 avg_time=   1578329 ns]
