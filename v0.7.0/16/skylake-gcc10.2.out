run_benchmark: v0.8.0~22 /home/jkeiser/simdjson_benchmark_results/v0.7.0/16/skylake-gcc10.2.json -DCMAKE_BUILD_TYPE=Release
git reset --hard v0.8.0~22
HEAD is now at cfff8a5e Merge pull request #1368 from simdjson/jkeiser/ondemand-rapidjson
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- git Version: v0.2.1-cfff8a5e
-- Version: 0.2.1
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 11
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
make[3]: Nothing to be done for '_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build'.
[ 72%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
make[3]: Nothing to be done for 'jsonexamples/generated/CMakeFiles/generated-data.dir/build'.
[ 72%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
make[3]: Nothing to be done for 'src/CMakeFiles/simdjson.dir/build'.
[ 81%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
make[3]: Nothing to be done for 'dependencies/CMakeFiles/yyjson.dir/build'.
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/g++-10  -DRAPIDJSON_HAS_STDSTRING -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_COMPETITION_RAPIDJSON -DSIMDJSON_COMPETITION_YYJSON -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/rapidjson/include  -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/g++-10  -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.6.0.0 ../_deps/google_benchmarks/src/libbenchmark.a ../dependencies/libyyjson.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/16/skylake-gcc10.2.json --benchmark_out_format=json
2021-01-25 02:08:34
Running benchmark/bench_ondemand
Run on (4 X 4000 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 256 KiB (x4)
  L3 Unified 8192 KiB (x1)
Load Average: 1.00, 1.01, 0.89
simdjson::dom implementation:      haswell
simdjson::ondemand implementation: fallback

Benchmark                                          Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>                  271853 ns       271806 ns         2575           3.853k           2.40996G               0        93.045k    967.537k              1.53209          3.81615k       3.69227G           2.9625M                    4.69111                      3.0619           381.615k    4.02435k   631.515k       2.16384G/s   0.927767   92.8815k   972.789k         1.54041    3.6791k/s 3.57899G/s      2.9625M               4.69111                3.04537        100        367.91k/s [BEST: throughput=  2.41 GB/s doc_throughput=  3816 docs/s instructions=     2962504 cycles=      967537 branch_miss=    3853 cache_miss=       0 cache_ref=     93045 items=       100 avg_time=    263697 ns]
partial_tweets<simdjson_ondemand>            1127067 ns      1127066 ns          621            32.3k           567.528M               0        59.969k    4.10776M              6.50461           898.677       3.69155G          10.6861M                    16.9214                     2.60145           89.8677k     32.789k   631.515k       534.361M/s    35.2093   59.8905k   4.12793M         6.53654     887.26/s 3.66254G/s     10.6861M               16.9214                2.58874        100        88.726k/s [BEST: throughput=  0.57 GB/s doc_throughput=   898 docs/s instructions=    10686117 cycles=     4107761 branch_miss=   32300 cache_miss=       0 cache_ref=     59969 items=       100 avg_time=   1118986 ns]
partial_tweets<yyjson>                        698084 ns       698058 ns         1000          10.216k           1.35789G             350         71.23k    1.53517M              2.43093           2.1502k       3.30092G          2.90851M                    4.60561                     1.89459            215.02k    7.42887k   631.515k       862.765M/s    1049.49   51.3869k   1.69257M         2.68017   1.43255k/s 2.42468G/s     2.90894M               4.60629                1.71866        100       143.255k/s [BEST: throughput=  1.36 GB/s doc_throughput=  2150 docs/s instructions=     2908510 cycles=     1535167 branch_miss=   10216 cache_miss=     350 cache_ref=     71230 items=       100 avg_time=    689078 ns]
partial_tweets<rapidjson>                    1636955 ns      1636654 ns          429          25.601k           442.051M         15.882k        54.978k    5.27368M              8.35083           699.985       3.69149G           13.409M                     21.233                     2.54262           69.9985k    26.0682k   631.515k       367.982M/s    692.807   34.2149k   5.41362M         8.57244    611.003/s 3.30774G/s     13.4097M               21.2342                2.47703        100       61.1003k/s [BEST: throughput=  0.44 GB/s doc_throughput=   699 docs/s instructions=    13408960 cycles=     5273677 branch_miss=   25601 cache_miss=   15882 cache_ref=     54978 items=       100 avg_time=   1628531 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>                  88618677 ns     88618123 ns            8         922.162k           521.694M         10.812M       15.3875M    325.255M              7.07096           11.3415       3.68888G          983.113M                    21.3726                     3.02259           11.3415M    923.679k   45.9988M       495.021M/s    10.884M    15.394M   326.791M         7.10435    11.2844/s 3.68763G/s     983.113M               21.3726                3.00838      1000k       11.2844M/s [BEST: throughput=  0.52 GB/s doc_throughput=    11 docs/s instructions=   983112680 cycles=   325255424 branch_miss=  922162 cache_miss=10812037 cache_ref=  15387458 items=   1000000 avg_time=  88604207 ns]
large_random<simdjson_ondemand>            130363900 ns    130334426 ns            5         2.38186M           353.034M         5.8091M       8.07511M    480.726M              10.4508           7.67486        3.6895G          1.28297G                    27.8915                     2.66883           7.67486M    2.38669M   45.9988M       336.579M/s   5.71231M   8.07532M   480.709M         10.4505    7.67257/s 3.68827G/s     1.28297G               27.8915                2.66892      1000k       7.67257M/s [BEST: throughput=  0.35 GB/s doc_throughput=     7 docs/s instructions=  1282973810 cycles=   480725661 branch_miss= 2381865 cache_miss= 5809097 cache_ref=   8075106 items=   1000000 avg_time= 130350413 ns]
large_random<simdjson_ondemand_unordered>  135630285 ns    135631133 ns            5         2.41364M           339.346M        5.69564M       8.07328M    500.052M               10.871           7.37728       3.68902G          1.28697G                    27.9784                     2.57368           7.37728M    2.41554M   45.9988M       323.435M/s   5.71312M   8.07408M   500.308M         10.8765    7.37294/s 3.68874G/s     1.28697G               27.9784                2.57237      1000k       7.37294M/s [BEST: throughput=  0.34 GB/s doc_throughput=     7 docs/s instructions=  1286973817 cycles=   500052153 branch_miss= 2413637 cache_miss= 5695642 cache_ref=   8073280 items=   1000000 avg_time= 135616344 ns]
large_random<yyjson>                       127894413 ns    127888319 ns            5         658.563k           359.953M        5.82994M       9.03838M    349.514M              7.59833           7.82527       2.73504G           944.15M                    20.5255                     2.70132           7.82527M    661.615k   45.9988M       343.017M/s   5.82885M   9.04468M   349.729M           7.603    7.81932/s 2.73464G/s      944.15M               20.5255                2.69966      1000k       7.81932M/s [BEST: throughput=  0.36 GB/s doc_throughput=     7 docs/s instructions=   944149596 cycles=   349513704 branch_miss=  658563 cache_miss= 5829942 cache_ref=   9038377 items=   1000000 avg_time= 127875143 ns]
large_random<rapidjson>                    169124416 ns    169090329 ns            4         596.953k           284.036M        6.96687M       10.8101M    537.755M              11.6906           6.17486       3.32056G          1.65714G                    36.0258                     3.08159           6.17486M     593.08k   45.9988M       259.434M/s   6.40225M   10.0517M   544.004M         11.8265      5.914/s 3.21724G/s     1.65715G                36.026                3.04621      1000k         5.914M/s [BEST: throughput=  0.28 GB/s doc_throughput=     6 docs/s instructions=  1657141369 cycles=   537754724 branch_miss=  596953 cache_miss= 6966868 cache_ref=  10810099 items=   1000000 avg_time= 169105405 ns]
large_random<rapidjson_lossless>           199192861 ns    199152313 ns            4         604.567k           239.303M         6.9579M       10.7781M    649.973M              14.1302           5.20237        3.3814G          2.00811G                    43.6557                     3.08953           5.20237M    604.026k   45.9988M       220.273M/s   6.38889M    10.015M   654.915M         14.2377    5.02128/s 3.28851G/s     2.00812G                43.656                3.06623      1000k       5.02128M/s [BEST: throughput=  0.24 GB/s doc_throughput=     5 docs/s instructions=  2008110782 cycles=   649973166 branch_miss=  604567 cache_miss= 6957895 cache_ref=  10778083 items=   1000000 avg_time= 199173064 ns]
large_random<rapidjson_insitu>             175606745 ns    175607926 ns            4         587.286k           273.326M        8.92298M       13.7338M    521.398M               11.335           5.94203       3.09817G          1.49826G                    32.5717                     2.87354           5.94203M    587.499k   45.9988M       249.806M/s   8.38037M   12.9819M   528.001M         11.4786     5.6945/s  3.0067G/s     1.49827G               32.5719                2.83763      1000k        5.6945M/s [BEST: throughput=  0.27 GB/s doc_throughput=     5 docs/s instructions=  1498259727 cycles=   521398422 branch_miss=  587286 cache_miss= 8922984 cache_ref=  13733799 items=   1000000 avg_time= 175587344 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>                        84229804 ns     84212935 ns            8         462.401k            1.6343G        15.5596M       22.1779M    309.759M              2.25599           11.9027       3.68697G          945.501M                    6.88614                     3.05238           6.24044M    478.536k   137.305M       1.51848G/s    15.524M    22.164M   310.567M         2.26188    11.8747/s 3.68788G/s     945.501M               6.88614                3.04444   524.288k       6.22574M/s [BEST: throughput=  1.63 GB/s doc_throughput=    11 docs/s instructions=   945501383 cycles=   309759127 branch_miss=  462401 cache_miss=15559603 cache_ref=  22177935 items=    524288 avg_time=  84215689 ns]
kostya<simdjson_ondemand>                  301913466 ns    301836096 ns            2         3.32331M           455.142M        10.3377M       14.3326M    1.11286G              8.10502           3.31483       3.68894G           2.8802G                    20.9767                     2.58811           1.73792M    3.33554M   137.305M       433.826M/s   10.2957M    14.265M   1.11337G         8.10877    3.31306/s 3.68867G/s      2.8802G               20.9767                2.58691   524.288k         1.737M/s [BEST: throughput=  0.46 GB/s doc_throughput=     3 docs/s instructions=  2880202947 cycles=  1112859890 branch_miss= 3323309 cache_miss=10337718 cache_ref=  14332631 items=    524288 avg_time= 301895739 ns]
kostya<yyjson>                             206698468 ns    206693165 ns            3          504.54k           665.101M        11.3656M       16.2256M    563.054M              4.10075           4.84397       2.72741G          984.045M                    7.16685                     1.74769           2.53963M    544.768k   137.305M        633.52M/s   11.3657M   16.2222M   564.375M         4.11038    4.83809/s  2.7305G/s     984.045M               7.16686                 1.7436   524.288k       2.53655M/s [BEST: throughput=  0.67 GB/s doc_throughput=     4 docs/s instructions=   984044926 cycles=   563053584 branch_miss=  504540 cache_miss=11365590 cache_ref=  16225615 items=    524288 avg_time= 206677664 ns]
kostya<rapidjson>                          244896874 ns    244880123 ns            3         955.332k            568.68M        8.05713M       11.9665M     807.92M              5.88413           4.14173       3.34619G          2.29716G                    16.7303                     2.84329           2.17146M    954.965k   137.305M       534.728M/s   7.76334M    11.646M   810.655M         5.90405    4.08363/s 3.31042G/s     2.29716G               16.7303                 2.8337   524.288k         2.141M/s [BEST: throughput=  0.57 GB/s doc_throughput=     4 docs/s instructions=  2297156016 cycles=   807920439 branch_miss=  955332 cache_miss= 8057128 cache_ref=  11966517 items=    524288 avg_time= 244877810 ns]
kostya<rapidjson_lossless>                 259036710 ns    259025842 ns            3         954.025k            537.32M         8.0764M        11.977M    859.738M              6.26152           3.91333       3.36444G          2.49743G                    18.1889                     2.90487           2.05171M    954.954k   137.305M       505.526M/s    7.7715M   11.6674M       863M         6.28528    3.86062/s 3.33171G/s     2.49743G               18.1889                2.89389   524.288k       2.02408M/s [BEST: throughput=  0.54 GB/s doc_throughput=     3 docs/s instructions=  2497426013 cycles=   859737609 branch_miss=  954025 cache_miss= 8076399 cache_ref=  11977006 items=    524288 avg_time= 259016252 ns]
kostya<rapidjson_insitu>                   281688022 ns    281675757 ns            3         1027.04k           493.379M         13.767M       19.7976M    827.288M              6.02518           3.59331        2.9727G          2.05054G                    14.9342                     2.47864           1.88393M    1028.65k   137.305M       464.876M/s   13.4677M   19.3899M   829.954M          6.0446    3.55018/s 2.94649G/s     2.05055G               14.9342                2.47067   524.288k       1.86132M/s [BEST: throughput=  0.49 GB/s doc_throughput=     3 docs/s instructions=  2050544153 cycles=   827287644 branch_miss= 1027037 cache_miss=13767034 cache_ref=  19797571 items=    524288 avg_time= 281668506 ns]
distinct_user_id<simdjson_dom>                268843 ns       268793 ns         2604           3.979k           2.46244G               0        94.307k     946.91k              1.49943          3.89926k       3.69225G          2.90343M                    4.59756                     3.06621           448.415k    4.15679k   631.515k       2.18809G/s    9.22081    94.402k   953.178k         1.50935   3.72034k/s 3.54614G/s     2.90343M               4.59756                3.04605        115       427.839k/s [BEST: throughput=  2.46 GB/s doc_throughput=  3899 docs/s instructions=     2903428 cycles=      946910 branch_miss=    3979 cache_miss=       0 cache_ref=     94307 items=       115 avg_time=    258371 ns]
distinct_user_id<simdjson_ondemand>          1117675 ns      1117643 ns          626          32.071k           572.473M               0        57.964k    4.07232M               6.4485           906.507       3.69159G          10.3431M                    16.3782                     2.53985           104.248k    32.4891k   631.515k       538.866M/s    20.4952   57.7734k   4.08758M         6.47266     894.74/s 3.65732G/s     10.3431M               16.3782                2.53037        115       102.895k/s [BEST: throughput=  0.57 GB/s doc_throughput=   906 docs/s instructions=    10343109 cycles=     4072324 branch_miss=   32071 cache_miss=       0 cache_ref=     57964 items=       115 avg_time=   1108012 ns]
distinct_user_id<yyjson>                      691797 ns       691803 ns         1194           9.795k            1.3888G             338        68.524k    1.50984M              2.39082          2.19916k       3.32038G          2.87503M                    4.55259                      1.9042           252.903k    7.55691k   631.515k       870.566M/s   1.15183k   50.0586k   1.68453M         2.66744    1.4455k/s 2.43499G/s     2.87538M               4.55314                1.70693        115       166.232k/s [BEST: throughput=  1.39 GB/s doc_throughput=  2199 docs/s instructions=     2875032 cycles=     1509840 branch_miss=    9795 cache_miss=     338 cache_ref=     68524 items=       115 avg_time=    678971 ns]
distinct_user_id<rapidjson>                  1615379 ns      1615390 ns          435          26.071k           445.895M          3.298k        54.021k    5.22833M              8.27903           706.072       3.69158G          13.3497M                    21.1392                     2.55335           81.1982k    26.0475k   631.515k       372.826M/s   2.10114k    36.269k   5.37735M           8.515    619.046/s 3.32882G/s     13.3505M               21.1405                2.48274        115       71.1902k/s [BEST: throughput=  0.45 GB/s doc_throughput=   706 docs/s instructions=    13349747 cycles=     5228333 branch_miss=   26071 cache_miss=    3298 cache_ref=     54021 items=       115 avg_time=   1605240 ns]
distinct_user_id<rapidjson_insitu>           1144005 ns      1143934 ns          642          23.713k           610.557M          4.608k        74.369k    3.81829M              6.04624           966.813       3.69158G          9.70563M                    15.3688                     2.54188           111.184k    23.8146k   631.515k       526.481M/s   2.26496k   65.5637k   3.88803M         6.15668    874.176/s 3.39883G/s     9.70619M               15.3697                2.49643        115        100.53k/s [BEST: throughput=  0.61 GB/s doc_throughput=   966 docs/s instructions=     9705629 cycles=     3818294 branch_miss=   23713 cache_miss=    4608 cache_ref=     74369 items=       115 avg_time=   1134309 ns]
find_tweet<simdjson_dom>                      255305 ns       255255 ns         2743           3.716k           2.57263G               0        83.596k    906.303k              1.43513          4.07375k       3.69205G          2.82239M                    4.46924                     3.11418           4.07375k    3.85956k   631.515k       2.30414G/s    6.88152   83.6211k   911.539k         1.44342   3.91765k/s 3.57109G/s     2.82239M               4.46924                3.09629          1       3.91765k/s [BEST: throughput=  2.57 GB/s doc_throughput=  4073 docs/s instructions=     2822390 cycles=      906303 branch_miss=    3716 cache_miss=       0 cache_ref=     83596 items=         1 avg_time=    247083 ns]
find_tweet<simdjson_ondemand>                1048409 ns      1048371 ns          668          31.466k           610.568M               0        30.819k     3.8182M               6.0461            966.83       3.69155G          9.73047M                    15.4081                     2.54844             966.83    31.8003k   631.515k       574.472M/s   0.393713   30.8759k   3.83812M         6.07764    953.861/s 3.66103G/s     9.73047M               15.4081                2.53522          1        953.861/s [BEST: throughput=  0.61 GB/s doc_throughput=   966 docs/s instructions=     9730469 cycles=     3818202 branch_miss=   31466 cache_miss=       0 cache_ref=     30819 items=         1 avg_time=   1040305 ns]
find_tweet<yyjson>                            677696 ns       677550 ns         1078           9.769k           1.40896G             123        61.126k    1.48092M              2.34503          2.23108k       3.30406G          2.82428M                    4.47223                     1.90711           2.23108k      7.286k   631.515k       888.878M/s   1.18186k   41.4874k   1.64924M         2.61155    1.4759k/s 2.43412G/s      2.8247M                4.4729                1.71273          1        1.4759k/s [BEST: throughput=  1.41 GB/s doc_throughput=  2231 docs/s instructions=     2824280 cycles=     1480922 branch_miss=    9769 cache_miss=     123 cache_ref=     61126 items=         1 avg_time=    668656 ns]
find_tweet<rapidjson>                        1604222 ns      1604106 ns          438          25.908k           448.671M          3.286k        47.673k    5.19583M              8.22757           710.468       3.69147G            13.28M                    21.0289                      2.5559            710.468    25.9597k   631.515k       375.449M/s   1.72427k   28.5368k   5.34811M          8.4687      623.4/s 3.33401G/s      13.281M               21.0303                 2.4833          1          623.4/s [BEST: throughput=  0.45 GB/s doc_throughput=   710 docs/s instructions=    13280038 cycles=     5195834 branch_miss=   25908 cache_miss=    3286 cache_ref=     47673 items=         1 avg_time=   1595936 ns]
find_tweet<rapidjson_insitu>                 1133530 ns      1133226 ns          652          23.357k           615.963M          6.039k         67.41k    3.78486M               5.9933           975.373       3.69165G          9.64775M                    15.2771                     2.54904            975.373    23.5846k   631.515k       531.456M/s   1.87344k   58.2868k   3.85623M         6.10632    882.437/s 3.40288G/s       9.648M               15.2776                2.50192          1        882.437/s [BEST: throughput=  0.62 GB/s doc_throughput=   975 docs/s instructions=     9647747 cycles=     3784861 branch_miss=   23357 cache_miss=    6039 cache_ref=     67410 items=         1 avg_time=   1125310 ns]
