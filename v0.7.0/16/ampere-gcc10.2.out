run_benchmark: v0.8.0~22 /home/jkeiser/simdjson_benchmark_results/v0.7.0/16/ampere-gcc10.2.json -DCMAKE_BUILD_TYPE=Release
git reset --hard v0.8.0~22
HEAD is now at cfff8a5e Merge pull request #1368 from simdjson/jkeiser/ondemand-rapidjson
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- git Version: v0.2.1-cfff8a5e
-- Version: 0.2.1
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 11
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
make[3]: Nothing to be done for '_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build'.
[ 72%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
make[3]: Nothing to be done for 'jsonexamples/generated/CMakeFiles/generated-data.dir/build'.
[ 72%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
make[3]: Nothing to be done for 'src/CMakeFiles/simdjson.dir/build'.
[ 81%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
make[3]: Nothing to be done for 'dependencies/CMakeFiles/yyjson.dir/build'.
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/g++-10  -DRAPIDJSON_HAS_STDSTRING -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_COMPETITION_RAPIDJSON -DSIMDJSON_COMPETITION_YYJSON -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/rapidjson/include  -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/g++-10  -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.6.0.0 ../_deps/google_benchmarks/src/libbenchmark.a ../dependencies/libyyjson.a -pthread /usr/lib/aarch64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/16/ampere-gcc10.2.json --benchmark_out_format=json
2021-01-25 01:11:18
Running benchmark/bench_ondemand
Run on (32 X 3300 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x32)
  L1 Instruction 32 KiB (x32)
  L2 Unified 256 KiB (x16)
Load Average: 1.00, 1.00, 1.00
simdjson::dom implementation:      arm64
simdjson::ondemand implementation: arm64

Benchmark                                          Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>                 1606981 ns      1606998 ns          436          17.559k           400.718M         25.925k       906.161k    5.04452M              7.98796           634.534       3.20092G          3.92139M                    6.20949                    0.777357           63.4534k    17.6917k   631.515k       374.773M/s   25.9333k   903.142k   5.06211M         8.01583    622.278/s 3.15004G/s     3.92139M               6.20949               0.774654        100       62.2278k/s [BEST: throughput=  0.40 GB/s doc_throughput=   634 docs/s instructions=     3921388 cycles=     5044515 branch_miss=   17559 cache_miss=   25925 cache_ref=    906161 items=       100 avg_time=   1583032 ns]
partial_tweets<simdjson_ondemand>            1092745 ns      1092704 ns          641             7.2k            592.04M         22.754k       404.333k    3.41474M              5.40722           937.491       3.20129G          2.75992M                    4.37031                    0.808237           93.7491k    7.28714k   631.515k       551.165M/s   22.7607k   404.742k   3.41835M         5.41293    915.161/s 3.12834G/s     2.75992M               4.37031               0.807384        100       91.5161k/s [BEST: throughput=  0.59 GB/s doc_throughput=   937 docs/s instructions=     2759918 cycles=     3414738 branch_miss=    7200 cache_miss=   22754 cache_ref=    404333 items=       100 avg_time=   1069005 ns]
partial_tweets<yyjson>                       1265136 ns      1265152 ns          556          48.193k           559.166M         24.308k       1.49014M    3.51473M              5.56555           885.436       3.11207G          3.54858M                    5.61916                     1.00963           88.5436k     48.113k   631.515k       476.038M/s    24.382k   1.49197M   3.74533M          5.9307    790.419/s 2.96038G/s     3.54889M               5.61964               0.947551        100       79.0419k/s [BEST: throughput=  0.56 GB/s doc_throughput=   885 docs/s instructions=     3548582 cycles=     3514729 branch_miss=   48193 cache_miss=   24308 cache_ref=   1490137 items=       100 avg_time=   1239458 ns]
partial_tweets<rapidjson>                    2848767 ns      2848639 ns          245          79.733k           229.348M         12.956k       6.27718M     8.7907M                13.92           363.171       3.19253G          13.4035M                    21.2243                     1.52473           36.3171k    79.5581k   631.515k        211.42M/s   13.1391k   6.28379M   8.81971M          13.966    351.045/s 3.09611G/s     13.4037M               21.2247                1.51975        100       35.1045k/s [BEST: throughput=  0.23 GB/s doc_throughput=   363 docs/s instructions=    13403455 cycles=     8790705 branch_miss=   79733 cache_miss=   12956 cache_ref=   6277177 items=       100 avg_time=   2822767 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>                 311016291 ns    310994824 ns            2         1.90851M           147.928M        3.98074M       246.716M    994.179M              21.6132           3.21592        3.1972G          1.10647G                    24.0544                     1.11295           3.21592M    1.90816M   45.9988M       141.057M/s   3.98075M   246.715M   994.029M         21.6099    3.21549/s 3.19629G/s     1.10647G               24.0544                1.11312      1000k       3.21549M/s [BEST: throughput=  0.15 GB/s doc_throughput=     3 docs/s instructions=  1106472994 cycles=   994178544 branch_miss= 1908507 cache_miss= 3980738 cache_ref= 246715897 items=   1000000 avg_time= 310958669 ns]
large_random<simdjson_ondemand>            183750971 ns    183739351 ns            4         1.19178M           250.459M        2.31751M       134.455M    587.219M               12.766           5.44491       3.19735G          689.959M                    14.9995                     1.17496           5.44491M    1.19192M   45.9988M        238.75M/s   2.31751M   134.454M   587.225M         12.7661    5.44249/s 3.19597G/s     689.959M               14.9995                1.17495      1000k       5.44249M/s [BEST: throughput=  0.25 GB/s doc_throughput=     5 docs/s instructions=   689958643 cycles=   587218668 branch_miss= 1191777 cache_miss= 2317510 cache_ref= 134454621 items=   1000000 avg_time= 183698126 ns]
large_random<simdjson_ondemand_unordered>  184662682 ns    184647828 ns            4         1.20805M           249.224M        2.31747M       138.475M    590.125M              12.8292           5.41805       3.19733G          693.959M                    15.0865                     1.17595           5.41805M    1.20807M   45.9988M       237.576M/s   2.31753M   138.475M   590.135M         12.8294    5.41571/s   3.196G/s     693.959M               15.0865                1.17593      1000k       5.41571M/s [BEST: throughput=  0.25 GB/s doc_throughput=     5 docs/s instructions=   693958641 cycles=   590125447 branch_miss= 1208050 cache_miss= 2317475 cache_ref= 138474573 items=   1000000 avg_time= 184610638 ns]
large_random<yyjson>                       218804551 ns    203380312 ns            3         1.64203M           226.209M        4.91349M       235.372M    624.962M              13.5865           4.91771       3.07338G          907.191M                    19.7221                     1.45159           4.91771M    1.64052M   45.9988M       215.694M/s   4.91348M   235.358M    625.07M         13.5888     4.9169/s  3.0734G/s     907.191M               19.7221                1.45134      1000k        4.9169M/s [BEST: throughput=  0.23 GB/s doc_throughput=     4 docs/s instructions=   907191194 cycles=   624961697 branch_miss= 1642034 cache_miss= 4913486 cache_ref= 235371805 items=   1000000 avg_time= 218747062 ns]
large_random<rapidjson>                    349873366 ns    349847535 ns            2         1.92781M            131.79M        4.95316M       764.541M    1089.39M              23.6831           2.86508       3.12119G          1.67651G                    36.4467                     1.53894           2.86508M    1.94707M   45.9988M       125.391M/s   4.95396M   764.536M    1089.7M         23.6897    2.85839/s 3.11478G/s     1.67651G               36.4469                1.53851      1000k       2.85839M/s [BEST: throughput=  0.13 GB/s doc_throughput=     2 docs/s instructions=  1676505322 cycles=  1089391361 branch_miss= 1927811 cache_miss= 4953161 cache_ref= 764541033 items=   1000000 avg_time= 349810889 ns]
large_random<rapidjson_lossless>           386243704 ns    386247590 ns            2         1.99599M           119.352M        4.95247M       955.479M    1.20576G              26.2128           2.59467       3.12854G          1.97648G                    42.9681                      1.6392           2.59467M    1.99829M   45.9988M       113.574M/s   4.95332M   955.495M   1.20584G         26.2146    2.58901/s 3.12193G/s     1.97649G               42.9682                 1.6391      1000k       2.58901M/s [BEST: throughput=  0.12 GB/s doc_throughput=     2 docs/s instructions=  1976481484 cycles=  1205757078 branch_miss= 1995986 cache_miss= 4952465 cache_ref= 955479188 items=   1000000 avg_time= 386174515 ns]
large_random<rapidjson_insitu>             341447475 ns    341428524 ns            2         2.00187M           135.006M        6.38869M       766.675M     1054.9M              22.9332           2.93499       3.09611G          1.59069G                    34.5811                     1.50791           2.93499M    2.01923M   45.9988M       128.483M/s   6.38931M   766.736M   1054.71M          22.929    2.92887/s  3.0891G/s     1.59069G               34.5812                1.50818      1000k       2.92887M/s [BEST: throughput=  0.14 GB/s doc_throughput=     2 docs/s instructions=  1590687023 cycles=  1054897953 branch_miss= 2001874 cache_miss= 6388691 cache_ref= 766674886 items=   1000000 avg_time= 341389619 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>                       380326783 ns    380330924 ns            2         1099.25k           361.114M        6.94588M        246.87M    1.21551G              8.85266           2.63002       3.19682G          1.14604G                    8.34671                    0.942847           1.37889M     1099.1k   137.305M        344.29M/s   6.94589M    246.87M   1.21565G         8.85368    2.62929/s 3.19631G/s     1.14604G               8.34671               0.942739   524.288k        1.3785M/s [BEST: throughput=  0.36 GB/s doc_throughput=     2 docs/s instructions=  1146044351 cycles=  1215514284 branch_miss= 1099246 cache_miss= 6945878 cache_ref= 246870031 items=    524288 avg_time= 380259539 ns]
kostya<simdjson_ondemand>                  258211854 ns    258209860 ns            3         1.13234M           533.696M        5.28109M       136.865M    822.381M              5.98945           3.88693       3.19654G          796.072M                    5.79784                    0.968009           2.03787M    1.24881M   137.305M       507.123M/s    5.2811M   137.213M   825.289M         6.01063    3.87282/s  3.1962G/s     796.072M               5.79784               0.964597   524.288k       2.03047M/s [BEST: throughput=  0.53 GB/s doc_throughput=     3 docs/s instructions=   796071983 cycles=   822381096 branch_miss= 1132340 cache_miss= 5281092 cache_ref= 136865227 items=    524288 avg_time= 258149913 ns]
kostya<yyjson>                             286042701 ns    286007279 ns            2            1035k           480.321M        7.97998M       344.905M    871.765M              6.34911            3.4982       3.04961G          1052.15M                    7.66288                     1.20692           1.83407M    1037.98k   137.305M       457.835M/s   7.97939M   344.913M   872.064M         6.35129    3.49641/s  3.0491G/s     1052.15M               7.66288                1.20651   524.288k       1.83313M/s [BEST: throughput=  0.48 GB/s doc_throughput=     3 docs/s instructions=  1052152294 cycles=   871764760 branch_miss= 1034999 cache_miss= 7979977 cache_ref= 344905129 items=    524288 avg_time= 285976389 ns]
kostya<rapidjson>                          567199235 ns    567204669 ns            1         7.18023M           242.108M         5.3867M       976.999M    1.77886G              12.9555           1.76329       3.13664G          2.38981G                    17.4051                     1.34345            924.47k    7.18023M   137.305M       230.859M/s    5.3867M   976.999M   1.77886G         12.9555    1.76303/s 3.13619G/s     2.38981G               17.4051                1.34345   524.288k       924.337k/s [BEST: throughput=  0.24 GB/s doc_throughput=     1 docs/s instructions=  2389810984 cycles=  1778861066 branch_miss= 7180228 cache_miss= 5386700 cache_ref= 976999458 items=    524288 avg_time= 567122480 ns]
kostya<rapidjson_lossless>                 599888726 ns    599865825 ns            1         7.81133M           228.912M        5.38997M       1094.76M    1.88307G              13.7145           1.66718       3.13941G          2.56492G                    18.6804                     1.36209           874.082k    7.81133M   137.305M       218.289M/s   5.38997M   1094.76M   1.88307G         13.7145    1.66704/s 3.13915G/s     2.56492G               18.6804                1.36209   524.288k       874.009k/s [BEST: throughput=  0.23 GB/s doc_throughput=     1 docs/s instructions=  2564916956 cycles=  1883068340 branch_miss= 7811331 cache_miss= 5389970 cache_ref=1094760333 items=    524288 avg_time= 599815593 ns]
kostya<rapidjson_insitu>                   568266244 ns    568255825 ns            1         8.76141M           241.654M        8.50159M       930.804M    1.75894G              12.8105           1.75998       3.09571G          2.22398G                    16.1973                     1.26438           922.738k    8.76141M   137.305M       230.432M/s   8.50159M   930.804M   1.75894G         12.8105    1.75977/s 3.09533G/s     2.22398G               16.1973                1.26438   524.288k       922.627k/s [BEST: throughput=  0.24 GB/s doc_throughput=     1 docs/s instructions=  2223975243 cycles=  1758941917 branch_miss= 8761407 cache_miss= 8501594 cache_ref= 930803915 items=    524288 avg_time= 568187534 ns]
distinct_user_id<simdjson_dom>               1599933 ns      1599926 ns          437          17.133k           404.269M         26.466k       890.227k    5.00013M              7.91767           640.157       3.20087G          3.85168M                     6.0991                    0.770315           73.6181k    17.3689k   631.515k        376.43M/s   26.4777k   891.632k   5.00625M         7.92737    625.029/s 3.12905G/s     3.85168M               6.09911               0.769374        115       71.8783k/s [BEST: throughput=  0.40 GB/s doc_throughput=   640 docs/s instructions=     3851676 cycles=     5000130 branch_miss=   17133 cache_miss=   26466 cache_ref=    890227 items=       115 avg_time=   1565714 ns]
distinct_user_id<simdjson_ondemand>          1082845 ns      1082793 ns          647           6.809k           603.596M         22.413k       379.725k    3.34922M              5.30347            955.79       3.20115G          2.69546M                    4.26824                    0.804802           109.916k    6.91112k   631.515k        556.21M/s    22.385k   379.844k   3.35323M         5.30982    923.538/s 3.09683G/s     2.69546M               4.26824               0.803839        115       106.207k/s [BEST: throughput=  0.60 GB/s doc_throughput=   955 docs/s instructions=     2695459 cycles=     3349222 branch_miss=    6809 cache_miss=   22413 cache_ref=    379725 items=       115 avg_time=   1048657 ns]
distinct_user_id<yyjson>                     1259772 ns      1259787 ns          562          48.144k           565.115M         24.128k       1.47657M    3.46372M              5.48477           894.856       3.09953G          3.51449M                    5.56517                     1.01466           102.908k    47.9329k   631.515k       478.065M/s    24.188k   1.47746M   3.69383M         5.84916    793.785/s 2.93211G/s     3.51479M               5.56565               0.951529        115       91.2853k/s [BEST: throughput=  0.57 GB/s doc_throughput=   894 docs/s instructions=     3514487 cycles=     3463715 branch_miss=   48144 cache_miss=   24128 cache_ref=   1476569 items=       115 avg_time=   1223220 ns]
distinct_user_id<rapidjson>                  2915370 ns      2915196 ns          245          80.673k           224.761M          13.57k        6.2665M    8.99247M              14.2395           355.907       3.20048G          13.3661M                    21.1652                     1.48637           40.9293k    80.5829k   631.515k       206.593M/s    13.751k   6.26735M   9.02948M         14.2981     343.03/s 3.09738G/s     13.3667M               21.1661                1.48034        115       39.4485k/s [BEST: throughput=  0.22 GB/s doc_throughput=   355 docs/s instructions=    13366138 cycles=     8992473 branch_miss=   80673 cache_miss=   13570 cache_ref=   6266504 items=       115 avg_time=   2877814 ns]
distinct_user_id<rapidjson_insitu>           2207946 ns      2207974 ns          319          63.111k           299.296M         23.943k       3.66977M    6.75357M              10.6942           473.934       3.20075G          9.94403M                    15.7463                     1.47241           54.5024k    63.2198k   631.515k       272.766M/s   24.0689k   3.67161M   6.79827M          10.765    452.904/s 3.07896G/s     9.94452M               15.7471                 1.4628        115        52.084k/s [BEST: throughput=  0.30 GB/s doc_throughput=   473 docs/s instructions=     9944031 cycles=     6753568 branch_miss=   63111 cache_miss=   23943 cache_ref=   3669771 items=       115 avg_time=   2170913 ns]
find_tweet<simdjson_dom>                     1553660 ns      1553576 ns          450          16.817k           416.297M         23.475k       875.428k    4.85556M              7.68875           659.203        3.2008G          3.76236M                    5.95767                    0.774856            659.203    17.0507k   631.515k        387.66M/s   23.4867k   875.935k   4.86173M         7.69852    643.676/s 3.12938G/s     3.76236M               5.95767               0.773872          1        643.676/s [BEST: throughput=  0.42 GB/s doc_throughput=   659 docs/s instructions=     3762360 cycles=     4855562 branch_miss=   16817 cache_miss=   23475 cache_ref=    875428 items=         1 avg_time=   1520604 ns]
find_tweet<simdjson_ondemand>                 948611 ns       948599 ns          738           4.052k           691.448M         11.557k       194.357k    2.92404M              4.63019            1094.9       3.20154G          2.05902M                    3.26045                    0.704171             1094.9    4.17425k   631.515k       634.894M/s   11.5559k   194.487k   2.92714M         4.63511    1054.19/s 3.08575G/s     2.05902M               3.26045               0.703424          1        1054.19/s [BEST: throughput=  0.69 GB/s doc_throughput=  1094 docs/s instructions=     2059023 cycles=     2924037 branch_miss=    4052 cache_miss=   11557 cache_ref=    194357 items=         1 avg_time=    915226 ns]
find_tweet<yyjson>                           1220919 ns      1220913 ns          574          47.806k           576.698M         21.663k       1.46024M    3.39725M              5.37953           913.197       3.10236G          3.45931M                     5.4778                     1.01827            913.197    47.6714k   631.515k       493.286M/s    21.704k   1.46104M   3.57376M         5.65903    819.059/s 2.92712G/s     3.45962M               5.47829               0.968062          1        819.059/s [BEST: throughput=  0.58 GB/s doc_throughput=   913 docs/s instructions=     3459312 cycles=     3397252 branch_miss=   47806 cache_miss=   21663 cache_ref=   1460245 items=         1 avg_time=   1185061 ns]
find_tweet<rapidjson>                        2818626 ns      2818426 ns          248          79.276k           232.998M         10.869k       6.26091M    8.67466M              13.7363            368.95       3.20052G           13.322M                    21.0954                     1.53574             368.95    79.4202k   631.515k       213.686M/s   11.0536k    6.2586M   8.72472M         13.8155    354.808/s  3.0956G/s     13.3226M               21.0962                1.52699          1        354.808/s [BEST: throughput=  0.23 GB/s doc_throughput=   368 docs/s instructions=    13322044 cycles=     8674658 branch_miss=   79276 cache_miss=   10869 cache_ref=   6260906 items=         1 avg_time=   2782316 ns]
find_tweet<rapidjson_insitu>                 2606999 ns      2319823 ns          323          62.894k           302.811M         20.625k       3.65801M    6.67483M              10.5695           479.499       3.20058G          9.90057M                    15.6775                     1.48327            479.499    63.0851k   631.515k       259.615M/s   20.7971k   3.65854M   6.70127M         10.6114    431.067/s  2.8887G/s     9.90102M               15.6782                1.47748          1        431.067/s [BEST: throughput=  0.30 GB/s doc_throughput=   479 docs/s instructions=     9900572 cycles=     6674829 branch_miss=   62894 cache_miss=   20625 cache_ref=   3658006 items=         1 avg_time=   2569930 ns]
