run_benchmark: v0.8.0~22 /home/jkeiser/simdjson_benchmark_results/v0.7.0/16/skylake-x-clang11.json -DCMAKE_BUILD_TYPE=Release
git reset --hard v0.8.0~22
HEAD is now at cfff8a5e Merge pull request #1368 from simdjson/jkeiser/ondemand-rapidjson
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- git Version: v0.2.1-cfff8a5e
-- Version: 0.2.1
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES -- failed to compile
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 11
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
make[3]: Nothing to be done for '_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build'.
[ 72%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
make[3]: Nothing to be done for 'jsonexamples/generated/CMakeFiles/generated-data.dir/build'.
[ 72%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
make[3]: Nothing to be done for 'src/CMakeFiles/simdjson.dir/build'.
[ 81%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
make[3]: Nothing to be done for 'dependencies/CMakeFiles/yyjson.dir/build'.
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/clang++-11  -DRAPIDJSON_HAS_STDSTRING -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_COMPETITION_RAPIDJSON -DSIMDJSON_COMPETITION_YYJSON -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/rapidjson/include  -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/clang++-11  -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.6.0.0 ../_deps/google_benchmarks/src/libbenchmark.a ../dependencies/libyyjson.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/16/skylake-x-clang11.json --benchmark_out_format=json
2021-01-24 23:07:57
Running benchmark/bench_ondemand
Run on (4 X 3200 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 1024 KiB (x4)
  L3 Unified 8448 KiB (x1)
Load Average: 1.00, 1.01, 1.00
***WARNING*** CPU scaling is enabled, the benchmark real time measurements may be noisy and will incur extra overhead.
simdjson::dom implementation:      haswell
simdjson::ondemand implementation: fallback

Benchmark                                          Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>                  330638 ns       330627 ns         2102           3.519k           2.02357G               0        31.707k    996.567k              1.57806          3.20431k       3.19331G          2.98281M                    4.72326                     2.99308           320.431k    3.62527k   631.515k       1.77888G/s   0.299239   31.7513k   1003.35k         1.58879   3.02456k/s 3.03468G/s     2.98281M               4.72326                2.97286        100       302.456k/s [BEST: throughput=  2.02 GB/s doc_throughput=  3204 docs/s instructions=     2982809 cycles=      996567 branch_miss=    3519 cache_miss=       0 cache_ref=     31707 items=       100 avg_time=    314533 ns]
partial_tweets<simdjson_ondemand>            1454888 ns      1454875 ns          481           33.35k           442.573M               1          7.82k    4.55574M              7.21399           700.811       3.19272G          10.9856M                    17.3956                     2.41136           70.0811k    34.3904k   631.515k        413.96M/s    1.25156   8.09228k   4.59422M         7.27492    687.344/s 3.15781G/s     10.9856M               17.3956                2.39117        100       68.7344k/s [BEST: throughput=  0.44 GB/s doc_throughput=   700 docs/s instructions=    10985555 cycles=     4555743 branch_miss=   33350 cache_miss=       1 cache_ref=      7820 items=       100 avg_time=   1440002 ns]
partial_tweets<yyjson>                        822014 ns       822007 ns          851           9.804k           1.20392G             330        24.367k    1.47205M              2.33098          1.90641k       2.80633G          2.91927M                    4.62264                     1.98313           190.641k    7.78979k   631.515k        732.67M/s    597.081   23.7574k   1.59842M         2.53109   1.21653k/s 1.94454G/s      2.9197M               4.62332                1.82661        100       121.653k/s [BEST: throughput=  1.20 GB/s doc_throughput=  1906 docs/s instructions=     2919266 cycles=     1472050 branch_miss=    9804 cache_miss=     330 cache_ref=     24367 items=       100 avg_time=    803743 ns]
partial_tweets<rapidjson>                    2867862 ns      2867838 ns          244           28.51k           243.934M          9.302k         23.03k    8.26533M              13.0881           386.268       3.19263G          21.8949M                    34.6705                     2.64901           38.6268k    29.3651k   631.515k       210.005M/s    458.098    10.798k   8.41422M         13.3239    348.695/s   2.934G/s     21.8957M               34.6716                2.60222        100       34.8695k/s [BEST: throughput=  0.24 GB/s doc_throughput=   386 docs/s instructions=    21894936 cycles=     8265329 branch_miss=   28510 cache_miss=    9302 cache_ref=     23030 items=       100 avg_time=   2851106 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>                 100971705 ns    100968632 ns            7         954.207k           456.727M        6.77739M       6.89699M    321.127M              6.98121           9.92911        3.1885G          1038.74M                    22.5819                     3.23467           9.92911M    963.526k   45.9988M        434.47M/s   6.79191M   6.89683M    321.84M         6.99671    9.90407/s 3.18753G/s     1038.74M               22.5819                 3.2275      1000k       9.90407M/s [BEST: throughput=  0.46 GB/s doc_throughput=     9 docs/s instructions=  1038738117 cycles=   321126901 branch_miss=  954207 cache_miss= 6777392 cache_ref=   6896995 items=   1000000 avg_time= 100942042 ns]
large_random<simdjson_ondemand>            121208627 ns    121204806 ns            6          1.2775M           380.425M        3.50596M       3.57344M    385.593M              8.38269           8.27033       3.18898G          1.21898G                    26.5002                      3.1613           8.27033M    1.27816M   45.9988M       361.932M/s   3.50405M   3.57342M   386.422M          8.4007     8.2505/s 3.18817G/s     1.21898G               26.5002                3.15452      1000k        8.2505M/s [BEST: throughput=  0.38 GB/s doc_throughput=     8 docs/s instructions=  1218976309 cycles=   385593284 branch_miss= 1277499 cache_miss= 3505957 cache_ref=   3573442 items=   1000000 avg_time= 121179108 ns]
large_random<simdjson_ondemand_unordered>  120905801 ns    120899621 ns            6         1.27038M           381.841M         3.4632M       3.57387M    384.164M              8.35162           8.30112       3.18899G          1.22398G                    26.6089                     3.18607           8.30112M    1.27136M   45.9988M       362.845M/s   3.50216M   3.57404M   385.441M         8.37937    8.27132/s 3.18811G/s     1.22398G               26.6089                3.17552      1000k       8.27132M/s [BEST: throughput=  0.38 GB/s doc_throughput=     8 docs/s instructions=  1223976308 cycles=   384164357 branch_miss= 1270384 cache_miss= 3463204 cache_ref=   3573866 items=   1000000 avg_time= 120876902 ns]
large_random<yyjson>                       155209726 ns    155204808 ns            5         688.185k           296.531M        4.19989M        4.3556M    354.302M              7.70243            6.4465       2.28401G          855.681M                    18.6023                     2.41512            6.4465M    691.053k   45.9988M       282.645M/s   4.19998M   4.35817M   354.562M         7.70807     6.4431/s 2.28448G/s     855.681M               18.6023                2.41335      1000k        6.4431M/s [BEST: throughput=  0.30 GB/s doc_throughput=     6 docs/s instructions=   855681066 cycles=   354302370 branch_miss=  688185 cache_miss= 4199892 cache_ref=   4355603 items=   1000000 avg_time= 155175470 ns]
large_random<rapidjson>                    251509087 ns    251495744 ns            3         675.841k           189.179M        4.35795M          4.92M    707.064M              15.3714            4.1127       2.90794G          2.01413G                    43.7865                     2.84858            4.1127M    711.133k   45.9988M       174.428M/s   4.10884M   4.72577M   711.742M         15.4731    3.97621/s 2.83004G/s     2.01413G               43.7867                2.82986      1000k       3.97621M/s [BEST: throughput=  0.19 GB/s doc_throughput=     4 docs/s instructions=  2014125113 cycles=   707063627 branch_miss=  675841 cache_miss= 4357947 cache_ref=   4920005 items=   1000000 avg_time= 251472918 ns]
large_random<rapidjson_lossless>           289280322 ns    289267516 ns            2         590.538k           162.657M         4.3582M       4.92108M    833.637M               18.123           3.53612       2.94784G          2.47909G                    53.8947                     2.97383           3.53612M    591.048k   45.9988M       151.651M/s    4.1611M   4.77498M   837.779M         18.2131    3.45701/s 2.89621G/s      2.4791G               53.8949                2.95913      1000k       3.45701M/s [BEST: throughput=  0.16 GB/s doc_throughput=     3 docs/s instructions=  2479092242 cycles=   833636948 branch_miss=  590538 cache_miss= 4358197 cache_ref=   4921079 items=   1000000 avg_time= 289240214 ns]
large_random<rapidjson_insitu>             295146964 ns    295144255 ns            2          618.38k           158.956M        5.79177M       6.35904M    810.532M              17.6207           3.45566       2.80092G          1.74225G                    37.8759                     2.14951           3.45566M    653.654k   45.9988M       148.632M/s   5.59157M   6.20944M   812.556M         17.6647    3.38817/s 2.75308G/s     1.74225G               37.8761                2.14416      1000k       3.38817M/s [BEST: throughput=  0.16 GB/s doc_throughput=     3 docs/s instructions=  1742245853 cycles=   810532131 branch_miss=  618380 cache_miss= 5791765 cache_ref=   6359037 items=   1000000 avg_time= 295106220 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>                       107404555 ns    107403529 ns            6         1018.54k           1.28093G        10.1411M       10.3183M     341.76M              2.48906           9.32905        3.1883G          984.675M                    7.17144                     2.88119           4.89111M    1018.56k   137.305M       1.19061G/s   10.1995M   10.3178M   342.353M         2.49338    9.31068/s 3.18754G/s     984.675M               7.17144                 2.8762   524.288k       4.88148M/s [BEST: throughput=  1.28 GB/s doc_throughput=     9 docs/s instructions=   984674902 cycles=   341760051 branch_miss= 1018544 cache_miss=10141084 cache_ref=  10318299 items=    524288 avg_time= 107373418 ns]
kostya<simdjson_ondemand>                  223187618 ns    223185485 ns            3         685.583k           616.443M        6.41919M       6.47289M    710.457M               5.1743           4.48959       3.18966G          2.21249G                    16.1137                     3.11418           2.35384M    716.118k   137.305M       586.706M/s   6.41899M   6.47289M   711.752M         5.18373    4.48058/s 3.18906G/s     2.21249G               16.1137                3.10851   524.288k       2.34911M/s [BEST: throughput=  0.62 GB/s doc_throughput=     4 docs/s instructions=  2212492376 cycles=   710456707 branch_miss=  685583 cache_miss= 6419194 cache_ref=   6472889 items=    524288 avg_time= 223153979 ns]
kostya<yyjson>                             230998577 ns    230990518 ns            3         416.578k           594.616M        8.49603M       9.94074M    503.361M                3.666           4.33062       2.17987G          974.185M                    7.09504                     1.93536           2.27049M    417.508k   137.305M       566.881M/s    8.4973M    9.9615M   503.723M         3.66864    4.32918/s 2.18071G/s     974.185M               7.09504                1.93397   524.288k       2.26974M/s [BEST: throughput=  0.59 GB/s doc_throughput=     4 docs/s instructions=   974184703 cycles=   503360729 branch_miss=  416578 cache_miss= 8496029 cache_ref=   9940741 items=    524288 avg_time= 230961146 ns]
kostya<rapidjson>                          324663152 ns    324641830 ns            2         997.996k           426.951M        5.23956M       5.83716M    927.031M              6.75162           3.10951       2.88261G          2.73711G                    19.9346                     2.95256           1.63028M    985.264k   137.305M        403.35M/s   5.11429M   5.74267M   928.166M         6.75988    3.08032/s 2.85905G/s     2.73711G               19.9346                2.94895   524.288k       1.61497M/s [BEST: throughput=  0.43 GB/s doc_throughput=     3 docs/s instructions=  2737113318 cycles=   927030907 branch_miss=  997996 cache_miss= 5239556 cache_ref=   5837163 items=    524288 avg_time= 324621690 ns]
kostya<rapidjson_lossless>                 356879470 ns    356864971 ns            2         990.238k           388.481M        5.24203M       5.82963M    1029.61M              7.49874           2.82933       2.91312G          3.00606G                    21.8933                      2.9196           1.48338M    991.412k   137.305M       366.929M/s   5.11684M    5.7215M   1031.96M         7.51584    2.80218/s 2.89175G/s     3.00607G               21.8933                2.91296   524.288k       1.46915M/s [BEST: throughput=  0.39 GB/s doc_throughput=     2 docs/s instructions=  3006063786 cycles=  1029613991 branch_miss=  990238 cache_miss= 5242033 cache_ref=   5829628 items=    524288 avg_time= 356838642 ns]
kostya<rapidjson_insitu>                   392950004 ns    392946274 ns            2         1003.39k           352.354M        9.50974M       10.1343M    1013.98M              7.38486           2.56621       2.60208G          2.23815G                    16.3006                     2.20729           1.34543M    1017.05k   137.305M       333.237M/s    9.3858M    10.028M   1015.86M         7.39854    2.54488/s 2.58523G/s     2.23815G               16.3006                2.20321   524.288k       1.33425M/s [BEST: throughput=  0.35 GB/s doc_throughput=     2 docs/s instructions=  2238147691 cycles=  1013978141 branch_miss= 1003395 cache_miss= 9509737 cache_ref=  10134269 items=    524288 avg_time= 392905385 ns]
distinct_user_id<simdjson_dom>                330984 ns       330981 ns         2116           3.723k            2.0599G               2        31.276k    979.138k              1.55046          3.26184k        3.1938G          2.91783M                    4.62037                        2.98           375.112k    3.84351k   631.515k       1.77697G/s   0.156427   31.4843k   985.386k         1.56035   3.02132k/s 2.97717G/s     2.91783M               4.62037                 2.9611        115       347.452k/s [BEST: throughput=  2.06 GB/s doc_throughput=  3261 docs/s instructions=     2917831 cycles=      979138 branch_miss=    3723 cache_miss=       2 cache_ref=     31276 items=       115 avg_time=    308850 ns]
distinct_user_id<simdjson_ondemand>          1417307 ns      1417294 ns          494           32.43k           455.561M               0          6.07k    4.42582M              7.00825           721.378       3.19269G          10.6053M                    16.7934                     2.39624           82.9585k    33.4305k   631.515k       424.936M/s  0.0809717   6.16171k   4.46182M         7.06526     705.57/s 3.14812G/s     10.6053M               16.7934                 2.3769        115       81.1405k/s [BEST: throughput=  0.46 GB/s doc_throughput=   721 docs/s instructions=    10605305 cycles=     4425818 branch_miss=   32430 cache_miss=       0 cache_ref=      6070 items=       115 avg_time=   1398518 ns]
distinct_user_id<yyjson>                      825530 ns       825504 ns          929          10.165k           1.20443G             248        23.665k    1.47256M              2.33179          1.90721k       2.80849G          2.87814M                    4.55752                     1.95451            219.33k    7.83573k   631.515k       729.566M/s    431.848   23.8499k   1.58833M         2.51511   1.21138k/s 1.92407G/s     2.87849M               4.55807                1.81228        115       139.309k/s [BEST: throughput=  1.20 GB/s doc_throughput=  1907 docs/s instructions=     2878145 cycles=     1472563 branch_miss=   10165 cache_miss=     248 cache_ref=     23665 items=       115 avg_time=    799521 ns]
distinct_user_id<rapidjson>                  2833689 ns      2833665 ns          246          28.314k           245.527M          8.676k        22.994k    8.21174M              13.0032           388.791       3.19265G          21.8227M                     34.556                      2.6575            44.711k    29.1077k   631.515k       212.537M/s   1.81559k   12.9578k   8.36139M         13.2402      352.9/s 2.95074G/s     21.8233M                34.557                   2.61        115       40.5835k/s [BEST: throughput=  0.25 GB/s doc_throughput=   388 docs/s instructions=    21822661 cycles=     8211740 branch_miss=   28314 cache_miss=    8676 cache_ref=     22994 items=       115 avg_time=   2811346 ns]
distinct_user_id<rapidjson_insitu>           1867984 ns      1867925 ns          370          26.043k           381.962M          7.007k        23.786k    5.27864M              8.35869           604.835        3.1927G          13.2897M                    21.0441                     2.51763            69.556k     36.819k   631.515k       322.422M/s   1.97196k   20.9431k   5.57879M         8.83397    535.353/s 2.98662G/s       13.29M               21.0446                2.38223        115       61.5656k/s [BEST: throughput=  0.38 GB/s doc_throughput=   604 docs/s instructions=    13289667 cycles=     5278637 branch_miss=   26043 cache_miss=    7007 cache_ref=     23786 items=       115 avg_time=   1844292 ns]
find_tweet<simdjson_dom>                      313336 ns       313327 ns         2236           3.409k           2.17607G               0         26.67k    926.779k              1.46755          3.44579k       3.19349G          2.83251M                    4.48526                      3.0563           3.44579k    3.49647k   631.515k       1.87709G/s   0.117174   26.7831k   932.692k         1.47691   3.19156k/s 2.97674G/s     2.83251M               4.48526                3.03692          1       3.19156k/s [BEST: throughput=  2.18 GB/s doc_throughput=  3445 docs/s instructions=     2832511 cycles=      926779 branch_miss=    3409 cache_miss=       0 cache_ref=     26670 items=         1 avg_time=    292361 ns]
find_tweet<simdjson_ondemand>                1362243 ns      1362209 ns          514          31.629k           474.193M               0         3.251k    4.25187M               6.7328           750.881       3.19265G          10.0995M                    15.9925                     2.37531            750.881    32.6944k   631.515k        442.12M/s  0.0856031   3.41056k   4.28827M         6.79045    734.102/s 3.14803G/s     10.0995M               15.9925                2.35515          1        734.102/s [BEST: throughput=  0.47 GB/s doc_throughput=   750 docs/s instructions=    10099505 cycles=     4251866 branch_miss=   31629 cache_miss=       0 cache_ref=      3251 items=         1 avg_time=   1344104 ns]
find_tweet<yyjson>                            803842 ns       803801 ns          875           9.612k            1.2251G             180         20.79k    1.40253M              2.22089          1.93994k       2.72082G          2.81731M                    4.46119                     2.00874           1.93994k    7.54343k   631.515k       749.265M/s    322.455   20.2304k   1.53081M         2.42403   1.24409k/s 1.90447G/s     2.81773M               4.46186                1.84068          1       1.24409k/s [BEST: throughput=  1.23 GB/s doc_throughput=  1939 docs/s instructions=     2817310 cycles=     1402526 branch_miss=    9612 cache_miss=     180 cache_ref=     20790 items=         1 avg_time=    781030 ns]
find_tweet<rapidjson>                        2823237 ns      2823157 ns          247          28.077k           246.237M         11.881k        21.731k    8.18806M              12.9657           389.915       3.19265G          21.7381M                    34.4221                     2.65485            389.915    29.0207k   631.515k       213.328M/s    1.5747k      8.65k   8.33304M         13.1953    354.213/s 2.95168G/s     21.7389M               34.4235                2.60876          1        354.213/s [BEST: throughput=  0.25 GB/s doc_throughput=   389 docs/s instructions=    21738084 cycles=     8188063 branch_miss=   28077 cache_miss=   11881 cache_ref=     21731 items=         1 avg_time=   2802435 ns]
find_tweet<rapidjson_insitu>                 1846369 ns      1846310 ns          375           26.57k           385.411M          6.735k        22.845k    5.23155M              8.28412           610.295       3.19279G          13.2122M                    20.9215                     2.52549            610.295    36.9991k   631.515k       326.196M/s   1.79087k     17.09k   5.51255M         8.72909    541.621/s 2.98571G/s     13.2113M                 20.92                2.39658          1        541.621/s [BEST: throughput=  0.39 GB/s doc_throughput=   610 docs/s instructions=    13212227 cycles=     5231547 branch_miss=   26570 cache_miss=    6735 cache_ref=     22845 items=         1 avg_time=   1823728 ns]
