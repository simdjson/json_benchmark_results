run_benchmark: v0.8.0~37 /home/jkeiser/simdjson_benchmark_results/v0.7.0/1/ampere-gcc10.2.json -DCMAKE_BUILD_TYPE=Release
git reset --hard v0.8.0~37
HEAD is now at 5f7b2bac fuzz on power (#1326)
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- git Version: v0.2.1-5f7b2bac
-- Version: 0.2.1
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 10
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
make[3]: Nothing to be done for '_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build'.
[ 80%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
make[3]: Nothing to be done for 'jsonexamples/generated/CMakeFiles/generated-data.dir/build'.
[ 80%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/g++-10  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/src  -O3 -DNDEBUG -fPIC   -pthread -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/g++-10 -fPIC -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.6 -o ../libsimdjson.so.6.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.6.0.0 ../libsimdjson.so.6 ../libsimdjson.so
[ 90%] Built target simdjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/g++-10  -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/g++-10  -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.6.0.0 ../_deps/google_benchmarks/src/libbenchmark.a -pthread /usr/lib/aarch64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/1/ampere-gcc10.2.json --benchmark_out_format=json
2021-01-24 23:35:48
Running benchmark/bench_ondemand
Run on (32 X 3300 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x32)
  L1 Instruction 32 KiB (x32)
  L2 Unified 256 KiB (x16)
Load Average: 1.01, 1.00, 0.93
On Demand implementation: fallback
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Benchmark                         Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
PartialTweets<OnDemand>     1872262 ns      1872282 ns          374          71.357k           342.412M         22.752k       1035.91k    5.90272M              9.34691           542.208        3.2005G          8.81739M                    13.9623                     1.49379           54.2208k    71.8462k   631.515k       321.671M/s   22.7574k   1036.42k   5.91392M         9.36465    534.108/s 3.15867G/s      8.8174M               13.9623                1.49096        100       53.4108k/s [best: throughput=  0.34 GB/s doc_throughput=   542 docs/s instructions=     8817394 cycles=     5902716 branch_miss=   71357 cache_miss=   22752 cache_ref=   1035912 items=       100 avg_time=   1849693 ns]
PartialTweets<Iter>         2276653 ns      2276644 ns          307          73.108k           280.982M         22.758k       1.89197M     7.1932M              11.3904           444.933       3.20049G          11.1549M                    17.6637                     1.55075           44.4933k     73.367k   631.515k       264.538M/s    22.767k   1.89207M     7.203M         11.4059    439.243/s 3.16387G/s     11.1549M               17.6637                1.54864        100       43.9243k/s [best: throughput=  0.28 GB/s doc_throughput=   444 docs/s instructions=    11154881 cycles=     7193203 branch_miss=   73108 cache_miss=   22758 cache_ref=   1891972 items=       100 avg_time=   2253097 ns]
PartialTweets<Dom>          2565598 ns      2565587 ns          272         103.396k           249.095M         25.917k       1.99947M    8.11373M               12.848            394.44       3.20038G          12.5116M                     19.812                     1.54203            39.444k    103.769k   631.515k       234.745M/s   25.9244k   1.99941M    8.1236M         12.8637    389.774/s 3.16637G/s     12.5116M               19.8121                1.54016        100       38.9774k/s [best: throughput=  0.25 GB/s doc_throughput=   394 docs/s instructions=    12511606 cycles=     8113733 branch_miss=  103396 cache_miss=   25917 cache_ref=   1999474 items=       100 avg_time=   2540983 ns]
Creating a source file spanning 44921 KB 
LargeRandom<Dom>          342409661 ns    342396957 ns            2         6.01891M           134.436M        3.98203M        265.41M    1093.73M              23.7773            2.9226       3.19653G          1.55849G                    33.8811                     1.42493            2.9226M    5.92102M   45.9988M        128.12M/s   3.98198M   265.314M   1094.44M         23.7928    2.92059/s 3.19641G/s     1.55849G               33.8811                  1.424      1000k       2.92059M/s [best: throughput=  0.13 GB/s doc_throughput=     2 docs/s instructions=  1558488679 cycles=  1093728222 branch_miss= 6018908 cache_miss= 3982026 cache_ref= 265409752 items=   1000000 avg_time= 342351517 ns]
LargeRandomSum<Dom>       336796359 ns    336790479 ns            2         3.59418M           137.079M        3.98219M       260.052M    1072.87M              23.3239           2.98005        3.1972G          1.56549G                    34.0333                     1.45916           2.98005M     3.8398M   45.9988M       130.253M/s   3.98219M   260.292M   1076.56M         23.4041    2.96921/s 3.19653G/s     1.56549G               34.0333                1.45416      1000k       2.96921M/s [best: throughput=  0.14 GB/s doc_throughput=     2 docs/s instructions=  1565488693 cycles=  1072870439 branch_miss= 3594178 cache_miss= 3982193 cache_ref= 260052336 items=   1000000 avg_time= 336740103 ns]
LargeRandom<OnDemand>     256239548 ns    256236594 ns            3         3.47607M           182.096M        2.31936M       176.834M    807.529M              17.5555           3.95872       3.19678G          1.17298G                    25.5001                     1.45255           3.95872M    4.34644M   45.9988M       171.201M/s   2.31938M   177.677M   819.038M         17.8056    3.90264/s 3.19641G/s     1.17298G               25.5001                1.43214      1000k       3.90264M/s [best: throughput=  0.18 GB/s doc_throughput=     3 docs/s instructions=  1172975058 cycles=   807529341 branch_miss= 3476065 cache_miss= 2319356 cache_ref= 176834038 items=   1000000 avg_time= 256186222 ns]
LargeRandomSum<OnDemand>  245781172 ns    245777209 ns            3         4.06196M           187.813M        2.31866M       172.491M    783.129M               17.025             4.083       3.19752G          1.16898G                    25.4132                      1.4927             4.083M    3.99893M   45.9988M       178.486M/s   2.31868M    172.43M   785.674M         17.0803    4.06873/s 3.19669G/s     1.16898G               25.4132                1.48786      1000k       4.06873M/s [best: throughput=  0.19 GB/s doc_throughput=     4 docs/s instructions=  1168975059 cycles=   783128569 branch_miss= 4061955 cache_miss= 2318664 cache_ref= 172490757 items=   1000000 avg_time= 245727572 ns]
LargeRandom<Iter>         242825184 ns    242827342 ns            3         3.13769M           193.728M        2.31931M         147.6M    759.067M              16.5019           4.21159       3.19688G          1.11198G                     24.174                     1.46492           4.21159M    4.26664M   45.9988M       180.654M/s   2.31932M   148.508M   776.104M         16.8723    4.11815/s 3.19612G/s     1.11198G                24.174                1.43276      1000k       4.11815M/s [best: throughput=  0.19 GB/s doc_throughput=     4 docs/s instructions=  1111975031 cycles=   759067493 branch_miss= 3137694 cache_miss= 2319314 cache_ref= 147600265 items=   1000000 avg_time= 242774547 ns]
LargeRandomSum<Iter>      264511785 ns    264514497 ns            3         3.01427M           174.488M        2.31703M       154.577M    842.784M              18.3219           3.79333       3.19695G          1.12497G                    24.4566                     1.33483           3.79333M    3.33038M   45.9988M       165.843M/s   2.31702M   154.882M    845.54M         18.3818    3.78051/s 3.19657G/s     1.12497G               24.4566                1.33048      1000k       3.78051M/s [best: throughput=  0.17 GB/s doc_throughput=     3 docs/s instructions=  1124974979 cycles=   842783685 branch_miss= 3014269 cache_miss= 2317031 cache_ref= 154576664 items=   1000000 avg_time= 264460334 ns]
Creating a source file spanning 134087 KB 
Kostya<Dom>               565221035 ns    565227069 ns            1         9.45662M           242.954M        6.94779M       354.098M    1.80701G              13.1606           1.76945       3.19742G          2.69342G                    19.6163                     1.49054             927.7k    9.45662M   137.305M       231.667M/s   6.94779M   354.098M   1.80701G         13.1606     1.7692/s 3.19697G/s     2.69342G               19.6163                1.49054   524.288k       927.571k/s [best: throughput=  0.24 GB/s doc_throughput=     1 docs/s instructions=  2693419642 cycles=  1807014505 branch_miss= 9456621 cache_miss= 6947789 cache_ref= 354098170 items=    524288 avg_time= 565148392 ns]
KostyaSum<Dom>            565779495 ns    565766003 ns            1         9.56908M           242.713M        6.93937M       353.246M    1.80861G              13.1722           1.76769       3.19706G          2.69657G                    19.6392                     1.49096           926.779k    9.56908M   137.305M       231.446M/s   6.93937M   353.246M   1.80861G         13.1722    1.76752/s 3.19674G/s     2.69657G               19.6392                1.49096   524.288k       926.687k/s [best: throughput=  0.24 GB/s doc_throughput=     1 docs/s instructions=  2696565379 cycles=  1808605730 branch_miss= 9569085 cache_miss= 6939371 cache_ref= 353245573 items=    524288 avg_time= 565709651 ns]
Kostya<OnDemand>          482093661 ns    482085535 ns            2         9.69404M           284.918M        5.28653M       253.197M     1.5408G              11.2217           2.07508       3.19727G          2.30098G                    16.7582                     1.49337           1087.94k    9.70435M   137.305M        271.62M/s   5.28651M   253.218M   1.54108G         11.2238    2.07432/s 3.19669G/s     2.30098G               16.7582                 1.4931   524.288k       1087.54k/s [best: throughput=  0.28 GB/s doc_throughput=     2 docs/s instructions=  2300982094 cycles=  1540798350 branch_miss= 9694039 cache_miss= 5286531 cache_ref= 253196634 items=    524288 avg_time= 482034083 ns]
KostyaSum<OnDemand>       478785155 ns    478772369 ns            2         9.36253M           286.814M        5.28619M       250.048M    1.53062G              11.1476           2.08888       3.19729G          2.29993G                    16.7505                     1.50261           1095.18k    9.36063M   137.305M         273.5M/s   5.28625M   250.042M   1.53058G         11.1473    2.08868/s 3.19688G/s     2.29993G               16.7505                1.50266   524.288k       1095.07k/s [best: throughput=  0.29 GB/s doc_throughput=     2 docs/s instructions=  2299933510 cycles=  1530623927 branch_miss= 9362534 cache_miss= 5286189 cache_ref= 250048277 items=    524288 avg_time= 478726988 ns]
Kostya<Iter>              479154872 ns    479151757 ns            2         9.31843M           286.634M        5.28642M       231.759M    1.53169G              11.1554           2.08757       3.19751G          2.27739G                    16.5864                     1.48685           1094.49k    9.32349M   137.305M       273.283M/s   5.28644M   231.769M    1.5318G         11.1562    2.08702/s  3.1969G/s     2.27739G               16.5864                1.48674   524.288k        1094.2k/s [best: throughput=  0.29 GB/s doc_throughput=     2 docs/s instructions=  2277388797 cycles=  1531691577 branch_miss= 9318433 cache_miss= 5286418 cache_ref= 231758698 items=    524288 avg_time= 479095828 ns]
KostyaSum<Iter>           631735312 ns    631741714 ns            1         9.55188M            217.37M        5.29369M       563.561M    2.01969G              14.7095           1.58312       3.19741G           3.0612G                    22.2949                     1.51567           830.008k    9.55188M   137.305M       207.275M/s   5.29369M   563.561M   2.01969G         14.7095    1.58293/s 3.19703G/s      3.0612G               22.2949                1.51567   524.288k       829.909k/s [best: throughput=  0.22 GB/s doc_throughput=     1 docs/s instructions=  3061199744 cycles=  2019694448 branch_miss= 9551884 cache_miss= 5293691 cache_ref= 563561146 items=    524288 avg_time= 631666002 ns]
DistinctUserID<Dom>         2632643 ns      2632674 ns          266         107.545k            243.23M         33.874k       2.10378M    8.30945M               13.158           385.153       3.20041G          12.8378M                    20.3286                     1.54496           44.2926k    108.107k   631.515k       228.764M/s   33.8605k    2.1044M   8.32492M         13.1825    379.842/s 3.16215G/s     12.8378M               20.3286                1.54209        115       43.6818k/s [best: throughput=  0.24 GB/s doc_throughput=   385 docs/s instructions=    12837801 cycles=     8309452 branch_miss=  107545 cache_miss=   33874 cache_ref=   2103779 items=       115 avg_time=   2603893 ns]
On Demand implementation: fallback
DistinctUserID<OnDemand>    1836281 ns      1836300 ns          381          70.255k           350.482M         22.399k       960.481k    5.76691M              9.13186           554.986       3.20055G          8.48252M                     13.432                      1.4709           63.8234k    70.7434k   631.515k       327.975M/s   22.3963k   960.916k   5.77742M         9.14851    544.573/s 3.14623G/s     8.48252M                13.432                1.46822        115       62.6259k/s [best: throughput=  0.35 GB/s doc_throughput=   554 docs/s instructions=     8482521 cycles=     5766907 branch_miss=   70255 cache_miss=   22399 cache_ref=    960481 items=       115 avg_time=   1807059 ns]
