run_benchmark: v0.8.0~37 /home/jkeiser/simdjson_benchmark_results/v0.7.0/1/skylake-x-gcc10.2.json -DCMAKE_BUILD_TYPE=Release
git reset --hard v0.8.0~37
HEAD is now at 5f7b2bac fuzz on power (#1326)
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- git Version: v0.2.1-5f7b2bac
-- Version: 0.2.1
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 10
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
make[3]: Nothing to be done for '_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build'.
[ 80%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
make[3]: Nothing to be done for 'jsonexamples/generated/CMakeFiles/generated-data.dir/build'.
[ 80%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/g++-10  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/src  -O3 -DNDEBUG -fPIC   -pthread -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/g++-10 -fPIC -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.6 -o ../libsimdjson.so.6.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.6.0.0 ../libsimdjson.so.6 ../libsimdjson.so
[ 90%] Built target simdjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/g++-10  -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/g++-10  -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.6.0.0 ../_deps/google_benchmarks/src/libbenchmark.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/1/skylake-x-gcc10.2.json --benchmark_out_format=json
2021-01-24 23:56:40
Running benchmark/bench_ondemand
Run on (4 X 3200 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 1024 KiB (x4)
  L3 Unified 8448 KiB (x1)
Load Average: 1.00, 1.00, 1.00
***WARNING*** CPU scaling is enabled, the benchmark real time measurements may be noisy and will incur extra overhead.
On Demand implementation: fallback
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Benchmark                         Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
PartialTweets<OnDemand>     1309707 ns      1309679 ns          535          32.471k           493.329M               2         5.942k    4.08711M              6.47191           781.184       3.19279G           10.657M                    16.8754                     2.60748           78.1184k     33.046k   631.515k       459.853M/s   0.727103   5.90091k   4.13137M           6.542    763.546/s 3.15449G/s      10.657M               16.8754                2.57954        100       76.3546k/s [best: throughput=  0.49 GB/s doc_throughput=   781 docs/s instructions=    10657041 cycles=     4087111 branch_miss=   32471 cache_miss=       2 cache_ref=      5942 items=       100 avg_time=   1294849 ns]
PartialTweets<Iter>         1571231 ns      1571217 ns          445          33.805k           409.364M               1         7.164k    4.92537M               7.7993           648.226       3.19275G          12.9418M                    20.4932                     2.62757           64.8226k    34.2332k   631.515k       383.308M/s   0.997753   7.40134k   4.96427M         7.86089    636.449/s 3.15951G/s     12.9418M               20.4932                2.60698        100       63.6449k/s [best: throughput=  0.41 GB/s doc_throughput=   648 docs/s instructions=    12941772 cycles=     4925373 branch_miss=   33805 cache_miss=       1 cache_ref=      7164 items=       100 avg_time=   1556070 ns]
PartialTweets<Dom>           322955 ns       322949 ns         2174           3.958k           2.08023G               0        30.939k    969.506k              1.53521          3.29402k       3.19358G           2.9625M                    4.69111                     3.05568           329.402k    4.14392k   631.515k       1.82117G/s   0.024379   30.8302k   976.112k         1.54567   3.09647k/s  3.0225G/s      2.9625M               4.69111                  3.035        100       309.647k/s [best: throughput=  2.08 GB/s doc_throughput=  3294 docs/s instructions=     2962504 cycles=      969506 branch_miss=    3958 cache_miss=       0 cache_ref=     30939 items=       100 avg_time=    305943 ns]
Creating a source file spanning 44921 KB 
LargeRandom<Dom>           99320484 ns     99311467 ns            7         923.644k           463.753M        6.79097M       6.89662M    316.147M              6.87293           10.0819       3.18734G          974.113M                    21.1769                     3.08121           10.0819M    933.122k   45.9988M        441.72M/s   6.80225M   6.89682M   316.553M         6.88177    10.0693/s 3.18748G/s     974.113M               21.1769                3.07725      1000k       10.0693M/s [best: throughput=  0.46 GB/s doc_throughput=    10 docs/s instructions=   974112703 cycles=   316146590 branch_miss=  923644 cache_miss= 6790973 cache_ref=   6896616 items=   1000000 avg_time=  99291890 ns]
LargeRandomSum<Dom>        98926580 ns     98923390 ns            7         924.978k           466.086M        6.39877M       6.51997M    314.632M                 6.84           10.1326       3.18803G          979.113M                    21.2856                     3.11193           10.1326M    931.582k   45.9988M       443.453M/s   6.43563M   6.52018M   315.336M         6.85532    10.1088/s 3.18768G/s     979.113M               21.2856                3.10498      1000k       10.1088M/s [best: throughput=  0.47 GB/s doc_throughput=    10 docs/s instructions=   979112712 cycles=   314631738 branch_miss=  924978 cache_miss= 6398774 cache_ref=   6519971 items=   1000000 avg_time=  98897235 ns]
LargeRandom<OnDemand>     148697283 ns    148695871 ns            5         2.36353M           309.981M        3.52142M       3.57299M    473.329M                10.29           6.73889       3.18971G          1.26997G                    27.6089                     2.68307           6.73889M    2.37228M   45.9988M       295.017M/s   3.52294M   3.57296M   474.193M         10.3088    6.72514/s 3.18901G/s     1.26997G               27.6089                2.67818      1000k       6.72514M/s [best: throughput=  0.31 GB/s doc_throughput=     6 docs/s instructions=  1269973990 cycles=   473328700 branch_miss= 2363534 cache_miss= 3521423 cache_ref=   3572987 items=   1000000 avg_time= 148668690 ns]
LargeRandomSum<OnDemand>  150671057 ns    150665033 ns            5         2.39282M           305.571M        3.18057M       3.19709M    480.066M              10.4365           6.64302       3.18909G          1.26397G                    27.4784                     2.63292           6.64302M    2.38918M   45.9988M       291.161M/s   3.14873M   3.19713M   480.459M          10.445    6.63724/s 3.18892G/s     1.26397G               27.4784                2.63076      1000k       6.63724M/s [best: throughput=  0.31 GB/s doc_throughput=     6 docs/s instructions=  1263974274 cycles=   480066391 branch_miss= 2392817 cache_miss= 3180573 cache_ref=   3197089 items=   1000000 avg_time= 150641801 ns]
LargeRandom<Iter>         141417261 ns    141413445 ns            5         2.39571M           325.544M        3.51672M       3.57284M    450.704M              9.79817           7.07723       3.18974G          1.20797G                     26.261                      2.6802           7.07723M    2.39283M   45.9988M        310.21M/s    3.5198M   3.57295M   450.927M         9.80302    7.07146/s 3.18871G/s     1.20797G                26.261                2.67887      1000k       7.07146M/s [best: throughput=  0.33 GB/s doc_throughput=     7 docs/s instructions=  1207973683 cycles=   450703652 branch_miss= 2395711 cache_miss= 3516722 cache_ref=   3572842 items=   1000000 avg_time= 141387799 ns]
LargeRandomSum<Iter>      146696295 ns    146683319 ns            5         2.40884M            314.43M        3.15077M       3.19712M    466.634M              10.1445           6.83562       3.18973G          1.22297G                    26.5871                     2.62084           6.83562M     2.4114M   45.9988M       299.065M/s   3.15396M   3.19719M   467.728M         10.1683    6.81741/s 3.18869G/s     1.22297G               26.5871                2.61471      1000k       6.81741M/s [best: throughput=  0.31 GB/s doc_throughput=     6 docs/s instructions=  1222973907 cycles=   466634226 branch_miss= 2408845 cache_miss= 3150773 cache_ref=   3197119 items=   1000000 avg_time= 146665497 ns]
Creating a source file spanning 134087 KB 
Kostya<Dom>                96296572 ns     96293507 ns            7         501.769k           1.42895G        10.2098M       10.3144M    306.385M              2.23142           10.4072        3.1886G          944.977M                    6.88232                     3.08428           5.45634M    501.582k   137.305M       1.32797G/s   10.2204M   10.3144M   306.936M         2.23543    10.3849/s  3.1875G/s     944.977M               6.88232                3.07874   524.288k       5.44469M/s [best: throughput=  1.43 GB/s doc_throughput=    10 docs/s instructions=   944977199 cycles=   306385018 branch_miss=  501769 cache_miss=10209791 cache_ref=  10314387 items=    524288 avg_time=  96266091 ns]
KostyaSum<Dom>             95344415 ns     95334254 ns            7         496.677k           1.44516G        9.93819M       10.1182M    302.952M              2.20642           10.5252       3.18862G          947.599M                    6.90141                     3.12788           5.51821M    496.591k   137.305M       1.34134G/s   9.99848M   10.1181M   303.825M         2.21277    10.4894/s 3.18694G/s     947.599M               6.90141                 3.1189   524.288k       5.49947M/s [best: throughput=  1.45 GB/s doc_throughput=    10 docs/s instructions=   947598653 cycles=   302952165 branch_miss=  496677 cache_miss= 9938191 cache_ref=  10118211 items=    524288 avg_time=  95312274 ns]
Kostya<OnDemand>          341075604 ns    341047730 ns            2         3.33249M           402.703M         6.4328M       6.47183M    1087.52M              7.92044           2.93291       3.18959G          2.86133G                    20.8392                     2.63107           1.53769M    3.33225M   137.305M       383.947M/s   6.44553M   6.47182M   1087.67M         7.92156    2.93214/s  3.1892G/s     2.86133G               20.8392                 2.6307   524.288k       1.53729M/s [best: throughput=  0.40 GB/s doc_throughput=     2 docs/s instructions=  2861328554 cycles=  1087515317 branch_miss= 3332486 cache_miss= 6432798 cache_ref=   6471830 items=    524288 avg_time= 341038617 ns]
KostyaSum<OnDemand>       340512419 ns    340483730 ns            2         3.32466M           403.389M        6.22715M       6.27402M    1085.67M                7.907            2.9379        3.1896G          2.85713G                    20.8087                     2.63168           1.54031M    3.32519M   137.305M       384.583M/s   6.23976M     6.274M   1085.87M         7.90848      2.937/s 3.18921G/s     2.85713G               20.8087                2.63118   524.288k       1.53983M/s [best: throughput=  0.40 GB/s doc_throughput=     2 docs/s instructions=  2857134398 cycles=  1085671093 branch_miss= 3324659 cache_miss= 6227154 cache_ref=   6274018 items=    524288 avg_time= 340474587 ns]
Kostya<Iter>              339856394 ns    339828281 ns            2         3.32461M           404.395M        6.43721M       6.47164M    1083.09M              7.88821           2.94523       3.18995G          2.84822G                    20.7438                     2.62972           1.54415M    3.32565M   137.305M       385.325M/s   6.44893M   6.47173M    1083.8M          7.8934    2.94266/s 3.18927G/s     2.84822G               20.7438                2.62799   524.288k        1.5428M/s [best: throughput=  0.40 GB/s doc_throughput=     2 docs/s instructions=  2848221604 cycles=  1083090124 branch_miss= 3324605 cache_miss= 6437213 cache_ref=   6471635 items=    524288 avg_time= 339818760 ns]
KostyaSum<Iter>           414074862 ns    414058277 ns            2         3.33423M           331.684M        6.22687M       6.27598M    1.32035G               9.6162           2.41567       3.18954G          3.52927G                    25.7039                     2.67298           1.26651M    3.33569M   137.305M       316.246M/s     6.241M   6.27592M   1.32055G         9.61763    2.41512/s 3.18928G/s     3.52927G               25.7039                2.67258   524.288k       1.26622M/s [best: throughput=  0.33 GB/s doc_throughput=     2 docs/s instructions=  3529271368 cycles=  1320352253 branch_miss= 3334233 cache_miss= 6226870 cache_ref=   6275980 items=    524288 avg_time= 414037022 ns]
DistinctUserID<Dom>          359666 ns       359658 ns         1946           4.946k           1.87714G               0        35.929k    1074.28k              1.70112          2.97244k       3.19324G          3.27963M                    5.19328                     3.05286           341.831k    5.17272k   631.515k       1.63529G/s  0.0719424   36.0672k   1084.24k         1.71689   2.78042k/s 3.01465G/s     3.27963M               5.19328                3.02481        115       319.748k/s [best: throughput=  1.88 GB/s doc_throughput=  2972 docs/s instructions=     3279632 cycles=     1074281 branch_miss=    4946 cache_miss=       0 cache_ref=     35929 items=       115 avg_time=    339871 ns]
On Demand implementation: fallback
DistinctUserID<OnDemand>    1284291 ns      1284269 ns          546          32.386k           503.518M               0         3.563k    3.99531M              6.32654           797.318       3.18553G          10.3192M                    16.3405                     2.58284           91.6915k    32.8573k   631.515k       468.951M/s   0.322344   3.29479k   4.03986M          6.3971    778.653/s 3.14565G/s     10.3192M               16.3405                2.55436        115       89.5451k/s [best: throughput=  0.50 GB/s doc_throughput=   797 docs/s instructions=    10319247 cycles=     3995307 branch_miss=   32386 cache_miss=       0 cache_ref=      3563 items=       115 avg_time=   1266285 ns]
