run_benchmark: v0.8.0~37 /home/jkeiser/simdjson_benchmark_results/v0.7.0/1/skylake-x-clang11-native.json -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native
git reset --hard v0.8.0~37
HEAD is now at 5f7b2bac fuzz on power (#1326)
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- git Version: v0.2.1-5f7b2bac
-- Version: 0.2.1
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES -- failed to compile
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 10
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
make[3]: Nothing to be done for '_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build'.
[ 80%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
make[3]: Nothing to be done for 'jsonexamples/generated/CMakeFiles/generated-data.dir/build'.
[ 80%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/clang++-11  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/src  -march=native -O3 -DNDEBUG -fPIC   -pthread -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/clang++-11 -fPIC -march=native -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.6 -o ../libsimdjson.so.6.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.6.0.0 ../libsimdjson.so.6 ../libsimdjson.so
[ 90%] Built target simdjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/clang++-11  -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/clang++-11  -march=native -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.6.0.0 ../_deps/google_benchmarks/src/libbenchmark.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/1/skylake-x-clang11-native.json --benchmark_out_format=json
2021-01-24 23:51:50
Running benchmark/bench_ondemand
Run on (4 X 3200 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 1024 KiB (x4)
  L3 Unified 8448 KiB (x1)
Load Average: 1.00, 1.00, 1.00
***WARNING*** CPU scaling is enabled, the benchmark real time measurements may be noisy and will incur extra overhead.
On Demand implementation: haswell
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Benchmark                         Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
PartialTweets<OnDemand>      200059 ns       200054 ns         3499           2.092k           3.45122G               1         5.808k    584.557k             0.925642          5.46499k        3.1946G          1.85915M                    2.94394                     3.18043           546.499k    2.27169k   631.515k       2.93992G/s     1.4144   5.79319k   592.148k        0.937663   4.99864k/s 2.95994G/s     1.85915M               2.94394                3.13966        100       499.864k/s [best: throughput=  3.45 GB/s doc_throughput=  5464 docs/s instructions=     1859145 cycles=      584557 branch_miss=    2092 cache_miss=       1 cache_ref=      5808 items=       100 avg_time=    185501 ns]
PartialTweets<Iter>          217027 ns       217026 ns         3221            3.03k           3.16744G               0         5.025k    636.785k              1.00835          5.01562k       3.19387G          1.76829M                    2.80008                      2.7769           501.562k    3.30237k   631.515k       2.71002G/s   0.418193    5.1536k   645.667k         1.02241   4.60775k/s 2.97507G/s     1.76829M               2.80008                 2.7387        100       460.775k/s [best: throughput=  3.17 GB/s doc_throughput=  5015 docs/s instructions=     1768291 cycles=      636785 branch_miss=    3030 cache_miss=       0 cache_ref=      5025 items=       100 avg_time=    202284 ns]
PartialTweets<Dom>           337751 ns       337745 ns         2075           3.701k           1.98148G               0        31.751k    1017.83k              1.61173          3.13767k       3.19361G          2.93688M                    4.65054                     2.88544           313.767k    3.85885k   631.515k       1.74139G/s  0.0544578   31.5295k   1024.33k         1.62202   2.96081k/s 3.03285G/s     2.93688M               4.65054                2.86713        100       296.081k/s [best: throughput=  1.98 GB/s doc_throughput=  3137 docs/s instructions=     2936884 cycles=     1017830 branch_miss=    3701 cache_miss=       0 cache_ref=     31751 items=       100 avg_time=    321018 ns]
Creating a source file spanning 44921 KB 
LargeRandom<Dom>          101766508 ns    101757232 ns            7         904.067k           453.673M        6.88286M       6.89562M    323.237M              7.02708           9.86271       3.18799G          1019.45M                    22.1626                     3.15388           9.86271M    902.415k   45.9988M       431.103M/s   6.81969M   6.89549M   324.348M         7.05124    9.82731/s 3.18747G/s     1019.45M               22.1626                3.14308      1000k       9.82731M/s [best: throughput=  0.45 GB/s doc_throughput=     9 docs/s instructions=  1019451749 cycles=   323237062 branch_miss=  904067 cache_miss= 6882856 cache_ref=   6895617 items=   1000000 avg_time= 101738929 ns]
LargeRandomSum<Dom>       101045909 ns    101044958 ns            7         904.591k           456.437M        6.44308M       6.51901M    321.375M               6.9866            9.9228       3.18894G          1012.45M                    22.0104                     3.15037            9.9228M    902.552k   45.9988M       434.142M/s    6.4289M   6.51912M   322.114M         7.00266    9.89658/s 3.18783G/s     1012.45M               22.0104                3.14315      1000k       9.89658M/s [best: throughput=  0.46 GB/s doc_throughput=     9 docs/s instructions=  1012451748 cycles=   321375221 branch_miss=  904591 cache_miss= 6443078 cache_ref=   6519010 items=   1000000 avg_time= 101017623 ns]
LargeRandom<OnDemand>      70712288 ns     70710169 ns           10         954.832k            651.29M        3.47457M       3.57257M    225.222M              4.89625           14.1589       3.18888G          626.908M                    13.6288                     2.78352           14.1589M    955.597k   45.9988M        620.39M/s   3.48962M   3.57258M   225.387M         4.89985    14.1422/s 3.18748G/s     626.908M               13.6288                2.78147      1000k       14.1422M/s [best: throughput=  0.65 GB/s doc_throughput=    14 docs/s instructions=   626907655 cycles=   225221511 branch_miss=  954832 cache_miss= 3474565 cache_ref=   3572566 items=   1000000 avg_time=  70684871 ns]
LargeRandomSum<OnDemand>   72508584 ns     72505472 ns           10         903.243k           635.722M        3.04242M       3.19696M    230.752M              5.01647           13.8204       3.18908G          622.908M                    13.5418                     2.69947           13.8204M    906.216k   45.9988M       605.028M/s   3.09411M   3.19706M   231.009M         5.02208    13.7921/s  3.1861G/s     622.908M               13.5418                2.69646      1000k       13.7921M/s [best: throughput=  0.64 GB/s doc_throughput=    13 docs/s instructions=   622907844 cycles=   230751583 branch_miss=  903243 cache_miss= 3042415 cache_ref=   3196956 items=   1000000 avg_time=  72480384 ns]
LargeRandom<Iter>          67161611 ns     67160978 ns           10         939.143k           685.464M        3.48369M       3.57292M     213.99M              4.65208           14.9018       3.18883G          574.908M                    12.4983                     2.68661           14.9018M    941.396k   45.9988M       653.175M/s   3.50275M   3.57294M   214.072M         4.65386    14.8896/s 3.18744G/s     574.908M               12.4983                2.68558      1000k       14.8896M/s [best: throughput=  0.69 GB/s doc_throughput=    14 docs/s instructions=   574907631 cycles=   213990165 branch_miss=  939143 cache_miss= 3483694 cache_ref=   3572919 items=   1000000 avg_time=  67133573 ns]
LargeRandomSum<Iter>       69915103 ns     69912984 ns           10         974.676k           658.455M        3.07698M       3.19643M    222.779M              4.84315           14.3146         3.189G          559.907M                    12.1722                     2.51328           14.3146M     976.73k   45.9988M       627.464M/s   3.12618M   3.19636M   222.848M         4.84465    14.3035/s 3.18751G/s     559.907M               12.1722                2.51251      1000k       14.3035M/s [best: throughput=  0.66 GB/s doc_throughput=    14 docs/s instructions=   559907376 cycles=   222779181 branch_miss=  974676 cache_miss= 3076984 cache_ref=   3196425 items=   1000000 avg_time=  69886446 ns]
Creating a source file spanning 134087 KB 
Kostya<Dom>               109033817 ns    109028212 ns            6         1022.06k           1.26069G        10.1593M       10.3184M    347.291M              2.52934           9.18166       3.18871G          971.471M                    7.07528                     2.79728           4.81383M       1022k   137.305M       1.17286G/s   10.2184M   10.3186M   347.547M         2.53121    9.17194/s 3.18768G/s     971.471M               7.07528                2.79522   524.288k       4.80874M/s [best: throughput=  1.26 GB/s doc_throughput=     9 docs/s instructions=   971471362 cycles=   347291361 branch_miss= 1022057 cache_miss=10159339 cache_ref=  10318389 items=    524288 avg_time= 109003972 ns]
KostyaSum<Dom>            107507328 ns    107499870 ns            7         1023.04k           1.27926G        9.98714M       10.1214M    342.244M              2.49258           9.31695       3.18866G          968.326M                    7.05237                     2.82935           4.88476M    1022.75k   137.305M       1.18954G/s   10.0172M   10.1213M   342.657M         2.49559    9.30234/s 3.18751G/s     968.326M               7.05237                2.82593   524.288k        4.8771M/s [best: throughput=  1.28 GB/s doc_throughput=     9 docs/s instructions=   968325633 cycles=   342243557 branch_miss= 1023037 cache_miss= 9987142 cache_ref=  10121414 items=    524288 avg_time= 107477681 ns]
Kostya<OnDemand>           66713600 ns     66711342 ns           10         458.807k           2.05975G        6.35219M       6.47072M    212.574M              1.54819           15.0013       3.18888G          619.387M                    4.51103                     2.91375             7.865M    459.128k   137.305M       1.91684G/s   6.38818M   6.47055M   212.614M         1.54848      14.99/s 3.18708G/s     619.387M               4.51103                 2.9132   524.288k       7.85905M/s [best: throughput=  2.06 GB/s doc_throughput=    15 docs/s instructions=   619386954 cycles=   212574050 branch_miss=  458807 cache_miss= 6352185 cache_ref=   6470717 items=    524288 avg_time=  66683895 ns]
KostyaSum<OnDemand>        66713274 ns     66709864 ns           10          456.18k           2.06041G        6.20265M       6.27285M    212.509M              1.54771           15.0061       3.18893G          616.766M                    4.49194                      2.9023           7.86751M    456.441k   137.305M       1.91689G/s   6.19612M   6.27292M   212.611M         1.54845    14.9903/s 3.18709G/s     616.766M               4.49194                2.90092   524.288k       7.85923M/s [best: throughput=  2.06 GB/s doc_throughput=    15 docs/s instructions=   616765514 cycles=   212508905 branch_miss=  456180 cache_miss= 6202648 cache_ref=   6272847 items=    524288 avg_time=  66682549 ns]
Kostya<Iter>               66334374 ns     66332350 ns           11         459.829k           2.07529G        6.39236M       6.47079M    210.957M              1.53641           15.1145       3.18851G          596.318M                    4.34302                     2.82672           7.92434M    460.002k   137.305M        1.9278G/s   6.37127M   6.47081M   211.412M         1.53973    15.0756/s 3.18717G/s     596.318M               4.34302                2.82064   524.288k       7.90396M/s [best: throughput=  2.08 GB/s doc_throughput=    15 docs/s instructions=   596318124 cycles=   210957262 branch_miss=  459829 cache_miss= 6392360 cache_ref=   6470793 items=    524288 avg_time=  66304171 ns]
KostyaSum<Iter>            65065289 ns     65064652 ns           11         464.868k           2.11393G        6.16124M       6.27352M    207.115M              1.50843           15.3959       3.18871G          588.978M                    4.28956                     2.84373           8.07188M    465.309k   137.305M       1.96536G/s   6.19201M   6.27366M   207.365M         1.51025    15.3693/s 3.18707G/s     588.978M               4.28956                2.84029   524.288k       8.05795M/s [best: throughput=  2.11 GB/s doc_throughput=    15 docs/s instructions=   588978132 cycles=   207114680 branch_miss=  464868 cache_miss= 6161242 cache_ref=   6273515 items=    524288 avg_time=  65034631 ns]
DistinctUserID<Dom>          376455 ns       376444 ns         1860           4.468k           1.78515G               0        37.904k     1.1297M              1.78888          2.82677k        3.1934G          3.31661M                    5.25183                     2.93583           325.078k    4.65689k   631.515k       1.56237G/s   0.257527   38.0162k   1.13923M         1.80396   2.65644k/s 3.02628G/s     3.31661M               5.25183                2.91129        115        305.49k/s [best: throughput=  1.79 GB/s doc_throughput=  2826 docs/s instructions=     3316612 cycles=     1129702 branch_miss=    4468 cache_miss=       0 cache_ref=     37904 items=       115 avg_time=    357069 ns]
On Demand implementation: haswell
DistinctUserID<OnDemand>     205832 ns       205828 ns         3398           1.943k           3.36857G               0         2.159k    598.651k              0.94796           5.3341k       3.19327G          1.81653M                    2.87646                     3.03437           613.422k    2.07698k   631.515k       2.85745G/s  0.0367863   2.28545k   602.729k        0.954418   4.85842k/s 2.92831G/s     1.81653M               2.87646                3.01384        115       558.718k/s [best: throughput=  3.37 GB/s doc_throughput=  5334 docs/s instructions=     1816528 cycles=      598651 branch_miss=    1943 cache_miss=       0 cache_ref=      2159 items=       115 avg_time=    188863 ns]
