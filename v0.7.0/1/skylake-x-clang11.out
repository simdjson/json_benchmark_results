run_benchmark: v0.8.0~37 /home/jkeiser/simdjson_benchmark_results/v0.7.0/1/skylake-x-clang11.json -DCMAKE_BUILD_TYPE=Release
git reset --hard v0.8.0~37
HEAD is now at 5f7b2bac fuzz on power (#1326)
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- git Version: v0.2.1-5f7b2bac
-- Version: 0.2.1
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES -- failed to compile
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 10
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
make[3]: Nothing to be done for '_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build'.
[ 80%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
make[3]: Nothing to be done for 'jsonexamples/generated/CMakeFiles/generated-data.dir/build'.
[ 80%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/clang++-11  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/src  -O3 -DNDEBUG -fPIC   -pthread -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/clang++-11 -fPIC -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.6 -o ../libsimdjson.so.6.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.6.0.0 ../libsimdjson.so.6 ../libsimdjson.so
[ 90%] Built target simdjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/clang++-11  -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/clang++-11  -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.6.0.0 ../_deps/google_benchmarks/src/libbenchmark.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/1/skylake-x-clang11.json --benchmark_out_format=json
2021-01-24 23:47:57
Running benchmark/bench_ondemand
Run on (4 X 3200 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 1024 KiB (x4)
  L3 Unified 8448 KiB (x1)
Load Average: 1.00, 1.00, 1.00
***WARNING*** CPU scaling is enabled, the benchmark real time measurements may be noisy and will incur extra overhead.
On Demand implementation: fallback
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Benchmark                         Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
PartialTweets<OnDemand>     1455364 ns      1455335 ns          481          33.275k           441.788M               0         4.714k    4.56379M              7.22673           699.568       3.19268G          10.9666M                    17.3656                     2.40297           69.9568k    34.1254k   631.515k       413.829M/s   0.033264    5.1401k   4.59536M         7.27673    687.127/s  3.1576G/s     10.9666M               17.3656                2.38646        100       68.7127k/s [best: throughput=  0.44 GB/s doc_throughput=   699 docs/s instructions=    10966629 cycles=     4563790 branch_miss=   33275 cache_miss=       0 cache_ref=      4714 items=       100 avg_time=   1440379 ns]
PartialTweets<Iter>         1506348 ns      1506308 ns          465          33.578k           427.752M               2         6.383k    4.71347M              7.46375           677.342       3.19264G          10.9421M                    17.3268                     2.32146           67.7342k    34.7344k   631.515k       399.825M/s     2.3828   6.61769k   4.75832M         7.53477    663.875/s 3.15893G/s     10.9421M               17.3268                2.29958        100       66.3875k/s [best: throughput=  0.43 GB/s doc_throughput=   677 docs/s instructions=    10942117 cycles=     4713473 branch_miss=   33578 cache_miss=       2 cache_ref=      6383 items=       100 avg_time=   1491545 ns]
PartialTweets<Dom>           325367 ns       325360 ns         2154           3.453k           2.06181G               0        32.031k     978.17k              1.54893          3.26487k        3.1936G           2.9875M                    4.73069                     3.05418           326.487k    3.63574k   631.515k       1.80767G/s   0.351439   32.0857k   985.085k         1.55988   3.07352k/s 3.02767G/s      2.9875M               4.73069                3.03274        100       307.352k/s [best: throughput=  2.06 GB/s doc_throughput=  3264 docs/s instructions=     2987503 cycles=      978170 branch_miss=    3453 cache_miss=       0 cache_ref=     32031 items=       100 avg_time=    308743 ns]
Creating a source file spanning 44921 KB 
LargeRandom<Dom>          101437732 ns    101433270 ns            7         991.067k           455.135M        6.79147M       6.89533M     322.15M              7.00345           9.89451       3.18752G          1036.74M                    22.5384                     3.21818           9.89451M    996.579k   45.9988M        432.48M/s    6.8121M   6.89552M   323.324M         7.02898     9.8587/s 3.18756G/s     1036.74M               22.5384                3.20649      1000k        9.8587M/s [best: throughput=  0.46 GB/s doc_throughput=     9 docs/s instructions=  1036738087 cycles=   322150043 branch_miss=  991067 cache_miss= 6791468 cache_ref=   6895332 items=   1000000 avg_time= 101408601 ns]
LargeRandomSum<Dom>        99425658 ns     99424805 ns            7         990.414k           463.681M        6.41096M       6.51967M      316.1M              6.87193           10.0803       3.18638G          1025.74M                    22.2992                     3.24497           10.0803M    994.181k   45.9988M       441.216M/s   6.39647M   6.51987M   316.825M         6.88767    10.0579/s 3.18657G/s     1025.74M               22.2992                3.23756      1000k       10.0579M/s [best: throughput=  0.46 GB/s doc_throughput=    10 docs/s instructions=  1025738089 cycles=   316100489 branch_miss=  990414 cache_miss= 6410958 cache_ref=   6519672 items=   1000000 avg_time=  99395291 ns]
LargeRandom<OnDemand>     119142734 ns    119137482 ns            6         1.32756M           387.288M         3.4744M       3.57346M    378.658M              8.23191           8.41954       3.18812G          1.19598G                    26.0002                     3.15846           8.41954M    1.31684M   45.9988M       368.212M/s   3.50679M   3.57361M   379.769M         8.25607    8.39366/s 3.18765G/s     1.19598G               26.0002                3.14922      1000k       8.39366M/s [best: throughput=  0.39 GB/s doc_throughput=     8 docs/s instructions=  1195976287 cycles=   378657770 branch_miss= 1327561 cache_miss= 3474404 cache_ref=   3573456 items=   1000000 avg_time= 119113879 ns]
LargeRandomSum<OnDemand>  120815336 ns    120814244 ns            6         1.29621M            381.71M        3.11956M       3.19798M     384.31M              8.35479           8.29827       3.18911G          1.19598G                    26.0002                     3.11201           8.29827M    1.29149M   45.9988M       363.102M/s   3.14539M   3.19796M   385.154M         8.37314    8.27717/s 3.18799G/s     1.19598G               26.0002                3.10519      1000k       8.27717M/s [best: throughput=  0.38 GB/s doc_throughput=     8 docs/s instructions=  1195975495 cycles=   384309923 branch_miss= 1296214 cache_miss= 3119564 cache_ref=   3197975 items=   1000000 avg_time= 120785984 ns]
LargeRandom<Iter>         121933025 ns    121929727 ns            6         1.36121M           379.563M        3.49138M       3.57364M     386.45M              8.40131           8.25159       3.18883G          1.14198G                    24.8262                     2.95504           8.25159M    1.35634M   45.9988M        359.78M/s   3.51904M   3.57381M   388.689M         8.44998    8.20145/s 3.18781G/s     1.14198G               24.8262                2.93802      1000k       8.20145M/s [best: throughput=  0.38 GB/s doc_throughput=     8 docs/s instructions=  1141976264 cycles=   386449907 branch_miss= 1361211 cache_miss= 3491384 cache_ref=   3573645 items=   1000000 avg_time= 121903951 ns]
LargeRandomSum<Iter>      114565369 ns    114564301 ns            6          1.3363M            404.48M        3.15857M       3.19812M    362.684M              7.88464           8.79329       3.18918G          1.12698G                    24.5001                     3.10733           8.79329M    1.33721M   45.9988M        382.91M/s   3.13926M   3.19804M   365.208M         7.93951    8.72872/s  3.1878G/s     1.12698G               24.5001                3.08585      1000k       8.72872M/s [best: throughput=  0.40 GB/s doc_throughput=     8 docs/s instructions=  1126975725 cycles=   362683563 branch_miss= 1336302 cache_miss= 3158572 cache_ref=   3198119 items=   1000000 avg_time= 114536041 ns]
Creating a source file spanning 134087 KB 
Kostya<Dom>               106457597 ns    106456663 ns            7         1023.37k           1.29227G        10.1606M       10.3185M    338.765M              2.46724           9.41169       3.18835G          984.675M                    7.17144                     2.90666           4.93443M    1023.84k   137.305M        1.2012G/s   10.2087M   10.3188M   339.248M         2.47076    9.39349/s 3.18672G/s     984.675M               7.17144                2.90252   524.288k        4.9249M/s [best: throughput=  1.29 GB/s doc_throughput=     9 docs/s instructions=   984674875 cycles=   338764678 branch_miss= 1023374 cache_miss=10160602 cache_ref=  10318491 items=    524288 avg_time= 106426535 ns]
KostyaSum<Dom>            105082211 ns    105077246 ns            7         1024.02k           1.30908G        9.97988M       10.1211M    334.462M               2.4359           9.53411       3.18879G          977.859M                     7.1218                     2.92368           4.99862M       1024k   137.305M       1.21696G/s   9.97728M   10.1213M   334.847M         2.43871    9.51681/s 3.18668G/s     977.859M                7.1218                2.92032   524.288k       4.98955M/s [best: throughput=  1.31 GB/s doc_throughput=     9 docs/s instructions=   977859128 cycles=   334461821 branch_miss= 1024020 cache_miss= 9979878 cache_ref=  10121122 items=    524288 avg_time= 105049219 ns]
Kostya<OnDemand>          223145327 ns    223138881 ns            3         690.363k           616.947M         6.4066M       6.47161M    709.814M              5.16962           4.49326       3.18938G          2.19362G                    15.9762                     3.09041           2.35576M     752.78k   137.305M       586.828M/s   6.43178M   6.47164M   711.493M         5.18184    4.48151/s 3.18856G/s     2.19362G               15.9762                3.08312   524.288k        2.3496M/s [best: throughput=  0.62 GB/s doc_throughput=     4 docs/s instructions=  2193618280 cycles=   709814136 branch_miss=  690363 cache_miss= 6406597 cache_ref=   6471613 items=    524288 avg_time= 223111244 ns]
KostyaSum<OnDemand>       222172648 ns    222170675 ns            3         682.439k           619.491M        6.21461M       6.27452M    706.813M              5.14776           4.51179       3.18899G          2.19047G                    15.9533                     3.09908           2.36548M    714.701k   137.305M       589.386M/s    6.2168M   6.27437M    708.39M         5.15924    4.50104/s 3.18849G/s     2.19047G               15.9533                3.09218   524.288k       2.35984M/s [best: throughput=  0.62 GB/s doc_throughput=     4 docs/s instructions=  2190472650 cycles=   706813368 branch_miss=  682439 cache_miss= 6214611 cache_ref=   6274517 items=    524288 avg_time= 222136935 ns]
Kostya<Iter>              222440687 ns    222433706 ns            3         794.015k           617.712M        6.39751M       6.47179M    709.014M              5.16379           4.49883       3.18973G          2.17212G                    15.8197                     3.06358           2.35868M    792.945k   137.305M       588.689M/s   6.42662M   6.47183M   709.241M         5.16544    4.49572/s 3.18855G/s     2.17212G               15.8197                 3.0626   524.288k       2.35705M/s [best: throughput=  0.62 GB/s doc_throughput=     4 docs/s instructions=  2172122164 cycles=   709014054 branch_miss=  794015 cache_miss= 6397507 cache_ref=   6471786 items=    524288 avg_time= 222406990 ns]
KostyaSum<Iter>           221616449 ns    221609239 ns            3          691.01k           620.318M        6.21365M        6.2752M     705.92M              5.14125           4.51781       3.18921G          2.16373G                    15.7586                     3.06513           2.36863M    691.866k   137.305M       590.879M/s   6.23337M   6.27494M   706.729M         5.14715    4.51245/s 3.18908G/s     2.16373G               15.7586                3.06162   524.288k       2.36582M/s [best: throughput=  0.62 GB/s doc_throughput=     4 docs/s instructions=  2163733602 cycles=   705919723 branch_miss=  691010 cache_miss= 6213646 cache_ref=   6275204 items=    524288 avg_time= 221581845 ns]
DistinctUserID<Dom>          368662 ns       368650 ns         1898            4.28k           1.82342G               2        37.642k    1.10594M              1.75126          2.88738k       3.19328G          3.36703M                    5.33167                     3.04448           332.048k    4.48631k   631.515k        1.5954G/s    2.73393    37.853k   1.11505M         1.76568    2.7126k/s 3.02469G/s     3.36703M               5.33167                3.01962        115       311.949k/s [best: throughput=  1.82 GB/s doc_throughput=  2887 docs/s instructions=     3367031 cycles=     1105945 branch_miss=    4280 cache_miss=       2 cache_ref=     37642 items=       115 avg_time=    349533 ns]
On Demand implementation: fallback
DistinctUserID<OnDemand>    1413367 ns      1413341 ns          495          32.363k           456.787M               1         4.837k    4.41401M              6.98955            723.32       3.19274G          10.5911M                    16.7709                     2.39943           83.1818k    33.4231k   631.515k       426.125M/s   0.911111   4.90826k   4.45278M         7.05095    707.543/s 3.15054G/s     10.5911M               16.7709                2.37854        115       81.3675k/s [best: throughput=  0.46 GB/s doc_throughput=   723 docs/s instructions=    10591098 cycles=     4414005 branch_miss=   32363 cache_miss=       1 cache_ref=      4837 items=       115 avg_time=   1395649 ns]
