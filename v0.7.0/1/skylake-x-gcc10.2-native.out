run_benchmark: v0.8.0~37 /home/jkeiser/simdjson_benchmark_results/v0.7.0/1/skylake-x-gcc10.2-native.json -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native
git reset --hard v0.8.0~37
HEAD is now at 5f7b2bac fuzz on power (#1326)
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- git Version: v0.2.1-5f7b2bac
-- Version: 0.2.1
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 10
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
make[3]: Nothing to be done for '_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build'.
[ 80%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
make[3]: Nothing to be done for 'jsonexamples/generated/CMakeFiles/generated-data.dir/build'.
[ 80%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/g++-10  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/src  -march=native -O3 -DNDEBUG -fPIC   -pthread -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/g++-10 -fPIC -march=native -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.6 -o ../libsimdjson.so.6.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.6.0.0 ../libsimdjson.so.6 ../libsimdjson.so
[ 90%] Built target simdjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/g++-10  -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/g++-10  -march=native -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.6.0.0 ../_deps/google_benchmarks/src/libbenchmark.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/1/skylake-x-gcc10.2-native.json --benchmark_out_format=json
2021-01-25 00:01:23
Running benchmark/bench_ondemand
Run on (4 X 3200 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 1024 KiB (x4)
  L3 Unified 8448 KiB (x1)
Load Average: 1.02, 1.01, 1.00
***WARNING*** CPU scaling is enabled, the benchmark real time measurements may be noisy and will incur extra overhead.
On Demand implementation: haswell
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Benchmark                         Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
PartialTweets<OnDemand>      234625 ns       234621 ns         2977           2.345k           2.88504G               4         6.041k    699.085k                1.107          4.56844k       3.19373G          2.20449M                     3.4908                      3.1534           456.844k    2.47957k   631.515k       2.50678G/s    3.11992   6.08634k   703.054k         1.11328   4.26219k/s 2.99655G/s     2.20449M                3.4908                3.13559        100       426.219k/s [best: throughput=  2.89 GB/s doc_throughput=  4568 docs/s instructions=     2204493 cycles=      699085 branch_miss=    2345 cache_miss=       4 cache_ref=      6041 items=       100 avg_time=    220302 ns]
PartialTweets<Iter>          494636 ns       494627 ns         1415           3.979k           1.32509G               1         4.646k    1.52172M              2.40963          2.09828k       3.19299G          4.32972M                    6.85608                     2.84528           209.828k    4.21171k   631.515k       1.18907G/s    2.06643   4.77232k   1.53067M         2.42381   2.02173k/s  3.0946G/s     4.32972M               6.85608                2.82864        100       202.173k/s [best: throughput=  1.33 GB/s doc_throughput=  2098 docs/s instructions=     4329716 cycles=     1521717 branch_miss=    3979 cache_miss=       1 cache_ref=      4646 items=       100 avg_time=    479725 ns]
PartialTweets<Dom>           338025 ns       338013 ns         2067           3.709k           1.97925G               1        32.073k    1018.89k              1.61341          3.13413k       3.19334G          3.07043M                    4.86201                      3.0135           313.413k    3.84927k   631.515k       1.74001G/s    1.75714   32.0608k   1024.62k         1.62249   2.95847k/s 3.03132G/s     3.07043M               4.86201                2.99664        100       295.847k/s [best: throughput=  1.98 GB/s doc_throughput=  3134 docs/s instructions=     3070434 cycles=     1018892 branch_miss=    3709 cache_miss=       1 cache_ref=     32073 items=       100 avg_time=    321194 ns]
Creating a source file spanning 44921 KB 
LargeRandom<Dom>           98212292 ns     98209305 ns            7         848.492k           469.708M        6.79642M       6.89514M    312.261M              6.78846           10.2113       3.18859G          989.581M                    21.5132                     3.16909           10.2113M    848.195k   45.9988M       446.677M/s   6.80714M   6.89519M   313.046M         6.80553    10.1823/s 3.18754G/s     989.581M               21.5132                3.16114      1000k       10.1823M/s [best: throughput=  0.47 GB/s doc_throughput=    10 docs/s instructions=   989581014 cycles=   312260782 branch_miss=  848492 cache_miss= 6796423 cache_ref=   6895140 items=   1000000 avg_time=  98182976 ns]
LargeRandomSum<Dom>        98491315 ns     98487036 ns            7          850.22k           467.629M        6.39122M       6.51925M    313.673M              6.81916           10.1661       3.18884G          994.581M                    21.6219                     3.17076           10.1661M    850.882k   45.9988M       445.418M/s   6.42897M   6.51924M   313.927M         6.82469    10.1536/s  3.1875G/s     994.581M               21.6219                3.16819      1000k       10.1536M/s [best: throughput=  0.47 GB/s doc_throughput=    10 docs/s instructions=   994581027 cycles=   313672942 branch_miss=  850220 cache_miss= 6391217 cache_ref=   6519249 items=   1000000 avg_time=  98461072 ns]
LargeRandom<OnDemand>      65614843 ns     65609467 ns           11         869.923k           702.452M        3.49775M       3.57346M    208.605M                4.535           15.2711       3.18562G          641.959M                     13.956                     3.07739           15.2711M    869.354k   45.9988M       668.621M/s   3.48464M   3.57332M   209.099M         4.54576    15.2417/s 3.18703G/s     641.959M                13.956                3.07011      1000k       15.2417M/s [best: throughput=  0.70 GB/s doc_throughput=    15 docs/s instructions=   641958637 cycles=   208604610 branch_miss=  869923 cache_miss= 3497751 cache_ref=   3573457 items=   1000000 avg_time=  65585922 ns]
LargeRandomSum<OnDemand>   67045514 ns     67043297 ns           10         865.307k           687.803M        3.15616M       3.19628M    213.264M               4.6363           14.9526       3.18886G          634.959M                    13.8038                     2.97734           14.9526M    865.135k   45.9988M       654.321M/s   3.12713M   3.19633M   213.684M         4.64543    14.9157/s 3.18726G/s     634.959M               13.8038                2.97148      1000k       14.9157M/s [best: throughput=  0.69 GB/s doc_throughput=    14 docs/s instructions=   634958636 cycles=   213263991 branch_miss=  865307 cache_miss= 3156158 cache_ref=   3196276 items=   1000000 avg_time=  67016724 ns]
LargeRandom<Iter>          63906741 ns     63903779 ns           11         891.977k           720.938M        3.47409M       3.57258M    203.449M              4.42293            15.673       3.18866G          578.958M                    12.5864                     2.84571            15.673M    889.047k   45.9988M       686.467M/s   3.48736M   3.57258M   203.662M         4.42756    15.6485/s 3.18701G/s     578.958M               12.5864                2.84274      1000k       15.6485M/s [best: throughput=  0.72 GB/s doc_throughput=    15 docs/s instructions=   578958331 cycles=   203449343 branch_miss=  891977 cache_miss= 3474087 cache_ref=   3572583 items=   1000000 avg_time=  63876450 ns]
LargeRandomSum<Iter>       62121162 ns     62115912 ns           11         870.948k           742.418M          3.104M       3.19609M    197.582M              4.29537             16.14       3.18896G          588.959M                    12.8038                     2.98084             16.14M    870.949k   45.9988M       706.226M/s   3.12379M   3.19613M   197.958M         4.30354    16.0989/s 3.18691G/s     588.959M               12.8038                2.97518      1000k       16.0989M/s [best: throughput=  0.74 GB/s doc_throughput=    16 docs/s instructions=   588958628 cycles=   197581652 branch_miss=  870948 cache_miss= 3104003 cache_ref=   3196089 items=   1000000 avg_time=  62091371 ns]
Creating a source file spanning 134087 KB 
Kostya<Dom>                98489667 ns     98484643 ns            7          448.03k           1.39639G        10.1765M       10.3159M    313.497M              2.28322             10.17       3.18827G          972.126M                    7.08005                     3.10091           5.33201M    448.184k   137.305M       1.29843G/s   10.2185M    10.316M   313.891M         2.28608    10.1539/s  3.1872G/s     972.126M               7.08005                3.09702   524.288k       5.32355M/s [best: throughput=  1.40 GB/s doc_throughput=    10 docs/s instructions=   972125809 cycles=   313497310 branch_miss=  448030 cache_miss=10176537 cache_ref=  10315880 items=    524288 avg_time=  98457632 ns]
KostyaSum<Dom>             97789774 ns     97781209 ns            7         449.371k           1.40636G        10.0319M       10.1186M     311.29M              2.26714           10.2426       3.18841G          974.747M                    7.09914                     3.13132           5.37007M    449.592k   137.305M       1.30777G/s   10.0246M   10.1189M   311.633M         2.26964    10.2269/s 3.18704G/s     974.747M               7.09914                3.12787   524.288k       5.36185M/s [best: throughput=  1.41 GB/s doc_throughput=    10 docs/s instructions=   974747260 cycles=   311289677 branch_miss=  449371 cache_miss=10031920 cache_ref=  10118648 items=    524288 avg_time=  97757136 ns]
Kostya<OnDemand>           69474295 ns     69471776 ns           10          461.19k           1.97936G        6.33779M       6.47046M    221.191M              1.61095           14.4158       3.18865G          679.769M                     4.9508                     3.07322           7.55804M    460.567k   137.305M       1.84068G/s    6.3801M   6.47052M   221.397M         1.61245    14.3943/s 3.18686G/s     679.769M                4.9508                3.07036   524.288k       7.54678M/s [best: throughput=  1.98 GB/s doc_throughput=    14 docs/s instructions=   679769176 cycles=   221190846 branch_miss=  461190 cache_miss= 6337790 cache_ref=   6470460 items=    524288 avg_time=  69443199 ns]
KostyaSum<OnDemand>        69443324 ns     69440002 ns           10         463.237k           1.97923G        6.19093M        6.2735M    221.191M              1.61095           14.4149       3.18844G          675.575M                    4.92025                     3.05426           7.55755M    463.187k   137.305M       1.84152G/s   6.19658M   6.27353M   221.292M         1.61168    14.4009/s 3.18681G/s     675.575M               4.92025                3.05287   524.288k       7.55023M/s [best: throughput=  1.98 GB/s doc_throughput=    14 docs/s instructions=   675575020 cycles=   221190861 branch_miss=  463237 cache_miss= 6190929 cache_ref=   6273498 items=    524288 avg_time=  69411710 ns]
Kostya<Iter>               69601162 ns     69595147 ns           10         472.015k           1.97559G        6.38543M       6.47036M    221.616M              1.61404           14.3884       3.18868G          664.041M                    4.83625                     2.99636           7.54364M    472.368k   137.305M       1.83742G/s   6.39798M   6.47046M   221.781M         1.61525    14.3688/s 3.18673G/s     664.041M               4.83625                2.99412   524.288k        7.5334M/s [best: throughput=  1.98 GB/s doc_throughput=    14 docs/s instructions=   664040641 cycles=   221615515 branch_miss=  472015 cache_miss= 6385428 cache_ref=   6470362 items=    524288 avg_time=  69569448 ns]
KostyaSum<Iter>           145842275 ns    145837845 ns            5         478.779k           942.399M        6.17872M       6.27585M    464.621M              3.38386           6.86354       3.18895G          1.29004G                    9.39544                     2.77654           3.59847M    480.919k   137.305M       897.876M/s    6.2134M   6.27584M   464.946M         3.38623    6.85693/s  3.1881G/s     1.29004G               9.39544                 2.7746   524.288k       3.59501M/s [best: throughput=  0.94 GB/s doc_throughput=     6 docs/s instructions=  1290040168 cycles=   464621129 branch_miss=  478779 cache_miss= 6178720 cache_ref=   6275854 items=    524288 avg_time= 145810002 ns]
DistinctUserID<Dom>          371322 ns       371311 ns         1883           4.499k           1.80867G              11        36.461k    1.11497M              1.76555          2.86402k        3.1933G          3.38813M                    5.36508                     3.03876           329.363k    4.75656k   631.515k       1.58396G/s    10.2682   36.5691k   1.12374M         1.77943   2.69316k/s  3.0264G/s     3.38813M               5.36508                3.01505        115       309.713k/s [best: throughput=  1.81 GB/s doc_throughput=  2864 docs/s instructions=     3388128 cycles=     1114969 branch_miss=    4499 cache_miss=      11 cache_ref=     36461 items=       115 avg_time=    352270 ns]
On Demand implementation: haswell
DistinctUserID<OnDemand>     224531 ns       224526 ns         3119            2.32k           3.11103G               0         4.598k    648.269k              1.02653           4.9263k       3.19357G          2.16115M                    3.42217                     3.33373           566.525k    2.42839k   631.515k       2.61949G/s   5.12985m   4.48029k    661.81k         1.04797   4.45382k/s 2.94758G/s     2.16115M               3.42217                3.26551        115       512.189k/s [best: throughput=  3.11 GB/s doc_throughput=  4926 docs/s instructions=     2161151 cycles=      648269 branch_miss=    2320 cache_miss=       0 cache_ref=      4598 items=       115 avg_time=    207389 ns]
