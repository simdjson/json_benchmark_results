run_benchmark: v0.8.0~37 /home/jkeiser/simdjson_benchmark_results/v0.7.0/1/skylake-clang11.json -DCMAKE_BUILD_TYPE=Release
git reset --hard v0.8.0~37
HEAD is now at 5f7b2bac fuzz on power (#1326)
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- git Version: v0.2.1-5f7b2bac
-- Version: 0.2.1
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES -- failed to compile
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 10
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
make[3]: Nothing to be done for '_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build'.
[ 80%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
make[3]: Nothing to be done for 'jsonexamples/generated/CMakeFiles/generated-data.dir/build'.
[ 80%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/clang++-11  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/src  -O3 -DNDEBUG -fPIC   -pthread -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/clang++-11 -fPIC -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.6 -o ../libsimdjson.so.6.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.6.0.0 ../libsimdjson.so.6 ../libsimdjson.so
[ 90%] Built target simdjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/clang++-11  -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/clang++-11  -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.6.0.0 ../_deps/google_benchmarks/src/libbenchmark.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/1/skylake-clang11.json --benchmark_out_format=json
2021-01-25 01:20:55
Running benchmark/bench_ondemand
Run on (4 X 4000 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 256 KiB (x4)
  L3 Unified 8192 KiB (x1)
Load Average: 0.96, 0.48, 0.35
On Demand implementation: fallback
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Benchmark                         Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
PartialTweets<OnDemand>     1253747 ns      1253755 ns          558          33.003k           510.864M               0        59.297k     4.5634M              7.22612            808.95       3.69157G          10.9666M                    17.3656                     2.40317            80.895k    33.8708k   631.515k       480.365M/s    1.66129   59.3459k   4.59534M         7.27669    797.604/s 3.66526G/s     10.9666M               17.3656                2.38647        100       79.7604k/s [best: throughput=  0.51 GB/s doc_throughput=   808 docs/s instructions=    10966621 cycles=     4563405 branch_miss=   33003 cache_miss=       0 cache_ref=     59297 items=       100 avg_time=   1245606 ns]
PartialTweets<Iter>         1295898 ns      1295891 ns          540          33.672k             494.2M               0        59.735k    4.71718M              7.46962           782.563       3.69149G          10.9421M                    17.3268                     2.31963           78.2563k    34.5123k   631.515k       464.746M/s    20.7222   59.7968k   4.75087M         7.52298     771.67/s 3.66611G/s     10.9421M               17.3268                2.30318        100        77.167k/s [best: throughput=  0.49 GB/s doc_throughput=   782 docs/s instructions=    10942109 cycles=     4717178 branch_miss=   33672 cache_miss=       0 cache_ref=     59735 items=       100 avg_time=   1287733 ns]
PartialTweets<Dom>           285401 ns       285402 ns         2454           3.546k           2.29243G               0        93.509k    1017.05k               1.6105          3.63005k       3.69196G           2.9875M                    4.73068                      2.9374           363.005k    3.69519k   631.515k       2.06075G/s  0.0354523   93.4539k   1022.97k         1.61987   3.50382k/s 3.58431G/s      2.9875M               4.73068                2.92041        100       350.382k/s [best: throughput=  2.29 GB/s doc_throughput=  3630 docs/s instructions=     2987495 cycles=     1017053 branch_miss=    3546 cache_miss=       0 cache_ref=     93509 items=       100 avg_time=    277219 ns]
Creating a source file spanning 44921 KB 
LargeRandom<Dom>           89966211 ns     89963436 ns            8         960.903k           512.014M        10.9303M       15.4353M    331.341M              7.20325            11.131       3.68817G          1036.74M                    22.5384                     3.12892            11.131M    964.088k   45.9988M       487.619M/s   10.9002M   15.4355M   331.778M         7.21276    11.1156/s 3.68792G/s     1036.74M               22.5384                3.12479      1000k       11.1156M/s [best: throughput=  0.51 GB/s doc_throughput=    11 docs/s instructions=  1036738076 cycles=   331340891 branch_miss=  960903 cache_miss=10930263 cache_ref=  15435284 items=   1000000 avg_time=  89951701 ns]
LargeRandomSum<Dom>        88404022 ns     88387383 ns            8         959.055k           522.478M         10.326M       14.5669M    324.764M              7.06028           11.3585       3.68885G          1025.74M                    22.2992                     3.15841           11.3585M    959.598k   45.9988M       496.314M/s    10.289M   14.5719M   325.973M         7.08655    11.3138/s   3.688G/s     1025.74M               22.2992                 3.1467      1000k       11.3138M/s [best: throughput=  0.52 GB/s doc_throughput=    11 docs/s instructions=  1025738075 cycles=   324764448 branch_miss=  959055 cache_miss=10326046 cache_ref=  14566865 items=   1000000 avg_time=  88390177 ns]
LargeRandom<OnDemand>     105282209 ns    105263346 ns            7         1.31287M           438.145M        5.67234M       8.08007M    387.247M              8.41864           9.52515       3.68858G          1.19598G                    26.0002                     3.08841           9.52515M    1.31451M   45.9988M       416.744M/s   5.71562M   8.07461M   388.173M         8.43877    9.49998/s 3.68764G/s     1.19598G               26.0002                3.08104      1000k       9.49998M/s [best: throughput=  0.44 GB/s doc_throughput=     9 docs/s instructions=  1195976275 cycles=   387247017 branch_miss= 1312873 cache_miss= 5672344 cache_ref=   8080067 items=   1000000 avg_time= 105267833 ns]
LargeRandomSum<OnDemand>  107269191 ns    107262800 ns            6         1.29507M           430.625M        5.01877M       7.21642M    394.019M              8.56587           9.36166       3.68868G          1.19598G                    26.0002                     3.03532           9.36166M    1.29279M   45.9988M       408.975M/s   5.07395M   7.21696M   395.579M         8.59977     9.3229/s 3.68794G/s     1.19598G               26.0002                3.02336      1000k        9.3229M/s [best: throughput=  0.43 GB/s doc_throughput=     9 docs/s instructions=  1195975484 cycles=   394019382 branch_miss= 1295070 cache_miss= 5018771 cache_ref=   7216419 items=   1000000 avg_time= 107255977 ns]
LargeRandom<Iter>         106946562 ns    106947232 ns            7         1.33718M           430.981M        5.64537M       8.07864M    393.754M              8.56009           9.36941       3.68924G          1.14198G                    24.8262                     2.90023           9.36941M    1.34047M   45.9988M       410.182M/s   5.67178M   8.07924M   394.434M         8.57487    9.35041/s 3.68811G/s     1.14198G               24.8262                2.89523      1000k       9.35041M/s [best: throughput=  0.43 GB/s doc_throughput=     9 docs/s instructions=  1141976251 cycles=   393753603 branch_miss= 1337177 cache_miss= 5645367 cache_ref=   8078636 items=   1000000 avg_time= 106932343 ns]
LargeRandomSum<Iter>      101637907 ns    101618776 ns            7         1.36472M           455.169M        5.02034M       7.21596M    372.775M              8.10401           9.89525        3.6887G          1.12698G                    24.5001                     3.02321           9.89525M    1.35855M   45.9988M        431.69M/s   5.09133M   7.21745M   374.735M         8.14662     9.8407/s 3.68765G/s     1.12698G               24.5001                 3.0074      1000k        9.8407M/s [best: throughput=  0.46 GB/s doc_throughput=     9 docs/s instructions=  1126975712 cycles=   372774579 branch_miss= 1364723 cache_miss= 5020342 cache_ref=   7215963 items=   1000000 avg_time= 101623852 ns]
Creating a source file spanning 134087 KB 
Kostya<Dom>                93815038 ns     93789373 ns            7         1023.62k           1.46815G        15.7565M       22.4016M    344.942M              2.51223           10.6926       3.68832G          984.675M                    7.17144                     2.85461           5.60599M    1023.51k   137.305M       1.36343G/s   15.7638M   22.3631M   345.365M         2.51531    10.6622/s 3.68235G/s     984.675M               7.17144                2.85111   524.288k       5.59006M/s [best: throughput=  1.47 GB/s doc_throughput=    10 docs/s instructions=   984674864 cycles=   344941615 branch_miss= 1023617 cache_miss=15756533 cache_ref=  22401614 items=    524288 avg_time=  93799908 ns]
KostyaSum<Dom>             92458400 ns     92441385 ns            8         1024.65k           1.48806G        15.3406M       21.8701M    340.391M              2.47909           10.8376       3.68902G          977.859M                     7.1218                     2.87275           5.68202M    1024.73k   137.305M       1.38331G/s   15.3838M   21.8162M   340.874M         2.48261    10.8177/s 3.68746G/s     977.859M                7.1218                2.86868   524.288k       5.67157M/s [best: throughput=  1.49 GB/s doc_throughput=    10 docs/s instructions=   977859117 cycles=   340391170 branch_miss= 1024651 cache_miss=15340587 cache_ref=  21870130 items=    524288 avg_time=  92443458 ns]
Kostya<OnDemand>          197519697 ns    197517473 ns            4         692.531k           695.544M        10.2136M       14.2978M     728.17M               5.3033           5.06569       3.68868G          2.19362G                    15.9762                     3.01251           2.65588M    693.845k   137.305M        662.95M/s   10.2717M   14.2751M   728.575M         5.30625    5.06284/s 3.68866G/s     2.19362G               15.9762                3.01084   524.288k       2.65439M/s [best: throughput=  0.70 GB/s doc_throughput=     5 docs/s instructions=  2193618264 cycles=   728169508 branch_miss=  692531 cache_miss=10213594 cache_ref=  14297845 items=    524288 avg_time= 197503434 ns]
KostyaSum<OnDemand>       196755807 ns    196750866 ns            4         682.375k           698.215M        9.91642M       13.8557M    725.441M              5.28343           5.08514       3.68897G          2.19047G                    15.9533                      3.0195           2.66608M    681.973k   137.305M       665.533M/s   9.93739M   13.8266M   725.748M         5.28567    5.08257/s 3.68867G/s     2.19047G               15.9533                3.01823   524.288k       2.66473M/s [best: throughput=  0.70 GB/s doc_throughput=     5 docs/s instructions=  2190472632 cycles=   725441219 branch_miss=  682375 cache_miss= 9916417 cache_ref=  13855706 items=    524288 avg_time= 196739809 ns]
Kostya<Iter>              196117926 ns    196110065 ns            4         710.145k           700.294M        10.1483M        14.162M    723.389M              5.26848           5.10028       3.68949G          2.17212G                    15.8197                      3.0027           2.67402M    711.639k   137.305M       667.708M/s   10.2164M   14.1623M   723.466M         5.26904    5.09918/s 3.68908G/s     2.17212G               15.8197                3.00238   524.288k       2.67344M/s [best: throughput=  0.70 GB/s doc_throughput=     5 docs/s instructions=  2172122149 cycles=   723388899 branch_miss=  710145 cache_miss=10148318 cache_ref=  14161971 items=    524288 avg_time= 196102910 ns]
KostyaSum<Iter>           196037078 ns    196034892 ns            4         692.131k            700.51M        9.90666M       13.6223M     723.14M              5.26667           5.10185       3.68935G          2.16373G                    15.7586                     2.99214           2.67484M    692.372k   137.305M       667.964M/s   9.95018M    13.623M   723.175M         5.26693    5.10113/s 3.68901G/s     2.16373G               15.7586                2.99199   524.288k       2.67446M/s [best: throughput=  0.70 GB/s doc_throughput=     5 docs/s instructions=  2163733588 cycles=   723140331 branch_miss=  692131 cache_miss= 9906664 cache_ref=  13622337 items=    524288 avg_time= 196021128 ns]
DistinctUserID<Dom>          320326 ns       320328 ns         2182           4.306k           2.04085G               4        99.264k     1.1424M              1.80898          3.23168k       3.69186G          3.36702M                    5.33166                     2.94733           371.643k    4.59526k   631.515k       1.83607G/s    7.76352   99.3528k   1.15198M         1.82416    3.1218k/s 3.59626G/s     3.36702M               5.33166                2.92281        115       359.007k/s [best: throughput=  2.04 GB/s doc_throughput=  3231 docs/s instructions=     3367023 cycles=     1142397 branch_miss=    4306 cache_miss=       4 cache_ref=     99264 items=       115 avg_time=    312187 ns]
On Demand implementation: fallback
DistinctUserID<OnDemand>    1215646 ns      1215636 ns          575          32.303k           527.643M               0        54.094k    4.41835M              6.99642           835.519       3.69161G          10.5911M                    16.7709                     2.39707           96.0847k    33.3603k   631.515k       495.428M/s    2.58783   54.1584k   4.45555M         7.05533    822.615/s  3.6652G/s     10.5911M               16.7709                2.37706        115       94.6007k/s [best: throughput=  0.53 GB/s doc_throughput=   835 docs/s instructions=    10591090 cycles=     4418347 branch_miss=   32303 cache_miss=       0 cache_ref=     54094 items=       115 avg_time=   1207579 ns]
