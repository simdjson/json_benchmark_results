run_benchmark: v0.8.0~37 /home/jkeiser/simdjson_benchmark_results/v0.7.0/1/ampere-clang11.json -DCMAKE_BUILD_TYPE=Release
git reset --hard v0.8.0~37
HEAD is now at 5f7b2bac fuzz on power (#1326)
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- git Version: v0.2.1-5f7b2bac
-- Version: 0.2.1
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES -- failed to compile
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 10
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
make[3]: Nothing to be done for '_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build'.
[ 80%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
make[3]: Nothing to be done for 'jsonexamples/generated/CMakeFiles/generated-data.dir/build'.
[ 80%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/clang++-11  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/src  -O3 -DNDEBUG -fPIC   -pthread -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/clang++-11 -fPIC -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.6 -o ../libsimdjson.so.6.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.6.0.0 ../libsimdjson.so.6 ../libsimdjson.so
[ 90%] Built target simdjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/clang++-11  -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/clang++-11  -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.6.0.0 ../_deps/google_benchmarks/src/libbenchmark.a -pthread /usr/lib/aarch64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/1/ampere-clang11.json --benchmark_out_format=json
2021-01-24 23:26:57
Running benchmark/bench_ondemand
Run on (32 X 3300 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x32)
  L1 Instruction 32 KiB (x32)
  L2 Unified 256 KiB (x16)
Load Average: 1.03, 0.90, 0.83
On Demand implementation: fallback
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Benchmark                         Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
PartialTweets<OnDemand>     1849674 ns      1849571 ns          378           80.98k           347.219M          22.87k       1.35275M    5.82128M              9.21796           549.819       3.20065G          8.95829M                    14.1854                     1.53889           54.9819k    81.6097k   631.515k       325.621M/s   22.8813k   1.35358M   5.83605M         9.24135    540.666/s 3.15536G/s     8.95829M               14.1854                1.53499        100       54.0666k/s [best: throughput=  0.35 GB/s doc_throughput=   549 docs/s instructions=     8958292 cycles=     5821278 branch_miss=   80980 cache_miss=   22870 cache_ref=   1352750 items=       100 avg_time=   1825542 ns]
PartialTweets<Iter>         1967609 ns      1967601 ns          354          83.889k           327.052M         22.865k       1.39841M    6.18025M              9.78639           517.884       3.20066G          9.04306M                    14.3196                     1.46322           51.7884k    85.1372k   631.515k       306.088M/s   22.8604k   1.40074M   6.21145M          9.8358    508.233/s 3.15687G/s     9.04305M               14.3196                1.45587        100       50.8233k/s [best: throughput=  0.33 GB/s doc_throughput=   517 docs/s instructions=     9043056 cycles=     6180252 branch_miss=   83889 cache_miss=   22865 cache_ref=   1398408 items=       100 avg_time=   1942870 ns]
PartialTweets<Dom>          2593874 ns      2593818 ns          270         104.796k           246.391M         25.967k       2.70593M    8.20299M              12.9894           390.159       3.20047G          13.7646M                    21.7962                       1.678           39.0159k    104.952k   631.515k        232.19M/s   25.9672k    2.7067M   8.20987M         13.0003    385.532/s 3.16517G/s     13.7646M               21.7962                1.67659        100       38.5532k/s [best: throughput=  0.25 GB/s doc_throughput=   390 docs/s instructions=    13764627 cycles=     8202990 branch_miss=  104796 cache_miss=   25967 cache_ref=   2705927 items=       100 avg_time=   2568105 ns]
Creating a source file spanning 44921 KB 
LargeRandom<Dom>          316851944 ns    316846335 ns            2         4.03709M           145.308M        3.98328M       274.582M    1012.08M              22.0023           3.15895       3.19711G          1.43712G                    31.2426                     1.41997           3.15895M    4.03742M   45.9988M       138.452M/s   3.98329M   274.584M   1012.74M         22.0168     3.1561/s 3.19632G/s     1.43712G               31.2426                1.41904      1000k        3.1561M/s [best: throughput=  0.15 GB/s doc_throughput=     3 docs/s instructions=  1437120473 cycles=  1012078735 branch_miss= 4037086 cache_miss= 3983280 cache_ref= 274581830 items=   1000000 avg_time= 316792778 ns]
LargeRandomSum<Dom>       313672282 ns    313675557 ns            2         4.03838M           146.694M        3.98303M       272.589M    1002.48M              21.7937           3.18908       3.19701G          1.43612G                    31.2208                     1.43256           3.18908M    4.03803M   45.9988M       139.851M/s   3.98308M   272.586M   1002.63M         21.7969    3.18801/s 3.19639G/s     1.43612G               31.2208                1.43235      1000k       3.18801M/s [best: throughput=  0.15 GB/s doc_throughput=     3 docs/s instructions=  1436120476 cycles=  1002484573 branch_miss= 4038375 cache_miss= 3983032 cache_ref= 272588520 items=   1000000 avg_time= 313611960 ns]
LargeRandom<OnDemand>     253716510 ns    253706809 ns            3         3.35666M           181.359M        2.31979M       189.588M    810.932M              17.6294           3.94269       3.19726G          1051.98M                    22.8697                     1.29725           3.94269M     3.3568M   45.9988M       172.908M/s   2.31978M   189.592M   810.936M         17.6295    3.94156/s 3.19635G/s     1051.98M               22.8697                1.29724      1000k       3.94156M/s [best: throughput=  0.18 GB/s doc_throughput=     3 docs/s instructions=  1051978722 cycles=   810932387 branch_miss= 3356657 cache_miss= 2319793 cache_ref= 189587530 items=   1000000 avg_time= 253662888 ns]
LargeRandomSum<OnDemand>  256636246 ns    256632498 ns            3         3.35304M           179.313M        2.31839M         190.6M    820.175M              17.8304           3.89821       3.19721G          1054.98M                    22.9349                     1.28628           3.89821M    3.35307M   45.9988M       170.936M/s   2.31862M     190.6M   820.184M         17.8306    3.89662/s 3.19595G/s     1054.98M               22.9349                1.28627      1000k       3.89662M/s [best: throughput=  0.18 GB/s doc_throughput=     3 docs/s instructions=  1054978721 cycles=   820174979 branch_miss= 3353037 cache_miss= 2318385 cache_ref= 190600406 items=   1000000 avg_time= 256581646 ns]
LargeRandom<Iter>         249542736 ns    249538542 ns            3         3.35566M           184.417M        2.31807M       158.553M    797.509M              17.3376           4.00917       3.19735G          985.979M                    21.4349                     1.23632           4.00917M    3.35428M   45.9988M       175.796M/s   2.31811M   158.546M   797.569M         17.3389     4.0074/s 3.19617G/s     985.979M               21.4349                1.23623      1000k        4.0074M/s [best: throughput=  0.18 GB/s doc_throughput=     4 docs/s instructions=   985978697 cycles=   797508570 branch_miss= 3355656 cache_miss= 2318067 cache_ref= 158552796 items=   1000000 avg_time= 249485707 ns]
LargeRandomSum<Iter>      249825874 ns    249821446 ns            3         3.36086M           184.196M        2.31708M       161.396M    798.309M               17.355           4.00436       3.19672G          996.979M                     21.674                     1.24886           4.00436M    3.35759M   45.9988M       175.597M/s   2.31729M   161.371M   798.374M         17.3564    4.00286/s 3.19578G/s     996.979M                21.674                1.24876      1000k       4.00286M/s [best: throughput=  0.18 GB/s doc_throughput=     4 docs/s instructions=   996978696 cycles=   798308539 branch_miss= 3360856 cache_miss= 2317078 cache_ref= 161395784 items=   1000000 avg_time= 249771037 ns]
Creating a source file spanning 134087 KB 
Kostya<Dom>               520745144 ns    520751047 ns            1         14.8818M           263.706M        6.95552M       496.388M    1.66464G              12.1237           1.92058       3.19709G          2.38517G                    17.3714                     1.43284           1006.94k    14.8818M   137.305M       251.453M/s   6.95552M   496.388M   1.66464G         12.1237     1.9203/s 3.19662G/s     2.38517G               17.3714                1.43284   524.288k       1006.79k/s [best: throughput=  0.26 GB/s doc_throughput=     1 docs/s instructions=  2385174073 cycles=  1664643320 branch_miss=14881766 cache_miss= 6955515 cache_ref= 496387563 items=    524288 avg_time= 520675101 ns]
KostyaSum<Dom>            519170274 ns    519092847 ns            1         14.8729M           264.506M        6.95435M       495.326M    1.65914G              12.0836           1.92641       3.19619G          2.38465G                    17.3675                     1.43728           1009.99k    14.8729M   137.305M       252.256M/s   6.95435M   495.326M   1.65914G         12.0836    1.92644/s 3.19623G/s     2.38465G               17.3675                1.43728   524.288k       1010.01k/s [best: throughput=  0.26 GB/s doc_throughput=     1 docs/s instructions=  2384649782 cycles=  1659140365 branch_miss=14872948 cache_miss= 6954350 cache_ref= 495325616 items=    524288 avg_time= 519099964 ns]
Kostya<OnDemand>          439849437 ns    439845891 ns            2         14.4102M           312.252M        5.28635M       381.308M    1.40583G              10.2387           2.27415       3.19706G          1.95431G                    14.2334                     1.39015           1.19231M    14.4158M   137.305M       297.705M/s   5.28632M    381.32M   1.40597G         10.2398    2.27352/s 3.19651G/s     1.95431G               14.2334                1.39001   524.288k       1.19198M/s [best: throughput=  0.31 GB/s doc_throughput=     2 docs/s instructions=  1954310876 cycles=  1405827611 branch_miss=14410215 cache_miss= 5286347 cache_ref= 381308064 items=    524288 avg_time= 439782893 ns]
KostyaSum<OnDemand>       439775704 ns    439744847 ns            2         14.4139M           312.366M        5.28517M       380.809M    1.40542G              10.2357           2.27498        3.1973G          1.95746G                    14.2563                     1.39279           1.19275M    14.4197M   137.305M       297.773M/s   5.28519M   380.808M   1.40561G         10.2371    2.27405/s 3.19642G/s     1.95746G               14.2563                1.39261   524.288k       1.19226M/s [best: throughput=  0.31 GB/s doc_throughput=     2 docs/s instructions=  1957456603 cycles=  1405419361 branch_miss=14413852 cache_miss= 5285169 cache_ref= 380808680 items=    524288 avg_time= 439709494 ns]
Kostya<Iter>              438377298 ns    438371247 ns            2         14.4189M           313.344M        5.28721M       361.374M    1.40098G              10.2034            2.2821       3.19717G          1.93177G                    14.0692                     1.37887           1.19648M    14.4229M   137.305M       298.706M/s   5.28719M   361.381M    1.4013G         10.2058    2.28117/s 3.19662G/s     1.93177G               14.0692                1.37855   524.288k       1.19599M/s [best: throughput=  0.31 GB/s doc_throughput=     2 docs/s instructions=  1931766411 cycles=  1400975785 branch_miss=14418909 cache_miss= 5287208 cache_ref= 361373891 items=    524288 avg_time= 438315933 ns]
KostyaSum<Iter>           437577719 ns    437573925 ns            2         14.4055M           313.882M        5.28429M       361.332M    1.39861G              10.1862           2.28602       3.19726G          1.93806G                     14.115                      1.3857           1.19853M    14.4148M   137.305M       299.251M/s   5.28428M   361.347M   1.39877G         10.1873    2.28533/s 3.19665G/s     1.93806G                14.115                1.38554   524.288k       1.19817M/s [best: throughput=  0.31 GB/s doc_throughput=     2 docs/s instructions=  1938057573 cycles=  1398613009 branch_miss=14405453 cache_miss= 5284290 cache_ref= 361331804 items=    524288 avg_time= 437510453 ns]
DistinctUserID<Dom>         2671294 ns      2671281 ns          262         107.665k           239.548M         33.651k       2.83843M     8.4372M              13.3602           379.322       3.20042G          14.1531M                    22.4113                     1.67746           43.6221k    107.844k   631.515k       225.457M/s   33.6676k   2.83918M   8.44352M         13.3703    374.352/s 3.16085G/s     14.1531M               22.4113                1.67621        115       43.0505k/s [best: throughput=  0.24 GB/s doc_throughput=   379 docs/s instructions=    14153103 cycles=     8437198 branch_miss=  107665 cache_miss=   33651 cache_ref=   2838426 items=       115 avg_time=   2641073 ns]
On Demand implementation: fallback
DistinctUserID<OnDemand>    1812279 ns      1812274 ns          386          80.785k           355.404M         22.537k       1.24571M    5.68782M              9.00663           562.781         3.201G           8.5268M                    13.5021                     1.49913           64.7198k     81.032k   631.515k       332.323M/s    22.538k     1.246M   5.69533M         9.01851    551.793/s 3.14264G/s      8.5268M               13.5021                1.49716        115       63.4562k/s [best: throughput=  0.36 GB/s doc_throughput=   562 docs/s instructions=     8526798 cycles=     5687823 branch_miss=   80785 cache_miss=   22537 cache_ref=   1245708 items=       115 avg_time=   1781262 ns]
