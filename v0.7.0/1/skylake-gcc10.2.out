run_benchmark: v0.8.0~37 /home/jkeiser/simdjson_benchmark_results/v0.7.0/1/skylake-gcc10.2.json -DCMAKE_BUILD_TYPE=Release
git reset --hard v0.8.0~37
HEAD is now at 5f7b2bac fuzz on power (#1326)
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- git Version: v0.2.1-5f7b2bac
-- Version: 0.2.1
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 10
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
make[3]: Nothing to be done for '_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build'.
[ 80%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
make[3]: Nothing to be done for 'jsonexamples/generated/CMakeFiles/generated-data.dir/build'.
[ 80%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/g++-10  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/src  -O3 -DNDEBUG -fPIC   -pthread -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/g++-10 -fPIC -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.6 -o ../libsimdjson.so.6.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.6.0.0 ../libsimdjson.so.6 ../libsimdjson.so
[ 90%] Built target simdjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/g++-10  -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/g++-10  -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.6.0.0 ../_deps/google_benchmarks/src/libbenchmark.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/1/skylake-gcc10.2.json --benchmark_out_format=json
2021-01-25 01:25:04
Running benchmark/bench_ondemand
Run on (4 X 4000 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 256 KiB (x4)
  L3 Unified 8192 KiB (x1)
Load Average: 1.00, 0.79, 0.52
On Demand implementation: fallback
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Benchmark                         Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
PartialTweets<OnDemand>     1126830 ns      1126830 ns          621          32.482k           569.448M               0        59.598k    4.09396M              6.48276           901.717       3.69159G           10.657M                    16.8753                     2.60311           90.1717k    32.9833k   631.515k       534.473M/s    15.4348   59.7219k   4.12717M         6.53535    887.445/s 3.66264G/s      10.657M               16.8753                2.58216        100       88.7445k/s [best: throughput=  0.57 GB/s doc_throughput=   901 docs/s instructions=    10657033 cycles=     4093961 branch_miss=   32482 cache_miss=       0 cache_ref=     59598 items=       100 avg_time=   1118759 ns]
PartialTweets<Iter>         1361444 ns      1361426 ns          514          34.145k           470.552M               0        60.648k    4.94703M               7.8336           745.115       3.68611G          12.9418M                    20.4932                     2.61607           74.5115k    34.5088k   631.515k       442.374M/s    2.41829   60.6091k   4.99202M         7.90483    734.524/s 3.66676G/s     12.9418M               20.4932                2.59249        100       73.4524k/s [best: throughput=  0.47 GB/s doc_throughput=   745 docs/s instructions=    12941765 cycles=     4947033 branch_miss=   34145 cache_miss=       0 cache_ref=     60648 items=       100 avg_time=   1353257 ns]
PartialTweets<Dom>           270593 ns       270593 ns         2586           3.848k           2.42064G               0         93.02k    963.195k              1.52521          3.83306k       3.69199G           2.9625M                    4.69109                      3.0757           383.306k    3.98601k   631.515k       2.17354G/s    3.16396   93.0569k   968.349k         1.53338   3.69558k/s 3.57861G/s      2.9625M               4.69109                3.05933        100       369.558k/s [best: throughput=  2.42 GB/s doc_throughput=  3833 docs/s instructions=     2962496 cycles=      963195 branch_miss=    3848 cache_miss=       0 cache_ref=     93020 items=       100 avg_time=    262444 ns]
Creating a source file spanning 44921 KB 
LargeRandom<Dom>           87991452 ns     87974140 ns            8         927.003k           523.764M        10.8609M       15.3803M    323.924M              7.04201           11.3865       3.68835G          974.113M                    21.1769                     3.00723           11.3865M    925.473k   45.9988M       498.645M/s   10.8698M   15.3812M   324.385M         7.05203     11.367/s 3.68727G/s     974.113M               21.1769                3.00295      1000k        11.367M/s [best: throughput=  0.52 GB/s doc_throughput=    11 docs/s instructions=   974112687 cycles=   323923752 branch_miss=  927003 cache_miss=10860896 cache_ref=  15380309 items=   1000000 avg_time=  87976873 ns]
LargeRandomSum<Dom>        88097607 ns     88096491 ns            8         926.801k            523.24M        10.2668M       14.5483M    324.257M              7.04926           11.3751       3.68846G          979.113M                    21.2856                     3.01955           11.3751M    925.731k   45.9988M       497.952M/s    10.281M   14.5504M    324.89M         7.06302    11.3512/s 3.68789G/s     979.113M               21.2856                3.01367      1000k       11.3512M/s [best: throughput=  0.52 GB/s doc_throughput=    11 docs/s instructions=   979112702 cycles=   324257493 branch_miss=  926801 cache_miss=10266781 cache_ref=  14548268 items=   1000000 avg_time=  88083040 ns]
LargeRandom<OnDemand>     130992130 ns    130992893 ns            5         2.39484M            351.52M        5.62676M       8.07186M    482.814M              10.4962           7.64194       3.68964G          1.26997G                    27.6089                     2.63036           7.64194M    2.39464M   45.9988M       334.887M/s   5.69404M   8.07265M   483.186M         10.5043      7.634/s 3.68864G/s     1.26997G               27.6089                2.62833      1000k         7.634M/s [best: throughput=  0.35 GB/s doc_throughput=     7 docs/s instructions=  1269973978 cycles=   482814497 branch_miss= 2394840 cache_miss= 5626757 cache_ref=   8071865 items=   1000000 avg_time= 130978177 ns]
LargeRandomSum<OnDemand>  132231173 ns    132202659 ns            5          2.3903M           348.716M        5.01706M       7.20877M    486.628M              10.5791           7.58098       3.68912G          1.26397G                    27.4784                     2.59741           7.58098M     2.4013M   45.9988M       331.823M/s   5.07224M   7.20901M   487.611M         10.6005    7.56414/s 3.68836G/s     1.26397G               27.4784                2.59218      1000k       7.56414M/s [best: throughput=  0.35 GB/s doc_throughput=     7 docs/s instructions=  1263974261 cycles=   486627774 branch_miss= 2390295 cache_miss= 5017060 cache_ref=   7208765 items=   1000000 avg_time= 132216165 ns]
LargeRandom<Iter>         124366570 ns    124365671 ns            6          2.3936M           370.701M        5.76571M       8.06659M    457.724M              9.95079           8.05892       3.68876G          1.20797G                     26.261                     2.63909           8.05892M    2.40492M   45.9988M       352.733M/s   5.71108M   8.06574M   458.716M         9.97236     8.0408/s 3.68845G/s     1.20797G                26.261                2.63338      1000k        8.0408M/s [best: throughput=  0.37 GB/s doc_throughput=     8 docs/s instructions=  1207973673 cycles=   457724145 branch_miss= 2393603 cache_miss= 5765712 cache_ref=   8066591 items=   1000000 avg_time= 124352001 ns]
LargeRandomSum<Iter>      128933847 ns    128932032 ns            5         2.39846M           358.233M        5.09723M       7.20997M    473.713M              10.2984           7.78789       3.68922G          1.22297G                    26.5871                     2.58168           7.78789M    2.41452M   45.9988M        340.24M/s   5.08624M   7.20927M   475.575M         10.3389    7.75602/s 3.68857G/s     1.22297G               26.5871                2.57157      1000k       7.75602M/s [best: throughput=  0.36 GB/s doc_throughput=     7 docs/s instructions=  1222973897 cycles=   473712846 branch_miss= 2398458 cache_miss= 5097228 cache_ref=   7209974 items=   1000000 avg_time= 128920389 ns]
Creating a source file spanning 134087 KB 
Kostya<Dom>                83769217 ns     83767716 ns            8         459.602k           1.64185G        15.4481M        22.077M    308.487M              2.24673           11.9577        3.6888G          944.977M                    6.88232                     3.06326           6.26929M    460.598k   137.305M       1.52655G/s    15.493M   22.1058M   308.887M         2.24964    11.9378/s 3.68742G/s     944.977M               6.88232                 3.0593   524.288k       6.25883M/s [best: throughput=  1.64 GB/s doc_throughput=    11 docs/s instructions=   944977188 cycles=   308487219 branch_miss=  459602 cache_miss=15448079 cache_ref=  22077027 items=    524288 avg_time=  83754364 ns]
KostyaSum<Dom>             83654927 ns     83653886 ns            8         461.516k           1.64327G        15.2103M       21.5794M    308.099M               2.2439            11.968       3.68734G          947.599M                    6.90141                     3.07563            6.2747M    462.222k   137.305M       1.52862G/s   15.2116M   21.6053M   308.465M         2.24656     11.954/s 3.68739G/s     947.599M               6.90141                3.07199   524.288k       6.26735M/s [best: throughput=  1.64 GB/s doc_throughput=    11 docs/s instructions=   947598644 cycles=   308099193 branch_miss=  461516 cache_miss=15210332 cache_ref=  21579379 items=    524288 avg_time=  83639946 ns]
Kostya<OnDemand>          298138831 ns    298140671 ns            2         3.31895M            460.61M        10.3148M       14.2708M    1099.84M              8.01019           3.35465       3.68958G          2.86133G                    20.8392                     2.60159            1.7588M    3.31795M   137.305M       439.203M/s   10.2625M   14.2711M   1099.87M         8.01045    3.35412/s 3.68911G/s     2.86133G               20.8392                 2.6015   524.288k       1.75853M/s [best: throughput=  0.46 GB/s doc_throughput=     3 docs/s instructions=  2861328530 cycles=  1099839621 branch_miss= 3318955 cache_miss=10314773 cache_ref=  14270842 items=    524288 avg_time= 298120592 ns]
KostyaSum<OnDemand>       297248635 ns    297179615 ns            2         3.31595M            462.25M        9.88737M       13.6945M    1095.96M              7.98192           3.36659       3.68964G          2.85713G                    20.8087                     2.60698           1.76506M    3.31454M   137.305M       440.623M/s   9.93815M   13.7564M   1096.34M         7.98471    3.36497/s 3.68915G/s     2.85713G               20.8087                2.60606   524.288k       1.76421M/s [best: throughput=  0.46 GB/s doc_throughput=     3 docs/s instructions=  2857134377 cycles=  1095957697 branch_miss= 3315947 cache_miss= 9887370 cache_ref=  13694492 items=    524288 avg_time= 297230473 ns]
Kostya<Iter>              297120312 ns    297051126 ns            2         3.31437M           462.189M        10.3146M       14.1973M    1095.92M              7.98162           3.36615       3.68902G          2.84822G                    20.7438                     2.59894           1.76483M     3.3153M   137.305M       440.814M/s    10.268M   14.2269M   1095.75M         7.98039    3.36642/s 3.68875G/s     2.84822G               20.7438                2.59934   524.288k       1.76498M/s [best: throughput=  0.46 GB/s doc_throughput=     3 docs/s instructions=  2848221590 cycles=  1095916158 branch_miss= 3314371 cache_miss=10314611 cache_ref=  14197270 items=    524288 avg_time= 297100571 ns]
KostyaSum<Iter>           362668216 ns    362584343 ns            2         3.29675M           378.685M        10.1077M       13.9066M     1.3372G              9.73893           2.75799       3.68799G          3.52927G                    25.7039                     2.63929           1.44598M     3.2969M   137.305M       361.141M/s   10.1302M   13.9077M   1.33738G         9.74022    2.75798/s 3.68847G/s     3.52927G               25.7039                2.63894   524.288k       1.44598M/s [best: throughput=  0.38 GB/s doc_throughput=     2 docs/s instructions=  3529271349 cycles=  1337203721 branch_miss= 3296754 cache_miss=10107710 cache_ref=  13906589 items=    524288 avg_time= 362649395 ns]
DistinctUserID<Dom>          302493 ns       302485 ns         2312           4.718k           2.16396G               0       105.358k    1077.48k              1.70618          3.42662k       3.69211G          3.27962M                    5.19326                     3.04379           394.061k    4.95733k   631.515k       1.94437G/s   0.865052   105.377k   1085.68k         1.71917   3.30595k/s  3.5892G/s     3.27962M               5.19326                 3.0208        115       380.184k/s [best: throughput=  2.16 GB/s doc_throughput=  3426 docs/s instructions=     3279624 cycles=     1077479 branch_miss=    4718 cache_miss=       0 cache_ref=    105358 items=       115 avg_time=    294239 ns]
On Demand implementation: fallback
DistinctUserID<OnDemand>    1103666 ns      1103445 ns          634          32.434k           581.502M               0        57.655k    4.00907M              6.34833           920.804       3.69157G          10.3192M                    16.3404                     2.57397           105.893k     32.634k   631.515k       545.799M/s    24.5142   57.7526k   4.04072M         6.39846    906.252/s 3.66191G/s     10.3192M               16.3404                2.55381        115       104.219k/s [best: throughput=  0.58 GB/s doc_throughput=   920 docs/s instructions=    10319238 cycles=     4009068 branch_miss=   32434 cache_miss=       0 cache_ref=     57655 items=       115 avg_time=   1095520 ns]
