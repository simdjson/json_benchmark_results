run_benchmark: v0.8.0~34 /home/jkeiser/simdjson_benchmark_results/v0.7.0/4/skylake-x-gcc10.2-native.json -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native
git reset --hard v0.8.0~34
HEAD is now at 9a404bdc Reenabling the optimized kernels (main branch). (#1344)
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- git Version: v0.2.1-9a404bdc
-- Version: 0.2.1
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 10
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
make[3]: Nothing to be done for '_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build'.
[ 80%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
make[3]: Nothing to be done for 'jsonexamples/generated/CMakeFiles/generated-data.dir/build'.
[ 80%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/g++-10  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/src  -march=native -O3 -DNDEBUG -fPIC   -pthread -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/g++-10 -fPIC -march=native -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.6 -o ../libsimdjson.so.6.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.6.0.0 ../libsimdjson.so.6 ../libsimdjson.so
[ 90%] Built target simdjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/g++-10  -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/g++-10  -march=native -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.6.0.0 ../_deps/google_benchmarks/src/libbenchmark.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/4/skylake-x-gcc10.2-native.json --benchmark_out_format=json
2021-01-24 23:59:48
Running benchmark/bench_ondemand
Run on (4 X 3200 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 1024 KiB (x4)
  L3 Unified 8448 KiB (x1)
Load Average: 1.00, 1.00, 1.00
***WARNING*** CPU scaling is enabled, the benchmark real time measurements may be noisy and will incur extra overhead.
On Demand implementation: haswell
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Benchmark                         Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
PartialTweets<OnDemand>      244147 ns       244145 ns         2861           2.402k           2.76915G               0         5.021k    728.284k              1.15323          4.38493k       3.19347G          2.21746M                    3.51134                     3.04478           438.493k    2.53472k   631.515k         2.409G/s  0.0122335   5.05181k   733.087k         1.16084   4.09593k/s 3.00267G/s     2.21746M               3.51134                3.02483        100       409.593k/s [best: throughput=  2.77 GB/s doc_throughput=  4384 docs/s instructions=     2217464 cycles=      728284 branch_miss=    2402 cache_miss=       0 cache_ref=      5021 items=       100 avg_time=    229718 ns]
PartialTweets<Dom>           340513 ns       340507 ns         2053           3.725k           1.96235G               0        31.739k     1027.8k              1.62751          3.10737k       3.19374G          3.07043M                    4.86201                     2.98739           310.737k    3.87552k   631.515k       1.72726G/s  0.0754993   31.2646k   1033.72k         1.63688    2.9368k/s 3.03582G/s     3.07043M               4.86201                2.97029        100        293.68k/s [best: throughput=  1.96 GB/s doc_throughput=  3107 docs/s instructions=     3070434 cycles=     1027797 branch_miss=    3725 cache_miss=       0 cache_ref=     31739 items=       100 avg_time=    323978 ns]
Creating a source file spanning 44921 KB 
LargeRandom<Dom>           98865934 ns     98856504 ns            7         853.748k           465.992M        6.78119M        6.8957M    314.765M               6.8429           10.1305       3.18873G          989.581M                    21.5132                     3.14387           10.1305M    852.867k   45.9988M       443.753M/s   6.82021M   6.89576M   315.098M         6.85014    10.1157/s 3.18743G/s     989.581M               21.5132                3.14055      1000k       10.1157M/s [best: throughput=  0.47 GB/s doc_throughput=    10 docs/s instructions=   989581016 cycles=   314764900 branch_miss=  853748 cache_miss= 6781191 cache_ref=   6895705 items=   1000000 avg_time=  98838355 ns]
LargeRandomSum<Dom>        98397351 ns     98389515 ns            7         854.003k           468.359M        6.42588M       6.51947M    313.168M              6.80818            10.182       3.18867G          994.581M                    21.6219                     3.17587            10.182M    853.215k   45.9988M       445.859M/s    6.4474M   6.51968M   313.632M         6.81827    10.1637/s 3.18766G/s     994.581M               21.6219                3.17117      1000k       10.1637M/s [best: throughput=  0.47 GB/s doc_throughput=    10 docs/s instructions=   994581028 cycles=   313167763 branch_miss=  854003 cache_miss= 6425878 cache_ref=   6519466 items=   1000000 avg_time=  98369528 ns]
LargeRandom<OnDemand>      65837645 ns     65834686 ns           11         867.839k           699.664M        3.50073M       3.57245M     209.65M              4.55773           15.2105       3.18888G          640.959M                    13.9343                     3.05728           15.2105M    868.013k   45.9988M       666.333M/s   3.49848M   3.57245M   209.832M         4.56168    15.1896/s 3.18725G/s     640.959M               13.9343                3.05463      1000k       15.1896M/s [best: throughput=  0.70 GB/s doc_throughput=    15 docs/s instructions=   640958909 cycles=   209649907 branch_miss=  867839 cache_miss= 3500725 cache_ref=   3572448 items=   1000000 avg_time=  65811113 ns]
LargeRandomSum<OnDemand>   63384684 ns     63378162 ns           11           871.5k           727.864M        3.08181M       3.19643M    201.535M              4.38131           15.8235         3.189G          594.958M                    12.9342                     2.95213           15.8235M    873.323k   45.9988M        692.16M/s   3.10473M   3.19643M       202M         4.39143    15.7783/s 3.18722G/s     594.958M               12.9342                2.94533      1000k       15.7783M/s [best: throughput=  0.73 GB/s doc_throughput=    15 docs/s instructions=   594958339 cycles=   201534972 branch_miss=  871500 cache_miss= 3081813 cache_ref=   3196431 items=   1000000 avg_time=  63358864 ns]
Creating a source file spanning 134087 KB 
Kostya<Dom>                98572242 ns     98569076 ns            7         449.992k           1.39694G         10.183M       10.3136M    313.403M              2.28253            10.174       3.18855G          972.126M                    7.08005                     3.10184           5.33409M     450.16k   137.305M       1.29732G/s   10.2207M   10.3139M   314.183M         2.28821    10.1452/s 3.18744G/s     972.126M               7.08005                3.09414   524.288k       5.31899M/s [best: throughput=  1.40 GB/s doc_throughput=    10 docs/s instructions=   972125798 cycles=   313402765 branch_miss=  449992 cache_miss=10182957 cache_ref=  10313632 items=    524288 avg_time=  98542802 ns]
KostyaSum<Dom>             97794812 ns     97792065 ns            7         446.476k           1.40808G        9.97485M       10.1173M    310.922M              2.26446           10.2551       3.18854G          974.747M                    7.09914                     3.13502           5.37663M    446.735k   137.305M       1.30762G/s   10.0159M   10.1172M    311.68M         2.26998    10.2258/s 3.18717G/s     974.747M               7.09914                 3.1274   524.288k       5.36125M/s [best: throughput=  1.41 GB/s doc_throughput=    10 docs/s instructions=   974747251 cycles=   310921920 branch_miss=  446476 cache_miss= 9974855 cache_ref=  10117309 items=    524288 avg_time=  97764588 ns]
Kostya<OnDemand>           69929707 ns     69924034 ns           10         458.074k           1.97008G        6.45976M       6.47108M    222.116M              1.61768           14.3482       3.18696G          685.012M                    4.98898                     3.08403           7.52258M    457.464k   137.305M       1.82877G/s   6.39043M   6.47087M   222.852M         1.62304    14.3012/s 3.18705G/s     685.012M               4.98898                3.07385   524.288k       7.49797M/s [best: throughput=  1.97 GB/s doc_throughput=    14 docs/s instructions=   685012177 cycles=   222115745 branch_miss=  458074 cache_miss= 6459755 cache_ref=   6471077 items=    524288 avg_time=  69900639 ns]
KostyaSum<OnDemand>        69512206 ns     69510108 ns           10         466.891k           1.98002G        6.22535M       6.27318M    221.113M              1.61038           14.4206       3.18859G          676.623M                    4.92789                     3.06007           7.56055M    466.996k   137.305M       1.83966G/s   6.18059M   6.27328M   221.532M         1.61343    14.3864/s 3.18704G/s     676.623M               4.92789                 3.0543   524.288k       7.54262M/s [best: throughput=  1.98 GB/s doc_throughput=    14 docs/s instructions=   676623278 cycles=   221113396 branch_miss=  466891 cache_miss= 6225349 cache_ref=   6273178 items=    524288 avg_time=  69483024 ns]
DistinctUserID<Dom>          341460 ns       341432 ns         2055           4.038k           1.97522G               0        32.193k       1021k              1.61675          3.12775k       3.19343G          3.02096M                    4.78367                     2.95883           359.691k    4.18308k   631.515k       1.72258G/s   0.129927   32.5346k   1030.03k         1.63105   2.92884k/s  3.0168G/s     3.02096M               4.78367                2.93288        115       336.816k/s [best: throughput=  1.98 GB/s doc_throughput=  3127 docs/s instructions=     3020962 cycles=     1021000 branch_miss=    4038 cache_miss=       0 cache_ref=     32193 items=       115 avg_time=    322926 ns]
On Demand implementation: haswell
DistinctUserID<OnDemand>     235490 ns       235484 ns         2991           2.065k           2.90599G               0         2.464k    694.005k              1.09895          4.60162k       3.19354G          2.17925M                    3.45083                     3.14011           529.186k    2.22102k   631.515k        2.4976G/s  0.0234035   2.44639k   698.819k         1.10657   4.24657k/s 2.96758G/s     2.17925M               3.45083                3.11848        115       488.356k/s [best: throughput=  2.91 GB/s doc_throughput=  4601 docs/s instructions=     2179253 cycles=      694005 branch_miss=    2065 cache_miss=       0 cache_ref=      2464 items=       115 avg_time=    218974 ns]
FindTweet<Dom>               323316 ns       323290 ns         2164           3.607k           2.09121G               0        26.474k    964.501k              1.52728          3.31141k       3.19386G          2.93086M                      4.641                     3.03873           3.31141k    3.71929k   631.515k       1.81925G/s   0.280961   26.6859k   969.987k         1.53597    3.0932k/s 3.00037G/s     2.93086M                 4.641                3.02155          1        3.0932k/s [best: throughput=  2.09 GB/s doc_throughput=  3311 docs/s instructions=     2930861 cycles=      964501 branch_miss=    3607 cache_miss=       0 cache_ref=     26474 items=         1 avg_time=    304059 ns]
On Demand implementation: haswell
FindTweet<OnDemand>          168890 ns       168887 ns         4140           1.196k           4.17048G               0         2.007k    483.624k             0.765816          6.60393k       3.19382G          1.57077M                     2.4873                     3.24792           6.60393k    1.26283k   631.515k       3.48248G/s   4.58937m   1.89649k   486.144k        0.769806   5.92113k/s 2.87852G/s     1.57077M                2.4873                3.23108          1       5.92113k/s [best: throughput=  4.17 GB/s doc_throughput=  6603 docs/s instructions=     1570770 cycles=      483624 branch_miss=    1196 cache_miss=       0 cache_ref=      2007 items=         1 avg_time=    152316 ns]
