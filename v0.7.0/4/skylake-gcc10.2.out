run_benchmark: v0.8.0~34 /home/jkeiser/simdjson_benchmark_results/v0.7.0/4/skylake-gcc10.2.json -DCMAKE_BUILD_TYPE=Release
git reset --hard v0.8.0~34
HEAD is now at 9a404bdc Reenabling the optimized kernels (main branch). (#1344)
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- git Version: v0.2.1-9a404bdc
-- Version: 0.2.1
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 10
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
make[3]: Nothing to be done for '_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build'.
[ 80%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
make[3]: Nothing to be done for 'jsonexamples/generated/CMakeFiles/generated-data.dir/build'.
[ 80%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/g++-10  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/src  -O3 -DNDEBUG -fPIC   -pthread -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/g++-10 -fPIC -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.6 -o ../libsimdjson.so.6.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.6.0.0 ../libsimdjson.so.6 ../libsimdjson.so
[ 90%] Built target simdjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/g++-10  -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/g++-10  -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.6.0.0 ../_deps/google_benchmarks/src/libbenchmark.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/4/skylake-gcc10.2.json --benchmark_out_format=json
2021-01-25 01:23:40
Running benchmark/bench_ondemand
Run on (4 X 4000 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 256 KiB (x4)
  L3 Unified 8192 KiB (x1)
Load Average: 1.01, 0.72, 0.47
On Demand implementation: fallback
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Benchmark                         Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
PartialTweets<OnDemand>     1124806 ns      1124602 ns          622          31.617k           568.624M               0        60.068k    4.09991M              6.49218           900.413       3.69161G          10.6701M                     16.896                     2.60251           90.0413k    32.0808k   631.515k       535.531M/s    16.5113   59.8826k   4.11882M         6.52213    889.203/s 3.66247G/s     10.6701M                16.896                2.59056        100       88.9203k/s [best: throughput=  0.57 GB/s doc_throughput=   900 docs/s instructions=    10670057 cycles=     4099906 branch_miss=   31617 cache_miss=       0 cache_ref=     60068 items=       100 avg_time=   1116688 ns]
PartialTweets<Dom>           271792 ns       271786 ns         2579           3.849k            2.4103G               0        93.336k    967.319k              1.53174          3.81669k       3.69196G           2.9625M                    4.69109                     3.06258           381.669k    4.01684k   631.515k         2.164G/s   0.969756   93.2546k   972.621k         1.54014   3.67937k/s 3.57863G/s      2.9625M               4.69109                3.04589        100       367.937k/s [best: throughput=  2.41 GB/s doc_throughput=  3816 docs/s instructions=     2962496 cycles=      967319 branch_miss=    3849 cache_miss=       0 cache_ref=     93336 items=       100 avg_time=    263635 ns]
Creating a source file spanning 44921 KB 
LargeRandom<Dom>           90079623 ns     90076564 ns            8         1.14269M           511.096M        10.8229M       15.4006M    331.948M              7.21646           11.1111        3.6883G          974.113M                    21.1769                     2.93453           11.1111M    1.14449M   45.9988M       487.006M/s    10.849M   15.4012M    332.18M          7.2215    11.1017/s 3.68775G/s     974.113M               21.1769                2.93248      1000k       11.1017M/s [best: throughput=  0.51 GB/s doc_throughput=    11 docs/s instructions=   974112690 cycles=   331948213 branch_miss= 1142687 cache_miss=10822932 cache_ref=  15400570 items=   1000000 avg_time=  90066062 ns]
LargeRandomSum<Dom>        90007265 ns     90006659 ns            8         1.14067M           512.459M         10.203M       14.5456M    331.072M              7.19741           11.1407       3.68838G          979.113M                    21.2856                      2.9574           11.1407M    1.14275M   45.9988M       487.385M/s   10.2596M   14.5487M   331.922M          7.2159    11.1103/s 3.68775G/s     979.113M               21.2856                2.94982      1000k       11.1103M/s [best: throughput=  0.51 GB/s doc_throughput=    11 docs/s instructions=   979112703 cycles=   331072132 branch_miss= 1140668 cache_miss=10202988 cache_ref=  14545617 items=   1000000 avg_time=  89993567 ns]
LargeRandom<OnDemand>     129782551 ns    129753486 ns            5         2.38878M           354.763M        5.60898M       8.07056M    478.395M              10.4002           7.71245        3.6896G          1.25797G                     27.348                     2.62957           7.71245M    2.38774M   45.9988M       338.086M/s    5.6864M   8.07226M   478.622M         10.4051    7.70692/s  3.6887G/s     1.25797G                27.348                2.62832      1000k       7.70692M/s [best: throughput=  0.35 GB/s doc_throughput=     7 docs/s instructions=  1257973685 cycles=   478395246 branch_miss= 2388778 cache_miss= 5608979 cache_ref=   8070558 items=   1000000 avg_time= 129768614 ns]
LargeRandomSum<OnDemand>  126978087 ns    126975451 ns            6         2.39177M           362.526M        5.08002M       7.20583M    468.135M              10.1771           7.88121       3.68947G          1.22397G                    26.6088                     2.61458           7.88121M    2.39362M   45.9988M       345.483M/s   5.10359M   7.20694M   468.363M         10.1821    7.87554/s 3.68861G/s     1.22397G               26.6088                 2.6133      1000k       7.87554M/s [best: throughput=  0.36 GB/s doc_throughput=     7 docs/s instructions=  1223973678 cycles=   468134692 branch_miss= 2391770 cache_miss= 5080016 cache_ref=   7205832 items=   1000000 avg_time= 126964087 ns]
Creating a source file spanning 134087 KB 
Kostya<Dom>                84169767 ns     84152916 ns            8         464.951k           1.63327G        15.4913M       22.1684M    310.081M              2.25833           11.8952       3.68846G          944.977M                    6.88232                     3.04752           6.23649M    464.949k   137.305M       1.51956G/s   15.5178M   22.1294M   310.319M         2.26007    11.8831/s 3.68756G/s     944.977M               6.88232                3.04518   524.288k       6.23018M/s [best: throughput=  1.63 GB/s doc_throughput=    11 docs/s instructions=   944977191 cycles=   310080595 branch_miss=  464951 cache_miss=15491273 cache_ref=  22168395 items=    524288 avg_time=  84154782 ns]
KostyaSum<Dom>             83736776 ns     83733061 ns            8         464.499k           1.64217G        15.1822M       21.6073M    308.372M              2.24589             11.96       3.68814G          947.599M                    6.90141                     3.07291            6.2705M    464.479k   137.305M       1.52718G/s   15.2016M   21.6374M   308.799M           2.249    11.9427/s  3.6879G/s     947.599M               6.90141                3.06866   524.288k       6.26142M/s [best: throughput=  1.64 GB/s doc_throughput=    11 docs/s instructions=   947598643 cycles=   308372057 branch_miss=  464499 cache_miss=15182243 cache_ref=  21607312 items=    524288 avg_time=  83722367 ns]
Kostya<OnDemand>          297026470 ns    297021598 ns            2           3.322M           462.317M        10.1958M       14.1453M    1095.78M              7.98062           3.36708       3.68958G          2.86185G                     20.843                     2.61171           1.76532M      3.322M   137.305M       440.858M/s   10.2506M   14.2058M   1095.81M         7.98082    3.36676/s 3.68932G/s     2.86185G                20.843                2.61164   524.288k       1.76515M/s [best: throughput=  0.46 GB/s doc_throughput=     3 docs/s instructions=  2861852787 cycles=  1095778867 branch_miss= 3321996 cache_miss=10195768 cache_ref=  14145290 items=    524288 avg_time= 297009180 ns]
KostyaSum<OnDemand>       298184390 ns    298179851 ns            2         3.30958M           460.979M        9.89227M       13.8189M    1098.83M              8.00283           3.35733       3.68913G          2.85923G                    20.8239                     2.60207           1.76021M    3.30968M   137.305M       439.145M/s   9.94185M   13.7571M   1099.32M         8.00642    3.35368/s 3.68677G/s     2.85923G               20.8239                 2.6009   524.288k       1.75829M/s [best: throughput=  0.46 GB/s doc_throughput=     3 docs/s instructions=  2859231359 cycles=  1098828632 branch_miss= 3309584 cache_miss= 9892275 cache_ref=  13818902 items=    524288 avg_time= 298165869 ns]
DistinctUserID<Dom>          269936 ns       269887 ns         2596           4.223k           2.42901G               0        94.366k    959.965k               1.5201          3.84632k       3.69233G          2.91303M                    4.61276                     3.03452           442.326k    4.36923k   631.515k       2.17922G/s    6.03274   94.4488k   965.345k         1.52862   3.70525k/s 3.57684G/s     2.91303M               4.61276                3.01761        115       426.104k/s [best: throughput=  2.43 GB/s doc_throughput=  3846 docs/s instructions=     2913030 cycles=      959965 branch_miss=    4223 cache_miss=       0 cache_ref=     94366 items=       115 avg_time=    261635 ns]
On Demand implementation: fallback
DistinctUserID<OnDemand>    1101729 ns      1101720 ns          635          31.001k           581.278M               0        57.756k     4.0106M              6.35075           920.449       3.69155G          10.3373M                    16.3691                     2.57751           105.852k    31.6187k   631.515k       546.654M/s   0.662992   57.7775k   4.03468M         6.38889    907.671/s 3.66216G/s     10.3373M               16.3691                2.56212        115       104.382k/s [best: throughput=  0.58 GB/s doc_throughput=   920 docs/s instructions=    10337340 cycles=     4010597 branch_miss=   31001 cache_miss=       0 cache_ref=     57756 items=       115 avg_time=   1093634 ns]
FindTweet<Dom>               255383 ns       255333 ns         2740           3.671k           2.57251G               0        83.559k    906.342k              1.43519          4.07355k       3.69203G          2.82292M                    4.47008                     3.11463           4.07355k    3.87757k   631.515k       2.30344G/s    5.10876   83.6929k    912.01k         1.44416   3.91645k/s 3.57184G/s     2.82292M               4.47008                3.09528          1       3.91645k/s [best: throughput=  2.57 GB/s doc_throughput=  4073 docs/s instructions=     2822922 cycles=      906342 branch_miss=    3671 cache_miss=       0 cache_ref=     83559 items=         1 avg_time=    247222 ns]
On Demand implementation: fallback
FindTweet<OnDemand>         1042869 ns      1042876 ns          671          30.713k           613.533M               9        30.991k    3.79969M              6.01678           971.526       3.69149G          9.73182M                    15.4103                     2.56122            971.526    30.9855k   631.515k       577.499M/s    5.49031    30.883k   3.81758M         6.04512    958.886/s 3.66063G/s     9.73182M               15.4103                2.54921          1        958.886/s [best: throughput=  0.61 GB/s doc_throughput=   971 docs/s instructions=     9731823 cycles=     3799687 branch_miss=   30713 cache_miss=       9 cache_ref=     30991 items=         1 avg_time=   1034794 ns]
