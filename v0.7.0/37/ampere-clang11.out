run_benchmark: v0.8.0~1 /home/jkeiser/simdjson_benchmark_results/v0.7.0/37/skylake-clang11.json 
git reset --hard v0.8.0~1
HEAD is now at 1005c62e It seems that we export too many targets. (#1385)
cmake ..
-- The CXX compiler identification is Clang 11.0.0
-- The C compiler identification is Clang 11.0.0
-- Check for working CXX compiler: /usr/bin/clang++-11
-- Check for working CXX compiler: /usr/bin/clang++-11 -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Check for working C compiler: /usr/bin/clang-11
-- Check for working C compiler: /usr/bin/clang-11 -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- No build type selected, default to Release
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed
-- Check if compiler accepts -pthread
-- Check if compiler accepts -pthread - yes
-- Found Threads: TRUE  
-- Looking for fork
-- Looking for fork - found
-- Looking for wait
-- Looking for wait - found
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Found Git: /usr/bin/git (found version "2.27.0") 
-- git Version: v0.2.1-1005c62e
-- Version: 0.2.1
-- Performing Test HAVE_CXX_FLAG_STD_CXX11
-- Performing Test HAVE_CXX_FLAG_STD_CXX11 - Success
-- Performing Test HAVE_CXX_FLAG_WALL
-- Performing Test HAVE_CXX_FLAG_WALL - Success
-- Performing Test HAVE_CXX_FLAG_WEXTRA
-- Performing Test HAVE_CXX_FLAG_WEXTRA - Success
-- Performing Test HAVE_CXX_FLAG_WSHADOW
-- Performing Test HAVE_CXX_FLAG_WSHADOW - Success
-- Performing Test HAVE_CXX_FLAG_WERROR
-- Performing Test HAVE_CXX_FLAG_WERROR - Success
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32 - Success
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED - Success
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WD654
-- Performing Test HAVE_CXX_FLAG_WD654 - Failed
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY - Success
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES -- failed to compile
-- Performing Test HAVE_CXX_FLAG_COVERAGE
-- Performing Test HAVE_CXX_FLAG_COVERAGE - Success
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Performing Test USE_BOOST_JSON
-- Performing Test USE_BOOST_JSON - Failed
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Found Python3: /usr/bin/python3.8 (found version "3.8.6") found components: Interpreter 
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
make[1]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[2]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
Scanning dependencies of target benchmark
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[  0%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/benchmark.cc.o
[ 10%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o
[ 10%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/benchmark_name.cc.o
[ 10%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/benchmark_register.cc.o
[ 20%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/benchmark_runner.cc.o
[ 20%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/colorprint.cc.o
[ 30%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/commandlineflags.cc.o
[ 30%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/complexity.cc.o
[ 30%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/console_reporter.cc.o
[ 40%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/counter.cc.o
[ 40%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/csv_reporter.cc.o
[ 50%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/json_reporter.cc.o
[ 50%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/reporter.cc.o
[ 60%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/sleep.cc.o
[ 60%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/statistics.cc.o
[ 60%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/string_util.cc.o
[ 70%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/sysinfo.cc.o
[ 70%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/timers.cc.o
[ 80%] Linking CXX static library libbenchmark.a
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 80%] Built target benchmark
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
Scanning dependencies of target generated-data
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 80%] Generating utf-8.json, escape.json, 0-structurals.json, 7-structurals.json, 15-structurals.json, 23-structurals.json
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-miss.json ...
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 80%] Built target generated-data
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
Scanning dependencies of target simdjson
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 80%] Building CXX object src/CMakeFiles/simdjson.dir/simdjson.cpp.o
[ 80%] Linking CXX shared library ../libsimdjson.so
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 80%] Built target simdjson
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
Scanning dependencies of target yyjson
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 80%] Building C object dependencies/CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o
[ 90%] Linking C static library libyyjson.a
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 90%] Built target yyjson
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
Scanning dependencies of target bench_ondemand
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[100%] Building CXX object benchmark/CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o
[100%] Linking CXX executable bench_ondemand
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[100%] Built target bench_ondemand
make[2]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[1]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/37/skylake-clang11.json --benchmark_out_format=json
2021-01-23 04:49:40
Running benchmark/bench_ondemand
Run on (32 X 3300 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x32)
  L1 Instruction 32 KiB (x32)
  L2 Unified 256 KiB (x16)
Load Average: 0.99, 1.00, 0.92
simdjson::dom implementation:      arm64
simdjson::ondemand implementation: arm64

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                 1572814 ns      1643188 ns          445          14.036k           405.677M         25.957k       961.297k    4.98321M              7.89088           642.387       3.20115G          3.94988M                    6.25461                    0.792638           64.2387k    14.1697k   631.515k       382.919M/s    25.961k   962.545k   5.02966M         7.96444    635.803/s 3.19787G/s     3.94988M               6.25461               0.785317        100       63.5803k/s [BEST: throughput=  0.41 GB/s doc_throughput=   642 docs/s instructions=     3949878 cycles=     4983208 branch_miss=   14036 cache_miss=   25957 cache_ref=    961297 items=       100 avg_time=   1572813 ns]
partial_tweets<simdjson_ondemand>/manual_time            1053460 ns      1123984 ns          664           8.881k           601.666M         22.847k       446.733k    3.36105M               5.3222           952.735       3.20219G          2.72662M                    4.31758                    0.811241           95.2735k    9.16912k   631.515k       571.696M/s   22.8521k   447.794k   3.36965M         5.33582    949.253/s 3.19865G/s     2.72661M               4.31758               0.809168        100       94.9253k/s [BEST: throughput=  0.60 GB/s doc_throughput=   952 docs/s instructions=     2726617 cycles=     3361046 branch_miss=    8881 cache_miss=   22847 cache_ref=    446733 items=       100 avg_time=   1053460 ns]
partial_tweets<yyjson>/manual_time                       1196813 ns      1269234 ns          586          46.495k           596.276M           24.3k         1.409M    3.39063M              5.36904           944.199       3.20143G          3.27052M                    5.17884                    0.964576           94.4199k    46.2815k   631.515k        503.22M/s   24.2952k   1.41051M   3.60518M         5.70877    835.553/s 3.01231G/s     3.27059M               5.17895               0.907192        100       83.5553k/s [BEST: throughput=  0.60 GB/s doc_throughput=   944 docs/s instructions=     3270516 cycles=     3390627 branch_miss=   46495 cache_miss=   24300 cache_ref=   1409004 items=       100 avg_time=   1196812 ns]
partial_tweets<yyjson_insitu>/manual_time                1117472 ns      1190415 ns          629          46.333k           621.183M         14.348k       1.25188M    3.25536M              5.15485           983.639        3.2021G          3.17138M                    5.02185                    0.974201           98.3639k    46.2726k   631.515k       538.948M/s   14.3899k   1.25137M   3.46346M         5.48436    894.877/s 3.09937G/s     3.17152M               5.02209               0.915711        100       89.4877k/s [BEST: throughput=  0.62 GB/s doc_throughput=   983 docs/s instructions=     3171376 cycles=     3255362 branch_miss=   46333 cache_miss=   14348 cache_ref=   1251880 items=       100 avg_time=   1117472 ns]
partial_tweets<sajson>/manual_time                       1468783 ns      1541238 ns          477          57.977k           431.054M         12.708k       1.86883M    4.69014M               7.4268           682.571       3.20135G           5.5518M                    8.79125                     1.18372           68.2571k    58.3305k   631.515k        410.04M/s   12.7281k   1.86903M   4.69703M         7.43772    680.836/s 3.19791G/s     5.55181M               8.79125                1.18198        100       68.0836k/s [BEST: throughput=  0.43 GB/s doc_throughput=   682 docs/s instructions=     5551804 cycles=     4690136 branch_miss=   57977 cache_miss=   12708 cache_ref=   1868834 items=       100 avg_time=   1468782 ns]
partial_tweets<rapidjson>/manual_time                    4689552 ns      4763247 ns          152          84.475k           137.197M         12.894k       13.4797M    14.7315M              23.3273           217.251       3.20044G          20.6793M                    32.7455                     1.40374           21.7251k    84.1069k   631.515k       128.426M/s   13.1068k   13.4817M   14.7767M         23.3989     213.24/s 3.15099G/s     20.6797M               32.7461                1.39948        100        21.324k/s [BEST: throughput=  0.14 GB/s doc_throughput=   217 docs/s instructions=    20679253 cycles=    14731548 branch_miss=   84475 cache_miss=   12894 cache_ref=  13479673 items=       100 avg_time=   4689552 ns]
partial_tweets<rapidjson_insitu>/manual_time             2933507 ns      3008089 ns          237          60.672k            217.44M         13.685k       5.85772M    9.24925M              14.6461           344.314       3.18465G          12.8211M                    20.3021                     1.38618           34.4314k    60.6658k   631.515k       205.304M/s   13.7813k    5.8578M    9.2247M         14.6072    340.889/s  3.1446G/s     12.8217M               20.3031                1.38993        100       34.0889k/s [BEST: throughput=  0.22 GB/s doc_throughput=   344 docs/s instructions=    12821101 cycles=     9249248 branch_miss=   60672 cache_miss=   13685 cache_ref=   5857716 items=       100 avg_time=   2933507 ns]
partial_tweets<nlohmann_json>/manual_time               22833499 ns     22931173 ns           31         416.747k            29.412M        198.268k       50.9436M    68.6341M              108.682           46.5737       3.19654G          81.5271M                    129.098                     1.18785           4.65737k    453.019k   631.515k       26.3761M/s   255.404k   51.1727M   72.9898M         115.579    43.7953/s 3.19661G/s      81.892M               129.675                1.12197        100       4.37953k/s [BEST: throughput=  0.03 GB/s doc_throughput=    46 docs/s instructions=    81527150 cycles=    68634093 branch_miss=  416747 cache_miss=  198268 cache_ref=  50943607 items=       100 avg_time=  22833499 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                 311140169 ns    314758090 ns            2         1.92192M           147.841M        3.98125M       231.766M    994.499M              21.6201           3.21403       3.19635G          1040.92M                    22.6292                     1.04667           3.21403M    1.92107M   45.9988M       140.991M/s   3.98126M   231.761M   994.617M         21.6227    3.21399/s 3.19669G/s     1040.92M               22.6292                1.04655      1000k       3.21399M/s [BEST: throughput=  0.15 GB/s doc_throughput=     3 docs/s instructions=  1040915692 cycles=   994498509 branch_miss= 1921920 cache_miss= 3981249 cache_ref= 231765724 items=   1000000 avg_time= 311140168 ns]
large_random<simdjson_ondemand>/manual_time            198052562 ns    201670918 ns            4         1.20486M           232.276M        2.31779M       143.315M    633.148M              13.7645            5.0496       3.19715G          662.774M                    14.4085                     1.04679            5.0496M    1.20454M   45.9988M       221.496M/s   2.31779M   143.315M   633.152M         13.7645    5.04916/s 3.19689G/s     662.774M               14.4085                1.04678      1000k       5.04916M/s [BEST: throughput=  0.23 GB/s doc_throughput=     5 docs/s instructions=   662773945 cycles=   633148396 branch_miss= 1204855 cache_miss= 2317791 cache_ref= 143314556 items=   1000000 avg_time= 198052562 ns]
large_random<simdjson_ondemand_unordered>/manual_time  188144050 ns    191763145 ns            4         1.20525M           244.511M        2.31778M       141.233M    601.477M              13.0759            5.3156       3.19721G          674.774M                    14.6694                     1.12186            5.3156M    1.20513M   45.9988M       233.161M/s   2.31781M   141.233M   601.503M         13.0765    5.31508/s 3.19704G/s     674.774M               14.6694                1.12181      1000k       5.31508M/s [BEST: throughput=  0.24 GB/s doc_throughput=     5 docs/s instructions=   674773942 cycles=   601476817 branch_miss= 1205246 cache_miss= 2317783 cache_ref= 141232883 items=   1000000 avg_time= 188144050 ns]
large_random<yyjson>/manual_time                       204528339 ns    208152579 ns            3         1.57387M           224.981M        4.91253M       205.607M    628.544M              13.6644           4.89101       3.07422G          816.384M                     17.748                     1.29885           4.89101M    1.57638M   45.9988M       214.483M/s   4.91252M   205.578M   628.725M         13.6683     4.8893/s 3.07402G/s     816.384M                17.748                1.29848      1000k        4.8893M/s [BEST: throughput=  0.22 GB/s doc_throughput=     4 docs/s instructions=   816384372 cycles=   628543713 branch_miss= 1573872 cache_miss= 4912532 cache_ref= 205607147 items=   1000000 avg_time= 204528338 ns]
large_random<yyjson_insitu>/manual_time                198509902 ns    202125068 ns            4          1.5693M           231.806M        4.19557M       194.114M    616.311M              13.3984           5.03939       3.10583G          809.197M                    17.5917                     1.31297           5.03939M    1.57367M   45.9988M       220.986M/s   4.19558M   194.076M   616.473M         13.4019    5.03753/s  3.1055G/s     809.197M               17.5917                1.31262      1000k       5.03753M/s [BEST: throughput=  0.23 GB/s doc_throughput=     5 docs/s instructions=   809197130 cycles=   616311312 branch_miss= 1569297 cache_miss= 4195570 cache_ref= 194113890 items=   1000000 avg_time= 198509901 ns]
large_random<sajson>/manual_time                       219810213 ns    223417631 ns            3         1.70984M            219.26M        3.44539M       213.416M    670.682M              14.5804           4.76664        3.1969G          963.995M                     20.957                     1.43734           4.76664M    1.83424M   45.9988M       199.571M/s   3.44537M   213.416M   702.692M         15.2763    4.54938/s 3.19681G/s     963.995M                20.957                1.37186      1000k       4.54938M/s [BEST: throughput=  0.22 GB/s doc_throughput=     4 docs/s instructions=   963995039 cycles=   670681745 branch_miss= 1709844 cache_miss= 3445389 cache_ref= 213416025 items=   1000000 avg_time= 219810212 ns]
large_random<rapidjson>/manual_time                    359577383 ns    363195724 ns            2         2.08085M           128.154M        4.95177M       779.027M    1.12025G               24.354           2.78602       3.12105G          1.63051G                    35.4468                     1.45548           2.78602M    2.08709M   45.9988M       121.998M/s   4.95273M   779.067M   1.12002G          24.349    2.78104/s 3.11483G/s     1.63052G               35.4469                1.45579      1000k       2.78104M/s [BEST: throughput=  0.13 GB/s doc_throughput=     2 docs/s instructions=  1630509984 cycles=  1120252185 branch_miss= 2080848 cache_miss= 4951775 cache_ref= 779026596 items=   1000000 avg_time= 359577383 ns]
large_random<rapidjson_lossless>/manual_time           425130209 ns    428750335 ns            2         2.05878M           108.418M        4.95235M       1024.02M    1.32852G              28.8816           2.35698       3.13129G          2.05348G                    44.6421                      1.5457           2.35698M       2.06M   45.9988M       103.187M/s   4.95324M   1024.03M   1.32885G         28.8889    2.35222/s 3.12576G/s     2.05349G               44.6422                1.54531      1000k       2.35222M/s [BEST: throughput=  0.11 GB/s doc_throughput=     2 docs/s instructions=  2053483328 cycles=  1328516659 branch_miss= 2058775 cache_miss= 4952345 cache_ref=1024016015 items=   1000000 avg_time= 425130209 ns]
large_random<rapidjson_insitu>/manual_time             356087556 ns    359729291 ns            2         1.98822M           129.444M        5.67073M       696.075M    1.10887G              24.1064           2.81408       3.12043G          1.37951G                    29.9901                     1.24407           2.81408M    1.99417M   45.9988M       123.194M/s   5.67128M   696.044M   1.10889G         24.1069     2.8083/s 3.11409G/s     1.37951G               29.9903                1.24405      1000k        2.8083M/s [BEST: throughput=  0.13 GB/s doc_throughput=     2 docs/s instructions=  1379509847 cycles=  1108866019 branch_miss= 1988224 cache_miss= 5670732 cache_ref= 696075436 items=   1000000 avg_time= 356087556 ns]
large_random<nlohmann_json>/manual_time               3204710401 ns   3208278950 ns            1         15.6957M           14.3535M        27.6588M       6.92788G    10.2414G              222.644          0.312041       3.19572G           12.884G                    280.094                     1.25803           312.041k    15.6957M   45.9988M       13.6886M/s   27.6588M   6.92788G   10.2414G         222.644   0.312041/s 3.19572G/s      12.884G               280.094                1.25803      1000k       312.041k/s [BEST: throughput=  0.01 GB/s doc_throughput=     0 docs/s instructions= 12883981431 cycles= 10241368996 branch_miss=15695740 cache_miss=27658777 cache_ref=6927876222 items=   1000000 avg_time=3204710401 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                       377211222 ns    387875225 ns            2         883.863k           364.033M        6.95367M       248.837M    1.20574G              8.78145           2.65127       3.19674G           1.1314G                    8.24004                    0.938347           1.39003M    884.232k   137.305M       347.138M/s   6.95369M   248.838M   1.20579G         8.78182    2.65103/s 3.19659G/s      1.1314G               8.24004               0.938307   524.288k       1.38991M/s [BEST: throughput=  0.36 GB/s doc_throughput=     2 docs/s instructions=  1131399189 cycles=  1205736568 branch_miss=  883863 cache_miss= 6953673 cache_ref= 248836626 items=    524288 avg_time= 377211222 ns]
kostya<simdjson_ondemand>/manual_time                  255846075 ns    266500039 ns            3         890.273k           536.695M         5.2839M       145.542M    817.896M              5.95679           3.90878       3.19697G          791.585M                    5.76516                     0.96783           2.04932M     890.33k   137.305M       511.809M/s   5.28394M   145.544M   817.901M         5.95682     3.9086/s 3.19685G/s     791.585M               5.76516               0.967825   524.288k       2.04923M/s [BEST: throughput=  0.54 GB/s doc_throughput=     3 docs/s instructions=   791585018 cycles=   817896477 branch_miss=  890273 cache_miss= 5283905 cache_ref= 145542120 items=    524288 avg_time= 255846074 ns]
kostya<yyjson>/manual_time                             288779096 ns    299440157 ns            2          2.6802M           475.755M        7.96787M       328.087M    879.059M              6.40224           3.46495        3.0459G          948.794M                    6.91012                     1.07933           1.81663M      2.718M   137.305M       453.441M/s   7.96804M   328.239M   879.626M         6.40636    3.46285/s 3.04602G/s     948.794M               6.91012                1.07863   524.288k       1.81553M/s [BEST: throughput=  0.48 GB/s doc_throughput=     3 docs/s instructions=   948793899 cycles=   879059268 branch_miss= 2680198 cache_miss= 7967872 cache_ref= 328086964 items=    524288 avg_time= 288779095 ns]
kostya<yyjson_insitu>/manual_time                      270878759 ns    281545927 ns            3         2.71525M           507.016M        5.82875M       293.921M    842.954M              6.13928           3.69262       3.11271G          927.339M                    6.75387                     1.10011             1.936M    2.72152M   137.305M       483.405M/s   5.82834M   293.902M   843.229M         6.14128    3.69169/s 3.11294G/s     927.339M               6.75387                1.09975   524.288k       1.93551M/s [BEST: throughput=  0.51 GB/s doc_throughput=     3 docs/s instructions=   927339470 cycles=   842953609 branch_miss= 2715250 cache_miss= 5828753 cache_ref= 293921255 items=    524288 avg_time= 270878759 ns]
kostya<sajson>/manual_time                             412004228 ns    422676336 ns            2           7.019M            333.73M        4.63239M       417.374M    1.31517G              9.57843           2.43058       3.19661G          1.41335G                    10.2935                     1.07466           1.27432M    7.10693M   137.305M       317.823M/s   4.63237M   418.045M   1.31716G         9.59297    2.42716/s 3.19696G/s     1.41335G               10.2935                1.07303   524.288k       1.27253M/s [BEST: throughput=  0.33 GB/s doc_throughput=     2 docs/s instructions=  1413353471 cycles=  1315166248 branch_miss= 7018995 cache_miss= 4632389 cache_ref= 417373668 items=    524288 avg_time= 412004228 ns]
kostya<rapidjson>/manual_time                          592777236 ns    603448580 ns            1         6.71778M            231.63M        5.34101M       1.20677G    1.85933G              13.5416           1.68697       3.13664G          2.46967G                    17.9868                     1.32826            884.46k    6.71778M   137.305M         220.9M/s   5.34101M   1.20677G   1.85933G         13.5416    1.68697/s 3.13664G/s     2.46967G               17.9868                1.32826   524.288k        884.46k/s [BEST: throughput=  0.23 GB/s doc_throughput=     1 docs/s instructions=  2469674883 cycles=  1859328657 branch_miss= 6717779 cache_miss= 5341013 cache_ref=1206770911 items=    524288 avg_time= 592777236 ns]
kostya<rapidjson_lossless>/manual_time                 660824289 ns    671501270 ns            1         9.56442M           207.778M        5.34117M       1.35371G    2.07687G               15.126           1.51326       3.14285G          2.71451G                    19.7699                     1.30702           793.385k    9.56442M   137.305M       198.153M/s   5.34117M   1.35371G   2.07687G          15.126    1.51326/s 3.14285G/s     2.71451G               19.7699                1.30702   524.288k       793.385k/s [BEST: throughput=  0.21 GB/s doc_throughput=     1 docs/s instructions=  2714509134 cycles=  2076868639 branch_miss= 9564416 cache_miss= 5341172 cache_ref=1353709939 items=    524288 avg_time= 660824289 ns]
kostya<rapidjson_insitu>/manual_time                   539640010 ns    550310313 ns            1         6.01318M           254.438M        6.32695M       915.964M    1.69033G              12.3108           1.85309       3.13234G          1.99322G                    14.5167                     1.17918           971.551k    6.01318M   137.305M       242.651M/s   6.32695M   915.964M   1.69033G         12.3108    1.85309/s 3.13234G/s     1.99322G               14.5167                1.17918   524.288k       971.551k/s [BEST: throughput=  0.25 GB/s doc_throughput=     1 docs/s instructions=  1993216638 cycles=  1690334342 branch_miss= 6013183 cache_miss= 6326951 cache_ref= 915964015 items=    524288 avg_time= 539640010 ns]
kostya<nlohmann_json>/manual_time                     5702100254 ns   5667537806 ns            1         51.3597M           24.0797M         38.214M       11.0827G    18.0837G              131.705          0.175374       3.17141G           18.087G                    131.729                     1.00018           91.9465k    51.3597M   137.305M       22.9642M/s    38.214M   11.0827G   18.0837G         131.705   0.175374/s 3.17141G/s      18.087G               131.729                1.00018   524.288k       91.9465k/s [BEST: throughput=  0.02 GB/s doc_throughput=     0 docs/s instructions= 18087020106 cycles= 18083721810 branch_miss=51359717 cache_miss=38213975 cache_ref=11082693378 items=    524288 avg_time=5702100254 ns]
distinct_user_id<simdjson_dom>/manual_time               1569204 ns      1655244 ns          446          13.969k           406.199M         26.539k       949.267k    4.97733M              7.88158           643.214       3.20149G          3.87901M                    6.14239                    0.779335           73.9696k    13.9112k   631.515k       383.799M/s   26.5511k   949.997k    5.0182M         7.94628    637.266/s 3.19792G/s     3.87901M               6.14239               0.772989        115       73.2856k/s [BEST: throughput=  0.41 GB/s doc_throughput=   643 docs/s instructions=     3879010 cycles=     4977334 branch_miss=   13969 cache_miss=   26539 cache_ref=    949267 items=       115 avg_time=   1569204 ns]
distinct_user_id<simdjson_ondemand>/manual_time          1043605 ns      1127960 ns          670           9.927k           606.818M         22.646k       427.519k     3.3322M              5.27651           960.893       3.20188G          2.67029M                    4.22839                    0.801361           110.503k    10.1518k   631.515k       577.095M/s   22.6658k   429.084k   3.33767M         5.28518    958.217/s 3.19821G/s     2.67029M               4.22839               0.800047        115       110.195k/s [BEST: throughput=  0.61 GB/s doc_throughput=   960 docs/s instructions=     2670292 cycles=     3332196 branch_miss=    9927 cache_miss=   22646 cache_ref=    427519 items=       115 avg_time=   1043604 ns]
distinct_user_id<yyjson>/manual_time                     1149305 ns      1237458 ns          632          46.644k           607.623M         24.233k       1.39707M    3.32746M              5.26902           962.167       3.20157G          3.23395M                    5.12094                    0.971896           110.649k    46.3021k   631.515k       524.021M/s   24.2986k   1.39736M   3.54587M         5.61487    870.091/s 3.08523G/s     3.23409M               5.12117               0.912073        115        100.06k/s [BEST: throughput=  0.61 GB/s doc_throughput=   962 docs/s instructions=     3233949 cycles=     3327463 branch_miss=   46644 cache_miss=   24233 cache_ref=   1397068 items=       115 avg_time=   1149304 ns]
distinct_user_id<yyjson_insitu>/manual_time              1095808 ns      1185015 ns          639          45.969k           633.013M         14.401k       1.23707M    3.19403M              5.05773           1002.37       3.20161G          3.13495M                    4.96418                    0.981503           115.273k     46.198k   631.515k       549.603M/s   14.3768k   1.23835M   3.39433M          5.3749    912.569/s 3.09756G/s     3.13511M               4.96442                0.92363        115       104.945k/s [BEST: throughput=  0.63 GB/s doc_throughput=  1002 docs/s instructions=     3134954 cycles=     3194033 branch_miss=   45969 cache_miss=   14401 cache_ref=   1237065 items=       115 avg_time=   1095808 ns]
distinct_user_id<sajson>/manual_time                     1455029 ns      1542522 ns          481          58.137k           435.159M         12.807k        1.8546M    4.64562M               7.3563           689.072       3.20116G          5.49513M                     8.7015                     1.18286           79.2432k    58.4476k   631.515k       413.916M/s   12.8038k   1.85552M   4.65293M         7.36789    687.271/s 3.19783G/s     5.49513M                8.7015                  1.181        115       79.0362k/s [BEST: throughput=  0.44 GB/s doc_throughput=   689 docs/s instructions=     5495130 cycles=     4645616 branch_miss=   58137 cache_miss=   12807 cache_ref=   1854597 items=       115 avg_time=   1455029 ns]
distinct_user_id<rapidjson>/manual_time                  5627824 ns      4777524 ns          100          83.709k           137.262M         13.849k       13.3954M    14.6833M               23.251           217.353       3.19146G          20.6346M                    32.6748                     1.40531           24.9956k    83.7928k   631.515k       107.015M/s   14.0089k   13.4262M   14.7741M         23.3947    177.689/s 2.62519G/s     20.6354M               32.6761                1.39673        115       20.4342k/s [BEST: throughput=  0.14 GB/s doc_throughput=   217 docs/s instructions=    20634604 cycles=    14683324 branch_miss=   83709 cache_miss=   13849 cache_ref=  13395407 items=       115 avg_time=   5627823 ns]
distinct_user_id<rapidjson_insitu>/manual_time           2938573 ns      3031098 ns          239          60.757k           217.421M         14.269k       5.84593M    9.13511M              14.4654           344.285       3.14509G          12.7774M                    20.2329                     1.39871           39.5928k    60.8159k   631.515k        204.95M/s   14.2785k   5.84887M   9.23515M         14.6238    340.301/s 3.14273G/s     12.7775M                20.233                1.38357        115       39.1346k/s [BEST: throughput=  0.22 GB/s doc_throughput=   344 docs/s instructions=    12777411 cycles=     9135115 branch_miss=   60757 cache_miss=   14269 cache_ref=   5845932 items=       115 avg_time=   2938573 ns]
distinct_user_id<nlohmann_json>/manual_time             21817245 ns     21913131 ns           33         385.787k           31.0087M        166.793k       48.4834M    65.0204M              102.959           49.1021       3.19264G          76.8266M                    121.654                     1.18158           5.64674k    406.237k   631.515k       27.6048M/s   226.061k   47.9156M   69.7386M         110.431    45.8353/s 3.19649G/s     75.2331M               119.131                1.07879        115       5.27106k/s [BEST: throughput=  0.03 GB/s doc_throughput=    49 docs/s instructions=    76826640 cycles=    65020438 branch_miss=  385787 cache_miss=  166793 cache_ref=  48483410 items=       115 avg_time=  21817244 ns]
find_tweet<simdjson_dom>/manual_time                     1490587 ns      1580515 ns          470          13.602k           424.613M         23.524k       931.664k    4.76139M              7.53963           672.372       3.20143G           3.7886M                    5.99923                    0.795693            672.372     13.676k   631.515k       404.042M/s   23.5287k     932.1k   4.76615M         7.54717    670.877/s  3.1975G/s      3.7886M               5.99922               0.794897          1        670.877/s [BEST: throughput=  0.42 GB/s doc_throughput=   672 docs/s instructions=     3788603 cycles=     4761387 branch_miss=   13602 cache_miss=   23524 cache_ref=    931664 items=         1 avg_time=   1490586 ns]
find_tweet<simdjson_ondemand>/manual_time                 906056 ns       998121 ns          773            4.59k           699.292M         11.569k       235.088k    2.89133M               4.5784          1.10732k       3.20164G          2.11629M                    3.35113                    0.731945           1.10732k    4.80451k   631.515k       664.705M/s   11.5673k   235.855k   2.89745M         4.58809   1.10369k/s 3.19787G/s     2.11629M               3.35113               0.730398          1       1.10369k/s [BEST: throughput=  0.70 GB/s doc_throughput=  1107 docs/s instructions=     2116292 cycles=     2891327 branch_miss=    4590 cache_miss=   11569 cache_ref=    235088 items=         1 avg_time=    906055 ns]
find_tweet<yyjson>/manual_time                           1130539 ns      1225101 ns          622          46.397k           635.434M         21.748k       1.38125M    3.18166M              5.03814           1006.21       3.20141G          3.17691M                    5.03062                    0.998507            1006.21    46.1989k   631.515k       532.719M/s    21.798k   1.38219M   3.39304M         5.37286    884.534/s 3.00126G/s     3.17742M               5.03143               0.936453          1        884.534/s [BEST: throughput=  0.64 GB/s doc_throughput=  1006 docs/s instructions=     3176914 cycles=     3181664 branch_miss=   46397 cache_miss=   21748 cache_ref=   1381248 items=         1 avg_time=   1130539 ns]
find_tweet<yyjson_insitu>/manual_time                    1051582 ns      1147504 ns          668           46.04k           663.472M         11.879k        1.2224M    3.04735M              4.82546            1050.6       3.20156G          3.07831M                    4.87448                     1.01016             1050.6    46.1385k   631.515k       572.718M/s   11.8942k   1.22302M   3.25251M         5.15032    950.948/s 3.09296G/s     3.07846M               4.87472               0.946488          1        950.948/s [BEST: throughput=  0.66 GB/s doc_throughput=  1050 docs/s instructions=     3078309 cycles=     3047348 branch_miss=   46040 cache_miss=   11879 cache_ref=   1222398 items=         1 avg_time=   1051582 ns]
find_tweet<sajson>/manual_time                           1409428 ns      1503556 ns          497          57.806k           449.503M         10.212k       1.83507M    4.49761M              7.12194           711.786       3.20134G           5.4077M                    8.56306                     1.20235            711.786    58.2121k   631.515k       427.308M/s   10.2012k   1.83584M   4.50688M         7.13662    709.508/s 3.19767G/s      5.4077M               8.56306                1.19988          1        709.508/s [BEST: throughput=  0.45 GB/s doc_throughput=   711 docs/s instructions=     5407701 cycles=     4497610 branch_miss=   57806 cache_miss=   10212 cache_ref=   1835069 items=         1 avg_time=   1409427 ns]
find_tweet<rapidjson>/manual_time                        4637319 ns      4736102 ns          151          83.597k           138.573M         11.011k       13.3829M    14.5859M              23.0967           219.429       3.20057G          20.5763M                    32.5825                      1.4107            219.429    83.6519k   631.515k       129.872M/s   11.2554k    13.424M   14.6455M          23.191    215.642/s 3.15817G/s     20.5768M               32.5833                  1.405          1        215.642/s [BEST: throughput=  0.14 GB/s doc_throughput=   219 docs/s instructions=    20576319 cycles=    14585910 branch_miss=   83597 cache_miss=   11011 cache_ref=  13382893 items=         1 avg_time=   4637318 ns]
find_tweet<rapidjson_insitu>/manual_time                 2902752 ns      3003288 ns          241          60.398k           219.867M         10.982k       5.82869M    9.03444M               14.306           348.159       3.14542G          12.7191M                    20.1406                     1.40784            348.159     60.541k   631.515k       207.479M/s   11.0257k   5.83186M   9.12208M         14.4448    344.501/s 3.14256G/s     12.7191M               20.1406                1.39432          1        344.501/s [BEST: throughput=  0.22 GB/s doc_throughput=   348 docs/s instructions=    12719095 cycles=     9034443 branch_miss=   60398 cache_miss=   10982 cache_ref=   5828687 items=         1 avg_time=   2902751 ns]
find_tweet<nlohmann_json>/manual_time                   19311401 ns     19426777 ns           38         324.098k           35.9654M          90.29k       42.7354M    56.1103M              88.8502           56.9509       3.19553G           66.683M                    105.592                     1.18843            56.9509    330.154k   631.515k       31.1867M/s   143.616k    42.163M   61.7173M          97.729    51.7829/s  3.1959G/s      65.076M               103.047                1.05442          1        51.7829/s [BEST: throughput=  0.04 GB/s doc_throughput=    56 docs/s instructions=    66682987 cycles=    56110253 branch_miss=  324098 cache_miss=   90290 cache_ref=  42735351 items=         1 avg_time=  19311401 ns]
top_tweet<simdjson_dom>/manual_time                      1541759 ns      1645847 ns          454          13.885k           413.697M         25.626k       939.253k    4.88656M              7.73784           655.087       3.20112G          3.82788M                    6.06142                    0.783347            655.087    13.9604k   631.515k       390.631M/s   25.6388k   940.325k   4.92964M         7.80605     648.61/s 3.19741G/s     3.82788M               6.06142               0.776502          1         648.61/s [BEST: throughput=  0.41 GB/s doc_throughput=   655 docs/s instructions=     3827875 cycles=     4886565 branch_miss=   13885 cache_miss=   25626 cache_ref=    939253 items=         1 avg_time=   1541759 ns]
top_tweet<simdjson_ondemand>/manual_time                 1047603 ns      1152435 ns          669            9.74k            607.61M         22.614k       429.403k    3.32762M              5.26926           962.146       3.20166G          2.67404M                    4.23433                     0.80359            962.146    10.9027k   631.515k       574.893M/s   22.6334k   432.406k    3.3501M         5.30486     954.56/s 3.19787G/s     2.67404M               4.23433               0.798198          1         954.56/s [BEST: throughput=  0.61 GB/s doc_throughput=   962 docs/s instructions=     2674043 cycles=     3327619 branch_miss=    9740 cache_miss=   22614 cache_ref=    429403 items=         1 avg_time=   1047602 ns]
top_tweet<simdjson_ondemand_forward_only>/manual_time    1049977 ns      1158505 ns          667           8.784k           603.352M         22.793k       435.281k    3.35146M              5.30701           955.405         3.202G           2.6954M                    4.26815                    0.804247            955.405    8.96211k   631.515k       573.593M/s   22.7896k   436.193k   3.35809M         5.31752    952.402/s 3.19825G/s      2.6954M               4.26815               0.802658          1        952.402/s [BEST: throughput=  0.60 GB/s doc_throughput=   955 docs/s instructions=     2695398 cycles=     3351456 branch_miss=    8784 cache_miss=   22793 cache_ref=    435281 items=         1 avg_time=   1049976 ns]
top_tweet<yyjson>/manual_time                            1163083 ns      1275436 ns          607          46.762k           615.866M         23.302k        1.3889M    3.28308M              5.19874            975.22       3.20173G          3.20176M                    5.06997                     0.97523             975.22    46.2955k   631.515k       517.813M/s   23.3049k   1.38856M   3.49655M         5.53677    859.784/s 3.00628G/s     3.20227M               5.07077               0.915836          1        859.784/s [BEST: throughput=  0.62 GB/s doc_throughput=   975 docs/s instructions=     3201759 cycles=     3283082 branch_miss=   46762 cache_miss=   23302 cache_ref=   1388899 items=         1 avg_time=   1163082 ns]
top_tweet<yyjson_insitu>/manual_time                     1081848 ns      1196618 ns          649          46.189k           644.074M         13.421k       1.22872M    3.13913M              4.97079           1019.89       3.20156G          3.10306M                    4.91367                     0.98851            1019.89    46.2644k   631.515k       556.695M/s   13.4264k   1.22933M   3.34838M         5.30213    924.344/s 3.09505G/s     3.10321M               4.91391                0.92678          1        924.344/s [BEST: throughput=  0.64 GB/s doc_throughput=  1019 docs/s instructions=     3103059 cycles=     3139128 branch_miss=   46189 cache_miss=   13421 cache_ref=   1228722 items=         1 avg_time=   1081848 ns]
top_tweet<sajson>/manual_time                            1430029 ns      1545838 ns          489          57.968k            442.78M         11.822k       1.84329M    4.56594M              7.23014           701.139       3.20136G          5.43458M                    8.60563                     1.19024            701.139    58.3078k   631.515k       421.152M/s   11.8257k   1.84363M   4.57294M         7.24123    699.287/s  3.1978G/s     5.43458M               8.60563                1.18842          1        699.287/s [BEST: throughput=  0.44 GB/s doc_throughput=   701 docs/s instructions=     5434583 cycles=     4565940 branch_miss=   57968 cache_miss=   11822 cache_ref=   1843292 items=         1 avg_time=   1430028 ns]
top_tweet<rapidjson>/manual_time                         4595455 ns      4716442 ns          152          83.574k           139.735M         12.891k         13.38M    14.4645M              22.9045           221.269       3.20055G          20.6217M                    32.6544                     1.42568            221.269    83.5772k   631.515k       131.056M/s   13.1129k   13.3812M   14.5095M         22.9757    217.606/s 3.15737G/s     20.6223M               32.6553                1.42129          1        217.606/s [BEST: throughput=  0.14 GB/s doc_throughput=   221 docs/s instructions=    20621750 cycles=    14464532 branch_miss=   83574 cache_miss=   12891 cache_ref=  13380047 items=         1 avg_time=   4595454 ns]
top_tweet<rapidjson_insitu>/manual_time                  2921727 ns      3044730 ns          240          60.872k           219.672M         13.089k       5.84426M      9.201M              14.5697           347.849       3.20056G          12.7638M                    20.2114                     1.38722            347.849    60.6818k   631.515k       206.131M/s   13.2079k   5.84392M     9.183M         14.5412    342.263/s   3.143G/s     12.7642M                20.212                1.38998          1        342.263/s [BEST: throughput=  0.22 GB/s doc_throughput=   347 docs/s instructions=    12763799 cycles=     9200996 branch_miss=   60872 cache_miss=   13089 cache_ref=   5844263 items=         1 avg_time=   2921727 ns]
top_tweet<nlohmann_json>/manual_time                    24337892 ns     24466327 ns           29         468.752k            26.166M        354.939k       54.5709M    77.1699M              122.198           41.4337       3.19744G          88.7405M                     140.52                     1.14994            41.4337    491.608k   631.515k       24.7458M/s   354.028k   54.5877M   77.7995M         123.195    41.0882/s 3.19664G/s     88.7624M               140.555                1.14091          1        41.0882/s [BEST: throughput=  0.03 GB/s doc_throughput=    41 docs/s instructions=    88740477 cycles=    77169854 branch_miss=  468752 cache_miss=  354939 cache_ref=  54570886 items=         1 avg_time=  24337891 ns]
