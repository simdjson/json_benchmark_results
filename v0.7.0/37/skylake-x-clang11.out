run_benchmark: v0.8.0~1 /home/jkeiser/simdjson_benchmark_results/v0.7.0/37/skylake-clang11.json 
git reset --hard v0.8.0~1
HEAD is now at 1005c62e It seems that we export too many targets. (#1385)
cmake ..
-- The CXX compiler identification is Clang 11.0.0
-- The C compiler identification is Clang 11.0.0
-- Check for working CXX compiler: /usr/bin/clang++-11
-- Check for working CXX compiler: /usr/bin/clang++-11 -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Check for working C compiler: /usr/bin/clang-11
-- Check for working C compiler: /usr/bin/clang-11 -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- No build type selected, default to Release
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed
-- Check if compiler accepts -pthread
-- Check if compiler accepts -pthread - yes
-- Found Threads: TRUE  
-- Looking for fork
-- Looking for fork - found
-- Looking for wait
-- Looking for wait - found
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- Found Git: /usr/bin/git (found version "2.27.0") 
-- git Version: v0.2.1-1005c62e
-- Version: 0.2.1
-- Performing Test HAVE_CXX_FLAG_STD_CXX11
-- Performing Test HAVE_CXX_FLAG_STD_CXX11 - Success
-- Performing Test HAVE_CXX_FLAG_WALL
-- Performing Test HAVE_CXX_FLAG_WALL - Success
-- Performing Test HAVE_CXX_FLAG_WEXTRA
-- Performing Test HAVE_CXX_FLAG_WEXTRA - Success
-- Performing Test HAVE_CXX_FLAG_WSHADOW
-- Performing Test HAVE_CXX_FLAG_WSHADOW - Success
-- Performing Test HAVE_CXX_FLAG_WERROR
-- Performing Test HAVE_CXX_FLAG_WERROR - Success
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32 - Success
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED - Success
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WD654
-- Performing Test HAVE_CXX_FLAG_WD654 - Failed
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY - Success
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES -- failed to compile
-- Performing Test HAVE_CXX_FLAG_COVERAGE
-- Performing Test HAVE_CXX_FLAG_COVERAGE - Success
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Performing Test USE_BOOST_JSON
-- Performing Test USE_BOOST_JSON - Failed
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Found Python3: /usr/bin/python3.8 (found version "3.8.6") found components: Interpreter 
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
make[1]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[2]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
Scanning dependencies of target benchmark
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[  0%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/benchmark.cc.o
[ 10%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o
[ 10%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/benchmark_name.cc.o
[ 10%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/benchmark_register.cc.o
[ 20%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/benchmark_runner.cc.o
[ 20%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/colorprint.cc.o
[ 30%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/commandlineflags.cc.o
[ 30%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/complexity.cc.o
[ 30%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/console_reporter.cc.o
[ 40%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/counter.cc.o
[ 40%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/csv_reporter.cc.o
[ 50%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/json_reporter.cc.o
[ 50%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/reporter.cc.o
[ 60%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/sleep.cc.o
[ 60%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/statistics.cc.o
[ 60%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/string_util.cc.o
[ 70%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/sysinfo.cc.o
[ 70%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/timers.cc.o
[ 80%] Linking CXX static library libbenchmark.a
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 80%] Built target benchmark
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
Scanning dependencies of target generated-data
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 80%] Generating utf-8.json, escape.json, 0-structurals.json, 7-structurals.json, 15-structurals.json, 23-structurals.json
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-miss.json ...
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 80%] Built target generated-data
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
Scanning dependencies of target simdjson
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 80%] Building CXX object src/CMakeFiles/simdjson.dir/simdjson.cpp.o
[ 80%] Linking CXX shared library ../libsimdjson.so
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 80%] Built target simdjson
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
Scanning dependencies of target yyjson
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 80%] Building C object dependencies/CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o
[ 90%] Linking C static library libyyjson.a
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 90%] Built target yyjson
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
Scanning dependencies of target bench_ondemand
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[100%] Building CXX object benchmark/CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o
[100%] Linking CXX executable bench_ondemand
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[100%] Built target bench_ondemand
make[2]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[1]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/37/skylake-clang11.json --benchmark_out_format=json
2021-01-23 04:43:36
Running benchmark/bench_ondemand
Run on (4 X 3200 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 1024 KiB (x4)
  L3 Unified 8448 KiB (x1)
Load Average: 1.07, 1.04, 0.89
***WARNING*** CPU scaling is enabled, the benchmark real time measurements may be noisy and will incur extra overhead.
simdjson::dom implementation:      haswell
simdjson::ondemand implementation: fallback

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
partial_tweets<simdjson_dom>/manual_time                  317939 ns       389244 ns         2208           3.424k           2.00944G               0        34.767k    1003.78k              1.58948          3.18194k       3.19397G          2.98281M                    4.72326                     2.97157           318.194k    3.66193k   631.515k       1.84987G/s   0.455163    34.682k   1014.37k         1.60625   3.14526k/s 3.19046G/s     2.98281M               4.72326                2.94055        100       314.526k/s [BEST: throughput=  2.01 GB/s doc_throughput=  3181 docs/s instructions=     2982809 cycles=     1003783 branch_miss=    3424 cache_miss=       0 cache_ref=     34767 items=       100 avg_time=    317938 ns]
partial_tweets<simdjson_ondemand>/manual_time             223337 ns       280440 ns         3127           2.064k            2.8542G               1        10.243k    706.921k               1.1194          4.51961k       3.19501G          2.26558M                    3.58754                     3.20486           451.961k    2.25523k   631.515k       2.63343G/s   0.160217   10.3746k   712.898k         1.12887   4.47753k/s 3.19202G/s     2.26558M               3.58754                3.17799        100       447.753k/s [BEST: throughput=  2.85 GB/s doc_throughput=  4519 docs/s instructions=     2265584 cycles=      706921 branch_miss=    2064 cache_miss=       1 cache_ref=     10243 items=       100 avg_time=    223337 ns]
partial_tweets<yyjson>/manual_time                        798826 ns       879203 ns          878           9.943k           1.41284G             210        27.764k    1.42766M              2.26069          2.23722k       3.19399G          2.91991M                    4.62366                     2.04524           223.722k    7.60953k   631.515k       753.931M/s    508.523   24.9904k   1.58622M         2.51178   1.25184k/s  1.9857G/s      2.9204M               4.62443                 1.8411        100       125.184k/s [BEST: throughput=  1.41 GB/s doc_throughput=  2237 docs/s instructions=     2919910 cycles=     1427662 branch_miss=    9943 cache_miss=     210 cache_ref=     27764 items=       100 avg_time=    798825 ns]
partial_tweets<yyjson_insitu>/manual_time                 520590 ns       586087 ns         1356           7.015k            1.7308G          1.563k        14.865k    1.15485M               1.8287          2.74071k       3.16511G           2.9196M                    4.62316                     2.52811           274.071k    7.37581k   631.515k       1.12977G/s    102.652   11.5548k   1.26308M         2.00008    1.9209k/s 2.42625G/s     2.91986M               4.62358                 2.3117        100        192.09k/s [BEST: throughput=  1.73 GB/s doc_throughput=  2740 docs/s instructions=     2919596 cycles=     1154852 branch_miss=    7015 cache_miss=    1563 cache_ref=     14865 items=       100 avg_time=    520589 ns]
partial_tweets<sajson>/manual_time                        689375 ns       755229 ns         1014          10.243k           922.076M               1        13.431k    2.18679M              3.46277           1.4601k       3.19294G          5.87949M                    9.31014                     2.68864            146.01k    10.5562k   631.515k       873.631M/s    3.05325   13.5585k   2.19909M         3.48225   1.45059k/s 3.18998G/s      5.8795M               9.31014                 2.6736        100       145.059k/s [BEST: throughput=  0.92 GB/s doc_throughput=  1460 docs/s instructions=     5879495 cycles=     2186794 branch_miss=   10243 cache_miss=       1 cache_ref=     13431 items=       100 avg_time=    689375 ns]
partial_tweets<rapidjson>/manual_time                    2802765 ns      2872074 ns          249          29.542k           249.972M          9.326k        22.394k    8.06573M               12.772           395.829       3.19265G          21.8954M                    34.6713                     2.71462           39.5829k    31.2761k   631.515k       214.881M/s    486.466   15.5575k   8.25342M         13.0692    356.791/s 2.94474G/s     21.8963M               34.6726                  2.653        100       35.6791k/s [BEST: throughput=  0.25 GB/s doc_throughput=   395 docs/s instructions=    21895432 cycles=     8065734 branch_miss=   29542 cache_miss=    9326 cache_ref=     22394 items=       100 avg_time=   2802764 ns]
partial_tweets<rapidjson_insitu>/manual_time             1769510 ns      1832674 ns          397          25.051k           390.283M          5.469k        14.479k    5.16628M              8.18077           618.011       3.19281G          13.3571M                    21.1509                     2.58544           61.8011k    26.0665k   631.515k       340.354M/s     234.03   10.5566k   5.24539M         8.30605    565.128/s 2.96432G/s     13.3577M               21.1519                2.54656        100       56.5128k/s [BEST: throughput=  0.39 GB/s doc_throughput=   618 docs/s instructions=    13357116 cycles=     5166276 branch_miss=   25051 cache_miss=    5469 cache_ref=     14479 items=       100 avg_time=   1769509 ns]
partial_tweets<nlohmann_json>/manual_time               10089167 ns     10178789 ns           70          151.49k           65.2788M              22        97.765k    30.8588M              48.8647           103.369       3.18983G          80.3035M                     127.16                     2.60229           10.3369k    160.922k   631.515k       59.6937M/s    265.271   146.998k   32.1752M         50.9492    99.1162/s 3.18908G/s     81.3424M               128.805                2.52811        100       9.91162k/s [BEST: throughput=  0.07 GB/s doc_throughput=   103 docs/s instructions=    80303452 cycles=    30858804 branch_miss=  151490 cache_miss=      22 cache_ref=     97765 items=       100 avg_time=  10089167 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                  99596787 ns    105686078 ns            7          959.18k           462.201M        6.78636M       6.89585M    317.343M              6.89895           10.0481        3.1887G          1038.74M                    22.5819                     3.27323           10.0481M    956.916k   45.9988M       440.454M/s   6.82044M   6.89578M   317.553M         6.90351    10.0405/s 3.18839G/s     1038.74M               22.5819                3.27107      1000k       10.0405M/s [BEST: throughput=  0.46 GB/s doc_throughput=    10 docs/s instructions=  1038738117 cycles=   317343473 branch_miss=  959180 cache_miss= 6786363 cache_ref=   6895846 items=   1000000 avg_time=  99596787 ns]
large_random<simdjson_ondemand>/manual_time             72816078 ns     78836349 ns           10         921.216k            632.32M        3.51269M       3.57285M     231.97M              5.04295           13.7465       3.18876G          672.195M                    14.6133                     2.89777           13.7465M    924.394k   45.9988M       602.447M/s   3.52468M   3.57297M   232.179M          5.0475    13.7332/s 3.18857G/s     672.195M               14.6133                2.89516      1000k       13.7332M/s [BEST: throughput=  0.63 GB/s doc_throughput=    13 docs/s instructions=   672194585 cycles=   231969674 branch_miss=  921216 cache_miss= 3512686 cache_ref=   3572846 items=   1000000 avg_time=  72816078 ns]
large_random<simdjson_ondemand_unordered>/manual_time   72902274 ns     78935817 ns           10         991.911k           631.413M        3.51298M       3.57285M    232.322M              5.05061           13.7267       3.18902G          669.195M                    14.5481                     2.88046           13.7267M    994.295k   45.9988M       601.735M/s   3.52583M   3.57292M    232.45M         5.05339     13.717/s 3.18851G/s     669.195M               14.5481                2.87888      1000k        13.717M/s [BEST: throughput=  0.63 GB/s doc_throughput=    13 docs/s instructions=   669194598 cycles=   232321729 branch_miss=  991911 cache_miss= 3512977 cache_ref=   3572852 items=   1000000 avg_time=  72902273 ns]
large_random<yyjson>/manual_time                       154765179 ns    160893392 ns            5         724.798k           297.453M        4.20176M       4.37595M    353.094M              7.67616           6.46655        2.2833G          855.681M                    18.6023                     2.42338           6.46655M    725.852k   45.9988M       283.448M/s   4.20083M   4.36045M   353.508M         7.68516     6.4614/s 2.28416G/s     855.681M               18.6023                2.42054      1000k        6.4614M/s [BEST: throughput=  0.30 GB/s doc_throughput=     6 docs/s instructions=   855680756 cycles=   353093741 branch_miss=  724798 cache_miss= 4201765 cache_ref=   4375954 items=   1000000 avg_time= 154765179 ns]
large_random<yyjson_insitu>/manual_time                128651372 ns    134737797 ns            5         724.578k           357.689M         3.4818M       3.63014M    310.385M              6.74767           7.77605       2.41357G           849.56M                    18.4692                     2.73712           7.77605M    724.855k   45.9988M       340.982M/s   3.48278M   3.63576M   310.544M         6.75115    7.77294/s 2.41385G/s      849.56M               18.4692                2.73571      1000k       7.77294M/s [BEST: throughput=  0.36 GB/s doc_throughput=     7 docs/s instructions=   849559990 cycles=   310384652 branch_miss=  724578 cache_miss= 3481798 cache_ref=   3630143 items=   1000000 avg_time= 128651372 ns]
large_random<sajson>/manual_time                       109017552 ns    115139106 ns            6         589.627k           422.574M        5.50589M       5.57735M    347.131M              7.54652           9.18663       3.18896G          1.12599G                    24.4787                     3.24371           9.18663M    590.618k   45.9988M       402.393M/s   5.47371M   5.57734M   347.642M         7.55763    9.17283/s 3.18886G/s     1.12599G               24.4787                3.23894      1000k       9.17283M/s [BEST: throughput=  0.42 GB/s doc_throughput=     9 docs/s instructions=  1125990577 cycles=   347130560 branch_miss=  589627 cache_miss= 5505886 cache_ref=   5577345 items=   1000000 avg_time= 109017551 ns]
large_random<rapidjson>/manual_time                    253532285 ns    259624161 ns            3          590.49k           187.567M        4.36423M       5.01983M    713.468M              15.5106           4.07765       2.90927G          2.01413G                    43.7865                     2.82301           4.07765M    596.213k   45.9988M       173.027M/s   4.10207M   4.88101M   717.816M         15.6051    3.94427/s 2.83126G/s     2.01414G               43.7867                2.80592      1000k       3.94427M/s [BEST: throughput=  0.19 GB/s doc_throughput=     4 docs/s instructions=  2014126361 cycles=   713468311 branch_miss=  590490 cache_miss= 4364234 cache_ref=   5019827 items=   1000000 avg_time= 253532285 ns]
large_random<rapidjson_lossless>/manual_time           286972429 ns    293083874 ns            3         592.449k           164.856M        4.36343M       5.01697M    821.686M              17.8632           3.58391       2.94485G          2.47909G                    53.8948                     3.01708           3.58391M    598.839k   45.9988M       152.864M/s   4.10665M   4.87511M   825.061M         17.9366    3.48466/s 2.87505G/s      2.4791G                53.895                3.00475      1000k       3.48466M/s [BEST: throughput=  0.16 GB/s doc_throughput=     3 docs/s instructions=  2479093494 cycles=   821685746 branch_miss=  592449 cache_miss= 4363428 cache_ref=   5016974 items=   1000000 avg_time= 286972429 ns]
large_random<rapidjson_insitu>/manual_time             275740181 ns    281844968 ns            3          582.11k           171.616M        5.06556M       5.74003M    786.815M              17.1051           3.73088       2.93552G          1.73613G                    37.7429                     2.20652           3.73088M    581.957k   45.9988M       159.091M/s   4.81381M   5.59428M   789.513M         17.1638     3.6266/s 2.86325G/s     1.73613G               37.7431                2.19899      1000k        3.6266M/s [BEST: throughput=  0.17 GB/s doc_throughput=     3 docs/s instructions=  1736126217 cycles=   786814724 branch_miss=  582110 cache_miss= 5065565 cache_ref=   5740032 items=   1000000 avg_time= 275740181 ns]
large_random<nlohmann_json>/manual_time               1464661335 ns   1470775201 ns            1         4.12505M           31.4057M        30.3655M       30.9552M    4.65646G               101.23          0.682752       3.17921G          12.7486G                     277.15                     2.73782           682.752k    4.12505M   45.9988M       29.9508M/s   30.3655M   30.9552M   4.65646G          101.23   0.682752/s 3.17921G/s     12.7486G                277.15                2.73782      1000k       682.752k/s [BEST: throughput=  0.03 GB/s doc_throughput=     0 docs/s instructions= 12748552840 cycles=  4656460397 branch_miss= 4125048 cache_miss=30365481 cache_ref=  30955235 items=   1000000 avg_time=1464661335 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                       103948664 ns    123004266 ns            7         1019.27k           1.32226G        10.2101M       10.3164M     331.11M              2.41149           9.63013       3.18863G          984.675M                    7.17144                     2.97386           5.04896M    1019.53k   137.305M       1.23018G/s     10.24M   10.3165M   331.445M         2.41393    9.62013/s 3.18854G/s     984.675M               7.17144                2.97086   524.288k       5.04372M/s [BEST: throughput=  1.32 GB/s doc_throughput=     9 docs/s instructions=   984674902 cycles=   331110244 branch_miss= 1019266 cache_miss=10210063 cache_ref=  10316406 items=    524288 avg_time= 103948663 ns]
kostya<simdjson_ondemand>/manual_time                   66172224 ns     85189648 ns           11         461.492k           2.07985G        6.45159M       6.47155M    210.487M              1.53299           15.1477        3.1884G          650.941M                    4.74084                     3.09254           7.94176M    460.561k   137.305M       1.93246G/s   6.43968M   6.47169M   210.994M         1.53668    15.1121/s 3.18855G/s     650.941M               4.74084                3.08512   524.288k       7.92308M/s [BEST: throughput=  2.08 GB/s doc_throughput=    15 docs/s instructions=   650940583 cycles=   210487367 branch_miss=  461492 cache_miss= 6451588 cache_ref=   6471548 items=    524288 avg_time=  66172224 ns]
kostya<yyjson>/manual_time                             229916495 ns    249040329 ns            3         420.119k           597.322M        8.49752M       8.70577M    500.358M              3.64414           4.35033       2.17672G          974.184M                    7.09504                     1.94697           2.28083M    419.981k   137.305M        569.53M/s   8.49683M    8.6868M   500.609M         3.64596    4.34941/s 2.17735G/s     974.185M               7.09504                  1.946   524.288k       2.28034M/s [BEST: throughput=  0.60 GB/s doc_throughput=     4 docs/s instructions=   974184494 cycles=   500358252 branch_miss=  420119 cache_miss= 8497520 cache_ref=   8705769 items=    524288 avg_time= 229916495 ns]
kostya<yyjson_insitu>/manual_time                      152126717 ns    171211913 ns            5          415.14k           902.735M        6.35649M       6.54341M    372.609M              2.71373           6.57467       2.44978G          955.915M                    6.96198                     2.56546           3.44702M    415.678k   137.305M       860.758M/s   6.35699M   6.54546M   372.691M         2.71433    6.57347/s 2.44987G/s     955.915M               6.96198                 2.5649   524.288k       3.44639M/s [BEST: throughput=  0.90 GB/s doc_throughput=     6 docs/s instructions=   955915131 cycles=   372608968 branch_miss=  415140 cache_miss= 6356492 cache_ref=   6543406 items=    524288 avg_time= 152126717 ns]
kostya<sajson>/manual_time                             173343794 ns    192434413 ns            4         399.457k           794.076M        8.49633M       8.54069M    551.431M               4.0161            5.7833       3.18909G          1.53761G                    11.1985                      2.7884           3.03211M    400.373k   137.305M       755.402M/s   8.48858M   8.54074M     552.8M         4.02607    5.76888/s 3.18904G/s     1.53761G               11.1985                2.78149   524.288k       3.02456M/s [BEST: throughput=  0.79 GB/s doc_throughput=     5 docs/s instructions=  1537609243 cycles=   551430659 branch_miss=  399457 cache_miss= 8496326 cache_ref=   8540695 items=    524288 avg_time= 173343794 ns]
kostya<rapidjson>/manual_time                          331455174 ns    350565141 ns            2         1031.65k           418.465M        5.20048M       6.16177M      948.1M              6.90506            3.0477       2.88953G          2.73711G                    19.9346                     2.88695           1.59787M    1026.81k   137.305M       395.059M/s   5.07769M   6.10929M   950.134M         6.91988      3.017/s 2.86655G/s     2.73712G               19.9346                2.88077   524.288k       1.58178M/s [BEST: throughput=  0.42 GB/s doc_throughput=     3 docs/s instructions=  2737114581 cycles=   948099705 branch_miss= 1031649 cache_miss= 5200478 cache_ref=   6161768 items=    524288 avg_time= 331455174 ns]
kostya<rapidjson_lossless>/manual_time                 353887283 ns    373037327 ns            2         1.69518M           389.588M        5.19765M       6.22093M    1026.08M              7.47297           2.83739       2.91138G          3.00607G                    21.8933                     2.92967           1.48761M    1.55029M   137.305M       370.017M/s   5.07624M   6.14139M   1022.24M         7.44501    2.82576/s  2.8886G/s     3.00607G               21.8934                2.94067   524.288k       1.48151M/s [BEST: throughput=  0.39 GB/s doc_throughput=     2 docs/s instructions=  3006065020 cycles=  1026075477 branch_miss= 1695180 cache_miss= 5197647 cache_ref=   6220927 items=    524288 avg_time= 353887283 ns]
kostya<rapidjson_insitu>/manual_time                   318060154 ns    337222459 ns            2         974.439k           436.112M        7.33645M       8.34325M    907.153M              6.60685           3.17623       2.88133G          2.21988G                    16.1675                     2.44708           1.66526M    973.861k   137.305M       411.696M/s   7.21716M   8.28346M   908.948M         6.61992    3.14406/s 2.85779G/s     2.21988G               16.1675                2.44225   524.288k       1.64839M/s [BEST: throughput=  0.44 GB/s doc_throughput=     3 docs/s instructions=  2219879181 cycles=   907153037 branch_miss=  974439 cache_miss= 7336453 cache_ref=   8343254 items=    524288 avg_time= 318060153 ns]
kostya<nlohmann_json>/manual_time                     2324051054 ns   2343130237 ns            1         14.7028M             59.08M        44.4844M       45.1405M    7.41252G              53.9858          0.430283       3.18948G          17.7632G                     129.37                     2.39638           225.592k    14.7028M   137.305M       56.3431M/s   44.4844M   45.1405M   7.41252G         53.9858   0.430283/s 3.18948G/s     17.7632G                129.37                2.39638   524.288k       225.592k/s [BEST: throughput=  0.06 GB/s doc_throughput=     0 docs/s instructions= 17763207067 cycles=  7412523383 branch_miss=14702790 cache_miss=44484380 cache_ref=  45140472 items=    524288 avg_time=2324051054 ns]
distinct_user_id<simdjson_dom>/manual_time                307281 ns       386687 ns         2277           3.655k           2.07395G              34        33.935k    972.521k              1.53998          3.28408k       3.19384G          2.91783M                    4.62037                     3.00028            377.67k    3.86809k   631.515k       1.91403G/s    33.0154   33.9259k    980.37k         1.55241   3.25435k/s 3.19047G/s     2.91783M               4.62037                2.97625        115        374.25k/s [BEST: throughput=  2.07 GB/s doc_throughput=  3284 docs/s instructions=     2917832 cycles=      972521 branch_miss=    3655 cache_miss=      34 cache_ref=     33935 items=       115 avg_time=    307281 ns]
distinct_user_id<simdjson_ondemand>/manual_time           180434 ns       243889 ns         3878           1.598k           3.54628G               2         9.543k    568.924k             0.900888          5.61552k        3.1948G          1.88384M                    2.98304                     3.31123           645.784k    1.79107k   631.515k       3.25961G/s    1.85688   9.62598k   575.791k        0.911762   5.54219k/s 3.19115G/s     1.88384M               2.98304                3.27174        115       637.352k/s [BEST: throughput=  3.55 GB/s doc_throughput=  5615 docs/s instructions=     1883837 cycles=      568924 branch_miss=    1598 cache_miss=       2 cache_ref=      9543 items=       115 avg_time=    180434 ns]
distinct_user_id<yyjson>/manual_time                      693730 ns       783228 ns         1000           6.452k           1.53458G          7.183k        27.334k    1.31416M              2.08096             2.43k       3.19341G          2.87805M                    4.55738                     2.19004            279.45k    7.39011k   631.515k       868.147M/s   2.23909k   25.5991k   1.50667M          2.3858   1.44148k/s 2.17183G/s     2.87825M               4.55769                1.91034        115        165.77k/s [BEST: throughput=  1.53 GB/s doc_throughput=  2430 docs/s instructions=     2878054 cycles=     1314157 branch_miss=    6452 cache_miss=    7183 cache_ref=     27334 items=       115 avg_time=    693730 ns]
distinct_user_id<yyjson_insitu>/manual_time               515961 ns       590750 ns         1370            7.21k           1.75991G          1.425k        14.509k    1.14077M               1.8064          2.78681k       3.17911G          2.87754M                    4.55656                     2.52245           320.483k    7.43905k   631.515k        1.1399G/s    104.918   11.5278k   1.24869M         1.97729   1.93813k/s 2.42012G/s      2.8778M               4.55698                2.30466        115       222.885k/s [BEST: throughput=  1.76 GB/s doc_throughput=  2786 docs/s instructions=     2877538 cycles=     1140771 branch_miss=    7210 cache_miss=    1425 cache_ref=     14509 items=       115 avg_time=    515961 ns]
distinct_user_id<sajson>/manual_time                      686734 ns       758879 ns         1017          10.198k           926.812M               3        13.596k    2.17561M              3.44507           1.4676k       3.19293G          5.81793M                    9.21266                     2.67416           168.774k    10.6303k   631.515k       876.991M/s    2.40118   13.5435k    2.1907M         3.46896   1.45617k/s 3.19003G/s     5.81793M               9.21266                2.65574        115       167.459k/s [BEST: throughput=  0.93 GB/s doc_throughput=  1467 docs/s instructions=     5817932 cycles=     2175612 branch_miss=   10198 cache_miss=       3 cache_ref=     13596 items=       115 avg_time=    686734 ns]
distinct_user_id<rapidjson>/manual_time                  2793936 ns      2871167 ns          252          29.972k            250.03M         12.639k        22.915k    8.06392M              12.7692           395.921       3.19268G          21.8227M                     34.556                     2.70621            45.531k    31.5155k   631.515k        215.56M/s    923.837   16.4203k   8.24642M         13.0581    357.918/s 2.95154G/s     21.8235M               34.5575                2.64643        115       41.1606k/s [BEST: throughput=  0.25 GB/s doc_throughput=   395 docs/s instructions=    21822663 cycles=     8063917 branch_miss=   29972 cache_miss=   12639 cache_ref=     22915 items=       115 avg_time=   2793936 ns]
distinct_user_id<rapidjson_insitu>/manual_time           1807402 ns      1880147 ns          375           25.55k           389.983M          7.103k        14.849k    5.17028M              8.18711           617.536       3.19283G          13.2902M                    21.0449                     2.57049           71.0166k    37.6168k   631.515k       333.218M/s   2.78453k   13.0472k   5.51317M         8.73007     553.28/s 3.05033G/s     13.2904M               21.0453                2.41066        115       63.6272k/s [BEST: throughput=  0.39 GB/s doc_throughput=   617 docs/s instructions=    13290169 cycles=     5170280 branch_miss=   25550 cache_miss=    7103 cache_ref=     14849 items=       115 avg_time=   1807402 ns]
distinct_user_id<nlohmann_json>/manual_time              9709389 ns      9800980 ns           75         126.154k           69.0853M           1.22k        98.478k    29.1484M              46.1563           109.396       3.18872G          75.7166M                    119.897                     2.59763           12.5805k    147.154k   631.515k       62.0286M/s    173.387   105.475k   30.9652M         49.0332    102.993/s  3.1892G/s     74.3744M               117.771                2.40187        115       11.8442k/s [BEST: throughput=  0.07 GB/s doc_throughput=   109 docs/s instructions=    75716591 cycles=    29148365 branch_miss=  126154 cache_miss=    1220 cache_ref=     98478 items=       115 avg_time=   9709388 ns]
find_tweet<simdjson_dom>/manual_time                      290997 ns       367479 ns         2406           3.373k           2.19174G               1         30.82k    920.294k              1.45728          3.47061k       3.19398G          2.83251M                    4.48526                     3.07783           3.47061k    3.53185k   631.515k       2.02114G/s    1.02328   30.8001k   928.518k          1.4703   3.43647k/s 3.19082G/s     2.83251M               4.48526                3.05057          1       3.43647k/s [BEST: throughput=  2.19 GB/s doc_throughput=  3470 docs/s instructions=     2832512 cycles=      920294 branch_miss=    3373 cache_miss=       1 cache_ref=     30820 items=         1 avg_time=    290996 ns]
find_tweet<simdjson_ondemand>/manual_time                 126848 ns       191760 ns         5515              832           5.00861G               2         7.922k    402.837k              0.63789          7.93109k       3.19494G          1.37797M                      2.182                     3.42066           7.93109k     869.304   631.515k       4.63661G/s    1.61124   7.91055k   404.897k        0.641152   7.88346k/s 3.19199G/s     1.37797M                 2.182                3.40325          1       7.88346k/s [BEST: throughput=  5.01 GB/s doc_throughput=  7931 docs/s instructions=     1377968 cycles=      402837 branch_miss=     832 cache_miss=       2 cache_ref=      7922 items=         1 avg_time=    126847 ns]
find_tweet<yyjson>/manual_time                            782513 ns       869982 ns          963           9.405k           1.41154G             260        27.494k    1.38583M              2.19445          2.23517k       3.09757G          2.81716M                    4.46096                     2.03284           2.23517k    7.41697k   631.515k       769.648M/s    397.494   23.3146k   1.53617M         2.43251   1.27793k/s 1.96312G/s     2.81764M               4.46171                 1.8342          1       1.27793k/s [BEST: throughput=  1.41 GB/s doc_throughput=  2235 docs/s instructions=     2817164 cycles=     1385829 branch_miss=    9405 cache_miss=     260 cache_ref=     27494 items=         1 avg_time=    782513 ns]
find_tweet<yyjson_insitu>/manual_time                     502680 ns       572174 ns         1000           6.741k            1.8213G          1.794k        13.416k    1.10256M              1.74589          2.88402k        3.1798G          2.81684M                    4.46045                     2.55483           2.88402k    7.16973k   631.515k       1.17002G/s       8.81   9.37634k   1.20697M         1.91123   1.98934k/s 2.40107G/s      2.8171M               4.46086                2.33402          1       1.98934k/s [BEST: throughput=  1.82 GB/s doc_throughput=  2884 docs/s instructions=     2816839 cycles=     1102556 branch_miss=    6741 cache_miss=    1794 cache_ref=     13416 items=         1 avg_time=    502679 ns]
find_tweet<sajson>/manual_time                            978740 ns      1049667 ns         1038          10.353k           939.676M             457        13.294k    2.14587M              3.39797          1.48797k         3.193G          5.72274M                    9.06192                     2.66686           1.48797k    40.9429k   631.515k       615.341M/s    103.199   13.1404k   3.12212M         4.94386    1021.72/s 3.18994G/s     5.72274M               9.06192                1.83297          1        1021.72/s [BEST: throughput=  0.94 GB/s doc_throughput=  1487 docs/s instructions=     5722739 cycles=     2145872 branch_miss=   10353 cache_miss=     457 cache_ref=     13294 items=         1 avg_time=    978740 ns]
find_tweet<rapidjson>/manual_time                        2771456 ns      2844625 ns          251          30.804k            250.81M          7.403k         21.19k    8.03882M              12.7294           397.157       3.19267G          21.7389M                    34.4235                     2.70424            397.157    31.0529k   631.515k       217.308M/s    669.203   13.5799k   8.17711M         12.9484    360.821/s 2.95047G/s     21.7396M               34.4246                 2.6586          1        360.821/s [BEST: throughput=  0.25 GB/s doc_throughput=   397 docs/s instructions=    21738934 cycles=     8038821 branch_miss=   30804 cache_miss=    7403 cache_ref=     21190 items=         1 avg_time=   2771455 ns]
find_tweet<rapidjson_insitu>/manual_time                 1786171 ns      1854729 ns          378          25.511k           392.862M          6.898k        13.821k     5.1323M              8.12697           622.095       3.19278G           13.211M                    20.9196                      2.5741            622.095    36.7657k   631.515k       337.179M/s   2.52246k   10.5849k   5.44342M         8.61963    559.857/s 3.04754G/s     13.2115M               20.9203                2.42705          1        559.857/s [BEST: throughput=  0.39 GB/s doc_throughput=   622 docs/s instructions=    13211040 cycles=     5132304 branch_miss=   25511 cache_miss=    6898 cache_ref=     13821 items=         1 avg_time=   1786171 ns]
find_tweet<nlohmann_json>/manual_time                    8422332 ns      8511619 ns           87         100.816k            80.222M              67        75.058k    25.1063M              39.7556           127.031       3.18927G          65.8685M                    104.302                     2.62359            127.031    123.608k   631.515k       71.5075M/s    143.356   81.9721k   26.8608M          42.534    118.732/s 3.18924G/s     64.4853M               102.112                2.40072          1        118.732/s [BEST: throughput=  0.08 GB/s doc_throughput=   127 docs/s instructions=    65868485 cycles=    25106273 branch_miss=  100816 cache_miss=      67 cache_ref=     75058 items=         1 avg_time=   8422331 ns]
top_tweet<simdjson_dom>/manual_time                       298621 ns       379748 ns         2341           3.456k           2.13319G               4        32.773k    945.606k              1.49736          3.37789k       3.19415G           2.8694M                    4.54368                     3.03446           3.37789k    3.60859k   631.515k       1.96953G/s    3.38701   32.8651k   952.781k         1.50872   3.34873k/s  3.1906G/s      2.8694M               4.54368                 3.0116          1       3.34873k/s [BEST: throughput=  2.13 GB/s doc_throughput=  3377 docs/s instructions=     2869399 cycles=      945606 branch_miss=    3456 cache_miss=       4 cache_ref=     32773 items=         1 avg_time=    298620 ns]
top_tweet<simdjson_ondemand>/manual_time                  174463 ns       240965 ns         4013           1.456k           3.64469G               1         9.817k     553.49k             0.876448          5.77134k       3.19438G          1.90456M                    3.01587                     3.44101           5.77134k    1.51089k   631.515k       3.37117G/s    1.46549   9.80623k    556.81k        0.881705   5.73187k/s 3.19157G/s     1.90456M               3.01587                3.42049          1       5.73187k/s [BEST: throughput=  3.64 GB/s doc_throughput=  5771 docs/s instructions=     1904564 cycles=      553490 branch_miss=    1456 cache_miss=       1 cache_ref=      9817 items=         1 avg_time=    174462 ns]
top_tweet<simdjson_ondemand_forward_only>/manual_time     196509 ns       264122 ns         3561           1.805k            3.2429G               3        10.862k    622.043k             0.985001           5.1351k       3.19426G          2.13002M                    3.37288                     3.42424            5.1351k    1.92874k   631.515k       2.99296G/s    3.05757     10.89k   627.095k        0.993001   5.08881k/s 3.19117G/s     2.13002M               3.37288                3.39665          1       5.08881k/s [BEST: throughput=  3.24 GB/s doc_throughput=  5135 docs/s instructions=     2130022 cycles=      622043 branch_miss=    1805 cache_miss=       3 cache_ref=     10862 items=         1 avg_time=    196509 ns]
top_tweet<yyjson>/manual_time                             788386 ns       879106 ns          959           9.566k           1.44627G             225        27.329k     1.3946M              2.20834          2.29016k       3.19386G          2.84444M                    4.50415                     2.03961           2.29016k    7.47635k   631.515k       763.915M/s    419.504   24.3818k   1.55469M         2.46184   1.26841k/s 1.97199G/s     2.84491M                4.5049                 1.8299          1       1.26841k/s [BEST: throughput=  1.45 GB/s doc_throughput=  2290 docs/s instructions=     2844438 cycles=     1394598 branch_miss=    9566 cache_miss=     225 cache_ref=     27329 items=         1 avg_time=    788385 ns]
top_tweet<yyjson_insitu>/manual_time                      512076 ns       584438 ns         1384             7.2k           1.78756G             152        14.804k    1.12821M              1.78652          2.83059k       3.19351G          2.84432M                    4.50396                     2.52108           2.83059k    7.27074k   631.515k       1.14855G/s    59.2095   8.94135k   1.23545M         1.95633   1.95284k/s 2.41263G/s     2.84458M               4.50438                2.30247          1       1.95284k/s [BEST: throughput=  1.79 GB/s doc_throughput=  2830 docs/s instructions=     2844320 cycles=     1128213 branch_miss=    7200 cache_miss=     152 cache_ref=     14804 items=         1 avg_time=    512075 ns]
top_tweet<sajson>/manual_time                             678283 ns       753385 ns          977          10.004k           939.066M               0        13.406k    2.14726M              3.40017            1.487k       3.19298G          5.75273M                    9.10941                     2.67911             1.487k    10.5022k   631.515k       887.918M/s    2.53531   13.4626k   2.16371M         3.42622   1.47431k/s 3.18998G/s     5.75273M               9.10941                2.65874          1       1.47431k/s [BEST: throughput=  0.94 GB/s doc_throughput=  1487 docs/s instructions=     5752730 cycles=     2147256 branch_miss=   10004 cache_miss=       0 cache_ref=     13406 items=         1 avg_time=    678282 ns]
top_tweet<rapidjson>/manual_time                         2789897 ns      2865030 ns          252           29.61k           251.238M          7.395k        22.082k     8.0251M              12.7077           397.834       3.19266G          21.7984M                    34.5177                     2.71628            397.834    31.9607k   631.515k       215.872M/s     770.54   11.8667k    8.2348M         13.0398    358.436/s 2.95165G/s     21.7991M               34.5188                 2.6472          1        358.436/s [BEST: throughput=  0.25 GB/s doc_throughput=   397 docs/s instructions=    21798431 cycles=     8025101 branch_miss=   29610 cache_miss=    7395 cache_ref=     22082 items=         1 avg_time=   2789897 ns]
top_tweet<rapidjson_insitu>/manual_time                  1797942 ns      1871212 ns          384          25.681k           390.887M          7.038k        14.558k    5.15805M              8.16774           618.967       3.19266G          13.2664M                    21.0072                     2.57197            618.967    37.0096k   631.515k       334.972M/s   2.64803k   11.6193k   5.47971M         8.67708    556.192/s 3.04777G/s     13.2666M               21.0076                2.42104          1        556.192/s [BEST: throughput=  0.39 GB/s doc_throughput=   618 docs/s instructions=    13266369 cycles=     5158051 branch_miss=   25681 cache_miss=    7038 cache_ref=     14558 items=         1 avg_time=   1797941 ns]
top_tweet<nlohmann_json>/manual_time                    11132048 ns     11224048 ns           63         191.913k           57.0749M             270       163.669k    35.2793M              55.8645           90.3777       3.18846G          87.7704M                    138.984                     2.48787            90.3777    196.341k   631.515k       54.1014M/s    263.762    164.69k   35.5021M         56.2173    89.8307/s 3.18918G/s     88.1237M               139.543                2.48221          1        89.8307/s [BEST: throughput=  0.06 GB/s doc_throughput=    90 docs/s instructions=    87770380 cycles=    35279300 branch_miss=  191913 cache_miss=     270 cache_ref=    163669 items=         1 avg_time=  11132047 ns]
