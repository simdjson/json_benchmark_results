run_benchmark: v0.8.0~1 /home/jkeiser/simdjson_benchmark_results/v0.7.0/37/skylake-x-gcc10.2-native.json -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native
git reset --hard v0.8.0~1
HEAD is now at 1005c62e It seems that we export too many targets. (#1385)
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The CXX compiler identification is GNU 10.2.0
-- The C compiler identification is GNU 10.2.0
-- Check for working CXX compiler: /usr/bin/g++-10
-- Check for working CXX compiler: /usr/bin/g++-10 -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Check for working C compiler: /usr/bin/gcc-10
-- Check for working C compiler: /usr/bin/gcc-10 -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed
-- Check if compiler accepts -pthread
-- Check if compiler accepts -pthread - yes
-- Found Threads: TRUE  
-- Looking for fork
-- Looking for fork - found
-- Looking for wait
-- Looking for wait - found
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- Found Git: /usr/bin/git (found version "2.27.0") 
-- git Version: v0.2.1-1005c62e
-- Version: 0.2.1
-- Performing Test HAVE_CXX_FLAG_STD_CXX11
-- Performing Test HAVE_CXX_FLAG_STD_CXX11 - Success
-- Performing Test HAVE_CXX_FLAG_WALL
-- Performing Test HAVE_CXX_FLAG_WALL - Success
-- Performing Test HAVE_CXX_FLAG_WEXTRA
-- Performing Test HAVE_CXX_FLAG_WEXTRA - Success
-- Performing Test HAVE_CXX_FLAG_WSHADOW
-- Performing Test HAVE_CXX_FLAG_WSHADOW - Success
-- Performing Test HAVE_CXX_FLAG_WERROR
-- Performing Test HAVE_CXX_FLAG_WERROR - Success
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32 - Failed
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED - Success
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WD654
-- Performing Test HAVE_CXX_FLAG_WD654 - Failed
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY - Failed
-- Performing Test HAVE_CXX_FLAG_COVERAGE
-- Performing Test HAVE_CXX_FLAG_COVERAGE - Success
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Performing Test USE_BOOST_JSON
-- Performing Test USE_BOOST_JSON - Failed
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Found Python3: /usr/bin/python3.8 (found version "3.8.6") found components: Interpreter 
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 10
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
Scanning dependencies of target benchmark
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_api_internal.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_name.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_name.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_register.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_register.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_runner.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_runner.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/colorprint.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/colorprint.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/commandlineflags.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/commandlineflags.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/complexity.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/complexity.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/console_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/console_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/counter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/counter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/csv_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/csv_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/json_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/json_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/sleep.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sleep.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/statistics.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/statistics.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/string_util.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/string_util.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/sysinfo.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sysinfo.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/timers.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/timers.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -P CMakeFiles/benchmark.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/benchmark.dir/link.txt --verbose=1
/usr/bin/ar qc libbenchmark.a  CMakeFiles/benchmark.dir/benchmark.cc.o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o CMakeFiles/benchmark.dir/benchmark_name.cc.o CMakeFiles/benchmark.dir/benchmark_register.cc.o CMakeFiles/benchmark.dir/benchmark_runner.cc.o CMakeFiles/benchmark.dir/colorprint.cc.o CMakeFiles/benchmark.dir/commandlineflags.cc.o CMakeFiles/benchmark.dir/complexity.cc.o CMakeFiles/benchmark.dir/console_reporter.cc.o CMakeFiles/benchmark.dir/counter.cc.o CMakeFiles/benchmark.dir/csv_reporter.cc.o CMakeFiles/benchmark.dir/json_reporter.cc.o CMakeFiles/benchmark.dir/reporter.cc.o CMakeFiles/benchmark.dir/sleep.cc.o CMakeFiles/benchmark.dir/statistics.cc.o CMakeFiles/benchmark.dir/string_util.cc.o CMakeFiles/benchmark.dir/sysinfo.cc.o CMakeFiles/benchmark.dir/timers.cc.o
/usr/bin/ranlib libbenchmark.a
[ 80%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
Scanning dependencies of target generated-data
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated && /usr/bin/ruby genfeaturejson.rb /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-miss.json ...
[ 80%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/g++-10  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/include  -march=native -O3 -DNDEBUG -fPIC   -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -pthread -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/g++-10 -fPIC -march=native -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.6 -o ../libsimdjson.so.6.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.6.0.0 ../libsimdjson.so.6 ../libsimdjson.so
[ 80%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
Scanning dependencies of target yyjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/gcc-10  -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src  -O3 -DNDEBUG   -o CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o   -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src/yyjson.c
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -P CMakeFiles/yyjson.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -E cmake_link_script CMakeFiles/yyjson.dir/link.txt --verbose=1
/usr/bin/ar qc libyyjson.a  CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o
/usr/bin/ranlib libyyjson.a
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/g++-10  -DRAPIDJSON_HAS_STDSTRING -DSAJSON_UNSORTED_OBJECT_KEYS -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_COMPETITION_NLOHMANN_JSON -DSIMDJSON_COMPETITION_RAPIDJSON -DSIMDJSON_COMPETITION_SAJSON -DSIMDJSON_COMPETITION_YYJSON -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/rapidjson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/sajson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/json  -march=native -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/g++-10  -march=native -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.6.0.0 ../_deps/google_benchmarks/src/libbenchmark.a ../dependencies/libyyjson.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/37/skylake-x-gcc10.2-native.json --benchmark_out_format=json
2021-01-24 21:23:35
Running benchmark/bench_ondemand
Run on (4 X 3200 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 1024 KiB (x4)
  L3 Unified 8448 KiB (x1)
Load Average: 1.00, 1.01, 1.00
***WARNING*** CPU scaling is enabled, the benchmark real time measurements may be noisy and will incur extra overhead.
simdjson::dom implementation:      haswell
simdjson::ondemand implementation: haswell
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                  326164 ns       397297 ns         2142           4.309k           1.95057G               0        33.487k    1033.97k              1.63729          3.08872k       3.19365G          3.07044M                    4.86202                     2.96955           308.872k    4.46463k   631.515k       1.80322G/s   0.435574   33.4159k   1040.64k         1.64785   3.06594k/s 3.19055G/s     3.07044M               4.86202                2.95053        100       306.594k/s [BEST: throughput=  1.95 GB/s doc_throughput=  3088 docs/s instructions=     3070441 cycles=     1033974 branch_miss=    4309 cache_miss=       0 cache_ref=     33487 items=       100 avg_time=    326163 ns]
partial_tweets<simdjson_ondemand>/manual_time             240713 ns       298077 ns         2902           2.338k           2.64113G               0         8.529k     763.77k              1.20942          4.18221k       3.19425G          2.23641M                    3.54133                     2.92811           418.221k    2.46594k   631.515k       2.44334G/s     0.2102   8.66388k   768.197k         1.21644   4.15432k/s 3.19134G/s     2.23641M               3.54133                2.91124        100       415.432k/s [BEST: throughput=  2.64 GB/s doc_throughput=  4182 docs/s instructions=     2236405 cycles=      763770 branch_miss=    2338 cache_miss=       0 cache_ref=      8529 items=       100 avg_time=    240713 ns]
partial_tweets<yyjson>/manual_time                        867498 ns       947207 ns          808           9.858k           1.23387G             410        28.409k    1.63437M              2.58802          1.95382k       3.19328G          2.90846M                    4.60553                     1.77956           195.382k    7.73399k   631.515k       694.249M/s    592.141   23.4333k   1.80245M         2.85417   1.15274k/s 2.07776G/s     2.90915M               4.60663                  1.614        100       115.274k/s [BEST: throughput=  1.23 GB/s doc_throughput=  1953 docs/s instructions=     2908461 cycles=     1634374 branch_miss=    9858 cache_miss=     410 cache_ref=     28409 items=       100 avg_time=    867498 ns]
partial_tweets<yyjson_insitu>/manual_time                 588197 ns       650183 ns         1199           7.587k           1.47489G             119        14.191k     1.3675M              2.16543          2.33548k       3.19377G          2.90835M                    4.60536                     2.12676           233.548k     7.4398k   631.515k       1023.91M/s    62.4679   8.52026k   1.47852M         2.34122   1.70011k/s 2.51364G/s     2.90861M               4.60577                1.96725        100       170.011k/s [BEST: throughput=  1.47 GB/s doc_throughput=  2335 docs/s instructions=     2908351 cycles=     1367500 branch_miss=    7587 cache_miss=     119 cache_ref=     14191 items=       100 avg_time=    588197 ns]
partial_tweets<sajson>/manual_time                        611195 ns       675919 ns         1143          10.106k            1042.9M               0        12.783k    1.93368M              3.06197          1.65143k       3.19333G          6.04845M                    9.57768                     3.12795           165.143k      10.57k   631.515k        985.38M/s    1.78215   12.8654k   1.94992M         3.08769   1.63614k/s 3.19035G/s     6.04845M               9.57768                3.10189        100       163.614k/s [BEST: throughput=  1.04 GB/s doc_throughput=  1651 docs/s instructions=     6048450 cycles=     1933678 branch_miss=   10106 cache_miss=       0 cache_ref=     12783 items=       100 avg_time=    611195 ns]
partial_tweets<rapidjson>/manual_time                    1903791 ns      1969798 ns          368          25.936k           385.636M           7.83k        22.595k    5.22843M              8.27918           610.652       3.19275G          13.1155M                    20.7683                      2.5085           61.0652k    26.4217k   631.515k       316.348M/s    341.261    12.158k   5.39355M         8.54065    525.268/s 2.83306G/s     13.1162M               20.7695                2.43184        100       52.5268k/s [BEST: throughput=  0.39 GB/s doc_throughput=   610 docs/s instructions=    13115492 cycles=     5228428 branch_miss=   25936 cache_miss=    7830 cache_ref=     22595 items=       100 avg_time=   1903791 ns]
partial_tweets<rapidjson_insitu>/manual_time             1427948 ns      1490010 ns          492          24.917k           498.295M             206        14.111k    4.04644M              6.40751           789.047       3.19283G          9.82284M                    15.5544                     2.42753           78.9047k    24.9332k   631.515k       421.766M/s    184.028   9.11897k   4.15756M         6.58347    700.306/s 2.91156G/s     9.82323M                15.555                2.36274        100       70.0306k/s [BEST: throughput=  0.50 GB/s doc_throughput=   789 docs/s instructions=     9822840 cycles=     4046437 branch_miss=   24917 cache_miss=     206 cache_ref=     14111 items=       100 avg_time=   1427947 ns]
partial_tweets<nlohmann_json>/manual_time                9063106 ns      9152319 ns           77         134.124k           72.8343M              15        99.303k    27.6542M              43.7903           115.333       3.18943G           70.693M                    111.942                     2.55632           11.5333k    143.974k   631.515k       66.4518M/s    35.1818   144.408k   28.9037M         45.7688    110.337/s 3.18916G/s     71.5171M               113.247                2.47432        100       11.0337k/s [BEST: throughput=  0.07 GB/s doc_throughput=   115 docs/s instructions=    70692999 cycles=    27654232 branch_miss=  134124 cache_miss=      15 cache_ref=     99303 items=       100 avg_time=   9063105 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                 104844885 ns    111005465 ns            7         857.614k           439.723M        6.81191M       6.89512M    333.565M              7.25161           9.55944        3.1887G          998.581M                    21.7089                     2.99366           9.55944M    857.965k   45.9988M       418.407M/s   6.80116M   6.89493M   334.297M         7.26753     9.5379/s 3.18849G/s     998.581M               21.7089                 2.9871      1000k        9.5379M/s [BEST: throughput=  0.44 GB/s doc_throughput=     9 docs/s instructions=   998581028 cycles=   333565113 branch_miss=  857614 cache_miss= 6811912 cache_ref=   6895124 items=   1000000 avg_time= 104844885 ns]
large_random<simdjson_ondemand>/manual_time             66043956 ns     72173390 ns           11         867.685k           697.018M        3.49703M       3.57238M     210.44M               4.5749            15.153       3.18879G          651.959M                    14.1734                     3.09808            15.153M    867.498k   45.9988M       664.222M/s   3.50637M   3.57246M   210.576M         4.57787    15.1414/s 3.18843G/s     651.959M               14.1734                3.09607      1000k       15.1414M/s [BEST: throughput=  0.70 GB/s doc_throughput=    15 docs/s instructions=   651958679 cycles=   210439835 branch_miss=  867685 cache_miss= 3497030 cache_ref=   3572383 items=   1000000 avg_time=  66043956 ns]
large_random<simdjson_ondemand_unordered>/manual_time   70750776 ns     76874181 ns           10         865.754k           650.475M        3.48467M       3.57217M    225.512M              4.90256           14.1411       3.18899G          651.959M                    14.1734                     2.89102           14.1411M    865.703k   45.9988M       620.033M/s   3.50983M   3.57231M   225.608M         4.90465    14.1341/s 3.18877G/s     651.959M               14.1734                2.88979      1000k       14.1341M/s [BEST: throughput=  0.65 GB/s doc_throughput=    14 docs/s instructions=   651958684 cycles=   225511709 branch_miss=  865754 cache_miss= 3484674 cache_ref=   3572170 items=   1000000 avg_time=  70750776 ns]
large_random<yyjson>/manual_time                       157622463 ns    163745475 ns            4         657.718k           292.067M        4.19677M       4.32527M    362.027M              7.87037           6.34945       2.29868G           942.15M                    20.4821                     2.60243           6.34945M     661.41k   45.9988M        278.31M/s   4.19936M   4.32794M   362.458M         7.87974    6.34427/s 2.29954G/s      942.15M               20.4821                2.59933      1000k       6.34427M/s [BEST: throughput=  0.29 GB/s doc_throughput=     6 docs/s instructions=   942149630 cycles=   362027374 branch_miss=  657718 cache_miss= 4196765 cache_ref=   4325273 items=   1000000 avg_time= 157622463 ns]
large_random<yyjson_insitu>/manual_time                131437290 ns    137606103 ns            5          657.48k           350.369M        3.48343M       3.60918M    319.048M              6.93601           7.61691       2.43016G          936.029M                     20.349                     2.93382           7.61691M    660.548k   45.9988M       333.755M/s   3.48429M   3.60978M   319.514M         6.94615    7.60819/s 2.43093G/s     936.029M                20.349                2.92954      1000k       7.60819M/s [BEST: throughput=  0.35 GB/s doc_throughput=     7 docs/s instructions=   936028650 cycles=   319047808 branch_miss=  657480 cache_miss= 3483427 cache_ref=   3609175 items=   1000000 avg_time= 131437290 ns]
large_random<sajson>/manual_time                       104321201 ns    110469949 ns            7          594.36k           441.656M        5.42032M       5.57616M    332.055M              7.21878           9.60147       3.18821G          1066.99M                    23.1961                      3.2133           9.60147M    594.632k   45.9988M       420.508M/s   5.46762M   5.57612M    332.65M         7.23172    9.58578/s 3.18871G/s     1066.99M               23.1961                3.20755      1000k       9.58578M/s [BEST: throughput=  0.44 GB/s doc_throughput=     9 docs/s instructions=  1066991832 cycles=   332054847 branch_miss=  594360 cache_miss= 5420320 cache_ref=   5576158 items=   1000000 avg_time= 104321201 ns]
large_random<rapidjson>/manual_time                    208120973 ns    214301753 ns            4         592.536k           231.646M        4.36759M       4.94613M    564.986M              12.2826           5.03592       2.84523G          1.66512G                    36.1993                     2.94719           5.03592M    594.424k   45.9988M       210.781M/s   4.07277M    4.7396M   570.904M         12.4113     4.8049/s 2.74314G/s     1.66513G               36.1995                2.91666      1000k        4.8049M/s [BEST: throughput=  0.23 GB/s doc_throughput=     5 docs/s instructions=  1665122017 cycles=   564986069 branch_miss=  592536 cache_miss= 4367592 cache_ref=   4946134 items=   1000000 avg_time= 208120973 ns]
large_random<rapidjson_lossless>/manual_time           241388374 ns    247550411 ns            3         594.352k           197.227M        4.36022M       4.89714M     675.52M              14.6856           4.28765       2.89639G          2.04909G                    44.5466                     3.03335           4.28765M      590.5k   45.9988M       181.731M/s   4.10089M    4.6943M   679.631M          14.775     4.1427/s 2.81551G/s      2.0491G               44.5468                3.01501      1000k        4.1427M/s [BEST: throughput=  0.20 GB/s doc_throughput=     4 docs/s instructions=  2049087668 cycles=   675520318 branch_miss=  594352 cache_miss= 4360215 cache_ref=   4897139 items=   1000000 avg_time= 241388373 ns]
large_random<rapidjson_insitu>/manual_time             189502836 ns    195702666 ns            4          605.46k           255.993M        5.05108M        5.6135M    504.761M              10.9734            5.5652        2.8091G          1.49712G                     32.547                       2.966            5.5652M    598.584k   45.9988M       231.489M/s   4.77171M   5.38059M   511.579M         11.1216    5.27697/s 2.69959G/s     1.49713G               32.5472                2.92649      1000k       5.27697M/s [BEST: throughput=  0.26 GB/s doc_throughput=     5 docs/s instructions=  1497122093 cycles=   504761060 branch_miss=  605460 cache_miss= 5051077 cache_ref=   5613498 items=   1000000 avg_time= 189502835 ns]
large_random<nlohmann_json>/manual_time               1470454299 ns   1476603650 ns            1         4.50941M            31.282M        30.3905M       30.8896M    4.67485G               101.63          0.680062       3.17919G          11.9244G                    259.232                     2.55075           680.062k    4.50941M   45.9988M       29.8329M/s   30.3905M   30.8896M   4.67485G          101.63   0.680062/s 3.17919G/s     11.9244G               259.232                2.55075      1000k       680.062k/s [BEST: throughput=  0.03 GB/s doc_throughput=     0 docs/s instructions= 11924357755 cycles=  4674846258 branch_miss= 4509413 cache_miss=30390467 cache_ref=  30889576 items=   1000000 avg_time=1470454299 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                       100748395 ns    119742819 ns            7         453.198k           1.36576G        10.2013M       10.3145M    320.568M              2.33471           9.94692       3.18866G           972.65M                    7.08386                     3.03415           5.21505M    451.587k   137.305M       1.26925G/s   10.2401M   10.3146M   321.219M         2.33945    9.92572/s 3.18833G/s      972.65M               7.08386                  3.028   524.288k       5.20393M/s [BEST: throughput=  1.37 GB/s doc_throughput=     9 docs/s instructions=   972650011 cycles=   320567670 branch_miss=  453198 cache_miss=10201346 cache_ref=  10314461 items=    524288 avg_time= 100748395 ns]
kostya<simdjson_ondemand>/manual_time                   69719890 ns     88689120 ns           10         468.414k           1.97251G        6.43384M       6.47004M    221.964M              1.61658           14.3659       3.18872G          700.216M                    5.09972                     3.15463           7.53187M    469.038k   137.305M       1.83413G/s   6.43973M    6.4702M   222.306M         1.61907    14.3431/s 3.18856G/s     700.216M               5.09972                3.14979   524.288k       7.51992M/s [BEST: throughput=  1.97 GB/s doc_throughput=    14 docs/s instructions=   700216390 cycles=   221964320 branch_miss=  468414 cache_miss= 6433838 cache_ref=   6470036 items=    524288 avg_time=  69719890 ns]
kostya<yyjson>/manual_time                             265437267 ns    284553445 ns            3         415.018k           517.307M        8.48853M       8.65493M    613.777M              4.47017           3.76757       2.31245G          983.521M                    7.16304                     1.60241           1.97529M    416.009k   137.305M       493.315M/s   8.48864M   8.65502M   613.756M         4.47002    3.76737/s 2.31225G/s     983.521M               7.16304                1.60246   524.288k       1.97519M/s [BEST: throughput=  0.52 GB/s doc_throughput=     3 docs/s instructions=   983520661 cycles=   613777102 branch_miss=  415018 cache_miss= 8488533 cache_ref=   8654931 items=    524288 avg_time= 265437267 ns]
kostya<yyjson_insitu>/manual_time                      187482840 ns    206544981 ns            4         412.141k           732.472M        6.34918M          6.55M     485.76M              3.53782           5.33463       2.59135G          965.251M                    7.02998                     1.98709           2.79689M    412.395k   137.305M       698.433M/s   6.35066M   6.54221M   485.801M         3.53812    5.33382/s 2.59118G/s     965.251M               7.02998                1.98693   524.288k       2.79646M/s [BEST: throughput=  0.73 GB/s doc_throughput=     5 docs/s instructions=   965251192 cycles=   485760277 branch_miss=  412141 cache_miss= 6349181 cache_ref=   6550004 items=    524288 avg_time= 187482839 ns]
kostya<sajson>/manual_time                             156151460 ns    175206108 ns            4          371.18k           879.491M        8.46995M       8.54536M    497.872M              3.62603           6.40539       3.18906G          1.60357G                    11.6789                     3.22084           3.35827M    370.716k   137.305M       838.572M/s   8.49499M   8.54543M   497.977M         3.62679    6.40404/s 3.18906G/s     1.60357G               11.6789                3.22017   524.288k       3.35756M/s [BEST: throughput=  0.88 GB/s doc_throughput=     6 docs/s instructions=  1603566988 cycles=   497872300 branch_miss=  371180 cache_miss= 8469950 cache_ref=   8545363 items=    524288 avg_time= 156151460 ns]
kostya<rapidjson>/manual_time                          297788370 ns    316905975 ns            2         1.41227M           466.932M        5.23613M        5.8928M    840.231M              6.11945           3.40069       2.85737G          2.29089G                    16.6847                      2.7265           1.78294M    1.45788M   137.305M       439.723M/s   5.11191M   5.80101M   843.456M         6.14294    3.35809/s  2.8324G/s     2.29089G               16.6847                2.71607   524.288k       1.76061M/s [BEST: throughput=  0.47 GB/s doc_throughput=     3 docs/s instructions=  2290888490 cycles=   840230544 branch_miss= 1412265 cache_miss= 5236130 cache_ref=   5892801 items=    524288 avg_time= 297788369 ns]
kostya<rapidjson_lossless>/manual_time                 319169754 ns    338258159 ns            2         1003.07k           434.608M         5.2424M       5.75004M    910.215M              6.62915           3.16528       2.88108G          2.50793G                    18.2654                     2.75532           1.65952M    983.595k   137.305M       410.265M/s   5.11799M   5.65077M   912.033M         6.64239    3.13313/s 2.85752G/s     2.50794G               18.2654                2.74983   524.288k       1.64266M/s [BEST: throughput=  0.43 GB/s doc_throughput=     3 docs/s instructions=  2507934984 cycles=   910215360 branch_miss= 1003071 cache_miss= 5242395 cache_ref=   5750044 items=    524288 avg_time= 319169754 ns]
kostya<rapidjson_insitu>/manual_time                   284448175 ns    303562497 ns            2         1022.15k           488.458M        7.37342M       8.01052M    799.414M              5.82218           3.55747       2.84389G          2.04115G                    14.8658                     2.55331           1.86514M    1021.95k   137.305M       460.345M/s   7.25318M   7.91842M   801.548M         5.83772    3.51558/s  2.8179G/s     2.04115G               14.8658                2.54652   524.288k       1.84318M/s [BEST: throughput=  0.49 GB/s doc_throughput=     3 docs/s instructions=  2041153462 cycles=   799413886 branch_miss= 1022155 cache_miss= 7373423 cache_ref=   8010522 items=    524288 avg_time= 284448174 ns]
kostya<nlohmann_json>/manual_time                     1958873367 ns   1977945749 ns            1         3.78068M           70.0939M        45.3914M        45.992M    6.24746G              45.5006          0.510498       3.18931G          15.1099G                    110.046                     2.41857           267.648k    3.78068M   137.305M       66.8467M/s   45.3914M    45.992M   6.24746G         45.5006   0.510498/s 3.18931G/s     15.1099G               110.046                2.41857   524.288k       267.648k/s [BEST: throughput=  0.07 GB/s doc_throughput=     0 docs/s instructions= 15109884388 cycles=  6247457250 branch_miss= 3780679 cache_miss=45391434 cache_ref=  45991994 items=    524288 avg_time=1958873367 ns]
distinct_user_id<simdjson_dom>/manual_time                325862 ns       404421 ns         2146           4.352k           1.95451G              43        33.295k    1031.91k              1.63403          3.09495k       3.19372G          3.01136M                    4.76848                     2.91824           355.919k    4.43217k   631.515k       1.80489G/s    29.7698    33.403k   1039.74k         1.64642   3.06878k/s 3.19072G/s     3.01137M               4.76848                2.89628        115        352.91k/s [BEST: throughput=  1.95 GB/s doc_throughput=  3094 docs/s instructions=     3011365 cycles=     1031913 branch_miss=    4352 cache_miss=      43 cache_ref=     33295 items=       115 avg_time=    325862 ns]
distinct_user_id<simdjson_ondemand>/manual_time           224940 ns       287956 ns         3110           2.169k           2.82575G               0         7.319k    714.013k              1.13064          4.47455k       3.19489G          2.19251M                    3.47183                     3.07069           514.574k    2.26769k   631.515k       2.61467G/s   0.196141   7.29819k   717.856k         1.13672   4.44563k/s 3.19132G/s     2.19251M               3.47183                3.05425        115       511.247k/s [BEST: throughput=  2.83 GB/s doc_throughput=  4474 docs/s instructions=     2192511 cycles=      714013 branch_miss=    2169 cache_miss=       0 cache_ref=      7319 items=       115 avg_time=    224940 ns]
distinct_user_id<yyjson>/manual_time                      763531 ns       853063 ns         1000           6.676k           1.32092G          7.181k        27.354k    1.52668M              2.41748          2.09167k       3.19329G           2.8752M                    4.55285                      1.8833           240.541k     7.6008k   631.515k       788.782M/s    2.2212k   24.4872k   1.72831M         2.73677    1.3097k/s 2.26358G/s     2.87547M                4.5533                1.66375        115       150.616k/s [BEST: throughput=  1.32 GB/s doc_throughput=  2091 docs/s instructions=     2875196 cycles=     1526676 branch_miss=    6676 cache_miss=    7181 cache_ref=     27354 items=       115 avg_time=    763530 ns]
distinct_user_id<yyjson_insitu>/manual_time               586442 ns       658011 ns         1205            7.42k           1.48732G              86        14.164k    1.35617M              2.14749          2.35517k       3.19401G          2.87458M                    4.55187                     2.11963           270.844k    7.54554k   631.515k       1026.97M/s    66.8365   8.53404k   1.47306M         2.33257    1.7052k/s 2.51185G/s     2.87484M               4.55229                1.95162        115       196.098k/s [BEST: throughput=  1.49 GB/s doc_throughput=  2355 docs/s instructions=     2874577 cycles=     1356169 branch_miss=    7420 cache_miss=      86 cache_ref=     14164 items=       115 avg_time=    586441 ns]
distinct_user_id<sajson>/manual_time                      605290 ns       678371 ns         1155          10.129k           1052.71M               0        12.702k    1.91564M               3.0334          1.66696k        3.1933G          5.98102M                     9.4709                      3.1222           191.701k     10.583k   631.515k       994.994M/s    2.71169   12.6769k   1.93095M         3.05765    1.6521k/s 3.19013G/s     5.98102M                9.4709                3.09745        115       189.992k/s [BEST: throughput=  1.05 GB/s doc_throughput=  1666 docs/s instructions=     5981016 cycles=     1915639 branch_miss=   10129 cache_miss=       0 cache_ref=     12702 items=       115 avg_time=    605289 ns]
distinct_user_id<rapidjson>/manual_time                  1894502 ns      1967391 ns          372          25.957k           387.194M          7.739k        22.616k    5.20756M              8.24614           613.119       3.19285G          13.0571M                    20.6758                     2.50733           70.5087k    26.2997k   631.515k       317.899M/s    616.011   11.8467k   5.37913M         8.51781    527.843/s 2.83934G/s     13.0577M               20.6768                2.42747        115        60.702k/s [BEST: throughput=  0.39 GB/s doc_throughput=   613 docs/s instructions=    13057073 cycles=     5207559 branch_miss=   25957 cache_miss=    7739 cache_ref=     22616 items=       115 avg_time=   1894502 ns]
distinct_user_id<rapidjson_insitu>/manual_time           1400190 ns      1471338 ns          525          24.828k           499.734M              78        14.372k    4.03501M              6.38941           791.325         3.193G          9.77517M                    15.4789                     2.42259           91.0024k     24.897k   631.515k       430.127M/s   1.38949k   10.8535k   4.13795M         6.55241    714.189/s 2.95528G/s      9.7757M               15.4798                2.36245        115       82.1317k/s [BEST: throughput=  0.50 GB/s doc_throughput=   791 docs/s instructions=     9775174 cycles=     4035009 branch_miss=   24828 cache_miss=      78 cache_ref=     14372 items=       115 avg_time=   1400190 ns]
distinct_user_id<nlohmann_json>/manual_time              8676370 ns      8768036 ns           85         111.753k           78.8782M             894        98.836k    25.5222M              40.4143           124.903       3.18781G          66.1227M                    104.705                     2.59079           14.3639k     128.99k   631.515k       69.4138M/s    21.1882   106.019k     27.67M         43.8152    115.256/s 3.18912G/s     64.7346M               102.507                2.33952        115       13.2544k/s [BEST: throughput=  0.08 GB/s doc_throughput=   124 docs/s instructions=    66122702 cycles=    25522237 branch_miss=  111753 cache_miss=     894 cache_ref=     98836 items=       115 avg_time=   8676370 ns]
find_tweet<simdjson_dom>/manual_time                      311286 ns       387260 ns         2249           4.111k           2.04521G               0        29.641k    986.193k              1.56163          3.23858k       3.19387G          2.93033M                    4.64015                     2.97135           3.23858k    4.27379k   631.515k        1.8894G/s  0.0649177   29.4507k   993.217k         1.57275   3.21248k/s 3.19069G/s     2.93033M               4.64015                2.95034          1       3.21248k/s [BEST: throughput=  2.05 GB/s doc_throughput=  3238 docs/s instructions=     2930326 cycles=      986193 branch_miss=    4111 cache_miss=       0 cache_ref=     29641 items=         1 avg_time=    311285 ns]
find_tweet<simdjson_ondemand>/manual_time                 152071 ns       217225 ns         4595           1.332k           4.18236G               1         7.101k    482.478k             0.764001          6.62274k       3.19532G          1.56921M                    2.48484                      3.2524           6.62274k    1.39008k   631.515k       3.86757G/s    1.02938   7.10044k   485.405k        0.768636   6.57589k/s 3.19197G/s     1.56921M               2.48484                3.23279          1       6.57589k/s [BEST: throughput=  4.18 GB/s doc_throughput=  6622 docs/s instructions=     1569211 cycles=      482478 branch_miss=    1332 cache_miss=       1 cache_ref=      7101 items=         1 avg_time=    152070 ns]
find_tweet<yyjson>/manual_time                            846778 ns       932260 ns          891           9.795k           1.26256G             219        27.223k     1.5976M              2.52979          1.99926k       3.19402G          2.82414M                    4.47201                     1.76774           1.99926k    7.53346k   631.515k       711.237M/s    309.614   19.5704k   1.74111M         2.75704   1.18095k/s 2.05616G/s     2.82462M               4.47277                1.62231          1       1.18095k/s [BEST: throughput=  1.26 GB/s doc_throughput=  1999 docs/s instructions=     2824142 cycles=     1597603 branch_miss=    9795 cache_miss=     219 cache_ref=     27223 items=         1 avg_time=    846778 ns]
find_tweet<yyjson_insitu>/manual_time                     571072 ns       635045 ns         1236            6.72k           1.53078G            1037         12.68k    1.31247M              2.07828          2.42398k       3.18139G          2.82402M                    4.47182                     2.15169           2.42398k    7.29742k   631.515k       1054.61M/s    8.36489   4.66522k   1.42474M         2.25607   1.75109k/s 2.49486G/s     2.82429M               4.47224                1.98231          1       1.75109k/s [BEST: throughput=  1.53 GB/s doc_throughput=  2423 docs/s instructions=     2824024 cycles=     1312468 branch_miss=    6720 cache_miss=    1037 cache_ref=     12680 items=         1 avg_time=    571071 ns]
find_tweet<sajson>/manual_time                            593428 ns       664151 ns         1178           9.855k           1074.12M               0        12.226k    1.87745M              2.97292          1.70086k       3.19327G          5.88887M                    9.32499                     3.13664           1.70086k    10.3597k   631.515k       1014.88M/s    2.38879   12.2247k   1.89321M         2.99789   1.68512k/s  3.1903G/s     5.88887M               9.32499                3.11051          1       1.68512k/s [BEST: throughput=  1.07 GB/s doc_throughput=  1700 docs/s instructions=     5888871 cycles=     1877446 branch_miss=    9855 cache_miss=       0 cache_ref=     12226 items=         1 avg_time=    593427 ns]
find_tweet<rapidjson>/manual_time                        1877820 ns      1945433 ns          376          25.977k           389.978M          9.554k        21.091k    5.17028M               8.1871           617.528       3.19279G          12.9889M                    20.5679                     2.51223            617.528    26.1841k   631.515k       320.723M/s     453.84   8.09154k   5.32582M         8.43341    532.532/s 2.83617G/s     12.9898M               20.5692                2.43902          1        532.532/s [BEST: throughput=  0.39 GB/s doc_throughput=   617 docs/s instructions=    12988933 cycles=     5170277 branch_miss=   25977 cache_miss=    9554 cache_ref=     21091 items=         1 avg_time=   1877819 ns]
find_tweet<rapidjson_insitu>/manual_time                 1386699 ns      1453074 ns          534          24.725k           504.178M             209        12.764k     3.9993M              6.33286           798.363       3.19289G          9.71743M                    15.3875                     2.42978            798.363    24.8279k   631.515k       434.312M/s   1.22601k   7.43786k   4.09383M         6.48255    721.137/s 2.95221G/s     9.71775M                15.388                2.37375          1        721.137/s [BEST: throughput=  0.50 GB/s doc_throughput=   798 docs/s instructions=     9717433 cycles=     3999298 branch_miss=   24725 cache_miss=     209 cache_ref=     12764 items=         1 avg_time=   1386699 ns]
find_tweet<nlohmann_json>/manual_time                    7391019 ns      7480210 ns          100          88.305k           93.0954M          1.107k        77.616k    21.6206M              34.2361           147.416       3.18723G           56.534M                    89.5212                     2.61482            147.416    106.159k   631.515k       81.4853M/s      26.88   83.7235k   23.5709M         37.3243    135.299/s 3.18912G/s      55.184M               87.3835                2.34119          1        135.299/s [BEST: throughput=  0.09 GB/s doc_throughput=   147 docs/s instructions=    56533998 cycles=    21620633 branch_miss=   88305 cache_miss=    1107 cache_ref=     77616 items=         1 avg_time=   7391019 ns]
top_tweet<simdjson_dom>/manual_time                       318253 ns       399533 ns         2198           4.229k           2.00077G               0        32.071k    1008.11k              1.59634          3.16821k       3.19391G          2.96449M                    4.69426                     2.94063           3.16821k    4.33565k   631.515k       1.84804G/s   0.112375   32.1519k   1015.49k         1.60802   3.14216k/s 3.19083G/s      2.9645M               4.69426                2.91928          1       3.14216k/s [BEST: throughput=  2.00 GB/s doc_throughput=  3168 docs/s instructions=     2964495 cycles=     1008114 branch_miss=    4229 cache_miss=       0 cache_ref=     32071 items=         1 avg_time=    318252 ns]
top_tweet<simdjson_ondemand>/manual_time                  224986 ns       291635 ns         3107           2.311k           2.82629G               1         7.674k    713.764k              1.13024          4.47541k       3.19439G          2.19171M                    3.47056                     3.07064           4.47541k    2.38876k   631.515k       2.61413G/s   0.408111   7.72384k   717.949k         1.13687   4.44472k/s 3.19108G/s     2.19171M               3.47056                3.05274          1       4.44472k/s [BEST: throughput=  2.83 GB/s doc_throughput=  4475 docs/s instructions=     2191712 cycles=      713764 branch_miss=    2311 cache_miss=       1 cache_ref=      7674 items=         1 avg_time=    224986 ns]
top_tweet<simdjson_ondemand_forward_only>/manual_time     217088 ns       284790 ns         3220           2.175k           2.93114G               0         8.267k    688.289k               1.0899          4.64145k       3.19466G          2.21895M                    3.51369                     3.22386           4.64145k    2.30998k   631.515k       2.70925G/s   6.21118m   8.46938k   692.836k          1.0971   4.60643k/s  3.1915G/s     2.21895M               3.51369                 3.2027          1       4.60643k/s [BEST: throughput=  2.93 GB/s doc_throughput=  4641 docs/s instructions=     2218946 cycles=      688289 branch_miss=    2175 cache_miss=       0 cache_ref=      8267 items=         1 avg_time=    217087 ns]
top_tweet<yyjson>/manual_time                             857503 ns       947504 ns          892           9.894k           1.25314G             210        27.426k    1.60959M              2.54877          1.98434k       3.19396G          2.84502M                    4.50507                     1.76755           1.98434k    7.63686k   631.515k       702.341M/s    380.761   22.3153k   1.77452M         2.80994   1.16618k/s  2.0694G/s      2.8455M               4.50584                1.60354          1       1.16618k/s [BEST: throughput=  1.25 GB/s doc_throughput=  1984 docs/s instructions=     2845018 cycles=     1609585 branch_miss=    9894 cache_miss=     210 cache_ref=     27426 items=         1 avg_time=    857503 ns]
top_tweet<yyjson_insitu>/manual_time                      580323 ns       651317 ns         1215           7.025k           1.50771G          1.229k        12.709k    1.33169M              2.10873          2.38745k       3.17935G           2.8447M                    4.50457                     2.13615           2.38745k    7.40472k   631.515k        1037.8M/s    48.7835   7.43689k   1.45363M         2.30181   1.72318k/s 2.50486G/s     2.84496M               4.50498                1.95715          1       1.72318k/s [BEST: throughput=  1.51 GB/s doc_throughput=  2387 docs/s instructions=     2844702 cycles=     1331694 branch_miss=    7025 cache_miss=    1229 cache_ref=     12709 items=         1 avg_time=    580323 ns]
top_tweet<sajson>/manual_time                             597128 ns       671902 ns         1170          10.013k           1067.06M               2        12.589k    1.88995M              2.99272          1.68968k       3.19341G          5.91604M                    9.36802                     3.13026           1.68968k    10.4421k   631.515k       1008.59M/s    3.02479   12.5939k   1.90489M         3.01638   1.67468k/s 3.19009G/s     5.91604M               9.36802                3.10572          1       1.67468k/s [BEST: throughput=  1.07 GB/s doc_throughput=  1689 docs/s instructions=     5916043 cycles=     1889950 branch_miss=   10013 cache_miss=       2 cache_ref=     12589 items=         1 avg_time=    597127 ns]
top_tweet<rapidjson>/manual_time                         1894573 ns      1968138 ns          372          26.113k           386.166M         12.243k        21.906k    5.22138M              8.26802           611.491       3.19283G          13.0395M                    20.6479                     2.49732            611.491    26.3813k   631.515k       317.887M/s     547.97   10.1469k   5.37962M          8.5186    527.823/s 2.83949G/s     13.0402M                20.649                  2.424          1        527.823/s [BEST: throughput=  0.39 GB/s doc_throughput=   611 docs/s instructions=    13039480 cycles=     5221381 branch_miss=   26113 cache_miss=   12243 cache_ref=     21906 items=         1 avg_time=   1894573 ns]
top_tweet<rapidjson_insitu>/manual_time                  1395394 ns      1467433 ns          527          24.555k           500.747M          4.327k        13.644k    4.02671M              6.37626            792.93       3.19289G          9.75924M                    15.4537                     2.42363             792.93    24.8776k   631.515k       431.605M/s   1.32631k   9.45768k   4.12184M         6.52691    716.643/s 2.95389G/s     9.75955M               15.4542                2.36776          1        716.643/s [BEST: throughput=  0.50 GB/s doc_throughput=   792 docs/s instructions=     9759235 cycles=     4026706 branch_miss=   24555 cache_miss=    4327 cache_ref=     13644 items=         1 avg_time=   1395394 ns]
top_tweet<nlohmann_json>/manual_time                    10289517 ns     10382068 ns           69         176.983k           62.8738M             117       164.883k    32.0214M              50.7056           99.5602       3.18805G          77.9761M                    123.475                     2.43513            99.5602    199.275k   631.515k       58.5314M/s    40.8261   164.031k   32.8139M         51.9606    97.1863/s 3.18906G/s      78.368M               124.095                2.38826          1        97.1863/s [BEST: throughput=  0.06 GB/s doc_throughput=    99 docs/s instructions=    77976083 cycles=    32021367 branch_miss=  176983 cache_miss=     117 cache_ref=    164883 items=         1 avg_time=  10289517 ns]
