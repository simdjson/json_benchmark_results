run_benchmark: v0.8.0~1 /home/jkeiser/simdjson_benchmark_results/v0.7.0/37/skylake-clang11-native.json -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native
git reset --hard v0.8.0~1
HEAD is now at 1005c62e It seems that we export too many targets. (#1385)
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The CXX compiler identification is Clang 11.0.0
-- The C compiler identification is Clang 11.0.0
-- Check for working CXX compiler: /usr/bin/clang++-11
-- Check for working CXX compiler: /usr/bin/clang++-11 -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Check for working C compiler: /usr/bin/clang-11
-- Check for working C compiler: /usr/bin/clang-11 -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed
-- Check if compiler accepts -pthread
-- Check if compiler accepts -pthread - yes
-- Found Threads: TRUE  
-- Looking for fork
-- Looking for fork - found
-- Looking for wait
-- Looking for wait - found
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- Found Git: /usr/bin/git (found version "2.27.0") 
-- git Version: v0.2.1-1005c62e
-- Version: 0.2.1
-- Performing Test HAVE_CXX_FLAG_STD_CXX11
-- Performing Test HAVE_CXX_FLAG_STD_CXX11 - Success
-- Performing Test HAVE_CXX_FLAG_WALL
-- Performing Test HAVE_CXX_FLAG_WALL - Success
-- Performing Test HAVE_CXX_FLAG_WEXTRA
-- Performing Test HAVE_CXX_FLAG_WEXTRA - Success
-- Performing Test HAVE_CXX_FLAG_WSHADOW
-- Performing Test HAVE_CXX_FLAG_WSHADOW - Success
-- Performing Test HAVE_CXX_FLAG_WERROR
-- Performing Test HAVE_CXX_FLAG_WERROR - Success
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32 - Success
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED - Success
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WD654
-- Performing Test HAVE_CXX_FLAG_WD654 - Failed
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY - Success
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES -- failed to compile
-- Performing Test HAVE_CXX_FLAG_COVERAGE
-- Performing Test HAVE_CXX_FLAG_COVERAGE - Success
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Performing Test USE_BOOST_JSON
-- Performing Test USE_BOOST_JSON - Failed
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Found Python3: /usr/bin/python3.8 (found version "3.8.6") found components: Interpreter 
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 10
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
Scanning dependencies of target benchmark
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_api_internal.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_name.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_name.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_register.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_register.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_runner.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_runner.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/colorprint.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/colorprint.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/commandlineflags.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/commandlineflags.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/complexity.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/complexity.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/console_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/console_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/counter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/counter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/csv_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/csv_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/json_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/json_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/sleep.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sleep.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/statistics.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/statistics.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/string_util.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/string_util.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/sysinfo.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sysinfo.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/timers.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/timers.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -P CMakeFiles/benchmark.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/benchmark.dir/link.txt --verbose=1
/usr/bin/ar qc libbenchmark.a  CMakeFiles/benchmark.dir/benchmark.cc.o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o CMakeFiles/benchmark.dir/benchmark_name.cc.o CMakeFiles/benchmark.dir/benchmark_register.cc.o CMakeFiles/benchmark.dir/benchmark_runner.cc.o CMakeFiles/benchmark.dir/colorprint.cc.o CMakeFiles/benchmark.dir/commandlineflags.cc.o CMakeFiles/benchmark.dir/complexity.cc.o CMakeFiles/benchmark.dir/console_reporter.cc.o CMakeFiles/benchmark.dir/counter.cc.o CMakeFiles/benchmark.dir/csv_reporter.cc.o CMakeFiles/benchmark.dir/json_reporter.cc.o CMakeFiles/benchmark.dir/reporter.cc.o CMakeFiles/benchmark.dir/sleep.cc.o CMakeFiles/benchmark.dir/statistics.cc.o CMakeFiles/benchmark.dir/string_util.cc.o CMakeFiles/benchmark.dir/sysinfo.cc.o CMakeFiles/benchmark.dir/timers.cc.o
/usr/bin/ranlib libbenchmark.a
[ 80%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
Scanning dependencies of target generated-data
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated && /usr/bin/ruby genfeaturejson.rb /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-miss.json ...
[ 80%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/clang++-11  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/include  -march=native -O3 -DNDEBUG -fPIC   -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -pthread -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/clang++-11 -fPIC -march=native -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.6 -o ../libsimdjson.so.6.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.6.0.0 ../libsimdjson.so.6 ../libsimdjson.so
[ 80%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
Scanning dependencies of target yyjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/clang-11  -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src  -O3 -DNDEBUG   -o CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o   -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src/yyjson.c
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -P CMakeFiles/yyjson.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -E cmake_link_script CMakeFiles/yyjson.dir/link.txt --verbose=1
/usr/bin/ar qc libyyjson.a  CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o
/usr/bin/ranlib libyyjson.a
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/clang++-11  -DRAPIDJSON_HAS_STDSTRING -DSAJSON_UNSORTED_OBJECT_KEYS -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_COMPETITION_NLOHMANN_JSON -DSIMDJSON_COMPETITION_RAPIDJSON -DSIMDJSON_COMPETITION_SAJSON -DSIMDJSON_COMPETITION_YYJSON -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/rapidjson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/sajson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/json  -march=native -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/clang++-11  -march=native -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.6.0.0 ../_deps/google_benchmarks/src/libbenchmark.a ../dependencies/libyyjson.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/37/skylake-clang11-native.json --benchmark_out_format=json
2021-01-24 21:05:42
Running benchmark/bench_ondemand
Run on (4 X 4000 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 256 KiB (x4)
  L3 Unified 8192 KiB (x1)
Load Average: 1.00, 1.00, 0.94
simdjson::dom implementation:      haswell
simdjson::ondemand implementation: haswell

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                  273835 ns       302633 ns         2510           3.561k           2.32064G               0        93.489k    1004.78k              1.59106          3.67471k       3.69227G          2.99337M                    4.73999                     2.97914           367.471k    3.74591k   631.515k        2.1478G/s    3.36972   93.4986k   1010.64k         1.60034   3.65183k/s 3.69068G/s     2.99337M               4.73999                2.96186        100       365.183k/s [BEST: throughput=  2.32 GB/s doc_throughput=  3674 docs/s instructions=     2993372 cycles=     1004777 branch_miss=    3561 cache_miss=       0 cache_ref=     93489 items=       100 avg_time=    273835 ns]
partial_tweets<simdjson_ondemand>/manual_time             174746 ns       203300 ns         4008            1.73k           3.64235G               0         59.02k    640.271k              1.01387          5.76764k       3.69286G          1.94668M                    3.08256                      3.0404           576.764k    1.85647k   631.515k       3.36571G/s  0.0311876   59.2341k   645.067k         1.02146    5.7226k/s 3.69146G/s     1.94668M               3.08256                 3.0178        100        572.26k/s [BEST: throughput=  3.64 GB/s doc_throughput=  5767 docs/s instructions=     1946680 cycles=      640271 branch_miss=    1730 cache_miss=       0 cache_ref=     59020 items=       100 avg_time=    174745 ns]
partial_tweets<yyjson>/manual_time                        635072 ns       665838 ns         1096           9.845k           1.80697G             316        78.853k    1.29052M              2.04354          2.86133k       3.69261G           2.9196M                    4.62317                     2.26234           286.133k    7.45402k   631.515k       948.332M/s    1079.35   51.8718k   1.49973M         2.37482   1.57462k/s 2.36151G/s      2.9203M               4.62427                1.94721        100       157.462k/s [BEST: throughput=  1.81 GB/s doc_throughput=  2861 docs/s instructions=     2919603 cycles=     1290524 branch_miss=    9845 cache_miss=     316 cache_ref=     78853 items=       100 avg_time=    635072 ns]
partial_tweets<yyjson_insitu>/manual_time                 425141 ns       454643 ns         1647           6.894k           2.05908G            1050        48.381k    1.12607M              1.78312          3.26055k        3.6716G           2.9195M                      4.623                     2.59265           326.055k    7.22737k   631.515k       1.38341G/s    151.747   33.8864k   1.22305M          1.9367   2.35216k/s 2.87682G/s     2.91976M               4.62342                2.38727        100       235.216k/s [BEST: throughput=  2.06 GB/s doc_throughput=  3260 docs/s instructions=     2919496 cycles=     1126068 branch_miss=    6894 cache_miss=    1050 cache_ref=     48381 items=       100 avg_time=    425141 ns]
partial_tweets<sajson>/manual_time                        597930 ns       626790 ns         1168           10.45k           1068.56M               0        48.125k    2.18194M              3.45508          1.69205k       3.69195G          5.87691M                    9.30604                     2.69344           169.205k    10.7995k   631.515k       1007.24M/s    2.76712   48.4288k   2.20646M         3.49391   1.67244k/s 3.69016G/s     5.87691M               9.30604                 2.6635        100       167.244k/s [BEST: throughput=  1.07 GB/s doc_throughput=  1692 docs/s instructions=     5876906 cycles=     2181937 branch_miss=   10450 cache_miss=       0 cache_ref=     48125 items=       100 avg_time=    597930 ns]
partial_tweets<rapidjson>/manual_time                    2367637 ns      2397076 ns          296          31.577k           290.573M             425        53.883k    8.02304M              12.7044            460.12       3.69156G          21.8947M                    34.6702                     2.72898            46.012k    31.3013k   631.515k       254.372M/s    629.801   34.4384k   8.15316M         12.9105    422.362/s 3.44358G/s     21.8953M                34.671                 2.6855        100       42.2362k/s [BEST: throughput=  0.29 GB/s doc_throughput=   460 docs/s instructions=    21894722 cycles=     8023044 branch_miss=   31577 cache_miss=     425 cache_ref=     53883 items=       100 avg_time=   2367637 ns]
partial_tweets<rapidjson_insitu>/manual_time             1544094 ns      1573084 ns          453          24.479k           441.532M              56         46.35k    5.27997M               8.3608           699.163       3.69156G          13.3197M                    21.0917                     2.52269           69.9163k    25.0035k   631.515k       390.041M/s    290.698    35.703k   5.35386M          8.4778    647.629/s 3.46731G/s     13.3203M               21.0926                2.48799        100       64.7629k/s [BEST: throughput=  0.44 GB/s doc_throughput=   699 docs/s instructions=    13319725 cycles=     5279969 branch_miss=   24479 cache_miss=      56 cache_ref=     46350 items=       100 avg_time=   1544093 ns]
partial_tweets<nlohmann_json>/manual_time                8578380 ns      8614324 ns           82         150.623k           75.9274M              31       231.782k    30.6867M              48.5923           120.231       3.68949G          80.3066M                    127.165                     2.61698           12.0231k    162.849k   631.515k       70.2067M/s    403.695   368.463k   31.6491M         50.1162    116.572/s  3.6894G/s     80.7679M               127.895                2.55198        100       11.6572k/s [BEST: throughput=  0.08 GB/s doc_throughput=   120 docs/s instructions=    80306574 cycles=    30686742 branch_miss=  150623 cache_miss=      31 cache_ref=    231782 items=       100 avg_time=   8578379 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                  87746470 ns     91144564 ns            8         922.491k           525.127M        11.0639M       15.6357M    323.149M              7.02517           11.4161       3.68911G          1035.69M                    22.5155                     3.20498           11.4161M    923.603k   45.9988M       499.939M/s    11.119M   15.6297M   323.694M           7.037    11.3965/s 3.68896G/s     1035.69M               22.5155                3.19959      1000k       11.3965M/s [BEST: throughput=  0.53 GB/s doc_throughput=    11 docs/s instructions=  1035686042 cycles=   323149197 branch_miss=  922491 cache_miss=11063897 cache_ref=  15635707 items=   1000000 avg_time=  87746470 ns]
large_random<simdjson_ondemand>/manual_time             65722116 ns     69100588 ns           11         917.239k           700.896M        5.72765M       8.10088M    242.098M              5.26313           15.2373       3.68891G          670.142M                    14.5687                     2.76806           15.2373M    924.702k   45.9988M       667.475M/s   5.75505M   8.10128M   242.449M         5.27078    15.2156/s 3.68901G/s     670.142M               14.5687                2.76405      1000k       15.2156M/s [BEST: throughput=  0.70 GB/s doc_throughput=    15 docs/s instructions=   670141948 cycles=   242097725 branch_miss=  917239 cache_miss= 5727654 cache_ref=   8100875 items=   1000000 avg_time=  65722116 ns]
large_random<simdjson_ondemand_unordered>/manual_time   66426192 ns     69802988 ns           11         895.625k           692.751M        5.76133M       8.10328M    244.964M              5.32544           15.0602       3.68921G          674.142M                    14.6556                     2.75201           15.0602M        896k   45.9988M         660.4M/s   5.76671M   8.10402M   245.052M         5.32736    15.0543/s 3.68908G/s     674.142M               14.6556                2.75102      1000k       15.0543M/s [BEST: throughput=  0.69 GB/s doc_throughput=    15 docs/s instructions=   674141946 cycles=   244963756 branch_miss=  895625 cache_miss= 5761328 cache_ref=   8103278 items=   1000000 avg_time=  66426191 ns]
large_random<yyjson>/manual_time                       115453735 ns    118880951 ns            6         676.202k           398.745M        5.94629M       9.26575M    306.529M              6.66385           8.66859       2.65717G          855.681M                    18.6023                     2.79152           8.66859M    676.716k   45.9988M        379.96M/s   5.94903M   9.26924M   306.464M         6.66244    8.66148/s 2.65443G/s     855.681M               18.6023                2.79211      1000k       8.66148M/s [BEST: throughput=  0.40 GB/s doc_throughput=     8 docs/s instructions=   855680954 cycles=   306528781 branch_miss=  676202 cache_miss= 5946292 cache_ref=   9265745 items=   1000000 avg_time= 115453735 ns]
large_random<yyjson_insitu>/manual_time                 97868270 ns    101293624 ns            7         674.489k           470.223M        5.04332M       7.87817M    275.391M              5.98692           10.2225       2.81519G           849.56M                    18.4692                     3.08492           10.2225M     676.61k   45.9988M       448.234M/s   5.04771M    7.8797M   275.558M         5.99055    10.2178/s  2.8156G/s      849.56M               18.4692                3.08305      1000k       10.2178M/s [BEST: throughput=  0.47 GB/s doc_throughput=    10 docs/s instructions=   849559977 cycles=   275391118 branch_miss=  674489 cache_miss= 5043317 cache_ref=   7878173 items=   1000000 avg_time=  97868270 ns]
large_random<sajson>/manual_time                        88340110 ns     91760773 ns            8         577.619k           521.654M        8.50454M         12.37M    325.289M              7.07168           11.3406       3.68897G             1087M                     23.631                     3.34163           11.3406M    577.461k   45.9988M       496.579M/s   8.48101M   12.3527M   325.891M         7.08477    11.3199/s 3.68905G/s        1087M                23.631                3.33546      1000k       11.3199M/s [BEST: throughput=  0.52 GB/s doc_throughput=    11 docs/s instructions=  1086995284 cycles=   325288795 branch_miss=  577619 cache_miss= 8504540 cache_ref=  12369981 items=   1000000 avg_time=  88340110 ns]
large_random<rapidjson>/manual_time                    212950708 ns    216383274 ns            3         583.313k           221.847M        7.11533M       11.0062M     706.73M              15.3641            4.8229       3.40849G          2.01014G                    43.6999                     2.84429            4.8229M    582.683k   45.9988M           206M/s   6.62054M   10.3281M   708.618M         15.4051    4.69592/s 3.32761G/s     2.01015G               43.7001                2.83672      1000k       4.69592M/s [BEST: throughput=  0.22 GB/s doc_throughput=     4 docs/s instructions=  2010143958 cycles=   706730221 branch_miss=  583313 cache_miss= 7115331 cache_ref=  11006183 items=   1000000 avg_time= 212950708 ns]
large_random<rapidjson_lossless>/manual_time           246720389 ns    250145414 ns            3         583.331k           190.803M        7.11266M       11.0152M    831.421M              18.0749           4.14801       3.44874G          2.47511G                    53.8082                     2.97696           4.14801M    585.789k   45.9988M       177.804M/s   6.61979M   10.3615M   833.437M         18.1187    4.05317/s 3.37806G/s     2.47512G               53.8084                2.96977      1000k       4.05317M/s [BEST: throughput=  0.19 GB/s doc_throughput=     4 docs/s instructions=  2475111339 cycles=   831421228 branch_miss=  583331 cache_miss= 7112663 cache_ref=  11015242 items=   1000000 avg_time= 246720389 ns]
large_random<rapidjson_insitu>/manual_time             238171832 ns    241602158 ns            3          591.65k           197.672M        8.24631M       12.6441M    800.537M              17.4034           4.29733       3.44017G          1.72014G                    37.3954                     2.14874           4.29733M    591.645k   45.9988M       184.186M/s   7.77844M   11.9813M   801.929M         17.4337    4.19865/s 3.36702G/s     1.72015G               37.3956                2.14502      1000k       4.19865M/s [BEST: throughput=  0.20 GB/s doc_throughput=     4 docs/s instructions=  1720144068 cycles=   800536573 branch_miss=  591650 cache_miss= 8246311 cache_ref=  12644106 items=   1000000 avg_time= 238171832 ns]
large_random<nlohmann_json>/manual_time               1281985476 ns   1285440939 ns            1         4.10513M           35.8809M        48.0203M       62.5911M    4.71704G              102.547           0.78004       3.67948G          12.7456G                    277.085                     2.70203            780.04k    4.10513M   45.9988M       34.2187M/s   48.0203M   62.5911M   4.71704G         102.547    0.78004/s 3.67948G/s     12.7456G               277.085                2.70203      1000k        780.04k/s [BEST: throughput=  0.04 GB/s doc_throughput=     0 docs/s instructions= 12745552337 cycles=  4717035206 branch_miss= 4105131 cache_miss=48020286 cache_ref=  62591127 items=   1000000 avg_time=1281985476 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                        93557795 ns    103780151 ns            7         1049.61k           1.46935G        16.1751M       22.8657M    344.736M              2.51073           10.7013       3.68914G          985.796M                    7.17961                     2.85957           5.61059M    1049.63k   137.305M        1.3668G/s   16.2206M   22.8158M    345.14M         2.51367    10.6886/s 3.68906G/s     985.796M               7.17961                2.85622   524.288k       5.60389M/s [BEST: throughput=  1.47 GB/s doc_throughput=    10 docs/s instructions=   985795975 cycles=   344736052 branch_miss= 1049614 cache_miss=16175088 cache_ref=  22865693 items=    524288 avg_time=  93557794 ns]
kostya<simdjson_ondemand>/manual_time                   62434623 ns     72633544 ns           11          492.07k           2.20075G        10.3324M       14.3334M    230.165M              1.67631           16.0282       3.68913G          652.062M                      4.749                     2.83302           8.40339M    491.357k   137.305M       2.04815G/s   10.3437M   14.2774M   230.318M         1.67742    16.0168/s 3.68895G/s     652.062M                 4.749                2.83113   524.288k       8.39739M/s [BEST: throughput=  2.20 GB/s doc_throughput=    16 docs/s instructions=   652061659 cycles=   230165050 branch_miss=  492070 cache_miss=10332432 cache_ref=  14333414 items=    524288 avg_time=  62434622 ns]
kostya<yyjson>/manual_time                             173651563 ns    183918186 ns            4         421.607k           791.176M         11.613M       16.8155M    444.134M              3.23466           5.76218       2.55918G          974.184M                    7.09504                     2.19345           3.02104M    421.706k   137.305M       754.063M/s   11.6151M    16.797M   443.929M         3.23316    5.75866/s 2.55644G/s     974.185M               7.09504                2.19446   524.288k        3.0192M/s [BEST: throughput=  0.79 GB/s doc_throughput=     5 docs/s instructions=   974184481 cycles=   444134312 branch_miss=  421607 cache_miss=11613048 cache_ref=  16815517 items=    524288 avg_time= 173651563 ns]
kostya<yyjson_insitu>/manual_time                      120197657 ns    130467627 ns            6         414.862k            1.1428G        8.96743M       12.6826M    349.118M              2.54265           8.32307       2.90573G          955.915M                    6.96198                     2.73809           4.36368M    414.627k   137.305M       1089.41M/s   8.97179M   12.7101M   349.129M         2.54273    8.31963/s 2.90463G/s     955.915M               6.96198                  2.738   524.288k       4.36188M/s [BEST: throughput=  1.14 GB/s doc_throughput=     8 docs/s instructions=   955914811 cycles=   349117951 branch_miss=  414862 cache_miss= 8967431 cache_ref=  12682617 items=    524288 avg_time= 120197656 ns]
kostya<sajson>/manual_time                             137300383 ns    147563241 ns            5         356.161k           1000.35M           12.6M       17.5571M    506.375M              3.68796           7.28557       3.68923G          1.51716G                    11.0496                     2.99613           3.81974M    356.306k   137.305M       953.706M/s   12.6226M   17.5605M   506.522M         3.68903     7.2833/s 3.68915G/s     1.51716G               11.0496                2.99526   524.288k       3.81855M/s [BEST: throughput=  1.00 GB/s doc_throughput=     7 docs/s instructions=  1517163295 cycles=   506375125 branch_miss=  356161 cache_miss=12599990 cache_ref=  17557100 items=    524288 avg_time= 137300383 ns]
kostya<rapidjson>/manual_time                          278518708 ns    288821590 ns            3         986.456k           498.883M        8.50773M       12.4376M    934.289M              6.80448           3.63339       3.39464G          2.73767G                    19.9386                     2.93022           1.90494M    979.546k   137.305M       470.145M/s    8.2121M   12.0747M   936.981M         6.82409    3.59042/s 3.36416G/s     2.73768G               19.9386                 2.9218   524.288k       1.88242M/s [BEST: throughput=  0.50 GB/s doc_throughput=     3 docs/s instructions=  2737673260 cycles=   934289012 branch_miss=  986456 cache_miss= 8507732 cache_ref=  12437610 items=    524288 avg_time= 278518708 ns]
kostya<rapidjson_lossless>/manual_time                 303831515 ns    314135005 ns            2         965.711k           455.504M        8.49237M       12.5869M    1030.67M              7.50646           3.31746       3.41922G          3.00662G                    21.8974                     2.91714            1.7393M    966.747k   137.305M       430.977M/s   8.27657M   12.3058M   1032.35M         7.51868     3.2913/s 3.39778G/s     3.00663G               21.8974                 2.9124   524.288k       1.72559M/s [BEST: throughput=  0.46 GB/s doc_throughput=     3 docs/s instructions=  3006623689 cycles=  1030674464 branch_miss=  965711 cache_miss= 8492366 cache_ref=  12586937 items=    524288 avg_time= 303831515 ns]
kostya<rapidjson_insitu>/manual_time                   276761941 ns    287054334 ns            3         1.44954M           498.046M        12.2885M       16.5451M    935.995M              6.81691            3.6273       3.39513G          2.21152G                    16.1067                     2.36275           1.90175M    1.12559M   137.305M        473.13M/s   12.0014M   16.1679M   930.481M         6.77674    3.61321/s 3.36203G/s     2.21153G               16.1067                2.37676   524.288k       1.89436M/s [BEST: throughput=  0.50 GB/s doc_throughput=     3 docs/s instructions=  2211524948 cycles=   935995442 branch_miss= 1449540 cache_miss=12288543 cache_ref=  16545054 items=    524288 avg_time= 276761941 ns]
kostya<nlohmann_json>/manual_time                     1951160960 ns   1961474820 ns            1         14.2943M           70.3709M        70.6766M       88.6919M    7.19867G              52.4283          0.512515       3.68943G          17.7606G                    129.351                     2.46721           268.706k    14.2943M   137.305M       67.1109M/s   70.6766M   88.6919M   7.19867G         52.4283   0.512515/s 3.68943G/s     17.7606G               129.351                2.46721   524.288k       268.706k/s [BEST: throughput=  0.07 GB/s doc_throughput=     0 docs/s instructions= 17760587820 cycles=  7198666959 branch_miss=14294304 cache_miss=70676626 cache_ref=  88691936 items=    524288 avg_time=1951160960 ns]
distinct_user_id<simdjson_dom>/manual_time                272810 ns       303308 ns         2565           3.699k           2.32725G               0        94.441k    1001.94k              1.58656          3.68518k       3.69233G          2.92855M                    4.63734                     2.92288           423.796k     3.8353k   631.515k       2.15587G/s    2.14737   94.6882k   1006.82k          1.5943   3.66555k/s 3.69056G/s     2.92855M               4.63734                 2.9087        115       421.539k/s [BEST: throughput=  2.33 GB/s doc_throughput=  3685 docs/s instructions=     2928548 cycles=     1001939 branch_miss=    3699 cache_miss=       0 cache_ref=     94441 items=       115 avg_time=    272810 ns]
distinct_user_id<simdjson_ondemand>/manual_time           161242 ns       190961 ns         4341           2.025k           3.94579G               0        56.789k    591.102k             0.936006          6.24813k       3.69328G          1.89587M                    3.00209                     3.20734           718.534k    2.15943k   631.515k       3.64758G/s   3.91615m   56.7582k   595.239k        0.942557   6.20185k/s 3.69158G/s     1.89587M               3.00209                3.18505        115       713.212k/s [BEST: throughput=  3.95 GB/s doc_throughput=  6248 docs/s instructions=     1895867 cycles=      591102 branch_miss=    2025 cache_miss=       0 cache_ref=     56789 items=       115 avg_time=    161242 ns]
distinct_user_id<yyjson>/manual_time                      546210 ns       579501 ns         1000           6.898k           1.92041G         16.468k        78.688k    1.21433M              1.92288          3.04096k       3.69272G           2.8779M                    4.55714                     2.36996           349.711k    7.31848k   631.515k       1102.62M/s   7.53547k   58.3271k   1.42214M         2.25195    1.8308k/s 2.60365G/s      2.8781M               4.55745                2.02378        115       210.542k/s [BEST: throughput=  1.92 GB/s doc_throughput=  3040 docs/s instructions=     2877901 cycles=     1214326 branch_miss=    6898 cache_miss=   16468 cache_ref=     78688 items=       115 avg_time=    546209 ns]
distinct_user_id<yyjson_insitu>/manual_time               417437 ns       450052 ns         1677           7.173k           2.09164G               1        47.074k    1.11493M              1.76548           3.3121k       3.69276G          2.87738M                    4.55632                     2.58078           380.892k    7.34242k   631.515k       1.40894G/s    51.8998   32.3576k   1.20723M         1.91164   2.39557k/s   2.892G/s     2.87765M               4.55674                2.38368        115        275.49k/s [BEST: throughput=  2.09 GB/s doc_throughput=  3312 docs/s instructions=     2877384 cycles=     1114928 branch_miss=    7173 cache_miss=       1 cache_ref=     47074 items=       115 avg_time=    417437 ns]
distinct_user_id<sajson>/manual_time                      593630 ns       624336 ns         1178          10.419k           1076.21M               0        47.918k    2.16651M              3.43066          1.70417k        3.6921G          5.81547M                    9.20876                     2.68425           195.979k    10.8132k   631.515k       1014.54M/s   0.716469   47.9538k   2.19057M         3.46876   1.68455k/s 3.69014G/s     5.81547M               9.20876                2.65477        115       193.723k/s [BEST: throughput=  1.08 GB/s doc_throughput=  1704 docs/s instructions=     5815469 cycles=     2166514 branch_miss=   10419 cache_miss=       0 cache_ref=     47918 items=       115 avg_time=    593629 ns]
distinct_user_id<rapidjson>/manual_time                  2353545 ns      2384335 ns          299          31.618k           290.809M          2.003k        55.681k    8.00665M              12.6785           460.495       3.68702G           21.823M                    34.5565                     2.72561           52.9569k    31.3458k   631.515k       255.895M/s    1.2669k   36.6618k   8.13577M         12.8829    424.891/s 3.45682G/s     21.8238M               34.5578                2.68245        115       48.8625k/s [BEST: throughput=  0.29 GB/s doc_throughput=   460 docs/s instructions=    21822973 cycles=     8006652 branch_miss=   31618 cache_miss=    2003 cache_ref=     55681 items=       115 avg_time=   2353545 ns]
distinct_user_id<rapidjson_insitu>/manual_time           1553041 ns      1583677 ns          441          25.046k           442.207M              47        45.827k    5.27197M              8.34813           700.232        3.6916G          13.2541M                    20.9877                     2.51406           80.5267k    31.1356k   631.515k       387.794M/s   2.92695k   38.6519k   5.46662M         8.65636    643.898/s 3.51995G/s     13.2544M               20.9882                 2.4246        115       74.0482k/s [BEST: throughput=  0.44 GB/s doc_throughput=   700 docs/s instructions=    13254073 cycles=     5271971 branch_miss=   25046 cache_miss=      47 cache_ref=     45827 items=       115 avg_time=   1553041 ns]
distinct_user_id<nlohmann_json>/manual_time              8377578 ns      8411471 ns           90         126.612k           82.0301M          3.024k       224.757k    28.3941M              44.9619           129.894       3.68823G          75.7589M                    119.964                     2.66812           14.9378k    180.115k   631.515k       71.8895M/s       65.9   484.604k    30.909M         48.9442    119.366/s 3.68949G/s     74.3357M                117.71                2.40499        115       13.7271k/s [BEST: throughput=  0.08 GB/s doc_throughput=   129 docs/s instructions=    75758922 cycles=    28394123 branch_miss=  126612 cache_miss=    3024 cache_ref=    224757 items=       115 avg_time=   8377577 ns]
find_tweet<simdjson_dom>/manual_time                      262775 ns       292064 ns         2667           3.418k           2.41996G               0        84.075k    963.611k              1.52587          3.83199k       3.69255G          2.84337M                    4.50246                     2.95075           3.83199k    3.59751k   631.515k        2.2382G/s   0.826022   84.2189k   969.836k         1.53573   3.80553k/s 3.69074G/s     2.84337M               4.50246                2.93181          1       3.80553k/s [BEST: throughput=  2.42 GB/s doc_throughput=  3831 docs/s instructions=     2843374 cycles=      963611 branch_miss=    3418 cache_miss=       0 cache_ref=     84075 items=         1 avg_time=    262775 ns]
find_tweet<simdjson_ondemand>/manual_time                 116723 ns       145219 ns         5990             1033           5.43959G               0        33.014k    428.792k             0.678989          8.61356k       3.69343G          1.38727M                    2.19673                     3.23529           8.61356k     1080.52   631.515k       5.03882G/s  0.0171953   33.0075k   430.957k        0.682417   8.56732k/s 3.69215G/s     1.38727M               2.19673                3.21904          1       8.56732k/s [BEST: throughput=  5.44 GB/s doc_throughput=  8613 docs/s instructions=     1387265 cycles=      428792 branch_miss=    1033 cache_miss=       0 cache_ref=     33014 items=         1 avg_time=    116722 ns]
find_tweet<yyjson>/manual_time                            609308 ns       640182 ns         1156           9.424k           1.89132G             158         69.88k    1.23311M              1.95262          2.99489k       3.69303G          2.81716M                    4.46095                      2.2846           2.99489k    7.26663k   631.515k       988.432M/s    1066.04   41.8511k   1.44564M         2.28916   1.64121k/s 2.37259G/s     2.81763M                4.4617                1.94906          1       1.64121k/s [BEST: throughput=  1.89 GB/s doc_throughput=  2994 docs/s instructions=     2817155 cycles=     1233109 branch_miss=    9424 cache_miss=     158 cache_ref=     69880 items=         1 avg_time=    609308 ns]
find_tweet<yyjson_insitu>/manual_time                     407079 ns       437372 ns         1721           6.758k           2.16669G             577        38.194k    1072.81k              1.69879          3.43094k       3.68075G          2.81683M                    4.46043                     2.62565           3.43094k    7.09578k   631.515k       1.44479G/s    16.5497    23.509k   1.16947M         1.85185   2.45652k/s 2.87284G/s     2.81709M               4.46085                2.40886          1       2.45652k/s [BEST: throughput=  2.17 GB/s doc_throughput=  3430 docs/s instructions=     2816831 cycles=     1072811 branch_miss=    6758 cache_miss=     577 cache_ref=     38194 items=         1 avg_time=    407079 ns]
find_tweet<sajson>/manual_time                            581531 ns       611493 ns         1201          10.484k           1096.63M               0        38.314k    2.12603M              3.36656           1.7365k       3.69186G          5.72035M                    9.05813                     2.69062            1.7365k    10.7249k   631.515k       1035.64M/s   0.959201   38.3328k   2.14588M         3.39798    1.7196k/s 3.69005G/s     5.72035M               9.05814                2.66574          1        1.7196k/s [BEST: throughput=  1.10 GB/s doc_throughput=  1736 docs/s instructions=     5720348 cycles=     2126034 branch_miss=   10484 cache_miss=       0 cache_ref=     38314 items=         1 avg_time=    581531 ns]
find_tweet<rapidjson>/manual_time                        2342449 ns      2371721 ns          300           30.99k           293.223M              53         47.84k    7.95046M              12.5895           464.317       3.69154G          21.7395M                    34.4244                     2.73438            464.317    31.3184k   631.515k       257.107M/s    994.323   28.7402k   8.09503M         12.8184    426.904/s  3.4558G/s     21.7405M               34.4259                2.68566          1        426.904/s [BEST: throughput=  0.29 GB/s doc_throughput=   464 docs/s instructions=    21739541 cycles=     7950459 branch_miss=   30990 cache_miss=      53 cache_ref=     47840 items=         1 avg_time=   2342449 ns]
find_tweet<rapidjson_insitu>/manual_time                 1544310 ns      1574295 ns          441          24.726k           415.019M              22         26.48k    5.28351M               8.3664            657.18       3.47221G           13.176M                    20.8641                      2.4938             657.18    31.4306k   631.515k       389.986M/s   2.71154k   29.0298k   5.43569M         8.60738    647.538/s 3.51982G/s     13.1759M               20.8639                2.42395          1        647.538/s [BEST: throughput=  0.42 GB/s doc_throughput=   657 docs/s instructions=    13175985 cycles=     5283506 branch_miss=   24726 cache_miss=      22 cache_ref=     26480 items=         1 avg_time=   1544310 ns]
find_tweet<nlohmann_json>/manual_time                    6934664 ns      6965368 ns          105          99.923k           95.3318M          2.609k       171.313k    24.4295M              38.6839           150.957       3.68781G          65.8697M                    104.304                     2.69632            150.957    115.495k   631.515k       86.8477M/s    69.4095   386.364k   25.5855M         40.5145    144.203/s 3.68951G/s     64.4616M               102.075                2.51946          1        144.203/s [BEST: throughput=  0.10 GB/s doc_throughput=   150 docs/s instructions=    65869680 cycles=    24429480 branch_miss=   99923 cache_miss=    2609 cache_ref=    171313 items=         1 avg_time=   6934664 ns]
top_tweet<simdjson_dom>/manual_time                       269353 ns       298038 ns         2608           3.521k            2.3593G               0        91.855k    988.397k              1.56512          3.73594k        3.6926G          2.88026M                    4.56088                     2.91407           3.73594k    3.68447k   631.515k       2.18354G/s    0.73888   91.9244k   994.027k         1.57404    3.7126k/s 3.69042G/s     2.88026M               4.56088                2.89757          1        3.7126k/s [BEST: throughput=  2.36 GB/s doc_throughput=  3735 docs/s instructions=     2880261 cycles=      988397 branch_miss=    3521 cache_miss=       0 cache_ref=     91855 items=         1 avg_time=    269353 ns]
top_tweet<simdjson_ondemand>/manual_time                  177771 ns       206176 ns         3936           1.585k           3.57349G               0        57.154k    652.577k              1.03335          5.65861k       3.69268G          1.91005M                    3.02456                     2.92694           5.65861k    1.68417k   631.515k       3.30844G/s    0.61001   57.2179k   656.168k         1.03904   5.62521k/s 3.69109G/s     1.91005M               3.02456                2.91092          1       5.62521k/s [BEST: throughput=  3.57 GB/s doc_throughput=  5658 docs/s instructions=     1910054 cycles=      652577 branch_miss=    1585 cache_miss=       0 cache_ref=     57154 items=         1 avg_time=    177771 ns]
top_tweet<simdjson_ondemand_forward_only>/manual_time     171994 ns       200475 ns         4073           1.808k           3.71377G               0        57.877k    628.012k             0.994453          5.88073k       3.69317G          1.92496M                    3.04817                     3.06517           5.88073k    1.97318k   631.515k       3.41956G/s    0.36656   57.9709k   634.863k          1.0053   5.81415k/s 3.69119G/s     1.92497M               3.04817                3.03209          1       5.81415k/s [BEST: throughput=  3.71 GB/s doc_throughput=  5880 docs/s instructions=     1924965 cycles=      628012 branch_miss=    1808 cache_miss=       0 cache_ref=     57877 items=         1 avg_time=    171994 ns]
top_tweet<yyjson>/manual_time                             614425 ns       644633 ns         1147           9.492k           1.86908G              91        73.699k    1.24746M              1.97535          2.95967k       3.69208G          2.84442M                    4.50412                     2.28017           2.95967k    7.36452k   631.515k       980.201M/s    1008.02   46.9856k   1.46451M         2.31905   1.62754k/s 2.38355G/s     2.84511M               4.50522                 1.9427          1       1.62754k/s [BEST: throughput=  1.87 GB/s doc_throughput=  2959 docs/s instructions=     2844421 cycles=     1247460 branch_miss=    9492 cache_miss=      91 cache_ref=     73699 items=         1 avg_time=    614424 ns]
top_tweet<yyjson_insitu>/manual_time                      412867 ns       442478 ns         1696           6.701k            2.1365G             326        42.951k       1088k              1.72285          3.38313k       3.68086G          2.84431M                    4.50395                     2.61425           3.38313k    7.23224k   631.515k       1.42454G/s    49.6173   28.7445k   1.19112M         1.88612   2.42209k/s 2.88498G/s     2.84458M               4.50437                2.38816          1       2.42209k/s [BEST: throughput=  2.14 GB/s doc_throughput=  3383 docs/s instructions=     2844313 cycles=     1088003 branch_miss=    6701 cache_miss=     326 cache_ref=     42951 items=         1 avg_time=    412867 ns]
top_tweet<sajson>/manual_time                             584240 ns       613236 ns         1193          10.332k           1091.09M               0        43.387k    2.13684M              3.38368          1.72773k       3.69188G          5.75034M                    9.10563                     2.69104           1.72773k    10.6113k   631.515k       1030.84M/s   0.589271   43.6763k   2.15589M         3.41384   1.71163k/s 3.69008G/s     5.75034M               9.10563                2.66727          1       1.71163k/s [BEST: throughput=  1.09 GB/s doc_throughput=  1727 docs/s instructions=     5750340 cycles=     2136843 branch_miss=   10332 cache_miss=       0 cache_ref=     43387 items=         1 avg_time=    584240 ns]
top_tweet<rapidjson>/manual_time                         2349068 ns      2378227 ns          299           31.17k           291.558M          9.322k        52.646k    7.98281M              12.6407            461.68        3.6855G          21.7982M                    34.5173                     2.73064             461.68    31.3949k   631.515k       256.382M/s   1.15377k   33.0157k   8.11951M         12.8572    425.701/s 3.45648G/s     21.7988M               34.5183                2.68475          1        425.701/s [BEST: throughput=  0.29 GB/s doc_throughput=   461 docs/s instructions=    21798177 cycles=     7982808 branch_miss=   31170 cache_miss=    9322 cache_ref=     52646 items=         1 avg_time=   2349067 ns]
top_tweet<rapidjson_insitu>/manual_time                  1562718 ns      1591912 ns          435          24.931k            439.46M              39        42.265k    5.30486M              8.40021           695.883       3.69156G          13.2295M                    20.9488                     2.49384            695.883    31.4736k   631.515k       385.392M/s   2.86763k    34.559k   5.50355M         8.71483    639.911/s 3.52178G/s       13.23M               20.9495                 2.4039          1        639.911/s [BEST: throughput=  0.44 GB/s doc_throughput=   695 docs/s instructions=    13229452 cycles=     5304860 branch_miss=   24931 cache_miss=      39 cache_ref=     42265 items=         1 avg_time=   1562718 ns]
top_tweet<nlohmann_json>/manual_time                     9359722 ns      9389375 ns           75         187.021k           67.7089M              19       398.656k    34.4147M              54.4954           107.217       3.68982G          87.5468M                     138.63                     2.54388            107.217    188.645k   631.515k       64.3459M/s     148.52   418.543k   34.5235M         54.6678    106.841/s 3.68852G/s     87.5839M               138.689                2.53693          1        106.841/s [BEST: throughput=  0.07 GB/s doc_throughput=   107 docs/s instructions=    87546793 cycles=    34414661 branch_miss=  187021 cache_miss=      19 cache_ref=    398656 items=         1 avg_time=   9359722 ns]
