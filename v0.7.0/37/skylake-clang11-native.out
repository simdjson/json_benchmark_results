run_benchmark: v0.8.0~1 /home/jkeiser/simdjson_benchmark_results/v0.7.0/37/skylake-clang11-native.json -DCMAKE_CXX_FLAGS=-march=native
git reset --hard v0.8.0~1
HEAD is now at 1005c62e It seems that we export too many targets. (#1385)
cmake -DCMAKE_CXX_FLAGS=-march=native ..
-- The CXX compiler identification is Clang 11.0.0
-- The C compiler identification is Clang 11.0.0
-- Check for working CXX compiler: /usr/bin/clang++-11
-- Check for working CXX compiler: /usr/bin/clang++-11 -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Check for working C compiler: /usr/bin/clang-11
-- Check for working C compiler: /usr/bin/clang-11 -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- No build type selected, default to Release
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed
-- Check if compiler accepts -pthread
-- Check if compiler accepts -pthread - yes
-- Found Threads: TRUE  
-- Looking for fork
-- Looking for fork - found
-- Looking for wait
-- Looking for wait - found
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- Found Git: /usr/bin/git (found version "2.27.0") 
-- git Version: v0.2.1-1005c62e
-- Version: 0.2.1
-- Performing Test HAVE_CXX_FLAG_STD_CXX11
-- Performing Test HAVE_CXX_FLAG_STD_CXX11 - Success
-- Performing Test HAVE_CXX_FLAG_WALL
-- Performing Test HAVE_CXX_FLAG_WALL - Success
-- Performing Test HAVE_CXX_FLAG_WEXTRA
-- Performing Test HAVE_CXX_FLAG_WEXTRA - Success
-- Performing Test HAVE_CXX_FLAG_WSHADOW
-- Performing Test HAVE_CXX_FLAG_WSHADOW - Success
-- Performing Test HAVE_CXX_FLAG_WERROR
-- Performing Test HAVE_CXX_FLAG_WERROR - Success
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32 - Success
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED - Success
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WD654
-- Performing Test HAVE_CXX_FLAG_WD654 - Failed
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY - Success
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES -- failed to compile
-- Performing Test HAVE_CXX_FLAG_COVERAGE
-- Performing Test HAVE_CXX_FLAG_COVERAGE - Success
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Performing Test USE_BOOST_JSON
-- Performing Test USE_BOOST_JSON - Failed
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Found Python3: /usr/bin/python3.8 (found version "3.8.6") found components: Interpreter 
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
make[1]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[2]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
Scanning dependencies of target benchmark
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[  0%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/benchmark.cc.o
[ 10%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o
[ 10%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/benchmark_name.cc.o
[ 10%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/benchmark_register.cc.o
[ 20%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/benchmark_runner.cc.o
[ 20%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/colorprint.cc.o
[ 30%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/commandlineflags.cc.o
[ 30%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/complexity.cc.o
[ 30%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/console_reporter.cc.o
[ 40%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/counter.cc.o
[ 40%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/csv_reporter.cc.o
[ 50%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/json_reporter.cc.o
[ 50%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/reporter.cc.o
[ 60%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/sleep.cc.o
[ 60%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/statistics.cc.o
[ 60%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/string_util.cc.o
[ 70%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/sysinfo.cc.o
[ 70%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/timers.cc.o
[ 80%] Linking CXX static library libbenchmark.a
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 80%] Built target benchmark
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
Scanning dependencies of target generated-data
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 80%] Generating utf-8.json, escape.json, 0-structurals.json, 7-structurals.json, 15-structurals.json, 23-structurals.json
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-miss.json ...
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 80%] Built target generated-data
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
Scanning dependencies of target simdjson
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 80%] Building CXX object src/CMakeFiles/simdjson.dir/simdjson.cpp.o
[ 80%] Linking CXX shared library ../libsimdjson.so
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 80%] Built target simdjson
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
Scanning dependencies of target yyjson
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 80%] Building C object dependencies/CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o
[ 90%] Linking C static library libyyjson.a
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 90%] Built target yyjson
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
Scanning dependencies of target bench_ondemand
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[100%] Building CXX object benchmark/CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o
[100%] Linking CXX executable bench_ondemand
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[100%] Built target bench_ondemand
make[2]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[1]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/37/skylake-clang11-native.json --benchmark_out_format=json
2021-01-23 04:36:47
Running benchmark/bench_ondemand
Run on (4 X 4000 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 256 KiB (x4)
  L3 Unified 8192 KiB (x1)
Load Average: 1.00, 1.00, 0.89
simdjson::dom implementation:      haswell
simdjson::ondemand implementation: haswell

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                  272535 ns       301271 ns         2520           3.492k           2.33093G               0         93.44k    1000.39k               1.5841          3.69102k       3.69244G          2.99337M                    4.73999                     2.99222           369.102k    3.64781k   631.515k       2.15805G/s    2.58294   93.4184k   1005.64k         1.59242   3.66925k/s 3.68994G/s     2.99337M               4.73999                2.97659        100       366.925k/s [BEST: throughput=  2.33 GB/s doc_throughput=  3691 docs/s instructions=     2993372 cycles=     1000386 branch_miss=    3492 cache_miss=       0 cache_ref=     93440 items=       100 avg_time=    272535 ns]
partial_tweets<simdjson_ondemand>/manual_time             175124 ns       203711 ns         4000           1.759k           3.63523G               0        59.375k    641.582k              1.01594          5.75636k       3.69317G          1.94668M                    3.08256                     3.03419           575.636k    1.89136k   631.515k       3.35844G/s       0.06   59.2416k   646.283k         1.02338   5.71023k/s 3.69042G/s     1.94668M               3.08256                3.01212        100       571.023k/s [BEST: throughput=  3.64 GB/s doc_throughput=  5756 docs/s instructions=     1946680 cycles=      641582 branch_miss=    1759 cache_miss=       0 cache_ref=     59375 items=       100 avg_time=    175124 ns]
partial_tweets<yyjson>/manual_time                        639594 ns       670556 ns         1098           9.193k           1.83464G             442        78.617k    1.27114M              2.01284          2.90514k       3.69284G           2.9196M                    4.62317                     2.29684           290.514k    7.39755k   631.515k       941.627M/s    933.875   51.5217k   1.49766M         2.37153   1.56349k/s 2.34158G/s      2.9203M               4.62427                1.94991        100       156.349k/s [BEST: throughput=  1.83 GB/s doc_throughput=  2905 docs/s instructions=     2919603 cycles=     1271139 branch_miss=    9193 cache_miss=     442 cache_ref=     78617 items=       100 avg_time=    639594 ns]
partial_tweets<yyjson_insitu>/manual_time                 424235 ns       453816 ns         1651           7.006k           2.06925G              64        48.778k     1.1272M              1.78492          3.27664k       3.69344G          2.91949M                      4.623                     2.59003           327.664k    7.17406k   631.515k       1.38637G/s    163.052   33.5995k   1.22153M         1.93428   2.35719k/s 2.87937G/s     2.91976M               4.62342                2.39025        100       235.719k/s [BEST: throughput=  2.07 GB/s doc_throughput=  3276 docs/s instructions=     2919494 cycles=     1127204 branch_miss=    7006 cache_miss=      64 cache_ref=     48778 items=       100 avg_time=    424234 ns]
partial_tweets<sajson>/manual_time                        598258 ns       627112 ns         1169          10.503k           1069.35M               0        48.228k    2.18029M              3.45247          1.69332k       3.69191G          5.87691M                    9.30604                     2.69548           169.332k    10.8579k   631.515k       1006.69M/s     1.3071   48.4349k   2.20738M         3.49537   1.67152k/s 3.68967G/s     5.87691M               9.30604                2.66239        100       167.152k/s [BEST: throughput=  1.07 GB/s doc_throughput=  1693 docs/s instructions=     5876906 cycles=     2180285 branch_miss=   10503 cache_miss=       0 cache_ref=     48228 items=       100 avg_time=    598258 ns]
partial_tweets<rapidjson>/manual_time                    2365279 ns      2394268 ns          296          31.048k           290.692M         16.224k         55.15k     8.0197M              12.6991           460.308       3.69153G          21.8948M                    34.6702                     2.73013           46.0308k    31.1753k   631.515k       254.625M/s    629.476   34.4632k   8.13768M          12.886    422.783/s 3.44047G/s     21.8956M               34.6716                2.69065        100       42.2783k/s [BEST: throughput=  0.29 GB/s doc_throughput=   460 docs/s instructions=    21894780 cycles=     8019697 branch_miss=   31048 cache_miss=   16224 cache_ref=     55150 items=       100 avg_time=   2365279 ns]
partial_tweets<rapidjson_insitu>/manual_time             1552276 ns      1581447 ns          454          25.047k           439.322M              64        46.237k    5.29512M              8.38478           695.663       3.68362G          13.3201M                    21.0922                     2.51554           69.5663k    26.1679k   631.515k       387.985M/s    280.278    35.754k   5.38412M         8.52573    644.215/s 3.46854G/s     13.3204M               21.0928                2.47402        100       64.4215k/s [BEST: throughput=  0.44 GB/s doc_throughput=   695 docs/s instructions=    13320058 cycles=     5295116 branch_miss=   25047 cache_miss=      64 cache_ref=     46237 items=       100 avg_time=   1552275 ns]
partial_tweets<nlohmann_json>/manual_time                8520885 ns      8556403 ns           83         150.708k           76.2519M             361       231.437k    30.5574M              48.3874           120.744       3.68963G          80.3112M                    127.172                     2.62821           12.0744k     161.51k   631.515k       70.6804M/s    577.976   368.987k   31.4327M         49.7734    117.359/s  3.6889G/s     80.7208M               127.821                2.56805        100       11.7359k/s [BEST: throughput=  0.08 GB/s doc_throughput=   120 docs/s instructions=    80311152 cycles=    30557354 branch_miss=  150708 cache_miss=     361 cache_ref=    231437 items=       100 avg_time=   8520885 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                  87647676 ns     91024896 ns            8         917.688k           526.327M        10.8346M       15.4078M    322.409M              7.00907           11.4422       3.68906G          1035.69M                    22.5155                     3.21234           11.4422M    915.018k   45.9988M       500.502M/s   10.8851M   15.4121M   323.231M         7.02694    11.4093/s 3.68784G/s     1035.69M               22.5155                3.20417      1000k       11.4093M/s [BEST: throughput=  0.53 GB/s doc_throughput=    11 docs/s instructions=  1035686042 cycles=   322408515 branch_miss=  917688 cache_miss=10834622 cache_ref=  15407769 items=   1000000 avg_time=  87647675 ns]
large_random<simdjson_ondemand>/manual_time             65661452 ns     69031184 ns           11         918.087k           701.242M        5.65111M       8.02637M    241.988M              5.26076           15.2448       3.68906G          670.142M                    14.5687                     2.76931           15.2448M    921.547k   45.9988M       668.091M/s   5.69559M   8.02778M   242.199M         5.26534    15.2296/s 3.68861G/s     670.142M               14.5687                 2.7669      1000k       15.2296M/s [BEST: throughput=  0.70 GB/s doc_throughput=    15 docs/s instructions=   670141948 cycles=   241988394 branch_miss=  918087 cache_miss= 5651108 cache_ref=   8026372 items=   1000000 avg_time=  65661452 ns]
large_random<simdjson_ondemand_unordered>/manual_time   66462280 ns     69831556 ns           11         899.061k            692.48M        5.68326M       8.02816M    245.016M              5.32658           15.0543       3.68855G          674.142M                    14.6556                     2.75142           15.0543M    899.363k   45.9988M       660.041M/s   5.69465M   8.02863M   245.152M         5.32954    15.0461/s  3.6886G/s     674.142M               14.6556                2.74989      1000k       15.0461M/s [BEST: throughput=  0.69 GB/s doc_throughput=    15 docs/s instructions=   674141949 cycles=   245016042 branch_miss=  899061 cache_miss= 5683259 cache_ref=   8028156 items=   1000000 avg_time=  66462279 ns]
large_random<yyjson>/manual_time                       115790537 ns    119217885 ns            6         674.132k           397.449M        5.69817M       8.93252M     307.63M              6.68779           8.64042       2.65806G          855.681M                    18.6023                     2.78152           8.64042M    676.578k   45.9988M       378.855M/s   5.69684M    8.9375M   307.764M          6.6907    8.63628/s 2.65794G/s     855.681M               18.6023                2.78031      1000k       8.63628M/s [BEST: throughput=  0.40 GB/s doc_throughput=     8 docs/s instructions=   855680945 cycles=   307630199 branch_miss=  674132 cache_miss= 5698175 cache_ref=   8932521 items=   1000000 avg_time= 115790537 ns]
large_random<yyjson_insitu>/manual_time                 97631748 ns    101035955 ns            7         676.854k           471.316M        4.84014M        7.6221M    275.048M              5.97946           10.2463       2.81822G           849.56M                    18.4692                     3.08877           10.2463M    676.079k   45.9988M        449.32M/s   4.83868M   7.62081M    275.06M         5.97973    10.2426/s 2.81732G/s      849.56M               18.4692                3.08864      1000k       10.2426M/s [BEST: throughput=  0.47 GB/s doc_throughput=    10 docs/s instructions=   849560191 cycles=   275047983 branch_miss=  676854 cache_miss= 4840144 cache_ref=   7622102 items=   1000000 avg_time=  97631747 ns]
large_random<sajson>/manual_time                        88215433 ns     91604061 ns            8         577.123k           522.384M        8.20985M       12.1397M    324.831M              7.06174           11.3565       3.68894G             1087M                     23.631                     3.34634           11.3565M    577.192k   45.9988M       497.281M/s   8.25176M   12.1378M    325.37M         7.07345    11.3359/s 3.68836G/s        1087M                23.631                 3.3408      1000k       11.3359M/s [BEST: throughput=  0.52 GB/s doc_throughput=    11 docs/s instructions=  1086995283 cycles=   324831279 branch_miss=  577123 cache_miss= 8209848 cache_ref=  12139726 items=   1000000 avg_time=  88215432 ns]
large_random<rapidjson>/manual_time                    213069571 ns    216482131 ns            3         593.212k           221.663M        7.03131M       10.8933M    707.376M              15.3781           4.81888       3.40876G          2.01014G                    43.6999                     2.84169           4.81888M    594.336k   45.9988M       205.885M/s   6.52267M   10.2336M   708.998M         15.4134     4.6933/s 3.32754G/s     2.01015G               43.7001                 2.8352      1000k        4.6933M/s [BEST: throughput=  0.22 GB/s doc_throughput=     4 docs/s instructions=  2010143710 cycles=   707375827 branch_miss=  593212 cache_miss= 7031315 cache_ref=  10893341 items=   1000000 avg_time= 213069571 ns]
large_random<rapidjson_lossless>/manual_time           246667550 ns    250086254 ns            3         584.499k           190.913M        7.01069M       10.9136M    830.896M              18.0634           4.15039       3.44854G          2.47511G                    53.8082                     2.97885           4.15039M    581.587k   45.9988M       177.842M/s   6.51685M   10.2558M   833.359M          18.117    4.05404/s 3.37847G/s     2.47512G               53.8084                2.97005      1000k       4.05404M/s [BEST: throughput=  0.19 GB/s doc_throughput=     4 docs/s instructions=  2475110900 cycles=   830895548 branch_miss=  584499 cache_miss= 7010693 cache_ref=  10913618 items=   1000000 avg_time= 246667550 ns]
large_random<rapidjson_insitu>/manual_time             238215472 ns    241636405 ns            3         589.477k           197.656M         8.1224M       12.4975M    800.589M              17.4046           4.29698       3.44012G          1.72014G                    37.3954                      2.1486           4.29698M    590.297k   45.9988M       184.152M/s   7.63507M   11.8429M   802.155M         17.4386    4.19788/s 3.36735G/s     1.72015G               37.3956                2.14441      1000k       4.19788M/s [BEST: throughput=  0.20 GB/s doc_throughput=     4 docs/s instructions=  1720143627 cycles=   800589295 branch_miss=  589477 cache_miss= 8122400 cache_ref=  12497516 items=   1000000 avg_time= 238215471 ns]
large_random<nlohmann_json>/manual_time               1282136762 ns   1285397209 ns            1         4.10435M           35.8767M        46.7001M       61.4433M    4.71569G              102.518          0.779948       3.67799G          12.7456G                    277.085                      2.7028           779.948k    4.10435M   45.9988M       34.2146M/s   46.7001M   61.4433M   4.71569G         102.518   0.779948/s 3.67799G/s     12.7456G               277.085                 2.7028      1000k       779.948k/s [BEST: throughput=  0.04 GB/s doc_throughput=     0 docs/s instructions= 12745553002 cycles=  4715687210 branch_miss= 4104349 cache_miss=46700054 cache_ref=  61443254 items=   1000000 avg_time=1282136762 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                        93633852 ns    103915691 ns            7         1.11155M           1.46845G        15.7631M       22.2732M    344.906M              2.51197           10.6948        3.6887G          985.796M                    7.17961                     2.85815           5.60714M    1.11258M   137.305M       1.36569G/s    15.809M   22.3013M   345.386M         2.51547    10.6799/s 3.68869G/s     985.796M               7.17961                2.85419   524.288k       5.59934M/s [BEST: throughput=  1.47 GB/s doc_throughput=    10 docs/s instructions=   985795976 cycles=   344906500 branch_miss= 1111549 cache_miss=15763140 cache_ref=  22273199 items=    524288 avg_time=  93633851 ns]
kostya<simdjson_ondemand>/manual_time                   62675003 ns     72907059 ns           11         554.117k            2.1931G        10.0704M       14.0425M     230.96M              1.68209           15.9725         3.689G          652.062M                      4.749                     2.82327           8.37419M      554.1k   137.305M       2.04029G/s   10.0825M    13.964M   231.131M         1.68334    15.9553/s 3.68776G/s     652.062M                 4.749                2.82118   524.288k       8.36519M/s [BEST: throughput=  2.19 GB/s doc_throughput=    15 docs/s instructions=   652061660 cycles=   230959748 branch_miss=  554117 cache_miss=10070382 cache_ref=  14042493 items=    524288 avg_time=  62675003 ns]
kostya<yyjson>/manual_time                             173482353 ns    183774618 ns            4          420.33k           792.394M        11.2554M       16.4148M    443.277M              3.22841           5.77105       2.55817G          974.184M                    7.09504                     2.19769           3.02569M    420.411k   137.305M       754.799M/s   11.2543M   16.3516M   443.145M         3.22745    5.76428/s 2.55441G/s     974.185M               7.09504                2.19834   524.288k       3.02214M/s [BEST: throughput=  0.79 GB/s doc_throughput=     5 docs/s instructions=   974184483 cycles=   443277319 branch_miss=  420330 cache_miss=11255448 cache_ref=  16414822 items=    524288 avg_time= 173482353 ns]
kostya<yyjson_insitu>/manual_time                      120012706 ns    130314536 ns            6         415.814k           1.14494G        8.64888M       12.4033M    348.398M               2.5374           8.33863       2.90516G          955.915M                    6.96198                     2.74375           4.37185M    416.197k   137.305M       1091.09M/s   8.64982M   12.3852M   348.559M         2.53857    8.33245/s 2.90435G/s     955.915M               6.96198                2.74248   524.288k        4.3686M/s [BEST: throughput=  1.14 GB/s doc_throughput=     8 docs/s instructions=   955914816 cycles=   348397677 branch_miss=  415814 cache_miss= 8648884 cache_ref=  12403290 items=    524288 avg_time= 120012705 ns]
kostya<sajson>/manual_time                             137104297 ns    147430000 ns            5         356.069k           1002.04M        12.2651M       17.1998M    505.522M              3.68174           7.29792       3.68926G          1.51716G                    11.0496                     3.00118           3.82621M    356.296k   137.305M        955.07M/s   12.2928M   17.1723M   505.744M         3.68336    7.29372/s 3.68875G/s     1.51716G               11.0496                2.99986   524.288k       3.82401M/s [BEST: throughput=  1.00 GB/s doc_throughput=     7 docs/s instructions=  1517163295 cycles=   505521826 branch_miss=  356069 cache_miss=12265095 cache_ref=  17199809 items=    524288 avg_time= 137104296 ns]
kostya<rapidjson>/manual_time                          278583625 ns    288853356 ns            3          989.21k           498.929M        8.28035M        12.327M    934.069M              6.80288           3.63373       3.39415G          2.73767G                    19.9386                     2.93091           1.90512M     982.89k   137.305M       470.036M/s   7.98612M   11.8908M   936.852M         6.82315    3.58959/s 3.36291G/s     2.73768G               19.9386                2.92221   524.288k       1.88198M/s [BEST: throughput=  0.50 GB/s doc_throughput=     3 docs/s instructions=  2737673733 cycles=   934069145 branch_miss=  989210 cache_miss= 8280354 cache_ref=  12327017 items=    524288 avg_time= 278583625 ns]
kostya<rapidjson_lossless>/manual_time                 303847998 ns    314126960 ns            2         968.927k           455.629M        8.27957M       12.2276M     1030.3M              7.50373           3.31837       3.41892G          3.00662G                    21.8974                      2.9182           1.73978M    967.027k   137.305M       430.953M/s    8.0588M   11.9628M   1032.12M         7.51699    3.29112/s 3.39683G/s     3.00663G               21.8974                2.91306   524.288k       1.72549M/s [BEST: throughput=  0.46 GB/s doc_throughput=     3 docs/s instructions=  3006624173 cycles=  1030300147 branch_miss=  968927 cache_miss= 8279573 cache_ref=  12227570 items=    524288 avg_time= 303847998 ns]
kostya<rapidjson_insitu>/manual_time                   275774983 ns    286089403 ns            3          959.85k           503.594M        11.9285M       16.0535M    924.895M              6.73606           3.66771       3.39224G          2.21153G                    16.1067                     2.39111           1.92293M    963.587k   137.305M       474.823M/s   11.6398M   15.7056M   926.731M         6.74944    3.62614/s 3.36046G/s     2.21153G               16.1067                2.38637   524.288k       1.90114M/s [BEST: throughput=  0.50 GB/s doc_throughput=     3 docs/s instructions=  2211525438 cycles=   924894895 branch_miss=  959850 cache_miss=11928507 cache_ref=  16053520 items=    524288 avg_time= 275774983 ns]
kostya<nlohmann_json>/manual_time                     1946616713 ns   1956808112 ns            1         13.9109M           70.5352M        68.3211M       86.1366M     7.1809G              52.2989          0.513712       3.68891G          17.7606G                    129.351                     2.47331           269.333k    13.9109M   137.305M       67.2676M/s   68.3211M   86.1366M    7.1809G         52.2989   0.513712/s 3.68891G/s     17.7606G               129.351                2.47331   524.288k       269.333k/s [BEST: throughput=  0.07 GB/s doc_throughput=     0 docs/s instructions= 17760586585 cycles=  7180903132 branch_miss=13910906 cache_miss=68321061 cache_ref=  86136605 items=    524288 avg_time=1946616713 ns]
distinct_user_id<simdjson_dom>/manual_time                272780 ns       303448 ns         2566            3.69k           2.32799G               0        94.851k    1001.78k              1.58632          3.68635k       3.69293G          2.92855M                    4.63734                     2.92333            423.93k    3.81442k   631.515k       2.15611G/s   0.565472   94.7837k   1006.66k         1.59404   3.66596k/s 3.69039G/s     2.92855M               4.63734                2.90916        115       421.586k/s [BEST: throughput=  2.33 GB/s doc_throughput=  3686 docs/s instructions=     2928548 cycles=     1001785 branch_miss=    3690 cache_miss=       0 cache_ref=     94851 items=       115 avg_time=    272779 ns]
distinct_user_id<simdjson_ondemand>/manual_time           162022 ns       191707 ns         4316           2.099k           3.93372G               0        56.585k     592.92k             0.938885          6.22902k       3.69331G          1.89587M                    3.00209                     3.19751           716.337k    2.26908k   631.515k       3.63003G/s   0.050278   56.7306k   598.058k        0.947021     6.172k/s 3.69121G/s     1.89587M               3.00209                3.17004        115        709.78k/s [BEST: throughput=  3.93 GB/s doc_throughput=  6229 docs/s instructions=     1895867 cycles=      592920 branch_miss=    2099 cache_miss=       0 cache_ref=     56585 items=       115 avg_time=    162022 ns]
distinct_user_id<yyjson>/manual_time                      546331 ns       579752 ns         1000           6.516k            1.9245G          21.88k        77.138k    1.21156M              1.91849          3.04743k       3.69213G            2.878M                     4.5573                     2.37546           350.455k     7.3099k   631.515k       1102.37M/s   7.39032k   58.0664k   1.42127M         2.25058   1.83039k/s 2.60149G/s     2.87828M               4.55774                2.02514        115       210.495k/s [BEST: throughput=  1.92 GB/s doc_throughput=  3047 docs/s instructions=     2878002 cycles=     1211555 branch_miss=    6516 cache_miss=   21880 cache_ref=     77138 items=       115 avg_time=    546330 ns]
distinct_user_id<yyjson_insitu>/manual_time               417521 ns       450331 ns         1676           6.895k           2.09812G             407         46.81k    1.10802M              1.75454          3.32236k       3.68124G          2.87759M                    4.55665                     2.59706           382.071k    7.33857k   631.515k       1.40866G/s    51.9403   32.1983k   1.20717M         1.91154   2.39509k/s 2.89127G/s     2.87786M               4.55707                2.38398        115       275.435k/s [BEST: throughput=  2.10 GB/s doc_throughput=  3322 docs/s instructions=     2877592 cycles=     1108020 branch_miss=    6895 cache_miss=     407 cache_ref=     46810 items=       115 avg_time=    417520 ns]
distinct_user_id<sajson>/manual_time                      596114 ns       626900 ns         1172          10.588k            1073.9M               0        47.952k    2.17097M              3.43771          1.70051k       3.69175G          5.81547M                    9.20876                     2.67875           195.559k    10.9524k   631.515k       1010.31M/s    3.79437   48.1575k   2.19931M         3.48259   1.67753k/s 3.68941G/s     5.81547M               9.20876                2.64423        115       192.916k/s [BEST: throughput=  1.07 GB/s doc_throughput=  1700 docs/s instructions=     5815469 cycles=     2170966 branch_miss=   10588 cache_miss=       0 cache_ref=     47952 items=       115 avg_time=    596113 ns]
distinct_user_id<rapidjson>/manual_time                  2349676 ns      2380068 ns          299          31.078k           292.143M           9.23k        55.762k    7.97977M              12.6359           462.607        3.6915G          21.8235M                    34.5574                     2.73485           53.1998k    31.2029k   631.515k       256.316M/s   1.27068k   36.5046k   8.11466M         12.8495    425.591/s 3.45352G/s     21.8242M               34.5585                2.68948        115       48.9429k/s [BEST: throughput=  0.29 GB/s doc_throughput=   462 docs/s instructions=    21823507 cycles=     7979774 branch_miss=   31078 cache_miss=    9230 cache_ref=     55762 items=       115 avg_time=   2349676 ns]
distinct_user_id<rapidjson_insitu>/manual_time           1559533 ns      1590430 ns          437          25.282k           410.965M              14        36.296k    5.34192M              8.45889            650.76       3.47631G          13.2547M                    20.9888                     2.48127           74.8374k    32.0244k   631.515k       386.179M/s   2.96568k   38.6055k   5.49155M         8.69583    641.218/s 3.52128G/s     13.2546M               20.9886                2.41364        115         73.74k/s [BEST: throughput=  0.41 GB/s doc_throughput=   650 docs/s instructions=    13254750 cycles=     5341919 branch_miss=   25282 cache_miss=      14 cache_ref=     36296 items=       115 avg_time=   1559532 ns]
distinct_user_id<nlohmann_json>/manual_time              7953920 ns      7986293 ns           90         125.237k           82.1374M          2.999k       223.865k    28.3573M              44.9037           130.064       3.68827G          75.7182M                    119.899                     2.67015           14.9574k    140.231k   631.515k       75.7186M/s    170.122   425.641k   29.3368M         46.4547    125.724/s 3.68835G/s     74.3627M               117.753                2.53479        115       14.4583k/s [BEST: throughput=  0.08 GB/s doc_throughput=   130 docs/s instructions=    75718228 cycles=    28357333 branch_miss=  125237 cache_miss=    2999 cache_ref=    223865 items=       115 avg_time=   7953920 ns]
find_tweet<simdjson_dom>/manual_time                      261121 ns       290432 ns         2679           3.371k           2.43188G               0        84.209k    958.871k              1.51837          3.85086k       3.69248G          2.84337M                    4.50246                     2.96534           3.85086k    3.48195k   631.515k       2.25238G/s    4.03098   84.1524k   963.592k         1.52584   3.82964k/s 3.69021G/s     2.84337M               4.50246                2.95081          1       3.82964k/s [BEST: throughput=  2.43 GB/s doc_throughput=  3850 docs/s instructions=     2843374 cycles=      958871 branch_miss=    3371 cache_miss=       0 cache_ref=     84209 items=         1 avg_time=    261121 ns]
find_tweet<simdjson_ondemand>/manual_time                 118377 ns       146886 ns         5910           1.124k           5.36469G               0        32.825k    434.845k             0.688574          8.49495k       3.69399G          1.38727M                    2.19673                     3.19025           8.49495k    1.18461k   631.515k       4.96839G/s   0.111337   32.9167k   436.951k        0.691909   8.44757k/s 3.69117G/s     1.38727M               2.19673                3.17488          1       8.44757k/s [BEST: throughput=  5.36 GB/s doc_throughput=  8494 docs/s instructions=     1387265 cycles=      434845 branch_miss=    1124 cache_miss=       0 cache_ref=     32825 items=         1 avg_time=    118377 ns]
find_tweet<yyjson>/manual_time                            609020 ns       639925 ns         1381           9.462k           1.88835G             400        69.996k    1.23499M               1.9556          2.99019k       3.69286G          2.81717M                    4.46097                     2.28112           2.99019k    7.20051k   631.515k         988.9M/s    1058.56   41.6151k   1.44398M         2.28654   1.64198k/s 2.37099G/s     2.81763M                4.4617                1.95129          1       1.64198k/s [BEST: throughput=  1.89 GB/s doc_throughput=  2990 docs/s instructions=     2817168 cycles=     1234992 branch_miss=    9462 cache_miss=     400 cache_ref=     69996 items=         1 avg_time=    609019 ns]
find_tweet<yyjson_insitu>/manual_time                     406656 ns       436907 ns         1723            6.67k           2.16832G             419        38.237k    1071.94k              1.69742          3.43352k       3.68054G          2.81683M                    4.46043                     2.62778           3.43352k    7.04494k   631.515k       1.44629G/s     15.863   23.2129k   1.16733M         1.84846   2.45908k/s 2.87056G/s     2.81709M               4.46085                2.41327          1       2.45908k/s [BEST: throughput=  2.17 GB/s doc_throughput=  3433 docs/s instructions=     2816831 cycles=     1071944 branch_miss=    6670 cache_miss=     419 cache_ref=     38237 items=         1 avg_time=    406656 ns]
find_tweet<sajson>/manual_time                            581466 ns       611452 ns         1201          10.288k           1098.37M               0        38.271k    2.12265M               3.3612          1.73927k       3.69186G          5.72035M                    9.05813                     2.69491           1.73927k    10.6805k   631.515k       1035.76M/s    1.22481   38.4097k   2.14535M         3.39715   1.71979k/s 3.68955G/s     5.72035M               9.05814                 2.6664          1       1.71979k/s [BEST: throughput=  1.10 GB/s doc_throughput=  1739 docs/s instructions=     5720348 cycles=     2122648 branch_miss=   10288 cache_miss=       0 cache_ref=     38271 items=         1 avg_time=    581466 ns]
find_tweet<rapidjson>/manual_time                        2336228 ns      2365097 ns          301          30.873k           293.626M         21.453k         49.18k    7.93947M              12.5721           464.955       3.69149G          21.7397M                    34.4247                     2.73819            464.955    31.1001k   631.515k       257.792M/s    985.166   28.6291k   8.06886M          12.777     428.04/s  3.4538G/s     21.7406M               34.4261                2.69438          1         428.04/s [BEST: throughput=  0.29 GB/s doc_throughput=   464 docs/s instructions=    21739727 cycles=     7939465 branch_miss=   30873 cache_miss=   21453 cache_ref=     49180 items=         1 avg_time=   2336227 ns]
find_tweet<rapidjson_insitu>/manual_time                 1543485 ns      1573452 ns          441          33.834k           426.023M         12.379k        38.439k    5.47248M              8.66564           674.605       3.69177G          13.1769M                    20.8655                     2.40785            674.605    31.3876k   631.515k       390.195M/s   2.68206k    28.869k   5.43171M         8.60108    647.884/s 3.51912G/s     13.1761M               20.8643                2.42577          1        647.884/s [BEST: throughput=  0.43 GB/s doc_throughput=   674 docs/s instructions=    13176903 cycles=     5472482 branch_miss=   33834 cache_miss=   12379 cache_ref=     38439 items=         1 avg_time=   1543485 ns]
find_tweet<nlohmann_json>/manual_time                    6946452 ns      6975587 ns          104          99.683k           95.4231M           2.76k       168.477k    24.4178M              38.6654           151.102       3.68957G          65.8437M                    104.263                     2.69655            151.102    125.005k   631.515k       86.7003M/s    130.067   335.308k   25.6213M         40.5711    143.958/s  3.6884G/s     64.4814M               102.106                2.51671          1        143.958/s [BEST: throughput=  0.10 GB/s doc_throughput=   151 docs/s instructions=    65843656 cycles=    24417776 branch_miss=   99683 cache_miss=    2760 cache_ref=    168477 items=         1 avg_time=   6946452 ns]
top_tweet<simdjson_dom>/manual_time                       268512 ns       297238 ns         2605            3.54k           2.36499G               0         92.03k    986.056k              1.56141          3.74494k       3.69272G          2.88026M                    4.56088                     2.92099           3.74494k    3.64561k   631.515k       2.19038G/s   0.428023   92.0769k   990.953k         1.56917   3.72422k/s 3.69053G/s     2.88026M               4.56088                2.90656          1       3.72422k/s [BEST: throughput=  2.36 GB/s doc_throughput=  3744 docs/s instructions=     2880261 cycles=      986056 branch_miss=    3540 cache_miss=       0 cache_ref=     92030 items=         1 avg_time=    268512 ns]
top_tweet<simdjson_ondemand>/manual_time                  178251 ns       206723 ns         3926           1.655k           3.56609G               0        57.228k    653.926k              1.03549          5.64688k       3.69264G          1.91005M                    3.02456                      2.9209           5.64688k    1.75888k   631.515k       3.29954G/s   0.368314   57.3085k   657.839k         1.04168   5.61008k/s 3.69053G/s     1.91005M               3.02456                2.90353          1       5.61008k/s [BEST: throughput=  3.57 GB/s doc_throughput=  5646 docs/s instructions=     1910054 cycles=      653926 branch_miss=    1655 cache_miss=       0 cache_ref=     57228 items=         1 avg_time=    178250 ns]
top_tweet<simdjson_ondemand_forward_only>/manual_time     172095 ns       200562 ns         4068           1.855k           3.70901G               0        58.085k    628.789k             0.995683           5.8732k         3.693G          1.92496M                    3.04817                     3.06138            5.8732k     2.0136k   631.515k       3.41755G/s  0.0272861   57.9098k   635.216k         1.00586   5.81074k/s 3.69108G/s     1.92497M               3.04817                3.03041          1       5.81074k/s [BEST: throughput=  3.71 GB/s doc_throughput=  5873 docs/s instructions=     1924965 cycles=      628789 branch_miss=    1855 cache_miss=       0 cache_ref=     58085 items=         1 avg_time=    172095 ns]
top_tweet<yyjson>/manual_time                             614914 ns       645080 ns         1144           9.367k           1.86754G             114        73.975k    1.24864M              1.97721          2.95723k       3.69251G          2.84443M                    4.50414                     2.27803           2.95723k     7.3719k   631.515k       979.421M/s    988.167   46.8333k    1.4645M         2.31903   1.62624k/s 2.38164G/s     2.84511M               4.50522                1.94271          1       1.62624k/s [BEST: throughput=  1.87 GB/s doc_throughput=  2957 docs/s instructions=     2844430 cycles=     1248637 branch_miss=    9367 cache_miss=     114 cache_ref=     73975 items=         1 avg_time=    614914 ns]
top_tweet<yyjson_insitu>/manual_time                      412697 ns       442271 ns         1696           6.766k            2.1302G             403        42.765k    1089.46k              1.72516          3.37316k       3.67494G          2.84411M                    4.50362                     2.61056           3.37316k    7.20441k   631.515k       1.42512G/s    45.4811   28.4963k   1.18987M         1.88415   2.42308k/s 2.88315G/s     2.84437M               4.50404                2.39049          1       2.42308k/s [BEST: throughput=  2.13 GB/s doc_throughput=  3373 docs/s instructions=     2844106 cycles=     1089464 branch_miss=    6766 cache_miss=     403 cache_ref=     42765 items=         1 avg_time=    412697 ns]
top_tweet<sajson>/manual_time                             585955 ns       614848 ns         1196          10.401k            1089.9M               0        43.729k    2.13917M              3.38736          1.72585k       3.69188G          5.75034M                    9.10563                     2.68812           1.72585k    10.7458k   631.515k       1027.83M/s    3.02007   43.5108k    2.1614M         3.42257   1.70662k/s 3.68868G/s     5.75034M               9.10563                2.66047          1       1.70662k/s [BEST: throughput=  1.09 GB/s doc_throughput=  1725 docs/s instructions=     5750340 cycles=     2139169 branch_miss=   10401 cache_miss=       0 cache_ref=     43729 items=         1 avg_time=    585954 ns]
top_tweet<rapidjson>/manual_time                         2349270 ns      2378517 ns          299          31.075k           292.264M          8.715k        52.258k    7.97653M              12.6308           462.799       3.69153G           21.798M                     34.517                     2.73277            462.799    31.4023k   631.515k        256.36M/s   1.14863k   33.2639k   8.11232M         12.8458    425.664/s 3.45313G/s     21.7987M                34.518                 2.6871          1        425.664/s [BEST: throughput=  0.29 GB/s doc_throughput=   462 docs/s instructions=    21798027 cycles=     7976531 branch_miss=   31075 cache_miss=    8715 cache_ref=     52258 items=         1 avg_time=   2349270 ns]
top_tweet<rapidjson_insitu>/manual_time                  1566209 ns      1595047 ns          437          38.197k           411.554M         13.643k        44.371k    5.65104M              8.94839           651.693       3.68275G          13.2303M                      20.95                     2.34121            651.693    31.6467k   631.515k       384.533M/s   2.94038k    34.892k   5.51266M         8.72927    638.484/s 3.51975G/s     13.2296M                20.949                2.39985          1        638.484/s [BEST: throughput=  0.41 GB/s doc_throughput=   651 docs/s instructions=    13230269 cycles=     5651045 branch_miss=   38197 cache_miss=   13643 cache_ref=     44371 items=         1 avg_time=   1566209 ns]
top_tweet<nlohmann_json>/manual_time                     9418264 ns      9448739 ns           74         193.243k           67.3503M             231       401.656k    34.5971M              54.7843           106.649       3.68974G          88.0348M                    139.403                     2.54457            106.649     195.93k   631.515k       63.9459M/s    240.486   415.797k   34.7427M         55.0149    106.177/s 3.68887G/s     88.2066M               139.675                2.53885          1        106.177/s [BEST: throughput=  0.07 GB/s doc_throughput=   106 docs/s instructions=    88034812 cycles=    34597104 branch_miss=  193243 cache_miss=     231 cache_ref=    401656 items=         1 avg_time=   9418263 ns]
