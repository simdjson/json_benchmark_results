run_benchmark: v0.8.0~1 /home/jkeiser/simdjson_benchmark_results/v0.7.0/37/skylake-gcc10.2-native.json -DCMAKE_CXX_FLAGS=-march=native
git reset --hard v0.8.0~1
HEAD is now at 1005c62e It seems that we export too many targets. (#1385)
cmake -DCMAKE_CXX_FLAGS=-march=native ..
-- The CXX compiler identification is GNU 10.2.0
-- The C compiler identification is GNU 10.2.0
-- Check for working CXX compiler: /usr/bin/g++-10
-- Check for working CXX compiler: /usr/bin/g++-10 -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Check for working C compiler: /usr/bin/gcc-10
-- Check for working C compiler: /usr/bin/gcc-10 -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- No build type selected, default to Release
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed
-- Check if compiler accepts -pthread
-- Check if compiler accepts -pthread - yes
-- Found Threads: TRUE  
-- Looking for fork
-- Looking for fork - found
-- Looking for wait
-- Looking for wait - found
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- Found Git: /usr/bin/git (found version "2.27.0") 
-- git Version: v0.2.1-1005c62e
-- Version: 0.2.1
-- Performing Test HAVE_CXX_FLAG_STD_CXX11
-- Performing Test HAVE_CXX_FLAG_STD_CXX11 - Success
-- Performing Test HAVE_CXX_FLAG_WALL
-- Performing Test HAVE_CXX_FLAG_WALL - Success
-- Performing Test HAVE_CXX_FLAG_WEXTRA
-- Performing Test HAVE_CXX_FLAG_WEXTRA - Success
-- Performing Test HAVE_CXX_FLAG_WSHADOW
-- Performing Test HAVE_CXX_FLAG_WSHADOW - Success
-- Performing Test HAVE_CXX_FLAG_WERROR
-- Performing Test HAVE_CXX_FLAG_WERROR - Success
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32 - Failed
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED - Success
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WD654
-- Performing Test HAVE_CXX_FLAG_WD654 - Failed
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY - Failed
-- Performing Test HAVE_CXX_FLAG_COVERAGE
-- Performing Test HAVE_CXX_FLAG_COVERAGE - Success
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Performing Test USE_BOOST_JSON
-- Performing Test USE_BOOST_JSON - Failed
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Found Python3: /usr/bin/python3.8 (found version "3.8.6") found components: Interpreter 
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
make[1]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[2]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
Scanning dependencies of target benchmark
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[  0%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/benchmark.cc.o
[ 10%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o
[ 10%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/benchmark_name.cc.o
[ 10%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/benchmark_register.cc.o
[ 20%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/benchmark_runner.cc.o
[ 20%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/colorprint.cc.o
[ 30%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/commandlineflags.cc.o
[ 30%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/complexity.cc.o
[ 30%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/console_reporter.cc.o
[ 40%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/counter.cc.o
[ 40%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/csv_reporter.cc.o
[ 50%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/json_reporter.cc.o
[ 50%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/reporter.cc.o
[ 60%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/sleep.cc.o
[ 60%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/statistics.cc.o
[ 60%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/string_util.cc.o
[ 70%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/sysinfo.cc.o
[ 70%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/timers.cc.o
[ 80%] Linking CXX static library libbenchmark.a
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 80%] Built target benchmark
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
Scanning dependencies of target generated-data
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 80%] Generating utf-8.json, escape.json, 0-structurals.json, 7-structurals.json, 15-structurals.json, 23-structurals.json
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-miss.json ...
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 80%] Built target generated-data
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
Scanning dependencies of target simdjson
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 80%] Building CXX object src/CMakeFiles/simdjson.dir/simdjson.cpp.o
[ 80%] Linking CXX shared library ../libsimdjson.so
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 80%] Built target simdjson
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
Scanning dependencies of target yyjson
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 80%] Building C object dependencies/CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o
[ 90%] Linking C static library libyyjson.a
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 90%] Built target yyjson
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
Scanning dependencies of target bench_ondemand
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[100%] Building CXX object benchmark/CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o
[100%] Linking CXX executable bench_ondemand
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[100%] Built target bench_ondemand
make[2]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[1]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/37/skylake-gcc10.2-native.json --benchmark_out_format=json
2021-01-23 04:53:43
Running benchmark/bench_ondemand
Run on (4 X 4000 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 256 KiB (x4)
  L3 Unified 8192 KiB (x1)
Load Average: 1.04, 1.01, 1.00
simdjson::dom implementation:      haswell
simdjson::ondemand implementation: haswell

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                  257288 ns       285568 ns         2654           3.613k           2.47029G               0        87.108k    944.004k              1.49482          3.91169k       3.69265G          2.91501M                     4.6159                     3.08792           391.169k    3.80892k   631.515k       2.28593G/s   0.605501   87.0184k   949.591k         1.50367   3.88669k/s 3.69076G/s     2.91501M                4.6159                3.06976        100       388.669k/s [BEST: throughput=  2.47 GB/s doc_throughput=  3911 docs/s instructions=     2915013 cycles=      944004 branch_miss=    3613 cache_miss=       0 cache_ref=     87108 items=       100 avg_time=    257288 ns]
partial_tweets<simdjson_ondemand>/manual_time             187229 ns       215307 ns         3737             1.6k           3.39893G               0         54.48k    686.111k              1.08645          5.38219k       3.69278G           2.1433M                     3.3939                     3.12384           538.219k     1.7864k   631.515k       3.14131G/s   0.112925   54.7143k     691.1k         1.09435   5.34105k/s  3.6912G/s      2.1433M                3.3939                3.10129        100       534.105k/s [BEST: throughput=  3.40 GB/s doc_throughput=  5382 docs/s instructions=     2143300 cycles=      686111 branch_miss=    1600 cache_miss=       0 cache_ref=     54480 items=       100 avg_time=    187229 ns]
partial_tweets<yyjson>/manual_time                        691159 ns       721707 ns         1016           9.687k           1.59137G             512        74.589k    1.46542M              2.32049          2.51993k       3.69276G          2.90845M                    4.60552                     1.98472           251.993k    7.63626k   631.515k       871.376M/s    925.021   49.2921k   1.68945M         2.67523   1.44684k/s 2.44437G/s     2.90915M               4.60661                1.72195        100       144.684k/s [BEST: throughput=  1.59 GB/s doc_throughput=  2519 docs/s instructions=     2908453 cycles=     1465423 branch_miss=    9687 cache_miss=     512 cache_ref=     74589 items=       100 avg_time=    691159 ns]
partial_tweets<yyjson_insitu>/manual_time                 477478 ns       506392 ns         1468           7.113k           1.77233G             725        45.721k    1.30963M              2.07379          2.80647k       3.67543G          2.90814M                    4.60502                     2.22058           280.647k    7.48287k   631.515k       1.23177G/s    140.926   31.8684k   1.41864M         2.24641   2.09434k/s 2.97112G/s      2.9084M               4.60543                2.05013        100       209.434k/s [BEST: throughput=  1.77 GB/s doc_throughput=  2806 docs/s instructions=     2908138 cycles=     1309629 branch_miss=    7113 cache_miss=     725 cache_ref=     45721 items=       100 avg_time=    477477 ns]
partial_tweets<sajson>/manual_time                        552846 ns       581167 ns         1266           9.961k           1.15175G               0        45.707k    2.02431M              3.20548          1.82379k        3.6919G          6.04844M                    9.57767                     2.98791           182.379k     10.385k   631.515k       1089.38M/s    1.33254   45.7335k   2.04003M         3.23037   1.80882k/s 3.69005G/s     6.04844M               9.57767                2.96488        100       180.882k/s [BEST: throughput=  1.15 GB/s doc_throughput=  1823 docs/s instructions=     6048442 cycles=     2024306 branch_miss=    9961 cache_miss=       0 cache_ref=     45707 items=       100 avg_time=    552846 ns]
partial_tweets<rapidjson>/manual_time                    1632148 ns      1661098 ns          430          26.972k           442.161M             786        51.218k     5.2726M              8.34913           700.159       3.69166G          13.1242M                     20.782                     2.48913           70.0159k    26.7893k   631.515k       368.998M/s    495.642   32.8229k   5.43503M         8.60634     612.69/s 3.32999G/s     13.1251M               20.7835                 2.4149        100        61.269k/s [BEST: throughput=  0.44 GB/s doc_throughput=   700 docs/s instructions=    13124161 cycles=     5272599 branch_miss=   26972 cache_miss=     786 cache_ref=     51218 items=       100 avg_time=   1632147 ns]
partial_tweets<rapidjson_insitu>/manual_time             1034443 ns      1063141 ns          679          24.872k           689.633M             299        43.218k    3.38062M              5.35319           1092.03       3.69174G           9.8244M                    15.5569                     2.90609           109.203k    24.9414k   631.515k       582.207M/s    210.485   33.6397k   3.47188M          5.4977    966.704/s 3.35628G/s     9.82501M               15.5578                2.82988        100       96.6704k/s [BEST: throughput=  0.69 GB/s doc_throughput=  1092 docs/s instructions=     9824403 cycles=     3380621 branch_miss=   24872 cache_miss=     299 cache_ref=     43218 items=       100 avg_time=   1034443 ns]
partial_tweets<nlohmann_json>/manual_time                8161711 ns      8197501 ns           86         142.955k           80.3225M              38       224.568k    29.0057M              45.9304            127.19       3.68924G          70.8181M                     112.14                     2.44152            12.719k    161.196k   631.515k       73.7909M/s    47.0116   356.894k   30.1119M          47.682    122.523/s 3.68941G/s     71.3903M               113.046                2.37084        100       12.2523k/s [BEST: throughput=  0.08 GB/s doc_throughput=   127 docs/s instructions=    70818063 cycles=    29005723 branch_miss=  142955 cache_miss=      38 cache_ref=    224568 items=       100 avg_time=   8161710 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                  97058284 ns    100445501 ns            7          864.26k           475.073M        10.9831M       15.2782M    357.125M               7.7638           10.3279       3.68837G          981.675M                    21.3413                     2.74883           10.3279M    864.411k   45.9988M       451.974M/s   11.0184M   15.2702M   358.048M         7.78386    10.3031/s   3.689G/s     981.675M               21.3413                2.74174      1000k       10.3031M/s [BEST: throughput=  0.48 GB/s doc_throughput=    10 docs/s instructions=   981674957 cycles=   357125160 branch_miss=  864260 cache_miss=10983063 cache_ref=  15278190 items=   1000000 avg_time=  97058284 ns]
large_random<simdjson_ondemand>/manual_time             60353670 ns     63725271 ns           12         885.227k           762.954M        5.70138M        7.9123M    222.419M              4.83532           16.5864       3.68913G          644.053M                    14.0015                     2.89568           16.5864M     884.77k   45.9988M       726.846M/s   5.72544M   7.91702M   222.637M         4.84005     16.569/s 3.68887G/s     644.053M               14.0015                2.89284      1000k        16.569M/s [BEST: throughput=  0.76 GB/s doc_throughput=    16 docs/s instructions=   644052609 cycles=   222418653 branch_miss=  885227 cache_miss= 5701382 cache_ref=   7912302 items=   1000000 avg_time=  60353669 ns]
large_random<simdjson_ondemand_unordered>/manual_time   61415491 ns     64775584 ns           11         861.503k           749.923M        5.69064M       7.91775M    226.277M              4.91919           16.3031       3.68901G          644.053M                    14.0015                     2.84631           16.3031M     861.59k   45.9988M        714.28M/s   5.71742M   7.91798M    226.55M         4.92513    16.2825/s 3.68881G/s     644.053M               14.0015                2.84287      1000k       16.2825M/s [BEST: throughput=  0.75 GB/s doc_throughput=    16 docs/s instructions=   644052616 cycles=   226276681 branch_miss=  861503 cache_miss= 5690644 cache_ref=   7917753 items=   1000000 avg_time=  61415491 ns]
large_random<yyjson>/manual_time                       126504875 ns    129922544 ns            6         680.529k           364.201M        5.95955M       9.11508M    346.839M              7.54018           7.91763       2.74615G          942.149M                    20.4821                     2.71639           7.91763M     681.78k   45.9988M       346.768M/s   5.96411M   9.07762M   347.014M         7.54399    7.90483/s 2.74309G/s     942.149M               20.4821                2.71502      1000k       7.90483M/s [BEST: throughput=  0.36 GB/s doc_throughput=     7 docs/s instructions=   942149408 cycles=   346839279 branch_miss=  680529 cache_miss= 5959552 cache_ref=   9115078 items=   1000000 avg_time= 126504875 ns]
large_random<yyjson_insitu>/manual_time                108738925 ns    112153489 ns            6         685.405k           423.112M        5.06023M       7.70279M     315.86M               6.8667           9.19833       2.90538G          936.029M                     20.349                     2.96343           9.19833M    685.626k   45.9988M       403.424M/s   5.06965M   7.72464M   315.937M         6.86838    9.19634/s 2.90547G/s     936.029M                20.349                 2.9627      1000k       9.19634M/s [BEST: throughput=  0.42 GB/s doc_throughput=     9 docs/s instructions=   936028642 cycles=   315859620 branch_miss=  685405 cache_miss= 5060232 cache_ref=   7702792 items=   1000000 avg_time= 108738925 ns]
large_random<sajson>/manual_time                        90346450 ns     93742840 ns            8         582.197k           510.241M        8.41017M       12.0646M    332.588M              7.23037           11.0925       3.68923G          1066.99M                    23.1961                     3.20815           11.0925M    582.306k   45.9988M       485.551M/s   8.48368M    12.159M   333.292M         7.24566    11.0685/s 3.68904G/s     1066.99M               23.1961                3.20138      1000k       11.0685M/s [BEST: throughput=  0.51 GB/s doc_throughput=    11 docs/s instructions=  1066991821 cycles=   332588044 branch_miss=  582197 cache_miss= 8410167 cache_ref=  12064575 items=   1000000 avg_time=  90346450 ns]
large_random<rapidjson>/manual_time                    177886860 ns    181303883 ns            4         612.893k           269.283M        7.04225M       10.7103M    572.464M              12.4452           5.85413       3.35128G          1.67314G                    36.3736                      2.9227           5.85413M    614.227k   45.9988M       246.605M/s   6.47158M   9.99997M   577.568M         12.5562    5.62155/s 3.24683G/s     1.67315G               36.3738                2.89689      1000k       5.62155M/s [BEST: throughput=  0.27 GB/s doc_throughput=     5 docs/s instructions=  1673139704 cycles=   572464117 branch_miss=  612893 cache_miss= 7042255 cache_ref=  10710270 items=   1000000 avg_time= 177886859 ns]
large_random<rapidjson_lossless>/manual_time           204224572 ns    207636937 ns            4         591.905k           233.231M        7.05322M       10.7004M    669.872M              14.5628           5.07037       3.39649G           2.0601G                    44.7861                     3.07537           5.07037M    592.525k   45.9988M       214.802M/s   6.47124M    9.9759M   674.674M         14.6672    4.89657/s 3.30359G/s     2.06011G               44.7863                3.05349      1000k       4.89657M/s [BEST: throughput=  0.23 GB/s doc_throughput=     5 docs/s instructions=  2060104560 cycles=   669871808 branch_miss=  591905 cache_miss= 7053223 cache_ref=  10700379 items=   1000000 avg_time= 204224571 ns]
large_random<rapidjson_insitu>/manual_time             156230765 ns    159646150 ns            5          598.67k           310.065M        8.11769M       12.2384M    489.616M              10.6441           6.74071       3.30036G          1.50514G                    32.7213                     3.07412           6.74071M    599.962k   45.9988M       280.789M/s   7.53817M   11.4522M   496.216M         10.7876    6.40079/s 3.17617G/s     1.50515G               32.7215                3.03326      1000k       6.40079M/s [BEST: throughput=  0.31 GB/s doc_throughput=     6 docs/s instructions=  1505139272 cycles=   489615932 branch_miss=  598670 cache_miss= 8117695 cache_ref=  12238422 items=   1000000 avg_time= 156230764 ns]
large_random<nlohmann_json>/manual_time               1263175655 ns   1266605122 ns            1         4.53107M           36.4152M        47.6077M       61.3679M    4.64771G               101.04          0.791656       3.67939G          11.9464G                     259.71                     2.57037           791.656k    4.53107M   45.9988M       34.7282M/s   47.6077M   61.3679M   4.64771G          101.04   0.791656/s 3.67939G/s     11.9464G                259.71                2.57037      1000k       791.656k/s [BEST: throughput=  0.04 GB/s doc_throughput=     0 docs/s instructions= 11946360691 cycles=  4647712124 branch_miss= 4531074 cache_miss=47607720 cache_ref=  61367918 items=   1000000 avg_time=1263175655 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                        88689252 ns     98990065 ns            8         439.216k           1.55185G        15.8948M       22.3209M    326.408M              2.37725           11.3022       3.68914G          938.041M                     6.8318                     2.87383           5.92563M    439.469k   137.305M       1.44183G/s   15.9416M   22.2636M    327.16M         2.38272    11.2753/s 3.68883G/s     938.041M                6.8318                2.86722   524.288k       5.91152M/s [BEST: throughput=  1.55 GB/s doc_throughput=    11 docs/s instructions=   938040622 cycles=   326407896 branch_miss=  439216 cache_miss=15894821 cache_ref=  22320932 items=    524288 avg_time=  88689251 ns]
kostya<simdjson_ondemand>/manual_time                   60584899 ns     70842185 ns           12         490.162k           2.26823G        10.2098M       14.0317M    223.305M              1.62634           16.5196       3.68891G          676.617M                    4.92784                     3.03002           8.66104M     489.91k   137.305M       2.11068G/s   10.2319M    14.023M   223.487M         1.62767    16.5058/s 3.68883G/s     676.617M               4.92784                3.02754   524.288k       8.65377M/s [BEST: throughput=  2.27 GB/s doc_throughput=    16 docs/s instructions=   676617060 cycles=   223304694 branch_miss=  490162 cache_miss=10209805 cache_ref=  14031695 items=    524288 avg_time=  60584899 ns]
kostya<yyjson>/manual_time                             204924698 ns    215263747 ns            3         422.624k           670.299M        11.4473M        16.297M    559.317M              4.07354           4.88182       2.73049G          984.045M                    7.16686                     1.75937           2.55948M    419.862k   137.305M       638.987M/s    11.448M   16.3013M   559.072M         4.07176    4.87984/s 2.72818G/s     984.045M               7.16686                1.76014   524.288k       2.55844M/s [BEST: throughput=  0.67 GB/s doc_throughput=     4 docs/s instructions=   984045283 cycles=   559317039 branch_miss=  422624 cache_miss=11447270 cache_ref=  16296981 items=    524288 avg_time= 204924698 ns]
kostya<yyjson_insitu>/manual_time                      151284366 ns    161649513 ns            5         418.836k           908.114M        8.90433M       12.3261M    463.583M               3.3763           6.61384       3.06606G          965.775M                     7.0338                     2.08329           3.46756M    418.414k   137.305M        865.55M/s   8.90567M   12.3571M    463.68M         3.37701    6.61007/s 3.06496G/s     965.776M                7.0338                2.08285   524.288k       3.46558M/s [BEST: throughput=  0.91 GB/s doc_throughput=     6 docs/s instructions=   965775477 cycles=   463582570 branch_miss=  418836 cache_miss= 8904325 cache_ref=  12326128 items=    524288 avg_time= 151284366 ns]
kostya<sajson>/manual_time                             132219161 ns    142550618 ns            5         357.813k            1039.6M        12.5617M       17.1967M    487.238M              3.54858           7.57144        3.6891G          1.60304G                    11.6751                     3.29006           3.96962M    359.044k   137.305M       990.358M/s   12.5588M   17.2077M   487.746M         3.55228     7.5632/s 3.68892G/s     1.60304G               11.6751                3.28663   524.288k        3.9653M/s [BEST: throughput=  1.04 GB/s doc_throughput=     7 docs/s instructions=  1603042689 cycles=   487238121 branch_miss=  357813 cache_miss=12561686 cache_ref=  17196682 items=    524288 avg_time= 132219160 ns]
kostya<rapidjson>/manual_time                          253428618 ns    263783327 ns            3         968.624k           549.355M        8.25178M       12.0026M    841.021M               6.1252           4.00098       3.36491G          2.29774G                    16.7346                     2.73208           2.09767M    969.679k   137.305M       516.691M/s   7.95169M   11.6667M    844.47M         6.15032    3.94588/s 3.33218G/s     2.29774G               16.7346                2.72093   524.288k       2.06878M/s [BEST: throughput=  0.55 GB/s doc_throughput=     4 docs/s instructions=  2297738644 cycles=   841020576 branch_miss=  968624 cache_miss= 8251781 cache_ref=  12002642 items=    524288 avg_time= 253428618 ns]
kostya<rapidjson_lossless>/manual_time                 265392693 ns    275759419 ns            3         949.837k           523.927M        8.26161M       12.1354M    886.011M              6.45287           3.81579       3.38083G          2.51583G                     18.323                     2.83951           2.00057M    949.639k   137.305M       493.398M/s   7.95592M   11.6759M   888.939M         6.47419      3.768/s 3.34952G/s     2.51584G                18.323                2.83016   524.288k       1.97552M/s [BEST: throughput=  0.52 GB/s doc_throughput=     3 docs/s instructions=  2515833555 cycles=   886011165 branch_miss=  949837 cache_miss= 8261607 cache_ref=  12135435 items=    524288 avg_time= 265392692 ns]
kostya<rapidjson_insitu>/manual_time                   229972648 ns    240329440 ns            3         1084.61k           605.957M        11.3347M       15.7415M     754.87M              5.49776           4.41322       3.33141G            2.048G                    14.9157                     2.71305            2.3138M    1096.23k   137.305M       569.391M/s   11.0336M   15.3721M   757.947M         5.52017    4.34834/s 3.29581G/s     2.04801G               14.9157                2.70204   524.288k       2.27978M/s [BEST: throughput=  0.61 GB/s doc_throughput=     4 docs/s instructions=  2048003620 cycles=   754870325 branch_miss= 1084611 cache_miss=11334713 cache_ref=  15741511 items=    524288 avg_time= 229972648 ns]
kostya<nlohmann_json>/manual_time                     1663243694 ns   1673694532 ns            1         5.04334M           82.5525M        70.6066M       87.6457M    6.13614G              44.6898          0.601235       3.68926G          15.1309G                    110.199                     2.46586            315.22k    5.04334M   137.305M       78.7282M/s   70.6066M   87.6457M   6.13614G         44.6898   0.601235/s 3.68926G/s     15.1309G               110.199                2.46586   524.288k        315.22k/s [BEST: throughput=  0.08 GB/s doc_throughput=     0 docs/s instructions= 15130853971 cycles=  6136136811 branch_miss= 5043339 cache_miss=70606599 cache_ref=  87645713 items=    524288 avg_time=1663243694 ns]
distinct_user_id<simdjson_dom>/manual_time                259865 ns       290393 ns         2693           3.786k           2.44869G               0        89.052k     952.31k              1.50798          3.87749k       3.69257G          2.85594M                    4.52236                     2.99896           445.911k    3.94358k   631.515k       2.26327G/s    3.04345   88.9165k   959.035k         1.51863   3.84815k/s 3.69051G/s     2.85594M               4.52236                2.97793        115       442.537k/s [BEST: throughput=  2.45 GB/s doc_throughput=  3877 docs/s instructions=     2855937 cycles=      952310 branch_miss=    3786 cache_miss=       0 cache_ref=     89052 items=       115 avg_time=    259865 ns]
distinct_user_id<simdjson_ondemand>/manual_time           182262 ns       211905 ns         3839           1.784k            3.4868G               0        53.621k     668.83k              1.05909          5.52132k       3.69283G          2.10219M                    3.32881                     3.14309           634.952k    1.92088k   631.515k       3.22691G/s   0.236259   53.5098k   672.729k         1.06526    5.4866k/s 3.69099G/s     2.10219M               3.32881                3.12488        115       630.959k/s [BEST: throughput=  3.49 GB/s doc_throughput=  5521 docs/s instructions=     2102194 cycles=      668830 branch_miss=    1784 cache_miss=       0 cache_ref=     53621 items=       115 avg_time=    182262 ns]
distinct_user_id<yyjson>/manual_time                      597965 ns       631229 ns         1000           6.731k           1.66287G         22.032k        73.571k    1.40214M              2.22029          2.63314k       3.69205G          2.87509M                    4.55268                     2.05049           302.812k    7.49918k   631.515k       1007.18M/s   7.46657k   55.4786k   1.61544M         2.55804   1.67234k/s 2.70157G/s     2.87528M               4.55299                1.77987        115       192.319k/s [BEST: throughput=  1.66 GB/s doc_throughput=  2633 docs/s instructions=     2875087 cycles=     1402145 branch_miss=    6731 cache_miss=   22032 cache_ref=     73571 items=       115 avg_time=    597965 ns]
distinct_user_id<yyjson_insitu>/manual_time               471959 ns       504346 ns         1483           7.318k           1.78447G             297        43.982k    1.30343M              2.06397           2.8257k       3.68309G          2.87457M                    4.55186                      2.2054           324.955k    7.62256k   631.515k       1.24618G/s    43.6703   30.5193k   1.40949M         2.23192   2.11883k/s 2.98648G/s     2.87483M               4.55228                2.03962        115       243.665k/s [BEST: throughput=  1.78 GB/s doc_throughput=  2825 docs/s instructions=     2874570 cycles=     1303426 branch_miss=    7318 cache_miss=     297 cache_ref=     43982 items=       115 avg_time=    471958 ns]
distinct_user_id<sajson>/manual_time                      548165 ns       578835 ns         1275           9.824k           1.16164G               0        45.194k    2.00705M              3.17814          1.83945k       3.69185G          5.98101M                    9.47089                     2.98001           211.536k     10.338k   631.515k       1098.68M/s    7.24392   45.2902k   2.02258M         3.20274   1.82427k/s 3.68972G/s     5.98101M               9.47089                2.95712        115       209.791k/s [BEST: throughput=  1.16 GB/s doc_throughput=  1839 docs/s instructions=     5981008 cycles=     2007045 branch_miss=    9824 cache_miss=       0 cache_ref=     45194 items=       115 avg_time=    548165 ns]
distinct_user_id<rapidjson>/manual_time                  1628290 ns      1658957 ns          434          26.879k           441.804M           9.51k        52.504k    5.27685M              8.35586           699.594       3.69165G          13.0658M                    20.6896                     2.47606           80.4533k    27.1492k   631.515k       369.872M/s    947.403    33.891k   5.45384M         8.63612    614.141/s 3.34943G/s     13.0664M               20.6906                2.39582        115       70.6262k/s [BEST: throughput=  0.44 GB/s doc_throughput=   699 docs/s instructions=    13065794 cycles=     5276851 branch_miss=   26879 cache_miss=    9510 cache_ref=     52504 items=       115 avg_time=   1628290 ns]
distinct_user_id<rapidjson_insitu>/manual_time           1013010 ns      1042924 ns          698          24.682k           693.395M              21         42.79k    3.36241M              5.32436           1097.99       3.69189G          9.77667M                    15.4813                     2.90763           126.268k    24.8837k   631.515k       594.525M/s   1.87314k   35.1634k   3.44898M         5.46145    987.157/s 3.40469G/s       9.777M               15.4818                2.83475        115       113.523k/s [BEST: throughput=  0.69 GB/s doc_throughput=  1097 docs/s instructions=     9776669 cycles=     3362414 branch_miss=   24682 cache_miss=      21 cache_ref=     42790 items=       115 avg_time=   1013010 ns]
distinct_user_id<nlohmann_json>/manual_time              7444686 ns      7479335 ns           96         124.441k           87.7816M               6       285.168k    26.5417M              42.0285           139.002       3.68933G          64.7619M                     102.55                     2.44001           15.9852k    139.184k   631.515k       80.8979M/s    155.031   367.898k   27.4661M         43.4924    134.324/s 3.68936G/s     64.9549M               102.856                2.36491        115       15.4473k/s [BEST: throughput=  0.09 GB/s doc_throughput=   139 docs/s instructions=    64761905 cycles=    26541659 branch_miss=  124441 cache_miss=       6 cache_ref=    285168 items=       115 avg_time=   7444686 ns]
find_tweet<simdjson_dom>/manual_time                      247926 ns       276676 ns         2823           3.478k           2.56256G               0        78.764k    909.968k              1.44093           4.0578k       3.69247G           2.7749M                    4.39403                     3.04945            4.0578k    3.61279k   631.515k       2.37226G/s    3.00956   78.6388k   915.007k         1.44891   4.03346k/s 3.69064G/s      2.7749M               4.39403                3.03265          1       4.03346k/s [BEST: throughput=  2.56 GB/s doc_throughput=  4057 docs/s instructions=     2774898 cycles=      909968 branch_miss=    3478 cache_miss=       0 cache_ref=     78764 items=         1 avg_time=    247926 ns]
find_tweet<simdjson_ondemand>/manual_time                 117260 ns       145346 ns         5962              712           5.40908G               0        30.854k    431.233k             0.682855          8.56524k       3.69361G          1.47887M                    2.34178                      3.4294           8.56524k      772.12   631.515k       5.01572G/s    0.35525   30.8712k   432.895k        0.685487   8.52804k/s 3.69175G/s     1.47887M               2.34178                3.41623          1       8.52804k/s [BEST: throughput=  5.41 GB/s doc_throughput=  8565 docs/s instructions=     1478869 cycles=      431233 branch_miss=     712 cache_miss=       0 cache_ref=     30854 items=         1 avg_time=    117260 ns]
find_tweet<yyjson>/manual_time                            662537 ns       693065 ns         1188           9.573k            1.5895G             171        65.597k    1.42796M              2.26117          2.51697k       3.59414G          2.82414M                      4.472                     1.97774           2.51697k    7.50476k   631.515k        909.02M/s    1068.54   39.4791k   1.64594M         2.60633   1.50935k/s 2.48429G/s     2.82461M               4.47275                1.71611          1       1.50935k/s [BEST: throughput=  1.59 GB/s doc_throughput=  2516 docs/s instructions=     2824135 cycles=     1427964 branch_miss=    9573 cache_miss=     171 cache_ref=     65597 items=         1 avg_time=    662537 ns]
find_tweet<yyjson_insitu>/manual_time                     461925 ns       491752 ns         1516           6.918k           1.84109G             522        35.764k    1.26322M               2.0003          2.91536k       3.68274G          2.82381M                    4.47148                      2.2354           2.91536k     7.3612k   631.515k       1.27325G/s    13.4763   21.9748k   1.37315M         2.17437   2.16486k/s 2.97266G/s     2.82407M                4.4719                2.05664          1       2.16486k/s [BEST: throughput=  1.84 GB/s doc_throughput=  2915 docs/s instructions=     2823809 cycles=     1263222 branch_miss=    6918 cache_miss=     522 cache_ref=     35764 items=         1 avg_time=    461924 ns]
find_tweet<sajson>/manual_time                            535858 ns       565347 ns         1306           9.732k            1.1875G               0        36.049k    1.96339M              3.10901           1.8804k       3.69196G          5.88886M                    9.32498                     2.99934            1.8804k    10.1191k   631.515k       1123.92M/s    2.69449   36.0399k   1.97726M         3.13098   1.86617k/s  3.6899G/s     5.88886M               9.32498                2.97829          1       1.86617k/s [BEST: throughput=  1.19 GB/s doc_throughput=  1880 docs/s instructions=     5888863 cycles=     1963386 branch_miss=    9732 cache_miss=       0 cache_ref=     36049 items=         1 avg_time=    535857 ns]
find_tweet<rapidjson>/manual_time                        1608006 ns      1636720 ns          439          26.688k           447.403M             220        44.752k    5.21087M              8.25138            708.46        3.6917G          12.9977M                    20.5818                     2.49435             708.46    26.7099k   631.515k       374.538M/s     682.79   26.6947k   5.38035M         8.51976    621.888/s 3.34598G/s     12.9986M               20.5831                2.41593          1        621.888/s [BEST: throughput=  0.45 GB/s doc_throughput=   708 docs/s instructions=    12997747 cycles=     5210873 branch_miss=   26688 cache_miss=     220 cache_ref=     44752 items=         1 avg_time=   1608005 ns]
find_tweet<rapidjson_insitu>/manual_time                 1004469 ns      1034001 ns          710          24.267k           698.292M          8.827k        35.689k    3.33867M              5.28677          1.10574k       3.69171G          9.71899M                      15.39                     2.91103           1.10574k    24.8049k   631.515k        599.58M/s   1.67862k    26.173k    3.4166M         5.41016    995.551/s  3.4014G/s     9.71932M               15.3905                2.84474          1        995.551/s [BEST: throughput=  0.70 GB/s doc_throughput=  1105 docs/s instructions=     9718989 cycles=     3338672 branch_miss=   24267 cache_miss=    8827 cache_ref=     35689 items=         1 avg_time=   1004469 ns]
find_tweet<nlohmann_json>/manual_time                    6220533 ns      6251043 ns          114          96.283k           105.333M             107       226.552k    22.1108M              35.0123           166.795       3.68796G          55.1684M                    87.3588                     2.49509            166.795    111.059k   631.515k        96.818M/s     21.693   291.815k    22.949M         36.3396    160.758/s 3.68924G/s     55.3143M               87.5898                2.41031          1        160.758/s [BEST: throughput=  0.11 GB/s doc_throughput=   166 docs/s instructions=    55168392 cycles=    22110767 branch_miss=   96283 cache_miss=     107 cache_ref=    226552 items=         1 avg_time=   6220533 ns]
top_tweet<simdjson_dom>/manual_time                       254108 ns       282278 ns         2754           3.533k            2.5023G               0        86.412k    931.863k               1.4756          3.96237k       3.69239G          2.80907M                    4.44814                     3.01446           3.96237k    3.73422k   631.515k       2.31455G/s   0.248366   86.3187k   937.768k         1.48495   3.93534k/s 3.69043G/s     2.80907M               4.44814                2.99548          1       3.93534k/s [BEST: throughput=  2.50 GB/s doc_throughput=  3962 docs/s instructions=     2809067 cycles=      931863 branch_miss=    3533 cache_miss=       0 cache_ref=     86412 items=         1 avg_time=    254107 ns]
top_tweet<simdjson_ondemand>/manual_time                  175560 ns       203411 ns         3984           1.537k            3.6185G               0        53.413k    644.543k              1.02063          5.72987k       3.69315G          2.10137M                     3.3275                     3.26024           5.72987k    1.66764k   631.515k        3.3501G/s  0.0303715   53.4654k   647.993k         1.02609   5.69606k/s 3.69101G/s     2.10137M                3.3275                3.24288          1       5.69606k/s [BEST: throughput=  3.62 GB/s doc_throughput=  5729 docs/s instructions=     2101367 cycles=      644543 branch_miss=    1537 cache_miss=       0 cache_ref=     53413 items=         1 avg_time=    175560 ns]
top_tweet<simdjson_ondemand_forward_only>/manual_time     173438 ns       201424 ns         4038           1.535k           3.66249G               0        54.315k    636.752k              1.00829          5.79952k       3.69286G          2.12693M                    3.36799                     3.34029           5.79952k    1.64724k   631.515k       3.39109G/s  0.0376424   54.2169k   640.236k         1.01381   5.76575k/s 3.69144G/s     2.12693M               3.36799                3.32211          1       5.76575k/s [BEST: throughput=  3.66 GB/s doc_throughput=  5799 docs/s instructions=     2126934 cycles=      636752 branch_miss=    1535 cache_miss=       0 cache_ref=     54315 items=         1 avg_time=    173437 ns]
top_tweet<yyjson>/manual_time                             667667 ns       697443 ns         1201           9.729k           1.61202G             519        70.745k    1.44651M              2.29054          2.55262k       3.69239G          2.84502M                    4.50507                     1.96682           2.55262k    7.66911k   631.515k       902.036M/s    987.761   44.5562k   1.66467M         2.63599   1.49775k/s 2.49326G/s      2.8455M               4.50583                1.70935          1       1.49775k/s [BEST: throughput=  1.61 GB/s doc_throughput=  2552 docs/s instructions=     2845019 cycles=     1446509 branch_miss=    9729 cache_miss=     519 cache_ref=     70745 items=         1 avg_time=    667666 ns]
top_tweet<yyjson_insitu>/manual_time                      467049 ns       496131 ns         1499           7.336k            1.8064G              26        40.279k     1.2908M              2.04398          2.86042k       3.69224G          2.84469M                    4.50455                     2.20381           2.86042k    7.46676k   631.515k       1.25928G/s    43.4757    27.158k   1.39198M         2.20419    2.1411k/s 2.98037G/s     2.84496M               4.50497                2.04382          1        2.1411k/s [BEST: throughput=  1.81 GB/s doc_throughput=  2860 docs/s instructions=     2844693 cycles=     1290804 branch_miss=    7336 cache_miss=      26 cache_ref=     40279 items=         1 avg_time=    467048 ns]
top_tweet<sajson>/manual_time                             541018 ns       569535 ns         1292           9.798k           1.17666G               0        41.251k     1.9814M              3.13753          1.86324k       3.69182G          5.91603M                      9.368                     2.98579           1.86324k    10.2556k   631.515k        1113.2M/s   0.676471   41.2611k   1.99639M         3.16127   1.84837k/s 3.69006G/s     5.91604M                 9.368                2.96337          1       1.84837k/s [BEST: throughput=  1.18 GB/s doc_throughput=  1863 docs/s instructions=     5916035 cycles=     1981398 branch_miss=    9798 cache_miss=       0 cache_ref=     41251 items=         1 avg_time=    541017 ns]
top_tweet<rapidjson>/manual_time                         1617196 ns      1645706 ns          436          26.406k           444.136M           9.02k        50.026k    5.24897M               8.3117           703.286       3.69153G          13.0479M                    20.6613                      2.4858            703.286    26.7159k   631.515k        372.41M/s    816.443   30.5039k   5.41469M         8.57413    618.354/s  3.3482G/s     13.0486M               20.6624                2.40985          1        618.354/s [BEST: throughput=  0.44 GB/s doc_throughput=   703 docs/s instructions=    13047895 cycles=     5248965 branch_miss=   26406 cache_miss=    9020 cache_ref=     50026 items=         1 avg_time=   1617195 ns]
top_tweet<rapidjson_insitu>/manual_time                  1009517 ns      1038168 ns          703          24.513k           696.149M             121        39.557k    3.34897M              5.30308          1.10235k       3.69173G          9.76055M                    15.4558                     2.91449           1.10235k    24.8013k   631.515k       596.582M/s   1.79706k   31.4789k   3.43582M         5.44059    990.572/s 3.40342G/s     9.76089M               15.4563                2.84092          1        990.572/s [BEST: throughput=  0.70 GB/s doc_throughput=  1102 docs/s instructions=     9760553 cycles=     3348973 branch_miss=   24513 cache_miss=     121 cache_ref=     39557 items=         1 avg_time=   1009517 ns]
top_tweet<nlohmann_json>/manual_time                     9104742 ns      9133965 ns           77         189.431k           70.0631M               6       400.565k    33.2572M              52.6625           110.944        3.6897G          78.3625M                    124.087                     2.35626            110.944    198.214k   631.515k       66.1479M/s    33.4156   396.488k   33.5874M         53.1854    109.833/s   3.689G/s     78.5186M               124.334                2.33774          1        109.833/s [BEST: throughput=  0.07 GB/s doc_throughput=   110 docs/s instructions=    78362494 cycles=    33257162 branch_miss=  189431 cache_miss=       6 cache_ref=    400565 items=         1 avg_time=   9104741 ns]
