run_benchmark: v0.8.0~1 /home/jkeiser/simdjson_benchmark_results/v0.7.0/37/skylake-gcc10.2-native.json -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native
git reset --hard v0.8.0~1
HEAD is now at 1005c62e It seems that we export too many targets. (#1385)
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The CXX compiler identification is GNU 10.2.0
-- The C compiler identification is GNU 10.2.0
-- Check for working CXX compiler: /usr/bin/g++-10
-- Check for working CXX compiler: /usr/bin/g++-10 -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Check for working C compiler: /usr/bin/gcc-10
-- Check for working C compiler: /usr/bin/gcc-10 -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed
-- Check if compiler accepts -pthread
-- Check if compiler accepts -pthread - yes
-- Found Threads: TRUE  
-- Looking for fork
-- Looking for fork - found
-- Looking for wait
-- Looking for wait - found
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- Found Git: /usr/bin/git (found version "2.27.0") 
-- git Version: v0.2.1-1005c62e
-- Version: 0.2.1
-- Performing Test HAVE_CXX_FLAG_STD_CXX11
-- Performing Test HAVE_CXX_FLAG_STD_CXX11 - Success
-- Performing Test HAVE_CXX_FLAG_WALL
-- Performing Test HAVE_CXX_FLAG_WALL - Success
-- Performing Test HAVE_CXX_FLAG_WEXTRA
-- Performing Test HAVE_CXX_FLAG_WEXTRA - Success
-- Performing Test HAVE_CXX_FLAG_WSHADOW
-- Performing Test HAVE_CXX_FLAG_WSHADOW - Success
-- Performing Test HAVE_CXX_FLAG_WERROR
-- Performing Test HAVE_CXX_FLAG_WERROR - Success
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32 - Failed
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED - Success
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WD654
-- Performing Test HAVE_CXX_FLAG_WD654 - Failed
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY - Failed
-- Performing Test HAVE_CXX_FLAG_COVERAGE
-- Performing Test HAVE_CXX_FLAG_COVERAGE - Success
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Performing Test USE_BOOST_JSON
-- Performing Test USE_BOOST_JSON - Failed
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Found Python3: /usr/bin/python3.8 (found version "3.8.6") found components: Interpreter 
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 10
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
Scanning dependencies of target benchmark
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_api_internal.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_name.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_name.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_register.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_register.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_runner.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_runner.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/colorprint.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/colorprint.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/commandlineflags.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/commandlineflags.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/complexity.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/complexity.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/console_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/console_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/counter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/counter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/csv_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/csv_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/json_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/json_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/sleep.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sleep.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/statistics.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/statistics.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/string_util.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/string_util.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/sysinfo.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sysinfo.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/timers.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/timers.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -P CMakeFiles/benchmark.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/benchmark.dir/link.txt --verbose=1
/usr/bin/ar qc libbenchmark.a  CMakeFiles/benchmark.dir/benchmark.cc.o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o CMakeFiles/benchmark.dir/benchmark_name.cc.o CMakeFiles/benchmark.dir/benchmark_register.cc.o CMakeFiles/benchmark.dir/benchmark_runner.cc.o CMakeFiles/benchmark.dir/colorprint.cc.o CMakeFiles/benchmark.dir/commandlineflags.cc.o CMakeFiles/benchmark.dir/complexity.cc.o CMakeFiles/benchmark.dir/console_reporter.cc.o CMakeFiles/benchmark.dir/counter.cc.o CMakeFiles/benchmark.dir/csv_reporter.cc.o CMakeFiles/benchmark.dir/json_reporter.cc.o CMakeFiles/benchmark.dir/reporter.cc.o CMakeFiles/benchmark.dir/sleep.cc.o CMakeFiles/benchmark.dir/statistics.cc.o CMakeFiles/benchmark.dir/string_util.cc.o CMakeFiles/benchmark.dir/sysinfo.cc.o CMakeFiles/benchmark.dir/timers.cc.o
/usr/bin/ranlib libbenchmark.a
[ 80%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
Scanning dependencies of target generated-data
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated && /usr/bin/ruby genfeaturejson.rb /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-miss.json ...
[ 80%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/g++-10  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/include  -march=native -O3 -DNDEBUG -fPIC   -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -pthread -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/g++-10 -fPIC -march=native -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.6 -o ../libsimdjson.so.6.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.6.0.0 ../libsimdjson.so.6 ../libsimdjson.so
[ 80%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
Scanning dependencies of target yyjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/gcc-10  -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src  -O3 -DNDEBUG   -o CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o   -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src/yyjson.c
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -P CMakeFiles/yyjson.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -E cmake_link_script CMakeFiles/yyjson.dir/link.txt --verbose=1
/usr/bin/ar qc libyyjson.a  CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o
/usr/bin/ranlib libyyjson.a
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/g++-10  -DRAPIDJSON_HAS_STDSTRING -DSAJSON_UNSORTED_OBJECT_KEYS -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_COMPETITION_NLOHMANN_JSON -DSIMDJSON_COMPETITION_RAPIDJSON -DSIMDJSON_COMPETITION_SAJSON -DSIMDJSON_COMPETITION_YYJSON -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/rapidjson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/sajson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/json  -march=native -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/g++-10  -march=native -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.6.0.0 ../_deps/google_benchmarks/src/libbenchmark.a ../dependencies/libyyjson.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/37/skylake-gcc10.2-native.json --benchmark_out_format=json
2021-01-24 21:13:55
Running benchmark/bench_ondemand
Run on (4 X 4000 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 256 KiB (x4)
  L3 Unified 8192 KiB (x1)
Load Average: 1.00, 1.01, 1.00
simdjson::dom implementation:      haswell
simdjson::ondemand implementation: haswell

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                  257391 ns       285634 ns         2654             3.6k           2.47011G               0        87.191k    944.048k              1.49489           3.9114k       3.69255G          2.91501M                     4.6159                     3.08778            391.14k    3.79266k   631.515k       2.28502G/s    1.91899   86.9907k   950.028k         1.50436   3.88514k/s 3.69099G/s     2.91501M                4.6159                3.06835        100       388.514k/s [BEST: throughput=  2.47 GB/s doc_throughput=  3911 docs/s instructions=     2915013 cycles=      944048 branch_miss=    3600 cache_miss=       0 cache_ref=     87191 items=       100 avg_time=    257391 ns]
partial_tweets<simdjson_ondemand>/manual_time             187184 ns       215247 ns         3739           1.629k           3.39983G               0        54.943k    685.978k              1.08624          5.38361k       3.69304G           2.1433M                     3.3939                     3.12444           538.361k    1.78693k   631.515k       3.14206G/s  0.0435945   54.7155k    690.91k         1.09405   5.34232k/s 3.69106G/s      2.1433M                3.3939                3.10214        100       534.232k/s [BEST: throughput=  3.40 GB/s doc_throughput=  5383 docs/s instructions=     2143300 cycles=      685978 branch_miss=    1629 cache_miss=       0 cache_ref=     54943 items=       100 avg_time=    187184 ns]
partial_tweets<yyjson>/manual_time                        685773 ns       716493 ns         1018          10.118k           1.57829G             365        74.218k    1.47748M              2.33958          2.49921k       3.69252G          2.90845M                    4.60552                     1.96853           249.921k    7.58336k   631.515k        878.22M/s    1031.01    49.165k   1.68999M         2.67608   1.45821k/s 2.46435G/s     2.90915M               4.60661                 1.7214        100       145.821k/s [BEST: throughput=  1.58 GB/s doc_throughput=  2499 docs/s instructions=     2908453 cycles=     1477477 branch_miss=   10118 cache_miss=     365 cache_ref=     74218 items=       100 avg_time=    685773 ns]
partial_tweets<yyjson_insitu>/manual_time                 478055 ns       506876 ns         1464            6.99k           1.77781G             530        45.821k    1.30526M              2.06687          2.81515k        3.6745G          2.90814M                    4.60502                     2.22802           281.515k    7.39988k   631.515k       1.23029G/s     140.52   31.8968k   1.41956M         2.24787   2.09181k/s 2.96946G/s      2.9084M               4.60543                 2.0488        100       209.181k/s [BEST: throughput=  1.78 GB/s doc_throughput=  2815 docs/s instructions=     2908138 cycles=     1305258 branch_miss=    6990 cache_miss=     530 cache_ref=     45821 items=       100 avg_time=    478054 ns]
partial_tweets<sajson>/manual_time                        552754 ns       581131 ns         1267           9.949k           1.15086G               0        45.737k    2.02586M              3.20794          1.82237k       3.69188G          6.04844M                    9.57767                     2.98561           182.237k    10.3402k   631.515k       1089.56M/s    1.73323   45.7458k   2.03964M         3.22976   1.80912k/s 3.68996G/s     6.04844M               9.57767                2.96544        100       180.912k/s [BEST: throughput=  1.15 GB/s doc_throughput=  1822 docs/s instructions=     6048442 cycles=     2025863 branch_miss=    9949 cache_miss=       0 cache_ref=     45737 items=       100 avg_time=    552753 ns]
partial_tweets<rapidjson>/manual_time                    1633421 ns      1662366 ns          429          26.962k            442.26M         10.309k        52.575k    5.27135M              8.34716           700.315       3.69161G          13.1245M                    20.7825                     2.48977           70.0315k    27.1363k   631.515k       368.711M/s    509.317   32.5942k   5.44164M          8.6168    612.212/s 3.33144G/s     13.1251M               20.7835                2.41197        100       61.2212k/s [BEST: throughput=  0.44 GB/s doc_throughput=   700 docs/s instructions=    13124457 cycles=     5271355 branch_miss=   26962 cache_miss=   10309 cache_ref=     52575 items=       100 avg_time=   1633421 ns]
partial_tweets<rapidjson_insitu>/manual_time             1042753 ns      1071455 ns          675          24.626k           688.246M              20        43.062k    3.38736M              5.36386           1089.83       3.69165G           9.8244M                    15.5569                     2.90031           108.983k    24.6401k   631.515k       577.567M/s    212.961   33.5794k   3.50351M         5.54779    958.999/s 3.35987G/s     9.82501M               15.5578                2.80433        100       95.8999k/s [BEST: throughput=  0.69 GB/s doc_throughput=  1089 docs/s instructions=     9824403 cycles=     3387358 branch_miss=   24626 cache_miss=      20 cache_ref=     43062 items=       100 avg_time=   1042753 ns]
partial_tweets<nlohmann_json>/manual_time                7745784 ns      7780468 ns           91          136.38k           84.1931M              28       223.824k    27.6737M              43.8211           133.319       3.68943G          70.7934M                    112.101                     2.55815           13.3319k    148.588k   631.515k       77.7532M/s    75.3516   360.519k    28.577M         45.2515    129.102/s 3.68936G/s     71.4002M               113.062                2.49852        100       12.9102k/s [BEST: throughput=  0.08 GB/s doc_throughput=   133 docs/s instructions=    70793373 cycles=    27673664 branch_miss=  136380 cache_miss=      28 cache_ref=    223824 items=       100 avg_time=   7745783 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                  97094374 ns    100488393 ns            7         865.769k           474.755M        10.9823M        15.255M    357.435M              7.77053            10.321        3.6891G          981.675M                    21.3413                     2.74645            10.321M    865.993k   45.9988M       451.806M/s   11.0142M   15.2665M   358.166M         7.78643    10.2993/s 3.68885G/s     981.675M               21.3413                2.74084      1000k       10.2993M/s [BEST: throughput=  0.47 GB/s doc_throughput=    10 docs/s instructions=   981674958 cycles=   357434700 branch_miss=  865769 cache_miss=10982272 cache_ref=  15254993 items=   1000000 avg_time=  97094374 ns]
large_random<simdjson_ondemand>/manual_time             60284131 ns     63650151 ns           12         881.648k           763.727M        5.66812M       7.91511M    222.193M              4.83041           16.6032       3.68911G          644.053M                    14.0015                     2.89862           16.6032M    880.222k   45.9988M       727.685M/s   5.71921M   7.91578M   222.386M         4.83461    16.5881/s 3.68897G/s     644.053M               14.0015                 2.8961      1000k       16.5881M/s [BEST: throughput=  0.76 GB/s doc_throughput=    16 docs/s instructions=   644052609 cycles=   222193058 branch_miss=  881648 cache_miss= 5668125 cache_ref=   7915108 items=   1000000 avg_time=  60284130 ns]
large_random<simdjson_ondemand_unordered>/manual_time   61409050 ns     64771910 ns           11         860.954k           749.789M         5.6635M       7.91107M    226.332M              4.92039           16.3002       3.68925G          644.053M                    14.0015                     2.84561           16.3002M    860.926k   45.9988M       714.355M/s   5.71011M   7.91523M   226.535M         4.92481    16.2842/s 3.68895G/s     644.053M               14.0015                2.84306      1000k       16.2842M/s [BEST: throughput=  0.75 GB/s doc_throughput=    16 docs/s instructions=   644052613 cycles=   226331952 branch_miss=  860954 cache_miss= 5663495 cache_ref=   7911071 items=   1000000 avg_time=  61409050 ns]
large_random<yyjson>/manual_time                       126393093 ns    129811651 ns            6         662.282k           364.233M        5.91475M       9.04305M    347.034M              7.54442           7.91832       2.74793G           942.15M                    20.4821                     2.71486           7.91832M    661.236k   45.9988M       347.075M/s   5.90495M   9.01857M   347.001M          7.5437    7.91182/s 2.74541G/s     942.149M               20.4821                2.71512      1000k       7.91182M/s [BEST: throughput=  0.36 GB/s doc_throughput=     7 docs/s instructions=   942149612 cycles=   347034071 branch_miss=  662282 cache_miss= 5914751 cache_ref=   9043050 items=   1000000 avg_time= 126393092 ns]
large_random<yyjson_insitu>/manual_time                108549456 ns    111965913 ns            6         658.051k            423.96M         5.0499M       7.68094M    314.867M              6.84511           9.21677       2.90205G          936.029M                     20.349                     2.97278           9.21677M    661.298k   45.9988M       404.128M/s    5.0566M   7.70034M    315.01M         6.84824    9.21239/s   2.902G/s     936.029M                20.349                2.97142      1000k       9.21239M/s [BEST: throughput=  0.42 GB/s doc_throughput=     9 docs/s instructions=   936028849 cycles=   314866528 branch_miss=  658051 cache_miss= 5049904 cache_ref=   7680937 items=   1000000 avg_time= 108549456 ns]
large_random<sajson>/manual_time                        90232061 ns     93618516 ns            8         585.079k           510.397M        8.42351M       12.0853M    332.476M              7.22793           11.0959       3.68911G          1066.99M                    23.1961                     3.20923           11.0959M    585.127k   45.9988M       486.167M/s   8.45663M   12.1721M   332.869M         7.23647    11.0825/s 3.68903G/s     1066.99M               23.1961                3.20544      1000k       11.0825M/s [BEST: throughput=  0.51 GB/s doc_throughput=    11 docs/s instructions=  1066991821 cycles=   332475890 branch_miss=  585079 cache_miss= 8423510 cache_ref=  12085344 items=   1000000 avg_time=  90232061 ns]
large_random<rapidjson>/manual_time                    177785878 ns    181212355 ns            4         597.351k           269.581M        7.03422M       10.6847M    571.744M              12.4296           5.86061       3.35077G          1.67314G                    36.3736                     2.92638           5.86061M    595.874k   45.9988M       246.745M/s   6.46367M   9.95807M   577.244M         12.5491    5.62474/s 3.24685G/s     1.67315G               36.3738                2.89851      1000k       5.62474M/s [BEST: throughput=  0.27 GB/s doc_throughput=     5 docs/s instructions=  1673139774 cycles=   571744482 branch_miss=  597351 cache_miss= 7034216 cache_ref=  10684708 items=   1000000 avg_time= 177785878 ns]
large_random<rapidjson_lossless>/manual_time           204306530 ns    207721439 ns            4         596.162k           233.081M        7.03972M       10.7033M    670.213M              14.5702           5.06712       3.39605G           2.0601G                    44.7861                      3.0738           5.06712M    597.255k   45.9988M       214.716M/s   6.46135M   9.95646M       675M         14.6743    4.89461/s 3.30386G/s     2.06011G               44.7863                3.05202      1000k       4.89461M/s [BEST: throughput=  0.23 GB/s doc_throughput=     5 docs/s instructions=  2060104887 cycles=   670213329 branch_miss=  596162 cache_miss= 7039715 cache_ref=  10703339 items=   1000000 avg_time= 204306529 ns]
large_random<rapidjson_insitu>/manual_time             156505099 ns    159925059 ns            5         597.846k           309.402M        8.10427M        12.226M    490.654M              10.6667           6.72631       3.30029G          1.50514G                    32.7213                     3.06762           6.72631M    598.298k   45.9988M       280.297M/s   7.53536M   11.4509M   497.194M         10.8089    6.38957/s 3.17685G/s     1.50515G               32.7215                3.02729      1000k       6.38957M/s [BEST: throughput=  0.31 GB/s doc_throughput=     6 docs/s instructions=  1505139601 cycles=   490653545 branch_miss=  597846 cache_miss= 8104273 cache_ref=  12225984 items=   1000000 avg_time= 156505098 ns]
large_random<nlohmann_json>/manual_time               1223013477 ns   1226423194 ns            1         4.53539M            37.611M        47.6327M       60.8084M    4.49944G              97.8166          0.817652       3.67898G          11.9464G                     259.71                     2.65507           817.652k    4.53539M   45.9988M       35.8687M/s   47.6327M   60.8084M   4.49944G         97.8166   0.817652/s 3.67898G/s     11.9464G                259.71                2.65507      1000k       817.652k/s [BEST: throughput=  0.04 GB/s doc_throughput=     0 docs/s instructions= 11946359874 cycles=  4499443804 branch_miss= 4535391 cache_miss=47632739 cache_ref=  60808354 items=   1000000 avg_time=1223013477 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                        88650445 ns     98896133 ns            8         441.189k           1.55343G        15.9025M       22.1897M    326.076M              2.37483           11.3137       3.68914G          938.041M                     6.8318                     2.87675           5.93165M     444.17k   137.305M       1.44247G/s   15.9386M   22.2407M   327.037M         2.38183    11.2803/s 3.68906G/s     938.041M                6.8318                 2.8683   524.288k        5.9141M/s [BEST: throughput=  1.55 GB/s doc_throughput=    11 docs/s instructions=   938040622 cycles=   326076143 branch_miss=  441189 cache_miss=15902522 cache_ref=  22189736 items=    524288 avg_time=  88650444 ns]
kostya<simdjson_ondemand>/manual_time                   60876299 ns     71059222 ns           11         522.264k           2.25731G        10.2137M       14.0345M    224.402M              1.63433           16.4401       3.68919G          676.617M                    4.92784                      3.0152           8.61935M    523.498k   137.305M       2.10058G/s   10.2316M   13.9684M   224.559M         1.63548    16.4268/s 3.68877G/s     676.617M               4.92784                3.01309   524.288k       8.61235M/s [BEST: throughput=  2.26 GB/s doc_throughput=    16 docs/s instructions=   676617059 cycles=   224401918 branch_miss=  522264 cache_miss=10213673 cache_ref=  14034543 items=    524288 avg_time=  60876298 ns]
kostya<yyjson>/manual_time                             205246627 ns    215517293 ns            3         418.184k           669.679M        11.4452M       16.3018M    560.073M              4.07904           4.87731       2.73165G          984.045M                    7.16685                     1.75699           2.55711M    418.354k   137.305M       637.985M/s   11.4439M   16.3006M   559.885M         4.07768    4.87219/s 2.72787G/s     984.045M               7.16686                1.75758   524.288k       2.55443M/s [BEST: throughput=  0.67 GB/s doc_throughput=     4 docs/s instructions=   984044941 cycles=   560073126 branch_miss=  418184 cache_miss=11445168 cache_ref=  16301754 items=    524288 avg_time= 205246627 ns]
kostya<yyjson_insitu>/manual_time                      151229147 ns    161506542 ns            5          412.86k            908.21M        8.90186M        12.338M    463.345M              3.37457           6.61454       3.06482G          965.775M                     7.0338                     2.08435           3.46792M    413.066k   137.305M       865.866M/s   8.90075M   12.3637M   463.527M         3.37589    6.61248/s 3.06506G/s     965.775M                7.0338                2.08354   524.288k       3.46684M/s [BEST: throughput=  0.91 GB/s doc_throughput=     6 docs/s instructions=   965775267 cycles=   463345038 branch_miss=  412860 cache_miss= 8901864 cache_ref=  12337957 items=    524288 avg_time= 151229146 ns]
kostya<sajson>/manual_time                             132152547 ns    142412561 ns            5         359.156k           1040.65M        12.5268M       17.2096M    486.751M              3.54503           7.57911       3.68914G          1.60304G                    11.6751                     3.29335           3.97364M    359.141k   137.305M       990.857M/s   12.5555M   17.2557M   487.484M         3.55037    7.56701/s  3.6888G/s     1.60304G               11.6751                 3.2884   524.288k       3.96729M/s [BEST: throughput=  1.04 GB/s doc_throughput=     7 docs/s instructions=  1603042688 cycles=   486750885 branch_miss=  359156 cache_miss=12526779 cache_ref=  17209588 items=    524288 avg_time= 132152546 ns]
kostya<rapidjson>/manual_time                          253487443 ns    263778768 ns            3         968.411k           549.115M        8.25203M       12.1317M    841.374M              6.12777           3.99924       3.36485G          2.29774G                    16.7346                     2.73094           2.09675M    969.452k   137.305M       516.571M/s   7.94873M   11.7012M   844.748M         6.15234    3.94497/s  3.3325G/s     2.29774G               16.7346                2.72003   524.288k        2.0683M/s [BEST: throughput=  0.55 GB/s doc_throughput=     3 docs/s instructions=  2297738861 cycles=   841373996 branch_miss=  968411 cache_miss= 8252030 cache_ref=  12131660 items=    524288 avg_time= 253487443 ns]
kostya<rapidjson_lossless>/manual_time                 265496740 ns    275790966 ns            3         947.461k           523.835M        8.26431M        12.127M    886.299M              6.45496           3.81512       3.38133G          2.51583G                     18.323                     2.83858           2.00022M     948.37k   137.305M       493.205M/s   7.94796M    11.707M   889.446M         6.47789    3.76652/s 3.35012G/s     2.51584G                18.323                2.82854   524.288k       1.97474M/s [BEST: throughput=  0.52 GB/s doc_throughput=     3 docs/s instructions=  2515833774 cycles=   886298705 branch_miss=  947461 cache_miss= 8264310 cache_ref=  12126994 items=    524288 avg_time= 265496739 ns]
kostya<rapidjson_insitu>/manual_time                   229726184 ns    240021077 ns            3         1064.78k           606.566M        11.3069M       15.7238M      754.2M              5.49288           4.41765       3.33179G            2.048G                    14.9157                     2.71546           2.31612M    1059.02k   137.305M       570.001M/s   10.9979M   15.3556M   757.228M         5.51493    4.35301/s 3.29622G/s     2.04801G               14.9157                2.70461   524.288k       2.28223M/s [BEST: throughput=  0.61 GB/s doc_throughput=     4 docs/s instructions=  2048003831 cycles=   754200125 branch_miss= 1064781 cache_miss=11306851 cache_ref=  15723765 items=    524288 avg_time= 229726184 ns]
kostya<nlohmann_json>/manual_time                     1599587594 ns   1609900460 ns            1         4.62529M           85.8377M        70.3792M       87.1491M    5.90152G              42.9811          0.625161        3.6894G          15.1309G                    110.199                     2.56389           327.764k    4.62529M   137.305M       81.8613M/s   70.3792M   87.1491M   5.90152G         42.9811   0.625161/s  3.6894G/s     15.1309G               110.199                2.56389   524.288k       327.764k/s [BEST: throughput=  0.09 GB/s doc_throughput=     0 docs/s instructions= 15130853657 cycles=  5901521358 branch_miss= 4625293 cache_miss=70379166 cache_ref=  87149055 items=    524288 avg_time=1599587594 ns]
distinct_user_id<simdjson_dom>/manual_time                258963 ns       289573 ns         2705            3.73k           2.45516G               0        88.734k    949.775k              1.50396          3.88772k       3.69246G          2.85594M                    4.52236                     3.00696           447.088k    3.91801k   631.515k       2.27115G/s   0.349723   88.7436k   955.664k         1.51329   3.86155k/s 3.69035G/s     2.85594M               4.52236                2.98843        115       444.078k/s [BEST: throughput=  2.46 GB/s doc_throughput=  3887 docs/s instructions=     2855937 cycles=      949775 branch_miss=    3730 cache_miss=       0 cache_ref=     88734 items=       115 avg_time=    258963 ns]
distinct_user_id<simdjson_ondemand>/manual_time           182142 ns       211766 ns         3844           1.741k           3.49119G               0        53.526k    668.065k              1.05788          5.52828k       3.69325G          2.10219M                    3.32881                     3.14669           635.753k    1.89677k   631.515k       3.22904G/s  0.0775234   53.5373k    672.31k          1.0646   5.49022k/s 3.69113G/s     2.10219M               3.32881                3.12682        115       631.375k/s [BEST: throughput=  3.49 GB/s doc_throughput=  5528 docs/s instructions=     2102194 cycles=      668065 branch_miss=    1741 cache_miss=       0 cache_ref=     53526 items=       115 avg_time=    182142 ns]
distinct_user_id<yyjson>/manual_time                      598685 ns       632151 ns         1000           7.148k           1.66615G         16.988k        73.743k     1.3995M               2.2161          2.63834k       3.69236G          2.87509M                    4.55268                     2.05437           303.409k    7.51093k   631.515k       1005.97M/s   7.47336k   55.4157k   1.61802M         2.56213   1.67033k/s 2.70263G/s     2.87528M               4.55299                1.77703        115       192.088k/s [BEST: throughput=  1.67 GB/s doc_throughput=  2638 docs/s instructions=     2875087 cycles=     1399500 branch_miss=    7148 cache_miss=   16988 cache_ref=     73743 items=       115 avg_time=    598684 ns]
distinct_user_id<yyjson_insitu>/manual_time               472366 ns       504842 ns         1482           7.083k           1.79499G             340        43.964k    1.29572M              2.05177          2.84235k        3.6829G          2.87457M                    4.55186                     2.21851           326.871k    7.57542k   631.515k        1.2451G/s     48.724   30.3373k   1.41104M         2.23438     2.117k/s 2.98718G/s     2.87483M               4.55228                2.03738        115       243.455k/s [BEST: throughput=  1.79 GB/s doc_throughput=  2842 docs/s instructions=     2874570 cycles=     1295721 branch_miss=    7083 cache_miss=     340 cache_ref=     43964 items=       115 avg_time=    472366 ns]
distinct_user_id<sajson>/manual_time                      548557 ns       579030 ns         1275           9.858k           1.16129G               0        45.356k    2.00769M              3.17917           1.8389k       3.69194G          5.98101M                    9.47089                     2.97905           211.473k    10.3374k   631.515k        1097.9M/s    0.68549   45.3461k   2.02408M         3.20512   1.82296k/s 3.68983G/s     5.98101M               9.47089                2.95492        115       209.641k/s [BEST: throughput=  1.16 GB/s doc_throughput=  1838 docs/s instructions=     5981008 cycles=     2007692 branch_miss=    9858 cache_miss=       0 cache_ref=     45356 items=       115 avg_time=    548557 ns]
distinct_user_id<rapidjson>/manual_time                  1619539 ns      1650005 ns          436          27.182k           443.633M              48        51.392k      5.255M              8.32125           702.489       3.69158G          13.0655M                    20.6892                      2.4863           80.7863k    27.0817k   631.515k       371.871M/s    943.489   33.7682k   5.42248M         8.58646     617.46/s 3.34816G/s     13.0664M               20.6906                2.40968        115       71.0079k/s [BEST: throughput=  0.44 GB/s doc_throughput=   702 docs/s instructions=    13065510 cycles=     5254995 branch_miss=   27182 cache_miss=      48 cache_ref=     51392 items=       115 avg_time=   1619538 ns]
distinct_user_id<rapidjson_insitu>/manual_time           1021133 ns      1051120 ns          694          24.766k           691.144M             181        42.747k    3.37318M               5.3414           1094.42       3.69168G          9.77658M                    15.4811                     2.89833           125.859k    24.7078k   631.515k       589.796M/s   1.85546k   34.9719k   3.47992M         5.51043    979.305/s  3.4079G/s     9.77712M                15.482                2.80958        115        112.62k/s [BEST: throughput=  0.69 GB/s doc_throughput=  1094 docs/s instructions=     9776578 cycles=     3373176 branch_miss=   24766 cache_miss=     181 cache_ref=     42747 items=       115 avg_time=   1021132 ns]
distinct_user_id<nlohmann_json>/manual_time              7085338 ns      7119282 ns          100         114.792k           91.4337M               4       218.151k    25.4883M              40.3606           144.785       3.69031G          66.2985M                    104.983                     2.60113           16.6502k    129.256k   631.515k       85.0008M/s     273.41   373.082k   26.1397M          41.392    141.137/s 3.68926G/s     64.9484M               102.845                2.48467        115       16.2307k/s [BEST: throughput=  0.09 GB/s doc_throughput=   144 docs/s instructions=    66298499 cycles=    25488301 branch_miss=  114792 cache_miss=       4 cache_ref=    218151 items=       115 avg_time=   7085338 ns]
find_tweet<simdjson_dom>/manual_time                      247759 ns       276583 ns         2824           3.459k           2.56327G               0        78.489k    909.776k              1.44062          4.05892k       3.69271G           2.7749M                    4.39403                     3.05009           4.05892k    3.58818k   631.515k       2.37385G/s    2.00885   78.5741k    914.38k         1.44791   4.03618k/s  3.6906G/s      2.7749M               4.39403                3.03473          1       4.03618k/s [BEST: throughput=  2.56 GB/s doc_throughput=  4058 docs/s instructions=     2774898 cycles=      909776 branch_miss=    3459 cache_miss=       0 cache_ref=     78489 items=         1 avg_time=    247759 ns]
find_tweet<simdjson_ondemand>/manual_time                 117530 ns       145666 ns         5950              743            5.3972G               0        30.905k    432.242k             0.684452          8.54642k       3.69412G          1.47887M                    2.34178                     3.42139           8.54642k     793.838   631.515k       5.00421G/s    0.13042   30.9252k   433.933k         0.68713   8.50847k/s 3.69211G/s     1.47887M               2.34178                3.40806          1       8.50847k/s [BEST: throughput=  5.40 GB/s doc_throughput=  8546 docs/s instructions=     1478869 cycles=      432242 branch_miss=     743 cache_miss=       0 cache_ref=     30905 items=         1 avg_time=    117529 ns]
find_tweet<yyjson>/manual_time                            662904 ns       693540 ns         1179           9.257k           1.65179G             126        64.201k    1.41164M              2.23532           2.6156k       3.69228G          2.82413M                      4.472                      2.0006            2.6156k    7.48896k   631.515k       908.518M/s    1031.24   39.4109k   1.64736M         2.60858   1.50852k/s 2.48506G/s     2.82461M               4.47275                1.71463          1       1.50852k/s [BEST: throughput=  1.65 GB/s doc_throughput=  2615 docs/s instructions=     2824134 cycles=     1411640 branch_miss=    9257 cache_miss=     126 cache_ref=     64201 items=         1 avg_time=    662903 ns]
find_tweet<yyjson_insitu>/manual_time                     462632 ns       492421 ns         1513           6.793k            1.8452G             516        35.907k    1.26035M              1.99576          2.92187k       3.68258G          2.82381M                    4.47148                     2.24049           2.92187k    7.34583k   631.515k        1.2713G/s    14.8011   21.9529k   1.37584M         2.17864   2.16154k/s 2.97394G/s     2.82407M                4.4719                2.05261          1       2.16154k/s [BEST: throughput=  1.85 GB/s doc_throughput=  2921 docs/s instructions=     2823809 cycles=     1260353 branch_miss=    6793 cache_miss=     516 cache_ref=     35907 items=         1 avg_time=    462632 ns]
find_tweet<sajson>/manual_time                            536134 ns       565658 ns         1304           9.635k           1.18822G               0        35.954k    1.96212M              3.10701          1.88154k       3.69181G          5.88886M                    9.32498                     3.00127           1.88154k    10.0949k   631.515k       1123.34M/s    1.09893   35.9624k   1.97828M         3.13259   1.86521k/s  3.6899G/s     5.88886M               9.32498                2.97676          1       1.86521k/s [BEST: throughput=  1.19 GB/s doc_throughput=  1881 docs/s instructions=     5888863 cycles=     1962121 branch_miss=    9635 cache_miss=       0 cache_ref=     35954 items=         1 avg_time=    536133 ns]
find_tweet<rapidjson>/manual_time                        1611968 ns      1640666 ns          438          26.819k           446.514M             222        45.211k    5.22118M              8.26771           707.053       3.69165G          12.9974M                    20.5812                     2.48935            707.053    27.0319k   631.515k       373.618M/s    686.443   26.6443k   5.39473M         8.54252     620.36/s 3.34667G/s     12.9983M               20.5827                2.40944          1         620.36/s [BEST: throughput=  0.45 GB/s doc_throughput=   707 docs/s instructions=    12997365 cycles=     5221183 branch_miss=   26819 cache_miss=     222 cache_ref=     45211 items=         1 avg_time=   1611967 ns]
find_tweet<rapidjson_insitu>/manual_time                 1012196 ns      1041807 ns          704          24.546k           698.528M              41        34.309k    3.33756M              5.28501          1.10611k       3.69172G          9.71888M                    15.3898                     2.91197           1.10611k    24.6022k   631.515k       595.003M/s   1.69042k   26.1983k   3.44654M         5.45758    987.951/s 3.40502G/s     9.71942M               15.3906                2.82005          1        987.951/s [BEST: throughput=  0.70 GB/s doc_throughput=  1106 docs/s instructions=     9718880 cycles=     3337563 branch_miss=   24546 cache_miss=      41 cache_ref=     34309 items=         1 avg_time=   1012195 ns]
find_tweet<nlohmann_json>/manual_time                    6033110 ns      6063247 ns          118          90.399k           107.963M              50       163.481k    21.5838M              34.1778           170.959       3.68995G          56.6607M                    89.7219                     2.62515            170.959    106.063k   631.515k       99.8257M/s    37.2881   303.537k    22.259M          35.247    165.752/s 3.68947G/s     55.3175M                87.595                2.48518          1        165.752/s [BEST: throughput=  0.11 GB/s doc_throughput=   170 docs/s instructions=    56660746 cycles=    21583823 branch_miss=   90399 cache_miss=      50 cache_ref=    163481 items=         1 avg_time=   6033109 ns]
top_tweet<simdjson_dom>/manual_time                       253584 ns       281743 ns         2760           3.549k           2.50432G               0        86.184k    931.121k              1.47442          3.96558k       3.69243G          2.80907M                    4.44814                     3.01687           3.96558k    3.68445k   631.515k       2.31933G/s   0.231884   86.2417k   935.916k         1.48202   3.94347k/s 3.69075G/s     2.80907M               4.44814                3.00141          1       3.94347k/s [BEST: throughput=  2.50 GB/s doc_throughput=  3965 docs/s instructions=     2809067 cycles=      931121 branch_miss=    3549 cache_miss=       0 cache_ref=     86184 items=         1 avg_time=    253584 ns]
top_tweet<simdjson_ondemand>/manual_time                  175531 ns       203474 ns         3989           1.516k           3.62286G               0        53.692k    643.776k              1.01942          5.73677k        3.6932G          2.10137M                     3.3275                     3.26413           5.73677k    1.67183k   631.515k       3.35066G/s  0.0985209   53.5722k   647.888k         1.02593     5.697k/s 3.69102G/s     2.10137M                3.3275                3.24341          1         5.697k/s [BEST: throughput=  3.62 GB/s doc_throughput=  5736 docs/s instructions=     2101367 cycles=      643776 branch_miss=    1516 cache_miss=       0 cache_ref=     53692 items=         1 avg_time=    175530 ns]
top_tweet<simdjson_ondemand_forward_only>/manual_time     173115 ns       201049 ns         4039           1.449k           3.67314G               0        54.166k    634.989k               1.0055          5.81639k       3.69334G          2.12693M                    3.36799                     3.34956           5.81639k    1.58505k   631.515k       3.39742G/s   0.174301   54.2422k   639.046k         1.01192   5.77651k/s 3.69145G/s     2.12693M               3.36799                 3.3283          1       5.77651k/s [BEST: throughput=  3.67 GB/s doc_throughput=  5816 docs/s instructions=     2126934 cycles=      634989 branch_miss=    1449 cache_miss=       0 cache_ref=     54166 items=         1 avg_time=    173114 ns]
top_tweet<yyjson>/manual_time                             667766 ns       697793 ns         1188           9.819k           1.61498G             122        68.979k    1.44373M              2.28614           2.5573k       3.69206G          2.84502M                    4.50507                      1.9706            2.5573k    7.61152k   631.515k       901.902M/s    982.794   44.5277k   1.66556M         2.63741   1.49753k/s 2.49423G/s      2.8455M               4.50583                1.70843          1       1.49753k/s [BEST: throughput=  1.61 GB/s doc_throughput=  2557 docs/s instructions=     2845019 cycles=     1443731 branch_miss=    9819 cache_miss=     122 cache_ref=     68979 items=         1 avg_time=    667766 ns]
top_tweet<yyjson_insitu>/manual_time                      467919 ns       496899 ns         1497           7.394k           1.80407G              11        40.443k    1.29245M              2.04659          2.85673k        3.6922G          2.84469M                    4.50455                       2.201           2.85673k    7.45415k   631.515k       1.25694G/s    46.2365   27.1174k   1.39523M         2.20934   2.13712k/s 2.98179G/s     2.84496M               4.50497                2.03905          1       2.13712k/s [BEST: throughput=  1.80 GB/s doc_throughput=  2856 docs/s instructions=     2844693 cycles=     1292454 branch_miss=    7394 cache_miss=      11 cache_ref=     40443 items=         1 avg_time=    467918 ns]
top_tweet<sajson>/manual_time                             541034 ns       569619 ns         1292           9.742k           1.17735G               0        41.219k    1.98029M              3.13577          1.86433k        3.6919G          5.91603M                      9.368                     2.98746           1.86433k    10.2295k   631.515k       1113.16M/s    2.58127    41.215k   1.99648M         3.16141   1.84831k/s 3.69012G/s     5.91604M                 9.368                2.96323          1       1.84831k/s [BEST: throughput=  1.18 GB/s doc_throughput=  1864 docs/s instructions=     5916035 cycles=     1980287 branch_miss=    9742 cache_miss=       0 cache_ref=     41219 items=         1 avg_time=    541034 ns]
top_tweet<rapidjson>/manual_time                         1615420 ns      1644184 ns          436          27.109k           443.918M             139        49.495k    5.23781M              8.29404           702.941       3.68187G          13.0478M                     20.661                     2.49107            702.941    27.1007k   631.515k       372.819M/s    841.528   30.4278k   5.40822M         8.56388    619.034/s 3.34787G/s     13.0486M               20.6623                2.41273          1        619.034/s [BEST: throughput=  0.44 GB/s doc_throughput=   702 docs/s instructions=    13047759 cycles=     5237813 branch_miss=   27109 cache_miss=     139 cache_ref=     49495 items=         1 avg_time=   1615419 ns]
top_tweet<rapidjson_insitu>/manual_time                  1016446 ns      1045062 ns          697          24.379k           695.989M             123        39.638k    3.34962M               5.3041          1.10209k        3.6916G          9.76072M                     15.456                     2.91398           1.10209k    24.6378k   631.515k       592.515M/s   1.82354k   31.6145k   3.46209M         5.48219     983.82/s 3.40607G/s     9.76105M               15.4566                2.81941          1         983.82/s [BEST: throughput=  0.70 GB/s doc_throughput=  1102 docs/s instructions=     9760719 cycles=     3349621 branch_miss=   24379 cache_miss=     123 cache_ref=     39638 items=         1 avg_time=   1016445 ns]
top_tweet<nlohmann_json>/manual_time                     8630359 ns      8659981 ns           81         177.453k           74.0444M              59       395.123k    31.4683M              49.8298           117.249       3.68962G          77.9476M                     123.43                     2.47702            117.249    185.291k   631.515k       69.7838M/s    43.9259    410.48k   31.8394M         50.4174     115.87/s 3.68923G/s     78.5248M               124.344                2.46628          1         115.87/s [BEST: throughput=  0.07 GB/s doc_throughput=   117 docs/s instructions=    77947632 cycles=    31468280 branch_miss=  177453 cache_miss=      59 cache_ref=    395123 items=         1 avg_time=   8630359 ns]
