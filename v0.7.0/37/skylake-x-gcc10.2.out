run_benchmark: v0.8.0~1 /home/jkeiser/simdjson_benchmark_results/v0.7.0/37/skylake-gcc10.2.json 
git reset --hard v0.8.0~1
HEAD is now at 1005c62e It seems that we export too many targets. (#1385)
cmake ..
-- The CXX compiler identification is GNU 10.2.0
-- The C compiler identification is GNU 10.2.0
-- Check for working CXX compiler: /usr/bin/g++-10
-- Check for working CXX compiler: /usr/bin/g++-10 -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Check for working C compiler: /usr/bin/gcc-10
-- Check for working C compiler: /usr/bin/gcc-10 -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- No build type selected, default to Release
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed
-- Check if compiler accepts -pthread
-- Check if compiler accepts -pthread - yes
-- Found Threads: TRUE  
-- Looking for fork
-- Looking for fork - found
-- Looking for wait
-- Looking for wait - found
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- Found Git: /usr/bin/git (found version "2.27.0") 
-- git Version: v0.2.1-1005c62e
-- Version: 0.2.1
-- Performing Test HAVE_CXX_FLAG_STD_CXX11
-- Performing Test HAVE_CXX_FLAG_STD_CXX11 - Success
-- Performing Test HAVE_CXX_FLAG_WALL
-- Performing Test HAVE_CXX_FLAG_WALL - Success
-- Performing Test HAVE_CXX_FLAG_WEXTRA
-- Performing Test HAVE_CXX_FLAG_WEXTRA - Success
-- Performing Test HAVE_CXX_FLAG_WSHADOW
-- Performing Test HAVE_CXX_FLAG_WSHADOW - Success
-- Performing Test HAVE_CXX_FLAG_WERROR
-- Performing Test HAVE_CXX_FLAG_WERROR - Success
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32 - Failed
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED - Success
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WD654
-- Performing Test HAVE_CXX_FLAG_WD654 - Failed
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY - Failed
-- Performing Test HAVE_CXX_FLAG_COVERAGE
-- Performing Test HAVE_CXX_FLAG_COVERAGE - Success
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Performing Test USE_BOOST_JSON
-- Performing Test USE_BOOST_JSON - Failed
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Found Python3: /usr/bin/python3.8 (found version "3.8.6") found components: Interpreter 
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
make[1]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[2]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
Scanning dependencies of target benchmark
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[  0%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/benchmark.cc.o
[ 10%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o
[ 10%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/benchmark_name.cc.o
[ 10%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/benchmark_register.cc.o
[ 20%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/benchmark_runner.cc.o
[ 20%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/colorprint.cc.o
[ 30%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/commandlineflags.cc.o
[ 30%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/complexity.cc.o
[ 30%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/console_reporter.cc.o
[ 40%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/counter.cc.o
[ 40%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/csv_reporter.cc.o
[ 50%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/json_reporter.cc.o
[ 50%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/reporter.cc.o
[ 60%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/sleep.cc.o
[ 60%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/statistics.cc.o
[ 60%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/string_util.cc.o
[ 70%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/sysinfo.cc.o
[ 70%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/timers.cc.o
[ 80%] Linking CXX static library libbenchmark.a
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 80%] Built target benchmark
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
Scanning dependencies of target generated-data
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 80%] Generating utf-8.json, escape.json, 0-structurals.json, 7-structurals.json, 15-structurals.json, 23-structurals.json
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-miss.json ...
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 80%] Built target generated-data
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
Scanning dependencies of target simdjson
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 80%] Building CXX object src/CMakeFiles/simdjson.dir/simdjson.cpp.o
[ 80%] Linking CXX shared library ../libsimdjson.so
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 80%] Built target simdjson
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
Scanning dependencies of target yyjson
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 80%] Building C object dependencies/CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o
[ 90%] Linking C static library libyyjson.a
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 90%] Built target yyjson
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
Scanning dependencies of target bench_ondemand
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[100%] Building CXX object benchmark/CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o
[100%] Linking CXX executable bench_ondemand
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[100%] Built target bench_ondemand
make[2]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[1]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/37/skylake-gcc10.2.json --benchmark_out_format=json
2021-01-23 05:02:01
Running benchmark/bench_ondemand
Run on (4 X 3200 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 1024 KiB (x4)
  L3 Unified 8448 KiB (x1)
Load Average: 1.00, 1.00, 1.00
***WARNING*** CPU scaling is enabled, the benchmark real time measurements may be noisy and will incur extra overhead.
simdjson::dom implementation:      haswell
simdjson::ondemand implementation: fallback

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                  303942 ns       375108 ns         2304           3.818k           2.09643G               0        32.335k    962.122k              1.52351          3.31968k       3.19394G          2.96251M                    4.69112                     3.07914           331.968k    4.01162k   631.515k       1.93505G/s   0.673611   32.3851k   969.753k          1.5356    3.2901k/s 3.19058G/s     2.96251M               4.69112                3.05491        100        329.01k/s [BEST: throughput=  2.10 GB/s doc_throughput=  3319 docs/s instructions=     2962511 cycles=      962122 branch_miss=    3818 cache_miss=       0 cache_ref=     32335 items=       100 avg_time=    303942 ns]
partial_tweets<simdjson_ondemand>/manual_time             219010 ns       276099 ns         3191           2.349k           2.90302G               0        10.053k    694.949k              1.10045          4.59692k       3.19462G           2.4602M                    3.89571                     3.54011           459.692k    2.43321k   631.515k       2.68547G/s  0.0391727   10.0829k   698.941k         1.10677   4.56601k/s 3.19137G/s      2.4602M               3.89571                3.51989        100       456.601k/s [BEST: throughput=  2.90 GB/s doc_throughput=  4596 docs/s instructions=     2460197 cycles=      694949 branch_miss=    2349 cache_miss=       0 cache_ref=     10053 items=       100 avg_time=    219009 ns]
partial_tweets<yyjson>/manual_time                        866461 ns       945848 ns          811           9.967k           1.23706G             185        27.664k    1.63041M              2.58175          1.95888k       3.19378G          2.90846M                    4.60553                     1.78388           195.888k    7.70675k   631.515k        695.08M/s    549.651   23.3857k   1.80148M         2.85263   1.15412k/s 2.07913G/s     2.90895M                4.6063                1.61475        100       115.412k/s [BEST: throughput=  1.24 GB/s doc_throughput=  1958 docs/s instructions=     2908461 cycles=     1630411 branch_miss=    9967 cache_miss=     185 cache_ref=     27664 items=       100 avg_time=    866461 ns]
partial_tweets<yyjson_insitu>/manual_time                 588453 ns       650067 ns         1199           7.366k           1.48381G             111        14.716k    1.35907M              2.15209           2.3496k       3.19328G          2.90814M                    4.60503                      2.1398            234.96k    7.46789k   631.515k       1023.46M/s    67.4462   8.71612k   1.47923M         2.34235   1.69937k/s 2.51376G/s     2.90841M               4.60544                1.96617        100       169.937k/s [BEST: throughput=  1.48 GB/s doc_throughput=  2349 docs/s instructions=     2908144 cycles=     1359074 branch_miss=    7366 cache_miss=     111 cache_ref=     14716 items=       100 avg_time=    588452 ns]
partial_tweets<sajson>/manual_time                        625535 ns       690526 ns         1117          10.611k           1022.93M               0        13.437k    1.97131M              3.12156           1.6198k       3.19313G          6.05185M                    9.58306                     3.06996            161.98k    11.1913k   631.515k       962.791M/s    1.66249   13.5636k   1.99557M         3.15997   1.59863k/s 3.19018G/s     6.05185M               9.58306                3.03264        100       159.863k/s [BEST: throughput=  1.02 GB/s doc_throughput=  1619 docs/s instructions=     6051847 cycles=     1971309 branch_miss=   10611 cache_miss=       0 cache_ref=     13437 items=       100 avg_time=    625535 ns]
partial_tweets<rapidjson>/manual_time                    1719118 ns      1782988 ns          408           27.34k           438.039M             861        22.571k    4.60298M              7.28879           693.632       3.19277G          13.4092M                    21.2334                     2.91316           69.3632k    27.7275k   631.515k       350.331M/s    313.623   10.9785k    4.8031M         7.60568    581.694/s 2.79393G/s     13.4097M               21.2342                2.79189        100       58.1694k/s [BEST: throughput=  0.44 GB/s doc_throughput=   693 docs/s instructions=    13409200 cycles=     4602979 branch_miss=   27340 cache_miss=     861 cache_ref=     22571 items=       100 avg_time=   1719118 ns]
partial_tweets<rapidjson_insitu>/manual_time             1150923 ns      1212845 ns          612          24.507k           635.457M             102        14.999k    3.17319M              5.02472           1006.24       3.19299G          9.75482M                    15.4467                     3.07414           100.624k    24.5255k   631.515k       523.284M/s    171.786   9.30461k   3.27531M         5.18643    868.868/s 2.84581G/s     9.75543M               15.4477                2.97848        100       86.8868k/s [BEST: throughput=  0.64 GB/s doc_throughput=  1006 docs/s instructions=     9754823 cycles=     3173187 branch_miss=   24507 cache_miss=     102 cache_ref=     14999 items=       100 avg_time=   1150923 ns]
partial_tweets<nlohmann_json>/manual_time                9205371 ns      9294611 ns           76         140.052k           71.5572M              26        98.489k    28.1476M              44.5715            113.31       3.18941G          71.2315M                    112.795                     2.53065            11.331k    150.499k   631.515k       65.4248M/s    58.1184   138.922k   29.3566M          46.486    108.632/s 3.18908G/s     71.7552M               113.624                2.44426        100       10.8632k/s [BEST: throughput=  0.07 GB/s doc_throughput=   113 docs/s instructions=    71231472 cycles=    28147554 branch_miss=  140052 cache_miss=      26 cache_ref=     98489 items=       100 avg_time=   9205370 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                 103873052 ns    110023657 ns            7         861.255k           443.775M        6.76363M       6.89477M     330.49M              7.18475           9.64754       3.18841G          983.113M                    21.3726                     2.97472           9.64754M    863.276k   45.9988M       422.322M/s   6.80627M   6.89473M   331.174M         7.19962    9.62714/s 3.18825G/s     983.113M               21.3726                2.96857      1000k       9.62714M/s [BEST: throughput=  0.44 GB/s doc_throughput=     9 docs/s instructions=   983112712 cycles=   330489522 branch_miss=  861255 cache_miss= 6763629 cache_ref=   6894775 items=   1000000 avg_time= 103873051 ns]
large_random<simdjson_ondemand>/manual_time             66711177 ns     72797763 ns           10         878.317k           692.288M        3.51872M        3.5731M    211.876M              4.60613           15.0501       3.18877G           642.49M                    13.9675                     3.03238           15.0501M    889.665k   45.9988M       657.579M/s   3.51247M     3.573M   212.711M         4.62428      14.99/s 3.18854G/s      642.49M               13.9675                3.02048      1000k         14.99M/s [BEST: throughput=  0.69 GB/s doc_throughput=    15 docs/s instructions=   642489800 cycles=   211876183 branch_miss=  878317 cache_miss= 3518722 cache_ref=   3573099 items=   1000000 avg_time=  66711177 ns]
large_random<simdjson_ondemand_unordered>/manual_time   70127009 ns     76196804 ns           10         875.434k           656.628M        3.50257M       3.57307M    223.387M              4.85638           14.2749       3.18884G           646.49M                    14.0545                     2.89403           14.2749M    876.319k   45.9988M       625.549M/s   3.51566M   3.57312M   223.613M         4.86128    14.2598/s 3.18868G/s      646.49M               14.0545                2.89111      1000k       14.2598M/s [BEST: throughput=  0.66 GB/s doc_throughput=    14 docs/s instructions=   646489805 cycles=   223387448 branch_miss=  875434 cache_miss= 3502566 cache_ref=   3573065 items=   1000000 avg_time=  70127009 ns]
large_random<yyjson>/manual_time                       157112064 ns    163222136 ns            4         657.056k           292.908M        4.20207M       4.32018M    360.638M              7.84016           6.36774       2.29644G           944.15M                    20.5255                       2.618           6.36774M     660.22k   45.9988M       279.214M/s   4.19985M   4.32137M   360.899M         7.84585    6.36488/s 2.29708G/s      944.15M               20.5255                 2.6161      1000k       6.36488M/s [BEST: throughput=  0.29 GB/s doc_throughput=     6 docs/s instructions=   944149626 cycles=   360637580 branch_miss=  657056 cache_miss= 4202070 cache_ref=   4320177 items=   1000000 avg_time= 157112063 ns]
large_random<yyjson_insitu>/manual_time                131026443 ns    137111214 ns            5         657.767k           351.319M        3.48369M       3.66856M    317.944M                6.912           7.63758       2.42832G          938.029M                    20.3925                      2.9503           7.63758M    659.945k   45.9988M       334.802M/s   3.48452M   3.67807M    318.13M         6.91605    7.63205/s 2.42798G/s     938.029M               20.3925                2.94857      1000k       7.63205M/s [BEST: throughput=  0.35 GB/s doc_throughput=     7 docs/s instructions=   938028857 cycles=   317943741 branch_miss=  657767 cache_miss= 3483687 cache_ref=   3668559 items=   1000000 avg_time= 131026443 ns]
large_random<sajson>/manual_time                       109708058 ns    115822430 ns            6          584.39k           420.136M        5.42952M       5.57747M    349.132M              7.59002           9.13364       3.18884G          1099.99M                    23.9134                     3.15064           9.13364M    584.362k   45.9988M        399.86M/s   5.47739M   5.57728M    349.83M         7.60521     9.1151/s 3.18874G/s     1099.99M               23.9134                3.14435      1000k        9.1151M/s [BEST: throughput=  0.42 GB/s doc_throughput=     9 docs/s instructions=  1099987400 cycles=   349131661 branch_miss=  584390 cache_miss= 5429518 cache_ref=   5577471 items=   1000000 avg_time= 109708058 ns]
large_random<rapidjson>/manual_time                    205598644 ns    211720349 ns            4         599.937k           234.364M        4.35633M       4.87695M    557.794M              12.1263           5.09501       2.84197G          1.65913G                    36.0689                     2.97444           5.09501M    601.163k   45.9988M       213.366M/s    4.0705M   4.64422M   563.046M         12.2405    4.86385/s 2.73857G/s     1.65914G               36.0691                2.94671      1000k       4.86385M/s [BEST: throughput=  0.23 GB/s doc_throughput=     5 docs/s instructions=  1659125290 cycles=   557793539 branch_miss=  599937 cache_miss= 4356333 cache_ref=   4876948 items=   1000000 avg_time= 205598644 ns]
large_random<rapidjson_lossless>/manual_time           236963954 ns    243088241 ns            3         599.444k           201.176M        4.36666M        4.8844M    660.697M              14.3634            4.3735       2.88956G          2.02209G                    43.9597                     3.06054            4.3735M    608.085k   45.9988M       185.125M/s   4.10359M   4.67701M   665.367M         14.4649    4.22005/s 2.80788G/s      2.0221G               43.9599                3.03908      1000k       4.22005M/s [BEST: throughput=  0.20 GB/s doc_throughput=     4 docs/s instructions=  2022092453 cycles=   660697446 branch_miss=  599444 cache_miss= 4366664 cache_ref=   4884402 items=   1000000 avg_time= 236963954 ns]
large_random<rapidjson_insitu>/manual_time             191848141 ns    198011023 ns            4         627.282k           252.039M        5.08049M       5.59738M    513.685M              11.1674           5.47925       2.81461G          1.49112G                    32.4166                      2.9028           5.47925M    622.743k   45.9988M       228.659M/s   4.78313M   5.36093M   519.018M         11.2833    5.21246/s 2.70536G/s     1.49113G               32.4168                2.87299      1000k       5.21246M/s [BEST: throughput=  0.25 GB/s doc_throughput=     5 docs/s instructions=  1491123017 cycles=   513685202 branch_miss=  627282 cache_miss= 5080495 cache_ref=   5597379 items=   1000000 avg_time= 191848141 ns]
large_random<nlohmann_json>/manual_time               1472148452 ns   1478254510 ns            1         4.81041M            31.246M        30.3917M       30.8856M     4.6802G              101.746          0.679279       3.17916G          11.9494G                    259.776                     2.55317           679.279k    4.81041M   45.9988M       29.7985M/s   30.3917M   30.8856M    4.6802G         101.746   0.679279/s 3.17916G/s     11.9494G               259.776                2.55317      1000k       679.279k/s [BEST: throughput=  0.03 GB/s doc_throughput=     0 docs/s instructions= 11949361018 cycles=  4680201799 branch_miss= 4810407 cache_miss=30391749 cache_ref=  30885566 items=   1000000 avg_time=1472148452 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                        97113677 ns    115992372 ns            7         458.669k           1.41482G        10.2057M        10.315M    309.444M              2.25369           10.3042       3.18857G          945.501M                    6.88614                     3.05549           5.40238M    459.904k   137.305M       1.31676G/s    10.244M    10.315M   309.651M          2.2552    10.2972/s 3.18854G/s     945.501M               6.88614                3.05344   524.288k        5.3987M/s [BEST: throughput=  1.41 GB/s doc_throughput=    10 docs/s instructions=   945501412 cycles=   309443525 branch_miss=  458669 cache_miss=10205724 cache_ref=  10315033 items=    524288 avg_time=  97113676 ns]
kostya<simdjson_ondemand>/manual_time                   64855698 ns     83686856 ns           11         496.642k           2.11858G        6.42624M       6.47073M    206.659M              1.50511           15.4297       3.18869G          676.213M                     4.9249                     3.27212           8.08963M    497.098k   137.305M       1.97169G/s   6.43739M   6.47071M   206.791M         1.50607    15.4188/s 3.18847G/s     676.213M                4.9249                3.27004   524.288k       8.08392M/s [BEST: throughput=  2.12 GB/s doc_throughput=    15 docs/s instructions=   676213316 cycles=   206658842 branch_miss=  496642 cache_miss= 6426239 cache_ref=   6470735 items=    524288 avg_time=  64855698 ns]
kostya<yyjson>/manual_time                             264830953 ns    283810726 ns            3         412.737k           518.589M        8.48633M       8.65983M    611.274M              4.45195           3.77691       2.30873G          984.045M                    7.16685                     1.60983           1.98019M    413.156k   137.305M       494.445M/s   8.48559M   8.66659M   611.582M         4.45419    3.77599/s 2.30933G/s     984.045M               7.16686                1.60901   524.288k       1.97971M/s [BEST: throughput=  0.52 GB/s doc_throughput=     3 docs/s instructions=   984044961 cycles=   611274436 branch_miss=  412737 cache_miss= 8486329 cache_ref=   8659835 items=    524288 avg_time= 264830953 ns]
kostya<yyjson_insitu>/manual_time                      186748769 ns    205734407 ns            4         412.679k           735.441M        6.34791M       6.52869M    483.315M              3.52001           5.35626       2.58876G          965.776M                     7.0338                     1.99823           2.80822M    412.677k   137.305M       701.179M/s   6.34675M   6.51265M   483.317M         3.52002    5.35479/s 2.58806G/s     965.775M                7.0338                1.99822   524.288k       2.80745M/s [BEST: throughput=  0.74 GB/s doc_throughput=     5 docs/s instructions=   965775605 cycles=   483314864 branch_miss=  412679 cache_miss= 6347909 cache_ref=   6528694 items=    524288 avg_time= 186748769 ns]
kostya<sajson>/manual_time                             160300413 ns    179231639 ns            4         445.591k           860.075M         8.4864M       8.54699M    509.084M              3.70769           6.26397       3.18889G          1.62034G                     11.801                     3.18286           3.28413M    444.909k   137.305M       816.868M/s   8.50036M   8.54683M   511.158M         3.72279    6.23829/s 3.18875G/s     1.62034G                11.801                3.16995   524.288k       3.27066M/s [BEST: throughput=  0.86 GB/s doc_throughput=     6 docs/s instructions=  1620343059 cycles=   509084097 branch_miss=  445591 cache_miss= 8486403 cache_ref=   8546986 items=    524288 avg_time= 160300412 ns]
kostya<rapidjson>/manual_time                          280033373 ns    298964998 ns            3          1094.4k           498.205M        5.24321M       5.75281M    781.833M              5.69413           3.62845       2.83684G           2.2966G                    16.7263                     2.93745           1.90235M    1.10103M   137.305M       467.602M/s   5.07947M    5.6027M   784.591M         5.71422      3.571/s 2.80178G/s      2.2966G               16.7263                2.92713   524.288k       1.87223M/s [BEST: throughput=  0.50 GB/s doc_throughput=     3 docs/s instructions=  2296598240 cycles=   781832664 branch_miss= 1094400 cache_miss= 5243211 cache_ref=   5752814 items=    524288 avg_time= 280033373 ns]
kostya<rapidjson_lossless>/manual_time                 297397413 ns    316308693 ns            2         1.14891M           466.826M        5.23917M       5.77712M    840.653M              6.12252           3.39992       2.85815G          2.50316G                    18.2306                     2.97764           1.78254M    1.14279M   137.305M       440.301M/s   5.11565M   5.64924M   842.454M         6.13564     3.3625/s 2.83276G/s     2.50316G               18.2307                2.97127   524.288k       1.76292M/s [BEST: throughput=  0.47 GB/s doc_throughput=     3 docs/s instructions=  2503159180 cycles=   840653148 branch_miss= 1148905 cache_miss= 5239167 cache_ref=   5777120 items=    524288 avg_time= 297397413 ns]
kostya<rapidjson_insitu>/manual_time                   263024387 ns    281912767 ns            3         1000.38k           531.046M        7.37367M       7.88781M    727.454M              5.29809           3.86764       2.81353G          2.03014G                    14.7857                     2.79075           2.02776M    1000.27k   137.305M       497.841M/s   7.21008M   7.73478M   730.432M         5.31978    3.80193/s 2.77705G/s     2.03015G               14.7857                2.77938   524.288k       1.99331M/s [BEST: throughput=  0.53 GB/s doc_throughput=     3 docs/s instructions=  2030143786 cycles=   727454064 branch_miss= 1000381 cache_miss= 7373668 cache_ref=   7887814 items=    524288 avg_time= 263024386 ns]
kostya<nlohmann_json>/manual_time                     2015169057 ns   2034053341 ns            1         3.77372M           68.1357M        45.1369M       45.7104M    6.42717G              46.8095          0.496236        3.1894G          15.1471G                    110.317                     2.35672           260.171k    3.77372M   137.305M       64.9793M/s   45.1369M   45.7104M   6.42717G         46.8095   0.496236/s  3.1894G/s     15.1471G               110.317                2.35672   524.288k       260.171k/s [BEST: throughput=  0.07 GB/s doc_throughput=     0 docs/s instructions= 15147052240 cycles=  6427171365 branch_miss= 3773723 cache_miss=45136866 cache_ref=  45710376 items=    524288 avg_time=2015169057 ns]
distinct_user_id<simdjson_dom>/manual_time                300630 ns       380250 ns         2329            3.96k           2.11811G               0        34.162k    952.339k              1.50802          3.35402k       3.19416G          2.90344M                    4.59757                     3.04874           385.712k    4.17643k   631.515k       1.95637G/s   0.257621   33.9811k   959.228k         1.51893   3.32635k/s 3.19073G/s     2.90344M               4.59757                3.02685        115        382.53k/s [BEST: throughput=  2.12 GB/s doc_throughput=  3354 docs/s instructions=     2903436 cycles=      952339 branch_miss=    3960 cache_miss=       0 cache_ref=     34162 items=       115 avg_time=    300629 ns]
distinct_user_id<simdjson_ondemand>/manual_time           211194 ns       275243 ns         3313           1.968k           3.01713G               2          8.84k    668.594k              1.05871           4.7776k       3.19428G          2.15108M                    3.40623                     3.21732           549.424k     2.1275k   631.515k       2.78485G/s    2.30999   8.88026k    673.92k         1.06715   4.73498k/s   3.191G/s     2.15108M               3.40623                 3.1919        115       544.523k/s [BEST: throughput=  3.02 GB/s doc_throughput=  4777 docs/s instructions=     2151083 cycles=      668594 branch_miss=    1968 cache_miss=       2 cache_ref=      8840 items=       115 avg_time=    211194 ns]
distinct_user_id<yyjson>/manual_time                      762850 ns       852079 ns         1000           6.617k           1.32074G          7.093k        27.258k    1.52705M              2.41807          2.09138k       3.19363G          2.87481M                    4.55224                     1.88259           240.508k    7.54311k   631.515k       789.486M/s   2.23855k   24.4139k   1.72683M         2.73442   1.31087k/s 2.26365G/s     2.87529M               4.55301                1.66507        115        150.75k/s [BEST: throughput=  1.32 GB/s doc_throughput=  2091 docs/s instructions=     2874806 cycles=     1527049 branch_miss=    6617 cache_miss=    7093 cache_ref=     27258 items=       115 avg_time=    762850 ns]
distinct_user_id<yyjson_insitu>/manual_time               586547 ns       657806 ns         1203            6.93k            1.4938G          1.181k        13.344k      1.344M              2.12822          2.36543k       3.17915G          2.87458M                    4.55188                     2.13882           272.025k    7.54096k   631.515k       1026.79M/s    67.5619   8.79536k   1.47345M          2.3332   1.70489k/s 2.51208G/s     2.87484M               4.55229                1.95109        115       196.063k/s [BEST: throughput=  1.49 GB/s doc_throughput=  2365 docs/s instructions=     2874579 cycles=     1344003 branch_miss=    6930 cache_miss=    1181 cache_ref=     13344 items=       115 avg_time=    586547 ns]
distinct_user_id<sajson>/manual_time                      619530 ns       692369 ns         1130          10.809k           1029.98M               0        13.162k    1.95785M              3.10024          1.63097k       3.19319G          5.98431M                    9.47612                     3.05658           187.562k    11.2597k   631.515k       972.124M/s    1.57876   13.2221k    1.9763M         3.12946   1.61413k/s    3.19G/s     5.98431M               9.47612                3.02804        115       185.625k/s [BEST: throughput=  1.03 GB/s doc_throughput=  1630 docs/s instructions=     5984313 cycles=     1957845 branch_miss=   10809 cache_miss=       0 cache_ref=     13162 items=       115 avg_time=    619529 ns]
distinct_user_id<rapidjson>/manual_time                  1710183 ns      1782824 ns          413          26.767k            438.45M         12.619k        22.714k    4.59884M              7.28224           694.283        3.1929G          13.3498M                    21.1394                     2.90287           79.8425k    27.7351k   631.515k       352.161M/s    567.027   11.8269k   4.78695M         7.58011    584.733/s 2.79909G/s     13.3507M               21.1407                2.78898        115       67.2443k/s [BEST: throughput=  0.44 GB/s doc_throughput=   694 docs/s instructions=    13349834 cycles=     4598845 branch_miss=   26767 cache_miss=   12619 cache_ref=     22714 items=       115 avg_time=   1710183 ns]
distinct_user_id<rapidjson_insitu>/manual_time           1123769 ns      1194927 ns          702          24.008k           636.885M          7.095k        14.376k    3.16607M              5.01346            1008.5         3.193G           9.7061M                    15.3695                     3.06566           115.978k    24.5653k   631.515k       535.928M/s   1.39484k   11.1033k   3.25715M         5.15768    889.862/s 2.89842G/s     9.70641M                 15.37                2.98003        115       102.334k/s [BEST: throughput=  0.64 GB/s doc_throughput=  1008 docs/s instructions=     9706100 cycles=     3166075 branch_miss=   24008 cache_miss=    7095 cache_ref=     14376 items=       115 avg_time=   1123769 ns]
distinct_user_id<nlohmann_json>/manual_time              8578758 ns      8670789 ns           84         116.271k           77.6787M              46        97.456k    25.9291M              41.0586           123.004       3.18937G          66.6499M                     105.54                     2.57047           14.1454k    129.728k   631.515k       70.2036M/s    58.2738   106.957k   27.3587M         43.3224    116.567/s 3.18913G/s     65.3482M               103.478                2.38857        115       13.4052k/s [BEST: throughput=  0.08 GB/s doc_throughput=   123 docs/s instructions=    66649901 cycles=    25929097 branch_miss=  116271 cache_miss=      46 cache_ref=     97456 items=       115 avg_time=   8578757 ns]
find_tweet<simdjson_dom>/manual_time                      283692 ns       360202 ns         2465           3.666k           2.24249G               0         29.84k    899.639k              1.42457          3.55097k       3.19459G           2.8224M                    4.46925                     3.13725           3.55097k    3.82792k   631.515k       2.07318G/s  0.0547667   29.9422k   905.291k         1.43352   3.52495k/s 3.19111G/s      2.8224M               4.46925                3.11767          1       3.52495k/s [BEST: throughput=  2.24 GB/s doc_throughput=  3550 docs/s instructions=     2822396 cycles=      899639 branch_miss=    3666 cache_miss=       0 cache_ref=     29840 items=         1 avg_time=    283692 ns]
find_tweet<simdjson_ondemand>/manual_time                 135526 ns       201322 ns         5162              949           4.69102G               6         7.654k    430.107k             0.681072          7.42821k       3.19492G          1.50673M                     2.3859                     3.50315           7.42821k     1007.83   631.515k       4.33971G/s    5.52363   7.58999k   432.585k        0.684996   7.37865k/s  3.1919G/s     1.50673M                2.3859                3.48308          1       7.37865k/s [BEST: throughput=  4.69 GB/s doc_throughput=  7428 docs/s instructions=     1506730 cycles=      430107 branch_miss=     949 cache_miss=       6 cache_ref=      7654 items=         1 avg_time=    135526 ns]
find_tweet<yyjson>/manual_time                            846064 ns       931513 ns          940           9.586k           1.26791G             195        27.229k     1.5909M              2.51918          2.00773k       3.19409G          2.82414M                    4.47201                     1.77519           2.00773k    7.49844k   631.515k       711.837M/s    316.539   19.4058k   1.73996M         2.75522   1.18194k/s 2.05654G/s     2.82462M               4.47277                1.62338          1       1.18194k/s [BEST: throughput=  1.27 GB/s doc_throughput=  2007 docs/s instructions=     2824144 cycles=     1590898 branch_miss=    9586 cache_miss=     195 cache_ref=     27229 items=         1 avg_time=    846063 ns]
find_tweet<yyjson_insitu>/manual_time                     571123 ns       634612 ns         1237           6.893k           1.52588G           1.14k        13.028k    1.31682M              2.08518          2.41622k       3.18172G          2.82382M                     4.4715                     2.14442           2.41622k    7.29046k   631.515k       1054.52M/s    6.97898   4.93135k   1.42477M         2.25611   1.75094k/s 2.49467G/s     2.82408M               4.47192                1.98214          1       1.75094k/s [BEST: throughput=  1.53 GB/s doc_throughput=  2416 docs/s instructions=     2823819 cycles=     1316820 branch_miss=    6893 cache_miss=    1140 cache_ref=     13028 items=         1 avg_time=    571122 ns]
find_tweet<sajson>/manual_time                            606800 ns       677387 ns         1150          10.365k           1054.85M               1        12.868k    1.91158M              3.02697          1.67034k       3.19299G          5.89219M                    9.33025                     3.08237           1.67034k    10.9454k   631.515k       992.518M/s     5.6113    12.939k   1.93582M         3.06536   1.64799k/s 3.19022G/s     5.89219M               9.33025                3.04377          1       1.64799k/s [BEST: throughput=  1.05 GB/s doc_throughput=  1670 docs/s instructions=     5892194 cycles=     1911577 branch_miss=   10365 cache_miss=       1 cache_ref=     12868 items=         1 avg_time=    606799 ns]
find_tweet<rapidjson>/manual_time                        1694444 ns      1761906 ns          418          26.512k           443.741M         11.963k        21.117k    4.54414M              7.19562           702.661       3.19299G          13.2818M                    21.0316                     2.92284            702.661    27.7163k   631.515k       355.432M/s    417.423   8.24927k    4.7374M         7.50164    590.164/s 2.79584G/s     13.2825M               21.0327                2.80375          1        590.164/s [BEST: throughput=  0.44 GB/s doc_throughput=   702 docs/s instructions=    13281781 cycles=     4544140 branch_miss=   26512 cache_miss=   11963 cache_ref=     21117 items=         1 avg_time=   1694444 ns]
find_tweet<rapidjson_insitu>/manual_time                 1106678 ns      1173360 ns          710          23.779k           646.991M          2.369k        14.056k    3.11672M               4.9353           1024.51       3.19309G          9.64854M                    15.2784                     3.09574            1024.51    24.3058k   631.515k       544.205M/s   1.32454k   7.93265k   3.20758M         5.07918    903.605/s 2.89839G/s     9.64846M               15.2783                3.00802          1        903.605/s [BEST: throughput=  0.65 GB/s doc_throughput=  1024 docs/s instructions=     9648540 cycles=     3116716 branch_miss=   23779 cache_miss=    2369 cache_ref=     14056 items=         1 avg_time=   1106677 ns]
find_tweet<nlohmann_json>/manual_time                    7402586 ns      7491822 ns           98          93.135k            91.164M              45        76.232k    22.0896M              34.9788           144.358       3.18881G          57.0693M                    90.3688                     2.58353            144.358    107.617k   631.515k        81.358M/s    23.3776   81.8464k   23.6085M         37.3839    135.088/s 3.18922G/s     55.6863M               88.1789                2.35874          1        135.088/s [BEST: throughput=  0.09 GB/s doc_throughput=   144 docs/s instructions=    57069259 cycles=    22089630 branch_miss=   93135 cache_miss=      45 cache_ref=     76232 items=         1 avg_time=   7402586 ns]
top_tweet<simdjson_dom>/manual_time                       290939 ns       371681 ns         2404           3.812k           2.18645G               0        32.216k    922.667k              1.46104          3.46223k       3.19449G          2.85646M                    4.52319                     3.09588           3.46223k    3.91703k   631.515k       2.02154G/s   0.313644   32.3062k   928.363k         1.47006   3.43715k/s 3.19092G/s     2.85646M               4.52319                3.07688          1       3.43715k/s [BEST: throughput=  2.19 GB/s doc_throughput=  3462 docs/s instructions=     2856464 cycles=      922667 branch_miss=    3812 cache_miss=       0 cache_ref=     32216 items=         1 avg_time=    290938 ns]
top_tweet<simdjson_ondemand>/manual_time                  195530 ns       261839 ns         3577           1.669k           3.26302G               0         8.507k    618.253k                0.979          5.16697k        3.1945G           2.1282M                       3.37                     3.44229           5.16697k    1.85339k   631.515k       3.00794G/s  0.0206877   8.59976k   623.993k        0.988088   5.11429k/s 3.19128G/s      2.1282M                  3.37                3.41062          1       5.11429k/s [BEST: throughput=  3.26 GB/s doc_throughput=  5166 docs/s instructions=     2128204 cycles=      618253 branch_miss=    1669 cache_miss=       0 cache_ref=      8507 items=         1 avg_time=    195530 ns]
top_tweet<simdjson_ondemand_forward_only>/manual_time     204944 ns       272437 ns         3410           1.885k           3.11532G               0          9.27k    647.682k               1.0256          4.93308k       3.19507G           2.3491M                    3.71979                     3.62694           4.93308k    2.06241k   631.515k       2.86978G/s  0.0120235   9.23657k   654.068k         1.03571   4.87938k/s 3.19145G/s      2.3491M               3.71979                3.59153          1       4.87938k/s [BEST: throughput=  3.12 GB/s doc_throughput=  4933 docs/s instructions=     2349103 cycles=      647682 branch_miss=    1885 cache_miss=       0 cache_ref=      9270 items=         1 avg_time=    204944 ns]
top_tweet<yyjson>/manual_time                             856582 ns       946261 ns          940           9.661k           1.25639G             275        27.356k    1.60555M              2.54238          1.98949k       3.19423G          2.84503M                    4.50508                     1.77199           1.98949k     7.6145k   631.515k       703.097M/s    381.507   22.2212k   1.77273M          2.8071   1.16743k/s 2.06954G/s      2.8455M               4.50584                1.60516          1       1.16743k/s [BEST: throughput=  1.26 GB/s doc_throughput=  1989 docs/s instructions=     2845027 cycles=     1605552 branch_miss=    9661 cache_miss=     275 cache_ref=     27356 items=         1 avg_time=    856581 ns]
top_tweet<yyjson_insitu>/manual_time                      579998 ns       650464 ns         1217           7.176k           1.51474G             167        14.487k    1.33157M              2.10854          2.39859k        3.1939G           2.8447M                    4.50457                     2.13634           2.39859k    7.37286k   631.515k       1038.38M/s    49.2531   7.59474k   1.45282M         2.30053   1.72414k/s 2.50488G/s     2.84496M               4.50498                1.95823          1       1.72414k/s [BEST: throughput=  1.51 GB/s doc_throughput=  2398 docs/s instructions=     2844701 cycles=     1331574 branch_miss=    7176 cache_miss=     167 cache_ref=     14487 items=         1 avg_time=    579997 ns]
top_tweet<sajson>/manual_time                             610321 ns       684740 ns         1143          10.576k           1044.17M               0        12.997k    1.93121M              3.05806          1.65344k       3.19313G          5.91934M                    9.37324                     3.06509           1.65344k    11.0281k   631.515k       986.792M/s    1.50744   13.1229k   1.94695M         3.08299   1.63848k/s 3.19005G/s     5.91934M               9.37324                3.04031          1       1.63848k/s [BEST: throughput=  1.04 GB/s doc_throughput=  1653 docs/s instructions=     5919339 cycles=     1931211 branch_miss=   10576 cache_miss=       0 cache_ref=     12997 items=         1 avg_time=    610320 ns]
top_tweet<rapidjson>/manual_time                         1703078 ns      1775925 ns          415          27.673k             440.7M             640        22.397k    4.57539M               7.2451           697.845       3.19291G          13.3314M                    21.1102                     2.91372            697.845    27.6582k   631.515k        353.63M/s     494.92   9.87902k   4.76526M         7.54577    587.172/s 2.79803G/s     13.3323M               21.1116                2.79781          1        587.172/s [BEST: throughput=  0.44 GB/s doc_throughput=   697 docs/s instructions=    13331389 cycles=     4575390 branch_miss=   27673 cache_miss=     640 cache_ref=     22397 items=         1 avg_time=   1703078 ns]
top_tweet<rapidjson_insitu>/manual_time                  1117632 ns      1189721 ns          705           24.31k           641.075M             490        14.256k    3.14552M              4.98092           1015.14       3.19314G          9.68927M                    15.3429                     3.08034            1015.14    24.5135k   631.515k       538.871M/s   1.36127k    9.6289k   3.24005M          5.1306    894.749/s 2.89903G/s     9.68958M               15.3434                2.99056          1        894.749/s [BEST: throughput=  0.64 GB/s doc_throughput=  1015 docs/s instructions=     9689272 cycles=     3145523 branch_miss=   24310 cache_miss=     490 cache_ref=     14256 items=         1 avg_time=   1117631 ns]
top_tweet<nlohmann_json>/manual_time                    10248366 ns     10340488 ns           68         183.008k           61.9894M               6       164.665k    32.4854M              51.4405           98.1598       3.18876G          78.5918M                     124.45                     2.41929            98.1598    186.747k   631.515k       58.7664M/s      34.25   163.148k   32.6832M         51.7536    97.5765/s 3.18911G/s     78.8964M               124.932                2.41398          1        97.5765/s [BEST: throughput=  0.06 GB/s doc_throughput=    98 docs/s instructions=    78591790 cycles=    32485426 branch_miss=  183008 cache_miss=       6 cache_ref=    164665 items=         1 avg_time=  10248365 ns]
