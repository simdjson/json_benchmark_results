run_benchmark: v0.8.0~1 /home/jkeiser/simdjson_benchmark_results/v0.7.0/37/skylake-x-clang11-native.json -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native
git reset --hard v0.8.0~1
HEAD is now at 1005c62e It seems that we export too many targets. (#1385)
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The CXX compiler identification is Clang 11.0.0
-- The C compiler identification is Clang 11.0.0
-- Check for working CXX compiler: /usr/bin/clang++-11
-- Check for working CXX compiler: /usr/bin/clang++-11 -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Check for working C compiler: /usr/bin/clang-11
-- Check for working C compiler: /usr/bin/clang-11 -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed
-- Check if compiler accepts -pthread
-- Check if compiler accepts -pthread - yes
-- Found Threads: TRUE  
-- Looking for fork
-- Looking for fork - found
-- Looking for wait
-- Looking for wait - found
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- Found Git: /usr/bin/git (found version "2.27.0") 
-- git Version: v0.2.1-1005c62e
-- Version: 0.2.1
-- Performing Test HAVE_CXX_FLAG_STD_CXX11
-- Performing Test HAVE_CXX_FLAG_STD_CXX11 - Success
-- Performing Test HAVE_CXX_FLAG_WALL
-- Performing Test HAVE_CXX_FLAG_WALL - Success
-- Performing Test HAVE_CXX_FLAG_WEXTRA
-- Performing Test HAVE_CXX_FLAG_WEXTRA - Success
-- Performing Test HAVE_CXX_FLAG_WSHADOW
-- Performing Test HAVE_CXX_FLAG_WSHADOW - Success
-- Performing Test HAVE_CXX_FLAG_WERROR
-- Performing Test HAVE_CXX_FLAG_WERROR - Success
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32 - Success
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED - Success
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WD654
-- Performing Test HAVE_CXX_FLAG_WD654 - Failed
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY - Success
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES -- failed to compile
-- Performing Test HAVE_CXX_FLAG_COVERAGE
-- Performing Test HAVE_CXX_FLAG_COVERAGE - Success
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Performing Test USE_BOOST_JSON
-- Performing Test USE_BOOST_JSON - Failed
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Found Python3: /usr/bin/python3.8 (found version "3.8.6") found components: Interpreter 
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 10
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
Scanning dependencies of target benchmark
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_api_internal.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_name.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_name.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_register.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_register.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_runner.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_runner.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/colorprint.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/colorprint.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/commandlineflags.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/commandlineflags.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/complexity.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/complexity.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/console_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/console_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/counter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/counter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/csv_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/csv_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/json_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/json_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/sleep.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sleep.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/statistics.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/statistics.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/string_util.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/string_util.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/sysinfo.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sysinfo.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/timers.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/timers.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -P CMakeFiles/benchmark.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/benchmark.dir/link.txt --verbose=1
/usr/bin/ar qc libbenchmark.a  CMakeFiles/benchmark.dir/benchmark.cc.o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o CMakeFiles/benchmark.dir/benchmark_name.cc.o CMakeFiles/benchmark.dir/benchmark_register.cc.o CMakeFiles/benchmark.dir/benchmark_runner.cc.o CMakeFiles/benchmark.dir/colorprint.cc.o CMakeFiles/benchmark.dir/commandlineflags.cc.o CMakeFiles/benchmark.dir/complexity.cc.o CMakeFiles/benchmark.dir/console_reporter.cc.o CMakeFiles/benchmark.dir/counter.cc.o CMakeFiles/benchmark.dir/csv_reporter.cc.o CMakeFiles/benchmark.dir/json_reporter.cc.o CMakeFiles/benchmark.dir/reporter.cc.o CMakeFiles/benchmark.dir/sleep.cc.o CMakeFiles/benchmark.dir/statistics.cc.o CMakeFiles/benchmark.dir/string_util.cc.o CMakeFiles/benchmark.dir/sysinfo.cc.o CMakeFiles/benchmark.dir/timers.cc.o
/usr/bin/ranlib libbenchmark.a
[ 80%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
Scanning dependencies of target generated-data
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated && /usr/bin/ruby genfeaturejson.rb /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-miss.json ...
[ 80%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/clang++-11  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/include  -march=native -O3 -DNDEBUG -fPIC   -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -pthread -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/clang++-11 -fPIC -march=native -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.6 -o ../libsimdjson.so.6.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.6.0.0 ../libsimdjson.so.6 ../libsimdjson.so
[ 80%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
Scanning dependencies of target yyjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/clang-11  -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src  -O3 -DNDEBUG   -o CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o   -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src/yyjson.c
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -P CMakeFiles/yyjson.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -E cmake_link_script CMakeFiles/yyjson.dir/link.txt --verbose=1
/usr/bin/ar qc libyyjson.a  CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o
/usr/bin/ranlib libyyjson.a
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/clang++-11  -DRAPIDJSON_HAS_STDSTRING -DSAJSON_UNSORTED_OBJECT_KEYS -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_COMPETITION_NLOHMANN_JSON -DSIMDJSON_COMPETITION_RAPIDJSON -DSIMDJSON_COMPETITION_SAJSON -DSIMDJSON_COMPETITION_YYJSON -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/rapidjson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/sajson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/json  -march=native -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/clang++-11  -march=native -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.6.0.0 ../_deps/google_benchmarks/src/libbenchmark.a ../dependencies/libyyjson.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/37/skylake-x-clang11-native.json --benchmark_out_format=json
2021-01-24 21:14:18
Running benchmark/bench_ondemand
Run on (4 X 3200 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 1024 KiB (x4)
  L3 Unified 8448 KiB (x1)
Load Average: 1.05, 1.03, 0.96
***WARNING*** CPU scaling is enabled, the benchmark real time measurements may be noisy and will incur extra overhead.
simdjson::dom implementation:      haswell
simdjson::ondemand implementation: haswell

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
partial_tweets<simdjson_dom>/manual_time                  323692 ns       394617 ns         2167           3.835k           1.96347G               2        34.099k    1027.21k              1.62659          3.10914k       3.19376G          2.93219M                     4.6431                     2.85451           310.914k    3.94896k   631.515k       1.81698G/s    2.57176   34.1706k   1032.69k         1.63525   3.08935k/s 3.19033G/s     2.93219M                4.6431                2.83938        100       308.935k/s [BEST: throughput=  1.96 GB/s doc_throughput=  3109 docs/s instructions=     2932189 cycles=     1027214 branch_miss=    3835 cache_miss=       2 cache_ref=     34099 items=       100 avg_time=    323692 ns]
partial_tweets<simdjson_ondemand>/manual_time             204643 ns       261879 ns         3416           1.876k           3.10918G               0        12.651k    648.916k              1.02755          4.92337k       3.19485G          1.88084M                     2.9783                     2.89843           492.337k    1.99271k   631.515k       2.87401G/s  0.0766979   12.6683k   653.098k         1.03418   4.88657k/s 3.19141G/s     1.88084M                2.9783                2.87987        100       488.657k/s [BEST: throughput=  3.11 GB/s doc_throughput=  4923 docs/s instructions=     1880838 cycles=      648916 branch_miss=    1876 cache_miss=       0 cache_ref=     12651 items=       100 avg_time=    204642 ns]
partial_tweets<yyjson>/manual_time                        792174 ns       872050 ns          885          10.007k           1.37846G             170        29.001k    1.41134M              2.23485          2.18278k       3.08066G          2.91951M                    4.62303                      2.0686           218.278k    7.57598k   631.515k       760.262M/s    601.321   23.8335k   1.56118M         2.47211   1.26235k/s 1.97075G/s      2.9202M               4.62412                1.87051        100       126.235k/s [BEST: throughput=  1.38 GB/s doc_throughput=  2182 docs/s instructions=     2919512 cycles=     1411344 branch_miss=   10007 cache_miss=     170 cache_ref=     29001 items=       100 avg_time=    792173 ns]
partial_tweets<yyjson_insitu>/manual_time                 512287 ns       575478 ns         1381           7.294k           1.78595G             115        15.045k    1.12948M              1.78852          2.82804k        3.1942G           2.9194M                    4.62285                     2.58474           282.804k    7.26826k   631.515k       1.14808G/s    71.4236   9.55343k   1.23541M         1.95626   1.95203k/s 2.41155G/s     2.91967M               4.62327                2.36332        100       195.203k/s [BEST: throughput=  1.79 GB/s doc_throughput=  2828 docs/s instructions=     2919402 cycles=     1129477 branch_miss=    7294 cache_miss=     115 cache_ref=     15045 items=       100 avg_time=    512287 ns]
partial_tweets<sajson>/manual_time                        689985 ns       754802 ns         1012          10.563k           924.947M               1        13.577k    2.18005M              3.45209          1.46465k         3.193G          5.87892M                    9.30924                      2.6967           146.465k    10.8494k   631.515k       872.859M/s    2.49111   13.6563k   2.20103M         3.48532   1.44931k/s 3.18997G/s     5.87892M               9.30924                2.67098        100       144.931k/s [BEST: throughput=  0.92 GB/s doc_throughput=  1464 docs/s instructions=     5878924 cycles=     2180047 branch_miss=   10563 cache_miss=       1 cache_ref=     13577 items=       100 avg_time=    689985 ns]
partial_tweets<rapidjson>/manual_time                    2545939 ns      2611319 ns          275          32.392k           276.971M          7.526k        22.559k    7.27974M              11.5274           438.582       3.19276G          21.8957M                    34.6716                     3.00776           43.8582k    33.8413k   631.515k       236.557M/s     395.08    12.195k   7.44062M         11.7822    392.782/s 2.92255G/s     21.8963M               34.6727                2.94281        100       39.2782k/s [BEST: throughput=  0.28 GB/s doc_throughput=   438 docs/s instructions=    21895663 cycles=     7279736 branch_miss=   32392 cache_miss=    7526 cache_ref=     22559 items=       100 avg_time=   2545938 ns]
partial_tweets<rapidjson_insitu>/manual_time             1853606 ns      1916426 ns          379          25.405k           375.784M              89        14.606k     5.3655M              8.49623           595.051       3.19274G          13.3197M                    21.0917                     2.48248           59.5051k    28.3392k   631.515k       324.912M/s    218.282   9.82115k   5.51426M         8.73179    539.489/s 2.97488G/s     13.3203M               21.0927                2.41562        100       53.9489k/s [BEST: throughput=  0.38 GB/s doc_throughput=   595 docs/s instructions=    13319746 cycles=     5365495 branch_miss=   25405 cache_miss=      89 cache_ref=     14606 items=       100 avg_time=   1853606 ns]
partial_tweets<nlohmann_json>/manual_time               10021233 ns     10109603 ns           70         151.595k           65.5436M              19        97.921k    30.7349M              48.6684           103.788       3.18991G           80.919M                    128.135                     2.63281           10.3788k    163.144k   631.515k       60.0984M/s    167.486   138.237k   31.9587M         50.6064    99.7881/s  3.1891G/s     81.4836M               129.029                2.54965        100       9.97881k/s [BEST: throughput=  0.07 GB/s doc_throughput=   103 docs/s instructions=    80919017 cycles=    30734853 branch_miss=  151595 cache_miss=      19 cache_ref=     97921 items=       100 avg_time=  10021232 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                 102268865 ns    108396918 ns            7         919.147k           451.373M        6.82217M        6.8963M    324.922M              7.06371           9.81271       3.18836G          1020.45M                    22.1843                     3.14061           9.81271M     914.11k   45.9988M       428.946M/s   6.81126M    6.8961M   326.056M         7.08837    9.77815/s 3.18823G/s     1020.45M               22.1843                3.12968      1000k       9.77815M/s [BEST: throughput=  0.45 GB/s doc_throughput=     9 docs/s instructions=  1020451782 cycles=   324921944 branch_miss=  919147 cache_miss= 6822169 cache_ref=   6896295 items=   1000000 avg_time= 102268864 ns]
large_random<simdjson_ondemand>/manual_time             72294796 ns     78409629 ns           10          920.68k           637.165M         3.4825M       3.57277M    230.187M              5.00421           13.8518       3.18851G          654.908M                    14.2375                     2.84511           13.8518M    929.326k   45.9988M       606.791M/s   3.50293M   3.57275M   230.512M         5.01125    13.8323/s 3.18849G/s     654.908M               14.2375                2.84111      1000k       13.8323M/s [BEST: throughput=  0.64 GB/s doc_throughput=    13 docs/s instructions=   654907680 cycles=   230187403 branch_miss=  920680 cache_miss= 3482502 cache_ref=   3572766 items=   1000000 avg_time=  72294795 ns]
large_random<simdjson_ondemand_unordered>/manual_time   73388453 ns     79514819 ns           10         903.934k           627.355M        3.51054M       3.57303M    233.809M              5.08293           13.6385        3.1888G          658.908M                    14.3245                     2.81815           13.6385M    907.311k   45.9988M       597.749M/s   3.51209M   3.57302M   234.002M         5.08714    13.6261/s 3.18854G/s     658.908M               14.3245                2.81582      1000k       13.6261M/s [BEST: throughput=  0.63 GB/s doc_throughput=    13 docs/s instructions=   658907678 cycles=   233808519 branch_miss=  903934 cache_miss= 3510537 cache_ref=   3573030 items=   1000000 avg_time=  73388452 ns]
large_random<yyjson>/manual_time                       145516758 ns    151708649 ns            5         675.703k           316.315M        4.20225M       4.44332M    323.701M              7.03717           6.87659       2.22596G          855.681M                    18.6023                     2.64343           6.87659M    676.313k   45.9988M       301.463M/s   4.20232M   4.44645M    323.99M         7.04345    6.87206/s 2.22648G/s     855.681M               18.6023                2.64107      1000k       6.87206M/s [BEST: throughput=  0.32 GB/s doc_throughput=     6 docs/s instructions=   855680747 cycles=   323701347 branch_miss=  675703 cache_miss= 4202254 cache_ref=   4443318 items=   1000000 avg_time= 145516758 ns]
large_random<yyjson_insitu>/manual_time                119466300 ns    125654710 ns            6         675.404k           385.359M        3.48257M       3.61487M    280.977M              6.10837            8.3776       2.35392G           849.56M                    18.4692                     3.02359            8.3776M    676.068k   45.9988M       367.199M/s   3.48294M    3.6184M   281.344M         6.11633    8.37056/s   2.355G/s      849.56M               18.4692                3.01965      1000k       8.37056M/s [BEST: throughput=  0.39 GB/s doc_throughput=     8 docs/s instructions=   849559981 cycles=   280977344 branch_miss=  675404 cache_miss= 3482565 cache_ref=   3614870 items=   1000000 avg_time= 119466299 ns]
large_random<sajson>/manual_time                       106127281 ns    112300138 ns            7         584.165k           433.861M        5.41048M       5.57623M    338.083M              7.34982           9.43201        3.1888G             1093M                    23.7614                     3.23293           9.43201M    584.373k   45.9988M       413.351M/s   5.46145M   5.57631M   338.402M         7.35676    9.42265/s 3.18864G/s        1093M               23.7614                3.22987      1000k       9.42265M/s [BEST: throughput=  0.43 GB/s doc_throughput=     9 docs/s instructions=  1092995860 cycles=   338082579 branch_miss=  584165 cache_miss= 5410485 cache_ref=   5576232 items=   1000000 avg_time= 106127280 ns]
large_random<rapidjson>/manual_time                    251018050 ns    257191661 ns            3         609.898k           189.203M        4.40135M       4.93966M        707M                15.37           4.11322       2.90805G          2.00013G                    43.4822                     2.82903           4.11322M    615.352k   45.9988M        174.76M/s   4.11166M   4.75086M   710.426M         15.4445    3.98378/s 2.83018G/s     2.00014G               43.4824                 2.8154      1000k       3.98378M/s [BEST: throughput=  0.19 GB/s doc_throughput=     4 docs/s instructions=  2000127180 cycles=   707000198 branch_miss=  609898 cache_miss= 4401350 cache_ref=   4939658 items=   1000000 avg_time= 251018049 ns]
large_random<rapidjson_lossless>/manual_time           287164113 ns    293330010 ns            3         582.545k            164.62M         4.3693M       4.94528M    822.946M              17.8906            3.5788       2.94516G          2.47709G                    53.8513                     3.01003            3.5788M    582.743k   45.9988M       152.762M/s   4.10078M   4.76968M   825.769M          17.952    3.48233/s  2.8756G/s      2.4771G               53.8515                2.99975      1000k       3.48233M/s [BEST: throughput=  0.16 GB/s doc_throughput=     3 docs/s instructions=  2477094908 cycles=   822945619 branch_miss=  582545 cache_miss= 4369295 cache_ref=   4945278 items=   1000000 avg_time= 287164113 ns]
large_random<rapidjson_insitu>/manual_time             276871815 ns    283037085 ns            3         588.372k           170.856M        5.06731M       5.66073M     790.43M              17.1837           3.71435       2.93593G          1.72813G                     37.569                     2.18631           3.71435M     593.58k   45.9988M       158.441M/s   4.81397M   5.47633M   792.923M         17.2379    3.61178/s 2.86386G/s     1.72814G               37.5692                2.17945      1000k       3.61178M/s [BEST: throughput=  0.17 GB/s doc_throughput=     3 docs/s instructions=  1728126996 cycles=   790430064 branch_miss=  588372 cache_miss= 5067309 cache_ref=   5660735 items=   1000000 avg_time= 276871815 ns]
large_random<nlohmann_json>/manual_time               1500487408 ns   1506656608 ns            1         5.14831M           30.6559M        30.4011M       30.9354M     4.7707G              103.714           0.66645       3.17943G          12.7846G                    277.932                     2.67981            666.45k    5.14831M   45.9988M       29.2357M/s   30.4011M   30.9354M    4.7707G         103.714    0.66645/s 3.17943G/s     12.7846G               277.932                2.67981      1000k        666.45k/s [BEST: throughput=  0.03 GB/s doc_throughput=     0 docs/s instructions= 12784550654 cycles=  4770695095 branch_miss= 5148312 cache_miss=30401061 cache_ref=  30935448 items=   1000000 avg_time=1500487408 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                       109168193 ns    128325709 ns            6         1044.14k           1.25857G        10.2821M        10.319M    347.853M              2.53343           9.16624        3.1885G          971.996M                     7.0791                     2.79428           4.80575M    1044.45k   137.305M       1.17136G/s   10.2565M    10.319M   348.085M         2.53512    9.16018/s 3.18852G/s     971.996M                7.0791                2.79241   524.288k       4.80257M/s [BEST: throughput=  1.26 GB/s doc_throughput=     9 docs/s instructions=   971995679 cycles=   347852506 branch_miss= 1044144 cache_miss=10282064 cache_ref=  10319014 items=    524288 avg_time= 109168193 ns]
kostya<simdjson_ondemand>/manual_time                   70429744 ns     89554135 ns           10          480.36k           1.95219G        6.41855M       6.47004M    224.277M              1.63342           14.2179       3.18874G          638.786M                    4.65231                      2.8482           7.45427M    479.883k   137.305M       1.81564G/s    6.4314M   6.47011M   224.561M         1.63549    14.1985/s 3.18844G/s     638.786M               4.65231                 2.8446   524.288k       7.44413M/s [BEST: throughput=  1.95 GB/s doc_throughput=    14 docs/s instructions=   638785639 cycles=   224276776 branch_miss=  480360 cache_miss= 6418546 cache_ref=   6470040 items=    524288 avg_time=  70429744 ns]
kostya<yyjson>/manual_time                             226706323 ns    245927871 ns            3         426.703k           605.853M        8.48885M       8.69154M    490.639M              3.57335           4.41246       2.16493G          974.185M                    7.09504                     1.98554            2.3134M    426.149k   137.305M       577.594M/s   8.48974M   8.69551M   490.539M         3.57263    4.41099/s 2.16377G/s     974.185M               7.09504                1.98595   524.288k       2.31263M/s [BEST: throughput=  0.61 GB/s doc_throughput=     4 docs/s instructions=   974184825 cycles=   490639410 branch_miss=  426703 cache_miss= 8488852 cache_ref=   8691544 items=    524288 avg_time= 226706323 ns]
kostya<yyjson_insitu>/manual_time                      148678037 ns    167920330 ns            5         415.968k           924.025M        6.35275M       6.55751M    362.132M              2.63743           6.72973       2.43705G          955.915M                    6.96198                     2.63968           3.52832M    416.073k   137.305M       880.724M/s   6.36106M   6.55946M   362.329M         2.63886    6.72594/s   2.437G/s     955.915M               6.96198                2.63825   524.288k       3.52633M/s [BEST: throughput=  0.92 GB/s doc_throughput=     6 docs/s instructions=   955914818 cycles=   362132369 branch_miss=  415968 cache_miss= 6352752 cache_ref=   6557508 items=    524288 avg_time= 148678037 ns]
kostya<sajson>/manual_time                             164069151 ns    183260540 ns            4         360.103k           837.433M        8.46251M       8.54037M    522.844M               3.8079           6.09907       3.18886G          1.52083G                    11.0763                     2.90877           3.19767M    360.198k   137.305M       798.104M/s   8.49247M   8.54054M   523.172M         3.81029    6.09499/s 3.18873G/s     1.52083G               11.0763                2.90695   524.288k       3.19553M/s [BEST: throughput=  0.84 GB/s doc_throughput=     6 docs/s instructions=  1520833626 cycles=   522843914 branch_miss=  360103 cache_miss= 8462511 cache_ref=   8540372 items=    524288 avg_time= 164069151 ns]
kostya<rapidjson>/manual_time                          318827892 ns    338030708 ns            2         971.591k           435.302M        5.23548M       5.86708M    908.745M              6.61844           3.17033       2.88102G          2.73082G                    19.8887                     3.00505           1.66216M    975.147k   137.305M       410.705M/s   5.11033M   5.78486M   911.084M         6.63548    3.13649/s 2.85761G/s     2.73083G               19.8888                2.99734   524.288k       1.64442M/s [BEST: throughput=  0.44 GB/s doc_throughput=     3 docs/s instructions=  2730823676 cycles=   908745208 branch_miss=  971591 cache_miss= 5235480 cache_ref=   5867078 items=    524288 avg_time= 318827892 ns]
kostya<rapidjson_lossless>/manual_time                 336567648 ns    355723819 ns            2         963.346k           412.147M        5.22783M       5.87648M    965.212M              7.02969           3.00169       2.89727G          3.00711G                     21.901                      3.1155           1.57375M    963.689k   137.305M       389.058M/s   5.10607M   5.78098M   967.526M         7.04654    2.97117/s 2.87468G/s     3.00712G                21.901                3.10805   524.288k       1.55775M/s [BEST: throughput=  0.41 GB/s doc_throughput=     3 docs/s instructions=  3007114439 cycles=   965211603 branch_miss=  963346 cache_miss= 5227826 cache_ref=   5876482 items=    524288 avg_time= 336567648 ns]
kostya<rapidjson_insitu>/manual_time                   311523638 ns    330726259 ns            2         532.011k            445.47M        7.37334M       8.01791M    886.084M               6.4534           3.24439        2.8748G          2.21411G                    16.1255                     2.49876           1.70099M    539.904k   137.305M       420.335M/s   7.24992M   7.90566M   888.074M          6.4679    3.21003/s 2.85074G/s     2.21411G               16.1255                2.49316   524.288k       1.68298M/s [BEST: throughput=  0.45 GB/s doc_throughput=     3 docs/s instructions=  2214112541 cycles=   886083568 branch_miss=  532011 cache_miss= 7373339 cache_ref=   8017906 items=    524288 avg_time= 311523638 ns]
kostya<nlohmann_json>/manual_time                     2285810708 ns   2304938241 ns            1         13.8105M           60.0684M        45.2865M       45.9575M    7.29049G              53.0971          0.437482       3.18946G          17.8932G                    130.317                     2.45432           229.366k    13.8105M   137.305M       57.2857M/s   45.2865M   45.9575M   7.29049G         53.0971   0.437482/s 3.18946G/s     17.8932G               130.317                2.45432   524.288k       229.366k/s [BEST: throughput=  0.06 GB/s doc_throughput=     0 docs/s instructions= 17893173008 cycles=  7290494685 branch_miss=13810480 cache_miss=45286538 cache_ref=  45957548 items=    524288 avg_time=2285810708 ns]
distinct_user_id<simdjson_dom>/manual_time                324317 ns       403463 ns         2154           3.894k           1.96527G               0        34.277k    1026.35k              1.62522          3.11199k         3.194G          2.86747M                    4.54061                     2.79384           357.879k    4.01982k   631.515k       1.81348G/s   0.272516   34.3747k   1034.74k          1.6385    3.0834k/s 3.19051G/s     2.86747M               4.54061                 2.7712        115       354.591k/s [BEST: throughput=  1.97 GB/s doc_throughput=  3111 docs/s instructions=     2867465 cycles=     1026352 branch_miss=    3894 cache_miss=       0 cache_ref=     34277 items=       115 avg_time=    324317 ns]
distinct_user_id<simdjson_ondemand>/manual_time           199130 ns       261929 ns         3515           2.037k            3.2048G               5         9.722k    629.393k              0.99664          5.07478k       3.19403G          1.82938M                    2.89681                     2.90658           583.599k    2.16473k   631.515k       2.95357G/s    4.94026   9.72274k    635.47k         1.00626   5.02184k/s 3.19123G/s     1.82938M               2.89681                2.87878        115       577.512k/s [BEST: throughput=  3.20 GB/s doc_throughput=  5074 docs/s instructions=     1829381 cycles=      629393 branch_miss=    2037 cache_miss=       5 cache_ref=      9722 items=       115 avg_time=    199130 ns]
distinct_user_id<yyjson>/manual_time                      686652 ns       775922 ns         1000           6.518k           1.56702G          7.131k        27.389k    1.28696M               2.0379          2.48136k       3.19342G          2.87791M                    4.55715                      2.2362           285.356k    7.38977k   631.515k       877.096M/s   2.25626k    24.773k   1.48135M         2.34571   1.45634k/s 2.15735G/s     2.87811M               4.55746                 1.9429        115       167.479k/s [BEST: throughput=  1.57 GB/s doc_throughput=  2481 docs/s instructions=     2877909 cycles=     1286963 branch_miss=    6518 cache_miss=    7131 cache_ref=     27389 items=       115 avg_time=    686651 ns]
distinct_user_id<yyjson_insitu>/manual_time               509289 ns       581793 ns         1387           6.978k           1.81504G          1.199k         13.95k     1.1062M              1.75166           2.8741k       3.17934G           2.8776M                    4.55666                     2.60133           330.522k    7.42157k   631.515k       1.15483G/s    76.6345   9.60975k    1.2257M         1.94088   1.96352k/s 2.40668G/s     2.87786M               4.55708                2.34794        115       225.805k/s [BEST: throughput=  1.82 GB/s doc_throughput=  2874 docs/s instructions=     2877600 cycles=     1106202 branch_miss=    6978 cache_miss=    1199 cache_ref=     13950 items=       115 avg_time=    509289 ns]
distinct_user_id<sajson>/manual_time                      686071 ns       758881 ns         1017          10.597k           929.162M              36        13.477k    2.17026M              3.43659          1.47132k       3.19315G          5.81759M                    9.21211                     2.68059           169.202k    10.8509k   631.515k       877.838M/s    18.5054   13.3912k   2.18858M         3.46561   1.45757k/s 3.19002G/s     5.81759M               9.21211                2.65815        115       167.621k/s [BEST: throughput=  0.93 GB/s doc_throughput=  1471 docs/s instructions=     5817587 cycles=     2170261 branch_miss=   10597 cache_miss=      36 cache_ref=     13477 items=       115 avg_time=    686071 ns]
distinct_user_id<rapidjson>/manual_time                  2543861 ns      2618425 ns          276          32.575k           278.218M             385        23.258k    7.24705M              11.4757           440.556       3.19273G          21.8231M                    34.5567                      3.0113           50.6639k    34.7513k   631.515k        236.75M/s    781.384   13.0674k   7.45427M         11.8038    393.103/s  2.9303G/s     21.8241M               34.5583                2.92773        115       45.2069k/s [BEST: throughput=  0.28 GB/s doc_throughput=   440 docs/s instructions=    21823061 cycles=     7247050 branch_miss=   32575 cache_miss=     385 cache_ref=     23258 items=       115 avg_time=   2543861 ns]
distinct_user_id<rapidjson_insitu>/manual_time           1874993 ns      1947701 ns          372           25.13k            375.85M          2.111k        15.612k     5.3648M              8.49512           595.157       3.19289G          13.2543M                    20.9882                     2.47062            68.443k    35.6864k   631.515k       321.206M/s   1.93937k   12.0912k   5.68004M         8.99431    533.335/s 3.02937G/s     13.2544M               20.9883                 2.3335        115       61.3336k/s [BEST: throughput=  0.38 GB/s doc_throughput=   595 docs/s instructions=    13254349 cycles=     5364797 branch_miss=   25130 cache_miss=    2111 cache_ref=     15612 items=       115 avg_time=   1874992 ns]
distinct_user_id<nlohmann_json>/manual_time              9358655 ns      9450557 ns           74         127.203k           70.7224M             965        99.368k    28.4732M              45.0872           111.989       3.18868G          76.3324M                    120.872                     2.68085           12.8787k    139.825k   631.515k       64.3532M/s    169.068   106.653k   29.8472M         47.2628    106.853/s 3.18926G/s     75.0192M               118.792                2.51344        115       12.2881k/s [BEST: throughput=  0.07 GB/s doc_throughput=   111 docs/s instructions=    76332437 cycles=    28473247 branch_miss=  127203 cache_miss=     965 cache_ref=     99368 items=       115 avg_time=   9358655 ns]
find_tweet<simdjson_dom>/manual_time                      307837 ns       384408 ns         2272           3.678k           2.06887G               0        30.924k     974.87k               1.5437          3.27604k       3.19371G          2.78229M                    4.40574                     2.85401           3.27604k    3.73171k   631.515k       1.91057G/s   0.230634   30.9189k   982.313k         1.55549   3.24847k/s 3.19102G/s     2.78229M               4.40574                2.83239          1       3.24847k/s [BEST: throughput=  2.07 GB/s doc_throughput=  3276 docs/s instructions=     2782291 cycles=      974870 branch_miss=    3678 cache_miss=       0 cache_ref=     30924 items=         1 avg_time=    307836 ns]
find_tweet<simdjson_ondemand>/manual_time                 133403 ns       198780 ns         5240              978           4.77722G               0         7.753k    422.346k             0.668782           7.5647k       3.19492G          1.32079M                    2.09146                     3.12727            7.5647k     1028.46   631.515k       4.40879G/s  0.0194656   7.81289k   425.801k        0.674253   7.49611k/s 3.19185G/s     1.32079M               2.09146                3.10189          1       7.49611k/s [BEST: throughput=  4.78 GB/s doc_throughput=  7564 docs/s instructions=     1320790 cycles=      422346 branch_miss=     978 cache_miss=       0 cache_ref=      7753 items=         1 avg_time=    133402 ns]
find_tweet<yyjson>/manual_time                            770336 ns       857196 ns          972           9.391k           1.49993G             236        27.283k    1.34484M              2.12954          2.37513k       3.19416G          2.81716M                    4.46096                      2.0948           2.37513k    7.34145k   631.515k       781.814M/s    356.815   20.3057k    1.4951M         2.36748   1.29813k/s 1.94084G/s     2.81785M               4.46204                1.88473          1       1.29813k/s [BEST: throughput=  1.50 GB/s doc_throughput=  2375 docs/s instructions=     2817163 cycles=     1344839 branch_miss=    9391 cache_miss=     236 cache_ref=     27283 items=         1 avg_time=    770336 ns]
find_tweet<yyjson_insitu>/manual_time                     493845 ns       559839 ns         1418           7.224k           1.85495G             122        14.468k    1087.46k              1.72199           2.9373k        3.1942G          2.81705M                    4.46077                     2.59047            2.9373k    7.16985k   631.515k       1.19095G/s    7.29619   6.04751k   1.17713M         1.86397   2.02493k/s  2.3836G/s     2.81731M               4.46119                2.39338          1       2.02493k/s [BEST: throughput=  1.85 GB/s doc_throughput=  2937 docs/s instructions=     2817045 cycles=     1087463 branch_miss=    7224 cache_miss=     122 cache_ref=     14468 items=         1 avg_time=    493844 ns]
find_tweet<sajson>/manual_time                            674593 ns       745760 ns         1036           10.45k           946.447M               0        13.079k    2.13056M              3.37373          1.49869k       3.19306G          5.72247M                    9.06149                     2.68589           1.49869k    10.7964k   631.515k       892.774M/s    2.78089   13.0215k   2.15202M         3.40771   1.48237k/s  3.1901G/s     5.72247M               9.06149                2.65911          1       1.48237k/s [BEST: throughput=  0.95 GB/s doc_throughput=  1498 docs/s instructions=     5722466 cycles=     2130564 branch_miss=   10450 cache_miss=       0 cache_ref=     13079 items=         1 avg_time=    674593 ns]
find_tweet<rapidjson>/manual_time                        2536572 ns      2606004 ns          277          32.722k           279.783M          7.509k        21.263k    7.20646M              11.4114           443.034       3.19271G          21.7396M                    34.4246                     3.01669            443.034    35.9827k   631.515k       237.431M/s    609.585   9.65047k   7.43002M         11.7654    394.233/s 2.92916G/s     21.7403M               34.4257                2.92601          1        394.233/s [BEST: throughput=  0.28 GB/s doc_throughput=   443 docs/s instructions=    21739624 cycles=     7206460 branch_miss=   32722 cache_miss=    7509 cache_ref=     21263 items=         1 avg_time=   2536571 ns]
find_tweet<rapidjson_insitu>/manual_time                 1853351 ns      1921580 ns          377           25.25k           379.369M             201        14.198k     5.3148M              8.41595           600.728       3.19275G          13.1751M                    20.8627                     2.47895            600.728      34.89k   631.515k       324.957M/s   1.73388k   9.19965k   5.61003M         8.88345    539.563/s 3.02697G/s     13.1756M               20.8635                2.34858          1        539.563/s [BEST: throughput=  0.38 GB/s doc_throughput=   600 docs/s instructions=    13175101 cycles=     5314799 branch_miss=   25250 cache_miss=     201 cache_ref=     14198 items=         1 avg_time=   1853351 ns]
find_tweet<nlohmann_json>/manual_time                    8153165 ns      8242901 ns           89         100.811k            82.146M             843        76.704k    24.5247M              38.8348           130.078       3.19012G           66.458M                    105.236                     2.70983            130.078    114.177k   631.515k       73.8682M/s    140.955   81.6623k   26.0034M         41.1761    122.652/s 3.18936G/s     65.1035M               103.091                2.50366          1        122.652/s [BEST: throughput=  0.08 GB/s doc_throughput=   130 docs/s instructions=    66457988 cycles=    24524742 branch_miss=  100811 cache_miss=     843 cache_ref=     76704 items=         1 avg_time=   8153164 ns]
top_tweet<simdjson_dom>/manual_time                       316025 ns       397616 ns         2219           3.783k           2.01697G               0        33.421k    999.958k              1.58343          3.19386k       3.19372G          2.81918M                    4.46415                      2.8193           3.19386k    3.86082k   631.515k       1.86107G/s    26.4876   33.5382k   1008.28k          1.5966   3.16431k/s  3.1905G/s     2.81918M               4.46415                2.79604          1       3.16431k/s [BEST: throughput=  2.02 GB/s doc_throughput=  3193 docs/s instructions=     2819178 cycles=      999958 branch_miss=    3783 cache_miss=       0 cache_ref=     33421 items=         1 avg_time=    316024 ns]
top_tweet<simdjson_ondemand>/manual_time                  184201 ns       251153 ns         3792           2.086k           3.46191G               2         9.777k    582.751k             0.922783          5.48192k       3.19459G          1.84358M                     2.9193                     3.16358           5.48192k    2.18391k   631.515k       3.19296G/s    1.97178   9.78587k   587.856k        0.930866   5.42887k/s 3.19139G/s     1.84358M                2.9193                3.13611          1       5.42887k/s [BEST: throughput=  3.46 GB/s doc_throughput=  5481 docs/s instructions=     1843579 cycles=      582751 branch_miss=    2086 cache_miss=       2 cache_ref=      9777 items=         1 avg_time=    184200 ns]
top_tweet<simdjson_ondemand_forward_only>/manual_time     187059 ns       254929 ns         3737           2.129k           3.42537G               0        10.482k    588.909k             0.932534          5.42405k       3.19427G          1.85914M                    2.94394                     3.15693           5.42405k    2.33484k   631.515k       3.14416G/s    1.96227   10.5151k   596.941k        0.945253    5.3459k/s 3.19119G/s     1.85914M               2.94394                3.11445          1        5.3459k/s [BEST: throughput=  3.43 GB/s doc_throughput=  5424 docs/s instructions=     1859144 cycles=      588909 branch_miss=    2129 cache_miss=       0 cache_ref=     10482 items=         1 avg_time=    187059 ns]
top_tweet<yyjson>/manual_time                             780712 ns       871521 ns          968           9.367k           1.48356G             254        27.373k    1.35951M              2.15278          2.34921k       3.19378G          2.84444M                    4.50415                     2.09225           2.34921k    7.49208k   631.515k       771.424M/s    401.423   22.7133k   1.52765M         2.41902   1.28088k/s 1.95674G/s     2.84512M               4.50523                1.86242          1       1.28088k/s [BEST: throughput=  1.48 GB/s doc_throughput=  2349 docs/s instructions=     2844438 cycles=     1359513 branch_miss=    9367 cache_miss=     254 cache_ref=     27373 items=         1 avg_time=    780711 ns]
top_tweet<yyjson_insitu>/manual_time                      503101 ns       575298 ns         1000           6.873k           1.83939G          1.224k        13.625k    1091.55k              1.72846          2.91266k       3.17931G          2.84411M                    4.50364                     2.60558           2.91266k    7.30174k   631.515k       1.16904G/s     54.645   8.38321k    1.2071M         1.91144   1.98767k/s 2.39933G/s     2.84438M               4.50405                2.35636          1       1.98767k/s [BEST: throughput=  1.84 GB/s doc_throughput=  2912 docs/s instructions=     2844114 cycles=     1091549 branch_miss=    6873 cache_miss=    1224 cache_ref=     13625 items=         1 avg_time=    503100 ns]
top_tweet<sajson>/manual_time                             678574 ns       753853 ns         1030          10.625k           939.911M               5        13.284k    2.14538M              3.39719          1.48834k       3.19306G          5.75246M                    9.10898                     2.68133           1.48834k    10.8331k   631.515k       887.537M/s    4.17379   13.3283k    2.1646M         3.42764   1.47368k/s 3.18993G/s     5.75246M               9.10898                2.65751          1       1.47368k/s [BEST: throughput=  0.94 GB/s doc_throughput=  1488 docs/s instructions=     5752458 cycles=     2145378 branch_miss=   10625 cache_miss=       5 cache_ref=     13284 items=         1 avg_time=    678574 ns]
top_tweet<rapidjson>/manual_time                         2538996 ns      2613756 ns          277          32.573k            277.97M         12.272k        22.269k    7.25338M              11.4857           440.163       3.19267G          21.7974M                     34.516                     3.00513            440.163    33.9813k   631.515k       237.204M/s    699.588   11.2713k   7.43924M           11.78    393.856/s 2.92999G/s     21.7982M               34.5173                2.93016          1        393.856/s [BEST: throughput=  0.28 GB/s doc_throughput=   440 docs/s instructions=    21797353 cycles=     7253382 branch_miss=   32573 cache_miss=   12272 cache_ref=     22269 items=         1 avg_time=   2538995 ns]
top_tweet<rapidjson_insitu>/manual_time                  1865626 ns      1939639 ns          374           25.04k            375.44M          7.055k        14.431k    5.37055M              8.50424           594.507       3.19283G          13.2291M                    20.9481                     2.46326            594.507    34.7386k   631.515k       322.819M/s   1.86705k   10.8945k   5.65014M         8.94696    536.013/s 3.02855G/s     13.2293M               20.9486                2.34142          1        536.013/s [BEST: throughput=  0.38 GB/s doc_throughput=   594 docs/s instructions=    13229069 cycles=     5370553 branch_miss=   25040 cache_miss=    7055 cache_ref=     14431 items=         1 avg_time=   1865626 ns]
top_tweet<nlohmann_json>/manual_time                    11014839 ns     11107634 ns           64          191.58k           57.7135M             237       165.735k    34.9088M              55.2779           91.3889       3.19028G          88.3688M                    139.931                     2.53142            91.3889    195.803k   631.515k       54.6771M/s    257.297    165.14k    35.129M         55.6265    90.7866/s 3.18924G/s     88.7522M               140.538                2.52647          1        90.7866/s [BEST: throughput=  0.06 GB/s doc_throughput=    91 docs/s instructions=    88368813 cycles=    34908831 branch_miss=  191580 cache_miss=     237 cache_ref=    165735 items=         1 avg_time=  11014839 ns]
