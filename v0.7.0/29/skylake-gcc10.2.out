run_benchmark: v0.8.0~9 /home/jkeiser/simdjson_benchmark_results/v0.7.0/29/skylake-gcc10.2.json -DCMAKE_BUILD_TYPE=Release
git reset --hard v0.8.0~9
HEAD is now at 3849cc40 Merge pull request #1372 from simdjson/jkeiser/ondemand-sajson
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- git Version: v0.2.1-3849cc40
-- Version: 0.2.1
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 11
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
make[3]: Nothing to be done for '_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build'.
[ 72%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
make[3]: Nothing to be done for 'jsonexamples/generated/CMakeFiles/generated-data.dir/build'.
[ 72%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/g++-10  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/src  -O3 -DNDEBUG -fPIC   -pthread -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/g++-10 -fPIC -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.6 -o ../libsimdjson.so.6.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.6.0.0 ../libsimdjson.so.6 ../libsimdjson.so
[ 81%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
make[3]: Nothing to be done for 'dependencies/CMakeFiles/yyjson.dir/build'.
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/g++-10  -DRAPIDJSON_HAS_STDSTRING -DSAJSON_UNSORTED_OBJECT_KEYS -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_COMPETITION_NLOHMANN_JSON -DSIMDJSON_COMPETITION_RAPIDJSON -DSIMDJSON_COMPETITION_SAJSON -DSIMDJSON_COMPETITION_YYJSON -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/rapidjson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/sajson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/json  -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/g++-10  -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.6.0.0 ../_deps/google_benchmarks/src/libbenchmark.a ../dependencies/libyyjson.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/29/skylake-gcc10.2.json --benchmark_out_format=json
2021-01-25 00:00:33
Running benchmark/bench_ondemand
Run on (4 X 4000 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 256 KiB (x4)
  L3 Unified 8192 KiB (x1)
Load Average: 1.01, 1.02, 1.00
simdjson::dom implementation:      haswell
simdjson::ondemand implementation: fallback

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                  264032 ns       292823 ns         2651           3.871k           2.40662G               0        93.062k    968.943k              1.53432          3.81087k       3.69252G           2.9625M                     4.6911                     3.05746           381.087k    4.01699k   631.515k       2.22755G/s     1.1026   93.0393k   974.376k         1.54292   3.78743k/s 3.69038G/s      2.9625M                4.6911                3.04041        100       378.743k/s [BEST: throughput=  2.41 GB/s doc_throughput=  3810 docs/s instructions=     2962503 cycles=      968943 branch_miss=    3871 cache_miss=       0 cache_ref=     93062 items=       100 avg_time=    264031 ns]
partial_tweets<simdjson_ondemand>/manual_time             197324 ns       225969 ns         3547           2.237k           3.22466G               0        59.075k    723.226k              1.14522          5.10624k       3.69296G          2.46251M                    3.89938                      3.4049           510.624k    2.36988k   631.515k        2.9806G/s   0.447702   59.1555k   728.252k         1.15318   5.06781k/s 3.69064G/s     2.46252M               3.89938                 3.3814        100       506.781k/s [BEST: throughput=  3.22 GB/s doc_throughput=  5106 docs/s instructions=     2462515 cycles=      723226 branch_miss=    2237 cache_miss=       0 cache_ref=     59075 items=       100 avg_time=    197323 ns]
partial_tweets<yyjson>/manual_time                        689230 ns       720217 ns         1015            9.79k           1.58409G             304        78.895k    1.47193M              2.33079           2.5084k        3.6922G          2.90835M                    4.60536                     1.97588            250.84k    7.61629k   631.515k       873.815M/s    950.532   51.3576k   1.69377M         2.68207   1.45089k/s 2.45748G/s     2.90884M               4.60613                1.71738        100       145.089k/s [BEST: throughput=  1.58 GB/s doc_throughput=  2508 docs/s instructions=     2908354 cycles=     1471931 branch_miss=    9790 cache_miss=     304 cache_ref=     78895 items=       100 avg_time=    689229 ns]
partial_tweets<yyjson_insitu>/manual_time                 479005 ns       508516 ns         1462           7.047k           1.77502G             530        48.023k    1.30725M              2.07002          2.81073k       3.67433G          2.90804M                    4.60486                     2.22455           281.073k    7.42633k   631.515k       1.22784G/s    134.253   33.4939k   1.42076M         2.24976   2.08766k/s 2.96605G/s      2.9083M               4.60528                2.04701        100       208.766k/s [BEST: throughput=  1.78 GB/s doc_throughput=  2810 docs/s instructions=     2908039 cycles=     1307250 branch_miss=    7047 cache_miss=     530 cache_ref=     48023 items=       100 avg_time=    479005 ns]
partial_tweets<sajson>/manual_time                        540818 ns       569639 ns         1294          10.302k           1.18119G               8        48.476k    1.97388M              3.12563          1.87041k       3.69197G          6.05184M                    9.58305                     3.06595           187.041k    10.9075k   631.515k       1113.61M/s    1.18161   48.4341k   1.99544M         3.15976   1.84905k/s 3.68966G/s     6.05184M               9.58305                3.03284        100       184.905k/s [BEST: throughput=  1.18 GB/s doc_throughput=  1870 docs/s instructions=     6051839 cycles=     1973884 branch_miss=   10302 cache_miss=       8 cache_ref=     48476 items=       100 avg_time=    540817 ns]
partial_tweets<rapidjson>/manual_time                    1499504 ns      1528729 ns          481          27.302k           486.382M         16.637k        55.101k     4.7932M                 7.59           770.183       3.69164G          13.4092M                    21.2334                     2.79755           77.0183k    27.5502k   631.515k       401.639M/s    472.715   34.1921k   4.94275M         7.82681    666.887/s 3.29625G/s     13.4101M               21.2348                2.71309        100       66.6887k/s [BEST: throughput=  0.49 GB/s doc_throughput=   770 docs/s instructions=    13409227 cycles=     4793201 branch_miss=   27302 cache_miss=   16637 cache_ref=     55101 items=       100 avg_time=   1499504 ns]
partial_tweets<rapidjson_insitu>/manual_time              994757 ns      1023976 ns          708          25.453k           725.216M              33        45.361k    3.21485M              5.09069          1.14837k       3.69185G          9.75453M                    15.4462                     3.03421           114.837k    25.6453k   631.515k       605.434M/s    215.273    35.648k   3.32241M         5.26102    1005.27/s 3.33992G/s     9.75514M               15.4472                2.93616        100       100.527k/s [BEST: throughput=  0.73 GB/s doc_throughput=  1148 docs/s instructions=     9754528 cycles=     3214850 branch_miss=   25453 cache_miss=      33 cache_ref=     45361 items=       100 avg_time=    994756 ns]
partial_tweets<nlohmann_json>/manual_time                7610203 ns      7645578 ns           92         136.139k           85.7782M              39       238.382k    27.1619M              43.0107           135.829       3.68938G          71.2201M                    112.777                     2.62206           13.5829k    147.545k   631.515k       79.1384M/s    69.7935   365.571k   28.0706M         44.4496    131.403/s 3.68854G/s     71.7376M               113.596                2.55561        100       13.1403k/s [BEST: throughput=  0.09 GB/s doc_throughput=   135 docs/s instructions=    71220073 cycles=    27161884 branch_miss=  136139 cache_miss=      39 cache_ref=    238382 items=       100 avg_time=   7610203 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                  92239074 ns     95626084 ns            8         869.217k           499.471M         10.888M       15.3915M    339.738M              7.38581           10.8583       3.68899G          983.113M                    21.3726                     2.89374           10.8583M    869.489k   45.9988M       475.589M/s   10.9312M   15.3777M    340.12M         7.39411    10.8414/s 3.68737G/s     983.113M               21.3726                2.89049      1000k       10.8414M/s [BEST: throughput=  0.50 GB/s doc_throughput=    10 docs/s instructions=   983112701 cycles=   339738003 branch_miss=  869217 cache_miss=10888023 cache_ref=  15391498 items=   1000000 avg_time=  92239073 ns]
large_random<simdjson_ondemand>/manual_time             56420619 ns     59789464 ns           12         865.115k           816.577M        5.64526M       8.00076M    207.808M              4.51768           17.7522       3.68904G           641.49M                    13.9458                     3.08694           17.7522M     868.79k   45.9988M       777.515M/s   5.65768M   8.00036M   208.093M         4.52389     17.724/s 3.68825G/s      641.49M               13.9458                 3.0827      1000k        17.724M/s [BEST: throughput=  0.82 GB/s doc_throughput=    17 docs/s instructions=   641489886 cycles=   207807964 branch_miss=  865115 cache_miss= 5645257 cache_ref=   8000763 items=   1000000 avg_time=  56420619 ns]
large_random<simdjson_ondemand_unordered>/manual_time   62964076 ns     66338822 ns           11         885.072k           731.471M        5.62301M       8.00935M    231.954M              5.04261            15.902       3.68853G           646.49M                    14.0545                     2.78715            15.902M    886.239k   45.9988M       696.712M/s   5.66396M   8.01181M   232.235M         5.04872    15.8821/s 3.68838G/s      646.49M               14.0545                2.78377      1000k       15.8821M/s [BEST: throughput=  0.73 GB/s doc_throughput=    15 docs/s instructions=   646489797 cycles=   231953943 branch_miss=  885072 cache_miss= 5623012 cache_ref=   8009353 items=   1000000 avg_time=  62964075 ns]
large_random<yyjson>/manual_time                       127465455 ns    130867839 ns            5         663.331k           361.348M        5.83554M       9.03667M    349.848M               7.6056           7.85559       2.74827G          944.149M                    20.5255                     2.69874           7.85559M    663.004k   45.9988M       344.155M/s    5.8314M   9.01785M   350.307M         7.61556    7.84526/s 2.74825G/s     944.149M               20.5255                2.69521      1000k       7.84526M/s [BEST: throughput=  0.36 GB/s doc_throughput=     7 docs/s instructions=   944149406 cycles=   349848372 branch_miss=  663331 cache_miss= 5835537 cache_ref=   9036666 items=   1000000 avg_time= 127465455 ns]
large_random<yyjson_insitu>/manual_time                109482176 ns    112901940 ns            6         659.939k           420.407M        4.94193M       7.66976M    318.228M              6.91819           9.13952       2.90845G          938.029M                    20.3925                     2.94766           9.13952M    662.264k   45.9988M       400.685M/s   4.94477M    7.6721M   318.414M         6.92222    9.13391/s 2.90836G/s     938.029M               20.3925                2.94594      1000k       9.13391M/s [BEST: throughput=  0.42 GB/s doc_throughput=     9 docs/s instructions=   938028851 cycles=   318228170 branch_miss=  659939 cache_miss= 4941932 cache_ref=   7669759 items=   1000000 avg_time= 109482176 ns]
large_random<sajson>/manual_time                        95186256 ns     98591769 ns            7          589.23k           484.242M        8.29365M        12.199M    350.399M              7.61758           10.5273       3.68876G          1099.99M                    23.9134                     3.13924           10.5273M    589.582k   45.9988M       460.863M/s   8.32149M   12.0972M   351.125M         7.63336    10.5057/s 3.68882G/s     1099.99M               23.9134                3.13275      1000k       10.5057M/s [BEST: throughput=  0.48 GB/s doc_throughput=    10 docs/s instructions=  1099987674 cycles=   350399430 branch_miss=  589230 cache_miss= 8293649 cache_ref=  12198980 items=   1000000 avg_time=  95186256 ns]
large_random<rapidjson>/manual_time                    172504608 ns    175864850 ns            4         593.176k           278.244M        6.98671M       10.8548M    551.786M              11.9957           6.04894       3.33772G          1.66014G                     36.091                     3.00867           6.04894M    594.342k   45.9988M         254.3M/s   6.43589M   10.1163M   556.615M         12.1006    5.79695/s 3.22667G/s     1.66015G               36.0912                2.98259      1000k       5.79695M/s [BEST: throughput=  0.28 GB/s doc_throughput=     6 docs/s instructions=  1660142513 cycles=   551786461 branch_miss=  593176 cache_miss= 6986706 cache_ref=  10854785 items=   1000000 avg_time= 172504608 ns]
large_random<rapidjson_lossless>/manual_time           199713291 ns    203143844 ns            4         602.084k           238.355M        6.98549M       10.8505M    653.766M              14.2127           5.18178       3.38767G          2.02311G                    43.9818                     3.09455           5.18178M    600.273k   45.9988M       219.654M/s   6.40528M   10.1145M   657.618M         14.2964    5.00718/s 3.29281G/s     2.02312G                43.982                3.07644      1000k       5.00718M/s [BEST: throughput=  0.24 GB/s doc_throughput=     5 docs/s instructions=  2023109433 cycles=   653765988 branch_miss=  602084 cache_miss= 6985487 cache_ref=  10850472 items=   1000000 avg_time= 199713291 ns]
large_random<rapidjson_insitu>/manual_time             161319447 ns    164715478 ns            5         587.227k           299.114M        8.12338M       12.3799M    508.517M               11.055           6.50265       3.30671G          1.49214G                    32.4387                      2.9343           6.50265M    587.678k   45.9988M       271.932M/s   7.49828M   11.5877M    514.49M         11.1849    6.19888/s 3.18926G/s     1.49215G               32.4389                2.90025      1000k       6.19888M/s [BEST: throughput=  0.30 GB/s doc_throughput=     6 docs/s instructions=  1492139994 cycles=   508517257 branch_miss=  587227 cache_miss= 8123384 cache_ref=  12379918 items=   1000000 avg_time= 161319446 ns]
large_random<nlohmann_json>/manual_time               1223105200 ns   1226546440 ns            1         4.51831M           37.6082M        46.6252M       60.8664M     4.4995G              97.8177          0.817591       3.67875G          11.9944G                    260.754                     2.66571           817.591k    4.51831M   45.9988M        35.866M/s   46.6252M   60.8664M    4.4995G         97.8177   0.817591/s 3.67875G/s     11.9944G               260.754                2.66571      1000k       817.591k/s [BEST: throughput=  0.04 GB/s doc_throughput=     0 docs/s instructions= 11994361898 cycles=  4499495532 branch_miss= 4518307 cache_miss=46625201 cache_ref=  60866434 items=   1000000 avg_time=1223105200 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                        85821174 ns     96022172 ns            8         461.974k           1.60219G        15.5992M       22.2126M    316.114M              2.30228           11.6688       3.68869G          945.501M                    6.88614                     2.99101           6.11784M    461.696k   137.305M       1.49002G/s   15.5791M   22.1422M   316.537M         2.30535    11.6521/s 3.68833G/s     945.501M               6.88614                2.98702   524.288k       6.10908M/s [BEST: throughput=  1.60 GB/s doc_throughput=    11 docs/s instructions=   945501401 cycles=   316114055 branch_miss=  461974 cache_miss=15599154 cache_ref=  22212616 items=    524288 avg_time=  85821174 ns]
kostya<simdjson_ondemand>/manual_time                   58283094 ns     68440777 ns           12         474.541k           2.35965G        9.94599M       13.9094M     214.67M              1.56345           17.1854       3.68919G          676.738M                    4.92872                     3.15246           9.01012M    475.588k   137.305M       2.19404G/s   9.95693M   13.8454M   214.973M         1.56566    17.1576/s 3.68844G/s     676.738M               4.92872                3.14801   524.288k       8.99554M/s [BEST: throughput=  2.36 GB/s doc_throughput=    17 docs/s instructions=   676737594 cycles=   214669643 branch_miss=  474541 cache_miss= 9945994 cache_ref=  13909399 items=    524288 avg_time=  58283093 ns]
kostya<yyjson>/manual_time                             206697666 ns    216919377 ns            3         416.787k           665.013M        11.2614M       16.0812M    564.489M              4.11121           4.84333       2.73401G          984.045M                    7.16686                     1.74325            2.5393M    415.321k   137.305M       633.506M/s   11.2559M   16.0635M   564.478M         4.11112    4.83798/s 2.73093G/s     984.045M               7.16686                1.74328   524.288k        2.5365M/s [BEST: throughput=  0.67 GB/s doc_throughput=     4 docs/s instructions=   984045273 cycles=   564489437 branch_miss=  416787 cache_miss=11261385 cache_ref=  16081206 items=    524288 avg_time= 206697666 ns]
kostya<yyjson_insitu>/manual_time                      152358086 ns    162595509 ns            5         412.772k           901.543M         8.7408M       12.1534M    467.037M              3.40145           6.56599       3.06656G          965.776M                     7.0338                     2.06788           3.44247M    414.078k   137.305M       859.451M/s   8.74175M   12.1713M   466.983M         3.40107    6.56348/s 3.06504G/s     965.776M                7.0338                2.06812   524.288k       3.44116M/s [BEST: throughput=  0.90 GB/s doc_throughput=     6 docs/s instructions=   965775582 cycles=   467036702 branch_miss=  412772 cache_miss= 8740804 cache_ref=  12153406 items=    524288 avg_time= 152358085 ns]
kostya<sajson>/manual_time                             136879569 ns    147133776 ns            5         380.714k           1006.14M        12.3426M       17.1846M    503.326M              3.66575           7.32778       3.68826G          1.62034G                    11.8011                     3.21927           3.84187M    381.473k   137.305M       956.638M/s   12.3479M    17.207M   504.823M         3.67665    7.30569/s 3.68808G/s     1.62034G               11.8011                3.20973   524.288k       3.83029M/s [BEST: throughput=  1.01 GB/s doc_throughput=     7 docs/s instructions=  1620343200 cycles=   503325807 branch_miss=  380714 cache_miss=12342645 cache_ref=  17184553 items=    524288 avg_time= 136879568 ns]
kostya<rapidjson>/manual_time                          237376292 ns    247638073 ns            3         1039.15k             586.3M        8.11231M       11.9852M    782.852M              5.70156           4.27005       3.34282G          2.29873G                    16.7418                     2.93635           2.23874M    1037.05k   137.305M       551.632M/s   7.81525M   11.6626M   785.111M         5.71801    4.21272/s 3.30745G/s     2.29873G               16.7418                2.92791   524.288k       2.20868M/s [BEST: throughput=  0.59 GB/s doc_throughput=     4 docs/s instructions=  2298729684 cycles=   782852483 branch_miss= 1039154 cache_miss= 8112314 cache_ref=  11985158 items=    524288 avg_time= 237376292 ns]
kostya<rapidjson_lossless>/manual_time                 251593364 ns    261870375 ns            3         964.275k           553.019M        8.11173M       12.1406M    834.278M               6.0761           4.02767        3.3602G          2.50529G                    18.2462                     3.00294           2.11166M    964.157k   137.305M        520.46M/s   7.81766M   11.7649M   837.122M         6.09681    3.97467/s 3.32728G/s     2.50529G               18.2462                2.99274   524.288k       2.08387M/s [BEST: throughput=  0.55 GB/s doc_throughput=     4 docs/s instructions=  2505290623 cycles=   834278215 branch_miss=  964275 cache_miss= 8111730 cache_ref=  12140566 items=    524288 avg_time= 251593364 ns]
kostya<rapidjson_insitu>/manual_time                   219086667 ns    229338577 ns            3         994.878k           636.124M        11.1572M        15.668M     715.09M              5.20804           4.63293       3.31296G          2.03228G                    14.8012                     2.84198           2.42899M    993.969k   137.305M       597.682M/s   10.8584M   15.2843M   717.734M          5.2273     4.5644/s 3.27603G/s     2.03228G               14.8012                2.83152   524.288k       2.39306M/s [BEST: throughput=  0.64 GB/s doc_throughput=     4 docs/s instructions=  2032275216 cycles=   715090090 branch_miss=  994878 cache_miss=11157160 cache_ref=  15667952 items=    524288 avg_time= 219086667 ns]
kostya<nlohmann_json>/manual_time                     1562575578 ns   1572650496 ns            1         3.82684M           87.8709M        69.0059M       86.4676M    5.76339G              41.9751          0.639969       3.68839G          15.1623G                    110.428                     2.63079           335.528k    3.82684M   137.305M       83.8003M/s   69.0059M   86.4676M   5.76339G         41.9751   0.639969/s 3.68839G/s     15.1623G               110.428                2.63079   524.288k       335.528k/s [BEST: throughput=  0.09 GB/s doc_throughput=     0 docs/s instructions= 15162257691 cycles=  5763385715 branch_miss= 3826841 cache_miss=69005930 cache_ref=  86467597 items=    524288 avg_time=1562575578 ns]
distinct_user_id<simdjson_dom>/manual_time                259882 ns       291092 ns         2693           3.951k           2.44626G               2         94.29k    953.279k              1.50951          3.87364k       3.69266G          2.90343M                    4.59756                     3.04573           445.469k    4.12692k   631.515k       2.26312G/s    3.64983   94.3471k   959.054k         1.51866   3.84791k/s 3.69035G/s     2.90343M               4.59756                3.02739        115       442.509k/s [BEST: throughput=  2.45 GB/s doc_throughput=  3873 docs/s instructions=     2903430 cycles=      953279 branch_miss=    3951 cache_miss=       2 cache_ref=     94290 items=       115 avg_time=    259881 ns]
distinct_user_id<simdjson_ondemand>/manual_time           185329 ns       215668 ns         3771           2.091k           3.49048G               0        56.948k    668.143k                1.058          5.52715k       3.69293G          2.15464M                    3.41186                     3.22482           635.622k     2.2023k   631.515k       3.17351G/s   0.959692     57.07k    683.84k         1.08286    5.3958k/s 3.68986G/s     2.15464M               3.41186                 3.1508        115       620.517k/s [BEST: throughput=  3.49 GB/s doc_throughput=  5527 docs/s instructions=     2154643 cycles=      668143 branch_miss=    2091 cache_miss=       0 cache_ref=     56948 items=       115 avg_time=    185329 ns]
distinct_user_id<yyjson>/manual_time                      599235 ns       633267 ns         1000            6.61k           1.66184G             22k        76.168k    1.40306M              2.22174          2.63151k       3.69217G          2.87509M                    4.55269                     2.04915           302.624k    7.48955k   631.515k       1005.05M/s   7.24274k   57.5864k   1.61705M         2.56059   1.66879k/s 2.69852G/s     2.87529M                 4.553                1.77811        115       191.911k/s [BEST: throughput=  1.66 GB/s doc_throughput=  2631 docs/s instructions=     2875089 cycles=     1403063 branch_miss=    6610 cache_miss=   22000 cache_ref=     76168 items=       115 avg_time=    599234 ns]
distinct_user_id<yyjson_insitu>/manual_time               473105 ns       506195 ns         1481           7.101k           1.79525G             668        46.524k    1.29559M              2.05155          2.84277k       3.68306G          2.87457M                    4.55187                     2.21874           326.919k    7.58101k   631.515k       1.24316G/s    94.2221   32.1616k   1.41244M         2.23659   2.11369k/s 2.98546G/s     2.87483M               4.55228                2.03537        115       243.075k/s [BEST: throughput=  1.80 GB/s doc_throughput=  2842 docs/s instructions=     2874572 cycles=     1295586 branch_miss=    7101 cache_miss=     668 cache_ref=     46524 items=       115 avg_time=    473105 ns]
distinct_user_id<sajson>/manual_time                      536549 ns       567510 ns         1304          10.453k           1.18883G               5        48.135k    1.96116M              3.10549          1.88251k       3.69191G           5.9843M                    9.47611                     3.05141           216.489k    10.8835k   631.515k       1122.47M/s    2.54601   47.9238k   1.97942M         3.13439   1.86376k/s 3.68916G/s     5.98431M               9.47611                3.02327        115       214.333k/s [BEST: throughput=  1.19 GB/s doc_throughput=  1882 docs/s instructions=     5984305 cycles=     1961163 branch_miss=   10453 cache_miss=       5 cache_ref=     48135 items=       115 avg_time=    536548 ns]
distinct_user_id<rapidjson>/manual_time                  1437118 ns      1468234 ns          491          27.083k           508.608M             262        54.807k    4.58386M              7.25852           805.377       3.69174G          13.3496M                     21.139                     2.91231           92.6184k    27.5338k   631.515k       419.075M/s    872.405   34.6267k   4.74718M         7.51713    695.837/s 3.30326G/s     13.3504M               21.1403                2.81229        115       80.0213k/s [BEST: throughput=  0.51 GB/s doc_throughput=   805 docs/s instructions=    13349611 cycles=     4583863 branch_miss=   27083 cache_miss=     262 cache_ref=     54807 items=       115 avg_time=   1437118 ns]
distinct_user_id<rapidjson_insitu>/manual_time            970044 ns      1000169 ns          799          25.346k           729.344M              21        42.935k    3.19659M              5.06179          1.15491k       3.69179G          9.70592M                    15.3693                     3.03633           132.815k    25.4946k   631.515k       620.858M/s   2.02017k   35.3519k   3.29234M          5.2134    1030.88/s 3.39401G/s     9.70645M               15.3701                2.94819        115       118.551k/s [BEST: throughput=  0.73 GB/s doc_throughput=  1154 docs/s instructions=     9705916 cycles=     3196595 branch_miss=   25346 cache_miss=      21 cache_ref=     42935 items=       115 avg_time=    970043 ns]
distinct_user_id<nlohmann_json>/manual_time              7127309 ns      7162211 ns          102         112.544k           93.4259M          2.478k       219.513k    24.9264M              39.4707           147.939       3.68759G          66.6404M                    105.525                     2.67349            17.013k     139.19k   631.515k       84.5003M/s    1035.86   421.904k   26.2942M         41.6367    140.305/s 3.68922G/s     65.2811M               103.372                2.48272        115       16.1351k/s [BEST: throughput=  0.09 GB/s doc_throughput=   147 docs/s instructions=    66640421 cycles=    24926355 branch_miss=  112544 cache_miss=    2478 cache_ref=    219513 items=       115 avg_time=   7127309 ns]
find_tweet<simdjson_dom>/manual_time                      246633 ns       275474 ns         2838           3.693k           2.57602G               0        78.324k    905.266k              1.43348          4.07912k       3.69269G          2.82239M                    4.46923                     3.11774           4.07912k    3.83438k   631.515k       2.38469G/s    1.01586   78.3607k   910.261k         1.44139   4.05461k/s 3.69075G/s     2.82239M               4.46923                3.10063          1       4.05461k/s [BEST: throughput=  2.58 GB/s doc_throughput=  4079 docs/s instructions=     2822388 cycles=      905266 branch_miss=    3693 cache_miss=       0 cache_ref=     78324 items=         1 avg_time=    246633 ns]
find_tweet<simdjson_ondemand>/manual_time                 112398 ns       140566 ns         6214              799            5.6474G               0        30.591k    413.167k             0.654247          8.94262k        3.6948G          1.50673M                     2.3859                     3.64679           8.94262k     859.612   631.515k       5.23269G/s   0.711458   30.5824k   414.999k        0.657148   8.89695k/s 3.69223G/s     1.50673M                2.3859                3.63069          1       8.89695k/s [BEST: throughput=  5.65 GB/s doc_throughput=  8942 docs/s instructions=     1506732 cycles=      413167 branch_miss=     799 cache_miss=       0 cache_ref=     30591 items=         1 avg_time=    112398 ns]
find_tweet<yyjson>/manual_time                            662858 ns       693457 ns         1106           9.683k           1.63892G             174        64.822k    1.42264M              2.25275          2.59522k       3.69207G          2.82412M                    4.47197                     1.98512           2.59522k    7.47739k   631.515k        908.58M/s    1019.97   39.4808k   1.64759M         2.60895   1.50862k/s 2.48559G/s      2.8246M               4.47274                1.71438          1       1.50862k/s [BEST: throughput=  1.64 GB/s doc_throughput=  2595 docs/s instructions=     2824118 cycles=     1422643 branch_miss=    9683 cache_miss=     174 cache_ref=     64822 items=         1 avg_time=    662858 ns]
find_tweet<yyjson_insitu>/manual_time                     462965 ns       492868 ns         1512           6.886k           1.84483G             608        35.826k    1.26078M              1.99644          2.92127k       3.68308G           2.8238M                    4.47147                     2.23972           2.92127k    7.38156k   631.515k       1.27038G/s     16.203   21.9828k   1.37719M         2.18077   2.15999k/s 2.97471G/s     2.82406M               4.47189                 2.0506          1       2.15999k/s [BEST: throughput=  1.84 GB/s doc_throughput=  2921 docs/s instructions=     2823802 cycles=     1260782 branch_miss=    6886 cache_miss=     608 cache_ref=     35826 items=         1 avg_time=    462965 ns]
find_tweet<sajson>/manual_time                            523813 ns       553309 ns         1334          10.264k           1.21742G               0        35.985k     1.9151M              3.03256          1.92778k        3.6919G          5.89219M                    9.33024                     3.07669           1.92778k    10.6917k   631.515k       1.12281G/s    1.13118   36.0497k   1.93294M          3.0608   1.90908k/s 3.69014G/s     5.89219M               9.33024                 3.0483          1       1.90908k/s [BEST: throughput=  1.22 GB/s doc_throughput=  1927 docs/s instructions=     5892186 cycles=     1915104 branch_miss=   10264 cache_miss=       0 cache_ref=     35985 items=         1 avg_time=    523812 ns]
find_tweet<rapidjson>/manual_time                        1427895 ns      1456789 ns          495           26.87k           510.984M         21.423k        47.797k    4.56237M              7.22448           809.139       3.69159G          13.2818M                    21.0316                     2.91116            809.139    27.4235k   631.515k       421.781M/s    632.125   26.7663k   4.71557M         7.46707    700.331/s 3.30246G/s     13.2824M               21.0326                2.81672          1        700.331/s [BEST: throughput=  0.51 GB/s doc_throughput=   809 docs/s instructions=    13281780 cycles=     4562366 branch_miss=   26870 cache_miss=   21423 cache_ref=     47797 items=         1 avg_time=   1427895 ns]
find_tweet<rapidjson_insitu>/manual_time                  960945 ns       990629 ns          808          25.582k           734.013M              14        34.124k    3.17621M               5.0295           1.1623k       3.69172G          9.64775M                    15.2771                     3.03751            1.1623k     25.465k   631.515k       626.737M/s   1.90771k   26.9356k   3.26297M         5.16689    1040.64/s 3.39558G/s     9.64828M                15.278                 2.9569          1        1040.64/s [BEST: throughput=  0.73 GB/s doc_throughput=  1162 docs/s instructions=     9647747 cycles=     3176206 branch_miss=   25582 cache_miss=      14 cache_ref=     34124 items=         1 avg_time=    960945 ns]
find_tweet<nlohmann_json>/manual_time                    6586010 ns      6615975 ns          120          89.286k           110.074M          2.683k        162.14k    21.1525M              33.4949           174.302       3.68693G          57.0565M                    90.3486                     2.69738            174.302    177.521k   631.515k       91.4453M/s    36.5667   335.871k   24.2978M         38.4755    151.837/s 3.68931G/s     55.6906M               88.1856                  2.292          1        151.837/s [BEST: throughput=  0.11 GB/s doc_throughput=   174 docs/s instructions=    57056526 cycles=    21152537 branch_miss=   89286 cache_miss=    2683 cache_ref=    162140 items=         1 avg_time=   6586009 ns]
