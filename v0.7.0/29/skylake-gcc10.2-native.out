run_benchmark: v0.8.0~9 /home/jkeiser/simdjson_benchmark_results/v0.7.0/29/skylake-gcc10.2-native.json -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native
git reset --hard v0.8.0~9
HEAD is now at 3849cc40 Merge pull request #1372 from simdjson/jkeiser/ondemand-sajson
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- git Version: v0.2.1-3849cc40
-- Version: 0.2.1
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 11
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
make[3]: Nothing to be done for '_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build'.
[ 72%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
make[3]: Nothing to be done for 'jsonexamples/generated/CMakeFiles/generated-data.dir/build'.
[ 72%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/g++-10  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/src  -march=native -O3 -DNDEBUG -fPIC   -pthread -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/g++-10 -fPIC -march=native -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.6 -o ../libsimdjson.so.6.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.6.0.0 ../libsimdjson.so.6 ../libsimdjson.so
[ 81%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
make[3]: Nothing to be done for 'dependencies/CMakeFiles/yyjson.dir/build'.
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/g++-10  -DRAPIDJSON_HAS_STDSTRING -DSAJSON_UNSORTED_OBJECT_KEYS -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_COMPETITION_NLOHMANN_JSON -DSIMDJSON_COMPETITION_RAPIDJSON -DSIMDJSON_COMPETITION_SAJSON -DSIMDJSON_COMPETITION_YYJSON -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/rapidjson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/sajson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/json  -march=native -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/g++-10  -march=native -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.6.0.0 ../_deps/google_benchmarks/src/libbenchmark.a ../dependencies/libyyjson.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/29/skylake-gcc10.2-native.json --benchmark_out_format=json
2021-01-25 00:14:35
Running benchmark/bench_ondemand
Run on (4 X 4000 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 256 KiB (x4)
  L3 Unified 8192 KiB (x1)
Load Average: 1.00, 1.00, 1.00
simdjson::dom implementation:      haswell
simdjson::ondemand implementation: haswell

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                  260432 ns       288683 ns         2692           3.652k           2.44024G               0         86.71k    955.581k              1.51316          3.86411k       3.69247G          2.91501M                     4.6159                     3.05051           386.411k    3.80194k   631.515k       2.25834G/s    8.19948   86.7161k   961.152k         1.52198   3.83977k/s  3.6906G/s     2.91501M                4.6159                3.03283        100       383.977k/s [BEST: throughput=  2.44 GB/s doc_throughput=  3864 docs/s instructions=     2915013 cycles=      955581 branch_miss=    3652 cache_miss=       0 cache_ref=     86710 items=       100 avg_time=    260432 ns]
partial_tweets<simdjson_ondemand>/manual_time             177548 ns       205562 ns         3941           1.672k            3.5843G               0        55.018k    650.681k              1.03035          5.67572k       3.69309G          2.14425M                    3.39541                      3.2954           567.572k    1.78874k   631.515k       3.31259G/s  0.0175082   55.0065k   655.386k          1.0378   5.63227k/s 3.69131G/s     2.14425M               3.39541                3.27174        100       563.227k/s [BEST: throughput=  3.58 GB/s doc_throughput=  5675 docs/s instructions=     2144254 cycles=      650681 branch_miss=    1672 cache_miss=       0 cache_ref=     55018 items=       100 avg_time=    177548 ns]
partial_tweets<yyjson>/manual_time                        692651 ns       723016 ns         1010           9.984k            1.5651G             555        74.254k    1.48986M              2.35919          2.47833k       3.69237G          2.90835M                    4.60536                      1.9521           247.833k    7.63014k   631.515k         869.5M/s    1003.47   49.1401k   1.70742M          2.7037   1.44373k/s 2.46506G/s     2.90884M               4.60613                1.70364        100       144.373k/s [BEST: throughput=  1.57 GB/s doc_throughput=  2478 docs/s instructions=     2908354 cycles=     1489862 branch_miss=    9984 cache_miss=     555 cache_ref=     74254 items=       100 avg_time=    692650 ns]
partial_tweets<yyjson_insitu>/manual_time                 482761 ns       511668 ns         1450           7.544k           1.74068G              38        45.069k    1.33944M                2.121          2.75636k       3.69199G          2.90804M                    4.60486                     2.17108           275.636k    7.47492k   631.515k       1.21829G/s    142.488   31.7293k    1.4367M           2.275   2.07142k/s 2.97601G/s      2.9083M               4.60528                 2.0243        100       207.142k/s [BEST: throughput=  1.74 GB/s doc_throughput=  2756 docs/s instructions=     2908037 cycles=     1339442 branch_miss=    7544 cache_miss=      38 cache_ref=     45069 items=       100 avg_time=    482760 ns]
partial_tweets<sajson>/manual_time                        585593 ns       613950 ns         1193          10.624k           1089.33M               0        45.511k    2.14028M              3.38911          1.72495k       3.69187G          6.04844M                    9.57767                     2.82601           172.495k    11.2143k   631.515k       1028.46M/s    11.1576   45.7003k   2.16084M         3.42168   1.70767k/s 3.69001G/s     6.04844M               9.57767                2.79911        100       170.767k/s [BEST: throughput=  1.09 GB/s doc_throughput=  1724 docs/s instructions=     6048442 cycles=     2140276 branch_miss=   10624 cache_miss=       0 cache_ref=     45511 items=       100 avg_time=    585593 ns]
partial_tweets<rapidjson>/manual_time                    1559076 ns      1587830 ns          450          27.281k           466.238M             254        51.368k    5.00042M              7.91814           738.284       3.69173G          13.1237M                    20.7814                     2.62453           73.8284k    27.0438k   631.515k       386.293M/s    480.829   32.5088k   5.16284M         8.17532    641.406/s 3.31147G/s     13.1246M               20.7827                2.54212        100       64.1406k/s [BEST: throughput=  0.47 GB/s doc_throughput=   738 docs/s instructions=    13123744 cycles=     5000423 branch_miss=   27281 cache_miss=     254 cache_ref=     51368 items=       100 avg_time=   1559075 ns]
partial_tweets<rapidjson_insitu>/manual_time             1049897 ns      1078494 ns          669          25.931k           682.268M             141        43.058k    3.41711M              5.41098           1080.37       3.69174G           9.8244M                    15.5569                     2.87506           108.037k    25.9475k   631.515k       573.637M/s    224.897   33.5455k   3.53109M         5.59146    952.474/s 3.36327G/s     9.82479M               15.5575                2.78237        100       95.2474k/s [BEST: throughput=  0.68 GB/s doc_throughput=  1080 docs/s instructions=     9824397 cycles=     3417113 branch_miss=   25931 cache_miss=     141 cache_ref=     43058 items=       100 avg_time=   1049897 ns]
partial_tweets<nlohmann_json>/manual_time                7636398 ns      7671787 ns           92         134.871k           85.5924M             332       235.013k    27.2206M              43.1036           135.535       3.68934G            70.76M                    112.048                     2.59951           13.5535k    146.472k   631.515k        78.867M/s    470.261   359.084k   28.1736M         44.6128    130.952/s 3.68939G/s     71.4558M                113.15                2.53627        100       13.0952k/s [BEST: throughput=  0.09 GB/s doc_throughput=   135 docs/s instructions=    70760028 cycles=    27220565 branch_miss=  134871 cache_miss=     332 cache_ref=    235013 items=       100 avg_time=   7636397 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                  97800909 ns    101185275 ns            7         961.238k           471.019M        11.0058M       15.2823M    360.251M              7.83175           10.2398       3.68891G          981.675M                    21.3413                     2.72497           10.2398M    961.212k   45.9988M       448.542M/s   11.0267M   15.2736M   360.768M           7.843    10.2249/s  3.6888G/s     981.675M               21.3413                2.72107      1000k       10.2249M/s [BEST: throughput=  0.47 GB/s doc_throughput=    10 docs/s instructions=   981674958 cycles=   360251124 branch_miss=  961238 cache_miss=11005809 cache_ref=  15282338 items=   1000000 avg_time=  97800909 ns]
large_random<simdjson_ondemand>/manual_time             58016381 ns     61378893 ns           12         858.817k           793.742M        5.69758M       7.91781M     213.78M              4.64751           17.2557       3.68893G          643.053M                    13.9798                     3.00801           17.2557M    858.584k   45.9988M       756.129M/s   5.70724M   7.91927M   214.022M         4.65278    17.2365/s 3.68899G/s     643.053M               13.9798                3.00461      1000k       17.2365M/s [BEST: throughput=  0.79 GB/s doc_throughput=    17 docs/s instructions=   643052707 cycles=   213779872 branch_miss=  858817 cache_miss= 5697576 cache_ref=   7917812 items=   1000000 avg_time=  58016380 ns]
large_random<simdjson_ondemand_unordered>/manual_time   62014414 ns     65410833 ns           11         875.863k           742.263M        5.67794M       7.92128M    228.606M              4.96982           16.1366       3.68891G          644.053M                    14.0015                     2.81731           16.1366M    875.773k   45.9988M       707.382M/s   5.73282M   7.92235M   228.749M         4.97294    16.1253/s 3.68865G/s     644.053M               14.0015                2.81554      1000k       16.1253M/s [BEST: throughput=  0.74 GB/s doc_throughput=    16 docs/s instructions=   644052614 cycles=   228605795 branch_miss=  875863 cache_miss= 5677942 cache_ref=   7921281 items=   1000000 avg_time=  62014414 ns]
large_random<yyjson>/manual_time                       127136979 ns    130552917 ns            5         662.967k           362.137M          5.952M       9.11417M     348.92M              7.58542           7.87276       2.74696G           942.15M                    20.4821                     2.70019           7.87276M    662.971k   45.9988M       345.044M/s   5.96553M   9.09116M   349.118M         7.58973    7.86553/s   2.746G/s     942.149M               20.4821                2.69865      1000k       7.86553M/s [BEST: throughput=  0.36 GB/s doc_throughput=     7 docs/s instructions=   942149609 cycles=   348920093 branch_miss=  662967 cache_miss= 5952003 cache_ref=   9114175 items=   1000000 avg_time= 127136978 ns]
large_random<yyjson_insitu>/manual_time                109378014 ns    112798022 ns            6         660.265k           420.726M        5.05462M       7.72113M    317.727M              6.90729           9.14647       2.90608G          936.029M                     20.349                     2.94602           9.14647M    663.239k   45.9988M       401.066M/s   5.06021M   7.72662M   317.906M         6.91118    9.14261/s 2.90649G/s     936.029M                20.349                2.94436      1000k       9.14261M/s [BEST: throughput=  0.42 GB/s doc_throughput=     9 docs/s instructions=   936028643 cycles=   317726788 branch_miss=  660265 cache_miss= 5054621 cache_ref=   7721134 items=   1000000 avg_time= 109378014 ns]
large_random<sajson>/manual_time                        87501765 ns     90891507 ns            8         621.723k           526.444M        8.43122M        12.166M    322.336M               7.0075           11.4447       3.68905G          1066.99M                    23.1961                     3.31018           11.4447M     621.83k   45.9988M       501.337M/s   8.44225M     12.17M   322.798M         7.01754    11.4283/s 3.68905G/s     1066.99M               23.1961                3.30545      1000k       11.4283M/s [BEST: throughput=  0.53 GB/s doc_throughput=    11 docs/s instructions=  1066992103 cycles=   322336297 branch_miss=  621723 cache_miss= 8431218 cache_ref=  12165987 items=   1000000 avg_time=  87501764 ns]
large_random<rapidjson>/manual_time                    182667906 ns    186088518 ns            4         1.14638M           261.764M         7.1822M       10.7125M    590.558M              12.8386           5.69066       3.36067G          1.67314G                    36.3736                     2.83315           5.69066M    1.14463M   45.9988M       240.151M/s   6.50432M    9.9617M   595.175M         12.9389    5.47442/s 3.25823G/s     1.67315G               36.3738                2.81119      1000k       5.47442M/s [BEST: throughput=  0.26 GB/s doc_throughput=     5 docs/s instructions=  1673139717 cycles=   590558105 branch_miss= 1146383 cache_miss= 7182202 cache_ref=  10712473 items=   1000000 avg_time= 182667905 ns]
large_random<rapidjson_lossless>/manual_time           204078837 ns    207499483 ns            4         623.262k            233.23M        7.05505M       10.7007M    669.973M               14.565           5.07034       3.39699G           2.0601G                    44.7861                     3.07491           5.07034M    624.918k   45.9988M       214.955M/s   6.47772M    9.9636M   674.268M         14.6584    4.90007/s 3.30396G/s     2.06011G               44.7863                3.05534      1000k       4.90007M/s [BEST: throughput=  0.23 GB/s doc_throughput=     5 docs/s instructions=  2060104972 cycles=   669973167 branch_miss=  623262 cache_miss= 7055046 cache_ref=  10700706 items=   1000000 avg_time= 204078837 ns]
large_random<rapidjson_insitu>/manual_time             156848196 ns    160261874 ns            5         603.104k           309.232M        8.11515M       12.2351M    490.865M              10.6713           6.72262        3.2999G          1.50514G                    32.7213                      3.0663           6.72262M    603.729k   45.9988M       279.683M/s   7.55993M   11.4438M    498.16M         10.8299    6.37559/s 3.17606G/s     1.50515G               32.7215                3.02142      1000k       6.37559M/s [BEST: throughput=  0.31 GB/s doc_throughput=     6 docs/s instructions=  1505139678 cycles=   490864920 branch_miss=  603104 cache_miss= 8115146 cache_ref=  12235145 items=   1000000 avg_time= 156848195 ns]
large_random<nlohmann_json>/manual_time               1225804606 ns   1229226081 ns            1         4.57638M           37.5254M        47.6682M       60.9086M    4.50966G              98.0386          0.815791       3.67894G          11.9914G                    260.689                     2.65904           815.791k    4.57638M   45.9988M        35.787M/s   47.6682M   60.9086M   4.50966G         98.0386   0.815791/s 3.67894G/s     11.9914G               260.689                2.65904      1000k       815.791k/s [BEST: throughput=  0.04 GB/s doc_throughput=     0 docs/s instructions= 11991358854 cycles=  4509657782 branch_miss= 4576377 cache_miss=47668162 cache_ref=  60908640 items=   1000000 avg_time=1225804606 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                        88669549 ns     99045638 ns            8         440.351k           1.55006G        15.9076M       22.1719M    326.773M              2.37991           11.2892       3.68901G          938.041M                     6.8318                     2.87061           5.91879M    440.316k   137.305M       1.44216G/s   15.9434M   22.2246M   327.098M         2.38228    11.2778/s 3.68896G/s     938.041M                6.8318                2.86776   524.288k       5.91283M/s [BEST: throughput=  1.55 GB/s doc_throughput=    11 docs/s instructions=   938040623 cycles=   326773420 branch_miss=  440351 cache_miss=15907625 cache_ref=  22171861 items=    524288 avg_time=  88669548 ns]
kostya<simdjson_ondemand>/manual_time                   61266056 ns     71598475 ns           11         461.818k           2.24608G        10.2243M       13.9104M    225.512M              1.64242           16.3583         3.689G          677.141M                    4.93166                     3.00268           8.57646M    462.206k   137.305M       2.08721G/s   10.2352M   13.9907M       226M         1.64597    16.3223/s 3.68883G/s     677.141M               4.93166                 2.9962   524.288k       8.55756M/s [BEST: throughput=  2.25 GB/s doc_throughput=    16 docs/s instructions=   677141349 cycles=   225512344 branch_miss=  461818 cache_miss=10224308 cache_ref=  13910437 items=    524288 avg_time=  61266056 ns]
kostya<yyjson>/manual_time                             202630586 ns    213036829 ns            3         423.272k           678.139M        11.4508M        16.268M    550.271M              4.00766           4.93893       2.71775G          984.045M                    7.16686                     1.78829           2.58942M    422.881k   137.305M       646.222M/s   11.4499M    16.266M   550.135M         4.00666    4.93509/s 2.71496G/s     984.045M               7.16686                1.78873   524.288k       2.58741M/s [BEST: throughput=  0.68 GB/s doc_throughput=     4 docs/s instructions=   984045262 cycles=   550271352 branch_miss=  423272 cache_miss=11450783 cache_ref=  16268033 items=    524288 avg_time= 202630586 ns]
kostya<yyjson_insitu>/manual_time                      148696415 ns    159100528 ns            5         423.835k           923.751M        8.90075M       12.3595M    453.681M              3.30419           6.72773       3.05225G          965.775M                     7.0338                     2.12875           3.52727M    423.707k   137.305M       880.615M/s   8.90068M   12.3417M   453.729M         3.30454    6.72511/s 3.05138G/s     965.775M                7.0338                2.12853   524.288k        3.5259M/s [BEST: throughput=  0.92 GB/s doc_throughput=     6 docs/s instructions=   965775264 cycles=   453681255 branch_miss=  423835 cache_miss= 8900747 cache_ref=  12359504 items=    524288 avg_time= 148696415 ns]
kostya<sajson>/manual_time                             136007118 ns    146406972 ns            5         455.809k           1010.95M        12.5288M       17.2517M    501.041M              3.64911           7.36278       3.68905G          1.60304G                    11.6751                     3.19942           3.86021M    459.278k   137.305M       962.775M/s   12.5518M   17.2216M   501.694M         3.65387    7.35256/s 3.68874G/s     1.60304G               11.6751                3.19526   524.288k       3.85486M/s [BEST: throughput=  1.01 GB/s doc_throughput=     7 docs/s instructions=  1603042841 cycles=   501041278 branch_miss=  455809 cache_miss=12528791 cache_ref=  17251735 items=    524288 avg_time= 136007117 ns]
kostya<rapidjson>/manual_time                          250059345 ns    260476050 ns            3         944.861k           556.342M        8.29872M       12.0293M    829.397M              6.04055           4.05187       3.36061G          2.29774G                    16.7346                     2.77037           2.12435M    944.151k   137.305M       523.653M/s   7.97461M   11.7337M   832.037M         6.05978    3.99905/s 3.32736G/s     2.29774G               16.7346                2.76158   524.288k       2.09665M/s [BEST: throughput=  0.56 GB/s doc_throughput=     4 docs/s instructions=  2297738908 cycles=   829397430 branch_miss=  944861 cache_miss= 8298718 cache_ref=  12029343 items=    524288 avg_time= 250059345 ns]
kostya<rapidjson_lossless>/manual_time                 272169401 ns    282615950 ns            3         1.63045M           510.644M        8.13961M       12.1207M    910.473M              6.63103           3.71905        3.3861G          2.51583G                     18.323                     2.76322           1.94985M    1.62319M   137.305M       481.113M/s   7.82605M   11.7769M   913.152M         6.65054    3.67418/s 3.35509G/s     2.51584G                18.323                2.75511   524.288k       1.92633M/s [BEST: throughput=  0.51 GB/s doc_throughput=     3 docs/s instructions=  2515833824 cycles=   910473073 branch_miss= 1630451 cache_miss= 8139606 cache_ref=  12120731 items=    524288 avg_time= 272169401 ns]
kostya<rapidjson_insitu>/manual_time                   229788686 ns    240226690 ns            3         1070.06k           606.548M        11.0686M       15.6727M    753.723M              5.48941           4.41752       3.32959G            2.048G                    14.9157                     2.71718           2.31605M    1062.25k   137.305M       569.846M/s   10.7619M   15.3044M   757.029M         5.51349    4.35182/s 3.29446G/s     2.04801G               14.9157                2.70532   524.288k       2.28161M/s [BEST: throughput=  0.61 GB/s doc_throughput=     4 docs/s instructions=  2048003878 cycles=   753722870 branch_miss= 1070055 cache_miss=11068567 cache_ref=  15672707 items=    524288 avg_time= 229788686 ns]
kostya<nlohmann_json>/manual_time                     1554070659 ns   1564415915 ns            1         3.77526M           88.3518M        69.6998M       87.1302M    5.73223G              41.7481          0.643471       3.68852G          15.1461G                     110.31                     2.64226           337.364k    3.77526M   137.305M       84.2589M/s   69.6998M   87.1302M   5.73223G         41.7481   0.643471/s 3.68852G/s     15.1461G                110.31                2.64226   524.288k       337.364k/s [BEST: throughput=  0.09 GB/s doc_throughput=     0 docs/s instructions= 15146059040 cycles=  5732226090 branch_miss= 3775256 cache_miss=69699839 cache_ref=  87130225 items=    524288 avg_time=1554070659 ns]
distinct_user_id<simdjson_dom>/manual_time                254456 ns       285411 ns         2751           3.856k             2.498G               0        94.697k    933.624k              1.47839          3.95557k       3.69302G          2.85594M                    4.52236                     3.05898           454.891k    3.99732k   631.515k       2.31137G/s    1.98655   94.5367k   939.013k         1.48692   3.92995k/s 3.69027G/s     2.85594M               4.52236                3.04143        115       451.944k/s [BEST: throughput=  2.50 GB/s doc_throughput=  3955 docs/s instructions=     2855939 cycles=      933624 branch_miss=    3856 cache_miss=       0 cache_ref=     94697 items=       115 avg_time=    254456 ns]
distinct_user_id<simdjson_ondemand>/manual_time           185048 ns       215072 ns         3785           1.728k           3.43614G               0        57.296k    678.717k              1.07474          5.44111k       3.69297G          2.13568M                    3.38184                     3.14665           625.728k    1.84688k   631.515k       3.17833G/s    1.04782   57.3269k   682.843k         1.08128     5.404k/s 3.69008G/s     2.13568M               3.38184                3.12764        115        621.46k/s [BEST: throughput=  3.44 GB/s doc_throughput=  5441 docs/s instructions=     2135684 cycles=      678717 branch_miss=    1728 cache_miss=       0 cache_ref=     57296 items=       115 avg_time=    185048 ns]
distinct_user_id<yyjson>/manual_time                      604679 ns       638725 ns         1000            6.83k           1.64176G         22.186k        75.984k    1.42021M              2.24889          2.59971k       3.69213G          2.87519M                    4.55284                     2.02448           298.967k    7.57582k   631.515k       995.999M/s   7.28644k   57.6207k   1.63741M         2.59282   1.65377k/s 2.70789G/s     2.87547M               4.55328                1.75611        115       190.183k/s [BEST: throughput=  1.64 GB/s doc_throughput=  2599 docs/s instructions=     2875189 cycles=     1420209 branch_miss=    6830 cache_miss=   22186 cache_ref=     75984 items=       115 avg_time=    604679 ns]
distinct_user_id<yyjson_insitu>/manual_time               478180 ns       511609 ns         1464           7.202k           1.76433G             610        46.756k    1.31818M              2.08734          2.79381k       3.68276G          2.87478M                    4.55219                     2.18086           321.288k    7.67958k   631.515k       1.22996G/s    107.243   32.1979k   1.43174M         2.26716   2.09126k/s 2.99415G/s     2.87504M               4.55261                2.00807        115       240.495k/s [BEST: throughput=  1.76 GB/s doc_throughput=  2793 docs/s instructions=     2874778 cycles=     1318185 branch_miss=    7202 cache_miss=     610 cache_ref=     46756 items=       115 avg_time=    478179 ns]
distinct_user_id<sajson>/manual_time                      581550 ns       612430 ns         1201          10.558k           1096.58M               0        47.565k    2.12611M              3.36668          1.73643k       3.69184G          5.98101M                    9.47089                     2.81313            199.69k    11.1505k   631.515k       1035.61M/s    1.26062    47.728k   2.14552M         3.39741   1.71954k/s 3.68931G/s     5.98101M               9.47089                2.78768        115       197.747k/s [BEST: throughput=  1.10 GB/s doc_throughput=  1736 docs/s instructions=     5981008 cycles=     2126107 branch_miss=   10558 cache_miss=       0 cache_ref=     47565 items=       115 avg_time=    581549 ns]
distinct_user_id<rapidjson>/manual_time                  1546568 ns      1577360 ns          456          26.627k           466.897M          9.211k        55.764k    4.98288M              7.89036           739.328       3.68398G           13.066M                      20.69                     2.62219           85.0228k    27.0385k   631.515k       389.417M/s    939.215   35.7576k   5.14514M          8.1473    646.593/s 3.32681G/s     13.0667M                20.691                2.53962        115       74.3582k/s [BEST: throughput=  0.47 GB/s doc_throughput=   739 docs/s instructions=    13066047 cycles=     4982879 branch_miss=   26627 cache_miss=    9211 cache_ref=     55764 items=       115 avg_time=   1546567 ns]
distinct_user_id<rapidjson_insitu>/manual_time           1030026 ns      1060453 ns          717          25.688k           686.379M              74        45.319k    3.39675M              5.37874           1086.88       3.69185G          9.77679M                    15.4815                     2.87828           124.991k    25.9611k   631.515k       584.703M/s   1.85423k    36.972k   3.51108M         5.55977    970.849/s 3.40873G/s     9.77713M                15.482                2.78465        115       111.648k/s [BEST: throughput=  0.69 GB/s doc_throughput=  1086 docs/s instructions=     9776795 cycles=     3396752 branch_miss=   25688 cache_miss=      74 cache_ref=     45319 items=       115 avg_time=   1030026 ns]
distinct_user_id<nlohmann_json>/manual_time              7014492 ns      7048487 ns          101         112.932k           92.8227M             357       229.785k    25.0978M              39.7421           146.984       3.68897G          66.3154M                     105.01                     2.64229           16.9032k     127.58k   631.515k       85.8593M/s   1.11621k   373.671k   25.8703M         40.9655    142.562/s 3.68813G/s     64.9563M               102.858                2.51084        115       16.3946k/s [BEST: throughput=  0.09 GB/s doc_throughput=   146 docs/s instructions=    66315427 cycles=    25097750 branch_miss=  112932 cache_miss=     357 cache_ref=    229785 items=       115 avg_time=   7014492 ns]
find_tweet<simdjson_dom>/manual_time                      242955 ns       272232 ns         2882           3.601k           2.61421G               0        83.762k    892.018k               1.4125          4.13959k       3.69259G           2.7749M                    4.39403                     3.11081           4.13959k    3.69985k   631.515k        2.4208G/s    4.62838   83.7687k   896.504k         1.41961   4.11599k/s 3.69001G/s      2.7749M               4.39403                3.09524          1       4.11599k/s [BEST: throughput=  2.61 GB/s doc_throughput=  4139 docs/s instructions=     2774898 cycles=      892018 branch_miss=    3601 cache_miss=       0 cache_ref=     83762 items=         1 avg_time=    242954 ns]
find_tweet<simdjson_ondemand>/manual_time                 110925 ns       139419 ns         6306              691           5.72273G               0        32.688k    407.659k             0.645525          9.06191k       3.69417G          1.47892M                    2.34187                     3.62784           9.06191k      745.13   631.515k       5.30216G/s   0.467016   32.7635k   409.413k        0.648303   9.01507k/s 3.69089G/s     1.47892M               2.34187                 3.6123          1       9.01507k/s [BEST: throughput=  5.72 GB/s doc_throughput=  9061 docs/s instructions=     1478923 cycles=      407659 branch_miss=     691 cache_miss=       0 cache_ref=     32688 items=         1 avg_time=    110925 ns]
find_tweet<yyjson>/manual_time                            668357 ns       699314 ns         1217           9.981k           1.56105G             304        68.396k     1.4604M              2.31253          2.47192k       3.60999G          2.82413M                    4.47199                     1.93381           2.47192k    7.51253k   631.515k       901.105M/s    1009.82   41.5053k   1.66583M         2.63784   1.49621k/s 2.49243G/s      2.8246M               4.47274                1.69561          1       1.49621k/s [BEST: throughput=  1.56 GB/s doc_throughput=  2471 docs/s instructions=     2824128 cycles=     1460399 branch_miss=    9981 cache_miss=     304 cache_ref=     68396 items=         1 avg_time=    668357 ns]
find_tweet<yyjson_insitu>/manual_time                     467315 ns       497693 ns         1498           7.044k           1.80698G             531        38.177k    1.28722M               2.0383          2.86134k       3.68317G           2.8238M                    4.47147                     2.19372           2.86134k    7.39174k   631.515k       1.25856G/s    18.1696   23.4675k   1.39259M         2.20515   2.13989k/s 2.97997G/s     2.82406M               4.47189                2.02793          1       2.13989k/s [BEST: throughput=  1.81 GB/s doc_throughput=  2861 docs/s instructions=     2823802 cycles=     1287220 branch_miss=    7044 cache_miss=     531 cache_ref=     38177 items=         1 avg_time=    467314 ns]
find_tweet<sajson>/manual_time                            569397 ns       599298 ns         1226           10.42k           1.11968G               0        38.162k    2.08221M              3.29716            1.773k       3.69176G          5.88886M                    9.32498                     2.82818             1.773k    10.9587k   631.515k       1057.71M/s     1.0677   38.2587k   2.10085M         3.32669   1.75624k/s 3.68961G/s     5.88886M               9.32498                2.80308          1       1.75624k/s [BEST: throughput=  1.12 GB/s doc_throughput=  1772 docs/s instructions=     5888863 cycles=     2082209 branch_miss=   10420 cache_miss=       0 cache_ref=     38162 items=         1 avg_time=    569397 ns]
find_tweet<rapidjson>/manual_time                        1535794 ns      1564747 ns          459          26.773k           470.846M          9.683k        47.912k    4.95129M              7.84034           745.581       3.69159G          12.9981M                    20.5824                      2.6252            745.581    26.9208k   631.515k       392.149M/s    679.558   28.5752k   5.10801M          8.0885    651.129/s 3.32597G/s     12.9988M               20.5835                2.54478          1        651.129/s [BEST: throughput=  0.47 GB/s doc_throughput=   745 docs/s instructions=    12998114 cycles=     4951293 branch_miss=   26773 cache_miss=    9683 cache_ref=     47912 items=         1 avg_time=   1535794 ns]
find_tweet<rapidjson_insitu>/manual_time                 1021358 ns      1051315 ns          727           25.21k           694.313M          2.417k         36.61k    3.35783M               5.3171           1099.44       3.69173G          9.71909M                    15.3901                     2.89446            1099.44    25.8383k   631.515k       589.666M/s    1.6427k   27.9663k   3.47949M         5.50975    979.089/s 3.40673G/s     9.71942M               15.3906                2.79335          1        979.089/s [BEST: throughput=  0.69 GB/s doc_throughput=  1099 docs/s instructions=     9719086 cycles=     3357826 branch_miss=   25210 cache_miss=    2417 cache_ref=     36610 items=         1 avg_time=   1021357 ns]
find_tweet<nlohmann_json>/manual_time                    5935145 ns      5966182 ns          120          87.388k            110.27M             286       170.143k    21.1328M              33.4636           174.613       3.69005G           56.668M                    89.7334                     2.68152            174.613    102.902k   631.515k       101.473M/s    368.167    306.12k   21.8934M         34.6681    168.488/s 3.68878G/s     55.3191M               87.5974                2.52674          1        168.488/s [BEST: throughput=  0.11 GB/s doc_throughput=   174 docs/s instructions=    56667976 cycles=    21132772 branch_miss=   87388 cache_miss=     286 cache_ref=    170143 items=         1 avg_time=   5935145 ns]
