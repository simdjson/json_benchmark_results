run_benchmark: v0.8.0~33 /home/jkeiser/simdjson_benchmark_results/v0.7.0/5/skylake-clang11.json -DCMAKE_BUILD_TYPE=Release
git reset --hard v0.8.0~33
HEAD is now at c578f63f Fixing issue 1337 (#1338)
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- git Version: v0.2.1-c578f63f
-- Version: 0.2.1
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES -- failed to compile
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 10
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
make[3]: Nothing to be done for '_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build'.
[ 80%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
make[3]: Nothing to be done for 'jsonexamples/generated/CMakeFiles/generated-data.dir/build'.
[ 80%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
make[3]: Nothing to be done for 'src/CMakeFiles/simdjson.dir/build'.
[ 90%] Built target simdjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
make[3]: Nothing to be done for 'benchmark/CMakeFiles/bench_ondemand.dir/build'.
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/5/skylake-clang11.json --benchmark_out_format=json
2021-01-25 01:19:16
Running benchmark/bench_ondemand
Run on (4 X 4000 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 256 KiB (x4)
  L3 Unified 8192 KiB (x1)
Load Average: 0.78, 0.27, 0.28
On Demand implementation: fallback
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Benchmark                         Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
PartialTweets<OnDemand>     1254831 ns      1254823 ns          558          32.887k           510.539M               0        55.662k    4.56626M              7.23065           808.435       3.69152G          10.8663M                    17.2067                     2.37969           80.8435k    33.8401k   631.515k       479.956M/s    23.7258   55.7479k   4.59996M         7.28401    796.925/s 3.66582G/s     10.8663M               17.2067                2.36226        100       79.6925k/s [best: throughput=  0.51 GB/s doc_throughput=   808 docs/s instructions=    10866304 cycles=     4566261 branch_miss=   32887 cache_miss=       0 cache_ref=     55662 items=       100 avg_time=   1246735 ns]
PartialTweets<Dom>           281051 ns       281053 ns         2492            3.38k           2.32841G               0        87.674k    1001.55k              1.58594          3.68702k       3.69272G           2.9875M                    4.73068                     2.98288           368.702k    3.51629k   631.515k       2.09264G/s   0.136437   87.6396k   1006.84k         1.59433   3.55804k/s  3.5824G/s      2.9875M               4.73068                2.96719        100       355.804k/s [best: throughput=  2.33 GB/s doc_throughput=  3687 docs/s instructions=     2987495 cycles=     1001548 branch_miss=    3380 cache_miss=       0 cache_ref=     87674 items=       100 avg_time=    272822 ns]
Creating a source file spanning 44921 KB 
LargeRandom<Dom>           89674939 ns     89675474 ns            8         959.597k           513.605M        10.9051M       15.2105M    330.394M              7.18268           11.1656       3.68906G          1036.74M                    22.5384                     3.13788           11.1656M    959.523k   45.9988M       489.184M/s    10.955M   15.2135M   330.754M         7.19049    11.1513/s 3.68834G/s     1036.74M               22.5384                3.13447      1000k       11.1513M/s [best: throughput=  0.51 GB/s doc_throughput=    11 docs/s instructions=  1036738074 cycles=   330394275 branch_miss=  959597 cache_miss=10905054 cache_ref=  15210451 items=   1000000 avg_time=  89661067 ns]
LargeRandomSum<Dom>        90084481 ns     90085002 ns            8         958.337k           512.334M        10.3509M       14.3963M    331.214M               7.2005            11.138       3.68906G          1025.74M                    22.2992                      3.0969            11.138M    957.439k   45.9988M       486.961M/s   10.3775M   14.3984M   332.259M         7.22322    11.1006/s 3.68829G/s     1025.74M               22.2992                3.08716      1000k       11.1006M/s [best: throughput=  0.51 GB/s doc_throughput=    11 docs/s instructions=  1025738075 cycles=   331214302 branch_miss=  958337 cache_miss=10350851 cache_ref=  14396321 items=   1000000 avg_time=  90070970 ns]
LargeRandom<OnDemand>     103716189 ns    103716823 ns            7          1.3146M           444.578M        5.69267M       7.91521M    381.686M              8.29774             9.665       3.68899G          1.16598G                     25.348                     3.05481             9.665M    1.32173M   45.9988M       422.958M/s   5.72974M    7.9161M   382.544M          8.3164    9.64164/s 3.68835G/s     1.16598G                25.348                3.04795      1000k       9.64164M/s [best: throughput=  0.44 GB/s doc_throughput=     9 docs/s instructions=  1165976259 cycles=   381685678 branch_miss= 1314604 cache_miss= 5692668 cache_ref=   7915207 items=   1000000 avg_time= 103702341 ns]
LargeRandomSum<OnDemand>  103771060 ns    103770281 ns            7         1.32814M           443.923M        5.07965M        7.0618M    382.256M              8.31013           9.65077       3.68906G          1.17298G                    25.5002                     3.06856           9.65077M    1.33512M   45.9988M        422.74M/s   5.07364M   7.06183M   382.758M         8.32105    9.63667/s 3.68851G/s     1.17298G               25.5002                3.06454      1000k       9.63667M/s [best: throughput=  0.44 GB/s doc_throughput=     9 docs/s instructions=  1172975747 cycles=   382255815 branch_miss= 1328144 cache_miss= 5079652 cache_ref=   7061803 items=   1000000 avg_time= 103758054 ns]
Creating a source file spanning 134087 KB 
Kostya<Dom>                93255066 ns     93255603 ns            7         1017.79k           1.47497G        15.8091M       22.2186M    343.385M               2.5009           10.7423       3.68875G          984.675M                    7.17144                     2.86755           5.63206M     1018.2k   137.305M       1.37123G/s    15.857M   22.1877M   343.916M         2.50476    10.7232/s 3.68788G/s     984.675M               7.17144                2.86313   524.288k       5.62205M/s [best: throughput=  1.47 GB/s doc_throughput=    10 docs/s instructions=   984674862 cycles=   343385390 branch_miss= 1017791 cache_miss=15809115 cache_ref=  22218583 items=    524288 avg_time=  93239748 ns]
KostyaSum<Dom>             92998779 ns     92997945 ns            8         1018.29k           1.47766G         15.539M       21.8156M     342.76M              2.49634           10.7619       3.68874G          977.859M                     7.1218                      2.8529           5.64233M    1018.22k   137.305M       1.37503G/s   15.5655M   21.7834M    342.99M         2.49801    10.7529/s 3.68814G/s     977.859M                7.1218                2.85099   524.288k       5.63763M/s [best: throughput=  1.48 GB/s doc_throughput=    10 docs/s instructions=   977859117 cycles=   342759503 branch_miss= 1018290 cache_miss=15538982 cache_ref=  21815585 items=    524288 avg_time=  92984182 ns]
Kostya<OnDemand>          195598634 ns    195599813 ns            4         689.473k           703.534M        10.2069M       13.9676M     720.08M              5.24439           5.12388        3.6896G           2.1695G                    15.8006                     3.01286           2.68639M    727.547k   137.305M        669.45M/s   10.2263M   13.9683M   721.624M         5.25563    5.11248/s 3.68929G/s      2.1695G               15.8006                3.00642   524.288k       2.68041M/s [best: throughput=  0.70 GB/s doc_throughput=     5 docs/s instructions=  2169500993 cycles=   720080378 branch_miss=  689473 cache_miss=10206894 cache_ref=  13967555 items=    524288 avg_time= 195583457 ns]
KostyaSum<OnDemand>       197749243 ns    197750377 ns            4         702.301k           694.863M        9.85805M       13.5364M    729.057M              5.30976           5.06072       3.68956G          2.17422G                     15.835                     2.98224           2.65328M    704.486k   137.305M       662.169M/s   9.91989M   13.5385M   729.528M          5.3132    5.05688/s 3.68914G/s     2.17422G                15.835                2.98031   524.288k       2.65126M/s [best: throughput=  0.69 GB/s doc_throughput=     5 docs/s instructions=  2174219438 cycles=   729057035 branch_miss=  702301 cache_miss= 9858046 cache_ref=  13536417 items=    524288 avg_time= 197733280 ns]
DistinctUserID<Dom>          276158 ns       276156 ns         2532           3.678k           2.37151G               0        88.879k    983.284k              1.55702          3.75528k        3.6925G           2.9272M                     4.6352                     2.97696           431.857k    3.85855k   631.515k       2.12975G/s    6.10624   88.6147k   988.867k         1.56586   3.62114k/s 3.58082G/s      2.9272M                4.6352                2.96015        115       416.431k/s [best: throughput=  2.37 GB/s doc_throughput=  3755 docs/s instructions=     2927197 cycles=      983284 branch_miss=    3678 cache_miss=       0 cache_ref=     88879 items=       115 avg_time=    267962 ns]
On Demand implementation: fallback
DistinctUserID<OnDemand>    1224109 ns      1224117 ns          572          32.995k           523.577M               0         53.95k    4.45266M              7.05075           829.082       3.69161G           10.498M                    16.6235                      2.3577           95.3444k    34.0047k   631.515k       491.995M/s   0.501748   53.8793k   4.48702M         7.10516    816.915/s 3.66551G/s      10.498M               16.6235                2.33964        115       93.9453k/s [best: throughput=  0.52 GB/s doc_throughput=   829 docs/s instructions=    10498020 cycles=     4452655 branch_miss=   32995 cache_miss=       0 cache_ref=     53950 items=       115 avg_time=   1216054 ns]
FindTweet<Dom>               262660 ns       262662 ns         2664           3.198k           2.49632G               0        78.108k    934.073k               1.4791          3.95291k       3.69231G          2.83256M                    4.48534                     3.03248           3.95291k    3.33872k   631.515k       2.23917G/s    5.86937   78.2607k   939.312k         1.48739   3.80718k/s 3.57613G/s     2.83256M               4.48534                3.01557          1       3.80718k/s [best: throughput=  2.50 GB/s doc_throughput=  3952 docs/s instructions=     2832561 cycles=      934073 branch_miss=    3198 cache_miss=       0 cache_ref=     78108 items=         1 avg_time=    254520 ns]
On Demand implementation: fallback
FindTweet<OnDemand>         1172849 ns      1172857 ns          597          31.803k           546.075M               0        27.871k     4.2692M              6.76024           864.707        3.6916G          10.0846M                    15.9689                     2.36218            864.707    32.5452k   631.515k       513.498M/s    1.14238   28.0364k   4.29759M         6.80521    852.619/s 3.66421G/s     10.0846M               15.9689                2.34657          1        852.619/s [best: throughput=  0.55 GB/s doc_throughput=   864 docs/s instructions=    10084601 cycles=     4269196 branch_miss=   31803 cache_miss=       0 cache_ref=     27871 items=         1 avg_time=   1164702 ns]
