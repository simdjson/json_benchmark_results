run_benchmark: v0.8.0~11 /home/jkeiser/simdjson_benchmark_results/v0.7.0/27/ampere-clang11.json -DCMAKE_BUILD_TYPE=Release
git reset --hard v0.8.0~11
HEAD is now at 3b848666 Removing trailing white space.
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- git Version: v0.2.1-3b848666
-- Version: 0.2.1
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES -- failed to compile
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 11
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
make[3]: Nothing to be done for '_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build'.
[ 72%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
make[3]: Nothing to be done for 'jsonexamples/generated/CMakeFiles/generated-data.dir/build'.
[ 72%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
make[3]: Nothing to be done for 'src/CMakeFiles/simdjson.dir/build'.
[ 81%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
make[3]: Nothing to be done for 'dependencies/CMakeFiles/yyjson.dir/build'.
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/clang++-11  -DRAPIDJSON_HAS_STDSTRING -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_COMPETITION_RAPIDJSON -DSIMDJSON_COMPETITION_YYJSON -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/rapidjson/include  -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/clang++-11  -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.6.0.0 ../_deps/google_benchmarks/src/libbenchmark.a ../dependencies/libyyjson.a -pthread /usr/lib/aarch64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/27/ampere-clang11.json --benchmark_out_format=json
2021-01-24 23:56:01
Running benchmark/bench_ondemand
Run on (32 X 3300 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x32)
  L1 Instruction 32 KiB (x32)
  L2 Unified 256 KiB (x16)
Load Average: 1.03, 1.03, 1.00
simdjson::dom implementation:      arm64
simdjson::ondemand implementation: arm64

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                 1554677 ns      1623709 ns          445          13.947k            407.16M         26.022k       962.044k    4.96529M              7.86251           644.735       3.20129G          3.94988M                    6.25461                    0.795499           64.4735k    14.1373k   631.515k       387.386M/s   26.0399k   962.673k   4.97149M         7.87233     643.22/s 3.19776G/s     3.94988M               6.25461               0.794506        100        64.322k/s [BEST: throughput=  0.41 GB/s doc_throughput=   644 docs/s instructions=     3949882 cycles=     4965291 branch_miss=   13947 cache_miss=   26022 cache_ref=    962044 items=       100 avg_time=   1554677 ns]
partial_tweets<simdjson_ondemand>/manual_time            1047082 ns      1116753 ns          668            8.31k           604.984M         22.868k       444.037k    3.34189M              5.29187           957.988       3.20149G          2.72477M                    4.31465                    0.815336           95.7988k    8.52628k   631.515k       575.179M/s   22.8665k   444.552k   3.34863M         5.30254    955.035/s 3.19806G/s     2.72477M               4.31465               0.813696        100       95.5035k/s [BEST: throughput=  0.60 GB/s doc_throughput=   957 docs/s instructions=     2724766 cycles=     3341893 branch_miss=    8310 cache_miss=   22868 cache_ref=    444037 items=       100 avg_time=   1047082 ns]
partial_tweets<yyjson>/manual_time                       1202636 ns      1275919 ns          585          46.408k           593.449M         24.275k       1.40709M     3.4068M              5.39465           939.723       3.20145G          3.27036M                     5.1786                     0.95995           93.9723k    46.2906k   631.515k       500.783M/s   24.2857k   1.40809M   3.61597M         5.72586    831.507/s  3.0067G/s     3.27059M               5.17895               0.904485        100       83.1507k/s [BEST: throughput=  0.59 GB/s doc_throughput=   939 docs/s instructions=     3270362 cycles=     3406805 branch_miss=   46408 cache_miss=   24275 cache_ref=   1407093 items=       100 avg_time=   1202635 ns]
partial_tweets<yyjson_insitu>/manual_time                1120216 ns      1194567 ns          627          46.136k           622.176M         14.377k       1.24892M    3.24991M              5.14621           985.211       3.20184G          3.17167M                    5.02232                    0.975926           98.5211k    46.1955k   631.515k       537.628M/s   14.4375k   1.24918M   3.46839M         5.49218    892.685/s 3.09618G/s     3.17182M               5.02256               0.914493        100       89.2685k/s [BEST: throughput=  0.62 GB/s doc_throughput=   985 docs/s instructions=     3171670 cycles=     3249907 branch_miss=   46136 cache_miss=   14377 cache_ref=   1248916 items=       100 avg_time=   1120215 ns]
partial_tweets<rapidjson>/manual_time                    4620423 ns      4694463 ns          152          82.807k           138.939M         13.019k        13.392M      14.51M              22.9765           220.008       3.19232G          20.6804M                    32.7473                     1.42525           22.0008k    82.6282k   631.515k       130.347M/s   13.2405k   13.3872M   14.5594M         23.0547     216.43/s  3.1511G/s     20.6813M               32.7487                1.42048        100        21.643k/s [BEST: throughput=  0.14 GB/s doc_throughput=   220 docs/s instructions=    20680438 cycles=    14510014 branch_miss=   82807 cache_miss=   13019 cache_ref=  13392045 items=       100 avg_time=   4620423 ns]
partial_tweets<rapidjson_insitu>/manual_time             2871800 ns      2946710 ns          244           60.05k           224.956M         13.742k       5.85011M    8.98558M              14.2286           356.217       3.20082G          12.8219M                    20.3034                     1.42695           35.6217k    60.4003k   631.515k       209.715M/s   13.9585k   5.85141M   9.02715M         14.2944    348.214/s 3.14338G/s     12.8224M               20.3042                1.42042        100       34.8214k/s [BEST: throughput=  0.22 GB/s doc_throughput=   356 docs/s instructions=    12821930 cycles=     8985581 branch_miss=   60050 cache_miss=   13742 cache_ref=   5850111 items=       100 avg_time=   2871799 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                 311506544 ns    315108791 ns            2         1.92114M           147.816M        3.98211M       231.759M    994.712M              21.6248           3.21348       3.19649G          1040.92M                    22.6292                     1.04645           3.21348M    1.92211M   45.9988M       140.825M/s   3.98212M   231.761M   995.765M         21.6476    3.21021/s 3.19661G/s     1040.92M               22.6292                1.04534      1000k       3.21021M/s [BEST: throughput=  0.15 GB/s doc_throughput=     3 docs/s instructions=  1040915692 cycles=   994712137 branch_miss= 1921139 cache_miss= 3982111 cache_ref= 231758924 items=   1000000 avg_time= 311506544 ns]
large_random<simdjson_ondemand>/manual_time            198261181 ns    201858368 ns            4         1.19899M           232.537M        2.31776M       143.272M    632.424M              13.7487           5.05528       3.19708G          662.774M                    14.4085                     1.04799           5.05528M    1.24196M   45.9988M       221.263M/s   2.31778M   143.272M    633.77M          13.778    5.04385/s 3.19664G/s     662.774M               14.4085                1.04576      1000k       5.04385M/s [BEST: throughput=  0.23 GB/s doc_throughput=     5 docs/s instructions=   662773947 cycles=   632423758 branch_miss= 1198989 cache_miss= 2317755 cache_ref= 143272120 items=   1000000 avg_time= 198261180 ns]
large_random<simdjson_ondemand_unordered>/manual_time  187542154 ns    191142101 ns            4         1.20095M           245.309M        2.31774M       141.233M    599.466M              13.0322           5.33295       3.19693G          674.774M                    14.6694                     1.12562           5.33295M    1.20115M   45.9988M       233.909M/s   2.31779M   141.234M   599.502M          13.033    5.33213/s 3.19662G/s     674.774M               14.6694                1.12556      1000k       5.33213M/s [BEST: throughput=  0.25 GB/s doc_throughput=     5 docs/s instructions=   674773944 cycles=   599466447 branch_miss= 1200950 cache_miss= 2317743 cache_ref= 141233006 items=   1000000 avg_time= 187542154 ns]
large_random<yyjson>/manual_time                       204394623 ns    208007801 ns            3         1.57576M           225.137M         4.9142M       205.596M      627.6M              13.6438            4.8944       3.07173G          816.385M                     17.748                      1.3008            4.8944M    1.57665M   45.9988M       214.623M/s   4.91427M   205.595M   627.843M         13.6491     4.8925/s 3.07172G/s     816.385M                17.748                 1.3003      1000k        4.8925M/s [BEST: throughput=  0.23 GB/s doc_throughput=     4 docs/s instructions=   816384799 cycles=   627599889 branch_miss= 1575764 cache_miss= 4914205 cache_ref= 205595885 items=   1000000 avg_time= 204394622 ns]
large_random<yyjson_insitu>/manual_time                198360224 ns    201960301 ns            4         1.57809M           231.947M        4.19776M       194.081M    615.692M               13.385           5.04246        3.1046G          809.197M                    17.5917                     1.31429           5.04246M    1.58135M   45.9988M       221.152M/s   4.19778M   194.084M   615.767M         13.3866    5.04133/s 3.10429G/s     809.197M               17.5917                1.31413      1000k       5.04133M/s [BEST: throughput=  0.23 GB/s doc_throughput=     5 docs/s instructions=   809197130 cycles=   615692096 branch_miss= 1578086 cache_miss= 4197761 cache_ref= 194081113 items=   1000000 avg_time= 198360223 ns]
large_random<rapidjson>/manual_time                    367033468 ns    370627135 ns            2         2.03719M           125.624M         4.9558M       779.115M    1.14308G              24.8501           2.73103       3.12178G          1.63051G                    35.4468                     1.42642           2.73103M    2.03914M   45.9988M        119.52M/s   4.95657M   779.116M   1.14335G         24.8562    2.72455/s 3.11512G/s     1.63051G               35.4469                1.42608      1000k       2.72455M/s [BEST: throughput=  0.13 GB/s doc_throughput=     2 docs/s instructions=  1630508594 cycles=  1143075159 branch_miss= 2037191 cache_miss= 4955800 cache_ref= 779115098 items=   1000000 avg_time= 367033468 ns]
large_random<rapidjson_lossless>/manual_time           422577304 ns    426209558 ns            2          2.5356M           109.001M        4.95325M       1024.93M    1.32152G              28.7294           2.36965       3.13154G          2.05348G                    44.6421                     1.55388           2.36965M    2.44926M   45.9988M        103.81M/s    4.9541M   1024.88M   1.32092G         28.7164    2.36643/s 3.12586G/s     2.05349G               44.6422                1.55459      1000k       2.36643M/s [BEST: throughput=  0.11 GB/s doc_throughput=     2 docs/s instructions=  2053481935 cycles=  1321516504 branch_miss= 2535601 cache_miss= 4953247 cache_ref=1024928552 items=   1000000 avg_time= 422577304 ns]
large_random<rapidjson_insitu>/manual_time             351054743 ns    354661457 ns            2         2.01238M           131.247M        5.67469M         696.3M    1092.88M               23.759           2.85326       3.11828G          1.37951G                    29.9901                     1.26227           2.85326M    2.01183M   45.9988M        124.96M/s    5.6756M   696.309M   1092.38M          23.748    2.84856/s 3.11171G/s     1.37951G               29.9902                1.26285      1000k       2.84856M/s [BEST: throughput=  0.13 GB/s doc_throughput=     2 docs/s instructions=  1379508456 cycles=  1092883190 branch_miss= 2012377 cache_miss= 5674691 cache_ref= 696299876 items=   1000000 avg_time= 351054743 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                       377182374 ns    387865591 ns            2         884.737k            364.06M        6.95243M        248.83M     1.2057G              8.78121           2.65147       3.19688G           1.1314G                    8.24004                    0.938373           1.39013M    884.274k   137.305M       347.164M/s    6.9524M   248.829M   1.20573G         8.78139    2.65124/s 3.19667G/s      1.1314G               8.24004               0.938353   524.288k       1.39001M/s [BEST: throughput=  0.36 GB/s doc_throughput=     2 docs/s instructions=  1131399189 cycles=  1205703311 branch_miss=  884737 cache_miss= 6952430 cache_ref= 248829840 items=    524288 avg_time= 377182374 ns]
kostya<simdjson_ondemand>/manual_time                  256231083 ns    266914905 ns            3         904.606k           535.914M        5.28506M       145.612M    819.076M              5.96538           3.90309       3.19693G          791.585M                    5.76516                    0.966437           2.04634M    904.175k   137.305M        511.04M/s   5.28512M   145.609M   819.061M         5.96527    3.90273/s 3.19657G/s     791.585M               5.76516               0.966454   524.288k       2.04615M/s [BEST: throughput=  0.54 GB/s doc_throughput=     3 docs/s instructions=   791585016 cycles=   819075957 branch_miss=  904606 cache_miss= 5285065 cache_ref= 145611978 items=    524288 avg_time= 256231083 ns]
kostya<yyjson>/manual_time                             279702856 ns    290355246 ns            2         2.05125M           491.142M        7.97467M       326.154M     849.95M              6.19024           3.57701       3.04028G          948.794M                    6.91012                     1.11629           1.87539M     2.0446M   137.305M       468.155M/s   7.97419M   326.087M   850.474M         6.19405    3.57522/s 3.04064G/s     948.794M               6.91012                1.11561   524.288k       1.87445M/s [BEST: throughput=  0.49 GB/s doc_throughput=     3 docs/s instructions=   948793597 cycles=   849950239 branch_miss= 2051247 cache_miss= 7974667 cache_ref= 326153984 items=    524288 avg_time= 279702855 ns]
kostya<yyjson_insitu>/manual_time                      261786463 ns    272445512 ns            3         1.99824M           525.233M        5.83715M       291.686M    812.896M              5.92037            3.8253       3.10957G          927.339M                    6.75386                     1.14079           2.00556M    2.02729M   137.305M       500.195M/s   5.83606M   291.732M   813.987M         5.92831    3.81991/s 3.10936G/s     927.339M               6.75386                1.13926   524.288k       2.00273M/s [BEST: throughput=  0.53 GB/s doc_throughput=     3 docs/s instructions=   927339358 cycles=   812895708 branch_miss= 1998243 cache_miss= 5837154 cache_ref= 291685712 items=    524288 avg_time= 261786462 ns]
kostya<rapidjson>/manual_time                          592549240 ns    603236380 ns            1         5.38018M           231.719M        5.34197M       1.20237G    1.85876G              13.5374           1.68762       3.13688G          2.46967G                    17.9868                     1.32867           884.801k    5.38018M   137.305M       220.985M/s   5.34197M   1.20237G   1.85876G         13.5374    1.68762/s 3.13688G/s     2.46967G               17.9868                1.32867   524.288k       884.801k/s [BEST: throughput=  0.23 GB/s doc_throughput=     1 docs/s instructions=  2469673185 cycles=  1858755805 branch_miss= 5380179 cache_miss= 5341968 cache_ref=1202370265 items=    524288 avg_time= 592549240 ns]
kostya<rapidjson_lossless>/manual_time                 640666329 ns    651320648 ns            1         6.55733M           214.316M        5.34027M       1.34903G    2.01228G              14.6555           1.56087       3.14092G          2.71451G                    19.7699                     1.34897           818.348k    6.55733M   137.305M       204.388M/s   5.34027M   1.34903G   2.01228G         14.6555    1.56087/s 3.14092G/s     2.71451G               19.7699                1.34897   524.288k       818.348k/s [BEST: throughput=  0.21 GB/s doc_throughput=     1 docs/s instructions=  2714507779 cycles=  2012278867 branch_miss= 6557327 cache_miss= 5340265 cache_ref=1349030614 items=    524288 avg_time= 640666329 ns]
kostya<rapidjson_insitu>/manual_time                   532048073 ns    542728337 ns            1         5.54035M           258.069M        6.33433M       907.031M    1.66522G              12.1279           1.87953       3.12982G          1.99322G                    14.5167                     1.19697           985.415k    5.54035M   137.305M       246.114M/s   6.33433M   907.031M   1.66522G         12.1279    1.87953/s 3.12982G/s     1.99322G               14.5167                1.19697   524.288k       985.415k/s [BEST: throughput=  0.26 GB/s doc_throughput=     1 docs/s instructions=  1993215275 cycles=  1665215520 branch_miss= 5540350 cache_miss= 6334334 cache_ref= 907031008 items=    524288 avg_time= 532048073 ns]
distinct_user_id<simdjson_dom>/manual_time               1563485 ns      1644811 ns          448          13.777k            409.66M         26.538k       947.946k    4.93468M              7.81403           648.694       3.20109G          3.87901M                    6.14239                    0.786071           74.5998k    13.9406k   631.515k       385.203M/s   26.5381k    949.84k   4.99969M         7.91698    639.597/s 3.19779G/s     3.87901M               6.14239                0.77585        115       73.5536k/s [BEST: throughput=  0.41 GB/s doc_throughput=   648 docs/s instructions=     3879010 cycles=     4934679 branch_miss=   13777 cache_miss=   26538 cache_ref=    947946 items=       115 avg_time=   1563485 ns]
distinct_user_id<simdjson_ondemand>/manual_time          1042101 ns      1125765 ns          672           9.265k           608.585M         22.504k       427.037k     3.3224M                5.261           963.691       3.20177G          2.67029M                    4.22839                    0.803724           110.824k    9.55103k   631.515k       577.928M/s   22.5153k   427.912k   3.33252M         5.27702      959.6/s 3.19788G/s     2.67029M               4.22839               0.801283        115       110.354k/s [BEST: throughput=  0.61 GB/s doc_throughput=   963 docs/s instructions=     2670292 cycles=     3322400 branch_miss=    9265 cache_miss=   22504 cache_ref=    427037 items=       115 avg_time=   1042101 ns]
distinct_user_id<yyjson>/manual_time                     1184646 ns      1271864 ns          598          46.697k           605.461M         24.254k       1.39476M    3.33958M              5.28821           958.743        3.2018G          3.23372M                    5.12058                    0.968303           110.255k    46.2171k   631.515k       508.388M/s   24.2968k   1.39529M   3.56074M         5.63841    844.134/s 3.00574G/s     3.23417M               5.12128               0.908285        115       97.0754k/s [BEST: throughput=  0.61 GB/s doc_throughput=   958 docs/s instructions=     3233725 cycles=     3339581 branch_miss=   46697 cache_miss=   24254 cache_ref=   1394761 items=       115 avg_time=   1184646 ns]
distinct_user_id<yyjson_insitu>/manual_time              1097181 ns      1184513 ns          639          46.275k           633.691M         14.388k       1.23588M     3.1908M              5.05261           1003.45       3.20179G          3.13496M                    4.96419                    0.982499           115.396k    46.0653k   631.515k       548.916M/s   14.4068k   1.23614M   3.39563M         5.37696    911.427/s 3.09487G/s     3.13511M               4.96442               0.923277        115       104.814k/s [BEST: throughput=  0.63 GB/s doc_throughput=  1003 docs/s instructions=     3134958 cycles=     3190800 branch_miss=   46275 cache_miss=   14388 cache_ref=   1235878 items=       115 avg_time=   1097180 ns]
distinct_user_id<rapidjson>/manual_time                  4571343 ns      4658770 ns          153          82.501k           140.279M         13.604k       13.3801M    14.4082M              22.8152           222.132       3.20051G          20.6321M                    32.6708                     1.43197           25.5451k    82.5789k   631.515k       131.747M/s   13.8055k   13.3755M   14.4586M         22.8952    218.754/s 3.16289G/s     20.6326M               32.6716                1.42701        115       25.1567k/s [BEST: throughput=  0.14 GB/s doc_throughput=   222 docs/s instructions=    20632127 cycles=    14408162 branch_miss=   82501 cache_miss=   13604 cache_ref=  13380104 items=       115 avg_time=   4571342 ns]
distinct_user_id<rapidjson_insitu>/manual_time           2855026 ns      2943131 ns          247          60.067k           225.987M         14.023k       5.83617M    8.94425M              14.1632           357.848       3.20069G          12.7739M                    20.2274                     1.42817           41.1526k    60.3093k   631.515k       210.947M/s   14.1862k    5.8378M   8.98254M         14.2238    350.259/s 3.14622G/s     12.7745M               20.2283                1.42214        115       40.2798k/s [BEST: throughput=  0.23 GB/s doc_throughput=   357 docs/s instructions=    12773927 cycles=     8944250 branch_miss=   60067 cache_miss=   14023 cache_ref=   5836169 items=       115 avg_time=   2855026 ns]
find_tweet<simdjson_dom>/manual_time                     1517768 ns      1599578 ns          461          13.589k           418.159M         23.532k       933.799k    4.83467M              7.65567           662.152       3.20129G           3.7886M                    5.99922                    0.783632            662.152    13.6835k   631.515k       396.806M/s   23.5335k   934.446k   4.85331M         7.68518    658.862/s 3.19766G/s      3.7886M               5.99922               0.780622          1        658.862/s [BEST: throughput=  0.42 GB/s doc_throughput=   662 docs/s instructions=     3788599 cycles=     4834669 branch_miss=   13589 cache_miss=   23532 cache_ref=    933799 items=         1 avg_time=   1517767 ns]
find_tweet<simdjson_ondemand>/manual_time                 904953 ns       987814 ns          773           4.646k           699.929M         11.593k       234.895k     2.8889M              4.57455          1.10833k       3.20186G          2.11685M                    3.35202                    0.732753           1.10833k    4.88292k   631.515k       665.515M/s   11.5951k   235.523k   2.89444M         4.58333   1.10503k/s 3.19844G/s     2.11685M               3.35201               0.731349          1       1.10503k/s [BEST: throughput=  0.70 GB/s doc_throughput=  1108 docs/s instructions=     2116848 cycles=     2888899 branch_miss=    4646 cache_miss=   11593 cache_ref=    234895 items=         1 avg_time=    904953 ns]
find_tweet<yyjson>/manual_time                           1130681 ns      1218214 ns          619           46.05k           614.893M         21.779k       1.42056M    3.28821M              5.20687           973.679       3.20166G          3.17691M                    5.03062                    0.966151            973.679    46.0815k   631.515k       532.652M/s   21.7712k   1.38002M   3.39107M         5.36974    884.423/s 2.99914G/s     3.17713M               5.03096               0.936909          1        884.423/s [BEST: throughput=  0.61 GB/s doc_throughput=   973 docs/s instructions=     3176910 cycles=     3288214 branch_miss=   46050 cache_miss=   21779 cache_ref=   1420559 items=         1 avg_time=   1130681 ns]
find_tweet<yyjson_insitu>/manual_time                    1050422 ns      1139447 ns          668          45.959k           663.488M         11.899k       1.22078M    3.04818M              4.82677           1050.63        3.2025G          3.07821M                    4.87433                     1.00985            1050.63    46.0012k   631.515k        573.35M/s   11.8975k   1.22099M   3.24661M         5.14099    951.999/s 3.09077G/s     3.07836M               4.87457               0.948176          1        951.999/s [BEST: throughput=  0.66 GB/s doc_throughput=  1050 docs/s instructions=     3078214 cycles=     3048178 branch_miss=   45959 cache_miss=   11899 cache_ref=   1220778 items=         1 avg_time=   1050421 ns]
find_tweet<rapidjson>/manual_time                        4558696 ns      4648164 ns          151          80.517k           140.536M         10.872k       13.3582M    14.3817M              22.7733           222.538       3.20047G          20.5751M                    32.5805                     1.43065            222.538    80.6185k   631.515k       132.112M/s   11.0769k    13.355M   14.4184M         22.8315    219.361/s 3.16284G/s     20.5755M               32.5812                1.42703          1        219.361/s [BEST: throughput=  0.14 GB/s doc_throughput=   222 docs/s instructions=    20575091 cycles=    14381686 branch_miss=   80517 cache_miss=   10872 cache_ref=  13358161 items=         1 avg_time=   4558696 ns]
find_tweet<rapidjson_insitu>/manual_time                 2997579 ns      3088009 ns          250          59.783k           228.707M         10.667k       5.81881M    8.83859M              13.9959           362.157       3.20096G          12.7154M                    20.1348                     1.43863            362.157    60.2177k   631.515k       200.915M/s   10.8266k   5.82055M   8.87028M          14.046    333.603/s 2.95915G/s     12.7159M               20.1356                1.43354          1        333.603/s [BEST: throughput=  0.23 GB/s doc_throughput=   362 docs/s instructions=    12715423 cycles=     8838594 branch_miss=   59783 cache_miss=   10667 cache_ref=   5818806 items=         1 avg_time=   2997578 ns]
