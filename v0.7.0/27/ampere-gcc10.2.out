run_benchmark: v0.8.0~11 /home/jkeiser/simdjson_benchmark_results/v0.7.0/27/ampere-gcc10.2.json -DCMAKE_BUILD_TYPE=Release
git reset --hard v0.8.0~11
HEAD is now at 3b848666 Removing trailing white space.
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- git Version: v0.2.1-3b848666
-- Version: 0.2.1
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 11
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
make[3]: Nothing to be done for '_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build'.
[ 72%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
make[3]: Nothing to be done for 'jsonexamples/generated/CMakeFiles/generated-data.dir/build'.
[ 72%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
make[3]: Nothing to be done for 'src/CMakeFiles/simdjson.dir/build'.
[ 81%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
make[3]: Nothing to be done for 'dependencies/CMakeFiles/yyjson.dir/build'.
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/g++-10  -DRAPIDJSON_HAS_STDSTRING -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_COMPETITION_RAPIDJSON -DSIMDJSON_COMPETITION_YYJSON -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/rapidjson/include  -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/g++-10  -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.6.0.0 ../_deps/google_benchmarks/src/libbenchmark.a ../dependencies/libyyjson.a -pthread /usr/lib/aarch64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/27/ampere-gcc10.2.json --benchmark_out_format=json
2021-01-25 00:19:18
Running benchmark/bench_ondemand
Run on (32 X 3300 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x32)
  L1 Instruction 32 KiB (x32)
  L2 Unified 256 KiB (x16)
Load Average: 1.04, 1.03, 1.00
simdjson::dom implementation:      arm64
simdjson::ondemand implementation: arm64

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                 1576529 ns      1645543 ns          444          16.991k           401.516M         25.911k       905.535k    5.03566M              7.97394           635.798       3.20166G          3.92138M                    6.20949                    0.778722           63.5798k    17.2746k   631.515k       382.016M/s   25.9136k   906.221k    5.0421M         7.98414    634.305/s 3.19823G/s     3.92138M               6.20949               0.777728        100       63.4305k/s [BEST: throughput=  0.40 GB/s doc_throughput=   635 docs/s instructions=     3921383 cycles=     5035662 branch_miss=   16991 cache_miss=   25911 cache_ref=    905535 items=       100 avg_time=   1576528 ns]
partial_tweets<simdjson_ondemand>/manual_time            1067475 ns      1136930 ns          656           6.695k           592.979M         22.755k       403.406k    3.41023M              5.40007           938.978       3.20213G          2.76039M                    4.37106                    0.809445           93.8978k    6.83552k   631.515k       564.191M/s   22.7685k   403.617k   3.41472M         5.40719     936.79/s 3.19888G/s     2.76039M               4.37106               0.808379        100        93.679k/s [BEST: throughput=  0.59 GB/s doc_throughput=   938 docs/s instructions=     2760389 cycles=     3410226 branch_miss=    6695 cache_miss=   22755 cache_ref=    403406 items=       100 avg_time=   1067474 ns]
partial_tweets<yyjson>/manual_time                       1243761 ns      1310364 ns          566          46.633k           577.142M         24.427k       1.48657M    3.50401M              5.54857           913.901       3.20232G          3.54867M                    5.61929                     1.01275           91.3901k    46.4161k   631.515k       484.225M/s   24.3722k   1.48752M   3.73462M         5.91375    804.013/s 3.00268G/s     3.54889M               5.61964               0.950267        100       80.4013k/s [BEST: throughput=  0.58 GB/s doc_throughput=   913 docs/s instructions=     3548665 cycles=     3504006 branch_miss=   46633 cache_miss=   24427 cache_ref=   1486574 items=       100 avg_time=   1243760 ns]
partial_tweets<yyjson_insitu>/manual_time                1156387 ns      1228701 ns          607          46.317k           600.155M         14.516k       1.32803M    3.36948M              5.33555           950.341       3.20215G          3.44975M                    5.46266                     1.02382           95.0341k    46.4561k   631.515k       520.811M/s   14.5315k   1.32853M    3.5869M         5.67983    864.762/s 3.10181G/s     3.44983M               5.46278               0.961786        100       86.4762k/s [BEST: throughput=  0.60 GB/s doc_throughput=   950 docs/s instructions=     3449754 cycles=     3369479 branch_miss=   46317 cache_miss=   14516 cache_ref=   1328025 items=       100 avg_time=   1156387 ns]
partial_tweets<rapidjson>/manual_time                    2848532 ns      2921024 ns          245          80.449k           226.911M         13.383k       6.28347M    8.85949M              14.0289           359.311       3.18331G          13.4037M                    21.2246                     1.51292           35.9311k      80.25k   631.515k       211.428M/s   13.5347k   6.28379M   8.89646M         14.0875    351.058/s 3.12317G/s     13.4043M               21.2256                 1.5067        100       35.1058k/s [BEST: throughput=  0.23 GB/s doc_throughput=   359 docs/s instructions=    13403681 cycles=     8859485 branch_miss=   80449 cache_miss=   13383 cache_ref=   6283474 items=       100 avg_time=   2848531 ns]
partial_tweets<rapidjson_insitu>/manual_time             2140820 ns      2214194 ns          327           61.22k           303.763M         13.865k       3.48676M    6.65505M              10.5382           481.006       3.20112G          9.78144M                    15.4888                     1.46978           48.1006k    61.2778k   631.515k       281.322M/s   14.0376k   3.48822M   6.69286M         10.5981    467.111/s 3.12631G/s     9.78219M                 15.49                1.46159        100       46.7111k/s [BEST: throughput=  0.30 GB/s doc_throughput=   481 docs/s instructions=     9781435 cycles=     6655053 branch_miss=   61220 cache_miss=   13865 cache_ref=   3486755 items=       100 avg_time=   2140820 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                 311110389 ns    314736524 ns            2         1.92254M           147.872M        3.98125M       246.809M    994.559M              21.6214            3.2147        3.1972G          1.10647G                    24.0544                     1.11253            3.2147M    1.92271M   45.9988M       141.004M/s   3.98127M   246.808M   994.632M          21.623    3.21429/s 3.19704G/s     1.10647G               24.0544                1.11244      1000k       3.21429M/s [BEST: throughput=  0.15 GB/s doc_throughput=     3 docs/s instructions=  1106472996 cycles=   994559023 branch_miss= 1922535 cache_miss= 3981253 cache_ref= 246808788 items=   1000000 avg_time= 311110389 ns]
large_random<simdjson_ondemand>/manual_time            183469023 ns    187079423 ns            4          1.2153M           250.729M        2.31718M       134.484M    586.525M              12.7509           5.45077       3.19701G          689.959M                    14.9995                     1.17635           5.45077M    1.21564M   45.9988M       239.102M/s   2.31718M   134.484M   586.535M         12.7511    5.45051/s 3.19691G/s     689.959M               14.9995                1.17633      1000k       5.45051M/s [BEST: throughput=  0.25 GB/s doc_throughput=     5 docs/s instructions=   689958640 cycles=   586525371 branch_miss= 1215302 cache_miss= 2317179 cache_ref= 134483517 items=   1000000 avg_time= 183469022 ns]
large_random<simdjson_ondemand_unordered>/manual_time  184906901 ns    188528518 ns            4         1.20248M            248.79M        2.31718M       138.404M    591.143M              12.8513           5.40862       3.19727G          693.959M                    15.0865                     1.17393           5.40862M    1.20218M   45.9988M       237.243M/s   2.31719M   138.403M   591.149M         12.8514    5.40813/s 3.19701G/s     693.959M               15.0865                1.17391      1000k       5.40813M/s [BEST: throughput=  0.25 GB/s doc_throughput=     5 docs/s instructions=   693958642 cycles=   591143204 branch_miss= 1202476 cache_miss= 2317176 cache_ref= 138403576 items=   1000000 avg_time= 184906901 ns]
large_random<yyjson>/manual_time                       204119034 ns    207728408 ns            3         1.58181M            225.37M        4.91279M       234.947M    627.413M              13.6398           4.89947       3.07399G          908.191M                    19.7438                     1.44752           4.89947M    1.58158M   45.9988M       214.913M/s   4.91272M   234.951M   627.547M         13.6427     4.8991/s 3.07442G/s     908.191M               19.7438                1.44721      1000k        4.8991M/s [BEST: throughput=  0.23 GB/s doc_throughput=     4 docs/s instructions=   908191346 cycles=   627413190 branch_miss= 1581806 cache_miss= 4912787 cache_ref= 234947315 items=   1000000 avg_time= 204119034 ns]
large_random<yyjson_insitu>/manual_time                198137064 ns    201742896 ns            4         1.58184M           232.227M        4.19584M       223.438M    615.159M              13.3734           5.04854       3.10566G          901.004M                    19.5876                     1.46467           5.04854M    1.58104M   45.9988M       221.402M/s    4.1958M   223.439M   615.412M         13.3789    5.04701/s 3.10599G/s     901.004M               19.5876                1.46406      1000k       5.04701M/s [BEST: throughput=  0.23 GB/s doc_throughput=     5 docs/s instructions=   901003713 cycles=   615158990 branch_miss= 1581836 cache_miss= 4195842 cache_ref= 223437833 items=   1000000 avg_time= 198137064 ns]
large_random<rapidjson>/manual_time                    352740679 ns    356362380 ns            2         1.99479M           130.741M        4.95247M       765.049M    1097.81M              23.8662           2.84226       3.12027G          1.67651G                    36.4468                     1.52713           2.84226M    2.01152M   45.9988M       124.363M/s   4.95339M   765.017M   1098.26M         23.8759    2.83494/s 3.11351G/s     1.67651G               36.4469                1.52651      1000k       2.83494M/s [BEST: throughput=  0.13 GB/s doc_throughput=     2 docs/s instructions=  1676506470 cycles=  1097813885 branch_miss= 1994790 cache_miss= 4952465 cache_ref= 765049447 items=   1000000 avg_time= 352740679 ns]
large_random<rapidjson_lossless>/manual_time           471955908 ns    395441923 ns            2         2.08535M           117.796M        4.95273M       955.108M     1.2212G              26.5486           2.56085       3.12732G          1.97648G                    42.9681                     1.61847           2.56085M    2.11247M   45.9988M        92.949M/s   4.95376M   955.179M   1.22241G         26.5748    2.11884/s 2.59009G/s     1.97649G               42.9682                1.61688      1000k       2.11884M/s [BEST: throughput=  0.12 GB/s doc_throughput=     2 docs/s instructions=  1976481590 cycles=  1221203900 branch_miss= 2085350 cache_miss= 4952732 cache_ref= 955108371 items=   1000000 avg_time= 471955907 ns]
large_random<rapidjson_insitu>/manual_time             339276212 ns    342903235 ns            2          2.1046M           135.838M        5.66998M       749.567M    1055.28M              22.9414           2.95309       3.11632G           1.5665G                    34.0553                     1.48445           2.95309M    2.12463M   45.9988M       129.298M/s   5.67076M   749.573M   1054.94M         22.9341    2.94745/s 3.10938G/s     1.56651G               34.0554                1.48493      1000k       2.94745M/s [BEST: throughput=  0.14 GB/s doc_throughput=     2 docs/s instructions=  1566500975 cycles=  1055276310 branch_miss= 2104602 cache_miss= 5669985 cache_ref= 749567151 items=   1000000 avg_time= 339276212 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                       379746077 ns    390428168 ns            2         1.10314M           361.602M        6.94558M       246.887M    1.21385G              8.84056           2.63356       3.19676G          1.14604G                    8.34671                    0.944138           1.38075M    1.10431M   137.305M       344.821M/s    6.9456M   246.889M   1.21389G         8.84081    2.63334/s 3.19658G/s     1.14604G               8.34671               0.944111   524.288k       1.38063M/s [BEST: throughput=  0.36 GB/s doc_throughput=     2 docs/s instructions=  1146044348 cycles=  1213853179 branch_miss= 1103140 cache_miss= 6945581 cache_ref= 246886711 items=    524288 avg_time= 379746076 ns]
kostya<simdjson_ondemand>/manual_time                  258659684 ns    269324786 ns            3         1.18508M           531.081M        5.28309M       138.227M    826.495M              6.01941           3.86789        3.1968G          797.121M                    5.80547                    0.964459           2.02789M    1.19855M   137.305M       506.241M/s   5.28308M   138.267M   826.826M         6.02182    3.86608/s 3.19658G/s     797.121M               5.80547               0.964073   524.288k       2.02694M/s [BEST: throughput=  0.53 GB/s doc_throughput=     3 docs/s instructions=   797120557 cycles=   826495319 branch_miss= 1185082 cache_miss= 5283091 cache_ref= 138226680 items=    524288 avg_time= 258659683 ns]
kostya<yyjson>/manual_time                             294003348 ns    304698346 ns            2         996.644k           467.328M         7.9855M       344.805M    895.949M              6.52525           3.40357       3.04943G          1052.15M                    7.66288                     1.17434           1.78445M    983.901k   137.305M       445.384M/s    7.9877M   344.764M   896.618M         6.53012    3.40132/s 3.04969G/s     1052.15M               7.66288                1.17347   524.288k       1.78327M/s [BEST: throughput=  0.47 GB/s doc_throughput=     3 docs/s instructions=  1052152092 cycles=   895948778 branch_miss=  996644 cache_miss= 7985501 cache_ref= 344804502 items=    524288 avg_time= 294003348 ns]
kostya<yyjson_insitu>/manual_time                      276460321 ns    287137675 ns            3         977.685k           497.185M        5.84842M       310.391M    860.088M              6.26407           3.62103        3.1144G           1030.7M                    7.50663                     1.19836           1.89846M    993.645k   137.305M       473.646M/s   5.84601M   310.458M   861.172M         6.27196    3.61716/s 3.11499G/s      1030.7M               7.50663                1.19686   524.288k       1.89643M/s [BEST: throughput=  0.50 GB/s doc_throughput=     3 docs/s instructions=  1030698155 cycles=   860087529 branch_miss=  977685 cache_miss= 5848421 cache_ref= 310390791 items=    524288 avg_time= 276460321 ns]
kostya<rapidjson>/manual_time                          587719811 ns    598394226 ns            1         8.73611M           233.623M        5.38758M       978.927M    1.84384G              13.4288           1.70149       3.13727G          2.38981G                    17.4051                     1.29611           892.071k    8.73611M   137.305M         222.8M/s   5.38758M   978.927M   1.84384G         13.4288    1.70149/s 3.13727G/s     2.38981G               17.4051                1.29611   524.288k       892.071k/s [BEST: throughput=  0.23 GB/s doc_throughput=     1 docs/s instructions=  2389812606 cycles=  1843835912 branch_miss= 8736112 cache_miss= 5387581 cache_ref= 978926789 items=    524288 avg_time= 587719811 ns]
kostya<rapidjson_lossless>/manual_time                 610710411 ns    621374224 ns            1         8.57946M           224.828M        5.39001M       1097.42M    1.91695G              13.9613           1.63744       3.13889G          2.56492G                    18.6804                     1.33802           858.489k    8.57946M   137.305M       214.413M/s   5.39001M   1097.42M   1.91695G         13.9613    1.63744/s 3.13889G/s     2.56492G               18.6804                1.33802   524.288k       858.489k/s [BEST: throughput=  0.22 GB/s doc_throughput=     1 docs/s instructions=  2564918501 cycles=  1916950585 branch_miss= 8579461 cache_miss= 5390011 cache_ref=1097418411 items=    524288 avg_time= 610710411 ns]
kostya<rapidjson_insitu>/manual_time                   543520590 ns    554201914 ns            1         7.20917M           252.622M        6.36369M       878.753M    1.70263G              12.4004           1.83986        3.1326G          2.17945G                    15.8731                     1.28005           964.615k    7.20917M   137.305M       240.919M/s   6.36369M   878.753M   1.70263G         12.4004    1.83986/s  3.1326G/s     2.17945G               15.8731                1.28005   524.288k       964.615k/s [BEST: throughput=  0.25 GB/s doc_throughput=     1 docs/s instructions=  2179452286 cycles=  1702631335 branch_miss= 7209172 cache_miss= 6363687 cache_ref= 878752536 items=    524288 avg_time= 543520590 ns]
distinct_user_id<simdjson_dom>/manual_time               1567991 ns      1656309 ns          447          16.772k           404.229M          26.52k       890.066k    5.00185M              7.92039           640.094       3.20165G          3.85168M                    6.09911                    0.770051           73.6108k    16.9813k   631.515k       384.096M/s   26.5267k   890.686k   5.01322M          7.9384    637.759/s 3.19723G/s     3.85168M               6.09911               0.768304        115       73.3423k/s [BEST: throughput=  0.40 GB/s doc_throughput=   640 docs/s instructions=     3851680 cycles=     5001848 branch_miss=   16772 cache_miss=   26520 cache_ref=    890066 items=       115 avg_time=   1567991 ns]
distinct_user_id<simdjson_ondemand>/manual_time          1049660 ns      1131043 ns          667           6.315k           602.994M         22.384k        378.39k    3.35362M              5.31044           954.837       3.20216G          2.69513M                    4.26772                    0.803648           109.806k    6.47226k   631.515k       573.767M/s   22.3877k   378.771k   3.35765M         5.31681     952.69/s 3.19879G/s     2.69513M               4.26772               0.802685        115       109.559k/s [BEST: throughput=  0.60 GB/s doc_throughput=   954 docs/s instructions=     2695132 cycles=     3353623 branch_miss=    6315 cache_miss=   22384 cache_ref=    378390 items=       115 avg_time=   1049659 ns]
distinct_user_id<yyjson>/manual_time                     1218657 ns      1303776 ns          580          46.785k            583.95M         24.182k       1.47143M    3.46322M              5.48398           924.681       3.20237G           3.5132M                    5.56313                     1.01443           106.338k    46.4201k   631.515k       494.199M/s   24.2007k   1.47242M   3.67557M         5.82025    820.575/s 3.01608G/s     3.51334M               5.56336               0.955863        115       94.3662k/s [BEST: throughput=  0.58 GB/s doc_throughput=   924 docs/s instructions=     3513197 cycles=     3463218 branch_miss=   46785 cache_miss=   24182 cache_ref=   1471429 items=       115 avg_time=   1218657 ns]
distinct_user_id<yyjson_insitu>/manual_time              1138846 ns      1224222 ns          616           46.35k           611.519M         14.307k       1.31272M    3.30689M              5.23643           968.336       3.20218G          3.41429M                     5.4065                     1.03248           111.359k    46.4861k   631.515k       528.833M/s   14.3319k   1.31319M   3.53101M         5.59133    878.082/s 3.10051G/s     3.41428M                5.4065               0.966943        115       100.979k/s [BEST: throughput=  0.61 GB/s doc_throughput=   968 docs/s instructions=     3414286 cycles=     3306885 branch_miss=   46350 cache_miss=   14307 cache_ref=   1312719 items=       115 avg_time=   1138846 ns]
distinct_user_id<rapidjson>/manual_time                  2833311 ns      2918760 ns          246          80.141k           228.897M         13.878k       6.26832M    8.83109M               13.984           362.457       3.20089G          13.3656M                    21.1644                     1.51347           41.6826k    80.1655k   631.515k       212.564M/s   14.0821k   6.26902M   8.88119M         14.0633    352.944/s 3.13456G/s     13.3662M               21.1653                  1.505        115       40.5886k/s [BEST: throughput=  0.23 GB/s doc_throughput=   362 docs/s instructions=    13365628 cycles=     8831090 branch_miss=   80141 cache_miss=   13878 cache_ref=   6268322 items=       115 avg_time=   2833311 ns]
distinct_user_id<rapidjson_insitu>/manual_time           2126213 ns      2212285 ns          331          61.143k           305.674M         14.063k       3.47341M    6.61319M               10.472           484.033         3.201G          9.74142M                    15.4255                     1.47303           55.6638k    61.3043k   631.515k       283.255M/s    14.246k   3.47447M    6.6517M         10.5329     470.32/s 3.12843G/s     9.74195M               15.4263                1.46458        115       54.0868k/s [BEST: throughput=  0.31 GB/s doc_throughput=   484 docs/s instructions=     9741415 cycles=     6613194 branch_miss=   61143 cache_miss=   14063 cache_ref=   3473413 items=       115 avg_time=   2126213 ns]
find_tweet<simdjson_dom>/manual_time                     1518595 ns      1600063 ns          461          16.509k           416.926M         23.462k       873.844k    4.84907M              7.67847             660.2       3.20135G          3.76236M                    5.95767                    0.775894              660.2    16.7574k   631.515k        396.59M/s   23.4675k   874.545k   4.85612M         7.68963    658.503/s 3.19777G/s     3.76236M               5.95767               0.774767          1        658.503/s [BEST: throughput=  0.42 GB/s doc_throughput=   660 docs/s instructions=     3762360 cycles=     4849067 branch_miss=   16509 cache_miss=   23462 cache_ref=    873844 items=         1 avg_time=   1518595 ns]
find_tweet<simdjson_ondemand>/manual_time                 915832 ns       997623 ns          764           4.057k           691.145M         11.571k       194.312k    2.92597M              4.63325           1094.42       3.20225G          2.05906M                     3.2605                    0.703719            1094.42    4.22164k   631.515k        657.61M/s   11.5715k    194.44k   2.92968M         4.63914     1091.9/s 3.19893G/s     2.05906M               3.26051               0.702827          1         1091.9/s [BEST: throughput=  0.69 GB/s doc_throughput=  1094 docs/s instructions=     2059057 cycles=     2925966 branch_miss=    4057 cache_miss=   11571 cache_ref=    194312 items=         1 avg_time=    915831 ns]
find_tweet<yyjson>/manual_time                           1180259 ns      1265710 ns          593          46.561k           606.404M         21.667k       1.45522M    3.33479M              5.28062           960.237       3.20219G          3.45929M                    5.47776                     1.03733            960.237    45.9688k   631.515k       510.278M/s   21.7001k   1.45617M   3.55267M         5.62563    847.272/s 3.01008G/s     3.45951M               5.47811               0.973776          1        847.272/s [BEST: throughput=  0.61 GB/s doc_throughput=   960 docs/s instructions=     3459287 cycles=     3334790 branch_miss=   46561 cache_miss=   21667 cache_ref=   1455225 items=         1 avg_time=   1180258 ns]
find_tweet<yyjson_insitu>/manual_time                    1102626 ns      1189507 ns          637           45.96k           631.789M         11.788k       1.29727M    3.20092M              5.06863           1000.43       3.20231G          3.36059M                    5.32148                     1.04988            1000.43    45.9416k   631.515k       546.205M/s   11.8111k   1.29733M   3.41522M         5.40798    906.925/s 3.09735G/s     3.36075M               5.32172               0.984049          1        906.925/s [BEST: throughput=  0.63 GB/s doc_throughput=  1000 docs/s instructions=     3360593 cycles=     3200918 branch_miss=   45960 cache_miss=   11788 cache_ref=   1297267 items=         1 avg_time=   1102626 ns]
find_tweet<rapidjson>/manual_time                        2804594 ns      2891882 ns          249          79.859k           230.971M         11.188k       6.25978M    8.75141M              13.8578           365.742       3.20076G          13.3223M                    21.0958                      1.5223            365.742    79.9929k   631.515k        214.74M/s   11.4194k   6.26107M   8.78959M         13.9183    356.558/s   3.134G/s     13.3229M               21.0967                1.51576          1        356.558/s [BEST: throughput=  0.23 GB/s doc_throughput=   365 docs/s instructions=    13322283 cycles=     8751409 branch_miss=   79859 cache_miss=   11188 cache_ref=   6259782 items=         1 avg_time=   2804594 ns]
find_tweet<rapidjson_insitu>/manual_time                 2096285 ns      2183128 ns          276          60.919k           309.587M          10.74k       3.45969M    6.52974M              10.3398           490.229       3.20107G           9.6974M                    15.3558                     1.48511            490.229    61.1762k   631.515k       287.299M/s   10.8925k   3.46157M    6.5572M         10.3833    477.034/s 3.12801G/s     9.69791M               15.3566                1.47897          1        477.034/s [BEST: throughput=  0.31 GB/s doc_throughput=   490 docs/s instructions=     9697397 cycles=     6529744 branch_miss=   60919 cache_miss=   10740 cache_ref=   3459687 items=         1 avg_time=   2096285 ns]
