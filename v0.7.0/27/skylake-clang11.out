run_benchmark: v0.8.0~11 /home/jkeiser/simdjson_benchmark_results/v0.7.0/27/skylake-clang11.json -DCMAKE_BUILD_TYPE=Release
git reset --hard v0.8.0~11
HEAD is now at 3b848666 Removing trailing white space.
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- git Version: v0.2.1-3b848666
-- Version: 0.2.1
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES -- failed to compile
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 11
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
make[3]: Nothing to be done for '_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build'.
[ 72%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
make[3]: Nothing to be done for 'jsonexamples/generated/CMakeFiles/generated-data.dir/build'.
[ 72%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
make[3]: Nothing to be done for 'src/CMakeFiles/simdjson.dir/build'.
[ 81%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
make[3]: Nothing to be done for 'dependencies/CMakeFiles/yyjson.dir/build'.
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/clang++-11  -DRAPIDJSON_HAS_STDSTRING -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_COMPETITION_RAPIDJSON -DSIMDJSON_COMPETITION_YYJSON -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/rapidjson/include  -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/clang++-11  -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.6.0.0 ../_deps/google_benchmarks/src/libbenchmark.a ../dependencies/libyyjson.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/27/skylake-clang11.json --benchmark_out_format=json
2021-01-24 23:33:48
Running benchmark/bench_ondemand
Run on (4 X 4000 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 256 KiB (x4)
  L3 Unified 8192 KiB (x1)
Load Average: 1.00, 0.98, 0.96
simdjson::dom implementation:      haswell
simdjson::ondemand implementation: fallback

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                  273683 ns       301918 ns         2562           3.359k           2.32104G               0        87.933k    1004.63k              1.59083          3.67535k       3.69237G           2.9828M                    4.72325                     2.96905           367.535k    3.50754k   631.515k         2.149G/s    1.74122   87.8161k   1010.07k         1.59944   3.65387k/s 3.69066G/s      2.9828M               4.72325                2.95307        100       365.387k/s [BEST: throughput=  2.32 GB/s doc_throughput=  3675 docs/s instructions=     2982801 cycles=     1004631 branch_miss=    3359 cache_miss=       0 cache_ref=     87933 items=       100 avg_time=    273682 ns]
partial_tweets<simdjson_ondemand>/manual_time             181361 ns       209431 ns         3829           1.955k           3.50132G               0        54.823k    666.144k              1.05483          5.54431k       3.69331G           2.2643M                     3.5855                     3.39911           554.431k    2.07711k   631.515k       3.24294G/s   0.519718   54.9183k   669.425k         1.06003   5.51386k/s 3.69111G/s      2.2643M                3.5855                3.38245        100       551.386k/s [BEST: throughput=  3.50 GB/s doc_throughput=  5544 docs/s instructions=     2264295 cycles=      666144 branch_miss=    1955 cache_miss=       0 cache_ref=     54823 items=       100 avg_time=    181361 ns]
partial_tweets<yyjson>/manual_time                        634873 ns       665171 ns         1101           9.522k           1.82952G             345        75.915k    1.27472M              2.01851          2.89704k       3.69291G           2.9199M                    4.62365                     2.29063           289.704k    7.38433k   631.515k        948.63M/s    1006.61   49.3444k   1.49689M         2.37031   1.57512k/s 2.35777G/s     2.92039M               4.62442                1.95097        100       157.512k/s [BEST: throughput=  1.83 GB/s doc_throughput=  2897 docs/s instructions=     2919902 cycles=     1274717 branch_miss=    9522 cache_miss=     345 cache_ref=     75915 items=       100 avg_time=    634872 ns]
partial_tweets<yyjson_insitu>/manual_time                 424900 ns       453950 ns         1648           6.911k           2.05598G             391        45.477k    1.12818M              1.78647          3.25563k       3.67294G           2.9198M                    4.62348                     2.58806           325.563k    7.13648k   631.515k       1.38419G/s    140.561   31.8539k    1.2222M         1.93535   2.35349k/s 2.87645G/s     2.92006M               4.62389                2.38917        100       235.349k/s [BEST: throughput=  2.06 GB/s doc_throughput=  3255 docs/s instructions=     2919795 cycles=     1128180 branch_miss=    6911 cache_miss=     391 cache_ref=     45477 items=       100 avg_time=    424900 ns]
partial_tweets<rapidjson>/manual_time                    2399911 ns      2428870 ns          292          30.867k           287.478M             386        51.676k     8.1094M              12.8412            455.22       3.69156G          21.8951M                    34.6707                     2.69996            45.522k    31.2774k   631.515k       250.951M/s    639.021   33.3188k   8.27034M          13.096    416.682/s  3.4461G/s      21.896M               34.6722                2.64754        100       41.6682k/s [BEST: throughput=  0.29 GB/s doc_throughput=   455 docs/s instructions=    21895091 cycles=     8109404 branch_miss=   30867 cache_miss=     386 cache_ref=     51676 items=       100 avg_time=   2399911 ns]
partial_tweets<rapidjson_insitu>/manual_time             1532251 ns      1561072 ns          457          26.958k           430.892M             412        39.274k    5.26335M              8.33447           682.314       3.59126G          13.3568M                    21.1505                     2.53771           68.2314k     27.255k   631.515k       393.055M/s    290.746   33.9463k   5.31143M         8.41062    652.635/s 3.46642G/s     13.3572M                21.151                 2.5148        100       65.2635k/s [BEST: throughput=  0.43 GB/s doc_throughput=   682 docs/s instructions=    13356832 cycles=     5263345 branch_miss=   26958 cache_miss=     412 cache_ref=     39274 items=       100 avg_time=   1532251 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                  89039579 ns     92428872 ns            8         946.195k           517.254M        10.9384M        15.232M    328.077M               7.1323           11.2449       3.68921G          1038.74M                    22.5819                     3.16614           11.2449M    948.559k   45.9988M       492.678M/s   10.9983M   15.2353M    328.47M         7.14083     11.231/s 3.68903G/s     1038.74M               22.5819                3.16236      1000k        11.231M/s [BEST: throughput=  0.52 GB/s doc_throughput=    11 docs/s instructions=  1038738106 cycles=   328077295 branch_miss=  946195 cache_miss=10938423 cache_ref=  15232018 items=   1000000 avg_time=  89039579 ns]
large_random<simdjson_ondemand>/manual_time             66917532 ns     70294630 ns           10         949.738k           687.806M         5.7393M       7.89037M    246.699M              5.36317           14.9527       3.68882G          671.195M                    14.5916                      2.7207           14.9527M    954.451k   45.9988M       655.551M/s   5.73458M   7.89241M   246.848M          5.3664    14.9438/s 3.68884G/s     671.195M               14.5916                2.71906      1000k       14.9438M/s [BEST: throughput=  0.69 GB/s doc_throughput=    14 docs/s instructions=   671194577 cycles=   246699275 branch_miss=  949738 cache_miss= 5739305 cache_ref=   7890369 items=   1000000 avg_time=  66917531 ns]
large_random<simdjson_ondemand_unordered>/manual_time   65703732 ns     69083474 ns           11         945.604k           701.781M        5.68006M       7.89159M    241.805M              5.25677           15.2565        3.6891G          669.195M                    14.5481                      2.7675           15.2565M    961.838k   45.9988M       667.661M/s   5.71756M   7.89214M   242.385M         5.26937    15.2198/s 3.68906G/s     669.195M               14.5481                2.76088      1000k       15.2198M/s [BEST: throughput=  0.70 GB/s doc_throughput=    15 docs/s instructions=   669194589 cycles=   241804783 branch_miss=  945604 cache_miss= 5680056 cache_ref=   7891591 items=   1000000 avg_time=  65703731 ns]
large_random<yyjson>/manual_time                       115955626 ns    119369843 ns            6         675.137k           397.064M         5.7519M        8.9036M    308.552M              6.70784           8.63207       2.66344G          855.681M                    18.6023                     2.77321           8.63207M    674.548k   45.9988M       378.316M/s   5.76021M   8.92252M    308.55M         6.70778    8.62399/s 2.66093G/s     855.681M               18.6023                2.77323      1000k       8.62399M/s [BEST: throughput=  0.40 GB/s doc_throughput=     8 docs/s instructions=   855680949 cycles=   308552277 branch_miss=  675137 cache_miss= 5751897 cache_ref=   8903598 items=   1000000 avg_time= 115955626 ns]
large_random<yyjson_insitu>/manual_time                 98336546 ns    101751161 ns            7         673.942k           467.973M        4.88848M       7.58157M    277.374M              6.03002           10.1736       2.82189G           849.56M                    18.4692                     3.06287           10.1736M    673.729k   45.9988M       446.099M/s   4.88792M    7.5763M   277.398M         6.03055    10.1692/s  2.8209G/s      849.56M               18.4692                3.06261      1000k       10.1692M/s [BEST: throughput=  0.47 GB/s doc_throughput=    10 docs/s instructions=   849560187 cycles=   277373677 branch_miss=  673942 cache_miss= 4888482 cache_ref=   7581568 items=   1000000 avg_time=  98336545 ns]
large_random<rapidjson>/manual_time                    214827388 ns    218241244 ns            3         597.067k           220.105M        7.05352M       10.7157M    712.896M              15.4981           4.78502       3.41122G          2.01514G                    43.8086                      2.8267           4.78502M    597.244k   45.9988M         204.2M/s    6.5517M   10.0601M   715.748M         15.5601     4.6549/s 3.33173G/s     2.01515G               43.8088                2.81545      1000k        4.6549M/s [BEST: throughput=  0.22 GB/s doc_throughput=     4 docs/s instructions=  2015142587 cycles=   712895806 branch_miss=  597067 cache_miss= 7053517 cache_ref=  10715650 items=   1000000 avg_time= 214827387 ns]
large_random<rapidjson_lossless>/manual_time           245364491 ns    248782434 ns            3         588.782k           191.867M        7.04608M       10.7226M    826.506M               17.968           4.17113       3.44746G          2.48011G                    53.9169                     3.00072           4.17113M    588.794k   45.9988M       178.786M/s   6.53531M   10.0692M   828.598M         18.0135    4.07557/s 3.37701G/s     2.48012G               53.9171                2.99315      1000k       4.07557M/s [BEST: throughput=  0.19 GB/s doc_throughput=     4 docs/s instructions=  2480109717 cycles=   826506226 branch_miss=  588782 cache_miss= 7046077 cache_ref=  10722615 items=   1000000 avg_time= 245364490 ns]
large_random<rapidjson_insitu>/manual_time             236202108 ns    239604714 ns            3         587.801k           199.265M        8.13133M       12.2686M    793.896M              17.2591           4.33195       3.43912G          1.73714G                     37.765                     2.18812           4.33195M    587.288k   45.9988M       185.722M/s   7.67049M   11.6127M   795.053M         17.2842    4.23366/s 3.36599G/s     1.73715G               37.7652                2.18495      1000k       4.23366M/s [BEST: throughput=  0.20 GB/s doc_throughput=     4 docs/s instructions=  1737142448 cycles=   793896298 branch_miss=  587801 cache_miss= 8131327 cache_ref=  12268634 items=   1000000 avg_time= 236202108 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                        91985070 ns    102302480 ns            8         1018.14k           1.49423G        15.8193M       22.1824M    339.001M              2.46896           10.8826        3.6892G          984.675M                    7.17144                     2.90464            5.7056M    1018.28k   137.305M       1.39017G/s    15.855M   22.1741M   339.333M         2.47138    10.8713/s   3.689G/s     984.675M               7.17144                2.90179   524.288k       5.69971M/s [BEST: throughput=  1.49 GB/s doc_throughput=    10 docs/s instructions=   984674891 cycles=   339000640 branch_miss= 1018143 cache_miss=15819322 cache_ref=  22182394 items=    524288 avg_time=  91985070 ns]
kostya<simdjson_ondemand>/manual_time                   61299984 ns     71611634 ns           11          473.31k           2.24254G        10.1064M       13.9304M    225.858M              1.64494           16.3325       3.68883G          649.892M                     4.7332                     2.87743           8.56294M    473.162k   137.305M       2.08606G/s   10.1202M   13.8396M   226.114M          1.6468    16.3132/s 3.68865G/s     649.892M                4.7332                2.87418   524.288k       8.55282M/s [BEST: throughput=  2.24 GB/s doc_throughput=    16 docs/s instructions=   649891998 cycles=   225858205 branch_miss=  473310 cache_miss=10106381 cache_ref=  13930373 items=    524288 avg_time=  61299984 ns]
kostya<yyjson>/manual_time                             173315012 ns    183700489 ns            4         419.777k           793.509M         11.337M       16.4232M    442.817M              3.22506           5.77917       2.55911G          974.184M                    7.09504                     2.19997           3.02995M    420.027k   137.305M       755.527M/s   11.3409M   16.3635M   442.896M         3.22564    5.76984/s 2.55544G/s     974.185M               7.09504                2.19958   524.288k       3.02506M/s [BEST: throughput=  0.79 GB/s doc_throughput=     5 docs/s instructions=   974184488 cycles=   442816877 branch_miss=  419777 cache_miss=11337038 cache_ref=  16423211 items=    524288 avg_time= 173315012 ns]
kostya<yyjson_insitu>/manual_time                      120176521 ns    130545708 ns            6         418.047k           1.14291G        8.72662M       12.3901M    349.231M              2.54347           8.32388       2.90696G          955.915M                    6.96198                      2.7372           4.36411M    418.768k   137.305M        1089.6M/s   8.72752M   12.3768M    349.27M         2.54375    8.32109/s 2.90631G/s     955.915M               6.96198                2.73689   524.288k       4.36265M/s [BEST: throughput=  1.14 GB/s doc_throughput=     8 docs/s instructions=   955914812 cycles=   349231037 branch_miss=  418047 cache_miss= 8726618 cache_ref=  12390088 items=    524288 avg_time= 120176521 ns]
kostya<rapidjson>/manual_time                          282584778 ns    292971612 ns            2         975.752k           490.219M         8.3073M       12.1539M    952.021M              6.93362           3.57029       3.39899G          2.73924G                    19.9501                     2.87729           1.87186M    977.894k   137.305M        463.38M/s   8.10055M   11.8221M    954.14M         6.94905    3.53876/s 3.37647G/s     2.73925G               19.9501                2.87091   524.288k       1.85533M/s [BEST: throughput=  0.49 GB/s doc_throughput=     3 docs/s instructions=  2739244977 cycles=   952021308 branch_miss=  975752 cache_miss= 8307298 cache_ref=  12153862 items=    524288 avg_time= 282584777 ns]
kostya<rapidjson_lossless>/manual_time                 298999035 ns    309357873 ns            2         963.014k           462.727M        8.39202M       12.0573M    1013.36M              7.38039           3.37007       3.41511G           3.0082G                    21.9089                     2.96852           1.76689M    963.102k   137.305M       437.942M/s    8.1407M   11.7935M   1014.75M         7.39046    3.34449/s 3.39381G/s      3.0082G               21.9089                2.96448   524.288k       1.75348M/s [BEST: throughput=  0.46 GB/s doc_throughput=     3 docs/s instructions=  3008195415 cycles=  1013364156 branch_miss=  963014 cache_miss= 8392016 cache_ref=  12057315 items=    524288 avg_time= 298999035 ns]
kostya<rapidjson_insitu>/manual_time                   272150251 ns    282536095 ns            3          962.59k           509.879M        12.0412M        15.943M    912.626M               6.6467           3.71347       3.38901G          2.22201G                     16.183                     2.43474           1.94693M    959.957k   137.305M       481.147M/s   11.7267M   15.6527M   913.817M         6.65538    3.67444/s 3.35777G/s     2.22201G                16.183                2.43157   524.288k       1.92647M/s [BEST: throughput=  0.51 GB/s doc_throughput=     3 docs/s instructions=  2222009571 cycles=   912625710 branch_miss=  962590 cache_miss=12041245 cache_ref=  15943019 items=    524288 avg_time= 272150251 ns]
distinct_user_id<simdjson_dom>/manual_time                263380 ns       293501 ns         2658           3.468k           2.41255G               0        88.393k    966.537k              1.53051          3.82026k       3.69243G          2.91782M                    4.62036                     3.01884            439.33k    3.66212k   631.515k       2.23307G/s    1.29646   88.3287k   971.994k         1.53915    3.7968k/s 3.69047G/s     2.91782M               4.62036                3.00189        115       436.632k/s [BEST: throughput=  2.41 GB/s doc_throughput=  3820 docs/s instructions=     2917824 cycles=      966537 branch_miss=    3468 cache_miss=       0 cache_ref=     88393 items=       115 avg_time=    263379 ns]
distinct_user_id<simdjson_ondemand>/manual_time           154327 ns       183861 ns         4538           1.583k           4.13073G               0        52.856k    564.694k             0.894189          6.54099k       3.69366G          1.88383M                    2.98303                     3.33602           752.214k    1.75151k   631.515k       3.81102G/s   0.950639    52.687k   569.716k        0.902141   6.47974k/s 3.69161G/s     1.88383M               2.98303                3.30661        115        745.17k/s [BEST: throughput=  4.13 GB/s doc_throughput=  6540 docs/s instructions=     1883829 cycles=      564694 branch_miss=    1583 cache_miss=       0 cache_ref=     52856 items=       115 avg_time=    154327 ns]
distinct_user_id<yyjson>/manual_time                      619381 ns       652750 ns         1341           9.764k             1.841G             164         72.55k    1.26677M              2.00593          2.91521k       3.69291G          2.87793M                    4.55719                     2.27186            335.25k    7.48329k   631.515k       972.357M/s    1061.41   48.0943k   1.48328M         2.34877   1.61451k/s 2.39479G/s     2.87864M               4.55831                1.94072        115       185.669k/s [BEST: throughput=  1.84 GB/s doc_throughput=  2915 docs/s instructions=     2877931 cycles=     1266773 branch_miss=    9764 cache_miss=     164 cache_ref=     72550 items=       115 avg_time=    619381 ns]
distinct_user_id<yyjson_insitu>/manual_time               417719 ns       450096 ns         1676           6.841k           2.09583G             332        44.127k    1.10911M              1.75626          3.31873k       3.68082G          2.87774M                    4.55688                     2.59465           381.654k    7.29389k   631.515k       1.40799G/s    63.8288   30.5062k   1.20969M         1.91554   2.39395k/s 2.89595G/s       2.878M               4.55729                2.37912        115       275.305k/s [BEST: throughput=  2.10 GB/s doc_throughput=  3318 docs/s instructions=     2877737 cycles=     1109106 branch_miss=    6841 cache_miss=     332 cache_ref=     44127 items=       115 avg_time=    417719 ns]
distinct_user_id<rapidjson>/manual_time                  2374780 ns      2405395 ns          295          30.963k           287.408M          9.344k        52.991k    8.11128M              12.8442           455.108       3.69151G          21.8224M                    34.5556                     2.69037           52.3374k    31.1947k   631.515k       253.607M/s   2.74139k   35.7989k   8.24652M         13.0583    421.092/s 3.47254G/s      21.823M               34.5565                2.64632        115       48.4255k/s [BEST: throughput=  0.29 GB/s doc_throughput=   455 docs/s instructions=    21822373 cycles=     8111277 branch_miss=   30963 cache_miss=    9344 cache_ref=     52991 items=       115 avg_time=   2374779 ns]
distinct_user_id<rapidjson_insitu>/manual_time           1557809 ns      1587996 ns          444          26.371k           413.712M               4        33.948k    5.30054M              8.39337           655.111       3.47244G          13.2892M                    21.0433                     2.50714           75.3377k    33.6954k   631.515k       386.607M/s   2.89622k   36.3353k    5.4846M         8.68482    641.927/s 3.52071G/s     13.2893M               21.0435                2.42302        115       73.8216k/s [BEST: throughput=  0.41 GB/s doc_throughput=   655 docs/s instructions=    13289173 cycles=     5300536 branch_miss=   26371 cache_miss=       4 cache_ref=     33948 items=       115 avg_time=   1557809 ns]
find_tweet<simdjson_dom>/manual_time                      251509 ns       280244 ns         2782           3.202k           2.52649G               0        78.495k    923.083k               1.4617          4.00069k       3.69297G           2.8325M                    4.48525                     3.06853           4.00069k    3.35411k   631.515k       2.33846G/s   0.707045   78.3116k   928.279k         1.46992     3.976k/s 3.69084G/s      2.8325M               4.48525                3.05135          1         3.976k/s [BEST: throughput=  2.53 GB/s doc_throughput=  4000 docs/s instructions=     2832504 cycles=      923083 branch_miss=    3202 cache_miss=       0 cache_ref=     78495 items=         1 avg_time=    251508 ns]
find_tweet<simdjson_ondemand>/manual_time                 107394 ns       135420 ns         6514              793           5.91157G               0        30.154k    394.665k              0.62495          9.36093k       3.69443G          1.37817M                    2.18233                     3.49201           9.36093k     834.623   631.515k       5.47651G/s   0.416641    30.325k   396.528k          0.6279   9.31152k/s 3.69228G/s     1.37818M               2.18233                 3.4756          1       9.31152k/s [BEST: throughput=  5.91 GB/s doc_throughput=  9360 docs/s instructions=     1378175 cycles=      394665 branch_miss=     793 cache_miss=       0 cache_ref=     30154 items=         1 avg_time=    107393 ns]
find_tweet<yyjson>/manual_time                            608222 ns       638651 ns         1273           9.155k           1.90722G             133        64.237k    1.22276M              1.93623          3.02007k       3.69282G          2.81715M                    4.46093                     2.30393           3.02007k    7.21483k   631.515k       990.197M/s    1037.92     39.58k   1.44535M         2.28871   1.64414k/s 2.37636G/s     2.81763M               4.46171                1.94944          1       1.64414k/s [BEST: throughput=  1.91 GB/s doc_throughput=  3020 docs/s instructions=     2817147 cycles=     1222759 branch_miss=    9155 cache_miss=     133 cache_ref=     64237 items=         1 avg_time=    608221 ns]
find_tweet<yyjson_insitu>/manual_time                     407442 ns       437379 ns         1719           6.552k           2.16889G             684        36.026k     1071.8k              1.69718          3.43442k         3.681G          2.81704M                    4.46076                     2.62833           3.43442k    7.06713k   631.515k        1.4435G/s    16.5777   22.0376k   1.17259M         1.85679   2.45434k/s 2.87794G/s      2.8173M               4.46118                2.40263          1       2.45434k/s [BEST: throughput=  2.17 GB/s doc_throughput=  3434 docs/s instructions=     2817039 cycles=     1071797 branch_miss=    6552 cache_miss=     684 cache_ref=     36026 items=         1 avg_time=    407441 ns]
find_tweet<rapidjson>/manual_time                        2372560 ns      2401502 ns          295          30.839k           287.663M             194         44.69k    8.10407M              12.8327           455.513       3.69151G          21.7386M                     34.423                     2.68244            455.513    30.9608k   631.515k       253.844M/s   2.33614k   28.5947k   8.23906M         13.0465    421.486/s 3.47265G/s     21.7395M               34.4244                2.63859          1        421.486/s [BEST: throughput=  0.29 GB/s doc_throughput=   455 docs/s instructions=    21738643 cycles=     8104065 branch_miss=   30839 cache_miss=     194 cache_ref=     44690 items=         1 avg_time=   2372559 ns]
find_tweet<rapidjson_insitu>/manual_time                 1541180 ns      1570741 ns          446          26.306k           446.442M         12.702k        36.079k    5.22194M              8.26891           706.938       3.69158G          13.2105M                    20.9188                     2.52981            706.938     33.346k   631.515k       390.778M/s    2.6742k   26.9917k   5.42378M         8.58852    648.853/s 3.51924G/s     13.2108M               20.9193                2.43573          1        648.853/s [BEST: throughput=  0.45 GB/s doc_throughput=   706 docs/s instructions=    13210537 cycles=     5221938 branch_miss=   26306 cache_miss=   12702 cache_ref=     36079 items=         1 avg_time=   1541180 ns]
