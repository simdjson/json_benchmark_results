run_benchmark: v0.8.0~11 /home/jkeiser/simdjson_benchmark_results/v0.7.0/27/skylake-x-gcc10.2-native.json -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native
git reset --hard v0.8.0~11
HEAD is now at 3b848666 Removing trailing white space.
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- git Version: v0.2.1-3b848666
-- Version: 0.2.1
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 11
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
make[3]: Nothing to be done for '_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build'.
[ 72%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
make[3]: Nothing to be done for 'jsonexamples/generated/CMakeFiles/generated-data.dir/build'.
[ 72%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
make[3]: Nothing to be done for 'src/CMakeFiles/simdjson.dir/build'.
[ 81%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
make[3]: Nothing to be done for 'dependencies/CMakeFiles/yyjson.dir/build'.
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/g++-10  -DRAPIDJSON_HAS_STDSTRING -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_COMPETITION_RAPIDJSON -DSIMDJSON_COMPETITION_YYJSON -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/rapidjson/include  -march=native -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/g++-10  -march=native -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.6.0.0 ../_deps/google_benchmarks/src/libbenchmark.a ../dependencies/libyyjson.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/27/skylake-x-gcc10.2-native.json --benchmark_out_format=json
2021-01-24 22:58:21
Running benchmark/bench_ondemand
Run on (4 X 3200 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 1024 KiB (x4)
  L3 Unified 8448 KiB (x1)
Load Average: 1.06, 1.03, 1.01
***WARNING*** CPU scaling is enabled, the benchmark real time measurements may be noisy and will incur extra overhead.
simdjson::dom implementation:      haswell
simdjson::ondemand implementation: haswell

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                  327219 ns       397820 ns         2137           4.283k           1.94533G               1        33.479k     1036.8k              1.64177          3.08042k       3.19379G          3.07044M                    4.86203                     2.96146           308.042k    4.49372k   631.515k        1.7974G/s    1.87927   33.5307k   1044.02k         1.65319   3.05606k/s 3.19057G/s     3.07044M               4.86203                2.94099        100       305.606k/s [BEST: throughput=  1.95 GB/s doc_throughput=  3080 docs/s instructions=     3070443 cycles=     1036802 branch_miss=    4283 cache_miss=       1 cache_ref=     33479 items=       100 avg_time=    327218 ns]
partial_tweets<simdjson_ondemand>/manual_time             217673 ns       275771 ns         3211           2.221k             2.922G               0        11.463k    690.312k               1.0931          4.62697k       3.19406G          2.23542M                    3.53977                     3.23827           462.697k    2.35943k   631.515k       2.70197G/s   0.401121   11.4726k   694.574k         1.09985   4.59406k/s 3.19091G/s     2.23542M               3.53977                 3.2184        100       459.406k/s [BEST: throughput=  2.92 GB/s doc_throughput=  4626 docs/s instructions=     2235416 cycles=      690312 branch_miss=    2221 cache_miss=       0 cache_ref=     11463 items=       100 avg_time=    217672 ns]
partial_tweets<yyjson>/manual_time                        852897 ns       932116 ns          821           9.708k           1.23759G             233        28.276k    1.58256M              2.50597          1.95972k       3.10137G          2.90839M                    4.60541                     1.83777           195.972k    7.66699k   631.515k       706.134M/s    655.515   23.4681k    1.7556M         2.77999   1.17247k/s  2.0584G/s     2.90885M               4.60614                1.65689        100       117.247k/s [BEST: throughput=  1.24 GB/s doc_throughput=  1959 docs/s instructions=     2908387 cycles=     1582560 branch_miss=    9708 cache_miss=     233 cache_ref=     28276 items=       100 avg_time=    852896 ns]
partial_tweets<yyjson_insitu>/manual_time                 574873 ns       636968 ns         1229           7.351k           1.51855G          1.815k         13.78k    1.31811M              2.08722          2.40461k       3.16953G          2.90805M                    4.60487                     2.20623           240.461k    7.51569k   631.515k       1047.64M/s    70.5126   8.52101k   1.43587M         2.27369   1.73951k/s 2.49771G/s     2.90831M               4.60529                2.02547        100       173.951k/s [BEST: throughput=  1.52 GB/s doc_throughput=  2404 docs/s instructions=     2908047 cycles=     1318108 branch_miss=    7351 cache_miss=    1815 cache_ref=     13780 items=       100 avg_time=    574873 ns]
partial_tweets<rapidjson>/manual_time                    1828390 ns      1892280 ns          385          25.768k           406.299M           7.58k        22.763k    4.96267M              7.85836           643.372       3.19284G          13.1151M                    20.7677                     2.64276           64.3372k    25.8968k   631.515k       329.393M/s    320.618   11.2426k   5.15595M         8.16441    546.929/s 2.81994G/s     13.1158M               20.7689                2.54383        100       54.6929k/s [BEST: throughput=  0.41 GB/s doc_throughput=   643 docs/s instructions=    13115123 cycles=     4962670 branch_miss=   25768 cache_miss=    7580 cache_ref=     22763 items=       100 avg_time=   1828389 ns]
partial_tweets<rapidjson_insitu>/manual_time             1243674 ns      1306000 ns          567          26.121k           597.615M             213         14.87k    3.37426M              5.34313            946.32       3.19313G          9.82334M                    15.5552                     2.91125            94.632k    29.1979k   631.515k       484.258M/s     173.36   9.39196k    3.5608M          5.6385    804.069/s 2.86313G/s     9.82373M               15.5558                2.75886        100       80.4069k/s [BEST: throughput=  0.60 GB/s doc_throughput=   946 docs/s instructions=     9823338 cycles=     3374265 branch_miss=   26121 cache_miss=     213 cache_ref=     14870 items=       100 avg_time=   1243673 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                 104210622 ns    110403012 ns            7         851.739k           442.475M        6.77233M       6.89427M    331.484M              7.20637           9.61928       3.18864G          998.581M                    21.7089                     3.01246           9.61928M    851.746k   45.9988M       420.954M/s   6.80629M   6.89438M   332.263M          7.2233    9.59595/s 3.18838G/s     998.581M               21.7089                3.00539      1000k       9.59595M/s [BEST: throughput=  0.44 GB/s doc_throughput=     9 docs/s instructions=   998581007 cycles=   331484054 branch_miss=  851739 cache_miss= 6772333 cache_ref=   6894269 items=   1000000 avg_time= 104210622 ns]
large_random<simdjson_ondemand>/manual_time             68102812 ns     74285823 ns           10         862.051k            678.44M        3.47969M       3.57238M    216.196M              4.70004           14.7491       3.18869G          650.959M                    14.1517                     3.01097           14.7491M     861.45k   45.9988M       644.142M/s    3.5092M   3.57244M   217.134M         4.72043    14.6837/s 3.18832G/s     650.959M               14.1517                2.99796      1000k       14.6837M/s [BEST: throughput=  0.68 GB/s doc_throughput=    14 docs/s instructions=   650958757 cycles=   216195952 branch_miss=  862051 cache_miss= 3479695 cache_ref=   3572382 items=   1000000 avg_time=  68102811 ns]
large_random<simdjson_ondemand_unordered>/manual_time   70815276 ns     77057778 ns           10         858.778k           650.017M        3.48197M       3.57238M     225.66M              4.90578           14.1312       3.18884G          654.959M                    14.2386                     2.90241           14.1312M    859.015k   45.9988M       619.469M/s   3.50695M   3.57238M   225.805M         4.90893    14.1212/s 3.18864G/s     654.959M               14.2386                2.90056      1000k       14.1212M/s [BEST: throughput=  0.65 GB/s doc_throughput=    14 docs/s instructions=   654958759 cycles=   225659975 branch_miss=  858778 cache_miss= 3481975 cache_ref=   3572379 items=   1000000 avg_time=  70815276 ns]
large_random<yyjson>/manual_time                       158874062 ns    165120406 ns            4         669.756k           289.612M        4.20592M       4.37329M     366.16M              7.96021           6.29608       2.30537G          942.149M                    20.4821                     2.57306           6.29608M    667.484k   45.9988M       276.117M/s   4.20147M   4.36883M    366.35M         7.96435    6.29429/s 2.30592G/s     942.149M               20.4821                2.57172      1000k       6.29429M/s [BEST: throughput=  0.29 GB/s doc_throughput=     6 docs/s instructions=   942149397 cycles=   366159692 branch_miss=  669756 cache_miss= 4205916 cache_ref=   4373290 items=   1000000 avg_time= 158874062 ns]
large_random<yyjson_insitu>/manual_time                132689166 ns    138928752 ns            5         666.127k           346.833M        3.48282M       3.64729M    323.257M              7.02752           7.54005       2.43738G          936.029M                     20.349                     2.89561           7.54005M    667.683k   45.9988M       330.606M/s   3.48282M   3.65365M   323.435M         7.03139    7.53641/s 2.43754G/s     936.029M                20.349                2.89402      1000k       7.53641M/s [BEST: throughput=  0.35 GB/s doc_throughput=     7 docs/s instructions=   936028627 cycles=   323257489 branch_miss=  666127 cache_miss= 3482816 cache_ref=   3647289 items=   1000000 avg_time= 132689165 ns]
large_random<rapidjson>/manual_time                    211507030 ns    217745585 ns            3         592.448k           226.312M        4.35708M       4.88733M      580.1M              12.6112           4.91997       2.85407G          1.66212G                     36.134                     2.86523           4.91997M    594.657k   45.9988M       207.406M/s   4.09156M   4.68343M   584.584M         12.7087    4.72798/s  2.7639G/s     1.66213G               36.1342                2.84327      1000k       4.72798M/s [BEST: throughput=  0.23 GB/s doc_throughput=     4 docs/s instructions=  1662121470 cycles=   580100166 branch_miss=  592448 cache_miss= 4357077 cache_ref=   4887332 items=   1000000 avg_time= 211507030 ns]
large_random<rapidjson_lossless>/manual_time           239665287 ns    245908098 ns            3         602.572k           198.587M        4.35956M        4.8967M    670.615M               14.579           4.31723        2.8952G          2.04909G                    44.5465                     3.05553           4.31723M    604.459k   45.9988M       183.038M/s   4.09174M   4.69434M   674.363M         14.6604    4.17249/s 2.81377G/s      2.0491G               44.5467                3.03857      1000k       4.17249M/s [BEST: throughput=  0.20 GB/s doc_throughput=     4 docs/s instructions=  2049086688 cycles=   670614924 branch_miss=  602572 cache_miss= 4359562 cache_ref=   4896698 items=   1000000 avg_time= 239665286 ns]
large_random<rapidjson_insitu>/manual_time             188450810 ns    194694090 ns            4         627.737k           257.267M        5.08429M       5.60193M    502.038M              10.9142           5.59292       2.80786G          1.49412G                    32.4818                     2.97611           5.59292M    629.326k   45.9988M       232.781M/s   4.78384M   5.37094M   508.313M         11.0506    5.30642/s 2.69733G/s     1.49413G                32.482                2.93939      1000k       5.30642M/s [BEST: throughput=  0.26 GB/s doc_throughput=     5 docs/s instructions=  1494121318 cycles=   502038106 branch_miss=  627737 cache_miss= 5084288 cache_ref=   5601929 items=   1000000 avg_time= 188450809 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                       101503720 ns    120761854 ns            7         447.489k           1.35582G        10.2204M       10.3136M    322.913M              2.35179           9.87451       3.18861G           972.65M                    7.08386                     3.01211           5.17709M    447.423k   137.305M       1.25981G/s    10.241M   10.3137M   323.651M         2.35717    9.85186/s 3.18856G/s      972.65M               7.08386                3.00524   524.288k       5.16521M/s [BEST: throughput=  1.36 GB/s doc_throughput=     9 docs/s instructions=   972649991 cycles=   322913199 branch_miss=  447489 cache_miss=10220413 cache_ref=  10313571 items=    524288 avg_time= 101503720 ns]
kostya<simdjson_ondemand>/manual_time                   70544587 ns     89724651 ns           10         497.043k           1.95039G        6.43385M       6.47097M    224.466M               1.6348           14.2048        3.1885G          700.741M                    5.10353                     3.12181            7.4474M    497.198k   137.305M       1.81269G/s   6.44037M   6.47091M   224.927M         1.63816    14.1754/s 3.18844G/s     700.741M               5.10353                3.11541   524.288k       7.43201M/s [BEST: throughput=  1.95 GB/s doc_throughput=    14 docs/s instructions=   700740658 cycles=   224466328 branch_miss=  497043 cache_miss= 6433853 cache_ref=   6470972 items=    524288 avg_time=  70544587 ns]
kostya<yyjson>/manual_time                             264254495 ns    283448478 ns            3         418.247k           519.681M        8.48823M       8.68946M    609.824M              4.44138           3.78486        2.3081G          983.521M                    7.16304                     1.61279           1.98436M    417.815k   137.305M       495.523M/s   8.48848M   8.69145M   610.117M         4.44351    3.78423/s 2.30882G/s     983.521M               7.16304                1.61202   524.288k       1.98403M/s [BEST: throughput=  0.52 GB/s doc_throughput=     3 docs/s instructions=   983520638 cycles=   609824206 branch_miss=  418247 cache_miss= 8488226 cache_ref=   8689457 items=    524288 avg_time= 264254494 ns]
kostya<yyjson_insitu>/manual_time                      186305903 ns    205664096 ns            4         417.207k           737.538M        6.34903M       6.55306M    481.704M              3.50828           5.37153       2.58749G          965.251M                    7.02998                     2.00383           2.81623M    417.807k   137.305M       702.845M/s   6.36422M   6.55332M   482.096M         3.51113    5.36752/s 2.58766G/s     965.251M               7.02998                 2.0022   524.288k       2.81412M/s [BEST: throughput=  0.74 GB/s doc_throughput=     5 docs/s instructions=   965251172 cycles=   481703796 branch_miss=  417207 cache_miss= 6349034 cache_ref=   6553056 items=    524288 avg_time= 186305903 ns]
kostya<rapidjson>/manual_time                          293165941 ns    312608094 ns            2         985.907k           473.602M        5.24839M       5.76803M    827.646M              6.02779           3.44927       2.85477G          2.28931G                    16.6732                     2.76606           1.80841M    975.532k   137.305M       446.656M/s   5.12482M    5.6516M   829.505M         6.04133    3.41104/s 2.82947G/s     2.28932G               16.6732                2.75986   524.288k       1.78837M/s [BEST: throughput=  0.47 GB/s doc_throughput=     3 docs/s instructions=  2289314843 cycles=   827645905 branch_miss=  985907 cache_miss= 5248388 cache_ref=   5768029 items=    524288 avg_time= 293165941 ns]
kostya<rapidjson_lossless>/manual_time                 309780852 ns    329215443 ns            2         1009.17k           448.209M        5.24961M       5.78581M    879.503M              6.40547           3.26433       2.87099G          2.50793G                    18.2654                     2.85154           1.71145M    1009.38k   137.305M         422.7M/s   5.12159M   5.67226M   881.924M          6.4231    3.22809/s 2.84693G/s     2.50794G               18.2654                2.84371   524.288k       1.69245M/s [BEST: throughput=  0.45 GB/s doc_throughput=     3 docs/s instructions=  2507933873 cycles=   879502749 branch_miss= 1009172 cache_miss= 5249606 cache_ref=   5785810 items=    524288 avg_time= 309780851 ns]
kostya<rapidjson_insitu>/manual_time                   276973656 ns    296304545 ns            3         1085.22k           503.607M        7.36748M        7.9177M    772.135M               5.6235           3.66779       2.83203G          2.03958G                    14.8544                     2.64148           1.92298M    1085.35k   137.305M       472.768M/s   7.20877M   7.75666M   774.762M         5.64263    3.61045/s 2.79724G/s     2.03958G               14.8544                2.63253   524.288k       1.89292M/s [BEST: throughput=  0.50 GB/s doc_throughput=     3 docs/s instructions=  2039579818 cycles=   772134985 branch_miss= 1085217 cache_miss= 7367477 cache_ref=   7917703 items=    524288 avg_time= 276973655 ns]
distinct_user_id<simdjson_dom>/manual_time                319611 ns       397825 ns         2188           4.407k           1.99112G               8        33.975k    1012.97k              1.60403          3.15293k       3.19382G          3.01136M                    4.76848                     2.97281           362.587k    4.57143k   631.515k       1.84019G/s    10.0393   34.0106k   1019.84k         1.61491    3.1288k/s 3.19087G/s     3.01137M               4.76848                2.95279        115       359.812k/s [BEST: throughput=  1.99 GB/s doc_throughput=  3152 docs/s instructions=     3011365 cycles=     1012969 branch_miss=    4407 cache_miss=       8 cache_ref=     33975 items=       115 avg_time=    319611 ns]
distinct_user_id<simdjson_ondemand>/manual_time           215770 ns       278992 ns         3242             2.3k           2.95109G               1         8.019k    683.526k              1.08236          4.67303k       3.19414G          2.18875M                    3.46587                     3.20214           537.398k    2.46232k   631.515k        2.7258G/s    1.00093   8.21915k   688.464k         1.09018   4.63457k/s 3.19074G/s     2.18875M               3.46587                3.17918        115       532.976k/s [BEST: throughput=  2.95 GB/s doc_throughput=  4673 docs/s instructions=     2188749 cycles=      683526 branch_miss=    2300 cache_miss=       1 cache_ref=      8019 items=       115 avg_time=    215769 ns]
distinct_user_id<yyjson>/manual_time                      850817 ns       938831 ns          981          10.081k           1.27453G             265        27.495k    1.58277M              2.50631          2.01821k       3.19437G          2.87343M                    4.55005                     1.81544           232.094k    7.87862k   631.515k        707.86M/s    444.498   23.5141k   1.75273M         2.77543   1.17534k/s 2.06005G/s     2.87382M               4.55068                1.63963        115       135.164k/s [BEST: throughput=  1.27 GB/s doc_throughput=  2018 docs/s instructions=     2873425 cycles=     1582773 branch_miss=   10081 cache_miss=     265 cache_ref=     27495 items=       115 avg_time=    850817 ns]
distinct_user_id<yyjson_insitu>/manual_time               572834 ns       643231 ns         1232           7.404k           1.54647G             130        14.664k    1.30424M              2.06525          2.44882k       3.19385G          2.87302M                    4.54941                     2.20283           281.614k     7.5844k   631.515k       1051.37M/s    71.1924    8.6518k   1.42949M         2.26359   1.74571k/s 2.49547G/s     2.87329M               4.54983                2.01001        115       200.756k/s [BEST: throughput=  1.55 GB/s doc_throughput=  2448 docs/s instructions=     2873022 cycles=     1304239 branch_miss=    7404 cache_miss=     130 cache_ref=     14664 items=       115 avg_time=    572834 ns]
distinct_user_id<rapidjson>/manual_time                  1803089 ns      1874309 ns          387           25.52k           409.609M          6.989k        22.703k    4.92283M              7.79527           648.614       3.19301G          13.0561M                    20.6743                     2.65216           74.5906k    26.1444k   631.515k       334.015M/s   1.17211k   12.1969k   5.12258M         8.11158    554.604/s   2.841G/s     13.0568M               20.6754                2.54887        115       63.7794k/s [BEST: throughput=  0.41 GB/s doc_throughput=   648 docs/s instructions=    13056139 cycles=     4922827 branch_miss=   25520 cache_miss=    6989 cache_ref=     22703 items=       115 avg_time=   1803089 ns]
distinct_user_id<rapidjson_insitu>/manual_time           1218658 ns      1288585 ns          656           25.85k           601.403M               5        14.694k    3.35291M              5.30931           952.317       3.19303G          9.77407M                    15.4772                      2.9151           109.517k    28.8807k   631.515k       494.199M/s   1.13939k   10.7127k   3.53663M         5.60023    820.575/s 2.90207G/s     9.77462M                15.478                2.76382        115       94.3661k/s [BEST: throughput=  0.60 GB/s doc_throughput=   952 docs/s instructions=     9774072 cycles=     3352910 branch_miss=   25850 cache_miss=       5 cache_ref=     14694 items=       115 avg_time=   1218657 ns]
find_tweet<simdjson_dom>/manual_time                      305871 ns       379581 ns         2289            4.16k           2.08064G               0        30.569k    969.514k              1.53522          3.29468k       3.19423G          2.93033M                    4.64016                     3.02247           3.29468k    4.34452k   631.515k       1.92285G/s    0.10616    30.646k   975.971k         1.54544   3.26935k/s 3.19079G/s     2.93033M               4.64016                3.00247          1       3.26935k/s [BEST: throughput=  2.08 GB/s doc_throughput=  3294 docs/s instructions=     2930328 cycles=      969514 branch_miss=    4160 cache_miss=       0 cache_ref=     30569 items=         1 avg_time=    305871 ns]
find_tweet<simdjson_ondemand>/manual_time                 150735 ns       215220 ns         4639           1.302k           4.21184G               0         7.443k    478.983k             0.758467          6.66942k       3.19454G          1.56922M                    2.48485                     3.27614           6.66942k     1.3704k   631.515k       3.90183G/s   0.020263   7.56088k    481.07k        0.761772   6.63415k/s 3.19149G/s     1.56922M               2.48485                3.26193          1       6.63415k/s [BEST: throughput=  4.21 GB/s doc_throughput=  6669 docs/s instructions=     1569217 cycles=      478983 branch_miss=    1302 cache_miss=       0 cache_ref=      7443 items=         1 avg_time=    150735 ns]
find_tweet<yyjson>/manual_time                            832211 ns       916016 ns          901           9.323k           1.27399G             193        27.334k    1.54244M              2.44245          2.01735k       3.11164G          2.82414M                    4.47201                     1.83095           2.01735k    7.48775k   631.515k       723.686M/s    335.495    19.671k   1.69515M         2.68427   1.20162k/s 2.03693G/s     2.82462M               4.47277                1.66629          1       1.20162k/s [BEST: throughput=  1.27 GB/s doc_throughput=  2017 docs/s instructions=     2824139 cycles=     1542441 branch_miss=    9323 cache_miss=     193 cache_ref=     27334 items=         1 avg_time=    832210 ns]
find_tweet<yyjson_insitu>/manual_time                     557443 ns       620378 ns         1266           7.114k           1.58186G              84        14.041k    1.27491M              2.01882          2.50487k       3.19349G          2.82382M                     4.4715                     2.21491           2.50487k      7.316k   631.515k        1080.4M/s    6.31912   4.75449k   1.38069M         2.18631    1.7939k/s 2.47682G/s     2.82408M               4.47192                2.04542          1        1.7939k/s [BEST: throughput=  1.58 GB/s doc_throughput=  2504 docs/s instructions=     2823821 cycles=     1274913 branch_miss=    7114 cache_miss=      84 cache_ref=     14041 items=         1 avg_time=    557443 ns]
find_tweet<rapidjson>/manual_time                        1788060 ns      1854514 ns          392          25.732k           409.502M             452        21.388k    4.92387M              7.79692           648.443       3.19285G          12.9887M                    20.5676                     2.63791            648.443    25.8494k   631.515k       336.823M/s    975.827    8.7089k   5.07347M         8.03381    559.265/s 2.83741G/s     12.9895M               20.5688                2.56028          1        559.265/s [BEST: throughput=  0.41 GB/s doc_throughput=   648 docs/s instructions=    12988722 cycles=     4923873 branch_miss=   25732 cache_miss=     452 cache_ref=     21388 items=         1 avg_time=   1788060 ns]
find_tweet<rapidjson_insitu>/manual_time                 1198337 ns      1263165 ns          664          26.172k           604.018M               6        13.613k    3.33826M              5.28611           956.458       3.19291G          9.71659M                    15.3862                     2.91067            956.458    28.1329k   631.515k       502.579M/s    1062.84   7.30287k   3.47577M         5.50386     834.49/s  2.9005G/s     9.71692M               15.3867                2.79562          1         834.49/s [BEST: throughput=  0.60 GB/s doc_throughput=   956 docs/s instructions=     9716589 cycles=     3338260 branch_miss=   26172 cache_miss=       6 cache_ref=     13613 items=         1 avg_time=   1198337 ns]
