run_benchmark: v0.8.0~11 /home/jkeiser/simdjson_benchmark_results/v0.7.0/27/skylake-gcc10.2.json -DCMAKE_BUILD_TYPE=Release
git reset --hard v0.8.0~11
HEAD is now at 3b848666 Removing trailing white space.
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- git Version: v0.2.1-3b848666
-- Version: 0.2.1
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 11
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
make[3]: Nothing to be done for '_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build'.
[ 72%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
make[3]: Nothing to be done for 'jsonexamples/generated/CMakeFiles/generated-data.dir/build'.
[ 72%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
make[3]: Nothing to be done for 'src/CMakeFiles/simdjson.dir/build'.
[ 81%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
make[3]: Nothing to be done for 'dependencies/CMakeFiles/yyjson.dir/build'.
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/g++-10  -DRAPIDJSON_HAS_STDSTRING -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_COMPETITION_RAPIDJSON -DSIMDJSON_COMPETITION_YYJSON -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/rapidjson/include  -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/g++-10  -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.6.0.0 ../_deps/google_benchmarks/src/libbenchmark.a ../dependencies/libyyjson.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/27/skylake-gcc10.2.json --benchmark_out_format=json
2021-01-25 00:01:48
Running benchmark/bench_ondemand
Run on (4 X 4000 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 256 KiB (x4)
  L3 Unified 8192 KiB (x1)
Load Average: 1.00, 1.02, 1.00
simdjson::dom implementation:      haswell
simdjson::ondemand implementation: fallback

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                  262219 ns       290954 ns         2662           3.821k           2.42306G               3        93.226k     962.37k              1.52391           3.8369k       3.69252G          2.96251M                    4.69111                     3.07834            383.69k     3.9637k   631.515k       2.24295G/s    6.71788   93.3354k   967.698k         1.53234   3.81361k/s 3.69042G/s     2.96251M               4.69111                3.06139        100       381.361k/s [BEST: throughput=  2.42 GB/s doc_throughput=  3836 docs/s instructions=     2962505 cycles=      962370 branch_miss=    3821 cache_miss=       3 cache_ref=     93226 items=       100 avg_time=    262218 ns]
partial_tweets<simdjson_ondemand>/manual_time             200891 ns       229452 ns         3464           2.201k           3.17351G               0        59.465k    734.817k              1.16358          5.02523k       3.69262G          2.46247M                    3.89931                     3.35114           502.523k    2.30823k   631.515k       2.92768G/s  0.0617783   59.4196k   741.472k         1.17412   4.97782k/s 3.69092G/s     2.46247M               3.89931                3.32106        100       497.782k/s [BEST: throughput=  3.17 GB/s doc_throughput=  5025 docs/s instructions=     2462472 cycles=      734817 branch_miss=    2201 cache_miss=       0 cache_ref=     59465 items=       100 avg_time=    200891 ns]
partial_tweets<yyjson>/manual_time                        691212 ns       722079 ns         1010           9.825k           1.57522G             375        79.595k    1.48041M              2.34422          2.49436k       3.69267G          2.90835M                    4.60536                     1.96456           249.436k    7.69502k   631.515k       871.309M/s    982.405   51.3953k   1.69844M         2.68947   1.44673k/s 2.45719G/s     2.90884M               4.60613                1.71265        100       144.673k/s [BEST: throughput=  1.58 GB/s doc_throughput=  2494 docs/s instructions=     2908354 cycles=     1480408 branch_miss=    9825 cache_miss=     375 cache_ref=     79595 items=       100 avg_time=    691212 ns]
partial_tweets<yyjson_insitu>/manual_time                 482068 ns       511654 ns         1455           7.149k           1.76359G             935        48.084k    1.31586M              2.08366          2.79264k       3.67474G          2.90804M                    4.60486                     2.20998           279.264k    7.56069k   631.515k       1.22004G/s    137.399   33.3452k   1.42749M         2.26042    2.0744k/s 2.96118G/s      2.9083M               4.60528                2.03735        100        207.44k/s [BEST: throughput=  1.76 GB/s doc_throughput=  2792 docs/s instructions=     2908039 cycles=     1315864 branch_miss=    7149 cache_miss=     935 cache_ref=     48084 items=       100 avg_time=    482068 ns]
partial_tweets<rapidjson>/manual_time                    1627601 ns      1656811 ns          432          26.863k           445.071M            1082        53.864k     5.2382M              8.29466           704.768       3.69172G          13.4098M                    21.2344                        2.56           70.4768k      27.05k   631.515k       370.029M/s    513.118    34.291k   5.41464M         8.57404    614.401/s 3.32676G/s     13.4107M               21.2357                2.47674        100       61.4401k/s [BEST: throughput=  0.45 GB/s doc_throughput=   704 docs/s instructions=    13409827 cycles=     5238204 branch_miss=   26863 cache_miss=    1082 cache_ref=     53864 items=       100 avg_time=   1627600 ns]
partial_tweets<rapidjson_insitu>/manual_time             1121854 ns      1151049 ns          626          23.088k           629.684M              87        45.457k    3.70243M              5.86278             997.1        3.6917G          9.75502M                     15.447                     2.63476             99.71k     23.462k   631.515k       536.843M/s    219.829   35.4424k   3.79422M         6.00812    891.382/s 3.38209G/s     9.75562M                15.448                2.57118        100       89.1382k/s [BEST: throughput=  0.63 GB/s doc_throughput=   997 docs/s instructions=     9755019 cycles=     3702431 branch_miss=   23088 cache_miss=      87 cache_ref=     45457 items=       100 avg_time=   1121853 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                  92315306 ns     95706920 ns            8         916.792k           500.324M        10.9078M       15.3859M    339.155M              7.37312           10.8769       3.68895G          983.113M                    21.3726                     2.89872           10.8769M    918.581k   45.9988M       475.196M/s   10.8688M   15.3883M   340.506M         7.40251    10.8324/s 3.68851G/s     983.113M               21.3726                2.88721      1000k       10.8324M/s [BEST: throughput=  0.50 GB/s doc_throughput=    10 docs/s instructions=   983112680 cycles=   339154535 branch_miss=  916792 cache_miss=10907768 cache_ref=  15385852 items=   1000000 avg_time=  92315305 ns]
large_random<simdjson_ondemand>/manual_time             58868161 ns     62232664 ns           12         1048.17k           782.342M        5.65835M       8.00391M    216.914M              4.71565           17.0079       3.68925G           641.49M                    13.9458                     2.95735           17.0079M    1051.21k   45.9988M       745.188M/s   5.65369M   8.00493M   217.157M         4.72093    16.9871/s 3.68887G/s      641.49M               13.9458                2.95403      1000k       16.9871M/s [BEST: throughput=  0.78 GB/s doc_throughput=    17 docs/s instructions=   641489865 cycles=   216914011 branch_miss= 1048173 cache_miss= 5658355 cache_ref=   8003914 items=   1000000 avg_time=  58868160 ns]
large_random<simdjson_ondemand_unordered>/manual_time   62939609 ns     66298648 ns           11         892.325k           731.938M        5.60808M        8.0057M    231.842M              5.04019           15.9121        3.6891G           645.49M                    14.0328                     2.78418           15.9121M    893.895k   45.9988M       696.983M/s   5.65644M   8.00629M   232.081M         5.04537    15.8882/s 3.68736G/s      645.49M               14.0328                2.78132      1000k       15.8882M/s [BEST: throughput=  0.73 GB/s doc_throughput=    15 docs/s instructions=   645489870 cycles=   231842398 branch_miss=  892325 cache_miss= 5608077 cache_ref=   8005700 items=   1000000 avg_time=  62939608 ns]
large_random<yyjson>/manual_time                       127547323 ns    130951275 ns            5         658.864k           360.795M        5.77399M       8.93028M    350.547M              7.62079           7.84357       2.74954G           944.15M                    20.5255                     2.69336           7.84357M    658.706k   45.9988M       343.934M/s   5.79064M   8.94014M   350.578M         7.62146    7.84023/s 2.74861G/s      944.15M               20.5255                2.69312      1000k       7.84023M/s [BEST: throughput=  0.36 GB/s doc_throughput=     7 docs/s instructions=   944149696 cycles=   350546961 branch_miss=  658864 cache_miss= 5773987 cache_ref=   8930281 items=   1000000 avg_time= 127547323 ns]
large_random<yyjson_insitu>/manual_time                109439263 ns    112866818 ns            6         658.933k           420.444M        4.93268M       7.64246M    318.184M              6.91722           9.14033        2.9083G          938.029M                    20.3925                     2.94808           9.14033M    658.894k   45.9988M       400.842M/s   4.93198M   7.64632M   318.188M         6.91731    9.13749/s 2.90744G/s     938.029M               20.3925                2.94804      1000k       9.13749M/s [BEST: throughput=  0.42 GB/s doc_throughput=     9 docs/s instructions=   938028834 cycles=   318183503 branch_miss=  658933 cache_miss= 4932680 cache_ref=   7642463 items=   1000000 avg_time= 109439263 ns]
large_random<rapidjson>/manual_time                    169035112 ns    172460126 ns            4          593.54k           284.073M        6.96611M       10.8167M    539.247M              11.7231           6.17566        3.3302G          1.65714G                    36.0258                     3.07307           6.17566M     596.26k   45.9988M       259.519M/s   6.41487M   10.0805M   544.584M         11.8391    5.91593/s 3.22172G/s     1.65715G                36.026                3.04297      1000k       5.91593M/s [BEST: throughput=  0.28 GB/s doc_throughput=     6 docs/s instructions=  1657141393 cycles=   539246515 branch_miss=  593540 cache_miss= 6966106 cache_ref=  10816734 items=   1000000 avg_time= 169035111 ns]
large_random<rapidjson_lossless>/manual_time           197245428 ns    200674011 ns            4         593.068k           241.589M        6.95945M       10.8134M    644.335M              14.0077           5.25208        3.3841G          2.00811G                    43.6557                     3.11656           5.25208M    590.932k   45.9988M       222.402M/s   6.39748M   10.0771M   648.526M         14.0988    5.06983/s 3.28791G/s     2.00812G                43.656                3.09644      1000k       5.06983M/s [BEST: throughput=  0.24 GB/s doc_throughput=     5 docs/s instructions=  2008110783 cycles=   644335451 branch_miss=  593068 cache_miss= 6959450 cache_ref=  10813357 items=   1000000 avg_time= 197245427 ns]
large_random<rapidjson_insitu>/manual_time             155659775 ns    159055935 ns            5         594.192k           310.492M        8.09682M       12.3507M    487.995M              10.6089           6.75001       3.29397G          1.49214G                    32.4387                     3.05769           6.75001M    594.881k   45.9988M       281.819M/s   7.47408M   11.5702M   493.832M         10.7358    6.42427/s 3.17251G/s     1.49215G               32.4389                3.02157      1000k       6.42427M/s [BEST: throughput=  0.31 GB/s doc_throughput=     6 docs/s instructions=  1492138873 cycles=   487995160 branch_miss=  594192 cache_miss= 8096823 cache_ref=  12350704 items=   1000000 avg_time= 155659774 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                        85447020 ns     95802636 ns            8         464.458k           1.60843G        15.5028M       22.0392M    314.902M              2.29345           11.7143       3.68886G          945.501M                    6.88614                     3.00252           6.14166M    464.584k   137.305M       1.49654G/s    15.539M   22.0999M   315.194M         2.29558    11.7032/s 3.68876G/s     945.501M               6.88614                2.99974   524.288k       6.13583M/s [BEST: throughput=  1.61 GB/s doc_throughput=    11 docs/s instructions=   945501383 cycles=   314902376 branch_miss=  464458 cache_miss=15502781 cache_ref=  22039224 items=    524288 avg_time=  85447020 ns]
kostya<simdjson_ondemand>/manual_time                   58524795 ns     68831397 ns           12         475.772k           2.34824G        9.94133M       13.9052M    215.712M              1.57104           17.1023       3.68917G          676.738M                    4.92872                     3.13723           8.96655M    475.824k   137.305M       2.18498G/s   9.95863M   13.8496M   215.871M          1.5722    17.0868/s 3.68855G/s     676.738M               4.92872                3.13491   524.288k       8.95839M/s [BEST: throughput=  2.35 GB/s doc_throughput=    17 docs/s instructions=   676737573 cycles=   215711790 branch_miss=  475772 cache_miss= 9941326 cache_ref=  13905227 items=    524288 avg_time=  58524795 ns]
kostya<yyjson>/manual_time                             205737118 ns    216150375 ns            3         414.613k           668.383M        11.3789M       16.1804M    560.225M              4.08015           4.86787        2.7271G          984.045M                    7.16686                     1.75652           2.55216M    420.031k   137.305M       636.464M/s   11.3761M   16.1715M    560.38M         4.08128    4.86057/s 2.72377G/s     984.045M               7.16686                1.75603   524.288k       2.54834M/s [BEST: throughput=  0.67 GB/s doc_throughput=     4 docs/s instructions=   984045129 cycles=   560225458 branch_miss=  414613 cache_miss=11378944 cache_ref=  16180398 items=    524288 avg_time= 205737118 ns]
kostya<yyjson_insitu>/manual_time                      152156486 ns    162657684 ns            5         413.273k           902.723M        8.75192M       12.1396M    466.292M              3.39603           6.57458       3.06568G          965.775M                     7.0338                     2.07118           3.44698M    414.579k   137.305M       860.589M/s   8.75371M   12.1375M     466.3M         3.39609    6.57218/s 3.06461G/s     965.775M                7.0338                2.07115   524.288k       3.44572M/s [BEST: throughput=  0.90 GB/s doc_throughput=     6 docs/s instructions=   965775453 cycles=   466291967 branch_miss=  413273 cache_miss= 8751924 cache_ref=  12139597 items=    524288 avg_time= 152156485 ns]
kostya<rapidjson>/manual_time                          244528324 ns    254862932 ns            3         968.727k            568.83M        8.14236M       12.1628M    808.047M              5.88505           4.14282       3.34759G          2.29716G                    16.7303                     2.84285           2.17203M    969.217k   137.305M       535.497M/s   7.83204M   11.7828M   810.917M         5.90595    4.08951/s 3.31625G/s     2.29716G               16.7303                2.83279   524.288k       2.14408M/s [BEST: throughput=  0.57 GB/s doc_throughput=     4 docs/s instructions=  2297155734 cycles=   808047388 branch_miss=  968727 cache_miss= 8142358 cache_ref=  12162759 items=    524288 avg_time= 244528324 ns]
kostya<rapidjson_lossless>/manual_time                 257777658 ns    268187603 ns            3         964.684k           539.857M        8.13601M       11.9929M    856.891M              6.24078           3.93181       3.36913G          2.49743G                    18.1889                     2.91452            2.0614M    964.558k   137.305M       507.974M/s   7.82323M   11.6663M   860.201M         6.26489    3.87931/s 3.33699G/s     2.49743G               18.1889                2.90331   524.288k       2.03388M/s [BEST: throughput=  0.54 GB/s doc_throughput=     3 docs/s instructions=  2497425698 cycles=   856890927 branch_miss=  964684 cache_miss= 8136013 cache_ref=  11992921 items=    524288 avg_time= 257777658 ns]
kostya<rapidjson_insitu>/manual_time                   219304432 ns    229724495 ns            3         1017.87k           635.324M        11.1661M       15.7467M    715.807M              5.21326            4.6271       3.31211G          2.03227G                    14.8012                     2.83914           2.42593M    1017.74k   137.305M       597.089M/s   10.8542M   15.3576M   718.404M         5.23218    4.55987/s 3.27583G/s     2.03228G               14.8012                2.82888   524.288k       2.39069M/s [BEST: throughput=  0.64 GB/s doc_throughput=     4 docs/s instructions=  2032274134 cycles=   715806987 branch_miss= 1017873 cache_miss=11166065 cache_ref=  15746686 items=    524288 avg_time= 219304432 ns]
distinct_user_id<simdjson_dom>/manual_time                258791 ns       289923 ns         2705            4.02k           2.45494G               0        94.361k     949.87k              1.50411          3.88737k        3.6925G          2.90343M                    4.59756                     3.05666           447.048k    4.17603k   631.515k       2.27266G/s    1.50684   94.4542k   954.742k         1.51183   3.86413k/s 3.68924G/s     2.90343M               4.59756                3.04106        115       444.375k/s [BEST: throughput=  2.45 GB/s doc_throughput=  3887 docs/s instructions=     2903428 cycles=      949870 branch_miss=    4020 cache_miss=       0 cache_ref=     94361 items=       115 avg_time=    258790 ns]
distinct_user_id<simdjson_ondemand>/manual_time           170351 ns       200202 ns         4105           1.727k           3.73527G               0        57.065k    624.422k             0.988768          5.91478k       3.69332G          2.11935M                    3.35598                      3.3941             680.2k    1.85788k   631.515k       3.45254G/s   0.470158   57.0127k   628.767k        0.995648   5.87024k/s 3.69101G/s     2.11935M               3.35598                3.37065        115       675.077k/s [BEST: throughput=  3.74 GB/s doc_throughput=  5914 docs/s instructions=     2119353 cycles=      624422 branch_miss=    1727 cache_miss=       0 cache_ref=     57065 items=       115 avg_time=    170350 ns]
distinct_user_id<yyjson>/manual_time                      677907 ns       712731 ns         1211          10.057k           1.58516G             418        78.211k    1.47107M              2.32943          2.51009k       3.69252G          2.87342M                    4.55004                     1.95328            288.66k    7.86652k   631.515k        888.41M/s    1039.23   50.2133k   1.69163M         2.67868   1.47513k/s 2.49536G/s     2.87402M                 4.551                1.69897        115        169.64k/s [BEST: throughput=  1.59 GB/s doc_throughput=  2510 docs/s instructions=     2873417 cycles=     1471070 branch_miss=   10057 cache_miss=     418 cache_ref=     78211 items=       115 avg_time=    677907 ns]
distinct_user_id<yyjson_insitu>/manual_time               475110 ns       508384 ns         1472           7.206k           1.78494G             327        46.528k    1.30282M              2.06301          2.82644k       3.68234G          2.87301M                     4.5494                     2.20523           325.041k    7.69683k   631.515k       1.23791G/s      113.4   32.1661k   1.41864M         2.24641   2.10478k/s 2.98593G/s     2.87328M               4.54982                2.02537        115       242.049k/s [BEST: throughput=  1.78 GB/s doc_throughput=  2826 docs/s instructions=     2873015 cycles=     1302821 branch_miss=    7206 cache_miss=     327 cache_ref=     46528 items=       115 avg_time=    475109 ns]
distinct_user_id<rapidjson>/manual_time                  1604666 ns      1635409 ns          437          26.349k           446.776M          8.995k        55.313k    5.21795M               8.2626           707.468       3.69153G          13.3494M                    21.1387                     2.55836           81.3588k    26.8962k   631.515k       375.318M/s   1.91854k   36.1352k   5.38611M         8.52887    623.182/s 3.35653G/s     13.3501M               21.1398                2.47861        115        71.666k/s [BEST: throughput=  0.45 GB/s doc_throughput=   707 docs/s instructions=    13349393 cycles=     5217954 branch_miss=   26349 cache_miss=    8995 cache_ref=     55313 items=       115 avg_time=   1604666 ns]
distinct_user_id<rapidjson_insitu>/manual_time           1100582 ns      1131041 ns          671          23.053k           631.598M          5.394k        45.495k     3.6912M              5.84499           1000.13       3.69169G          9.70529M                    15.3683                     2.62931           115.015k    23.4396k   631.515k       547.219M/s   1.96807k   36.2349k   3.77391M         5.97597     908.61/s 3.42902G/s     9.70563M               15.3688                2.57177        115        104.49k/s [BEST: throughput=  0.63 GB/s doc_throughput=  1000 docs/s instructions=     9705294 cycles=     3691198 branch_miss=   23053 cache_miss=    5394 cache_ref=     45495 items=       115 avg_time=   1100582 ns]
find_tweet<simdjson_dom>/manual_time                      246882 ns       276092 ns         2839           3.664k           2.57359G               0        83.854k    906.124k              1.43484          4.07526k       3.69269G          2.82239M                    4.46923                     3.11479           4.07526k    3.81736k   631.515k       2.38229G/s    9.08559   83.7974k   910.867k         1.44235   4.05052k/s 3.68948G/s     2.82239M               4.46923                3.09857          1       4.05052k/s [BEST: throughput=  2.57 GB/s doc_throughput=  4075 docs/s instructions=     2822388 cycles=      906124 branch_miss=    3664 cache_miss=       0 cache_ref=     83854 items=         1 avg_time=    246882 ns]
find_tweet<simdjson_ondemand>/manual_time                 116201 ns       144738 ns         6012              899           5.46246G               0        33.061k    426.982k             0.676123          8.64977k        3.6933G          1.50674M                    2.38591                     3.52881           8.64977k     963.233   631.515k       5.06142G/s  0.0182967   33.0391k   428.975k         0.67928   8.60575k/s 3.69166G/s     1.50674M               2.38591                3.51241          1       8.60575k/s [BEST: throughput=  5.46 GB/s doc_throughput=  8649 docs/s instructions=     1506737 cycles=      426982 branch_miss=     899 cache_miss=       0 cache_ref=     33061 items=         1 avg_time=    116201 ns]
find_tweet<yyjson>/manual_time                            666769 ns       698072 ns         1149           9.616k           1.63075G             221        69.516k     1.4298M              2.26407          2.58228k       3.69214G          2.82413M                      4.472                      1.9752           2.58228k    7.65802k   631.515k       903.251M/s    1020.54   41.4432k   1.65697M         2.62381   1.49977k/s 2.48508G/s     2.82482M               4.47309                1.70481          1       1.49977k/s [BEST: throughput=  1.63 GB/s doc_throughput=  2582 docs/s instructions=     2824133 cycles=     1429796 branch_miss=    9616 cache_miss=     221 cache_ref=     69516 items=         1 avg_time=    666769 ns]
find_tweet<yyjson_insitu>/manual_time                     465016 ns       495460 ns         1505           7.054k           1.82881G             605        38.283k    1.27152M              2.01344          2.89592k        3.6822G          2.82402M                    4.47182                     2.22099           2.89592k    7.45019k   631.515k       1.26478G/s    15.4757    23.489k   1.38162M         2.18778   2.15047k/s 2.97112G/s     2.82428M               4.47223                2.04418          1       2.15047k/s [BEST: throughput=  1.83 GB/s doc_throughput=  2895 docs/s instructions=     2824019 cycles=     1271516 branch_miss=    7054 cache_miss=     605 cache_ref=     38283 items=         1 avg_time=    465015 ns]
find_tweet<rapidjson>/manual_time                        1591154 ns      1619991 ns          441          26.061k           450.158M         21.386k        48.935k    5.17879M              8.20058           712.822       3.69155G          13.2806M                    21.0297                     2.56442            712.822    26.7503k   631.515k       378.505M/s   1.55273k   28.6614k   5.33704M         8.45116    628.475/s 3.35419G/s     13.2814M               21.0311                2.48854          1        628.475/s [BEST: throughput=  0.45 GB/s doc_throughput=   712 docs/s instructions=    13280580 cycles=     5178787 branch_miss=   26061 cache_miss=   21386 cache_ref=     48935 items=         1 avg_time=   1591153 ns]
find_tweet<rapidjson_insitu>/manual_time                 1092026 ns      1122000 ns          683          23.088k           637.426M          2.598k        36.425k    3.65741M              5.79148           1009.36       3.69164G          9.64713M                    15.2762                      2.6377            1009.36    23.3661k   631.515k       551.507M/s    1.7414k   27.3124k   3.74103M         5.92389    915.729/s 3.42577G/s     9.64738M               15.2766                 2.5788          1        915.729/s [BEST: throughput=  0.64 GB/s doc_throughput=  1009 docs/s instructions=     9647134 cycles=     3657408 branch_miss=   23088 cache_miss=    2598 cache_ref=     36425 items=         1 avg_time=   1092025 ns]
