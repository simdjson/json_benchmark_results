run_benchmark: v0.8.0~20 /home/jkeiser/simdjson_benchmark_results/v0.7.0/18/skylake-clang11.json 
git reset --hard v0.8.0~20
HEAD is now at f29b70c6 Adding GitHub Actions VS - without exceptions. (#1362)
cmake ..
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- git Version: v0.2.1-f29b70c6
-- Version: 0.2.1
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES -- failed to compile
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
make[1]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[2]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 72%] Built target benchmark
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 72%] Built target generated-data
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
Scanning dependencies of target simdjson
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 81%] Building CXX object src/CMakeFiles/simdjson.dir/simdjson.cpp.o
[ 81%] Linking CXX shared library ../libsimdjson.so
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 81%] Built target simdjson
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 90%] Built target yyjson
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
Scanning dependencies of target bench_ondemand
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 90%] Building CXX object benchmark/CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o
[100%] Linking CXX executable bench_ondemand
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[100%] Built target bench_ondemand
make[2]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[1]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/18/skylake-clang11.json --benchmark_out_format=json
2021-01-23 04:49:09
Running benchmark/bench_ondemand
Run on (4 X 3200 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 1024 KiB (x4)
  L3 Unified 8448 KiB (x1)
Load Average: 1.00, 1.00, 0.93
***WARNING*** CPU scaling is enabled, the benchmark real time measurements may be noisy and will incur extra overhead.
simdjson::dom implementation:      haswell
simdjson::ondemand implementation: fallback

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                  315128 ns       385324 ns         2214            3.49k           2.02334G               7        32.455k    996.699k              1.57827          3.20395k       3.19337G          2.98281M                    4.72326                     2.99269           320.395k    3.62912k   631.515k       1.86637G/s    7.04968    32.745k   1005.38k         1.59202   3.17332k/s  3.1904G/s     2.98281M               4.72326                2.96684        100       317.332k/s [BEST: throughput=  2.02 GB/s doc_throughput=  3203 docs/s instructions=     2982809 cycles=      996699 branch_miss=    3490 cache_miss=       7 cache_ref=     32455 items=       100 avg_time=    315127 ns]
partial_tweets<simdjson_ondemand>/manual_time            1450738 ns      1509194 ns          483          32.952k           439.726M               0        11.832k    4.58557M              7.26122           696.303       3.19295G          10.9856M                    17.3956                     2.39568           69.6303k    34.0329k   631.515k        415.14M/s   0.339545   11.8873k   4.62764M         7.32783    689.304/s 3.18985G/s     10.9856M               17.3956                 2.3739        100       68.9304k/s [BEST: throughput=  0.44 GB/s doc_throughput=   696 docs/s instructions=    10985555 cycles=     4585569 branch_miss=   32952 cache_miss=       0 cache_ref=     11832 items=       100 avg_time=   1450738 ns]
partial_tweets<yyjson>/manual_time                        794913 ns       874518 ns          883          10.146k           1.42789G             334        27.891k    1.41278M              2.23713          2.26105k       3.19436G          2.91999M                    4.62379                     2.06684           226.105k    7.71985k   631.515k       757.643M/s    528.306    23.569k   1.57221M         2.48958     1.258k/s 1.97784G/s      2.9204M               4.62443                1.85751        100         125.8k/s [BEST: throughput=  1.43 GB/s doc_throughput=  2261 docs/s instructions=     2919991 cycles=     1412778 branch_miss=   10146 cache_miss=     334 cache_ref=     27891 items=       100 avg_time=    794912 ns]
partial_tweets<yyjson_insitu>/manual_time                 516811 ns       578208 ns         1368           7.413k           1.77141G             101        14.823k    1.13871M              1.80314          2.80502k       3.19411G          2.91959M                    4.62316                     2.56394           280.502k    7.45932k   631.515k       1.13803G/s    64.3121   9.16762k   1.24945M         1.97849   1.93494k/s 2.41761G/s     2.91986M               4.62358                2.33692        100       193.494k/s [BEST: throughput=  1.77 GB/s doc_throughput=  2805 docs/s instructions=     2919594 cycles=     1138712 branch_miss=    7413 cache_miss=     101 cache_ref=     14823 items=       100 avg_time=    516810 ns]
partial_tweets<rapidjson>/manual_time                    2786227 ns      2850255 ns          251          29.181k           249.652M          12.37k        22.571k    8.07617M              12.7886           395.322       3.19269G          21.8948M                    34.6703                     2.71104           39.5322k    29.7446k   631.515k       216.156M/s    393.873   12.0914k   8.21438M         13.0074    358.908/s 2.94821G/s     21.8957M               34.6717                2.66553        100       35.8908k/s [BEST: throughput=  0.25 GB/s doc_throughput=   395 docs/s instructions=    21894843 cycles=     8076167 branch_miss=   29181 cache_miss=   12370 cache_ref=     22571 items=       100 avg_time=   2786227 ns]
partial_tweets<rapidjson_insitu>/manual_time             1839898 ns      1901946 ns          383          26.133k           361.989M            1077        12.648k    5.38139M               8.5214           573.207       3.08465G          13.3568M                    21.1505                     2.48204           57.3207k    28.3459k   631.515k       327.333M/s    202.869   9.99749k   5.46998M         8.66168    543.508/s 2.97298G/s     13.3572M                21.151                 2.4419        100       54.3508k/s [BEST: throughput=  0.36 GB/s doc_throughput=   573 docs/s instructions=    13356841 cycles=     5381394 branch_miss=   26133 cache_miss=    1077 cache_ref=     12648 items=       100 avg_time=   1839898 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                 100738182 ns    106807635 ns            7         945.831k           457.648M        6.77927M       6.89599M    320.486M              6.96728           9.94914       3.18856G          1038.74M                    22.5819                     3.24113           9.94914M    950.472k   45.9988M       435.464M/s   6.80817M   6.89591M   321.184M         6.98245    9.92672/s  3.1883G/s     1038.74M               22.5819                3.23409      1000k       9.92672M/s [BEST: throughput=  0.46 GB/s doc_throughput=     9 docs/s instructions=  1038738117 cycles=   320486351 branch_miss=  945831 cache_miss= 6779270 cache_ref=   6895987 items=   1000000 avg_time= 100738182 ns]
large_random<simdjson_ondemand>/manual_time            121062600 ns    127144663 ns            6         1.29808M           380.887M        3.52418M       3.57353M     385.13M              8.37262           8.28037       3.18902G          1.21898G                    26.5002                      3.1651           8.28037M    1.29805M   45.9988M       362.357M/s   3.52284M   3.57366M   386.042M         8.39244    8.26019/s 3.18878G/s     1.21898G               26.5002                3.15763      1000k       8.26019M/s [BEST: throughput=  0.38 GB/s doc_throughput=     8 docs/s instructions=  1218976309 cycles=   385130441 branch_miss= 1298080 cache_miss= 3524176 cache_ref=   3573526 items=   1000000 avg_time= 121062600 ns]
large_random<simdjson_ondemand_unordered>/manual_time  120695052 ns    126810432 ns            6         1.30383M           382.651M        3.50949M       3.57391M    383.348M              8.33387           8.31872       3.18896G          1.22398G                    26.6089                     3.19286           8.31872M    1.30255M   45.9988M        363.46M/s   3.52791M   3.57382M   384.867M          8.3669    8.28534/s 3.18876G/s     1.22398G               26.6089                3.18026      1000k       8.28534M/s [BEST: throughput=  0.38 GB/s doc_throughput=     8 docs/s instructions=  1223976309 cycles=   383347623 branch_miss= 1303827 cache_miss= 3509488 cache_ref=   3573913 items=   1000000 avg_time= 120695051 ns]
large_random<yyjson>/manual_time                       146239537 ns    152375911 ns            5         680.549k           314.887M        4.20135M       4.31524M    325.755M              7.08181           6.84555       2.22997G          855.681M                    18.6023                     2.62676           6.84555M     681.83k   45.9988M       299.973M/s   4.20092M   4.31857M    326.25M         7.09258     6.8381/s 2.23093G/s     855.681M               18.6023                2.62278      1000k        6.8381M/s [BEST: throughput=  0.31 GB/s doc_throughput=     6 docs/s instructions=   855680758 cycles=   325754728 branch_miss=  680549 cache_miss= 4201348 cache_ref=   4315242 items=   1000000 avg_time= 146239536 ns]
large_random<yyjson_insitu>/manual_time                120044437 ns    126174583 ns            6         680.761k           383.516M        3.48305M       3.75908M     282.94M              6.15103           8.33754       2.35902G           849.56M                    18.4692                     3.00262           8.33754M    681.508k   45.9988M        365.43M/s   3.48532M   3.76475M   283.183M         6.15631    8.33025/s 2.35898G/s      849.56M               18.4692                3.00004      1000k       8.33025M/s [BEST: throughput=  0.38 GB/s doc_throughput=     8 docs/s instructions=   849560206 cycles=   282940016 branch_miss=  680761 cache_miss= 3483050 cache_ref=   3759083 items=   1000000 avg_time= 120044437 ns]
large_random<rapidjson>/manual_time                    250440504 ns    256565484 ns            3         612.876k           189.501M        4.38324M       4.90352M    705.998M              15.3482            4.1197        2.9085G          2.01413G                    43.7865                     2.85288            4.1197M     600.12k   45.9988M       175.163M/s   4.11218M   4.68482M   708.736M         15.4077    3.99296/s 2.82996G/s     2.01413G               43.7867                2.84187      1000k       3.99296M/s [BEST: throughput=  0.19 GB/s doc_throughput=     4 docs/s instructions=  2014125218 cycles=   705997747 branch_miss=  612876 cache_miss= 4383243 cache_ref=   4903524 items=   1000000 avg_time= 250440504 ns]
large_random<rapidjson_lossless>/manual_time           286188722 ns    292318325 ns            2         584.133k           164.181M        4.37358M       4.88952M    825.127M               17.938           3.56924       2.94508G          2.47909G                    53.8947                      3.0045           3.56924M     583.52k   45.9988M       153.283M/s    4.1745M     4.734M   828.037M         18.0013     3.4942/s 2.89333G/s      2.4791G               53.8949                2.99395      1000k        3.4942M/s [BEST: throughput=  0.16 GB/s doc_throughput=     3 docs/s instructions=  2479092311 cycles=   825127449 branch_miss=  584133 cache_miss= 4373578 cache_ref=   4889516 items=   1000000 avg_time= 286188722 ns]
large_random<rapidjson_insitu>/manual_time             267159018 ns    273288336 ns            3         593.182k           177.264M        5.11305M       5.61153M    758.693M              16.4938           3.85366       2.92375G          1.73613G                    37.7429                     2.28831           3.85366M    592.929k   45.9988M       164.201M/s   4.83174M   5.41918M    761.14M          16.547    3.74309/s 2.84901G/s     1.73613G                37.743                2.28097      1000k       3.74309M/s [BEST: throughput=  0.18 GB/s doc_throughput=     3 docs/s instructions=  1736125046 cycles=   758693403 branch_miss=  593182 cache_miss= 5113053 cache_ref=   5611534 items=   1000000 avg_time= 267159017 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                       105785426 ns    124770498 ns            7         1016.93k           1.30028G        10.2135M       10.3181M    336.716M              2.45232           9.47001       3.18871G          984.675M                    7.17144                     2.92434           4.96501M    1016.74k   137.305M       1.20882G/s   10.2424M   10.3181M   337.295M         2.45654     9.4531/s 3.18849G/s     984.675M               7.17144                2.91933   524.288k       4.95615M/s [BEST: throughput=  1.30 GB/s doc_throughput=     9 docs/s instructions=   984674902 cycles=   336716436 branch_miss= 1016929 cache_miss=10213523 cache_ref=  10318078 items=    524288 avg_time= 105785426 ns]
kostya<simdjson_ondemand>/manual_time                  225604668 ns    244550684 ns            3         686.765k             609.5M        6.44666M       6.47267M    718.439M              5.23243           4.43902       3.18917G          2.21249G                    16.1137                     3.07958           2.32733M     718.76k   137.305M       580.415M/s   6.44776M    6.4724M    719.55M         5.24052    4.43253/s 3.18943G/s     2.21249G               16.1137                3.07483   524.288k       2.32392M/s [BEST: throughput=  0.61 GB/s doc_throughput=     4 docs/s instructions=  2212492377 cycles=   718439031 branch_miss=  686765 cache_miss= 6446661 cache_ref=   6472665 items=    524288 avg_time= 225604668 ns]
kostya<yyjson>/manual_time                             226380544 ns    245375905 ns            3         420.042k           606.566M        8.49714M       8.64546M    489.111M              3.56222           4.41766       2.16072G          974.184M                    7.09504                     1.99175           2.31612M    420.197k   137.305M       578.425M/s    8.4976M   8.63534M   489.227M         3.56307    4.41734/s 2.16108G/s     974.185M               7.09504                1.99127   524.288k       2.31596M/s [BEST: throughput=  0.61 GB/s doc_throughput=     4 docs/s instructions=   974184499 cycles=   489110678 branch_miss=  420042 cache_miss= 8497145 cache_ref=   8645455 items=    524288 avg_time= 226380543 ns]
kostya<yyjson_insitu>/manual_time                      148320463 ns    167432834 ns            5         417.001k           925.952M        6.35883M        6.5994M    360.928M              2.62866           6.74376       2.43401G          955.915M                    6.96198                      2.6485           3.53567M    416.414k   137.305M       882.847M/s   6.35923M   6.60974M   360.942M         2.62876    6.74216/s 2.43353G/s     955.915M               6.96198                2.64839   524.288k       3.53483M/s [BEST: throughput=  0.93 GB/s doc_throughput=     6 docs/s instructions=   955915032 cycles=   360927566 branch_miss=  417001 cache_miss= 6358831 cache_ref=   6599402 items=    524288 avg_time= 148320463 ns]
kostya<rapidjson>/manual_time                          320913892 ns    340003676 ns            2         960.335k           432.387M        5.24406M       5.74608M    915.593M              6.66832            3.1491       2.88329G          2.73711G                    19.9346                     2.98944           1.65103M    961.934k   137.305M       408.035M/s   5.12134M   5.64906M   917.805M         6.68443     3.1161/s 2.85997G/s     2.73711G               19.9346                2.98224   524.288k       1.63373M/s [BEST: throughput=  0.43 GB/s doc_throughput=     3 docs/s instructions=  2737113315 cycles=   915593325 branch_miss=  960335 cache_miss= 5244060 cache_ref=   5746084 items=    524288 avg_time= 320913892 ns]
kostya<rapidjson_lossless>/manual_time                 346344024 ns    365359067 ns            2         1019.49k           400.417M        5.24027M       5.77294M    996.313M              7.25621           2.91626       2.90551G          3.00606G                    21.8933                     3.01719           1.52896M    1026.81k   137.305M       378.076M/s   5.11718M   5.66235M   998.883M         7.27492     2.8873/s 2.88408G/s     3.00607G               21.8933                3.00943   524.288k       1.51378M/s [BEST: throughput=  0.40 GB/s doc_throughput=     2 docs/s instructions=  3006063786 cycles=   996313468 branch_miss= 1019492 cache_miss= 5240268 cache_ref=   5772937 items=    524288 avg_time= 346344024 ns]
kostya<rapidjson_insitu>/manual_time                   310036557 ns    329104301 ns            2         1.19588M           446.968M        7.37877M       7.92384M    881.574M              6.42055           3.25529       2.86978G          2.21988G                    16.1675                     2.51808           1.70671M    1.14237M   137.305M       422.351M/s   7.26111M   7.80636M   882.016M         6.42377    3.22543/s 2.84488G/s     2.21988G               16.1675                2.51682   524.288k       1.69105M/s [BEST: throughput=  0.45 GB/s doc_throughput=     3 docs/s instructions=  2219877912 cycles=   881574239 branch_miss= 1195880 cache_miss= 7378770 cache_ref=   7923836 items=    524288 avg_time= 310036557 ns]
distinct_user_id<simdjson_dom>/manual_time                308826 ns       387083 ns         2269           3.616k           2.06112G               0        33.538k    978.594k               1.5496          3.26377k       3.19391G          2.91783M                    4.62037                     2.98166           375.334k    3.76647k   631.515k       1.90445G/s   0.190392   33.7823k   985.259k         1.56015   3.23807k/s 3.19034G/s     2.91783M               4.62037                2.96149        115       372.378k/s [BEST: throughput=  2.06 GB/s doc_throughput=  3263 docs/s instructions=     2917832 cycles=      978594 branch_miss=    3616 cache_miss=       0 cache_ref=     33538 items=       115 avg_time=    308825 ns]
distinct_user_id<simdjson_ondemand>/manual_time          1399716 ns      1461016 ns          499          32.187k           455.803M               0         9.686k    4.42388M              7.00519           721.761       3.19298G          10.6053M                    16.7934                     2.39728           83.0025k    33.3657k   631.515k       430.273M/s   0.374749   9.76916k   4.46472M         7.06985    714.431/s 3.18973G/s     10.6053M               16.7934                2.37536        115       82.1595k/s [BEST: throughput=  0.46 GB/s doc_throughput=   721 docs/s instructions=    10605306 cycles=     4423883 branch_miss=   32187 cache_miss=       0 cache_ref=      9686 items=       115 avg_time=   1399716 ns]
distinct_user_id<yyjson>/manual_time                      789985 ns       878002 ns          975           9.944k           1.45469G             251        27.561k    1.38679M              2.19597           2.3035k       3.19446G          2.87786M                    4.55707                      2.0752           264.902k    7.76196k   631.515k       762.368M/s    431.252   23.5881k   1.55805M         2.46716   1.26585k/s 1.97225G/s     2.87834M               4.55783                 1.8474        115       145.572k/s [BEST: throughput=  1.45 GB/s doc_throughput=  2303 docs/s instructions=     2877858 cycles=     1386785 branch_miss=    9944 cache_miss=     251 cache_ref=     27561 items=       115 avg_time=    789985 ns]
distinct_user_id<yyjson_insitu>/manual_time               512317 ns       582112 ns         1380           7.047k           1.80547G           1.31k        13.792k    1.11149M              1.76004          2.85896k        3.1777G          2.87774M                    4.55689                     2.58909            328.78k    7.51678k   631.515k       1.14801G/s    66.3109   9.17156k   1.23551M         1.95643   1.95192k/s 2.41162G/s     2.87801M               4.55731                 2.3294        115        224.47k/s [BEST: throughput=  1.81 GB/s doc_throughput=  2858 docs/s instructions=     2877745 cycles=     1111491 branch_miss=    7047 cache_miss=    1310 cache_ref=     13792 items=       115 avg_time=    512316 ns]
distinct_user_id<rapidjson>/manual_time                  2773399 ns      2844928 ns          254          29.538k           248.695M             748        22.895k    8.10738M               12.838           393.806       3.19274G          21.8225M                    34.5558                     2.69168           45.2877k    29.7187k   631.515k       217.156M/s   1.68161k   13.1299k   8.24468M         13.0554    360.568/s 2.97277G/s     21.8232M                34.557                2.64695        115       41.4654k/s [BEST: throughput=  0.25 GB/s doc_throughput=   393 docs/s instructions=    21822477 cycles=     8107379 branch_miss=   29538 cache_miss=     748 cache_ref=     22895 items=       115 avg_time=   2773398 ns]
distinct_user_id<rapidjson_insitu>/manual_time           1827756 ns      1898020 ns          380          25.673k           382.207M             137        15.059k     5.2754M              8.35357           605.222       3.19279G          13.2887M                    21.0426                     2.51899           69.6005k    33.3415k   631.515k       329.508M/s   1.86815k   11.6056k   5.52826M         8.75396    547.119/s 3.02462G/s      13.289M               21.0431                2.40383        115       62.9187k/s [BEST: throughput=  0.38 GB/s doc_throughput=   605 docs/s instructions=    13288707 cycles=     5275402 branch_miss=   25673 cache_miss=     137 cache_ref=     15059 items=       115 avg_time=   1827755 ns]
find_tweet<simdjson_dom>/manual_time                      293275 ns       366955 ns         2386           3.379k           2.16884G               0        30.034k    930.005k              1.47266          3.43434k       3.19395G          2.83251M                    4.48526                      3.0457           3.43434k    3.44055k   631.515k       2.00544G/s   0.124057   30.1735k   935.739k         1.48174   3.40977k/s 3.19066G/s     2.83251M               4.48526                3.02703          1       3.40977k/s [BEST: throughput=  2.17 GB/s doc_throughput=  3434 docs/s instructions=     2832512 cycles=      930005 branch_miss=    3379 cache_miss=       0 cache_ref=     30034 items=         1 avg_time=    293274 ns]
find_tweet<simdjson_ondemand>/manual_time                1344345 ns      1407496 ns          521          31.455k           474.647M               0         7.658k    4.24791M              6.72654             751.6       3.19273G          10.0995M                    15.9925                     2.37752              751.6      32.66k   631.515k       447.995M/s   0.120921   7.79552k   4.28801M         6.79004    743.857/s 3.18967G/s     10.0995M               15.9925                2.35529          1        743.857/s [BEST: throughput=  0.47 GB/s doc_throughput=   751 docs/s instructions=    10099506 cycles=     4247909 branch_miss=   31455 cache_miss=       0 cache_ref=      7658 items=         1 avg_time=   1344344 ns]
find_tweet<yyjson>/manual_time                            772384 ns       856171 ns          913           9.797k           1.48134G             222        27.265k    1.36199M              2.15669          2.34569k        3.1948G          2.81716M                    4.46096                     2.06842           2.34569k     7.4932k   631.515k       779.741M/s    324.375   19.7223k   1.50314M         2.38021   1.29469k/s 1.94611G/s     2.81764M               4.46172                 1.8745          1       1.29469k/s [BEST: throughput=  1.48 GB/s doc_throughput=  2345 docs/s instructions=     2817160 cycles=     1361985 branch_miss=    9797 cache_miss=     222 cache_ref=     27265 items=         1 avg_time=    772384 ns]
find_tweet<yyjson_insitu>/manual_time                     496555 ns       558755 ns         1411           6.848k           1.84985G          1.249k        13.106k    1085.54k              1.71894          2.92922k       3.17977G          2.81684M                    4.46045                     2.59488           2.92922k    7.26683k   631.515k       1.18445G/s    7.19773    5.1972k   1.18603M         1.87807   2.01388k/s 2.38851G/s      2.8171M               4.46086                2.37524          1       2.01388k/s [BEST: throughput=  1.85 GB/s doc_throughput=  2929 docs/s instructions=     2816840 cycles=     1085536 branch_miss=    6848 cache_miss=    1249 cache_ref=     13106 items=         1 avg_time=    496554 ns]
find_tweet<rapidjson>/manual_time                        2735628 ns      2801914 ns          255          29.082k           252.097M         11.946k        21.137k    7.99788M              12.6646           399.194        3.1927G          21.7383M                    34.4225                     2.71801            399.194    29.6773k   631.515k       220.154M/s   1.49027k   10.0471k   8.12506M          12.866    365.547/s 2.97009G/s     21.7391M               34.4238                2.67557          1        365.547/s [BEST: throughput=  0.25 GB/s doc_throughput=   399 docs/s instructions=    21738322 cycles=     7997877 branch_miss=   29082 cache_miss=   11946 cache_ref=     21137 items=         1 avg_time=   2735628 ns]
find_tweet<rapidjson_insitu>/manual_time                 1825854 ns      1890799 ns          399          26.671k           379.376M          1.286k        17.669k      5.284M              8.36718            600.74       3.17431G          13.2108M                    20.9193                     2.50016             600.74    34.2878k   631.515k       329.851M/s    1.6508k   8.66594k   5.51726M         8.73654    547.689/s 3.02174G/s     13.2109M               20.9193                2.39446          1        547.689/s [BEST: throughput=  0.38 GB/s doc_throughput=   600 docs/s instructions=    13210823 cycles=     5283999 branch_miss=   26671 cache_miss=    1286 cache_ref=     17669 items=         1 avg_time=   1825853 ns]
