run_benchmark: v0.8.0~20 /home/jkeiser/simdjson_benchmark_results/v0.7.0/18/skylake-x-clang11-native.json -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native
git reset --hard v0.8.0~20
HEAD is now at f29b70c6 Adding GitHub Actions VS - without exceptions. (#1362)
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- git Version: v0.2.1-f29b70c6
-- Version: 0.2.1
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES -- failed to compile
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 11
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
make[3]: Nothing to be done for '_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build'.
[ 72%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
make[3]: Nothing to be done for 'jsonexamples/generated/CMakeFiles/generated-data.dir/build'.
[ 72%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/clang++-11  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/src  -march=native -O3 -DNDEBUG -fPIC   -pthread -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/clang++-11 -fPIC -march=native -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.6 -o ../libsimdjson.so.6.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.6.0.0 ../libsimdjson.so.6 ../libsimdjson.so
[ 81%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
make[3]: Nothing to be done for 'dependencies/CMakeFiles/yyjson.dir/build'.
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/clang++-11  -DRAPIDJSON_HAS_STDSTRING -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_COMPETITION_RAPIDJSON -DSIMDJSON_COMPETITION_YYJSON -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/rapidjson/include  -march=native -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/clang++-11  -march=native -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.6.0.0 ../_deps/google_benchmarks/src/libbenchmark.a ../dependencies/libyyjson.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/18/skylake-x-clang11-native.json --benchmark_out_format=json
2021-01-24 21:19:53
Running benchmark/bench_ondemand
Run on (4 X 3200 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 1024 KiB (x4)
  L3 Unified 8448 KiB (x1)
Load Average: 1.01, 1.03, 1.00
***WARNING*** CPU scaling is enabled, the benchmark real time measurements may be noisy and will incur extra overhead.
simdjson::dom implementation:      haswell
simdjson::ondemand implementation: haswell

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                  323120 ns       393883 ns         2166           3.667k           1.96836G               0        33.737k    1024.77k              1.62272          3.11689k       3.19409G          2.93219M                     4.6431                     2.86132           311.689k    3.81847k   631.515k        1.8202G/s   0.426593   33.8241k   1031.14k          1.6328   3.09482k/s  3.1912G/s     2.93219M                4.6431                2.84364        100       309.482k/s [BEST: throughput=  1.97 GB/s doc_throughput=  3116 docs/s instructions=     2932189 cycles=     1024769 branch_miss=    3667 cache_miss=       0 cache_ref=     33737 items=       100 avg_time=    323120 ns]
partial_tweets<simdjson_ondemand>/manual_time             211204 ns       268219 ns         3318           2.114k           3.03756G               0        10.727k     664.16k              1.05169          4.80996k       3.19458G          1.87911M                    2.97556                      2.8293           480.996k    2.36304k   631.515k       2.78472G/s   0.269741   10.9273k   674.147k         1.06751   4.73476k/s 3.19192G/s     1.87911M               2.97556                2.78739        100       473.476k/s [BEST: throughput=  3.04 GB/s doc_throughput=  4809 docs/s instructions=     1879108 cycles=      664160 branch_miss=    2114 cache_miss=       0 cache_ref=     10727 items=       100 avg_time=    211204 ns]
partial_tweets<yyjson>/manual_time                        805801 ns       884933 ns          870           9.635k            1.4126G             249        28.291k    1.42819M              2.26152          2.23685k       3.19463G          2.91951M                    4.62303                     2.04421           223.685k    7.70294k   631.515k       747.405M/s    589.661     23.52k   1.59834M         2.53096     1.241k/s 1.98354G/s        2.92M                4.6238                1.82689        100         124.1k/s [BEST: throughput=  1.41 GB/s doc_throughput=  2236 docs/s instructions=     2919511 cycles=     1428185 branch_miss=    9635 cache_miss=     249 cache_ref=     28291 items=       100 avg_time=    805801 ns]
partial_tweets<yyjson_insitu>/manual_time                 525056 ns       586700 ns         1345           6.968k           1.73592G          1.185k        13.862k     1.1532M              1.82608          2.74882k       3.16994G           2.9194M                    4.62286                     2.53157           274.882k    7.38739k   631.515k       1.12016G/s     64.258   8.83157k   1.27351M          2.0166   1.90456k/s 2.42548G/s     2.91967M               4.62327                2.29261        100       190.456k/s [BEST: throughput=  1.74 GB/s doc_throughput=  2748 docs/s instructions=     2919404 cycles=     1153200 branch_miss=    6968 cache_miss=    1185 cache_ref=     13862 items=       100 avg_time=    525055 ns]
partial_tweets<rapidjson>/manual_time                    2853354 ns      2916902 ns          245          29.618k           243.334M             514        22.938k     8.2689M              13.0937           385.318       3.18615G          21.8949M                    34.6705                     2.64786           38.5318k    29.5317k   631.515k       211.071M/s    412.816   11.4448k   8.42099M         13.3346    350.465/s 2.95126G/s     21.8958M               34.6718                2.60014        100       35.0465k/s [BEST: throughput=  0.24 GB/s doc_throughput=   385 docs/s instructions=    21894914 cycles=     8268896 branch_miss=   29618 cache_miss=     514 cache_ref=     22938 items=       100 avg_time=   2853354 ns]
partial_tweets<rapidjson_insitu>/manual_time             1798652 ns      1860093 ns          390          25.715k           382.932M             229        14.718k    5.26536M              8.33766            606.37       3.19276G          13.3201M                    21.0923                     2.52977            60.637k    26.1321k   631.515k       334.839M/s    211.954   9.67066k   5.33231M         8.44368    555.972/s 2.96462G/s     13.3205M               21.0929                2.49806        100       55.5972k/s [BEST: throughput=  0.38 GB/s doc_throughput=   606 docs/s instructions=    13320129 cycles=     5265358 branch_miss=   25715 cache_miss=     229 cache_ref=     14718 items=       100 avg_time=   1798651 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                 102209165 ns    108439855 ns            7         900.944k           452.008M        6.81362M       6.89537M    324.525M              7.05508           9.82653       3.18895G          1020.45M                    22.1843                     3.14445           9.82653M    900.891k   45.9988M       429.197M/s   6.80214M   6.89551M   325.901M         7.08499    9.78386/s 3.18857G/s     1020.45M               22.1843                3.13117      1000k       9.78386M/s [BEST: throughput=  0.45 GB/s doc_throughput=     9 docs/s instructions=  1020451781 cycles=   324524940 branch_miss=  900944 cache_miss= 6813620 cache_ref=   6895372 items=   1000000 avg_time= 102209165 ns]
large_random<simdjson_ondemand>/manual_time             72446960 ns     78702823 ns           10         951.482k            635.58M        3.49478M       3.57275M    230.799M              5.01751           13.8173       3.18903G          653.908M                    14.2158                     2.83323           13.8173M     953.05k   45.9988M       605.517M/s    3.5151M   3.57276M    231.01M         5.02209    13.8032/s 3.18868G/s     653.908M               14.2158                2.83065      1000k       13.8032M/s [BEST: throughput=  0.64 GB/s doc_throughput=    13 docs/s instructions=   653907679 cycles=   230799302 branch_miss=  951482 cache_miss= 3494780 cache_ref=   3572749 items=   1000000 avg_time=  72446959 ns]
large_random<simdjson_ondemand_unordered>/manual_time   72609742 ns     78808141 ns           10         900.229k            633.97M        3.48851M       3.57261M    231.391M              5.03037           13.7823        3.1891G          654.908M                    14.2375                     2.83031           13.7823M    901.307k   45.9988M       604.159M/s   3.50688M   3.57275M   231.506M         5.03288    13.7723/s 3.18837G/s     654.908M               14.2375                 2.8289      1000k       13.7723M/s [BEST: throughput=  0.63 GB/s doc_throughput=    13 docs/s instructions=   654907678 cycles=   231390827 branch_miss=  900229 cache_miss= 3488511 cache_ref=   3572614 items=   1000000 avg_time=  72609742 ns]
large_random<yyjson>/manual_time                       155598025 ns    161849455 ns            4         697.057k           295.782M        4.19991M       4.32139M    354.456M              7.70578           6.43022       2.27923G          855.681M                    18.6023                     2.41407           6.43022M    696.776k   45.9988M       281.931M/s    4.2008M   4.32421M   354.665M         7.71032    6.42682/s 2.27937G/s     855.681M               18.6023                2.41264      1000k       6.42682M/s [BEST: throughput=  0.30 GB/s doc_throughput=     6 docs/s instructions=   855680959 cycles=   354456295 branch_miss=  697057 cache_miss= 4199915 cache_ref=   4321385 items=   1000000 avg_time= 155598025 ns]
large_random<yyjson_insitu>/manual_time                129074166 ns    135341514 ns            5         695.844k           356.684M        3.48371M       3.61168M    310.689M              6.75429           7.75421       2.40915G           849.56M                    18.4692                     2.73444           7.75421M    697.574k   45.9988M       339.865M/s   3.48757M   3.61128M   311.036M         6.76182    7.74748/s 2.40974G/s      849.56M               18.4692                2.73139      1000k       7.74748M/s [BEST: throughput=  0.36 GB/s doc_throughput=     7 docs/s instructions=   849560296 cycles=   310689135 branch_miss=  695844 cache_miss= 3483711 cache_ref=   3611676 items=   1000000 avg_time= 129074166 ns]
large_random<rapidjson>/manual_time                    249306861 ns    255562323 ns            3         594.138k           190.293M        4.35804M       4.88531M     702.02M              15.2617           4.13691       2.90419G          2.00013G                    43.4822                      2.8491           4.13691M    590.238k   45.9988M       175.959M/s   4.11542M   4.67605M   704.305M         15.3114    4.01112/s 2.82505G/s     2.00014G               43.4824                2.83987      1000k       4.01112M/s [BEST: throughput=  0.19 GB/s doc_throughput=     4 docs/s instructions=  2000126192 cycles=   702019710 branch_miss=  594138 cache_miss= 4358036 cache_ref=   4885313 items=   1000000 avg_time= 249306861 ns]
large_random<rapidjson_lossless>/manual_time           285782461 ns    292054020 ns            2         584.337k           164.325M        4.36239M       4.88324M    823.591M              17.9046           3.57237       2.94217G          2.47709G                    53.8513                     3.00767           3.57237M    584.375k   45.9988M       153.501M/s   4.16379M   4.72729M   825.718M         17.9509    3.49917/s 2.88932G/s      2.4771G               53.8514                2.99994      1000k       3.49917M/s [BEST: throughput=  0.16 GB/s doc_throughput=     3 docs/s instructions=  2477093958 cycles=   823591026 branch_miss=  584337 cache_miss= 4362385 cache_ref=   4883244 items=   1000000 avg_time= 285782461 ns]
large_random<rapidjson_insitu>/manual_time             278503821 ns    284791070 ns            3         588.064k           169.788M        5.05319M       5.60244M    795.123M              17.2857           3.69114       2.93491G          1.72813G                     37.569                     2.17341           3.69114M    588.944k   45.9988M       157.513M/s   4.81042M   5.39255M   797.336M         17.3339    3.59062/s 2.86293G/s     1.72813G               37.5691                2.16739      1000k       3.59062M/s [BEST: throughput=  0.17 GB/s doc_throughput=     3 docs/s instructions=  1728126041 cycles=   795122892 branch_miss=  588064 cache_miss= 5053193 cache_ref=   5602444 items=   1000000 avg_time= 278503821 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                       109194456 ns    128823534 ns            6         1018.21k           1.25886G        10.2173M        10.317M    347.796M              2.53302           9.16833       3.18871G          971.996M                     7.0791                     2.79473           4.80684M    1019.34k   137.305M       1.17108G/s   10.2513M   10.3173M   348.161M         2.53568    9.15797/s 3.18845G/s     971.996M                7.0791                 2.7918   524.288k       4.80142M/s [BEST: throughput=  1.26 GB/s doc_throughput=     9 docs/s instructions=   971995683 cycles=   347796315 branch_miss= 1018209 cache_miss=10217349 cache_ref=  10316986 items=    524288 avg_time= 109194456 ns]
kostya<simdjson_ondemand>/manual_time                   68210828 ns     87586752 ns           10         449.825k            2.0155G        6.42773M       6.47053M    217.175M               1.5817            14.679       3.18791G          641.407M                     4.6714                      2.9534           7.69601M     449.43k   137.305M       1.87471G/s   6.43598M   6.47032M     217.5M         1.58406    14.6604/s 3.18864G/s     641.407M                4.6714                  2.949   524.288k       7.68629M/s [BEST: throughput=  2.02 GB/s doc_throughput=    14 docs/s instructions=   641406589 cycles=   217175492 branch_miss=  449825 cache_miss= 6427726 cache_ref=   6470530 items=    524288 avg_time=  68210827 ns]
kostya<yyjson>/manual_time                             232216672 ns    251906504 ns            3         416.863k               592M        8.49141M       8.65955M    505.221M              3.67955           4.31157        2.1783G          974.185M                    7.09504                     1.92824           2.26051M    437.857k   137.305M       563.888M/s   8.50193M   8.65645M   506.351M         3.68778    4.30632/s 2.18051G/s     974.185M               7.09504                1.92393   524.288k       2.25775M/s [BEST: throughput=  0.59 GB/s doc_throughput=     4 docs/s instructions=   974184704 cycles=   505220674 branch_miss=  416863 cache_miss= 8491408 cache_ref=   8659550 items=    524288 avg_time= 232216671 ns]
kostya<yyjson_insitu>/manual_time                      153154344 ns    172742720 ns            5         415.884k           898.314M        6.35327M       6.52003M    374.393M              2.72673           6.54247       2.44946G          955.915M                    6.96198                     2.55324           3.43014M     434.08k   137.305M       854.982M/s   6.35258M   6.51856M   375.291M         2.73327    6.52936/s 2.45041G/s     955.915M               6.96198                2.54713   524.288k       3.42327M/s [BEST: throughput=  0.90 GB/s doc_throughput=     6 docs/s instructions=   955915019 cycles=   374393262 branch_miss=  415884 cache_miss= 6353266 cache_ref=   6520032 items=    524288 avg_time= 153154343 ns]
kostya<rapidjson>/manual_time                          321812582 ns    341266943 ns            2         970.991k           431.227M          5.247M       5.74678M    917.693M              6.68361           3.14065       2.88215G          2.73082G                    19.8887                     2.97575            1.6466M    976.125k   137.305M       406.896M/s   5.12617M    5.6391M   919.878M         6.69952     3.1074/s 2.85843G/s     2.73082G               19.8887                2.96868   524.288k       1.62917M/s [BEST: throughput=  0.43 GB/s doc_throughput=     3 docs/s instructions=  2730822354 cycles=   917693398 branch_miss=  970991 cache_miss= 5247000 cache_ref=   5746781 items=    524288 avg_time= 321812582 ns]
kostya<rapidjson_lossless>/manual_time                 348717750 ns    368215494 ns            2         977.817k           397.676M        5.24732M       5.74808M    1003.32M              7.30721            2.8963        2.9059G          3.00711G                     21.901                     2.99718           1.51849M    979.736k   137.305M       375.502M/s   5.12007M   5.64196M   1005.88M         7.32591    2.86765/s 2.88452G/s     3.00711G                21.901                2.98952   524.288k       1.50347M/s [BEST: throughput=  0.40 GB/s doc_throughput=     2 docs/s instructions=  3007113257 cycles=  1003315837 branch_miss=  977817 cache_miss= 5247319 cache_ref=   5748077 items=    524288 avg_time= 348717750 ns]
kostya<rapidjson_insitu>/manual_time                   316631523 ns    336218862 ns            2         919.599k           437.328M        7.38365M       7.90766M    903.471M              6.58003           3.18508       2.87763G          2.21411G                    16.1255                     2.45067            1.6699M    837.692k   137.305M       413.554M/s    7.2622M   7.79989M   903.357M          6.5792    3.15825/s 2.85302G/s     2.21411G               16.1255                2.45098   524.288k       1.65583M/s [BEST: throughput=  0.44 GB/s doc_throughput=     3 docs/s instructions=  2214111207 cycles=   903470905 branch_miss=  919599 cache_miss= 7383648 cache_ref=   7907656 items=    524288 avg_time= 316631523 ns]
distinct_user_id<simdjson_dom>/manual_time                317583 ns       395875 ns         2206            3.78k           2.00298G               0        33.679k    1007.03k              1.59462          3.17171k         3.194G          2.86747M                    4.54061                     2.84745           364.747k     3.9672k   631.515k       1.85194G/s   0.116047   33.7048k   1013.32k         1.60458   3.14878k/s 3.19071G/s     2.86747M               4.54061                2.82978        115        362.11k/s [BEST: throughput=  2.00 GB/s doc_throughput=  3171 docs/s instructions=     2867465 cycles=     1007028 branch_miss=    3780 cache_miss=       0 cache_ref=     33679 items=       115 avg_time=    317583 ns]
distinct_user_id<simdjson_ondemand>/manual_time           184103 ns       245505 ns         3801           2.033k           3.47703G               0         9.015k    580.158k             0.918677          5.50585k       3.19426G          1.82797M                    2.89458                     3.15081           633.173k     2.2398k   631.515k       3.19465G/s  0.0181531   9.10175k   587.595k        0.930452   5.43175k/s 3.19167G/s     1.82797M               2.89458                3.11094        115       624.651k/s [BEST: throughput=  3.48 GB/s doc_throughput=  5505 docs/s instructions=     1827969 cycles=      580158 branch_miss=    2033 cache_miss=       0 cache_ref=      9015 items=       115 avg_time=    184102 ns]
distinct_user_id<yyjson>/manual_time                      800730 ns       888176 ns          958           9.504k           1.44084G             181        27.505k    1.39992M              2.21676          2.28156k       3.19399G           2.8778M                    4.55697                     2.05569           262.379k    7.71251k   631.515k       752.138M/s    438.222   23.6054k   1.58337M         2.50726   1.24886k/s 1.97741G/s      2.8784M               4.55793                1.81789        115       143.619k/s [BEST: throughput=  1.44 GB/s doc_throughput=  2281 docs/s instructions=     2877798 cycles=     1399916 branch_miss=    9504 cache_miss=     181 cache_ref=     27505 items=       115 avg_time=    800730 ns]
distinct_user_id<yyjson_insitu>/manual_time               521391 ns       591302 ns         1356           7.043k           1.75619G          1.225k        13.661k    1.13958M              1.80451          2.78091k       3.16906G           2.8776M                    4.55666                     2.52515           319.805k    7.48574k   631.515k       1.12803G/s    67.4727   8.93393k   1.26187M         1.99816   1.91795k/s 2.42019G/s     2.87786M               4.55708                2.28064        115       220.564k/s [BEST: throughput=  1.76 GB/s doc_throughput=  2780 docs/s instructions=     2877602 cycles=     1139575 branch_miss=    7043 cache_miss=    1225 cache_ref=     13661 items=       115 avg_time=    521391 ns]
distinct_user_id<rapidjson>/manual_time                  2820029 ns      2891303 ns          247          28.954k           244.345M         12.637k        22.614k    8.25158M              13.0663           386.918       3.19269G           21.823M                    34.5566                     2.64471           44.4956k    29.5574k   631.515k       213.565M/s   1.75751k   13.0636k   8.38742M         13.2814    354.606/s 2.97423G/s     21.8238M               34.5579                2.60197        115       40.7797k/s [BEST: throughput=  0.24 GB/s doc_throughput=   386 docs/s instructions=    21823017 cycles=     8251585 branch_miss=   28954 cache_miss=   12637 cache_ref=     22614 items=       115 avg_time=   2820029 ns]
distinct_user_id<rapidjson_insitu>/manual_time           1804052 ns      1873500 ns          384          25.521k           384.989M             390        14.771k    5.23729M              8.29322           609.628        3.1928G          13.2531M                    20.9861                     2.53052           70.1072k    32.4503k   631.515k       333.837M/s   1.86347k   11.5262k   5.44721M         8.62562    554.308/s 3.01943G/s     13.2536M               20.9869                2.43309        115       63.7454k/s [BEST: throughput=  0.38 GB/s doc_throughput=   609 docs/s instructions=    13253051 cycles=     5237292 branch_miss=   25521 cache_miss=     390 cache_ref=     14771 items=       115 avg_time=   1804051 ns]
find_tweet<simdjson_dom>/manual_time                      300692 ns       374182 ns         2329           3.521k           2.11472G               3        29.577k    953.844k              1.51041          3.34865k       3.19409G          2.78229M                    4.40574                     2.91692           3.34865k    3.64393k   631.515k       1.95597G/s    1.24045   29.6335k   959.485k         1.51934   3.32567k/s 3.19093G/s     2.78229M               4.40574                2.89978          1       3.32567k/s [BEST: throughput=  2.11 GB/s doc_throughput=  3348 docs/s instructions=     2782291 cycles=      953844 branch_miss=    3521 cache_miss=       3 cache_ref=     29577 items=         1 avg_time=    300691 ns]
find_tweet<simdjson_ondemand>/manual_time                 127807 ns       190523 ns         5469             1055           4.97609G              16         7.628k    405.528k             0.642151           7.8796k        3.1954G          1.32098M                    2.09176                     3.25742            7.8796k    1.12163k   631.515k       4.60181G/s    20.2287   7.60699k   408.075k        0.646185   7.82429k/s  3.1929G/s     1.32098M               2.09176                3.23709          1       7.82429k/s [BEST: throughput=  4.98 GB/s doc_throughput=  7879 docs/s instructions=     1320975 cycles=      405528 branch_miss=    1055 cache_miss=      16 cache_ref=      7628 items=         1 avg_time=    127807 ns]
find_tweet<yyjson>/manual_time                            782786 ns       866329 ns          899           9.331k           1.46598G             223        27.324k    1.37619M              2.17919          2.32137k       3.19465G          2.81717M                    4.46097                     2.04707           2.32137k    7.48157k   631.515k       769.379M/s    339.299   19.5827k   1.52798M         2.41954   1.27749k/s 1.95197G/s     2.81785M               4.46205                1.84417          1       1.27749k/s [BEST: throughput=  1.47 GB/s doc_throughput=  2321 docs/s instructions=     2817169 cycles=     1376193 branch_miss=    9331 cache_miss=     223 cache_ref=     27324 items=         1 avg_time=    782786 ns]
find_tweet<yyjson_insitu>/manual_time                     505259 ns       567271 ns         1400           6.699k           1.81238G          1.297k        12.751k    1.10782M              1.75423          2.86989k       3.17932G          2.81705M                    4.46078                     2.54287           2.86989k    7.21375k   631.515k       1.16404G/s    8.00286   4.98189k   1.21087M          1.9174   1.97918k/s 2.39653G/s     2.81731M                4.4612                2.32669          1       1.97918k/s [BEST: throughput=  1.81 GB/s doc_throughput=  2869 docs/s instructions=     2817049 cycles=     1107821 branch_miss=    6699 cache_miss=    1297 cache_ref=     12751 items=         1 avg_time=    505259 ns]
find_tweet<rapidjson>/manual_time                        2800426 ns      2866597 ns          249          28.965k           246.038M          7.974k        21.034k    8.19494M              12.9766           389.599       3.19274G          21.7394M                    34.4241                     2.65278            389.599    29.3986k   631.515k        215.06M/s   1.52753k   9.64396k   8.32552M         13.1834    357.089/s 2.97295G/s       21.74M               34.4252                2.61125          1        357.089/s [BEST: throughput=  0.25 GB/s doc_throughput=   389 docs/s instructions=    21739361 cycles=     8194940 branch_miss=   28965 cache_miss=    7974 cache_ref=     21034 items=         1 avg_time=   2800425 ns]
find_tweet<rapidjson_insitu>/manual_time                 1790225 ns      1854893 ns          385          27.141k           384.112M          5.386k        17.486k    5.24953M               8.3126           608.238       3.19297G          13.1761M                    20.8642                     2.50995            608.238    32.5717k   631.515k       336.416M/s   1.69844k   8.50512k   5.40301M         8.55564    558.589/s 3.01806G/s     13.1753M                20.863                2.43851          1        558.589/s [BEST: throughput=  0.38 GB/s doc_throughput=   608 docs/s instructions=    13176075 cycles=     5249530 branch_miss=   27141 cache_miss=    5386 cache_ref=     17486 items=         1 avg_time=   1790225 ns]
