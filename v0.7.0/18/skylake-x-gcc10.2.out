run_benchmark: v0.8.0~20 /home/jkeiser/simdjson_benchmark_results/v0.7.0/18/skylake-gcc10.2.json 
git reset --hard v0.8.0~20
HEAD is now at f29b70c6 Adding GitHub Actions VS - without exceptions. (#1362)
cmake ..
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- git Version: v0.2.1-f29b70c6
-- Version: 0.2.1
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
make[1]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[2]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 72%] Built target benchmark
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 72%] Built target generated-data
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
Scanning dependencies of target simdjson
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 81%] Building CXX object src/CMakeFiles/simdjson.dir/simdjson.cpp.o
[ 81%] Linking CXX shared library ../libsimdjson.so
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 81%] Built target simdjson
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 90%] Built target yyjson
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
Scanning dependencies of target bench_ondemand
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 90%] Building CXX object benchmark/CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o
[100%] Linking CXX executable bench_ondemand
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[100%] Built target bench_ondemand
make[2]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[1]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/18/skylake-gcc10.2.json --benchmark_out_format=json
2021-01-23 05:07:39
Running benchmark/bench_ondemand
Run on (4 X 3200 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 1024 KiB (x4)
  L3 Unified 8448 KiB (x1)
Load Average: 1.00, 1.00, 1.00
***WARNING*** CPU scaling is enabled, the benchmark real time measurements may be noisy and will incur extra overhead.
simdjson::dom implementation:      haswell
simdjson::ondemand implementation: fallback

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                  302675 ns       370517 ns         2309           3.851k           2.10317G               0        33.509k    959.077k              1.51869          3.33036k       3.19407G          2.96251M                    4.69112                     3.08892           333.036k    4.02259k   631.515k       1.94315G/s   0.585968   33.5293k   965.677k         1.52914   3.30387k/s 3.19047G/s     2.96251M               4.69112                3.06781        100       330.387k/s [BEST: throughput=  2.10 GB/s doc_throughput=  3330 docs/s instructions=     2962511 cycles=      959077 branch_miss=    3851 cache_miss=       0 cache_ref=     33509 items=       100 avg_time=    302675 ns]
partial_tweets<simdjson_ondemand>/manual_time            1288558 ns      1342656 ns          543          31.916k           493.292M               0        10.672k    4.08751M              6.47254           781.126       3.19286G          10.6861M                    16.9214                     2.61434           78.1126k    32.3827k   631.515k        467.39M/s    1.34622   10.7573k   4.11011M         6.50833    776.061/s  3.1897G/s     10.6861M               16.9214                2.59996        100       77.6061k/s [BEST: throughput=  0.49 GB/s doc_throughput=   781 docs/s instructions=    10686125 cycles=     4087509 branch_miss=   31916 cache_miss=       0 cache_ref=     10672 items=       100 avg_time=   1288558 ns]
partial_tweets<yyjson>/manual_time                        822791 ns       898658 ns          854          10.012k           1.34644G             279        27.823k    1.49798M              2.37204          2.13208k       3.19381G          2.90844M                     4.6055                     1.94158           213.208k    7.65495k   631.515k       731.972M/s    567.985   23.3901k   1.66884M         2.64259   1.21538k/s 2.02826G/s     2.90885M               4.60614                1.74304        100       121.538k/s [BEST: throughput=  1.35 GB/s doc_throughput=  2132 docs/s instructions=     2908443 cycles=     1497980 branch_miss=   10012 cache_miss=     279 cache_ref=     27823 items=       100 avg_time=    822791 ns]
partial_tweets<yyjson_insitu>/manual_time                 550087 ns       608249 ns         1284           6.873k           1.64539G          1.249k        13.867k    1.21972M              1.93142          2.60547k       3.17795G          2.90805M                    4.60487                     2.38419           260.547k    7.41384k   631.515k       1094.84M/s    69.6379   8.81743k   1.35895M         2.15189   1.81789k/s 2.47043G/s     2.90831M               4.60529                2.14011        100       181.789k/s [BEST: throughput=  1.65 GB/s doc_throughput=  2605 docs/s instructions=     2908046 cycles=     1219722 branch_miss=    6873 cache_miss=    1249 cache_ref=     13867 items=       100 avg_time=    550087 ns]
partial_tweets<rapidjson>/manual_time                    1940764 ns      2002081 ns          361          26.213k           379.039M          9.663k        22.662k    5.31967M              8.42366           600.206        3.1929G          13.4093M                    21.2335                      2.5207           60.0206k    26.7152k   631.515k       310.321M/s    337.385   11.6188k    5.5048M         8.71681    515.261/s 2.83641G/s     13.4102M                21.235                2.43609        100       51.5261k/s [BEST: throughput=  0.38 GB/s doc_throughput=   600 docs/s instructions=    13409292 cycles=     5319668 branch_miss=   26213 cache_miss=    9663 cache_ref=     22662 items=       100 avg_time=   1940764 ns]
partial_tweets<rapidjson_insitu>/manual_time             1416747 ns      1475973 ns          491          25.227k           512.419M             120        14.429k    3.93492M              6.23092           811.413       3.19285G          9.75479M                    15.4467                     2.47903           81.1413k    28.6935k   631.515k         425.1M/s    174.576   9.48048k   4.12361M         6.52971    705.842/s 2.91062G/s     9.75539M               15.4476                2.36574        100       70.5842k/s [BEST: throughput=  0.51 GB/s doc_throughput=   811 docs/s instructions=     9754792 cycles=     3934920 branch_miss=   25227 cache_miss=     120 cache_ref=     14429 items=       100 avg_time=   1416746 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                  99449675 ns    105397562 ns            7         876.143k             463.2M        6.76189M       6.89565M    316.666M              6.88422           10.0698       3.18877G          983.113M                    21.3726                     3.10458           10.0698M    878.282k   45.9988M       441.106M/s   6.80639M   6.89568M     317.1M         6.89367    10.0553/s 3.18855G/s     983.113M               21.3726                3.10032      1000k       10.0553M/s [BEST: throughput=  0.46 GB/s doc_throughput=    10 docs/s instructions=   983112690 cycles=   316665685 branch_miss=  876143 cache_miss= 6761888 cache_ref=   6895654 items=   1000000 avg_time=  99449674 ns]
large_random<simdjson_ondemand>/manual_time            147905529 ns    153835105 ns            5         2.38423M            311.24M        3.48643M        3.5728M    471.433M              10.2488           6.76626       3.18984G          1.28297G                    27.8915                     2.72143           6.76626M    2.38849M   45.9988M       296.594M/s   3.52186M   3.57299M   471.614M         10.2528    6.76107/s 3.18862G/s     1.28297G               27.8915                2.72039      1000k       6.76107M/s [BEST: throughput=  0.31 GB/s doc_throughput=     6 docs/s instructions=  1282973823 cycles=   471432847 branch_miss= 2384227 cache_miss= 3486428 cache_ref=   3572803 items=   1000000 avg_time= 147905528 ns]
large_random<simdjson_ondemand_unordered>/manual_time  153726696 ns    159562160 ns            5         2.40522M           299.368M        3.52387M       3.57292M    490.114M              10.6549           6.50816       3.18974G          1.28697G                    27.9784                     2.62587           6.50816M    2.40928M   45.9988M       285.363M/s   3.52787M   3.57297M   490.269M         10.6583    6.50505/s 3.18923G/s     1.28697G               27.9784                2.62504      1000k       6.50505M/s [BEST: throughput=  0.30 GB/s doc_throughput=     6 docs/s instructions=  1286973837 cycles=   490113534 branch_miss= 2405225 cache_miss= 3523873 cache_ref=   3572923 items=   1000000 avg_time= 153726696 ns]
large_random<yyjson>/manual_time                       156209019 ns    162084438 ns            4         656.897k           294.629M        4.19924M       4.31592M    358.693M              7.79787           6.40515       2.29748G          944.149M                    20.5255                      2.6322           6.40515M    660.219k   45.9988M       280.828M/s   4.19966M   4.31797M   358.928M           7.803    6.40168/s 2.29774G/s     944.149M               20.5255                2.63047      1000k       6.40168M/s [BEST: throughput=  0.29 GB/s doc_throughput=     6 docs/s instructions=   944149398 cycles=   358692542 branch_miss=  656897 cache_miss= 4199241 cache_ref=   4315916 items=   1000000 avg_time= 156209018 ns]
large_random<yyjson_insitu>/manual_time                130252589 ns    136084659 ns            5         657.017k           353.435M        3.48312M       3.62507M    316.157M              6.87316           7.68358       2.42922G          938.029M                    20.3925                     2.96697           7.68358M    659.436k   45.9988M       336.791M/s   3.48384M   3.60903M    316.37M          6.8778    7.67739/s  2.4289G/s     938.029M               20.3925                2.96497      1000k       7.67739M/s [BEST: throughput=  0.35 GB/s doc_throughput=     7 docs/s instructions=   938028840 cycles=   316157045 branch_miss=  657017 cache_miss= 3483118 cache_ref=   3625075 items=   1000000 avg_time= 130252589 ns]
large_random<rapidjson>/manual_time                    204196104 ns    210081331 ns            4         599.356k           236.584M        4.36322M       4.88787M    551.735M              11.9945           5.14326       2.83771G          1.65612G                    36.0036                     3.00167           5.14326M    599.364k   45.9988M       214.832M/s   4.07096M   4.65739M   558.257M         12.1363    4.89725/s 2.73392G/s     1.65613G               36.0039                2.96662      1000k       4.89725M/s [BEST: throughput=  0.24 GB/s doc_throughput=     5 docs/s instructions=  1656123757 cycles=   551734615 branch_miss=  599356 cache_miss= 4363223 cache_ref=   4887873 items=   1000000 avg_time= 204196103 ns]
large_random<rapidjson_lossless>/manual_time           236963882 ns    242858867 ns            3         650.313k           202.006M        4.36442M       4.88822M    658.508M              14.3158           4.39154       2.89187G          2.00709G                    43.6336                     3.04794           4.39154M    737.945k   45.9988M       185.125M/s    4.1081M   4.68058M   666.222M         14.4835    4.22005/s 2.81149G/s      2.0071G               43.6338                3.01266      1000k       4.22005M/s [BEST: throughput=  0.20 GB/s doc_throughput=     4 docs/s instructions=  2007093187 cycles=   658508066 branch_miss=  650313 cache_miss= 4364417 cache_ref=   4888220 items=   1000000 avg_time= 236963881 ns]
large_random<rapidjson_insitu>/manual_time             186753118 ns    192660396 ns            4         587.942k           259.678M        5.05112M       5.60589M     497.28M              10.8107           5.64532       2.80731G          1.49112G                    32.4165                     2.99855           5.64532M    587.869k   45.9988M       234.898M/s   4.77432M   5.37174M   503.573M         10.9475    5.35466/s 2.69647G/s     1.49113G               32.4168                 2.9611      1000k       5.35466M/s [BEST: throughput=  0.26 GB/s doc_throughput=     5 docs/s instructions=  1491121241 cycles=   497280423 branch_miss=  587942 cache_miss= 5051117 cache_ref=   5605888 items=   1000000 avg_time= 186753117 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                        94692589 ns    112932614 ns            7         463.166k            1.4508G        10.2076M       10.3158M    301.775M              2.19785           10.5663       3.18864G          945.501M                    6.88614                     3.13313           5.53977M    462.753k   137.305M       1.35043G/s   10.2433M   10.3157M   301.931M         2.19898    10.5605/s 3.18853G/s     945.501M               6.88614                3.13152   524.288k       5.53674M/s [BEST: throughput=  1.45 GB/s doc_throughput=    10 docs/s instructions=   945501391 cycles=   301775381 branch_miss=  463166 cache_miss=10207562 cache_ref=  10315778 items=    524288 avg_time=  94692589 ns]
kostya<simdjson_ondemand>/manual_time                  345418134 ns    363753909 ns            2         3.33224M           397.519M        6.44665M        6.4724M    1.10188G              8.02502           2.89515        3.1901G           2.8802G                    20.9767                     2.61391           1.51789M    3.33242M   137.305M       379.089M/s    6.4516M   6.47242M   1.10191G         8.02526    2.89504/s 3.19007G/s      2.8802G               20.9767                2.61383   524.288k       1.51784M/s [BEST: throughput=  0.40 GB/s doc_throughput=     2 docs/s instructions=  2880202964 cycles=  1101875662 branch_miss= 3332238 cache_miss= 6446650 cache_ref=   6472395 items=    524288 avg_time= 345418134 ns]
kostya<yyjson>/manual_time                             256421806 ns    274704312 ns            3          413.08k           535.529M        8.48853M       8.63994M    586.714M              4.27307           3.90028       2.28835G          984.045M                    7.16686                     1.67721           2.04487M    413.521k   137.305M        510.66M/s   8.48754M   8.62789M   586.907M         4.27448    3.89982/s 2.28883G/s     984.045M               7.16686                1.67666   524.288k       2.04463M/s [BEST: throughput=  0.54 GB/s doc_throughput=     3 docs/s instructions=   984045341 cycles=   586714161 branch_miss=  413080 cache_miss= 8488530 cache_ref=   8639938 items=    524288 avg_time= 256421805 ns]
kostya<yyjson_insitu>/manual_time                      179161664 ns    197426652 ns            4         412.969k           766.915M        6.35093M       6.48751M    459.793M               3.3487           5.58548       2.56816G          965.775M                     7.0338                     2.10046            2.9284M    413.436k   137.305M       730.872M/s   6.35064M   6.49091M   460.097M         3.35091    5.58155/s 2.56805G/s     965.775M                7.0338                2.09907   524.288k       2.92634M/s [BEST: throughput=  0.77 GB/s doc_throughput=     5 docs/s instructions=   965775335 cycles=   459792811 branch_miss=  412969 cache_miss= 6350927 cache_ref=   6487510 items=    524288 avg_time= 179161663 ns]
kostya<rapidjson>/manual_time                          288657500 ns    306774017 ns            2         972.997k           481.394M        5.23913M       5.75511M    811.113M              5.90738           3.50602       2.84378G          2.29502G                    16.7148                     2.82948           1.83816M    974.928k   137.305M       453.632M/s   5.11726M   5.64867M   813.694M         5.92618    3.46431/s 2.81889G/s     2.29503G               16.7148                 2.8205   524.288k        1.8163M/s [BEST: throughput=  0.48 GB/s doc_throughput=     3 docs/s instructions=  2295024359 cycles=   811113103 branch_miss=  972997 cache_miss= 5239134 cache_ref=   5755113 items=    524288 avg_time= 288657500 ns]
kostya<rapidjson_lossless>/manual_time                 305078262 ns    323490019 ns            2          965.06k           455.089M        5.23565M       5.73847M    865.672M              6.30474           3.31444       2.86922G          2.49529G                    18.1734                     2.88249           1.73772M    965.088k   137.305M       429.215M/s   5.11818M   5.63175M   867.784M         6.32012    3.27785/s 2.84446G/s      2.4953G               18.1734                2.87548   524.288k       1.71854M/s [BEST: throughput=  0.46 GB/s doc_throughput=     3 docs/s instructions=  2495294327 cycles=   865672182 branch_miss=  965060 cache_miss= 5235651 cache_ref=   5738466 items=    524288 avg_time= 305078261 ns]
kostya<rapidjson_insitu>/manual_time                   270017561 ns    288248202 ns            3         1024.09k           516.981M        7.38261M       7.86584M    750.649M              5.46702            3.7652       2.82635G          2.03014G                    14.7856                     2.70452           1.97405M    1029.67k   137.305M       484.947M/s   7.21956M   7.72213M   753.503M          5.4878    3.70346/s 2.79057G/s     2.03014G               14.7857                2.69428   524.288k       1.94168M/s [BEST: throughput=  0.52 GB/s doc_throughput=     3 docs/s instructions=  2030142749 cycles=   750649132 branch_miss= 1024087 cache_miss= 7382614 cache_ref=   7865844 items=    524288 avg_time= 270017561 ns]
distinct_user_id<simdjson_dom>/manual_time                297189 ns       372576 ns         2353           4.103k           2.14269G               4        34.018k    941.397k               1.4907          3.39294k        3.1941G          2.90344M                    4.59757                     3.08418           390.188k    4.24223k   631.515k       1.97902G/s     8.1326   33.8528k   948.192k         1.50146   3.36486k/s 3.19054G/s     2.90344M               4.59757                3.06208        115       386.959k/s [BEST: throughput=  2.14 GB/s doc_throughput=  3392 docs/s instructions=     2903436 cycles=      941397 branch_miss=    4103 cache_miss=       4 cache_ref=     34018 items=       115 avg_time=    297188 ns]
distinct_user_id<simdjson_ondemand>/manual_time          1275681 ns      1335266 ns          548          31.393k           497.738M               0         9.267k    4.05097M              6.41469           788.166       3.19284G          10.3431M                    16.3783                     2.55324            90.639k    31.9694k   631.515k       472.108M/s   0.344891   9.54973k   4.06921M         6.44357    783.895/s 3.18983G/s     10.3431M               16.3783                 2.5418        115       90.1479k/s [BEST: throughput=  0.50 GB/s doc_throughput=   788 docs/s instructions=    10343117 cycles=     4050974 branch_miss=   31393 cache_miss=       0 cache_ref=      9267 items=       115 avg_time=   1275681 ns]
distinct_user_id<yyjson>/manual_time                      820219 ns       904953 ns         1024           9.886k            1.3618G             242        27.718k    1.48121M              2.34549           2.1564k       3.19409G           2.8749M                    4.55239                     1.94091           247.986k    7.80334k   631.515k       734.267M/s     451.81   23.3872k   1.66183M         2.63149   1.21919k/s 2.02608G/s     2.87559M               4.55347                1.73038        115       140.206k/s [BEST: throughput=  1.36 GB/s doc_throughput=  2156 docs/s instructions=     2874900 cycles=     1481215 branch_miss=    9886 cache_miss=     242 cache_ref=     27718 items=       115 avg_time=    820218 ns]
distinct_user_id<yyjson_insitu>/manual_time               548668 ns       615847 ns         1288           7.277k           1.64791G          1.233k        13.617k    1.21878M              1.92992          2.60946k       3.18035G          2.87489M                    4.55237                     2.35883           300.088k    7.59748k   631.515k       1097.68M/s    72.3416   8.98129k   1.35491M         2.14549    1.8226k/s 2.46945G/s     2.87515M               4.55278                2.12203        115       209.599k/s [BEST: throughput=  1.65 GB/s doc_throughput=  2609 docs/s instructions=     2874888 cycles=     1218775 branch_miss=    7277 cache_miss=    1233 cache_ref=     13617 items=       115 avg_time=    548667 ns]
distinct_user_id<rapidjson>/manual_time                  1914240 ns      1982691 ns          366          26.735k           381.534M             693        22.736k    5.28473M              8.36834           604.157       3.19281G          13.3492M                    21.1384                     2.52599           69.4781k    26.6825k   631.515k       314.621M/s   1.24073k   12.4502k   5.46934M         8.66067      522.4/s 2.85719G/s     13.3499M               21.1395                2.44086        115       60.0761k/s [BEST: throughput=  0.38 GB/s doc_throughput=   604 docs/s instructions=    13349202 cycles=     5284735 branch_miss=   26735 cache_miss=     693 cache_ref=     22736 items=       115 avg_time=   1914240 ns]
distinct_user_id<rapidjson_insitu>/manual_time           1380911 ns      1447968 ns          534          25.101k           514.733M             164        14.877k    3.91733M              6.20307           815.076       3.19292G          9.70537M                    15.3684                     2.47755           93.7338k    27.6302k   631.515k       436.132M/s   1.36532k     11.26k   4.07648M         6.45509     724.16/s 2.95203G/s     9.70568M               15.3689                 2.3809        115       83.2784k/s [BEST: throughput=  0.51 GB/s doc_throughput=   815 docs/s instructions=     9705369 cycles=     3917329 branch_miss=   25101 cache_miss=     164 cache_ref=     14877 items=       115 avg_time=   1380910 ns]
find_tweet<simdjson_dom>/manual_time                      283092 ns       353427 ns         2473           3.778k           2.24719G               2         30.02k    897.612k              1.42136          3.55841k       3.19408G           2.8224M                    4.46925                     3.14434           3.55841k    3.91263k   631.515k       2.07757G/s    1.67327     30.01k    903.31k         1.43039   3.53242k/s 3.19087G/s      2.8224M               4.46925                 3.1245          1       3.53242k/s [BEST: throughput=  2.25 GB/s doc_throughput=  3558 docs/s instructions=     2822396 cycles=      897612 branch_miss=    3778 cache_miss=       2 cache_ref=     30020 items=         1 avg_time=    283091 ns]
find_tweet<simdjson_ondemand>/manual_time                1198057 ns      1258373 ns          584          30.995k            529.76M              23         7.861k    3.80606M              6.02687           838.872       3.19279G          9.73048M                    15.4081                     2.55658            838.872    31.4113k   631.515k       502.697M/s    26.5205    7.9919k   3.82157M         6.05143    834.685/s  3.1898G/s     9.73048M               15.4081                 2.5462          1        834.685/s [BEST: throughput=  0.53 GB/s doc_throughput=   838 docs/s instructions=     9730477 cycles=     3806057 branch_miss=   30995 cache_miss=      23 cache_ref=      7861 items=         1 avg_time=   1198057 ns]
find_tweet<yyjson>/manual_time                            804123 ns       884242 ns          924           9.589k           1.38479G             243          27.3k     1.4564M               2.3062           2.1928k        3.1936G          2.82414M                    4.47201                     1.93912            2.1928k     7.5004k   631.515k       748.965M/s    340.697   19.4572k   1.61188M         2.55241   1.24359k/s 2.00452G/s     2.82483M                4.4731                 1.7525          1       1.24359k/s [BEST: throughput=  1.38 GB/s doc_throughput=  2192 docs/s instructions=     2824141 cycles=     1456402 branch_miss=    9589 cache_miss=     243 cache_ref=     27300 items=         1 avg_time=    804122 ns]
find_tweet<yyjson_insitu>/manual_time                     534703 ns       593050 ns         1322           6.744k           1.69811G             982        12.961k    1.18217M              1.87197          2.68895k       3.17881G          2.82382M                     4.4715                     2.38867           2.68895k    7.32028k   631.515k       1126.34M/s    7.70121    5.1346k   1.31061M         2.07535    1.8702k/s 2.45111G/s     2.82408M               4.47192                2.15478          1        1.8702k/s [BEST: throughput=  1.70 GB/s doc_throughput=  2688 docs/s instructions=     2823820 cycles=     1182174 branch_miss=    6744 cache_miss=     982 cache_ref=     12961 items=         1 avg_time=    534702 ns]
find_tweet<rapidjson>/manual_time                        1900882 ns      1963255 ns          369          26.273k           384.017M         11.968k        20.856k    5.25056M              8.31423           608.088        3.1928G          13.2808M                    21.0301                     2.52941            608.088    26.5293k   631.515k       316.832M/s    1051.41   9.20647k   5.42621M         8.59237    526.072/s 2.85457G/s     13.2817M               21.0315                2.44769          1        526.072/s [BEST: throughput=  0.38 GB/s doc_throughput=   608 docs/s instructions=    13280813 cycles=     5250560 branch_miss=   26273 cache_miss=   11968 cache_ref=     20856 items=         1 avg_time=   1900882 ns]
find_tweet<rapidjson_insitu>/manual_time                 1371524 ns      1432931 ns          544          25.245k           517.574M              26        14.011k    3.89579M              6.16896           819.575       3.19289G          9.64695M                    15.2759                     2.47625            819.575    27.9195k   631.515k       439.117M/s    1.2005k   7.95822k   4.04611M           6.407    729.116/s 2.95009G/s     9.64727M               15.2764                2.38433          1        729.116/s [BEST: throughput=  0.52 GB/s doc_throughput=   819 docs/s instructions=     9646946 cycles=     3895791 branch_miss=   25245 cache_miss=      26 cache_ref=     14011 items=         1 avg_time=   1371523 ns]
