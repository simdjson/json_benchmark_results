run_benchmark: v0.8.0~20 /home/jkeiser/simdjson_benchmark_results/v0.7.0/18/skylake-gcc10.2-native.json -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native
git reset --hard v0.8.0~20
HEAD is now at f29b70c6 Adding GitHub Actions VS - without exceptions. (#1362)
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- git Version: v0.2.1-f29b70c6
-- Version: 0.2.1
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 11
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
make[3]: Nothing to be done for '_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build'.
[ 72%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
make[3]: Nothing to be done for 'jsonexamples/generated/CMakeFiles/generated-data.dir/build'.
[ 72%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/g++-10  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/src  -march=native -O3 -DNDEBUG -fPIC   -pthread -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/g++-10 -fPIC -march=native -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.6 -o ../libsimdjson.so.6.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.6.0.0 ../libsimdjson.so.6 ../libsimdjson.so
[ 81%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
make[3]: Nothing to be done for 'dependencies/CMakeFiles/yyjson.dir/build'.
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/g++-10  -DRAPIDJSON_HAS_STDSTRING -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_COMPETITION_RAPIDJSON -DSIMDJSON_COMPETITION_YYJSON -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/rapidjson/include  -march=native -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/g++-10  -march=native -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.6.0.0 ../_deps/google_benchmarks/src/libbenchmark.a ../dependencies/libyyjson.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/18/skylake-gcc10.2-native.json --benchmark_out_format=json
2021-01-24 21:18:56
Running benchmark/bench_ondemand
Run on (4 X 4000 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 256 KiB (x4)
  L3 Unified 8192 KiB (x1)
Load Average: 1.00, 1.00, 1.00
simdjson::dom implementation:      haswell
simdjson::ondemand implementation: haswell

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                  256849 ns       285106 ns         2718           3.742k           2.47314G               0        87.509k    942.901k              1.49308          3.91621k        3.6926G          2.91501M                     4.6159                     3.09154           391.621k    3.91074k   631.515k       2.28985G/s    2.31273   87.4502k    947.96k         1.50109   3.89334k/s 3.69073G/s     2.91501M                4.6159                3.07504        100       389.334k/s [BEST: throughput=  2.47 GB/s doc_throughput=  3916 docs/s instructions=     2915013 cycles=      942901 branch_miss=    3742 cache_miss=       0 cache_ref=     87509 items=       100 avg_time=    256848 ns]
partial_tweets<simdjson_ondemand>/manual_time             173486 ns       201506 ns         4032           1.546k           3.66314G               0        54.676k    636.748k              1.00829          5.80056k        3.6935G          2.14384M                    3.39475                     3.36685           580.056k    1.67184k   631.515k       3.39015G/s  0.0654762   54.5022k   640.403k         1.01407   5.76415k/s 3.69138G/s     2.14384M               3.39475                3.34764        100       576.415k/s [BEST: throughput=  3.66 GB/s doc_throughput=  5800 docs/s instructions=     2143837 cycles=      636748 branch_miss=    1546 cache_miss=       0 cache_ref=     54676 items=       100 avg_time=    173486 ns]
partial_tweets<yyjson>/manual_time                        698169 ns       728440 ns          999          10.056k           1.52947G             355        73.667k    1.52459M              2.41418          2.42191k       3.69242G          2.90835M                    4.60536                     1.90763           242.191k    7.51825k   631.515k       862.627M/s    1050.19   49.1922k   1.73543M         2.74805   1.43232k/s 2.48569G/s     2.90884M               4.60613                1.67615        100       143.232k/s [BEST: throughput=  1.53 GB/s doc_throughput=  2421 docs/s instructions=     2908354 cycles=     1524591 branch_miss=   10056 cache_miss=     355 cache_ref=     73667 items=       100 avg_time=    698169 ns]
partial_tweets<yyjson_insitu>/manual_time                 490145 ns       519016 ns         1429           6.788k           1.72213G             658        45.812k    1.35063M              2.13872          2.72699k       3.68316G          2.90804M                    4.60486                     2.15309           272.699k    7.34691k   631.515k       1.19994G/s    140.896   31.8885k   1.46495M         2.31975   2.04021k/s 2.98882G/s      2.9083M               4.60528                1.98525        100       204.021k/s [BEST: throughput=  1.72 GB/s doc_throughput=  2726 docs/s instructions=     2908038 cycles=     1350633 branch_miss=    6788 cache_miss=     658 cache_ref=     45812 items=       100 avg_time=    490145 ns]
partial_tweets<rapidjson>/manual_time                    1626053 ns      1654784 ns          430          27.544k           444.171M          16.26k        53.258k    5.24857M              8.31109           703.343       3.69155G          13.1244M                    20.7823                     2.50056           70.3343k    27.6242k   631.515k       370.381M/s    509.795   32.3242k   5.41099M         8.56827    614.986/s 3.32768G/s     13.1253M               20.7838                2.42567        100       61.4986k/s [BEST: throughput=  0.44 GB/s doc_throughput=   703 docs/s instructions=    13124361 cycles=     5248575 branch_miss=   27544 cache_miss=   16260 cache_ref=     53258 items=       100 avg_time=   1626053 ns]
partial_tweets<rapidjson_insitu>/manual_time             1164575 ns      1193104 ns          603          23.395k           604.485M             155        42.799k    3.85685M              6.10731           957.198       3.69177G          9.82464M                    15.5573                     2.54732           95.7198k    23.5586k   631.515k        517.15M/s    242.411   33.4933k   3.95004M         6.25486    858.683/s 3.39183G/s     9.82504M               15.5579                2.48733        100       85.8683k/s [BEST: throughput=  0.60 GB/s doc_throughput=   957 docs/s instructions=     9824639 cycles=     3856855 branch_miss=   23395 cache_miss=     155 cache_ref=     42799 items=       100 avg_time=   1164574 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                  92201098 ns     95587945 ns            8         876.178k           499.709M        10.9672M       15.2852M    339.584M              7.38246           10.8635       3.68909G          981.675M                    21.3413                     2.89081           10.8635M    876.725k   45.9988M       475.784M/s   11.0049M   15.2854M   340.128M         7.39428    10.8459/s 3.68898G/s     981.675M               21.3413                 2.8862      1000k       10.8459M/s [BEST: throughput=  0.50 GB/s doc_throughput=    10 docs/s instructions=   981674935 cycles=   339584255 branch_miss=  876178 cache_miss=10967197 cache_ref=  15285163 items=   1000000 avg_time=  92201097 ns]
large_random<simdjson_ondemand>/manual_time             58559627 ns     61926303 ns           12          869.41k           786.498M        5.72287M       7.91464M    215.746M              4.69025           17.0982       3.68887G          643.053M                    13.9798                      2.9806           17.0982M    868.368k   45.9988M       749.114M/s   5.73238M   7.91347M   216.025M         4.69633    17.0766/s 3.68898G/s     643.053M               13.9798                2.97675      1000k       17.0766M/s [BEST: throughput=  0.79 GB/s doc_throughput=    17 docs/s instructions=   643052686 cycles=   215745791 branch_miss=  869410 cache_miss= 5722873 cache_ref=   7914640 items=   1000000 avg_time=  58559627 ns]
large_random<simdjson_ondemand_unordered>/manual_time   62121954 ns     65476256 ns           11         865.469k           741.107M        5.70554M       7.90376M    228.969M              4.97773           16.1115       3.68903G          647.053M                    14.0667                     2.82593           16.1115M    865.695k   45.9988M       706.157M/s   5.72511M   7.90769M   229.173M         4.98216    16.0974/s 3.68908G/s     647.053M               14.0667                2.82342      1000k       16.0974M/s [BEST: throughput=  0.74 GB/s doc_throughput=    16 docs/s instructions=   647052689 cycles=   228969429 branch_miss=  865469 cache_miss= 5705545 cache_ref=   7903764 items=   1000000 avg_time=  62121953 ns]
large_random<yyjson>/manual_time                       126607456 ns    130031614 ns            6         661.688k           363.507M        5.96095M       9.15135M    347.538M              7.55538           7.90253       2.74643G           942.15M                    20.4821                     2.71092           7.90253M    663.186k   45.9988M       346.487M/s   5.95414M   9.12483M    347.56M         7.55586    7.89843/s 2.74518G/s      942.15M               20.4821                2.71075      1000k       7.89843M/s [BEST: throughput=  0.36 GB/s doc_throughput=     7 docs/s instructions=   942149594 cycles=   347538418 branch_miss=  661688 cache_miss= 5960954 cache_ref=   9151352 items=   1000000 avg_time= 126607456 ns]
large_random<yyjson_insitu>/manual_time                109012513 ns    112433550 ns            6         661.779k           422.267M        5.06907M       7.75822M    316.318M              6.87667           9.17996       2.90379G          936.029M                     20.349                     2.95914           9.17996M    662.122k   45.9988M       402.411M/s   5.05712M   7.73581M   316.489M         6.88038    9.17326/s 2.90323G/s     936.029M                20.349                2.95754      1000k       9.17326M/s [BEST: throughput=  0.42 GB/s doc_throughput=     9 docs/s instructions=   936028831 cycles=   316318320 branch_miss=  661779 cache_miss= 5069068 cache_ref=   7758224 items=   1000000 avg_time= 109012513 ns]
large_random<rapidjson>/manual_time                    178192376 ns    181607417 ns            4         597.078k           269.053M        7.09117M        10.705M    573.042M              12.4578           5.84913       3.35179G          1.67014G                    36.3083                     2.91451           5.84913M    597.922k   45.9988M       246.183M/s   6.48491M    9.9392M   578.695M         12.5807    5.61191/s 3.24759G/s     1.67015G               36.3086                2.88606      1000k       5.61191M/s [BEST: throughput=  0.27 GB/s doc_throughput=     5 docs/s instructions=  1670139173 cycles=   573041987 branch_miss=  597078 cache_miss= 7091165 cache_ref=  10705027 items=   1000000 avg_time= 178192375 ns]
large_random<rapidjson_lossless>/manual_time           202301828 ns    205716833 ns            4         585.664k           235.397M        7.04564M       10.6965M    663.212M               14.418           5.11746       3.39396G          2.03011G                     44.134                     3.06102           5.11746M    587.578k   45.9988M       216.844M/s   6.47057M   9.94704M   667.622M         14.5139    4.94311/s 3.30013G/s     2.03012G               44.1342                3.04082      1000k       4.94311M/s [BEST: throughput=  0.24 GB/s doc_throughput=     5 docs/s instructions=  2030108824 cycles=   663212423 branch_miss=  585664 cache_miss= 7045640 cache_ref=  10696511 items=   1000000 avg_time= 202301828 ns]
large_random<rapidjson_insitu>/manual_time             161285370 ns    164702121 ns            5         609.545k           299.869M        8.12491M       12.2496M     508.23M              11.0488           6.51907       3.31319G          1.50214G                    32.6561                     2.95563           6.51907M    614.576k   45.9988M       271.989M/s   7.53702M   11.4333M   514.929M         11.1944    6.20019/s 3.19266G/s     1.50215G               32.6563                 2.9172      1000k       6.20019M/s [BEST: throughput=  0.30 GB/s doc_throughput=     6 docs/s instructions=  1502139025 cycles=   508230254 branch_miss=  609545 cache_miss= 8124910 cache_ref=  12249554 items=   1000000 avg_time= 161285370 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                        85943416 ns     96265148 ns            8         439.771k           1.59943G        15.9144M       22.2339M    316.702M              2.30656           11.6488       3.68919G          938.041M                     6.8318                      2.9619           6.10731M    439.725k   137.305M        1.4879G/s   15.9396M   22.2215M   317.045M         2.30906    11.6356/s   3.689G/s     938.041M                6.8318                 2.9587   524.288k       6.10039M/s [BEST: throughput=  1.60 GB/s doc_throughput=    11 docs/s instructions=   938040600 cycles=   316701986 branch_miss=  439771 cache_miss=15914420 cache_ref=  22233903 items=    524288 avg_time=  85943415 ns]
kostya<simdjson_ondemand>/manual_time                   59091609 ns     69377130 ns           12         453.629k           2.32737G         10.216M       14.0196M    217.638M              1.58507           16.9504       3.68904G          676.093M                    4.92402                      3.1065           8.88687M    453.654k   137.305M       2.16402G/s   10.2349M   13.9588M   217.991M         1.58764    16.9229/s 3.68903G/s     676.093M               4.92402                3.10148   524.288k       8.87246M/s [BEST: throughput=  2.33 GB/s doc_throughput=    16 docs/s instructions=   676092755 cycles=   217638076 branch_miss=  453629 cache_miss=10216044 cache_ref=  14019599 items=    524288 avg_time=  59091608 ns]
kostya<yyjson>/manual_time                             207213044 ns    217597975 ns            3         415.374k           663.263M        11.5385M        16.429M    566.894M              4.12872           4.83058       2.73843G          984.045M                    7.16686                     1.73585           2.53262M    413.741k   137.305M       631.931M/s   11.5365M   16.4194M   566.888M         4.12868    4.82595/s 2.73577G/s     984.045M               7.16686                1.73587   524.288k       2.53019M/s [BEST: throughput=  0.66 GB/s doc_throughput=     4 docs/s instructions=   984045128 cycles=   566893623 branch_miss=  415374 cache_miss=11538535 cache_ref=  16428958 items=    524288 avg_time= 207213044 ns]
kostya<yyjson_insitu>/manual_time                      153957613 ns    164319979 ns            5         411.266k           892.141M        8.90124M       12.4142M    473.089M              3.44553           6.49751        3.0739G          965.776M                     7.0338                     2.04142           3.40657M    412.052k   137.305M       850.521M/s   8.90207M   12.3915M   473.076M         3.44544    6.49529/s 3.07277G/s     965.776M                7.0338                2.04148   524.288k        3.4054M/s [BEST: throughput=  0.89 GB/s doc_throughput=     6 docs/s instructions=   965775557 cycles=   473089151 branch_miss=  411266 cache_miss= 8901244 cache_ref=  12414206 items=    524288 avg_time= 153957612 ns]
kostya<rapidjson>/manual_time                          252248223 ns    262630131 ns            3         1.44572M           546.258M        8.23451M       12.0886M    846.111M              6.16227           3.97843       3.36619G          2.29617G                    16.7231                     2.71379           2.08584M     1.1644M   137.305M       519.109M/s    7.9347M   11.7387M   840.012M         6.11786    3.96435/s  3.3301G/s     2.29617G               16.7231                2.73349   524.288k       2.07846M/s [BEST: throughput=  0.55 GB/s doc_throughput=     3 docs/s instructions=  2296165371 cycles=   846110541 branch_miss= 1445717 cache_miss= 8234507 cache_ref=  12088583 items=    524288 avg_time= 252248222 ns]
kostya<rapidjson_lossless>/manual_time                 273069605 ns    283462091 ns            3          947.13k           508.828M        8.24428M       11.9724M    914.469M              6.66013           3.70582       3.38886G          2.50115G                     18.216                     2.73509           1.94292M    946.809k   137.305M       479.527M/s   7.93652M   11.6736M   916.906M         6.67787    3.66207/s 3.35777G/s     2.50116G               18.2161                2.72782   524.288k       1.91998M/s [BEST: throughput=  0.51 GB/s doc_throughput=     3 docs/s instructions=  2501154081 cycles=   914468974 branch_miss=  947130 cache_miss= 8244275 cache_ref=  11972427 items=    524288 avg_time= 273069605 ns]
kostya<rapidjson_insitu>/manual_time                   236487874 ns    246845535 ns            3         979.355k           588.795M        11.3342M       15.7156M    779.339M              5.67597           4.28822       3.34198G          2.04643G                    14.9043                     2.62586           2.24826M     977.03k   137.305M       553.704M/s   11.0382M   15.3605M   782.046M         5.69569    4.22855/s 3.30692G/s     2.04643G               14.9043                2.61677   524.288k       2.21698M/s [BEST: throughput=  0.59 GB/s doc_throughput=     4 docs/s instructions=  2046430344 cycles=   779338546 branch_miss=  979355 cache_miss=11334190 cache_ref=  15715588 items=    524288 avg_time= 236487874 ns]
distinct_user_id<simdjson_dom>/manual_time                254152 ns       284666 ns         2754           3.874k           2.50568G               0        88.372k     930.64k              1.47366          3.96773k       3.69253G          2.85594M                    4.52236                     3.06879           456.289k    4.07325k   631.515k       2.31414G/s   0.283588   88.4986k   937.996k         1.48531   3.93465k/s 3.69069G/s     2.85594M               4.52236                3.04472        115       452.485k/s [BEST: throughput=  2.51 GB/s doc_throughput=  3967 docs/s instructions=     2855937 cycles=      930640 branch_miss=    3874 cache_miss=       0 cache_ref=     88372 items=       115 avg_time=    254151 ns]
distinct_user_id<simdjson_ondemand>/manual_time           161006 ns       190527 ns         4342           1.462k           3.95312G               0        52.907k    589.962k             0.934201          6.25974k       3.69301G          2.09786M                    3.32194                     3.55592            719.87k    1.63039k   631.515k       3.65294G/s  0.0670198   52.9233k   594.284k        0.941045   6.21095k/s 3.69107G/s     2.09786M               3.32194                3.53006        115        714.26k/s [BEST: throughput=  3.95 GB/s doc_throughput=  6259 docs/s instructions=     2097858 cycles=      589962 branch_miss=    1462 cache_miss=       0 cache_ref=     52907 items=       115 avg_time=    161005 ns]
distinct_user_id<yyjson>/manual_time                      686266 ns       720117 ns         1019            9.93k           1.54667G             390        72.301k    1.50749M               2.3871          2.44915k       3.69207G          2.87489M                    4.55237                     1.90707           281.652k    7.68066k   631.515k       877.589M/s    1092.21   47.8532k   1.72841M         2.73693   1.45716k/s 2.51858G/s     2.87537M               4.55313                1.66359        115       167.574k/s [BEST: throughput=  1.55 GB/s doc_throughput=  2449 docs/s instructions=     2874892 cycles=     1507492 branch_miss=    9930 cache_miss=     390 cache_ref=     72301 items=       115 avg_time=    686265 ns]
distinct_user_id<yyjson_insitu>/manual_time               484226 ns       516860 ns         1445           7.546k           1.71374G              21        43.829k     1.3607M              2.15466          2.71369k       3.69251G          2.87457M                    4.55186                     2.11257           312.074k    7.48242k   631.515k       1.21461G/s    58.7647   30.4295k   1.45533M          2.3045   2.06515k/s 3.00548G/s     2.87483M               4.55228                1.97538        115       237.493k/s [BEST: throughput=  1.71 GB/s doc_throughput=  2713 docs/s instructions=     2874570 cycles=     1360697 branch_miss=    7546 cache_miss=      21 cache_ref=     43829 items=       115 avg_time=    484225 ns]
distinct_user_id<rapidjson>/manual_time                  1601112 ns      1631782 ns          438          27.499k           446.562M          9.047k        52.728k    5.22052M              8.26667           707.129       3.69158G          13.0657M                    20.6895                     2.50276           81.3198k    27.5117k   631.515k       376.151M/s   1.91522k   34.0211k   5.37818M         8.51632    624.566/s 3.35903G/s     13.0663M               20.6905                2.42951        115       71.8251k/s [BEST: throughput=  0.45 GB/s doc_throughput=   707 docs/s instructions=    13065724 cycles=     5220525 branch_miss=   27499 cache_miss=    9047 cache_ref=     52728 items=       115 avg_time=   1601111 ns]
distinct_user_id<rapidjson_insitu>/manual_time           1141762 ns      1171652 ns          649          23.285k           607.305M              17        42.228k    3.83887M              6.07882           961.663        3.6917G           9.7756M                    15.4796                     2.54648           110.591k    23.5916k   631.515k       527.483M/s   1.98362k    34.433k    3.9259M         6.21664    875.839/s 3.43846G/s     9.77615M               15.4805                2.49017        115       100.722k/s [BEST: throughput=  0.61 GB/s doc_throughput=   961 docs/s instructions=     9775604 cycles=     3838868 branch_miss=   23285 cache_miss=      17 cache_ref=     42228 items=       115 avg_time=   1141761 ns]
find_tweet<simdjson_dom>/manual_time                      242007 ns       270644 ns         2892           3.574k           2.62547G               0        78.062k    888.131k              1.40635          4.15742k       3.69233G           2.7749M                    4.39404                     3.12443           4.15742k    3.71262k   631.515k       2.43028G/s   0.272822   78.2192k   893.161k         1.41431   4.13212k/s 3.69065G/s      2.7749M               4.39404                3.10683          1       4.13212k/s [BEST: throughput=  2.63 GB/s doc_throughput=  4157 docs/s instructions=     2774900 cycles=      888131 branch_miss=    3574 cache_miss=       0 cache_ref=     78062 items=         1 avg_time=    242006 ns]
find_tweet<simdjson_ondemand>/manual_time                 114157 ns       142202 ns         6125              719           5.55212G               0        30.602k    420.206k             0.665394          8.79175k       3.69435G          1.47888M                     2.3418                     3.51941           8.79175k     755.957   631.515k       5.15206G/s  0.0737959   30.5551k   421.467k         0.66739   8.75986k/s 3.69199G/s     1.47888M                2.3418                3.50888          1       8.75986k/s [BEST: throughput=  5.55 GB/s doc_throughput=  8791 docs/s instructions=     1478879 cycles=      420206 branch_miss=     719 cache_miss=       0 cache_ref=     30602 items=         1 avg_time=    114157 ns]
find_tweet<yyjson>/manual_time                            675231 ns       705719 ns         1096           9.349k           1.58928G             738        64.322k    1.46719M              2.32329          2.51662k       3.69236G          2.82414M                      4.472                     1.92485           2.51662k    7.40356k   631.515k       891.932M/s    1078.04   39.4085k    1.6931M         2.68101   1.48098k/s 2.50743G/s     2.82482M               4.47309                1.66844          1       1.48098k/s [BEST: throughput=  1.59 GB/s doc_throughput=  2516 docs/s instructions=     2824135 cycles=     1467194 branch_miss=    9349 cache_miss=     738 cache_ref=     64322 items=         1 avg_time=    675230 ns]
find_tweet<yyjson_insitu>/manual_time                     474602 ns       504523 ns         1476           7.118k           1.76054G              15         35.61k    1.32438M              2.09715           2.7878k        3.6921G          2.82402M                    4.47182                     2.13233            2.7878k    7.23463k   631.515k       1.23924G/s    15.1064   22.0829k   1.42037M         2.24915   2.10703k/s 2.99277G/s     2.82428M               4.47224                1.98841          1       2.10703k/s [BEST: throughput=  1.76 GB/s doc_throughput=  2787 docs/s instructions=     2824020 cycles=     1324380 branch_miss=    7118 cache_miss=      15 cache_ref=     35610 items=         1 avg_time=    474601 ns]
find_tweet<rapidjson>/manual_time                        1592084 ns      1620695 ns          441          27.389k           450.437M             232        45.113k    5.17564M              8.19559           713.264        3.6916G          12.9969M                    20.5804                     2.51116            713.264    27.3592k   631.515k       378.284M/s   1.54814k   26.9551k   5.34575M         8.46497    628.107/s 3.35771G/s     12.9978M                20.582                2.43143          1        628.107/s [BEST: throughput=  0.45 GB/s doc_throughput=   713 docs/s instructions=    12996850 cycles=     5175640 branch_miss=   27389 cache_miss=     232 cache_ref=     45113 items=         1 avg_time=   1592084 ns]
find_tweet<rapidjson_insitu>/manual_time                 1133021 ns      1162425 ns          658          23.258k           611.636M           4.45k        34.614k    3.81163M              6.03569           968.522       3.69165G          9.71829M                    15.3889                     2.54964            968.522    23.4671k   631.515k       531.552M/s   1.80358k   25.8678k   3.89406M         6.16623    882.596/s 3.43689G/s     9.71853M               15.3892                2.49573          1        882.596/s [BEST: throughput=  0.61 GB/s doc_throughput=   968 docs/s instructions=     9718295 cycles=     3811630 branch_miss=   23258 cache_miss=    4450 cache_ref=     34614 items=         1 avg_time=   1133021 ns]
