run_benchmark: v0.8.0~20 /home/jkeiser/simdjson_benchmark_results/v0.7.0/18/skylake-gcc10.2.json 
git reset --hard v0.8.0~20
HEAD is now at f29b70c6 Adding GitHub Actions VS - without exceptions. (#1362)
cmake ..
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- git Version: v0.2.1-f29b70c6
-- Version: 0.2.1
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
make[1]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[2]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 72%] Built target benchmark
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 72%] Built target generated-data
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
Scanning dependencies of target simdjson
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 81%] Building CXX object src/CMakeFiles/simdjson.dir/simdjson.cpp.o
[ 81%] Linking CXX shared library ../libsimdjson.so
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 81%] Built target simdjson
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 90%] Built target yyjson
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
Scanning dependencies of target bench_ondemand
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 90%] Building CXX object benchmark/CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o
[100%] Linking CXX executable bench_ondemand
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[100%] Built target bench_ondemand
make[2]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[1]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/18/skylake-gcc10.2.json --benchmark_out_format=json
2021-01-23 04:50:05
Running benchmark/bench_ondemand
Run on (4 X 4000 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 256 KiB (x4)
  L3 Unified 8192 KiB (x1)
Load Average: 1.00, 1.00, 0.98
simdjson::dom implementation:      haswell
simdjson::ondemand implementation: fallback

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                  261654 ns       289954 ns         2673           3.785k           2.42804G               0        87.397k    960.402k              1.52079          3.84478k       3.69253G           2.9625M                     4.6911                     3.08465           384.478k    3.94988k   631.515k        2.2478G/s   0.765806   87.5215k   965.701k         1.52918   3.82185k/s 3.69076G/s      2.9625M                4.6911                3.06772        100       382.185k/s [BEST: throughput=  2.43 GB/s doc_throughput=  3844 docs/s instructions=     2962503 cycles=      960402 branch_miss=    3785 cache_miss=       0 cache_ref=     87397 items=       100 avg_time=    261653 ns]
partial_tweets<simdjson_ondemand>/manual_time            1121019 ns      1149271 ns          625          32.574k           566.773M               6        55.862k    4.11329M              6.51336           897.481        3.6916G          10.6861M                    16.9214                     2.59795           89.7481k    33.2264k   631.515k       537.243M/s     10.184   55.8631k   4.13636M         6.54991    892.045/s 3.68983G/s     10.6861M               16.9214                2.58346        100       89.2045k/s [BEST: throughput=  0.57 GB/s doc_throughput=   897 docs/s instructions=    10686117 cycles=     4113287 branch_miss=   32574 cache_miss=       6 cache_ref=     55862 items=       100 avg_time=   1121019 ns]
partial_tweets<yyjson>/manual_time                        671060 ns       701961 ns         1047          10.032k           1.66435G             376        74.774k    1.40098M              2.21844          2.63548k       3.69225G          2.90836M                    4.60537                     2.07595           263.548k    7.59541k   631.515k       897.475M/s    894.103   49.2024k   1.61484M         2.55708   1.49018k/s 2.40639G/s     2.90905M               4.60646                1.80145        100       149.018k/s [BEST: throughput=  1.66 GB/s doc_throughput=  2635 docs/s instructions=     2908359 cycles=     1400978 branch_miss=   10032 cache_miss=     376 cache_ref=     74774 items=       100 avg_time=    671060 ns]
partial_tweets<yyjson_insitu>/manual_time                 456923 ns       486050 ns         1531           6.926k            1.8966G             914        45.677k      1.226M              1.94137          3.00326k         3.682G          2.90824M                    4.60519                     2.37214           300.326k    7.35872k   631.515k       1.28718G/s    145.072   31.8506k     1.342M         2.12504   2.18855k/s 2.93703G/s     2.90851M                4.6056                 2.1673        100       218.855k/s [BEST: throughput=  1.90 GB/s doc_throughput=  3003 docs/s instructions=     2908245 cycles=     1226002 branch_miss=    6926 cache_miss=     914 cache_ref=     45677 items=       100 avg_time=    456922 ns]
partial_tweets<rapidjson>/manual_time                    1636478 ns      1665389 ns          425          26.476k           439.917M          1.417k        51.758k    5.29939M              8.39155           696.605       3.69158G          13.4098M                    21.2343                     2.53044           69.6605k    26.4635k   631.515k       368.022M/s    511.108   32.6932k   5.45293M         8.63469    611.068/s 3.33212G/s     13.4106M               21.2356                2.45934        100       61.1068k/s [BEST: throughput=  0.44 GB/s doc_throughput=   696 docs/s instructions=    13409774 cycles=     5299389 branch_miss=   26476 cache_miss=    1417 cache_ref=     51758 items=       100 avg_time=   1636478 ns]
partial_tweets<rapidjson_insitu>/manual_time             1187736 ns      1216254 ns          591          25.146k           589.061M             418        43.466k    3.95783M               6.2672           932.775       3.69177G          9.75487M                    15.4468                      2.4647           93.2775k    25.0756k   631.515k       507.065M/s    229.354   33.3635k   4.04111M         6.39907    841.938/s 3.40236G/s     9.75548M               15.4477                2.41406        100       84.1938k/s [BEST: throughput=  0.59 GB/s doc_throughput=   932 docs/s instructions=     9754872 cycles=     3957831 branch_miss=   25146 cache_miss=     418 cache_ref=     43466 items=       100 avg_time=   1187736 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                  88964242 ns     92350937 ns            8         870.289k           517.839M        10.9194M       15.2045M     327.68M              7.12367           11.2577       3.68891G          983.113M                    21.3726                     3.00022           11.2577M    872.742k   45.9988M       493.095M/s   10.9128M   15.1862M   328.174M         7.13441    11.2405/s 3.68883G/s     983.113M               21.3726                 2.9957      1000k       11.2405M/s [BEST: throughput=  0.52 GB/s doc_throughput=    11 docs/s instructions=   983112680 cycles=   327679899 branch_miss=  870289 cache_miss=10919352 cache_ref=  15204488 items=   1000000 avg_time=  88964241 ns]
large_random<simdjson_ondemand>/manual_time            130629398 ns    134008391 ns            5         2.44935M           352.179M         5.7628M       7.90636M    481.894M              10.4762           7.65627       3.68951G          1.28297G                    27.8915                     2.66236           7.65627M    2.45066M   45.9988M       335.819M/s   5.77077M   7.90675M   481.955M         10.4776    7.65524/s 3.68948G/s     1.28297G               27.8915                2.66202      1000k       7.65524M/s [BEST: throughput=  0.35 GB/s doc_throughput=     7 docs/s instructions=  1282973811 cycles=   481893786 branch_miss= 2449350 cache_miss= 5762804 cache_ref=   7906360 items=   1000000 avg_time= 130629397 ns]
large_random<simdjson_ondemand_unordered>/manual_time  135569435 ns    138945783 ns            5         2.39549M           339.991M        5.72617M       7.90434M    499.178M               10.852            7.3913       3.68958G          1.28697G                    27.9784                     2.57818            7.3913M    2.40881M   45.9988M       323.582M/s   5.76279M   7.90626M   500.178M         10.8737    7.37629/s 3.68946G/s     1.28697G               27.9784                2.57303      1000k       7.37629M/s [BEST: throughput=  0.34 GB/s doc_throughput=     7 docs/s instructions=  1286973824 cycles=   499178270 branch_miss= 2395492 cache_miss= 5726173 cache_ref=   7904343 items=   1000000 avg_time= 135569434 ns]
large_random<yyjson>/manual_time                       127529057 ns    130951670 ns            5         661.898k            361.09M        5.86289M       8.98347M    350.892M              7.62828              7.85        2.7545G          944.149M                    20.5255                     2.69071              7.85M    661.565k   45.9988M       343.983M/s    5.8682M   8.99739M    350.84M         7.62717    7.84135/s 2.75106G/s     944.149M               20.5255                2.69111      1000k       7.84135M/s [BEST: throughput=  0.36 GB/s doc_throughput=     7 docs/s instructions=   944149388 cycles=   350891665 branch_miss=  661898 cache_miss= 5862892 cache_ref=   8983465 items=   1000000 avg_time= 127529056 ns]
large_random<yyjson_insitu>/manual_time                109746714 ns    113167743 ns            6         662.061k           419.407M        4.98641M       7.62012M    319.608M              6.94818           9.11778       2.91411G          938.029M                    20.3925                     2.93494           9.11778M    661.673k   45.9988M       399.719M/s   4.99033M   7.64584M   319.617M         6.94839    9.11189/s 2.91232G/s     938.029M               20.3925                2.93485      1000k       9.11189M/s [BEST: throughput=  0.42 GB/s doc_throughput=     9 docs/s instructions=   938028830 cycles=   319607903 branch_miss=  662061 cache_miss= 4986412 cache_ref=   7620117 items=   1000000 avg_time= 109746713 ns]
large_random<rapidjson>/manual_time                    170763180 ns    174188039 ns            4         592.188k           281.329M        6.98752M       10.6297M     545.56M              11.8603           6.11602       3.33666G          1.65714G                    36.0258                     3.03751           6.11602M    591.832k   45.9988M       256.893M/s   6.43336M   9.90318M   551.429M         11.9879    5.85606/s  3.2292G/s     1.65715G                36.026                3.00519      1000k       5.85606M/s [BEST: throughput=  0.28 GB/s doc_throughput=     6 docs/s instructions=  1657141470 cycles=   545559942 branch_miss=  592188 cache_miss= 6987525 cache_ref=  10629749 items=   1000000 avg_time= 170763180 ns]
large_random<rapidjson_lossless>/manual_time           199650100 ns    203071114 ns            4         602.769k           238.744M        6.97509M       10.6365M    652.942M              14.1948           5.19022       3.38891G          2.00811G                    43.6557                     3.07548           5.19022M    602.543k   45.9988M       219.724M/s   6.40632M   9.91136M   657.798M         14.3003    5.00876/s 3.29476G/s     2.00812G                43.656                3.05279      1000k       5.00876M/s [BEST: throughput=  0.24 GB/s doc_throughput=     5 docs/s instructions=  2008110863 cycles=   652941897 branch_miss=  602769 cache_miss= 6975088 cache_ref=  10636492 items=   1000000 avg_time= 199650100 ns]
large_random<rapidjson_insitu>/manual_time             157689550 ns    161100063 ns            5         588.216k           306.571M        8.05242M       12.1822M    495.759M              10.7776           6.66477       3.30412G          1.49214G                    32.4387                     3.00981           6.66477M    590.577k   45.9988M       278.191M/s    7.4812M   11.4031M   501.698M         10.9068    6.34157/s 3.18156G/s     1.49215G               32.4389                 2.9742      1000k       6.34157M/s [BEST: throughput=  0.31 GB/s doc_throughput=     6 docs/s instructions=  1492138961 cycles=   495758547 branch_miss=  588216 cache_miss= 8052417 cache_ref=  12182157 items=   1000000 avg_time= 157689550 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                        84341319 ns     94658321 ns            8         480.414k           1.62987G        15.6424M       21.9398M    310.777M               2.2634           11.8704       3.68904G          945.501M                    6.88614                     3.04238           6.22351M    479.075k   137.305M       1.51616G/s   15.6625M   21.9919M   311.136M         2.26602    11.8566/s 3.68901G/s     945.501M               6.88614                3.03887   524.288k       6.21627M/s [BEST: throughput=  1.63 GB/s doc_throughput=    11 docs/s instructions=   945501380 cycles=   310776649 branch_miss=  480414 cache_miss=15642357 cache_ref=  21939805 items=    524288 avg_time=  84341319 ns]
kostya<simdjson_ondemand>/manual_time                  301773752 ns    312111444 ns            2         3.32354M           455.001M        10.3349M       13.9839M    1.11345G              8.10932            3.3138       3.68975G           2.8802G                    20.9767                     2.58674           1.73739M    3.33526M   137.305M       433.915M/s    10.348M   14.0456M   1.11342G         8.10911    3.31374/s 3.68959G/s      2.8802G               20.9767                2.58681   524.288k       1.73735M/s [BEST: throughput=  0.46 GB/s doc_throughput=     3 docs/s instructions=  2880202945 cycles=  1113450510 branch_miss= 3323541 cache_miss=10334863 cache_ref=  13983881 items=    524288 avg_time= 301773752 ns]
kostya<yyjson>/manual_time                             199646444 ns    210019655 ns            4          415.03k           688.482M        11.3912M       16.1181M    539.098M              3.92628           5.01426       2.70318G          984.045M                    7.16686                     1.82535           2.62891M    413.897k   137.305M       655.881M/s   11.3922M   16.1516M    539.12M         3.92644    5.00885/s 2.70037G/s     984.045M               7.16686                1.82528   524.288k       2.62608M/s [BEST: throughput=  0.69 GB/s doc_throughput=     5 docs/s instructions=   984045124 cycles=   539098039 branch_miss=  415030 cache_miss=11391238 cache_ref=  16118064 items=    524288 avg_time= 199646444 ns]
kostya<yyjson_insitu>/manual_time                      146249184 ns    156604373 ns            5         412.167k           939.158M        8.79646M       12.1804M     444.84M              3.23979           6.83994       3.04268G          965.775M                     7.0338                     2.17106            3.5861M     413.45k   137.305M        895.35M/s   8.79662M   12.1921M   444.782M         3.23937    6.83765/s 3.04126G/s     965.775M                7.0338                2.17134   524.288k        3.5849M/s [BEST: throughput=  0.94 GB/s doc_throughput=     6 docs/s instructions=   965775249 cycles=   444839618 branch_miss=  412167 cache_miss= 8796458 cache_ref=  12180374 items=    524288 avg_time= 146249183 ns]
kostya<rapidjson>/manual_time                          244623400 ns    255039001 ns            3         987.353k           569.607M        8.15357M       11.8725M    808.228M              5.88637           4.14848       3.35292G          2.29716G                    16.7303                     2.84221             2.175M    1006.58k   137.305M       535.289M/s   7.84746M    11.516M   812.043M         5.91416    4.08792/s 3.31956G/s     2.29716G               16.7303                2.82886   524.288k       2.14325M/s [BEST: throughput=  0.57 GB/s doc_throughput=     4 docs/s instructions=  2297155879 cycles=   808228194 branch_miss=  987353 cache_miss= 8153574 cache_ref=  11872500 items=    524288 avg_time= 244623399 ns]
kostya<rapidjson_lossless>/manual_time                 260529329 ns    270935431 ns            3         951.262k           534.006M        8.16379M       12.0566M    867.013M              6.31451            3.8892       3.37199G          2.49743G                    18.1889                     2.88049           2.03906M    951.454k   137.305M       502.608M/s   7.85312M   11.6447M   870.206M         6.33776    3.83834/s 3.34015G/s     2.49743G               18.1889                2.86993   524.288k        2.0124M/s [BEST: throughput=  0.53 GB/s doc_throughput=     3 docs/s instructions=  2497425838 cycles=   867013477 branch_miss=  951262 cache_miss= 8163792 cache_ref=  12056633 items=    524288 avg_time= 260529328 ns]
kostya<rapidjson_insitu>/manual_time                   226108476 ns    236481687 ns            3         1025.82k           616.184M          11.25M       15.6575M     741.04M              5.39704            4.4877       3.32557G          2.03227G                    14.8012                     2.74246           2.35285M     1031.3k   137.305M       579.121M/s   10.9569M    15.295M   743.735M         5.41666    4.42266/s 3.28928G/s     2.03228G               14.8012                2.73253   524.288k       2.31875M/s [BEST: throughput=  0.62 GB/s doc_throughput=     4 docs/s instructions=  2032274263 cycles=   741040237 branch_miss= 1025815 cache_miss=11249990 cache_ref=  15657550 items=    524288 avg_time= 226108475 ns]
distinct_user_id<simdjson_dom>/manual_time                258682 ns       289133 ns         2704           3.956k           2.45713G               0        88.559k    949.063k              1.50284          3.89085k       3.69267G          2.90343M                    4.59756                     3.05926           447.448k    4.11289k   631.515k       2.27362G/s   0.566568   88.5119k   954.769k         1.51187   3.86576k/s  3.6909G/s     2.90343M               4.59756                3.04098        115       444.562k/s [BEST: throughput=  2.46 GB/s doc_throughput=  3890 docs/s instructions=     2903428 cycles=      949063 branch_miss=    3956 cache_miss=       0 cache_ref=     88559 items=       115 avg_time=    258681 ns]
distinct_user_id<simdjson_ondemand>/manual_time          1112107 ns      1142189 ns          630          32.301k           571.049M               0        53.976k    4.08266M              6.46487           904.253       3.69176G          10.3431M                    16.3782                     2.53342           103.989k    32.9369k   631.515k       541.548M/s   0.236508    54.142k   4.10366M         6.49811    899.194/s 3.68998G/s     10.3431M               16.3782                2.52046        115       103.407k/s [BEST: throughput=  0.57 GB/s doc_throughput=   904 docs/s instructions=    10343109 cycles=     4082661 branch_miss=   32301 cache_miss=       0 cache_ref=     53976 items=       115 avg_time=   1112106 ns]
distinct_user_id<yyjson>/manual_time                      653216 ns       687271 ns         1264            9.95k           1.63621G             575         74.02k    1.38793M              2.19777          2.59092k       3.59601G          2.87489M                    4.55237                     2.07136           297.956k    7.67876k   631.515k       921.991M/s    1055.05   47.8899k   1.60467M         2.54098   1.53089k/s 2.45657G/s     2.87537M               4.55313                1.79188        115       176.052k/s [BEST: throughput=  1.64 GB/s doc_throughput=  2590 docs/s instructions=     2874893 cycles=     1387927 branch_miss=    9950 cache_miss=     575 cache_ref=     74020 items=       115 avg_time=    653216 ns]
distinct_user_id<yyjson_insitu>/manual_time               450539 ns       483064 ns         1554           7.055k           1.90714G             401        44.192k    1.21753M              1.92795          3.01994k       3.67687G          2.87457M                    4.55186                     2.36099           347.294k    7.41388k   631.515k       1.30542G/s     47.666   30.5838k   1.32871M           2.104   2.21957k/s 2.94915G/s     2.87483M               4.55228                2.16364        115        255.25k/s [BEST: throughput=  1.91 GB/s doc_throughput=  3019 docs/s instructions=     2874571 cycles=     1217528 branch_miss=    7055 cache_miss=     401 cache_ref=     44192 items=       115 avg_time=    450538 ns]
distinct_user_id<rapidjson>/manual_time                  1615448 ns      1646010 ns          434          26.475k           442.017M             225        51.702k    5.27423M              8.35171           699.932        3.6916G          13.3488M                    21.1377                     2.53095           80.4921k    26.4504k   631.515k       372.813M/s   1.89745k   34.6216k   5.43167M         8.60101    619.023/s 3.36233G/s     13.3496M                21.139                2.45774        115       71.1877k/s [BEST: throughput=  0.44 GB/s doc_throughput=   699 docs/s instructions=    13348797 cycles=     5274227 branch_miss=   26475 cache_miss=     225 cache_ref=     51702 items=       115 avg_time=   1615448 ns]
distinct_user_id<rapidjson_insitu>/manual_time           1165505 ns      1195322 ns          629          25.223k           590.829M              50        42.824k    3.94593M              6.24835           935.574       3.69171G          9.70569M                    15.3689                     2.45967           107.591k    25.1181k   631.515k       516.737M/s   2.03063k   35.0454k   4.01935M         6.36462    857.997/s 3.44859G/s     9.70603M               15.3694                2.41482        115       98.6697k/s [BEST: throughput=  0.59 GB/s doc_throughput=   935 docs/s instructions=     9705692 cycles=     3945928 branch_miss=   25223 cache_miss=      50 cache_ref=     42824 items=       115 avg_time=   1165505 ns]
find_tweet<simdjson_dom>/manual_time                      247517 ns       276391 ns         2829           3.669k            2.5658G               0        78.309k    908.887k              1.43922          4.06293k       3.69274G          2.82239M                    4.46923                     3.10532           4.06293k    3.81206k   631.515k       2.37618G/s  0.0897844   78.3764k   913.616k         1.44671   4.04013k/s 3.69113G/s     2.82239M               4.46923                3.08925          1       4.04013k/s [BEST: throughput=  2.57 GB/s doc_throughput=  4062 docs/s instructions=     2822388 cycles=      908887 branch_miss=    3669 cache_miss=       0 cache_ref=     78309 items=         1 avg_time=    247516 ns]
find_tweet<simdjson_ondemand>/manual_time                1042446 ns      1070768 ns          673          31.582k           609.833M               0        31.279k    3.82283M              6.05342           965.667       3.69158G          9.73047M                    15.4081                     2.54536            965.667    32.2091k   631.515k       577.737M/s   0.206538   31.4053k   3.84656M         6.09101    959.282/s 3.68994G/s     9.73047M               15.4081                2.52965          1        959.282/s [BEST: throughput=  0.61 GB/s doc_throughput=   965 docs/s instructions=     9730469 cycles=     3822827 branch_miss=   31582 cache_miss=       0 cache_ref=     31279 items=         1 avg_time=   1042445 ns]
find_tweet<yyjson>/manual_time                            642812 ns       673762 ns         1116           9.843k           1.71897G             123        65.458k    1.35647M              2.14796          2.72198k       3.69229G          2.82413M                      4.472                     2.08197           2.72198k    7.44893k   631.515k       936.915M/s    1036.34   39.5324k   1.57115M          2.4879   1.55567k/s 2.44418G/s     2.82482M               4.47309                1.79793          1       1.55567k/s [BEST: throughput=  1.72 GB/s doc_throughput=  2721 docs/s instructions=     2824133 cycles=     1356469 branch_miss=    9843 cache_miss=     123 cache_ref=     65458 items=         1 avg_time=    642811 ns]
find_tweet<yyjson_insitu>/manual_time                     442153 ns       472150 ns         1584           6.878k           1.95755G             391        35.952k    1.18775M               1.8808          3.09977k       3.68176G          2.82402M                    4.47182                     2.37761           3.09977k     7.2694k   631.515k       1.33018G/s    14.5461    22.187k   1.29818M         2.05566   2.26166k/s 2.93604G/s     2.82428M               4.47223                2.17557          1       2.26166k/s [BEST: throughput=  1.96 GB/s doc_throughput=  3099 docs/s instructions=     2824019 cycles=     1187754 branch_miss=    6878 cache_miss=     391 cache_ref=     35952 items=         1 avg_time=    442153 ns]
find_tweet<rapidjson>/manual_time                        1605460 ns      1634231 ns          436          26.186k            445.14M             233        44.678k     5.2372M              8.29308           704.877       3.69158G          13.2812M                    21.0306                     2.53593            704.877    26.3256k   631.515k       375.132M/s   1.58002k   27.3008k   5.39513M         8.54316    622.875/s 3.36049G/s     13.2821M               21.0321                2.46186          1        622.875/s [BEST: throughput=  0.45 GB/s doc_throughput=   704 docs/s instructions=    13281158 cycles=     5237203 branch_miss=   26186 cache_miss=     233 cache_ref=     44678 items=         1 avg_time=   1605459 ns]
find_tweet<rapidjson_insitu>/manual_time                 1157698 ns      1187122 ns          636          24.924k           595.509M          2.302k        34.417k    3.91487M              6.19918           942.984       3.69166G          9.64755M                    15.2768                     2.46433            942.984     25.087k   631.515k       520.222M/s   1.86957k   26.2335k   3.98998M         6.31811    863.783/s 3.44648G/s     9.64779M               15.2772                  2.418          1        863.783/s [BEST: throughput=  0.60 GB/s doc_throughput=   942 docs/s instructions=     9647552 cycles=     3914873 branch_miss=   24924 cache_miss=    2302 cache_ref=     34417 items=         1 avg_time=   1157698 ns]
