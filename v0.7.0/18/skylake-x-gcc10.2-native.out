run_benchmark: v0.8.0~20 /home/jkeiser/simdjson_benchmark_results/v0.7.0/18/skylake-x-gcc10.2-native.json -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native
git reset --hard v0.8.0~20
HEAD is now at f29b70c6 Adding GitHub Actions VS - without exceptions. (#1362)
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- git Version: v0.2.1-f29b70c6
-- Version: 0.2.1
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 11
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
make[3]: Nothing to be done for '_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build'.
[ 72%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
make[3]: Nothing to be done for 'jsonexamples/generated/CMakeFiles/generated-data.dir/build'.
[ 72%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/g++-10  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/src  -march=native -O3 -DNDEBUG -fPIC   -pthread -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/g++-10 -fPIC -march=native -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.6 -o ../libsimdjson.so.6.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.6.0.0 ../libsimdjson.so.6 ../libsimdjson.so
[ 81%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
make[3]: Nothing to be done for 'dependencies/CMakeFiles/yyjson.dir/build'.
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/g++-10  -DRAPIDJSON_HAS_STDSTRING -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_COMPETITION_RAPIDJSON -DSIMDJSON_COMPETITION_YYJSON -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/rapidjson/include  -march=native -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/g++-10  -march=native -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.6.0.0 ../_deps/google_benchmarks/src/libbenchmark.a ../dependencies/libyyjson.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/18/skylake-x-gcc10.2-native.json --benchmark_out_format=json
2021-01-24 21:29:10
Running benchmark/bench_ondemand
Run on (4 X 3200 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 1024 KiB (x4)
  L3 Unified 8448 KiB (x1)
Load Average: 1.00, 1.00, 1.00
***WARNING*** CPU scaling is enabled, the benchmark real time measurements may be noisy and will incur extra overhead.
simdjson::dom implementation:      haswell
simdjson::ondemand implementation: haswell

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                  321658 ns       392361 ns         2168           3.812k           1.97823G               0        34.043k    1019.67k              1.61465          3.13252k       3.19414G          3.07044M                    4.86202                      3.0112           313.252k    3.93916k   631.515k       1.82848G/s    1.31227   34.0978k   1026.26k         1.62507   3.10889k/s 3.19052G/s     3.07044M               4.86202                2.99189        100       310.889k/s [BEST: throughput=  1.98 GB/s doc_throughput=  3132 docs/s instructions=     3070441 cycles=     1019673 branch_miss=    3812 cache_miss=       0 cache_ref=     34043 items=       100 avg_time=    321658 ns]
partial_tweets<simdjson_ondemand>/manual_time             223253 ns       280413 ns         3126           2.172k           2.85116G               0         10.99k    707.543k              1.12039          4.51479k       3.19441G          2.23694M                    3.54218                     3.16156           451.479k    2.27264k   631.515k       2.63443G/s  0.0335893   10.9807k   712.545k         1.12831   4.47923k/s 3.19165G/s     2.23694M               3.54218                3.13937        100       447.923k/s [BEST: throughput=  2.85 GB/s doc_throughput=  4514 docs/s instructions=     2236942 cycles=      707543 branch_miss=    2172 cache_miss=       0 cache_ref=     10990 items=       100 avg_time=    223252 ns]
partial_tweets<yyjson>/manual_time                        854815 ns       933857 ns          820           9.847k           1.27195G             220        28.708k    1.58564M              2.51086          2.01413k       3.19369G          2.90836M                    4.60537                     1.83418           201.413k    7.64312k   631.515k        704.55M/s    624.357   23.4923k   1.75308M         2.77599   1.16984k/s 2.05083G/s     2.90885M               4.60614                1.65928        100       116.984k/s [BEST: throughput=  1.27 GB/s doc_throughput=  2014 docs/s instructions=     2908362 cycles=     1585643 branch_miss=    9847 cache_miss=     220 cache_ref=     28708 items=       100 avg_time=    854814 ns]
partial_tweets<yyjson_insitu>/manual_time                 574551 ns       635750 ns         1229            7.33k           1.53975G             125        14.499k     1.3098M              2.07406          2.43818k       3.19353G          2.90825M                     4.6052                     2.22038           243.818k    7.42818k   631.515k       1048.23M/s    64.6379   8.52339k    1.4314M         2.26662   1.74049k/s 2.49134G/s     2.90852M               4.60562                2.03193        100       174.049k/s [BEST: throughput=  1.54 GB/s doc_throughput=  2438 docs/s instructions=     2908252 cycles=     1309800 branch_miss=    7330 cache_miss=     125 cache_ref=     14499 items=       100 avg_time=    574551 ns]
partial_tweets<rapidjson>/manual_time                    1926787 ns      1990603 ns          366          26.462k           385.352M             667        22.691k    5.23256M              8.28573           610.202       3.19292G           13.115M                    20.7674                     2.50641           61.0202k    27.3912k   631.515k       312.572M/s    339.607    11.457k   5.45878M         8.64395    518.999/s  2.8331G/s     13.1158M               20.7688                 2.4027        100       51.8999k/s [BEST: throughput=  0.39 GB/s doc_throughput=   610 docs/s instructions=    13114956 cycles=     5232565 branch_miss=   26462 cache_miss=     667 cache_ref=     22691 items=       100 avg_time=   1926787 ns]
partial_tweets<rapidjson_insitu>/manual_time             1240738 ns      1302367 ns          572          24.543k           604.817M             215        14.759k    3.33395M              5.27929           957.724         3.193G          9.82298M                    15.5546                     2.94635           95.7724k    29.1321k   631.515k       485.404M/s     181.83   9.45748k   3.55487M         5.62912    805.972/s 2.86513G/s     9.82331M               15.5552                2.76334        100       80.5972k/s [BEST: throughput=  0.60 GB/s doc_throughput=   957 docs/s instructions=     9822982 cycles=     3333950 branch_miss=   24543 cache_miss=     215 cache_ref=     14759 items=       100 avg_time=   1240737 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                 100705929 ns    106944549 ns            7         850.946k           457.562M        6.82527M       6.89457M    320.571M              6.96911           9.94726        3.1888G          998.581M                    21.7089                     3.11501           9.94726M    850.966k   45.9988M       435.603M/s    6.8095M   6.89456M   321.078M         6.98015     9.9299/s 3.18828G/s     998.581M               21.7089                3.11009      1000k        9.9299M/s [BEST: throughput=  0.46 GB/s doc_throughput=     9 docs/s instructions=   998581006 cycles=   320570587 branch_miss=  850946 cache_miss= 6825266 cache_ref=   6894568 items=   1000000 avg_time= 100705929 ns]
large_random<simdjson_ondemand>/manual_time             67524034 ns     73742073 ns           10         867.733k           682.124M        3.50433M       3.57278M    215.044M                4.675           14.8292       3.18893G          650.959M                    14.1517                     3.02709           14.8292M    867.203k   45.9988M       649.663M/s   3.51861M   3.57274M   215.316M          4.6809    14.8095/s 3.18873G/s     650.959M               14.1517                3.02327      1000k       14.8095M/s [BEST: throughput=  0.68 GB/s doc_throughput=    14 docs/s instructions=   650958757 cycles=   215044166 branch_miss=  867733 cache_miss= 3504330 cache_ref=   3572781 items=   1000000 avg_time=  67524034 ns]
large_random<simdjson_ondemand_unordered>/manual_time   70376602 ns     76621103 ns           10         860.419k           653.897M        3.48504M       3.57263M    224.335M              4.87699           14.2155       3.18905G          654.959M                    14.2386                     2.91955           14.2155M    860.798k   45.9988M        623.33M/s   3.51234M   3.57263M   224.405M         4.87851    14.2093/s 3.18864G/s     654.959M               14.2386                2.91864      1000k       14.2093M/s [BEST: throughput=  0.65 GB/s doc_throughput=    14 docs/s instructions=   654958759 cycles=   224335365 branch_miss=  860419 cache_miss= 3485038 cache_ref=   3572631 items=   1000000 avg_time=  70376602 ns]
large_random<yyjson>/manual_time                       157885324 ns    164140330 ns            4         657.243k           291.494M        4.20627M       4.34838M    362.077M              7.87144             6.337       2.29448G           942.15M                    20.4821                     2.60207             6.337M    660.635k   45.9988M       277.846M/s   4.20178M   4.35047M   362.407M         7.87861    6.33371/s 2.29538G/s      942.15M               20.4821                 2.5997      1000k       6.33371M/s [BEST: throughput=  0.29 GB/s doc_throughput=     6 docs/s instructions=   942149605 cycles=   362076637 branch_miss=  657243 cache_miss= 4206267 cache_ref=   4348376 items=   1000000 avg_time= 157885324 ns]
large_random<yyjson_insitu>/manual_time                131540708 ns    137783608 ns            5          657.45k           349.964M        3.48232M       3.63173M    318.581M              6.92586           7.60812       2.42381G          936.029M                     20.349                     2.93812           7.60812M     659.87k   45.9988M       333.493M/s   3.48275M   3.63565M    318.89M         6.93258    7.60221/s 2.42427G/s     936.029M                20.349                2.93527      1000k       7.60221M/s [BEST: throughput=  0.35 GB/s doc_throughput=     7 docs/s instructions=   936028843 cycles=   318581238 branch_miss=  657450 cache_miss= 3482315 cache_ref=   3631730 items=   1000000 avg_time= 131540708 ns]
large_random<rapidjson>/manual_time                    211116026 ns    217378756 ns            3         586.713k           227.032M        4.35647M       4.88491M    577.375M               12.552           4.93561       2.84969G          1.66212G                     36.134                     2.87876           4.93561M    586.779k   45.9988M        207.79M/s   4.10034M   4.67353M   582.405M         12.6613    4.73673/s  2.7587G/s     1.66213G               36.1342                2.85391      1000k       4.73673M/s [BEST: throughput=  0.23 GB/s doc_throughput=     4 docs/s instructions=  1662121158 cycles=   577374778 branch_miss=  586713 cache_miss= 4356465 cache_ref=   4884910 items=   1000000 avg_time= 211116025 ns]
large_random<rapidjson_lossless>/manual_time           238451397 ns    244711313 ns            3         593.222k           199.977M         4.3623M       4.89215M    664.317M              14.4421           4.34745       2.88808G          2.01909G                    43.8945                     3.03935           4.34745M    597.672k   45.9988M        183.97M/s   4.10341M   4.68409M   668.834M         14.5403    4.19373/s 2.80491G/s      2.0191G               43.8946                3.01883      1000k       4.19373M/s [BEST: throughput=  0.20 GB/s doc_throughput=     4 docs/s instructions=  2019091091 cycles=   664316658 branch_miss=  593222 cache_miss= 4362295 cache_ref=   4892153 items=   1000000 avg_time= 238451396 ns]
large_random<rapidjson_insitu>/manual_time             191215506 ns    197477600 ns            4         814.567k           254.383M        5.04713M       5.60461M    507.786M              11.0391           5.53022       2.80816G          1.49412G                    32.4818                     2.94242           5.53022M    882.496k   45.9988M       229.416M/s   4.78127M   5.36969M   516.133M         11.2206     5.2297/s 2.69922G/s     1.49413G                32.482                2.89485      1000k        5.2297M/s [BEST: throughput=  0.25 GB/s doc_throughput=     5 docs/s instructions=  1494121009 cycles=   507785595 branch_miss=  814567 cache_miss= 5047131 cache_ref=   5604610 items=   1000000 avg_time= 191215505 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                        99477620 ns    119116931 ns            7         480.837k           1.38174G         10.218M       10.3144M    316.857M              2.30769           10.0633       3.18861G           972.65M                    7.08386                     3.06968           5.27605M    480.974k   137.305M       1.28547G/s    10.245M   10.3143M   317.187M         2.31009    10.0525/s 3.18853G/s      972.65M               7.08386                3.06649   524.288k       5.27041M/s [BEST: throughput=  1.38 GB/s doc_throughput=    10 docs/s instructions=   972649990 cycles=   316856724 branch_miss=  480837 cache_miss=10217972 cache_ref=  10314364 items=    524288 avg_time=  99477619 ns]
kostya<simdjson_ondemand>/manual_time                   73842505 ns     93422215 ns            9          468.28k            1.8615G        6.43291M       6.47094M    235.135M               1.7125           13.5574       3.18781G          699.692M                     5.0959                     2.97571           7.10799M    467.143k   137.305M       1.73173G/s   6.44016M   6.47083M    235.46M         1.71487    13.5423/s 3.18868G/s     699.692M                5.0959                 2.9716   524.288k       7.10008M/s [BEST: throughput=  1.86 GB/s doc_throughput=    13 docs/s instructions=   699692088 cycles=   235134540 branch_miss=  468280 cache_miss= 6432913 cache_ref=   6470938 items=    524288 avg_time=  73842505 ns]
kostya<yyjson>/manual_time                             265228521 ns    284844893 ns            3         420.004k           517.751M         8.4863M       8.66403M    611.415M              4.45297           3.77081       2.30553G          983.521M                    7.16304                      1.6086           1.97699M    418.906k   137.305M       493.703M/s   8.48745M   8.66374M    611.23M         4.45162    3.77033/s 2.30454G/s     983.521M               7.16304                1.60908   524.288k       1.97674M/s [BEST: throughput=  0.52 GB/s doc_throughput=     3 docs/s instructions=   983520848 cycles=   611415398 branch_miss=  420004 cache_miss= 8486303 cache_ref=   8664027 items=    524288 avg_time= 265228521 ns]
kostya<yyjson_insitu>/manual_time                      186229991 ns    205738928 ns            4         417.052k           737.449M        6.34799M       6.52173M    480.576M              3.50006           5.37088       2.58111G          965.251M                    7.02998                     2.00853           2.81589M    416.399k   137.305M       703.132M/s   6.34828M   6.52403M   480.627M         3.50043     5.3697/s 2.58082G/s     965.251M               7.02998                2.00832   524.288k       2.81527M/s [BEST: throughput=  0.74 GB/s doc_throughput=     5 docs/s instructions=   965251181 cycles=   480575534 branch_miss=  417052 cache_miss= 6347988 cache_ref=   6521733 items=    524288 avg_time= 186229991 ns]
kostya<rapidjson>/manual_time                          293790138 ns    313163662 ns            2         956.531k           472.992M        5.23757M       5.74978M    827.876M              6.02947           3.44482       2.85189G          2.28931G                    16.6732                     2.76529           1.80608M     953.53k   137.305M       445.707M/s   5.11608M   5.64245M   830.372M         6.04764    3.40379/s 2.82641G/s     2.28932G               16.6732                2.75698   524.288k       1.78457M/s [BEST: throughput=  0.47 GB/s doc_throughput=     3 docs/s instructions=  2289314849 cycles=   827876376 branch_miss=  956531 cache_miss= 5237572 cache_ref=   5749777 items=    524288 avg_time= 293790138 ns]
kostya<rapidjson_lossless>/manual_time                 322596948 ns    341902481 ns            2         1.52721M           430.185M        5.24071M       5.76061M    919.708M              6.69828           3.13306        2.8815G          2.49326G                    18.1585                     2.71092           1.64263M    1.54463M   137.305M       405.907M/s   5.11669M   5.65164M   922.056M         6.71539    3.09984/s 2.85823G/s     2.49326G               18.1585                2.70402   524.288k       1.62521M/s [BEST: throughput=  0.43 GB/s doc_throughput=     3 docs/s instructions=  2493255142 cycles=   919707680 branch_miss= 1527214 cache_miss= 5240712 cache_ref=   5760609 items=    524288 avg_time= 322596947 ns]
kostya<rapidjson_insitu>/manual_time                   277510207 ns    296867268 ns            3         1074.55k           503.299M         7.3763M       7.89401M    771.757M              5.62075           3.66556       2.82892G          2.03958G                    14.8544                     2.64278           1.92181M    1.12404M   137.305M       471.854M/s   7.21161M   7.75053M   775.463M         5.64774    3.60347/s 2.79436G/s     2.03958G               14.8544                2.63015   524.288k       1.88926M/s [BEST: throughput=  0.50 GB/s doc_throughput=     3 docs/s instructions=  2039579819 cycles=   771756831 branch_miss= 1074554 cache_miss= 7376304 cache_ref=   7894006 items=    524288 avg_time= 277510206 ns]
distinct_user_id<simdjson_dom>/manual_time                316145 ns       393952 ns         2213           3.856k           2.01269G               1        33.826k    1002.24k              1.58705          3.18709k       3.19424G          3.01136M                    4.76848                     3.00462           366.515k    4.01657k   631.515k       1.86036G/s    1.16313   34.0947k   1008.79k         1.59741    3.1631k/s  3.1909G/s     3.01137M               4.76848                2.98513        115       363.757k/s [BEST: throughput=  2.01 GB/s doc_throughput=  3187 docs/s instructions=     3011365 cycles=     1002244 branch_miss=    3856 cache_miss=       1 cache_ref=     33826 items=       115 avg_time=    316145 ns]
distinct_user_id<simdjson_ondemand>/manual_time           230591 ns       292571 ns         3036           2.302k           2.75661G               0         7.832k    731.807k              1.15881          4.36508k       3.19439G          2.18818M                    3.46496                      2.9901           501.984k    2.42533k   631.515k        2.5506G/s  0.0757576   7.78371k   735.934k         1.16535   4.33668k/s 3.19151G/s     2.18818M               3.46496                2.97333        115       498.719k/s [BEST: throughput=  2.76 GB/s doc_throughput=  4365 docs/s instructions=     2188175 cycles=      731807 branch_miss=    2302 cache_miss=       0 cache_ref=      7832 items=       115 avg_time=    230590 ns]
distinct_user_id<yyjson>/manual_time                      852078 ns       940384 ns          980           9.896k           1.28348G             244        27.503k    1.57133M               2.4882          2.03238k       3.19354G          2.87498M                    4.55251                     1.82964           233.723k    7.76138k   631.515k       706.813M/s    441.585   23.4699k   1.74674M         2.76595    1.1736k/s 2.04998G/s     2.87559M               4.55347                1.64626        115       134.964k/s [BEST: throughput=  1.28 GB/s doc_throughput=  2032 docs/s instructions=     2874981 cycles=     1571333 branch_miss=    9896 cache_miss=     244 cache_ref=     27503 items=       115 avg_time=    852077 ns]
distinct_user_id<yyjson_insitu>/manual_time               573014 ns       643245 ns         1232           7.191k           1.54988G          1.187k        13.328k    1.29564M              2.05164          2.45422k        3.1798G          2.87458M                    4.55188                     2.21865           282.236k    7.58031k   631.515k       1051.04M/s     66.612   8.62711k   1.42665M         2.25909   1.74516k/s 2.48972G/s     2.87484M               4.55229                 2.0151        115       200.693k/s [BEST: throughput=  1.55 GB/s doc_throughput=  2454 docs/s instructions=     2874579 cycles=     1295643 branch_miss=    7191 cache_miss=    1187 cache_ref=     13328 items=       115 avg_time=    573014 ns]
distinct_user_id<rapidjson>/manual_time                  1882550 ns      1954121 ns          372          25.884k           389.729M         12.609k        22.775k    5.17365M              8.19244           617.133       3.19283G          13.0559M                    20.6739                     2.52353           70.9703k    27.0549k   631.515k       319.917M/s   1.22497k    12.159k    5.3665M         8.49781    531.194/s 2.85065G/s     13.0567M               20.6752                2.43301        115       61.0873k/s [BEST: throughput=  0.39 GB/s doc_throughput=   617 docs/s instructions=    13055851 cycles=     5173646 branch_miss=   25884 cache_miss=   12609 cache_ref=     22775 items=       115 avg_time=   1882550 ns]
distinct_user_id<rapidjson_insitu>/manual_time           1205036 ns      1275569 ns          636          23.619k           607.123M          6.692k        14.106k     3.3213M              5.25926           961.376       3.19302G          9.77395M                     15.477                     2.94281           110.558k    27.7073k   631.515k       499.786M/s   1.15371k   10.5423k   3.49779M         5.53873    829.851/s 2.90265G/s     9.77451M               15.4779                2.79448        115       95.4328k/s [BEST: throughput=  0.61 GB/s doc_throughput=   961 docs/s instructions=     9773955 cycles=     3321302 branch_miss=   23619 cache_miss=    6692 cache_ref=     14106 items=       115 avg_time=   1205036 ns]
find_tweet<simdjson_dom>/manual_time                      301064 ns       374885 ns         2325           3.689k            2.1112G               0        29.586k    955.329k              1.51276          3.34307k       3.19373G          2.93033M                    4.64016                     3.06735           3.34307k    3.78162k   631.515k       1.95355G/s   0.109247   29.6092k   960.508k         1.52096   3.32155k/s 3.19037G/s     2.93033M               4.64016                3.05081          1       3.32155k/s [BEST: throughput=  2.11 GB/s doc_throughput=  3343 docs/s instructions=     2930328 cycles=      955329 branch_miss=    3689 cache_miss=       0 cache_ref=     29586 items=         1 avg_time=    301064 ns]
find_tweet<simdjson_ondemand>/manual_time                 147269 ns       211012 ns         4746           1.346k           4.31699G               0         7.221k    467.463k             0.740225          6.83592k       3.19554G          1.56922M                    2.48485                     3.35688           6.83592k    1.41754k   631.515k       3.99368G/s   7.37463m    7.2138k   470.169k        0.744509   6.79031k/s 3.19259G/s     1.56922M               2.48485                3.33756          1       6.79031k/s [BEST: throughput=  4.32 GB/s doc_throughput=  6835 docs/s instructions=     1569217 cycles=      467463 branch_miss=    1346 cache_miss=       0 cache_ref=      7221 items=         1 avg_time=    147268 ns]
find_tweet<yyjson>/manual_time                            834778 ns       919151 ns          870           9.582k           1.30852G             273        27.253k    1.54143M              2.44085          2.07203k        3.1939G          2.82415M                    4.47202                     1.83216           2.07203k     7.4895k   631.515k       721.461M/s     341.86   19.7319k   1.69353M          2.6817   1.19792k/s 2.02872G/s     2.82483M                4.4731                1.66801          1       1.19792k/s [BEST: throughput=  1.31 GB/s doc_throughput=  2072 docs/s instructions=     2824148 cycles=     1541434 branch_miss=    9582 cache_miss=     273 cache_ref=     27253 items=         1 avg_time=    834778 ns]
find_tweet<yyjson_insitu>/manual_time                     558479 ns       621220 ns         1264            7.44k           1.57407G             123        14.133k    1.28135M                2.029          2.49252k       3.19379G          2.82403M                    4.47183                     2.20395           2.49252k    7.37283k   631.515k       1078.39M/s    7.86788   4.77387k   1.38085M         2.18656   1.79058k/s 2.47251G/s     2.82429M               4.47225                2.04533          1       1.79058k/s [BEST: throughput=  1.57 GB/s doc_throughput=  2492 docs/s instructions=     2824028 cycles=     1281347 branch_miss=    7440 cache_miss=     123 cache_ref=     14133 items=         1 avg_time=    558479 ns]
find_tweet<rapidjson>/manual_time                        1868620 ns      1934512 ns          375          26.012k           392.509M         11.948k        20.862k    5.13709M              8.13454           621.535       3.19288G           12.988M                    20.5665                     2.52829            621.535    27.0483k   631.515k       322.302M/s       1025   8.73314k   5.32261M         8.42831    535.154/s 2.84842G/s     12.9889M               20.5678                2.44032          1        535.154/s [BEST: throughput=  0.39 GB/s doc_throughput=   621 docs/s instructions=    12988039 cycles=     5137086 branch_miss=   26012 cache_miss=   11948 cache_ref=     20862 items=         1 avg_time=   1868619 ns]
find_tweet<rapidjson_insitu>/manual_time                 1189078 ns      1253582 ns          650          24.141k           614.766M             233        13.985k    3.28006M              5.19396           973.478       3.19307G          9.71672M                    15.3864                     2.96236            973.478    27.2961k   631.515k       506.493M/s    1010.67    7.4453k   3.44658M         5.45764    840.988/s 2.89853G/s     9.71706M               15.3869                2.81933          1        840.988/s [BEST: throughput=  0.61 GB/s doc_throughput=   973 docs/s instructions=     9716722 cycles=     3280064 branch_miss=   24141 cache_miss=     233 cache_ref=     13985 items=         1 avg_time=   1189077 ns]
