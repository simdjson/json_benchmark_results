run_benchmark: v0.8.0~20 /home/jkeiser/simdjson_benchmark_results/v0.7.0/18/skylake-clang11.json 
git reset --hard v0.8.0~20
HEAD is now at f29b70c6 Adding GitHub Actions VS - without exceptions. (#1362)
cmake ..
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- git Version: v0.2.1-f29b70c6
-- Version: 0.2.1
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES -- failed to compile
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
make[1]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[2]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 72%] Built target benchmark
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 72%] Built target generated-data
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
Scanning dependencies of target simdjson
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 81%] Building CXX object src/CMakeFiles/simdjson.dir/simdjson.cpp.o
[ 81%] Linking CXX shared library ../libsimdjson.so
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 81%] Built target simdjson
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 90%] Built target yyjson
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
Scanning dependencies of target bench_ondemand
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 90%] Building CXX object benchmark/CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o
[100%] Linking CXX executable bench_ondemand
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[100%] Built target bench_ondemand
make[2]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[1]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/18/skylake-clang11.json --benchmark_out_format=json
2021-01-23 04:58:24
Running benchmark/bench_ondemand
Run on (32 X 3300 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x32)
  L1 Instruction 32 KiB (x32)
  L2 Unified 256 KiB (x16)
Load Average: 1.06, 1.03, 1.00
simdjson::dom implementation:      arm64
simdjson::ondemand implementation: arm64

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                 1583011 ns      1651242 ns          442          13.577k           401.658M         25.969k       962.497k     5.0332M              7.97004           636.023       3.20123G          3.94988M                    6.25461                    0.784766           63.6023k    13.6792k   631.515k       380.452M/s   25.9816k   963.527k   5.06249M         8.01643    631.708/s 3.19802G/s     3.94988M               6.25461               0.780224        100       63.1708k/s [BEST: throughput=  0.40 GB/s doc_throughput=   636 docs/s instructions=     3949882 cycles=     5033200 branch_miss=   13577 cache_miss=   25969 cache_ref=    962497 items=       100 avg_time=   1583010 ns]
partial_tweets<simdjson_ondemand>/manual_time            1051313 ns      1119874 ns          665           8.706k           602.611M         22.872k       445.918k    3.35531M              5.31311            954.23       3.20174G           2.7244M                    4.31407                    0.811966            95.423k    9.02972k   631.515k       572.864M/s   22.8738k    446.72k   3.36231M         5.32419    951.191/s  3.1982G/s      2.7244M               4.31406               0.810275        100       95.1191k/s [BEST: throughput=  0.60 GB/s doc_throughput=   954 docs/s instructions=     2724397 cycles=     3355309 branch_miss=    8706 cache_miss=   22872 cache_ref=    445918 items=       100 avg_time=   1051313 ns]
partial_tweets<yyjson>/manual_time                       1182870 ns      1253411 ns          594          45.995k           603.737M          24.36k       1.41002M    3.34925M              5.30352           956.014       3.20193G          3.27036M                     5.1786                    0.976445           95.6014k     45.474k   631.515k       509.151M/s   24.2651k    1.4096M    3.5602M         5.63756    845.401/s  3.0098G/s     3.27059M               5.17895               0.918652        100       84.5401k/s [BEST: throughput=  0.60 GB/s doc_throughput=   956 docs/s instructions=     3270362 cycles=     3349254 branch_miss=   45995 cache_miss=   24360 cache_ref=   1410016 items=       100 avg_time=   1182870 ns]
partial_tweets<yyjson_insitu>/manual_time                1103441 ns      1175393 ns          634          45.513k           630.611M         14.389k       1.25075M    3.20647M              5.07742           998.569       3.20188G          3.17167M                    5.02232                    0.989148           99.8569k    45.3549k   631.515k       545.801M/s   14.4195k    1.2505M   3.41573M         5.40879    906.256/s 3.09553G/s     3.17182M               5.02256               0.928591        100       90.6256k/s [BEST: throughput=  0.63 GB/s doc_throughput=   998 docs/s instructions=     3171670 cycles=     3206465 branch_miss=   45513 cache_miss=   14389 cache_ref=   1250750 items=       100 avg_time=   1103441 ns]
partial_tweets<rapidjson>/manual_time                    4576373 ns      4647824 ns          153          79.747k           140.437M         12.979k       13.3804M    14.3918M              22.7894           222.382       3.20048G            20.68M                    32.7467                     1.43693           22.2382k    79.5129k   631.515k       131.602M/s   13.2476k   13.3826M    14.425M         22.8418    218.514/s 3.15205G/s     20.6804M               32.7474                1.43366        100       21.8514k/s [BEST: throughput=  0.14 GB/s doc_throughput=   222 docs/s instructions=    20680027 cycles=    14391830 branch_miss=   79747 cache_miss=   12979 cache_ref=  13380353 items=       100 avg_time=   4576372 ns]
partial_tweets<rapidjson_insitu>/manual_time             2973120 ns      3046215 ns          235          60.874k            216.55M         13.817k       5.86277M    9.33419M              14.7806           342.906       3.20074G          12.8216M                    20.3029                     1.37361           34.2906k    61.0151k   631.515k       202.568M/s   13.9767k   5.86382M   9.35628M         14.8156    336.347/s 3.14696G/s     12.8222M               20.3038                1.37043        100       33.6347k/s [BEST: throughput=  0.22 GB/s doc_throughput=   342 docs/s instructions=    12821567 cycles=     9334188 branch_miss=   60874 cache_miss=   13817 cache_ref=   5862767 items=       100 avg_time=   2973120 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                 310222088 ns    313799568 ns            2         1.95264M           148.332M        3.98206M       231.984M    991.194M              21.5483            3.2247        3.1963G          1040.92M                    22.6292                     1.05016            3.2247M    1.95196M   45.9988M       141.408M/s   3.98208M    231.98M   991.596M          21.557     3.2235/s 3.19641G/s     1040.92M               22.6292                1.04974      1000k        3.2235M/s [BEST: throughput=  0.15 GB/s doc_throughput=     3 docs/s instructions=  1040915692 cycles=   991193647 branch_miss= 1952642 cache_miss= 3982061 cache_ref= 231983794 items=   1000000 avg_time= 310222088 ns]
large_random<simdjson_ondemand>/manual_time            197455168 ns    201025540 ns            4         1.20797M           233.015M        2.31726M        143.39M     631.14M              13.7208           5.06568       3.19715G          662.774M                    14.4085                     1.05012           5.06568M    1.20827M   45.9988M       222.166M/s   2.31728M    143.39M   631.151M          13.721    5.06444/s 3.19643G/s     662.774M               14.4085                 1.0501      1000k       5.06444M/s [BEST: throughput=  0.23 GB/s doc_throughput=     5 docs/s instructions=   662773948 cycles=   631140425 branch_miss= 1207968 cache_miss= 2317257 cache_ref= 143389657 items=   1000000 avg_time= 197455168 ns]
large_random<simdjson_ondemand_unordered>/manual_time  187849946 ns    191442101 ns            4         1.19033M           244.914M        2.31736M       141.198M    600.498M              13.0547           5.32435       3.19726G          674.774M                    14.6694                     1.12369           5.32435M    1.19076M   45.9988M       233.526M/s   2.31732M   141.198M   600.499M         13.0547     5.3234/s 3.19669G/s     674.774M               14.6694                1.12369      1000k        5.3234M/s [BEST: throughput=  0.24 GB/s doc_throughput=     5 docs/s instructions=   674773941 cycles=   600498061 branch_miss= 1190327 cache_miss= 2317360 cache_ref= 141197585 items=   1000000 avg_time= 187849946 ns]
large_random<yyjson>/manual_time                       204775312 ns    208361898 ns            3         1.70876M           224.757M        4.91336M       205.458M    629.264M                13.68           4.88616       3.07468G          816.385M                     17.748                     1.29736           4.88616M    1.72138M   45.9988M       214.224M/s   4.91334M    205.48M   629.572M         13.6867     4.8834/s 3.07445G/s     816.384M                17.748                1.29673      1000k        4.8834M/s [BEST: throughput=  0.22 GB/s doc_throughput=     4 docs/s instructions=   816384558 cycles=   629264389 branch_miss= 1708764 cache_miss= 4913356 cache_ref= 205457613 items=   1000000 avg_time= 204775312 ns]
large_random<yyjson_insitu>/manual_time                198818514 ns    202399079 ns            4         1.69252M           231.472M        4.19641M        193.92M    617.124M              13.4161           5.03213       3.10545G          809.197M                    17.5917                     1.31124           5.03213M    1.72436M   45.9988M       220.643M/s   4.19642M   193.975M   617.582M         13.4261    5.02971/s 3.10626G/s     809.197M               17.5917                1.31027      1000k       5.02971M/s [BEST: throughput=  0.23 GB/s doc_throughput=     5 docs/s instructions=   809196737 cycles=   617123975 branch_miss= 1692524 cache_miss= 4196410 cache_ref= 193919673 items=   1000000 avg_time= 198818513 ns]
large_random<rapidjson>/manual_time                    352602350 ns    356194613 ns            2         2.05314M           130.612M        4.95509M       779.084M    1099.45M              23.9017           2.83947       3.12185G          1.63051G                    35.4468                     1.48303           2.83947M    2.05177M   45.9988M       124.412M/s   4.95499M   779.108M   1098.58M         23.8827    2.83606/s 3.11563G/s     1.63051G               35.4469                1.48421      1000k       2.83606M/s [BEST: throughput=  0.13 GB/s doc_throughput=     2 docs/s instructions=  1630508477 cycles=  1099447027 branch_miss= 2053143 cache_miss= 4955092 cache_ref= 779084142 items=   1000000 avg_time= 352602350 ns]
large_random<rapidjson_lossless>/manual_time           412191201 ns    415782713 ns            2          1.4049M           111.844M        4.95386M       1021.12M    1.28814G              28.0038           2.43146       3.13206G          2.05348G                    44.6421                     1.59414           2.43146M    1.40623M   45.9988M       106.426M/s   4.95418M   1021.13M   1.28856G         28.0129    2.42606/s 3.12612G/s     2.05349G               44.6422                1.59363      1000k       2.42606M/s [BEST: throughput=  0.11 GB/s doc_throughput=     2 docs/s instructions=  2053481935 cycles=  1288142301 branch_miss= 1404897 cache_miss= 4953860 cache_ref=1021120717 items=   1000000 avg_time= 412191201 ns]
large_random<rapidjson_insitu>/manual_time             396101011 ns    353705657 ns            2         2.10446M           131.221M         5.6748M       696.534M     1089.1M              23.6767           2.85271       3.10689G          1.37952G                    29.9903                     1.26666           2.85271M    2.21368M   45.9988M       110.749M/s   5.67454M   696.537M   1089.94M         23.6949    2.52461/s 2.75166G/s     1.37951G               29.9902                1.26568      1000k       2.52461M/s [BEST: throughput=  0.13 GB/s doc_throughput=     2 docs/s instructions=  1379518482 cycles=  1089101517 branch_miss= 2104459 cache_miss= 5674799 cache_ref= 696534343 items=   1000000 avg_time= 396101010 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                       376346796 ns    386940502 ns            2         881.392k           364.925M        6.95155M       248.839M    1.20257G               8.7584           2.65777       3.19616G           1.1314G                    8.24004                    0.940816           1.39344M    881.837k   137.305M       347.935M/s   6.95156M   248.841M   1.20289G         8.76073    2.65712/s 3.19623G/s      1.1314G               8.24004               0.940565   524.288k        1.3931M/s [BEST: throughput=  0.36 GB/s doc_throughput=     2 docs/s instructions=  1131399189 cycles=  1202571840 branch_miss=  881392 cache_miss= 6951550 cache_ref= 248839132 items=    524288 avg_time= 376346796 ns]
kostya<simdjson_ondemand>/manual_time                  256581583 ns    267186224 ns            3         898.069k           535.214M        5.28298M       145.062M    820.144M              5.97316           3.89799       3.19691G          791.061M                    5.76134                    0.964539           2.04367M    897.419k   137.305M       510.342M/s   5.28297M    145.06M   820.118M         5.97296     3.8974/s 3.19632G/s     791.061M               5.76134                0.96457   524.288k       2.04336M/s [BEST: throughput=  0.54 GB/s doc_throughput=     3 docs/s instructions=   791060726 cycles=   820144243 branch_miss=  898069 cache_miss= 5282977 cache_ref= 145061983 items=    524288 avg_time= 256581583 ns]
kostya<yyjson>/manual_time                             284523188 ns    295105834 ns            2         2.96751M           483.262M        7.98091M        328.91M    865.665M              6.30468           3.51963       3.04682G          948.794M                    6.91012                     1.09603            1.8453M    2.96336M   137.305M       460.223M/s   7.98109M   328.916M   866.817M         6.31308    3.51465/s 3.04656G/s     948.794M               6.91012                1.09457   524.288k       1.84269M/s [BEST: throughput=  0.48 GB/s doc_throughput=     3 docs/s instructions=   948793709 cycles=   865664569 branch_miss= 2967508 cache_miss= 7980910 cache_ref= 328909624 items=    524288 avg_time= 284523187 ns]
kostya<yyjson_insitu>/manual_time                      266585370 ns    277206261 ns            3         2.93231M           515.565M        5.84142M       294.443M    829.358M              6.04026           3.75489       3.11414G          927.339M                    6.75387                     1.11814           1.96864M     2.9327M   137.305M       491.191M/s   5.84065M   294.476M   830.072M         6.04546    3.75114/s 3.11372G/s     927.339M               6.75387                1.11718   524.288k       1.96668M/s [BEST: throughput=  0.52 GB/s doc_throughput=     3 docs/s instructions=   927339470 cycles=   829357960 branch_miss= 2932306 cache_miss= 5841421 cache_ref= 294443350 items=    524288 avg_time= 266585370 ns]
kostya<rapidjson>/manual_time                          588152753 ns    598750624 ns            1         6.24277M           233.451M        5.34467M       1.21185G    1.84583G              13.4433           1.70024       3.13835G          2.46967G                    17.9868                     1.33798           891.415k    6.24277M   137.305M       222.636M/s   5.34467M   1.21185G   1.84583G         13.4433    1.70024/s 3.13835G/s     2.46967G               17.9868                1.33798   524.288k       891.415k/s [BEST: throughput=  0.23 GB/s doc_throughput=     1 docs/s instructions=  2469674054 cycles=  1845827481 branch_miss= 6242770 cache_miss= 5344668 cache_ref=1211845038 items=    524288 avg_time= 588152753 ns]
kostya<rapidjson_lossless>/manual_time                 624848326 ns    635454092 ns            1         5.70015M           219.741M        5.34463M       1.34948G    1.96295G              14.2963           1.60039       3.14148G          2.71451G                    19.7699                     1.38287           839.064k    5.70015M   137.305M       209.562M/s   5.34463M   1.34948G   1.96295G         14.2963    1.60039/s 3.14148G/s     2.71451G               19.7699                1.38287   524.288k       839.064k/s [BEST: throughput=  0.22 GB/s doc_throughput=     1 docs/s instructions=  2714508718 cycles=  1962951311 branch_miss= 5700147 cache_miss= 5344628 cache_ref=1349479572 items=    524288 avg_time= 624848326 ns]
kostya<rapidjson_insitu>/manual_time                   534571955 ns    545205136 ns            1         5.43445M            256.85M        6.33126M       909.669M    1.67471G               12.197           1.87066        3.1328G          1.99322G                    14.5167                     1.19019           980.762k    5.43445M   137.305M       244.952M/s   6.33126M   909.669M   1.67471G          12.197    1.87066/s  3.1328G/s     1.99322G               14.5167                1.19019   524.288k       980.762k/s [BEST: throughput=  0.26 GB/s doc_throughput=     1 docs/s instructions=  1993216220 cycles=  1674708286 branch_miss= 5434446 cache_miss= 6331257 cache_ref= 909669017 items=    524288 avg_time= 534571955 ns]
distinct_user_id<simdjson_dom>/manual_time               1572051 ns      1656999 ns          446          13.378k           409.117M         26.477k       946.106k    4.94161M              7.82501           647.834       3.20135G          3.87901M                    6.14239                    0.784969           74.5009k    13.3468k   631.515k       383.104M/s   26.4892k   949.139k   5.02612M         7.95883    636.112/s 3.19718G/s     3.87901M               6.14239                0.77177        115       73.1528k/s [BEST: throughput=  0.41 GB/s doc_throughput=   647 docs/s instructions=     3879014 cycles=     4941614 branch_miss=   13378 cache_miss=   26477 cache_ref=    946106 items=       115 avg_time=   1572051 ns]
distinct_user_id<simdjson_ondemand>/manual_time          1043585 ns      1124408 ns          670           9.742k           609.565M         22.557k        427.99k    3.31705M              5.25253           965.242       3.20176G          2.66992M                     4.2278                    0.804907           111.003k    11.4385k   631.515k       577.106M/s   22.5684k   428.964k   3.33772M         5.28526    958.235/s 3.19832G/s     2.66992M                4.2278               0.799923        115       110.197k/s [BEST: throughput=  0.61 GB/s doc_throughput=   965 docs/s instructions=     2669919 cycles=     3317053 branch_miss=    9742 cache_miss=   22557 cache_ref=    427990 items=       115 avg_time=   1043585 ns]
distinct_user_id<yyjson>/manual_time                     1163455 ns      1246909 ns          607          45.898k           614.454M         24.268k       1.39659M    3.29107M              5.21139           972.984       3.20216G          3.23372M                    5.12058                    0.982575           111.893k    45.3683k   631.515k       517.648M/s   24.2646k   1.39645M   3.49772M         5.53862    859.509/s 3.00632G/s     3.23387M               5.12081               0.924566        115       98.8435k/s [BEST: throughput=  0.61 GB/s doc_throughput=   972 docs/s instructions=     3233721 cycles=     3291069 branch_miss=   45898 cache_miss=   24268 cache_ref=   1396593 items=       115 avg_time=   1163455 ns]
distinct_user_id<yyjson_insitu>/manual_time              1082337 ns      1166389 ns          648          45.241k           644.703M         14.362k       1.23644M    3.13619M              4.96614           1020.88       3.20169G          3.13466M                    4.96371                     0.99951           117.402k      45.29k   631.515k       556.444M/s   14.3801k   1.23725M   3.34843M         5.30221    923.927/s  3.0937G/s     3.13481M               4.96395               0.936204        115       106.252k/s [BEST: throughput=  0.64 GB/s doc_throughput=  1020 docs/s instructions=     3134656 cycles=     3136194 branch_miss=   45241 cache_miss=   14362 cache_ref=   1236437 items=       115 avg_time=   1082337 ns]
distinct_user_id<rapidjson>/manual_time                  4561347 ns      4645917 ns          153          78.811k           140.519M         13.561k       13.3632M    14.3834M               22.776            222.51       3.20045G          20.6314M                    32.6697                     1.43439           25.5887k    79.1008k   631.515k       132.035M/s   13.7681k   13.3644M   14.4301M           22.85    219.233/s 3.16357G/s      20.632M               32.6706                1.42978        115       25.2119k/s [BEST: throughput=  0.14 GB/s doc_throughput=   222 docs/s instructions=    20631418 cycles=    14383376 branch_miss=   78811 cache_miss=   13561 cache_ref=  13363184 items=       115 avg_time=   4561346 ns]
distinct_user_id<rapidjson_insitu>/manual_time           2960631 ns      3046297 ns          238          60.868k           217.623M         14.159k       5.84602M    9.14188M              14.4761           344.604       3.15033G          12.7754M                    20.2297                     1.39745           39.6295k    61.0155k   631.515k       203.423M/s   14.2081k   5.85107M   9.32319M         14.7632    337.766/s 3.14906G/s     12.7754M               20.2298                1.37029        115       38.8431k/s [BEST: throughput=  0.22 GB/s doc_throughput=   344 docs/s instructions=    12775362 cycles=     9141882 branch_miss=   60868 cache_miss=   14159 cache_ref=   5846021 items=       115 avg_time=   2960630 ns]
find_tweet<simdjson_dom>/manual_time                     1522681 ns      1603338 ns          460          13.126k           420.187M         23.522k       928.992k    4.78072M              7.57024           665.363       3.18092G           3.7886M                    5.99923                    0.792475            665.363    13.1655k   631.515k       395.526M/s   23.5131k   932.903k   4.86935M         7.71058    656.736/s 3.19788G/s      3.7886M               5.99923               0.778051          1        656.736/s [BEST: throughput=  0.42 GB/s doc_throughput=   665 docs/s instructions=     3788603 cycles=     4780722 branch_miss=   13126 cache_miss=   23522 cache_ref=    928992 items=         1 avg_time=   1522681 ns]
find_tweet<simdjson_ondemand>/manual_time                 903990 ns       984719 ns          774           4.532k           700.412M         11.568k       234.378k    2.88698M              4.57151           1.1091k       3.20194G          2.11682M                    3.35197                    0.733231            1.1091k    4.67181k   631.515k       666.224M/s   11.5779k   234.681k   2.89101M         4.57789   1.10621k/s 3.19805G/s     2.11682M               3.35197               0.732209          1       1.10621k/s [BEST: throughput=  0.70 GB/s doc_throughput=  1109 docs/s instructions=     2116821 cycles=     2886977 branch_miss=    4532 cache_miss=   11568 cache_ref=    234378 items=         1 avg_time=    903989 ns]
find_tweet<yyjson>/manual_time                           1116698 ns      1200955 ns          627           45.75k           641.646M         21.725k       1.38105M    3.15113M               4.9898           1016.04       3.20168G           3.1769M                     5.0306                     1.00818            1016.04    45.3008k   631.515k       539.322M/s   21.7528k   1.38108M   3.35001M         5.30472    895.497/s 2.99993G/s     3.17713M               5.03096               0.948393          1        895.497/s [BEST: throughput=  0.64 GB/s doc_throughput=  1016 docs/s instructions=     3176902 cycles=     3151133 branch_miss=   45750 cache_miss=   21725 cache_ref=   1381054 items=         1 avg_time=   1116697 ns]
find_tweet<yyjson_insitu>/manual_time                    1040002 ns      1126191 ns          676          45.446k           670.027M         11.796k       1.22288M    3.01784M              4.77873           1060.98       3.20188G          3.07799M                    4.87398                     1.01993            1060.98    45.2874k   631.515k       579.095M/s   11.8481k   1.22211M   3.21333M         5.08829    961.537/s 3.08974G/s     3.07836M               4.87457               0.957997          1        961.537/s [BEST: throughput=  0.67 GB/s doc_throughput=  1060 docs/s instructions=     3077993 cycles=     3017840 branch_miss=   45446 cache_miss=   11796 cache_ref=   1222882 items=         1 avg_time=   1040001 ns]
find_tweet<rapidjson>/manual_time                        5386990 ns      4886645 ns          154          79.109k           141.536M         10.842k       13.3587M      14.28M              22.6123           224.121       3.20044G          20.5746M                    32.5797                      1.4408            224.121    78.9807k   631.515k       111.799M/s   11.0663k   13.3565M   14.3169M         22.6707    185.632/s 2.65768G/s     20.5751M               32.5805                1.43712          1        185.632/s [BEST: throughput=  0.14 GB/s doc_throughput=   224 docs/s instructions=    20574589 cycles=    14279988 branch_miss=   79109 cache_miss=   10842 cache_ref=  13358690 items=         1 avg_time=   5386990 ns]
find_tweet<rapidjson_insitu>/manual_time                 2906391 ns      2993569 ns          243          60.737k           222.145M         10.702k       5.82974M    9.09851M              14.4074           351.765       3.20053G          12.7165M                    20.1365                     1.39764            351.765    60.8741k   631.515k       207.219M/s     10.89k   5.83547M   9.14776M         14.4854    344.069/s 3.14746G/s      12.717M               20.1373                1.39017          1        344.069/s [BEST: throughput=  0.22 GB/s doc_throughput=   351 docs/s instructions=    12716481 cycles=     9098513 branch_miss=   60737 cache_miss=   10702 cache_ref=   5829736 items=         1 avg_time=   2906390 ns]
