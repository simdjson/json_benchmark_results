run_benchmark: v0.8.0~20 /home/jkeiser/simdjson_benchmark_results/v0.7.0/18/skylake-gcc10.2-native.json -DCMAKE_CXX_FLAGS=-march=native
git reset --hard v0.8.0~20
HEAD is now at f29b70c6 Adding GitHub Actions VS - without exceptions. (#1362)
cmake -DCMAKE_CXX_FLAGS=-march=native ..
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- git Version: v0.2.1-f29b70c6
-- Version: 0.2.1
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
make[1]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[2]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 72%] Built target benchmark
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 72%] Built target generated-data
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
Scanning dependencies of target simdjson
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 81%] Building CXX object src/CMakeFiles/simdjson.dir/simdjson.cpp.o
[ 81%] Linking CXX shared library ../libsimdjson.so
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 81%] Built target simdjson
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 90%] Built target yyjson
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
Scanning dependencies of target bench_ondemand
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 90%] Building CXX object benchmark/CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o
[100%] Linking CXX executable bench_ondemand
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[100%] Built target bench_ondemand
make[2]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[1]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/18/skylake-gcc10.2-native.json --benchmark_out_format=json
2021-01-23 05:28:52
Running benchmark/bench_ondemand
Run on (32 X 3300 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x32)
  L1 Instruction 32 KiB (x32)
  L2 Unified 256 KiB (x16)
Load Average: 1.03, 1.05, 1.00
simdjson::dom implementation:      arm64
simdjson::ondemand implementation: arm64

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                 1580847 ns      1649941 ns          443          17.348k           400.362M         25.929k       907.532k    5.04953M              7.99591           633.971       3.20126G          3.92138M                    6.20949                    0.776583           63.3971k    17.5993k   631.515k       380.973M/s     25.94k    907.81k   5.05511M         8.00473    632.572/s 3.19772G/s     3.92139M               6.20949               0.775728        100       63.2572k/s [BEST: throughput=  0.40 GB/s doc_throughput=   633 docs/s instructions=     3921383 cycles=     5049535 branch_miss=   17348 cache_miss=   25929 cache_ref=    907532 items=       100 avg_time=   1580847 ns]
partial_tweets<simdjson_ondemand>/manual_time            1065932 ns      1134766 ns          657           6.461k           593.772M         22.773k       402.478k    3.40545M              5.39251           940.234       3.20192G          2.75992M                    4.37031                    0.810441           94.0234k    6.70172k   631.515k       565.008M/s   22.7633k   402.679k   3.40903M         5.39817    938.146/s 3.19816G/s     2.75991M               4.37031                0.80959        100       93.8146k/s [BEST: throughput=  0.59 GB/s doc_throughput=   940 docs/s instructions=     2759917 cycles=     3405450 branch_miss=    6461 cache_miss=   22773 cache_ref=    402478 items=       100 avg_time=   1065931 ns]
partial_tweets<yyjson>/manual_time                       1242560 ns      1313882 ns          566           48.38k           575.635M         24.431k        1.4919M    3.51268M              5.56231           911.514       3.20186G          3.54867M                    5.61929                     1.01024           91.1514k    48.2411k   631.515k       484.693M/s   24.3686k    1.4921M   3.74859M         5.93587     804.79/s 3.01683G/s     3.54889M               5.61964               0.946725        100        80.479k/s [BEST: throughput=  0.58 GB/s doc_throughput=   911 docs/s instructions=     3548665 cycles=     3512683 branch_miss=   48380 cache_miss=   24431 cache_ref=   1491901 items=       100 avg_time=   1242559 ns]
partial_tweets<yyjson_insitu>/manual_time                1160603 ns      1233166 ns          603          48.133k            598.36M         14.479k       1.33343M    3.37935M              5.35119           947.499       3.20194G          3.44997M                    5.46301                      1.0209           94.7499k    48.1355k   631.515k        518.92M/s   14.4596k   1.33331M   3.59771M         5.69695    861.621/s 3.09986G/s     3.45012M               5.46325               0.958977        100       86.1621k/s [BEST: throughput=  0.60 GB/s doc_throughput=   947 docs/s instructions=     3449975 cycles=     3379355 branch_miss=   48133 cache_miss=   14479 cache_ref=   1333432 items=       100 avg_time=   1160602 ns]
partial_tweets<rapidjson>/manual_time                    2830527 ns      2903574 ns          247          80.246k           229.331M         12.856k       6.28113M    8.81426M              13.9573           363.145       3.20085G          13.4022M                    21.2224                     1.52052           36.3145k    80.1581k   631.515k       212.773M/s   13.0708k    6.2843M   8.84722M         14.0095    353.291/s 3.12565G/s     13.4029M               21.2235                1.51493        100       35.3291k/s [BEST: throughput=  0.23 GB/s doc_throughput=   363 docs/s instructions=    13402247 cycles=     8814258 branch_miss=   80246 cache_miss=   12856 cache_ref=   6281127 items=       100 avg_time=   2830526 ns]
partial_tweets<rapidjson_insitu>/manual_time             2128601 ns      2201393 ns          329          60.579k           305.047M         13.657k       3.47908M    6.62676M              10.4934            483.04       3.20099G          9.78029M                     15.487                     1.47588            48.304k    60.6253k   631.515k       282.937M/s   13.8007k   3.47905M   6.65882M         10.5442    469.792/s 3.12826G/s     9.78084M               15.4879                1.46886        100       46.9792k/s [BEST: throughput=  0.31 GB/s doc_throughput=   483 docs/s instructions=     9780292 cycles=     6626759 branch_miss=   60579 cache_miss=   13657 cache_ref=   3479084 items=       100 avg_time=   2128601 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                 311004164 ns    314595324 ns            2         1.90954M           147.941M        3.98112M       246.736M    993.911M              21.6073            3.2162       3.19662G          1.10647G                    24.0544                     1.11325            3.2162M    1.90973M   45.9988M       141.052M/s   3.98116M   246.736M   994.138M         21.6123    3.21539/s 3.19654G/s     1.10647G               24.0544                  1.113      1000k       3.21539M/s [BEST: throughput=  0.15 GB/s doc_throughput=     3 docs/s instructions=  1106472996 cycles=   993910507 branch_miss= 1909536 cache_miss= 3981121 cache_ref= 246736379 items=   1000000 avg_time= 311004164 ns]
large_random<simdjson_ondemand>/manual_time            183772194 ns    187372968 ns            4         1.19267M           250.338M         2.3177M       134.459M    587.438M              12.7707           5.44228         3.197G          689.959M                    14.9995                     1.17452           5.44228M    1.19302M   45.9988M       238.708M/s   2.31773M    134.46M   587.454M         12.7711    5.44152/s 3.19664G/s     689.959M               14.9995                1.17449      1000k       5.44152M/s [BEST: throughput=  0.25 GB/s doc_throughput=     5 docs/s instructions=   689958645 cycles=   587438191 branch_miss= 1192667 cache_miss= 2317698 cache_ref= 134459187 items=   1000000 avg_time= 183772193 ns]
large_random<simdjson_ondemand_unordered>/manual_time  184759727 ns    188355317 ns            4         1.20052M           248.986M        2.31811M       138.476M    590.585M              12.8391           5.41288       3.19677G          693.959M                    15.0865                     1.17504           5.41288M    1.20044M   45.9988M       237.432M/s   2.31805M   138.475M    590.59M         12.8393    5.41243/s 3.19653G/s     693.959M               15.0865                1.17503      1000k       5.41243M/s [BEST: throughput=  0.25 GB/s doc_throughput=     5 docs/s instructions=   693958643 cycles=   590584874 branch_miss= 1200517 cache_miss= 2318115 cache_ref= 138475724 items=   1000000 avg_time= 184759726 ns]
large_random<yyjson>/manual_time                       204291411 ns    207890038 ns            3         1.61768M             225.2M        4.91352M       235.109M    627.946M              13.6514           4.89579       3.07429G          908.191M                    19.7438                     1.44629           4.89579M    1.61725M   45.9988M       214.732M/s    4.9135M   235.114M   628.135M         13.6555    4.89497/s  3.0747G/s     908.191M               19.7438                1.44585      1000k       4.89497M/s [BEST: throughput=  0.23 GB/s doc_throughput=     4 docs/s instructions=   908191162 cycles=   627946113 branch_miss= 1617677 cache_miss= 4913517 cache_ref= 235109471 items=   1000000 avg_time= 204291411 ns]
large_random<yyjson_insitu>/manual_time                198413907 ns    202013679 ns            4         1.61792M           231.921M        4.19665M       223.612M    616.037M              13.3925           5.04189       3.10599G          901.004M                    19.5876                     1.46258           5.04189M    1.61558M   45.9988M       221.093M/s   4.19667M   223.601M   616.194M         13.3959    5.03997/s  3.1056G/s     901.004M               19.5876                1.46221      1000k       5.03997M/s [BEST: throughput=  0.23 GB/s doc_throughput=     5 docs/s instructions=   901003525 cycles=   616036784 branch_miss= 1617919 cache_miss= 4196655 cache_ref= 223612157 items=   1000000 avg_time= 198413906 ns]
large_random<rapidjson>/manual_time                    351646604 ns    355264324 ns            2         1.95131M           131.104M         4.9529M       764.742M     1095.5M              23.8158           2.85016       3.12234G          1.67651G                    36.4467                     1.53036           2.85016M    1.94416M   45.9988M        124.75M/s   4.95361M   764.753M    1095.7M         23.8202    2.84376/s 3.11592G/s     1.67651G               36.4469                1.53008      1000k       2.84376M/s [BEST: throughput=  0.13 GB/s doc_throughput=     2 docs/s instructions=  1676505490 cycles=  1095497978 branch_miss= 1951313 cache_miss= 4952895 cache_ref= 764742312 items=   1000000 avg_time= 351646604 ns]
large_random<rapidjson_lossless>/manual_time           439619597 ns    397093424 ns            2         1.91728M           117.161M        4.95274M        955.13M    1.22852G              26.7076           2.54704       3.12908G          1.97648G                    42.9681                     1.60884           2.54704M    1.91189M   45.9988M       99.7859M/s   4.95352M   955.129M   1.22877G         26.7131    2.27469/s 2.79508G/s     1.97649G               42.9682                1.60851      1000k       2.27469M/s [BEST: throughput=  0.12 GB/s doc_throughput=     2 docs/s instructions=  1976481659 cycles=  1228515455 branch_miss= 1917277 cache_miss= 4952740 cache_ref= 955129776 items=   1000000 avg_time= 439619596 ns]
large_random<rapidjson_insitu>/manual_time             336834587 ns    340471824 ns            2          2.0641M             136.8M        5.66951M       749.428M    1048.74M              22.7994           2.97398       3.11895G           1.5665G                    34.0553                     1.49369           2.97398M    2.09326M   45.9988M       130.236M/s   5.67035M   749.439M   1048.28M         22.7894    2.96882/s 3.11216G/s     1.56651G               34.0554                1.49435      1000k       2.96882M/s [BEST: throughput=  0.14 GB/s doc_throughput=     2 docs/s instructions=  1566500919 cycles=  1048744164 branch_miss= 2064104 cache_miss= 5669506 cache_ref= 749427545 items=   1000000 avg_time= 336834587 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                       381576569 ns    392224769 ns            2          1097.5k           359.863M        6.94654M       246.884M    1.21961G              8.88249            2.6209       3.19648G          1.14604G                    8.34671                    0.939681           1.37411M    1097.86k   137.305M       343.166M/s   6.94657M   246.884M   1.21972G         8.88328    2.62071/s 3.19652G/s     1.14604G               8.34671               0.939598   524.288k         1.374M/s [BEST: throughput=  0.36 GB/s doc_throughput=     2 docs/s instructions=  1146044348 cycles=  1219609779 branch_miss= 1097496 cache_miss= 6946543 cache_ref= 246883623 items=    524288 avg_time= 381576569 ns]
kostya<simdjson_ondemand>/manual_time                  258298979 ns    268973498 ns            3         1.19939M           532.487M        5.28228M       137.072M    824.185M              6.00258           3.87814        3.1963G          796.072M                    5.79784                     0.96589           2.03326M    1.25591M   137.305M       506.948M/s   5.28226M   137.237M   825.667M         6.01338    3.87148/s 3.19655G/s     796.072M               5.79784               0.964156   524.288k       2.02977M/s [BEST: throughput=  0.53 GB/s doc_throughput=     3 docs/s instructions=   796071985 cycles=   824184800 branch_miss= 1199389 cache_miss= 5282278 cache_ref= 137072376 items=    524288 avg_time= 258298978 ns]
kostya<yyjson>/manual_time                             297277367 ns    307949880 ns            2         1.61774M           462.141M         7.9809M       346.612M    908.458M              6.61635            3.3658       3.05769G          1052.15M                    7.66288                     1.15817           1.76465M    1.59494M   137.305M       440.478M/s    7.9841M   346.572M   908.936M         6.61983    3.36386/s 3.05754G/s     1052.15M               7.66288                1.15756   524.288k       1.76363M/s [BEST: throughput=  0.46 GB/s doc_throughput=     3 docs/s instructions=  1052152092 cycles=   908458332 branch_miss= 1617745 cache_miss= 7980899 cache_ref= 346611883 items=    524288 avg_time= 297277366 ns]
kostya<yyjson_insitu>/manual_time                      280135377 ns    290842924 ns            2         1.58718M           490.187M        5.84339M       312.211M    873.433M              6.36126           3.57006       3.11821G           1030.7M                    7.50663                     1.18005           1.87174M    1.59476M   137.305M       467.432M/s   5.84484M   312.257M    873.56M         6.36219     3.5697/s 3.11835G/s      1030.7M               7.50663                1.17988   524.288k       1.87155M/s [BEST: throughput=  0.49 GB/s doc_throughput=     3 docs/s instructions=  1030698252 cycles=   873433039 branch_miss= 1587181 cache_miss= 5843391 cache_ref= 312210549 items=    524288 avg_time= 280135377 ns]
kostya<rapidjson>/manual_time                          563315052 ns    574022869 ns            1         7.01007M           243.745M         5.3865M       974.762M    1.76674G              12.8673           1.77521       3.13633G          2.38981G                    17.4051                     1.35267           930.719k    7.01007M   137.305M       232.453M/s    5.3865M   974.762M   1.76674G         12.8673    1.77521/s 3.13633G/s     2.38981G               17.4051                1.35267   524.288k       930.719k/s [BEST: throughput=  0.24 GB/s doc_throughput=     1 docs/s instructions=  2389812643 cycles=  1766740961 branch_miss= 7010075 cache_miss= 5386495 cache_ref= 974761971 items=    524288 avg_time= 563315052 ns]
kostya<rapidjson_lossless>/manual_time                 590663846 ns    601321181 ns            1         7.12113M           232.459M        5.38598M       1093.72M    1.85421G              13.5043           1.69301        3.1392G          2.56492G                    18.6804                     1.38329           887.625k    7.12113M   137.305M        221.69M/s   5.38598M   1093.72M   1.85421G         13.5043    1.69301/s  3.1392G/s     2.56492G               18.6804                1.38329   524.288k       887.625k/s [BEST: throughput=  0.23 GB/s doc_throughput=     1 docs/s instructions=  2564918549 cycles=  1854213923 branch_miss= 7121133 cache_miss= 5385983 cache_ref=1093723308 items=    524288 avg_time= 590663846 ns]
kostya<rapidjson_insitu>/manual_time                   531031049 ns    541722646 ns            1         6.04613M           258.563M        6.35679M       874.451M    1.66387G               12.118           1.88313       3.13328G          2.17945G                    15.8731                     1.30987           987.302k    6.04613M   137.305M       246.585M/s   6.35679M   874.451M   1.66387G          12.118    1.88313/s 3.13328G/s     2.17945G               15.8731                1.30987   524.288k       987.302k/s [BEST: throughput=  0.26 GB/s doc_throughput=     1 docs/s instructions=  2179452271 cycles=  1663866686 branch_miss= 6046133 cache_miss= 6356787 cache_ref= 874451020 items=    524288 avg_time= 531031049 ns]
distinct_user_id<simdjson_dom>/manual_time               1574865 ns      1656140 ns          445          17.324k           403.431M         26.505k       892.414k    5.01121M              7.93522           638.831       3.20132G          3.85168M                    6.09911                    0.768613           73.4655k    17.4106k   631.515k        382.42M/s   26.5116k   887.648k   5.03617M         7.97475    634.975/s 3.19784G/s     3.85168M               6.09911               0.764802        115       73.0221k/s [BEST: throughput=  0.40 GB/s doc_throughput=   638 docs/s instructions=     3851681 cycles=     5011212 branch_miss=   17324 cache_miss=   26505 cache_ref=    892414 items=       115 avg_time=   1574865 ns]
distinct_user_id<simdjson_ondemand>/manual_time          1051384 ns      1133611 ns          664           6.509k           602.432M         22.392k       378.809k    3.35603M              5.31426           953.947       3.20148G          2.69546M                    4.26824                    0.803168           109.704k    6.69932k   631.515k       572.826M/s   22.3906k   379.133k   3.36213M         5.32391    951.128/s 3.19781G/s     2.69546M               4.26824               0.801712        115        109.38k/s [BEST: throughput=  0.60 GB/s doc_throughput=   953 docs/s instructions=     2695459 cycles=     3356034 branch_miss=    6509 cache_miss=   22392 cache_ref=    378809 items=       115 avg_time=   1051383 ns]
distinct_user_id<yyjson>/manual_time                     1221892 ns      1306328 ns          578           48.43k           584.022M         24.227k       1.47881M    3.46262M              5.48304           924.795       3.20221G          3.51463M                    5.56539                     1.01502           106.351k    47.9653k   631.515k       492.891M/s   24.1855k   1.47836M   3.68802M         5.83996    818.403/s 3.01829G/s     3.51478M               5.56563               0.953026        115       94.1163k/s [BEST: throughput=  0.58 GB/s doc_throughput=   924 docs/s instructions=     3514628 cycles=     3462621 branch_miss=   48430 cache_miss=   24227 cache_ref=   1478807 items=       115 avg_time=   1221892 ns]
distinct_user_id<yyjson_insitu>/manual_time              1139105 ns      1223930 ns          615            48.3k           608.377M         14.235k       1.31933M    3.32355M              5.26282           963.361       3.20178G          3.41573M                    5.40878                     1.02773           110.787k    47.9505k   631.515k       528.713M/s   14.2629k   1.31892M   3.53099M         5.59129    877.882/s 3.09979G/s     3.41572M               5.40877               0.967356        115       100.956k/s [BEST: throughput=  0.61 GB/s doc_throughput=   963 docs/s instructions=     3415728 cycles=     3323550 branch_miss=   48300 cache_miss=   14235 cache_ref=   1319332 items=       115 avg_time=   1139104 ns]
distinct_user_id<rapidjson>/manual_time                  2811521 ns      2896263 ns          248          79.924k           230.735M         13.541k       6.27469M     8.7602M              13.8717           365.368        3.2007G           13.366M                     21.165                     1.52576           42.0173k    80.0353k   631.515k       214.211M/s    13.743k   6.27011M   8.81874M         13.9644    355.679/s 3.13664G/s     13.3666M               21.1659                 1.5157        115       40.9031k/s [BEST: throughput=  0.23 GB/s doc_throughput=   365 docs/s instructions=    13365991 cycles=     8760203 branch_miss=   79924 cache_miss=   13541 cache_ref=   6274686 items=       115 avg_time=   2811521 ns]
distinct_user_id<rapidjson_insitu>/manual_time           2117441 ns      2203100 ns          333          60.599k           306.577M         14.059k        3.4683M    6.59356M              10.4409           485.463       3.20093G          9.74344M                    15.4287                     1.47772           55.8283k    60.5911k   631.515k       284.428M/s   14.2213k   3.46819M   6.62699M         10.4938    472.268/s 3.12971G/s     9.74398M               15.4295                1.47035        115       54.3108k/s [BEST: throughput=  0.31 GB/s doc_throughput=   485 docs/s instructions=     9743437 cycles=     6593559 branch_miss=   60599 cache_miss=   14059 cache_ref=   3468303 items=       115 avg_time=   2117441 ns]
find_tweet<simdjson_dom>/manual_time                     1531653 ns      1612900 ns          458          17.046k           414.887M         23.495k       876.034k    4.87281M              7.71606           656.971       3.20129G          3.76236M                    5.95767                    0.772113            656.971    17.0717k   631.515k       393.209M/s   23.4813k   870.372k   4.89757M         7.75528    652.889/s 3.19758G/s     3.76236M               5.95767               0.768209          1        652.889/s [BEST: throughput=  0.41 GB/s doc_throughput=   656 docs/s instructions=     3762360 cycles=     4872808 branch_miss=   17046 cache_miss=   23495 cache_ref=    876034 items=         1 avg_time=   1531652 ns]
find_tweet<simdjson_ondemand>/manual_time                 914487 ns       995940 ns          765           3.981k           691.953M         11.561k       193.928k    2.92224M              4.62735            1095.7       3.20191G          2.05902M                    3.26045                    0.704603             1095.7    4.07825k   631.515k       658.576M/s   11.5615k   193.924k   2.92497M         4.63167    1093.51/s 3.19848G/s     2.05902M               3.26045               0.703947          1        1093.51/s [BEST: throughput=  0.69 GB/s doc_throughput=  1095 docs/s instructions=     2059020 cycles=     2922241 branch_miss=    3981 cache_miss=   11561 cache_ref=    193928 items=         1 avg_time=    914487 ns]
find_tweet<yyjson>/manual_time                           1185212 ns      1269806 ns          592           47.94k           591.879M          21.66k        1.4606M    3.35655M              5.31508           937.237       3.14589G          3.45929M                    5.47776                     1.03061            937.237    47.8035k   631.515k       508.145M/s   21.6904k   1.46158M    3.5687M         5.65102    843.731/s 3.01102G/s     3.45951M               5.47811               0.969403          1        843.731/s [BEST: throughput=  0.59 GB/s doc_throughput=   937 docs/s instructions=     3459290 cycles=     3356555 branch_miss=   47940 cache_miss=   21660 cache_ref=   1460603 items=         1 avg_time=   1185211 ns]
find_tweet<yyjson_insitu>/manual_time                    1108442 ns      1194107 ns          633          47.684k           629.312M          11.77k       1.30208M    3.21331M              5.08825           996.512        3.2021G           3.3603M                    5.32101                     1.04574            996.512    47.7697k   631.515k       543.339M/s   11.7823k   1.30211M   3.43126M         5.43337    902.167/s 3.09557G/s     3.36045M               5.32125               0.979364          1        902.167/s [BEST: throughput=  0.63 GB/s doc_throughput=   996 docs/s instructions=     3360295 cycles=     3213308 branch_miss=   47684 cache_miss=   11770 cache_ref=   1302075 items=         1 avg_time=   1108442 ns]
find_tweet<rapidjson>/manual_time                        2787658 ns      2873302 ns          251          80.071k           232.605M         10.828k       6.26553M    8.69011M              13.7607           368.328       3.20082G           13.322M                    21.0953                       1.533            368.328    79.9713k   631.515k       216.045M/s   11.0222k   6.25979M    8.7419M         13.8427    358.724/s 3.13593G/s     13.3225M               21.0961                1.52398          1        358.724/s [BEST: throughput=  0.23 GB/s doc_throughput=   368 docs/s instructions=    13321972 cycles=     8690113 branch_miss=   80071 cache_miss=   10828 cache_ref=   6265532 items=         1 avg_time=   2787658 ns]
find_tweet<rapidjson_insitu>/manual_time                 2492229 ns      2307530 ns          337          60.388k           310.388M         10.742k       3.45577M    6.51244M              10.3124           491.498       3.20085G          9.69936M                    15.3589                     1.48936            491.498    60.5057k   631.515k       241.655M/s   10.9083k   3.45538M   6.53936M          10.355    401.247/s  2.6239G/s     9.69982M               15.3596                 1.4833          1        401.247/s [BEST: throughput=  0.31 GB/s doc_throughput=   491 docs/s instructions=     9699356 cycles=     6512445 branch_miss=   60388 cache_miss=   10742 cache_ref=   3455768 items=         1 avg_time=   2492229 ns]
