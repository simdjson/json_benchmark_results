run_benchmark: v0.8.0~20 /home/jkeiser/simdjson_benchmark_results/v0.7.0/18/skylake-clang11-native.json -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native
git reset --hard v0.8.0~20
HEAD is now at f29b70c6 Adding GitHub Actions VS - without exceptions. (#1362)
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- git Version: v0.2.1-f29b70c6
-- Version: 0.2.1
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES -- failed to compile
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 11
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
make[3]: Nothing to be done for '_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build'.
[ 72%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
make[3]: Nothing to be done for 'jsonexamples/generated/CMakeFiles/generated-data.dir/build'.
[ 72%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/clang++-11  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/src  -march=native -O3 -DNDEBUG -fPIC   -pthread -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/clang++-11 -fPIC -march=native -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.6 -o ../libsimdjson.so.6.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.6.0.0 ../libsimdjson.so.6 ../libsimdjson.so
[ 81%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
make[3]: Nothing to be done for 'dependencies/CMakeFiles/yyjson.dir/build'.
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/clang++-11  -DRAPIDJSON_HAS_STDSTRING -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_COMPETITION_RAPIDJSON -DSIMDJSON_COMPETITION_YYJSON -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/rapidjson/include  -march=native -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/clang++-11  -march=native -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.6.0.0 ../_deps/google_benchmarks/src/libbenchmark.a ../dependencies/libyyjson.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.7.0/18/skylake-clang11-native.json --benchmark_out_format=json
2021-01-24 21:10:39
Running benchmark/bench_ondemand
Run on (4 X 4000 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 256 KiB (x4)
  L3 Unified 8192 KiB (x1)
Load Average: 1.01, 1.01, 0.97
simdjson::dom implementation:      haswell
simdjson::ondemand implementation: haswell

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                  273216 ns       301968 ns         2566           3.663k           2.32719G               0        93.754k    1001.97k              1.58661          3.68509k       3.69234G          2.99337M                    4.73999                     2.98749           368.509k    3.82768k   631.515k       2.15267G/s    2.97038   93.8994k   1008.25k         1.59656   3.66011k/s 3.69032G/s     2.99337M               4.73999                2.96887        100       366.011k/s [BEST: throughput=  2.33 GB/s doc_throughput=  3685 docs/s instructions=     2993372 cycles=     1001969 branch_miss=    3663 cache_miss=       0 cache_ref=     93754 items=       100 avg_time=    273215 ns]
partial_tweets<simdjson_ondemand>/manual_time             179939 ns       208567 ns         3889           2.032k           3.53586G               0        59.219k    659.557k               1.0444          5.59901k       3.69287G          1.94495M                    3.07982                     2.94887           559.901k    2.17283k   631.515k       3.26857G/s  0.0768835   59.1654k   664.183k         1.05173   5.55742k/s 3.69115G/s     1.94495M               3.07982                2.92833        100       555.742k/s [BEST: throughput=  3.54 GB/s doc_throughput=  5599 docs/s instructions=     1944950 cycles=      659557 branch_miss=    2032 cache_miss=       0 cache_ref=     59219 items=       100 avg_time=    179939 ns]
partial_tweets<yyjson>/manual_time                        636535 ns       667490 ns         1095            9.66k            1.8173G             394        77.565k    1.28337M              2.03221          2.87769k       3.69314G           2.9196M                    4.62317                     2.27495           287.769k    7.59905k   631.515k       946.153M/s     1099.5   51.7445k   1.50448M         2.38234   1.57101k/s 2.36355G/s     2.92009M               4.62394                1.94092        100       157.101k/s [BEST: throughput=  1.82 GB/s doc_throughput=  2877 docs/s instructions=     2919603 cycles=     1283371 branch_miss=    9660 cache_miss=     394 cache_ref=     77565 items=       100 avg_time=    636534 ns]
partial_tweets<yyjson_insitu>/manual_time                 426504 ns       455970 ns         1642           6.923k           2.06129G             732        48.171k    1.12801M               1.7862          3.26404k       3.68187G          2.91929M                    4.62267                       2.588           326.404k    7.35682k   631.515k       1.37899G/s    153.618   33.6399k   1.22779M          1.9442   2.34464k/s 2.87873G/s     2.91955M               4.62309                2.37789        100       234.464k/s [BEST: throughput=  2.06 GB/s doc_throughput=  3264 docs/s instructions=     2919288 cycles=     1128011 branch_miss=    6923 cache_miss=     732 cache_ref=     48171 items=       100 avg_time=    426503 ns]
partial_tweets<rapidjson>/manual_time                    2202942 ns      2232285 ns          318          31.849k           315.593M          1.621k        54.255k    7.38693M              11.6972            499.74       3.69154G          21.8944M                    34.6696                     2.96394            49.974k    31.8923k   631.515k       273.389M/s    620.035   34.7407k   7.54183M         11.9424    453.938/s 3.42353G/s     21.8952M               34.6709                2.90317        100       45.3938k/s [BEST: throughput=  0.32 GB/s doc_throughput=   499 docs/s instructions=    21894388 cycles=     7386928 branch_miss=   31849 cache_miss=    1621 cache_ref=     54255 items=       100 avg_time=   2202941 ns]
partial_tweets<rapidjson_insitu>/manual_time             1580094 ns      1609316 ns          444          24.447k           430.716M              41        44.831k    5.41255M              8.57074           682.036       3.69156G          13.3198M                    21.0919                     2.46091           68.2036k    24.9696k   631.515k       381.154M/s    286.194   35.9203k   5.48952M         8.69262    632.874/s 3.47418G/s     13.3204M               21.0928                2.42652        100       63.2874k/s [BEST: throughput=  0.43 GB/s doc_throughput=   682 docs/s instructions=    13319823 cycles=     5412554 branch_miss=   24447 cache_miss=      41 cache_ref=     44831 items=       100 avg_time=   1580093 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                  87725699 ns     91127334 ns            8         929.506k           525.052M        11.0631M       15.6226M    323.171M              7.02563           11.4145       3.68882G          1035.69M                    22.5155                     3.20477           11.4145M    931.229k   45.9988M       500.057M/s   11.0972M   15.6242M   323.617M         7.03535    11.3992/s 3.68897G/s     1035.69M               22.5155                3.20034      1000k       11.3992M/s [BEST: throughput=  0.53 GB/s doc_throughput=    11 docs/s instructions=  1035686045 cycles=   323170597 branch_miss=  929506 cache_miss=11063147 cache_ref=  15622649 items=   1000000 avg_time=  87725698 ns]
large_random<simdjson_ondemand>/manual_time             66074341 ns     69454465 ns           11         920.393k           696.735M         5.6969M       8.09972M    243.552M              5.29475           15.1468       3.68904G          669.142M                     14.547                     2.74743           15.1468M    920.484k   45.9988M       663.917M/s   5.74882M   8.10046M   243.746M         5.29897    15.1345/s 3.68897G/s     669.142M                14.547                2.74524      1000k       15.1345M/s [BEST: throughput=  0.70 GB/s doc_throughput=    15 docs/s instructions=   669141948 cycles=   243552072 branch_miss=  920393 cache_miss= 5696901 cache_ref=   8099720 items=   1000000 avg_time=  66074341 ns]
large_random<simdjson_ondemand_unordered>/manual_time   66067399 ns     69459497 ns           11         895.536k           696.952M        5.71004M       8.09849M    243.476M              5.29311           15.1515       3.68904G          670.142M                    14.5687                     2.75239           15.1515M     899.83k   45.9988M       663.986M/s   5.76354M   8.09926M   243.721M         5.29842    15.1361/s 3.68898G/s     670.142M               14.5687                2.74963      1000k       15.1361M/s [BEST: throughput=  0.70 GB/s doc_throughput=    15 docs/s instructions=   670141947 cycles=   243476376 branch_miss=  895536 cache_miss= 5710041 cache_ref=   8098486 items=   1000000 avg_time=  66067398 ns]
large_random<yyjson>/manual_time                       115717094 ns    119153624 ns            6         677.426k           398.055M        5.96282M       9.28476M    307.031M              6.67476            8.6536       2.65692G          855.681M                    18.6023                     2.78695            8.6536M     677.32k   45.9988M       379.096M/s   5.96267M   9.28375M   307.033M         6.67481    8.64177/s 2.65331G/s     855.681M               18.6023                2.78694      1000k       8.64177M/s [BEST: throughput=  0.40 GB/s doc_throughput=     8 docs/s instructions=   855680944 cycles=   307030793 branch_miss=  677426 cache_miss= 5962822 cache_ref=   9284756 items=   1000000 avg_time= 115717093 ns]
large_random<yyjson_insitu>/manual_time                 97967077 ns    101394429 ns            7         674.978k           470.048M        5.04563M       7.87628M    275.578M              5.99097           10.2187       2.81605G           849.56M                    18.4692                     3.08283           10.2187M    677.633k   45.9988M       447.782M/s   5.05013M   7.88186M   275.753M         5.99478    10.2075/s 2.81475G/s      849.56M               18.4692                3.08088      1000k       10.2075M/s [BEST: throughput=  0.47 GB/s doc_throughput=    10 docs/s instructions=   849559979 cycles=   275577509 branch_miss=  674978 cache_miss= 5045635 cache_ref=   7876277 items=   1000000 avg_time=  97967076 ns]
large_random<rapidjson>/manual_time                    216522533 ns    219952628 ns            3         604.025k           218.427M        7.11955M       10.9733M    718.913M               15.629           4.74853       3.41378G          2.01014G                    43.6999                     2.79608           4.74853M    604.491k   45.9988M       202.602M/s   6.64646M   10.3171M   722.064M         15.6975    4.61846/s 3.33482G/s     2.01015G               43.7001                 2.7839      1000k       4.61846M/s [BEST: throughput=  0.22 GB/s doc_throughput=     4 docs/s instructions=  2010142259 cycles=   718913284 branch_miss=  604025 cache_miss= 7119552 cache_ref=  10973325 items=   1000000 avg_time= 216522532 ns]
large_random<rapidjson_lossless>/manual_time           246917791 ns    250357215 ns            3         592.798k           190.746M         7.1191M       10.9986M    831.659M                18.08           4.14677        3.4487G          2.47511G                    53.8082                     2.97611           4.14677M    592.803k   45.9988M       177.662M/s   6.60897M   10.3388M   834.239M         18.1361    4.04993/s 3.37861G/s     2.47512G               53.8084                2.96692      1000k       4.04993M/s [BEST: throughput=  0.19 GB/s doc_throughput=     4 docs/s instructions=  2475109408 cycles=   831659455 branch_miss=  592798 cache_miss= 7119097 cache_ref=  10998582 items=   1000000 avg_time= 246917791 ns]
large_random<rapidjson_insitu>/manual_time             237168029 ns    240599449 ns            3         588.408k           198.307M        8.23657M       12.6101M    797.719M              17.3422           4.31113       3.43907G          1.72014G                    37.3954                     2.15633           4.31113M    586.266k   45.9988M       184.965M/s   7.74927M   11.9462M   798.197M         17.3526    4.21642/s 3.36553G/s     1.72015G               37.3956                2.15504      1000k       4.21642M/s [BEST: throughput=  0.20 GB/s doc_throughput=     4 docs/s instructions=  1720142132 cycles=   797719178 branch_miss=  588408 cache_miss= 8236565 cache_ref=  12610067 items=   1000000 avg_time= 237168028 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                        93433469 ns    103823204 ns            7         1045.62k           1.47067G        16.2192M       22.8784M    344.408M              2.50834           10.7109       3.68893G          985.796M                    7.17961                     2.86229           5.61562M       1045k   137.305M       1.36862G/s   16.2267M   22.8647M   344.665M         2.51021    10.7028/s 3.68888G/s     985.796M               7.17961                2.86016   524.288k       5.61135M/s [BEST: throughput=  1.47 GB/s doc_throughput=    10 docs/s instructions=   985795976 cycles=   344408241 branch_miss= 1045623 cache_miss=16219173 cache_ref=  22878417 items=    524288 avg_time=  93433469 ns]
kostya<simdjson_ondemand>/manual_time                   63642822 ns     73980464 ns           11         488.677k           2.16014G        10.3743M       14.3447M    234.463M               1.7076           15.7325       3.68867G          654.158M                    4.76427                     2.79003           8.24834M    488.961k   137.305M       2.00926G/s   10.3484M   14.2674M   234.766M         1.70981    15.7127/s  3.6888G/s     654.158M               4.76427                2.78643   524.288k       8.23798M/s [BEST: throughput=  2.16 GB/s doc_throughput=    15 docs/s instructions=   654158322 cycles=   234462590 branch_miss=  488677 cache_miss=10374336 cache_ref=  14344659 items=    524288 avg_time=  63642821 ns]
kostya<yyjson>/manual_time                             173179898 ns    183593684 ns            4         419.789k           793.886M        11.6578M       16.9153M     442.27M              3.22108           5.78191       2.55717G          974.184M                    7.09504                     2.20269           3.03139M    419.776k   137.305M       756.117M/s   11.6584M   16.8957M   442.304M         3.22132    5.77434/s 2.55401G/s     974.185M               7.09504                2.20252   524.288k       3.02742M/s [BEST: throughput=  0.79 GB/s doc_throughput=     5 docs/s instructions=   974184476 cycles=   442270130 branch_miss=  419789 cache_miss=11657768 cache_ref=  16915273 items=    524288 avg_time= 173179898 ns]
kostya<yyjson_insitu>/manual_time                      120152311 ns    130578351 ns            6         416.525k           1.14301G        8.96922M       12.7915M    348.963M              2.54152           8.32462       2.90498G          955.915M                    6.96198                      2.7393            4.3645M    416.547k   137.305M       1089.82M/s   8.97136M   12.7702M   348.964M         2.54153    8.32277/s 2.90435G/s     955.915M               6.96198                2.73929   524.288k       4.36353M/s [BEST: throughput=  1.14 GB/s doc_throughput=     8 docs/s instructions=   955915018 cycles=   348962760 branch_miss=  416525 cache_miss= 8969217 cache_ref=  12791483 items=    524288 avg_time= 120152310 ns]
kostya<rapidjson>/manual_time                          271392811 ns    281828139 ns            3         966.621k           511.824M        8.49793M       12.4145M    908.242M              6.61477           3.72764        3.3856G          2.73767G                    19.9386                     3.01426           1.95436M    967.048k   137.305M        482.49M/s   8.20757M   12.0901M   910.387M          6.6304     3.6847/s  3.3545G/s     2.73767G               19.9386                3.00715   524.288k       1.93184M/s [BEST: throughput=  0.51 GB/s doc_throughput=     3 docs/s instructions=  2737671955 cycles=   908241620 branch_miss=  966621 cache_miss= 8497933 cache_ref=  12414536 items=    524288 avg_time= 271392810 ns]
kostya<rapidjson_lossless>/manual_time                 291631055 ns    302067787 ns            2         982.128k           474.781M        8.51046M       12.4465M    985.241M              7.17556           3.45785       3.40682G          3.00662G                    21.8974                     3.05166           1.81291M    983.833k   137.305M       449.007M/s   8.28266M   12.1666M   987.162M         7.18955    3.42899/s 3.38497G/s     3.00662G               21.8974                3.04573   524.288k       1.79778M/s [BEST: throughput=  0.47 GB/s doc_throughput=     3 docs/s instructions=  3006622393 cycles=   985240856 branch_miss=  982128 cache_miss= 8510463 cache_ref=  12446525 items=    524288 avg_time= 291631055 ns]
kostya<rapidjson_insitu>/manual_time                   273559840 ns    283970750 ns            3         988.749k           507.574M        12.3123M       16.5259M    916.533M              6.67516           3.69669       3.38814G          2.21152G                    16.1067                     2.41292           1.93813M    989.093k   137.305M       478.668M/s    11.994M   16.1478M   918.395M         6.68872    3.65551/s  3.3572G/s     2.21153G               16.1067                2.40803   524.288k       1.91654M/s [BEST: throughput=  0.51 GB/s doc_throughput=     3 docs/s instructions=  2211523656 cycles=   916533243 branch_miss=  988749 cache_miss=12312250 cache_ref=  16525864 items=    524288 avg_time= 273559839 ns]
distinct_user_id<simdjson_dom>/manual_time                269169 ns       299752 ns         2600           3.822k           2.36252G               0        93.928k    986.996k               1.5629          3.74103k       3.69238G          2.92855M                    4.63734                     2.96713           430.219k    3.98672k   631.515k       2.18503G/s   0.668462   93.8292k   993.371k           1.573   3.71513k/s  3.6905G/s     2.92855M               4.63734                2.94809        115        427.24k/s [BEST: throughput=  2.36 GB/s doc_throughput=  3741 docs/s instructions=     2928548 cycles=      986996 branch_miss=    3822 cache_miss=       0 cache_ref=     93928 items=       115 avg_time=    269169 ns]
distinct_user_id<simdjson_ondemand>/manual_time           154065 ns       183841 ns         4542           1.795k           4.13101G               0        55.814k    564.616k             0.894066          6.54142k       3.69339G          1.89446M                    2.99986                      3.3553           752.263k    1.93733k   631.515k        3.8175G/s  0.0744166    55.945k   568.705k        0.900541   6.49076k/s 3.69133G/s     1.89446M               2.99986                3.33117        115       746.438k/s [BEST: throughput=  4.13 GB/s doc_throughput=  6541 docs/s instructions=     1894455 cycles=      564616 branch_miss=    1795 cache_miss=       0 cache_ref=     55814 items=       115 avg_time=    154065 ns]
distinct_user_id<yyjson>/manual_time                      621566 ns       655438 ns         1336           9.614k           1.83692G             468        77.789k    1.26958M              2.01037          2.90874k       3.69288G           2.8777M                    4.55683                     2.26666           334.506k    7.65146k   631.515k       968.939M/s   1.12423k   50.6056k   1.48847M         2.35698   1.60884k/s  2.3947G/s     2.87839M               4.55792                 1.9338        115       185.016k/s [BEST: throughput=  1.84 GB/s doc_throughput=  2908 docs/s instructions=     2877705 cycles=     1269580 branch_miss=    9614 cache_miss=     468 cache_ref=     77789 items=       115 avg_time=    621566 ns]
distinct_user_id<yyjson_insitu>/manual_time               418619 ns       451291 ns         1673           6.899k           2.09206G             322        46.898k    1.10941M              1.75674          3.31276k        3.6752G          2.87739M                    4.55632                     2.59362           380.968k    7.47094k   631.515k       1.40496G/s    53.0574   32.0951k   1.21177M         1.91883   2.38881k/s 2.89468G/s     2.87765M               4.55674                2.37475        115       274.713k/s [BEST: throughput=  2.09 GB/s doc_throughput=  3312 docs/s instructions=     2877385 cycles=     1109408 branch_miss=    6899 cache_miss=     322 cache_ref=     46898 items=       115 avg_time=    418618 ns]
distinct_user_id<rapidjson>/manual_time                  2175496 ns      2206074 ns          321           31.83k           316.596M             434        54.181k    7.36356M              11.6602           501.327       3.69155G          21.8225M                    34.5558                     2.96358           57.6526k    31.8829k   631.515k       276.838M/s   2.54382k   36.7328k   7.50632M         11.8862    459.665/s  3.4504G/s     21.8234M               34.5572                2.90733        115       52.8615k/s [BEST: throughput=  0.32 GB/s doc_throughput=   501 docs/s instructions=    21822485 cycles=     7363560 branch_miss=   31830 cache_miss=     434 cache_ref=     54181 items=       115 avg_time=   2175496 ns]
distinct_user_id<rapidjson_insitu>/manual_time           1592183 ns      1622587 ns          427          24.822k           431.623M              77        45.311k    5.40122M               8.5528           683.473       3.69159G          13.2531M                    20.9863                     2.45373           78.5994k    31.2149k   631.515k        378.26M/s    3.0418k   38.2315k   5.61647M         8.89364    628.068/s 3.52753G/s     13.2534M               20.9867                2.35975        115       72.2279k/s [BEST: throughput=  0.43 GB/s doc_throughput=   683 docs/s instructions=    13253135 cycles=     5401224 branch_miss=   24822 cache_miss=      77 cache_ref=     45311 items=       115 avg_time=   1592183 ns]
find_tweet<simdjson_dom>/manual_time                      257254 ns       286593 ns         2721           3.624k           2.46883G               0        83.359k    944.597k              1.49576          3.90938k       3.69279G          2.84337M                    4.50246                     3.01015           3.90938k     3.6855k   631.515k       2.28624G/s   0.475928   83.3502k   949.495k         1.50352   3.88721k/s 3.69089G/s     2.84337M               4.50246                2.99462          1       3.88721k/s [BEST: throughput=  2.47 GB/s doc_throughput=  3909 docs/s instructions=     2843374 cycles=      944597 branch_miss=    3624 cache_miss=       0 cache_ref=     83359 items=         1 avg_time=    257253 ns]
find_tweet<simdjson_ondemand>/manual_time                 112567 ns       141092 ns         6217             1000           5.63164G               0         32.44k     414.15k             0.655804          8.91766k       3.69325G          1.38745M                    2.19702                     3.35011           8.91766k     1031.37   631.515k       5.22482G/s   0.315425   32.2945k     415.6k          0.6581   8.88356k/s 3.69201G/s     1.38745M               2.19702                3.33843          1       8.88356k/s [BEST: throughput=  5.63 GB/s doc_throughput=  8917 docs/s instructions=     1387450 cycles=      414150 branch_miss=    1000 cache_miss=       0 cache_ref=     32440 items=         1 avg_time=    112567 ns]
find_tweet<yyjson>/manual_time                            610683 ns       641750 ns         1231           9.699k            1.8832G             105        67.932k    1.23853M               1.9612          2.98204k       3.69334G          2.81715M                    4.46094                      2.2746           2.98204k    7.43832k   631.515k       986.207M/s    1098.84   41.7135k   1.45148M         2.29841   1.63751k/s 2.37682G/s     2.81763M                4.4617                1.94121          1       1.63751k/s [BEST: throughput=  1.88 GB/s doc_throughput=  2982 docs/s instructions=     2817152 cycles=     1238528 branch_miss=    9699 cache_miss=     105 cache_ref=     67932 items=         1 avg_time=    610682 ns]
find_tweet<yyjson_insitu>/manual_time                     408030 ns       438484 ns         1716           6.722k           2.16369G             533        38.188k    1074.31k              1.70117          3.42619k       3.68081G          2.81683M                    4.46044                     2.62198           3.42619k    7.23776k   631.515k       1.44142G/s    16.1707   23.2961k   1.17334M         1.85798    2.4508k/s 2.87562G/s      2.8171M               4.46085                2.40092          1        2.4508k/s [BEST: throughput=  2.16 GB/s doc_throughput=  3426 docs/s instructions=     2816832 cycles=     1074314 branch_miss=    6722 cache_miss=     533 cache_ref=     38188 items=         1 avg_time=    408030 ns]
find_tweet<rapidjson>/manual_time                        2165849 ns      2195009 ns          322          31.285k           317.603M           21.7k        48.754k     7.3401M               11.623           502.922       3.69149G          21.7395M                    34.4244                     2.96175            502.922    31.7722k   631.515k       278.071M/s   2.13374k   29.1369k   7.47108M         11.8304    461.713/s 3.44949G/s     21.7401M               34.4254                 2.9099          1        461.713/s [BEST: throughput=  0.32 GB/s doc_throughput=   502 docs/s instructions=    21739526 cycles=     7340097 branch_miss=   31285 cache_miss=   21700 cache_ref=     48754 items=         1 avg_time=   2165848 ns]
find_tweet<rapidjson_insitu>/manual_time                 1568994 ns      1599037 ns          463          24.971k           434.096M               7        36.559k    5.37052M              8.50418           687.389       3.69163G          13.1747M                    20.8621                     2.45316            687.389    28.9996k   631.515k       383.851M/s    2.5495k   28.7537k   5.52603M         8.75043    637.351/s 3.52202G/s     13.1753M               20.8629                2.38422          1        637.351/s [BEST: throughput=  0.43 GB/s doc_throughput=   687 docs/s instructions=    13174736 cycles=     5370518 branch_miss=   24971 cache_miss=       7 cache_ref=     36559 items=         1 avg_time=   1568993 ns]
