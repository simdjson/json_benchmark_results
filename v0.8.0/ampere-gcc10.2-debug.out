run_benchmark: v0.8.0 /home/jkeiser/simdjson_benchmark_results/v0.8.0/ampere-gcc10.2-debug.json -DCMAKE_BUILD_TYPE=Debug
git reset --hard v0.8.0
HEAD is now at c96ff018 Version 0.8.
cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The CXX compiler identification is GNU 10.2.0
-- The C compiler identification is GNU 10.2.0
-- Check for working CXX compiler: /usr/bin/g++-10
-- Check for working CXX compiler: /usr/bin/g++-10 -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Check for working C compiler: /usr/bin/gcc-10
-- Check for working C compiler: /usr/bin/gcc-10 -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed
-- Check if compiler accepts -pthread
-- Check if compiler accepts -pthread - yes
-- Found Threads: TRUE  
-- Looking for fork
-- Looking for fork - found
-- Looking for wait
-- Looking for wait - found
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Found Git: /usr/bin/git (found version "2.27.0") 
-- git Version: v0.2.1-c96ff018
-- Version: 0.2.1
-- Performing Test HAVE_CXX_FLAG_STD_CXX11
-- Performing Test HAVE_CXX_FLAG_STD_CXX11 - Success
-- Performing Test HAVE_CXX_FLAG_WALL
-- Performing Test HAVE_CXX_FLAG_WALL - Success
-- Performing Test HAVE_CXX_FLAG_WEXTRA
-- Performing Test HAVE_CXX_FLAG_WEXTRA - Success
-- Performing Test HAVE_CXX_FLAG_WSHADOW
-- Performing Test HAVE_CXX_FLAG_WSHADOW - Success
-- Performing Test HAVE_CXX_FLAG_WERROR
-- Performing Test HAVE_CXX_FLAG_WERROR - Success
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32 - Failed
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED - Success
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WD654
-- Performing Test HAVE_CXX_FLAG_WD654 - Failed
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY - Failed
-- Performing Test HAVE_CXX_FLAG_COVERAGE
-- Performing Test HAVE_CXX_FLAG_COVERAGE - Success
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Performing Test USE_BOOST_JSON
-- Performing Test USE_BOOST_JSON - Failed
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Found Python3: /usr/bin/python3.8 (found version "3.8.6") found components: Interpreter 
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 10
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
Scanning dependencies of target benchmark
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -g   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -g   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_api_internal.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -g   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_name.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_name.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -g   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_register.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_register.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -g   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_runner.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_runner.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -g   -std=c++17 -o CMakeFiles/benchmark.dir/colorprint.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/colorprint.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -g   -std=c++17 -o CMakeFiles/benchmark.dir/commandlineflags.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/commandlineflags.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -g   -std=c++17 -o CMakeFiles/benchmark.dir/complexity.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/complexity.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -g   -std=c++17 -o CMakeFiles/benchmark.dir/console_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/console_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -g   -std=c++17 -o CMakeFiles/benchmark.dir/counter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/counter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -g   -std=c++17 -o CMakeFiles/benchmark.dir/csv_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/csv_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -g   -std=c++17 -o CMakeFiles/benchmark.dir/json_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/json_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -g   -std=c++17 -o CMakeFiles/benchmark.dir/reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -g   -std=c++17 -o CMakeFiles/benchmark.dir/sleep.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sleep.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -g   -std=c++17 -o CMakeFiles/benchmark.dir/statistics.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/statistics.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -g   -std=c++17 -o CMakeFiles/benchmark.dir/string_util.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/string_util.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -g   -std=c++17 -o CMakeFiles/benchmark.dir/sysinfo.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sysinfo.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -g   -std=c++17 -o CMakeFiles/benchmark.dir/timers.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/timers.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -P CMakeFiles/benchmark.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/benchmark.dir/link.txt --verbose=1
/usr/bin/ar qc libbenchmarkd.a  CMakeFiles/benchmark.dir/benchmark.cc.o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o CMakeFiles/benchmark.dir/benchmark_name.cc.o CMakeFiles/benchmark.dir/benchmark_register.cc.o CMakeFiles/benchmark.dir/benchmark_runner.cc.o CMakeFiles/benchmark.dir/colorprint.cc.o CMakeFiles/benchmark.dir/commandlineflags.cc.o CMakeFiles/benchmark.dir/complexity.cc.o CMakeFiles/benchmark.dir/console_reporter.cc.o CMakeFiles/benchmark.dir/counter.cc.o CMakeFiles/benchmark.dir/csv_reporter.cc.o CMakeFiles/benchmark.dir/json_reporter.cc.o CMakeFiles/benchmark.dir/reporter.cc.o CMakeFiles/benchmark.dir/sleep.cc.o CMakeFiles/benchmark.dir/statistics.cc.o CMakeFiles/benchmark.dir/string_util.cc.o CMakeFiles/benchmark.dir/sysinfo.cc.o CMakeFiles/benchmark.dir/timers.cc.o
/usr/bin/ranlib libbenchmarkd.a
[ 80%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
Scanning dependencies of target generated-data
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated && /usr/bin/ruby genfeaturejson.rb /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-miss.json ...
[ 80%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/g++-10  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/include  -g -fPIC   -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -pthread -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/g++-10 -fPIC -g  -shared -Wl,-soname,libsimdjson.so.7 -o ../libsimdjson.so.7.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.7.0.0 ../libsimdjson.so.7 ../libsimdjson.so
[ 80%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
Scanning dependencies of target yyjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/gcc-10  -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src  -g   -o CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o   -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src/yyjson.c
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -P CMakeFiles/yyjson.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -E cmake_link_script CMakeFiles/yyjson.dir/link.txt --verbose=1
/usr/bin/ar qc libyyjson.a  CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o
/usr/bin/ranlib libyyjson.a
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/g++-10  -DRAPIDJSON_HAS_STDSTRING -DSAJSON_UNSORTED_OBJECT_KEYS -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_COMPETITION_NLOHMANN_JSON -DSIMDJSON_COMPETITION_RAPIDJSON -DSIMDJSON_COMPETITION_SAJSON -DSIMDJSON_COMPETITION_YYJSON -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/rapidjson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/sajson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/json  -g   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/g++-10  -g   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.7.0.0 ../_deps/google_benchmarks/src/libbenchmarkd.a ../dependencies/libyyjson.a -pthread /usr/lib/aarch64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.8.0/ampere-gcc10.2-debug.json --benchmark_out_format=json
2021-01-24 21:07:11
Running benchmark/bench_ondemand
Run on (32 X 3300 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x32)
  L1 Instruction 32 KiB (x32)
  L2 Unified 256 KiB (x16)
Load Average: 1.07, 1.05, 0.88
***WARNING*** Library was built as DEBUG. Timings may be affected.
simdjson::dom implementation:      arm64
simdjson::ondemand implementation: arm64

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                46814076 ns     46886252 ns           15          47.312k           13.4953M         29.007k       74.8953M    149.623M              236.928           21.3697        3.1974G          91.1902M                    144.399                    0.609465           2.13697k    47.1651k   631.515k       12.8649M/s   29.1111k   74.8953M   149.643M         236.959    21.3611/s 3.19654G/s     91.1902M               144.399               0.609385        100       2.13611k/s [BEST: throughput=  0.01 GB/s doc_throughput=    21 docs/s instructions=    91190169 cycles=   149623349 branch_miss=   47312 cache_miss=   29007 cache_ref=  74895333 items=       100 avg_time=  46814076 ns]
partial_tweets<simdjson_ondemand>/manual_time           36672066 ns     36744895 ns           19          26.884k            17.228M         54.061k       57.9156M    117.203M               185.59           27.2804       3.19735G          72.7441M                     115.19                    0.620668           2.72804k    27.1398k   631.515k       16.4228M/s   54.2208k    57.918M   117.228M          185.63    27.2687/s 3.19666G/s     72.7441M                115.19               0.620534        100       2.72687k/s [BEST: throughput=  0.02 GB/s doc_throughput=    27 docs/s instructions=    72744146 cycles=   117202912 branch_miss=   26884 cache_miss=   54061 cache_ref=  57915641 items=       100 avg_time=  36672065 ns]
partial_tweets<yyjson>/manual_time                       4406903 ns      4481791 ns          159          47.822k            147.34M         24.666k       6.78265M    13.7177M              21.7219           233.312       3.20051G          16.0352M                    25.3916                     1.16894           23.3312k    47.7816k   631.515k       136.663M/s   24.6941k   6.78465M   13.8498M          21.931    226.917/s 3.14274G/s     16.0352M               25.3917                 1.1578        100       22.6917k/s [BEST: throughput=  0.15 GB/s doc_throughput=   233 docs/s instructions=    16035183 cycles=    13717726 branch_miss=   47822 cache_miss=   24666 cache_ref=   6782651 items=       100 avg_time=   4406903 ns]
partial_tweets<yyjson_insitu>/manual_time                4325256 ns      4400502 ns          162          48.013k           148.843M         14.711k       6.62542M    13.5793M              21.5027           235.693       3.20054G          15.9362M                    25.2349                     1.17357           23.5693k    47.7827k   631.515k       139.243M/s   14.7801k   6.62545M   13.6994M         21.6929      231.2/s 3.16731G/s     15.9361M               25.2348                1.16327        100         23.12k/s [BEST: throughput=  0.15 GB/s doc_throughput=   235 docs/s instructions=    15936228 cycles=    13579303 branch_miss=   48013 cache_miss=   14711 cache_ref=   6625425 items=       100 avg_time=   4325256 ns]
partial_tweets<sajson>/manual_time                       6944498 ns      7020665 ns          100          74.763k           91.1747M         12.741k       10.6337M    22.1353M               35.051           144.375       3.19577G          27.2504M                    43.1509                     1.23109           14.4375k     74.849k   631.515k       86.7247M/s   12.7436k   10.6294M   22.2006M         35.1545    143.999/s 3.19686G/s     27.2504M               43.1509                1.22746        100       14.3999k/s [BEST: throughput=  0.09 GB/s doc_throughput=   144 docs/s instructions=    27250424 cycles=    22135254 branch_miss=   74763 cache_miss=   12741 cache_ref=  10633679 items=       100 avg_time=   6944498 ns]
partial_tweets<rapidjson>/manual_time                   25410134 ns     25486939 ns           28         125.756k           24.9231M         13.309k       53.4257M    80.9818M              128.234           39.4656         3.196G           93.229M                    147.628                     1.15123           3.94656k    125.545k   631.515k       23.7016M/s   13.4839k   53.4252M   81.0338M         128.316    39.3544/s 3.18903G/s     93.2293M               147.628                 1.1505        100       3.93544k/s [BEST: throughput=  0.02 GB/s doc_throughput=    39 docs/s instructions=    93229016 cycles=    80981792 branch_miss=  125756 cache_miss=   13309 cache_ref=  53425702 items=       100 avg_time=  25410134 ns]
partial_tweets<rapidjson_insitu>/manual_time            18859286 ns     18935534 ns           37         100.802k           33.6256M         13.918k       35.2461M    60.0684M               95.118           53.2459        3.1984G          67.9791M                    107.644                     1.13169           5.32459k    100.954k   631.515k       31.9344M/s   14.0889k   35.2486M   60.1446M         95.2386    53.0243/s 3.18912G/s     67.9794M               107.645                1.13027        100       5.30243k/s [BEST: throughput=  0.03 GB/s doc_throughput=    53 docs/s instructions=    67979110 cycles=    60068418 branch_miss=  100802 cache_miss=   13918 cache_ref=  35246129 items=       100 avg_time=  18859286 ns]
partial_tweets<nlohmann_json>/manual_time              128436050 ns    128538063 ns            5         898.404k            4.9474M        222.351k       265.732M    408.064M              646.167           7.83418       3.19685G          452.228M                      716.1                     1.10823            783.418    913.049k   631.515k       4.68918M/s   276.294k   265.683M   410.595M         650.175    7.78598/s 3.19688G/s       451.9M                715.58                 1.1006        100        778.598/s [BEST: throughput=  0.00 GB/s doc_throughput=     7 docs/s instructions=   452227698 cycles=   408064259 branch_miss=  898404 cache_miss=  222351 cache_ref= 265732061 items=       100 avg_time= 128436049 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                6093019664 ns   6096517717 ns            1          14.676M           7.54942M        4.37899M       11.1538G    19.4798G              423.485          0.164122       3.19706G          15.6016G                    339.175                    0.800915           164.122k     14.676M   45.9988M       7.19969M/s   4.37899M   11.1538G   19.4798G         423.485   0.164122/s 3.19706G/s     15.6016G               339.175               0.800915      1000k       164.122k/s [BEST: throughput=  0.01 GB/s doc_throughput=     0 docs/s instructions= 15601641504 cycles= 19479778794 branch_miss=14675998 cache_miss= 4378986 cache_ref=11153828557 items=   1000000 avg_time=6093019664 ns]
large_random<simdjson_ondemand>/manual_time           4123440696 ns   4127060774 ns            1         9.15933M           11.1554M        2.48437M       6.44036G    13.1813G              286.559          0.242516       3.19669G           9.4726G                    205.932                    0.718637           242.516k    9.15933M   45.9988M       10.6387M/s   2.48437M   6.44036G   13.1813G         286.559   0.242516/s 3.19669G/s      9.4726G               205.932               0.718637      1000k       242.516k/s [BEST: throughput=  0.01 GB/s doc_throughput=     0 docs/s instructions=  9472604573 cycles= 13181343720 branch_miss= 9159334 cache_miss= 2484368 cache_ref=6440362406 items=   1000000 avg_time=4123440696 ns]
large_random<simdjson_ondemand_unordered>/manual_time 4125674692 ns   4129294174 ns            1         9.77967M           11.1494M        2.48842M       6.45235G    13.1887G              286.718          0.242385       3.19674G           9.5346G                     207.28                    0.722938           242.385k    9.77967M   45.9988M       10.6329M/s   2.48842M   6.45235G   13.1887G         286.718   0.242385/s 3.19674G/s      9.5346G                207.28               0.722938      1000k       242.385k/s [BEST: throughput=  0.01 GB/s doc_throughput=     0 docs/s instructions=  9534604577 cycles= 13188695258 branch_miss= 9779665 cache_miss= 2488421 cache_ref=6452349022 items=   1000000 avg_time=4125674691 ns]
large_random<yyjson>/manual_time                       976185730 ns    979788205 ns            1         2.51512M           47.1209M        4.96591M       1.55688G    3.09468G              67.2775            1.0244       3.17018G          3.61819G                    78.6585                     1.16917            1024.4k    2.51512M   45.9988M        44.938M/s   4.96591M   1.55688G   3.09468G         67.2775     1.0244/s 3.17018G/s     3.61819G               78.6585                1.16917      1000k        1024.4k/s [BEST: throughput=  0.05 GB/s doc_throughput=     1 docs/s instructions=  3618193251 cycles=  3094681164 branch_miss= 2515124 cache_miss= 4965915 cache_ref=1556876917 items=   1000000 avg_time= 976185730 ns]
large_random<yyjson_insitu>/manual_time                970295377 ns    973906759 ns            1         2.50886M            47.407M        4.24506M       1.54552G    3.08282G              67.0196           1.03061        3.1772G          3.61101G                    78.5022                     1.17133           1030.61k    2.50886M   45.9988M       45.2108M/s   4.24506M   1.54552G   3.08282G         67.0196    1.03061/s  3.1772G/s     3.61101G               78.5022                1.17133      1000k       1030.61k/s [BEST: throughput=  0.05 GB/s doc_throughput=     1 docs/s instructions=  3611005560 cycles=  3082820678 branch_miss= 2508859 cache_miss= 4245062 cache_ref=1545515476 items=   1000000 avg_time= 970295377 ns]
large_random<sajson>/manual_time                      1818324907 ns   1821925721 ns            1         10.1636M           25.2973M        3.83884M       3.24148G     5.8134G              126.382          0.549957       3.19712G          6.76897G                    147.155                     1.16437           549.957k    10.1636M   45.9988M       24.1254M/s   3.83884M   3.24148G    5.8134G         126.382   0.549957/s 3.19712G/s     6.76897G               147.155                1.16437      1000k       549.957k/s [BEST: throughput=  0.03 GB/s doc_throughput=     0 docs/s instructions=  6768966399 cycles=  5813401319 branch_miss=10163572 cache_miss= 3838844 cache_ref=3241483746 items=   1000000 avg_time=1818324907 ns]
large_random<rapidjson>/manual_time                   3280869523 ns   3284480192 ns            1          9.4218M           14.0203M        5.04127M       6.48899G    10.4586G              227.366          0.304797       3.18774G          13.0162G                    282.968                     1.24455           304.797k     9.4218M   45.9988M       13.3708M/s   5.04127M   6.48899G   10.4586G         227.366   0.304797/s 3.18774G/s     13.0162G               282.968                1.24455      1000k       304.797k/s [BEST: throughput=  0.01 GB/s doc_throughput=     0 docs/s instructions= 13016195131 cycles= 10458571390 branch_miss= 9421796 cache_miss= 5041272 cache_ref=6488994597 items=   1000000 avg_time=3280869523 ns]
large_random<rapidjson_lossless>/manual_time          4353080364 ns   4356671397 ns            1         22.7374M           10.5669M        5.04316M       8.53011G    13.8856G              301.869          0.229722       3.18983G            15.77G                    342.834                     1.13571           229.722k    22.7374M   45.9988M       10.0774M/s   5.04316M   8.53011G   13.8856G         301.869   0.229722/s 3.18983G/s       15.77G               342.834                1.13571      1000k       229.722k/s [BEST: throughput=  0.01 GB/s doc_throughput=     0 docs/s instructions= 15769964872 cycles= 13885603720 branch_miss=22737401 cache_miss= 5043157 cache_ref=8530110993 items=   1000000 avg_time=4353080364 ns]
large_random<rapidjson_insitu>/manual_time            3155998240 ns   3159581816 ns            1         7.85104M            14.575M        5.76387M       6.16759G    10.0594G              218.688          0.316857       3.18739G          12.4352G                    270.338                     1.23618           316.857k    7.85104M   45.9988M       13.8998M/s   5.76387M   6.16759G   10.0594G         218.688   0.316857/s 3.18739G/s     12.4352G               270.338                1.23618      1000k       316.857k/s [BEST: throughput=  0.01 GB/s doc_throughput=     0 docs/s instructions= 12435195857 cycles= 10059395895 branch_miss= 7851039 cache_miss= 5763875 cache_ref=6167587006 items=   1000000 avg_time=3155998240 ns]
large_random<nlohmann_json>/manual_time               22126769994 ns   22130554306 ns            1         101.986M           2.07887M        28.6204M       38.1974G      70.73G             1.53765k         0.0451941       3.19658G          66.5141G                     1.446k                    0.940395           45.1941k    101.986M   45.9988M       1.98257M/s   28.6204M   38.1974G     70.73G        1.53765k  0.0451941/s 3.19658G/s     66.5141G                1.446k               0.940395      1000k       45.1941k/s [BEST: throughput=  0.00 GB/s doc_throughput=     0 docs/s instructions= 66514142329 cycles= 70729982935 branch_miss=101985758 cache_miss=28620441 cache_ref=38197417367 items=   1000000 avg_time=22126769994 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                      9512894759 ns   9523616624 ns            1         10.0067M           14.4336M        7.42419M       15.8098G    30.4123G              221.494           0.10512       3.19695G          19.9529G                    145.318                     0.65608           55.1134k    10.0067M   137.305M       13.7649M/s   7.42419M   15.8098G   30.4123G         221.494    0.10512/s 3.19695G/s     19.9529G               145.318                0.65608   524.288k       55.1134k/s [BEST: throughput=  0.01 GB/s doc_throughput=     0 docs/s instructions= 19952886895 cycles= 30412278430 branch_miss=10006703 cache_miss= 7424192 cache_ref=15809819601 items=    524288 avg_time=9512894759 ns]
kostya<simdjson_ondemand>/manual_time                 7291730970 ns   7302450657 ns            1         7.74545M           18.8302M        5.68907M       11.5229G    23.3104G              169.771          0.137142       3.19683G          14.5931G                    106.282                    0.626032           71.9017k    7.74545M   137.305M       17.9579M/s   5.68907M   11.5229G   23.3104G         169.771   0.137142/s 3.19683G/s     14.5931G               106.282               0.626032   524.288k       71.9017k/s [BEST: throughput=  0.02 GB/s doc_throughput=     0 docs/s instructions= 14593057889 cycles= 23310412773 branch_miss= 7745448 cache_miss= 5689073 cache_ref=11522850478 items=    524288 avg_time=7291730970 ns]
kostya<yyjson>/manual_time                            1245309530 ns   1220683872 ns            1         2.43761M           110.258M        8.11438M       1.93149G    3.82101G              27.8286          0.803013       3.06832G          4.45322G                     32.433                     1.16546            421.01k    2.43761M   137.305M        105.15M/s   8.11438M   1.93149G   3.82101G         27.8286   0.803013/s 3.06832G/s     4.45322G                32.433                1.16546   524.288k        421.01k/s [BEST: throughput=  0.11 GB/s doc_throughput=     0 docs/s instructions=  4453217815 cycles=  3821005373 branch_miss= 2437609 cache_miss= 8114377 cache_ref=1931492794 items=    524288 avg_time=1245309530 ns]
kostya<yyjson_insitu>/manual_time                     1191620118 ns   1202294984 ns            1         2.40473M           115.225M        5.98268M        1.8971G    3.78291G              27.5511          0.839194       3.17459G          4.43176G                    32.2768                     1.17152           439.979k    2.40473M   137.305M       109.888M/s   5.98268M    1.8971G   3.78291G         27.5511   0.839194/s 3.17459G/s     4.43176G               32.2768                1.17152   524.288k       439.979k/s [BEST: throughput=  0.12 GB/s doc_throughput=     0 docs/s instructions=  4431763530 cycles=  3782906819 branch_miss= 2404728 cache_miss= 5982680 cache_ref=1897100020 items=    524288 avg_time=1191620118 ns]
kostya<sajson>/manual_time                            2276945955 ns   2287640343 ns            1         19.8836M           60.3023M        4.74564M       3.59515G       7.28G              53.0207          0.439185       3.19727G          8.54515G                    62.2348                     1.17378           230.259k    19.8836M   137.305M       57.5087M/s   4.74564M   3.59515G      7.28G         53.0207   0.439185/s 3.19727G/s     8.54515G               62.2348                1.17378   524.288k       230.259k/s [BEST: throughput=  0.06 GB/s doc_throughput=     0 docs/s instructions=  8545145253 cycles=  7280000447 branch_miss=19883645 cache_miss= 4745640 cache_ref=3595150067 items=    524288 avg_time=2276945955 ns]
kostya<rapidjson>/manual_time                         4256287282 ns   4266923666 ns            1         23.5799M           32.2593M        5.57337M       7.76389G    13.5643G              98.7897          0.234947       3.18689G          14.9439G                    108.838                     1.10171            123.18k    23.5799M   137.305M       30.7649M/s   5.57337M   7.76389G   13.5643G         98.7897   0.234947/s 3.18689G/s     14.9439G               108.838                1.10171   524.288k        123.18k/s [BEST: throughput=  0.03 GB/s doc_throughput=     0 docs/s instructions= 14943949289 cycles= 13564321318 branch_miss=23579889 cache_miss= 5573366 cache_ref=7763894928 items=    524288 avg_time=4256287281 ns]
kostya<rapidjson_lossless>/manual_time                4943992448 ns   4954780845 ns            1         31.5661M           27.7721M        5.57992M       8.97994G    15.7618G              114.794          0.202266       3.18808G          16.5314G                    120.399                     1.04883           106.045k    31.5661M   137.305M       26.4855M/s   5.57992M   8.97994G   15.7618G         114.794   0.202266/s 3.18808G/s     16.5314G               120.399                1.04883   524.288k       106.045k/s [BEST: throughput=  0.03 GB/s doc_throughput=     0 docs/s instructions= 16531428931 cycles= 15761843934 branch_miss=31566120 cache_miss= 5579923 cache_ref=8979937456 items=    524288 avg_time=4943992448 ns]
kostya<rapidjson_insitu>/manual_time                  4054312862 ns   4064959974 ns            1         25.4176M           33.8664M        6.43257M       6.98187G    12.9191G              94.0905          0.246651       3.18651G          13.7249G                     99.959                     1.06237           129.316k    25.4176M   137.305M       32.2975M/s   6.43257M   6.98187G   12.9191G         94.0905   0.246651/s 3.18651G/s     13.7249G                99.959                1.06237   524.288k       129.316k/s [BEST: throughput=  0.03 GB/s doc_throughput=     0 docs/s instructions= 13724873458 cycles= 12919102042 branch_miss=25417625 cache_miss= 6432574 cache_ref=6981872933 items=    524288 avg_time=4054312861 ns]
kostya<nlohmann_json>/manual_time                     34754050171 ns   34764979722 ns            1         199.426M           3.95076M        38.9213M       62.9763G    111.099G              809.137         0.0287736       3.19671G          106.654G                    776.767                    0.959994           15.0857k    199.426M   137.305M       3.76774M/s   38.9213M   62.9763G   111.099G         809.137  0.0287736/s 3.19671G/s     106.654G               776.767               0.959994   524.288k       15.0857k/s [BEST: throughput=  0.00 GB/s doc_throughput=     0 docs/s instructions=106653982266 cycles=111098615319 branch_miss=199425592 cache_miss=38921313 cache_ref=62976258409 items=    524288 avg_time=34754050171 ns]
distinct_user_id<simdjson_dom>/manual_time              46426030 ns     46554258 ns           15          43.023k           13.6083M         29.569k       73.8386M    148.374M              234.949           21.5486       3.19725G          89.6053M                    141.889                    0.603916           2.47809k    43.6601k   631.515k       12.9725M/s   29.6638k   73.8422M   148.415M         235.014    21.5396/s  3.1968G/s     89.6053M               141.889               0.603749        115       2.47706k/s [BEST: throughput=  0.01 GB/s doc_throughput=    21 docs/s instructions=    89605294 cycles=   148373827 branch_miss=   43023 cache_miss=   29569 cache_ref=  73838615 items=       115 avg_time=  46426029 ns]
distinct_user_id<simdjson_ondemand>/manual_time         35611579 ns     35739422 ns           20           29.16k            17.742M         28.325k       56.9823M    113.813M              180.222           28.0944       3.19749G          69.9725M                    110.801                    0.614805           3.23085k    29.5763k   631.515k       16.9119M/s   28.5144k   56.9859M    113.84M         180.265    28.0808/s 3.19671G/s     69.9725M               110.801               0.614658        115       3.22929k/s [BEST: throughput=  0.02 GB/s doc_throughput=    28 docs/s instructions=    69972536 cycles=   113812651 branch_miss=   29160 cache_miss=   28325 cache_ref=  56982313 items=       115 avg_time=  35611579 ns]
distinct_user_id<yyjson>/manual_time                     4238430 ns      4366826 ns          165          47.951k           149.869M         24.607k       6.64171M     13.451M              21.2996           237.317       3.19216G          15.7546M                    24.9473                     1.17125           27.2915k    47.8376k   631.515k       142.095M/s    24.618k    6.6412M   13.5505M         21.4572    235.936/s 3.19706G/s     15.7545M               24.9471                1.16264        115       27.1327k/s [BEST: throughput=  0.15 GB/s doc_throughput=   237 docs/s instructions=    15754584 cycles=    13451038 branch_miss=   47951 cache_miss=   24607 cache_ref=   6641707 items=       115 avg_time=   4238429 ns]
distinct_user_id<yyjson_insitu>/manual_time              4216896 ns      4345674 ns          167           47.93k           151.952M         14.673k       6.48478M    13.3019M              21.0635           240.615       3.20064G          15.6554M                    24.7902                     1.17693           27.6707k    47.8457k   631.515k       142.821M/s   14.7061k   6.48319M   13.4189M         21.2487    237.141/s 3.18216G/s     15.6553M               24.7901                1.16667        115       27.2712k/s [BEST: throughput=  0.15 GB/s doc_throughput=   240 docs/s instructions=    15655371 cycles=    13301924 branch_miss=   47930 cache_miss=   14673 cache_ref=   6484779 items=       115 avg_time=   4216895 ns]
distinct_user_id<sajson>/manual_time                     6854843 ns      6983561 ns          102          73.623k           92.2817M         12.837k        10.427M    21.8672M              34.6265           146.127       3.19539G          26.8618M                    42.5355                     1.22841           16.8047k     73.549k   631.515k        87.859M/s   12.7989k   10.4156M   21.9137M         34.7002    145.882/s 3.19682G/s     26.8618M               42.5355                 1.2258        115       16.7765k/s [BEST: throughput=  0.09 GB/s doc_throughput=   146 docs/s instructions=    26861794 cycles=    21867174 branch_miss=   73623 cache_miss=   12837 cache_ref=  10427049 items=       115 avg_time=   6854843 ns]
distinct_user_id<rapidjson>/manual_time                 25183495 ns     25313929 ns           28         123.525k           25.1523M         13.937k       52.9892M    80.2897M              127.138           39.8284       3.19782G          92.2338M                    146.052                     1.14876           4.58027k    124.012k   631.515k       23.9149M/s   14.1082k    52.993M   80.3468M         127.229    39.7085/s 3.19046G/s     92.2343M               146.052                1.14795        115       4.56648k/s [BEST: throughput=  0.03 GB/s doc_throughput=    39 docs/s instructions=    92233842 cycles=    80289726 branch_miss=  123525 cache_miss=   13937 cache_ref=  52989235 items=       115 avg_time=  25183494 ns]
distinct_user_id<rapidjson_insitu>/manual_time          18589920 ns     18721352 ns           38         100.628k           33.9921M         14.198k       34.8211M    59.4206M              94.0921           53.8262       3.19838G          67.0116M                    106.112                     1.12775           6.19001k    100.696k   631.515k       32.3971M/s   14.2208k   34.8217M   59.4278M         94.1036    53.7926/s 3.19678G/s     67.0116M               106.113                1.12761        115       6.18615k/s [BEST: throughput=  0.03 GB/s doc_throughput=    53 docs/s instructions=    67011610 cycles=    59420559 branch_miss=  100628 cache_miss=   14198 cache_ref=  34821145 items=       115 avg_time=  18589920 ns]
distinct_user_id<nlohmann_json>/manual_time            123376702 ns    123508641 ns            6          813.28k           5.13799M        180.215k       255.608M    392.805M              622.005           8.13597       3.19585G          434.709M                     688.36                     1.10668            935.637    821.923k   631.515k       4.88147M/s   215.605k   255.093M   394.366M         624.477    8.10526/s 3.19644G/s     433.287M               686.107                1.09869        115        932.105/s [BEST: throughput=  0.01 GB/s doc_throughput=     8 docs/s instructions=   434709405 cycles=   392805265 branch_miss=  813280 cache_miss=  180215 cache_ref= 255608397 items=       115 avg_time= 123376702 ns]
find_tweet<simdjson_dom>/manual_time                    45865544 ns     45954433 ns           15          31.002k           13.7788M         26.651k       72.6393M    146.529M              232.028           21.8187       3.19707G          87.8042M                    139.037                    0.599227            21.8187    31.5338k   631.515k        13.131M/s   26.7919k   72.6529M   146.617M         232.168    21.8029/s 3.19668G/s     87.8042M               139.037               0.598866          1        21.8029/s [BEST: throughput=  0.01 GB/s doc_throughput=    21 docs/s instructions=    87804228 cycles=   146529117 branch_miss=   31002 cache_miss=   26651 cache_ref=  72639314 items=         1 avg_time=  45865544 ns]
find_tweet<simdjson_ondemand>/manual_time               33412106 ns     33505423 ns           21          13.365k           18.9236M         13.753k       52.5469M    106.698M              168.955           29.9653       3.19724G          61.6801M                      97.67                    0.578082            29.9653    15.3316k   631.515k       18.0252M/s   13.7967k   52.5491M   106.801M         169.119    29.9293/s 3.19647G/s     61.6801M                 97.67               0.577524          1        29.9293/s [BEST: throughput=  0.02 GB/s doc_throughput=    29 docs/s instructions=    61680089 cycles=   106697848 branch_miss=   13365 cache_miss=   13753 cache_ref=  52546858 items=         1 avg_time=  33412105 ns]
find_tweet<yyjson>/manual_time                           4205387 ns      4294674 ns          167          46.676k           154.876M         21.912k        6.4762M    13.0505M              20.6654           245.245       3.20057G          15.4581M                    24.4778                     1.18448            245.245    46.7934k   631.515k       143.211M/s   21.9893k     6.477M   13.1998M         20.9019     237.79/s 3.13879G/s     15.4586M               24.4786                1.17112          1         237.79/s [BEST: throughput=  0.15 GB/s doc_throughput=   245 docs/s instructions=    15458129 cycles=    13050509 branch_miss=   46676 cache_miss=   21912 cache_ref=   6476204 items=         1 avg_time=   4205386 ns]
find_tweet<yyjson_insitu>/manual_time                    4122425 ns      4212830 ns          170          46.771k           156.602M         12.015k       6.31834M    12.9064M              20.4373           247.978       3.20051G          15.3592M                    24.3212                     1.19004            247.978    46.7839k   631.515k       146.094M/s   12.0716k   6.31782M   13.0477M          20.661    242.576/s 3.16506G/s     15.3595M               24.3217                1.17718          1        242.576/s [BEST: throughput=  0.16 GB/s doc_throughput=   247 docs/s instructions=    15359174 cycles=    12906436 branch_miss=   46771 cache_miss=   12015 cache_ref=   6318337 items=         1 avg_time=   4122425 ns]
find_tweet<sajson>/manual_time                           6711651 ns      6801597 ns          104          72.577k           94.5154M          10.25k       10.2218M    21.3534M              33.8129           149.665       3.19584G          26.4434M                     41.873                     1.23837            149.665    72.5663k   631.515k       89.7335M/s   10.2382k   10.2098M   21.4566M         33.9764    148.995/s 3.19692G/s     26.4434M                41.873                1.23242          1        148.995/s [BEST: throughput=  0.09 GB/s doc_throughput=   149 docs/s instructions=    26443425 cycles=    21353362 branch_miss=   72577 cache_miss=   10250 cache_ref=  10221813 items=         1 avg_time=   6711650 ns]
find_tweet<rapidjson>/manual_time                       24876508 ns     24967592 ns           28         120.984k           25.4596M         11.132k       52.4321M    79.3191M              125.601            40.315       3.19775G          90.9862M                    144.076                     1.14709             40.315    121.024k   631.515k         24.21M/s   11.3765k   52.4345M   79.3668M         125.677    40.1986/s 3.19043G/s     90.9866M               144.077                1.14641          1        40.1986/s [BEST: throughput=  0.03 GB/s doc_throughput=    40 docs/s instructions=    90986207 cycles=    79319102 branch_miss=  120984 cache_miss=   11132 cache_ref=  52432130 items=         1 avg_time=  24876507 ns]
find_tweet<rapidjson_insitu>/manual_time                18289399 ns     18381346 ns           38         100.003k           34.5544M         10.869k       34.2831M    58.4534M              92.5606           54.7166       3.19837G           65.795M                    104.186                      1.1256            54.7166    100.188k   631.515k       32.9294M/s   10.9305k   34.2842M   58.4678M         92.5833    54.6765/s 3.19681G/s     65.7951M               104.186                1.12532          1        54.6765/s [BEST: throughput=  0.03 GB/s doc_throughput=    54 docs/s instructions=    65795023 cycles=    58453436 branch_miss=  100003 cache_miss=   10869 cache_ref=  34283123 items=         1 avg_time=  18289399 ns]
find_tweet<nlohmann_json>/manual_time                  109110718 ns    109205556 ns            6         607.953k           5.80261M         92.898k       226.803M    347.913M              550.919           9.18839       3.19676G          386.192M                    611.532                     1.11002            9.18839    611.688k   631.515k       5.51971M/s   122.681k   226.298M   348.778M         552.288      9.165/s 3.19655G/s     384.784M               609.304                1.10323          1          9.165/s [BEST: throughput=  0.01 GB/s doc_throughput=     9 docs/s instructions=   386191625 cycles=   347913311 branch_miss=  607953 cache_miss=   92898 cache_ref= 226803404 items=         1 avg_time= 109110718 ns]
top_tweet<simdjson_dom>/manual_time                     46153065 ns     46247222 ns           15          40.343k           13.6891M         28.573k       73.1168M    147.488M              233.546           21.6766       3.19704G          88.5033M                    140.144                    0.600071            21.6766    41.9988k   631.515k       13.0492M/s   28.6299k   73.1271M   147.543M         233.633     21.667/s 3.19681G/s     88.5033M               140.144               0.599849          1         21.667/s [BEST: throughput=  0.01 GB/s doc_throughput=    21 docs/s instructions=    88503343 cycles=   147488017 branch_miss=   40343 cache_miss=   28573 cache_ref=  73116767 items=         1 avg_time=  46153065 ns]
top_tweet<simdjson_ondemand>/manual_time                35563661 ns     35665407 ns           20          27.561k           17.7829M          28.19k       56.8553M    113.552M              179.808           28.1592       3.19752G          70.1199M                    111.034                    0.617516            28.1592    27.4655k   631.515k       16.9347M/s    28.348k   56.8576M   113.682M         180.015    28.1186/s 3.19658G/s     70.1199M               111.034               0.616807          1        28.1186/s [BEST: throughput=  0.02 GB/s doc_throughput=    28 docs/s instructions=    70119940 cycles=   113551659 branch_miss=   27561 cache_miss=   28190 cache_ref=  56855318 items=         1 avg_time=  35563660 ns]
top_tweet<simdjson_ondemand_forward_only>/manual_time   36008325 ns     36106061 ns           19          26.019k           17.5481M         32.374k       57.4548M    115.075M               182.22           27.7873       3.19761G          70.8979M                    112.266                    0.616104            27.7873    26.8191k   631.515k       16.7256M/s   32.4783k   57.4635M   115.112M         182.278    27.7714/s  3.1968G/s     70.8979M               112.266               0.615906          1        27.7714/s [BEST: throughput=  0.02 GB/s doc_throughput=    27 docs/s instructions=    70897864 cycles=   115074507 branch_miss=   26019 cache_miss=   32374 cache_ref=  57454766 items=         1 avg_time=  36008325 ns]
top_tweet<yyjson>/manual_time                            4262113 ns      4361261 ns          164          47.165k           151.872M         23.355k       6.56648M    13.3088M              21.0745           240.489       3.20063G           15.564M                    24.6456                     1.16945            240.489    46.9875k   631.515k       141.305M/s   23.4638k   6.53727M   13.3817M         21.1899    234.625/s 3.13969G/s     15.5646M               24.6464                1.16312          1        234.625/s [BEST: throughput=  0.15 GB/s doc_throughput=   240 docs/s instructions=    15564050 cycles=    13308834 branch_miss=   47165 cache_miss=   23355 cache_ref=   6566476 items=         1 avg_time=   4262112 ns]
top_tweet<yyjson_insitu>/manual_time                     4179145 ns      4279290 ns          168          46.882k           154.383M         13.473k       6.37806M    13.0923M              20.7316           244.464        3.2006G          15.4653M                    24.4892                     1.18125            244.464    46.9386k   631.515k       144.111M/s   13.5535k   6.37785M   13.2293M         20.9485    239.283/s 3.16555G/s     15.4654M               24.4894                1.16903          1        239.283/s [BEST: throughput=  0.15 GB/s doc_throughput=   244 docs/s instructions=    15465304 cycles=    13092310 branch_miss=   46882 cache_miss=   13473 cache_ref=   6378058 items=         1 avg_time=   4179145 ns]
top_tweet<sajson>/manual_time                            6784280 ns      6885296 ns          103          72.672k            93.422M         11.784k       10.3409M    21.6005M              34.2042           147.933       3.19542G          26.6661M                    42.2255                     1.23451            147.933    73.0223k   631.515k       88.7728M/s   11.7774k   10.3341M   21.6891M         34.3446      147.4/s 3.19697G/s     26.6661M               42.2255                1.22947          1          147.4/s [BEST: throughput=  0.09 GB/s doc_throughput=   147 docs/s instructions=    26666058 cycles=    21600453 branch_miss=   72672 cache_miss=   11784 cache_ref=  10340858 items=         1 avg_time=   6784279 ns]
top_tweet<rapidjson>/manual_time                        25087483 ns     25189950 ns           28         123.053k           25.2454M         13.029k        52.825M    79.9878M               126.66            39.976       3.19759G          91.8647M                    145.467                     1.14848             39.976    123.213k   631.515k       24.0064M/s   13.2463k   52.8265M   80.0438M         126.749    39.8605/s 3.19059G/s      91.865M               145.468                1.14768          1        39.8605/s [BEST: throughput=  0.03 GB/s doc_throughput=    39 docs/s instructions=    91864673 cycles=    79987775 branch_miss=  123053 cache_miss=   13029 cache_ref=  52824977 items=         1 avg_time=  25087482 ns]
top_tweet<rapidjson_insitu>/manual_time                 18493819 ns     18598114 ns           38          99.857k           34.1724M         13.096k       34.6603M     59.107M              93.5955           54.1118       3.19839G          66.6487M                    105.538                     1.12759            54.1118    99.8014k   631.515k       32.5655M/s    13.165k   34.6602M   59.1207M         93.6172    54.0721/s 3.19678G/s     66.6487M               105.538                1.12733          1        54.0721/s [BEST: throughput=  0.03 GB/s doc_throughput=    54 docs/s instructions=    66648683 cycles=    59106957 branch_miss=   99857 cache_miss=   13096 cache_ref=  34660302 items=         1 avg_time=  18493818 ns]
top_tweet<nlohmann_json>/manual_time                   134814434 ns    134922316 ns            5          1004.8k           4.68563M        361.475k       278.688M    430.828M              682.213           7.41967        3.1966G          475.182M                    752.448                     1.10295            7.41967    1014.29k   631.515k       4.46732M/s   364.717k   278.618M    430.95M         682.406     7.4176/s 3.19662G/s     475.036M               752.216                 1.1023          1         7.4176/s [BEST: throughput=  0.00 GB/s doc_throughput=     7 docs/s instructions=   475182335 cycles=   430827788 branch_miss= 1004805 cache_miss=  361475 cache_ref= 278688286 items=         1 avg_time= 134814434 ns]
