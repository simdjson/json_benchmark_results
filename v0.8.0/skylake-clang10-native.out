run_benchmark: v0.8.0 /home/jkeiser/simdjson_benchmark_results/v0.8.0/skylake-clang10-native.json -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native
git reset --hard v0.8.0
HEAD is now at c96ff018 Version 0.8.
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The CXX compiler identification is Clang 10.0.1
-- The C compiler identification is Clang 10.0.1
-- Check for working CXX compiler: /usr/bin/clang++-10
-- Check for working CXX compiler: /usr/bin/clang++-10 -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Check for working C compiler: /usr/bin/clang-10
-- Check for working C compiler: /usr/bin/clang-10 -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed
-- Check if compiler accepts -pthread
-- Check if compiler accepts -pthread - yes
-- Found Threads: TRUE  
-- Looking for fork
-- Looking for fork - found
-- Looking for wait
-- Looking for wait - found
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- Found Git: /usr/bin/git (found version "2.27.0") 
-- git Version: v0.2.1-c96ff018
-- Version: 0.2.1
-- Performing Test HAVE_CXX_FLAG_STD_CXX11
-- Performing Test HAVE_CXX_FLAG_STD_CXX11 - Success
-- Performing Test HAVE_CXX_FLAG_WALL
-- Performing Test HAVE_CXX_FLAG_WALL - Success
-- Performing Test HAVE_CXX_FLAG_WEXTRA
-- Performing Test HAVE_CXX_FLAG_WEXTRA - Success
-- Performing Test HAVE_CXX_FLAG_WSHADOW
-- Performing Test HAVE_CXX_FLAG_WSHADOW - Success
-- Performing Test HAVE_CXX_FLAG_WERROR
-- Performing Test HAVE_CXX_FLAG_WERROR - Success
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32 - Success
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED - Success
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WD654
-- Performing Test HAVE_CXX_FLAG_WD654 - Failed
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY - Success
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES -- failed to compile
-- Performing Test HAVE_CXX_FLAG_COVERAGE
-- Performing Test HAVE_CXX_FLAG_COVERAGE - Success
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Performing Test USE_BOOST_JSON
-- Performing Test USE_BOOST_JSON - Failed
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Found Python3: /usr/bin/python3.8 (found version "3.8.6") found components: Interpreter 
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 10
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
Scanning dependencies of target benchmark
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_api_internal.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_name.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_name.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_register.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_register.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_runner.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_runner.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/colorprint.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/colorprint.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/commandlineflags.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/commandlineflags.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/complexity.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/complexity.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/console_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/console_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/counter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/counter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/csv_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/csv_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/json_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/json_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/sleep.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sleep.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/statistics.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/statistics.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/string_util.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/string_util.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/sysinfo.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sysinfo.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/timers.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/timers.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -P CMakeFiles/benchmark.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/benchmark.dir/link.txt --verbose=1
/usr/bin/ar qc libbenchmark.a  CMakeFiles/benchmark.dir/benchmark.cc.o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o CMakeFiles/benchmark.dir/benchmark_name.cc.o CMakeFiles/benchmark.dir/benchmark_register.cc.o CMakeFiles/benchmark.dir/benchmark_runner.cc.o CMakeFiles/benchmark.dir/colorprint.cc.o CMakeFiles/benchmark.dir/commandlineflags.cc.o CMakeFiles/benchmark.dir/complexity.cc.o CMakeFiles/benchmark.dir/console_reporter.cc.o CMakeFiles/benchmark.dir/counter.cc.o CMakeFiles/benchmark.dir/csv_reporter.cc.o CMakeFiles/benchmark.dir/json_reporter.cc.o CMakeFiles/benchmark.dir/reporter.cc.o CMakeFiles/benchmark.dir/sleep.cc.o CMakeFiles/benchmark.dir/statistics.cc.o CMakeFiles/benchmark.dir/string_util.cc.o CMakeFiles/benchmark.dir/sysinfo.cc.o CMakeFiles/benchmark.dir/timers.cc.o
/usr/bin/ranlib libbenchmark.a
[ 80%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
Scanning dependencies of target generated-data
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated && /usr/bin/ruby genfeaturejson.rb /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-miss.json ...
[ 80%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/clang++-10  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/include  -march=native -O3 -DNDEBUG -fPIC   -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -pthread -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/clang++-10 -fPIC -march=native -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.7 -o ../libsimdjson.so.7.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.7.0.0 ../libsimdjson.so.7 ../libsimdjson.so
[ 80%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
Scanning dependencies of target yyjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/clang-10  -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src  -O3 -DNDEBUG   -o CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o   -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src/yyjson.c
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -P CMakeFiles/yyjson.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -E cmake_link_script CMakeFiles/yyjson.dir/link.txt --verbose=1
/usr/bin/ar qc libyyjson.a  CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o
/usr/bin/ranlib libyyjson.a
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/clang++-10  -DRAPIDJSON_HAS_STDSTRING -DSAJSON_UNSORTED_OBJECT_KEYS -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_COMPETITION_NLOHMANN_JSON -DSIMDJSON_COMPETITION_RAPIDJSON -DSIMDJSON_COMPETITION_SAJSON -DSIMDJSON_COMPETITION_YYJSON -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/rapidjson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/sajson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/json  -march=native -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/clang++-10  -march=native -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.7.0.0 ../_deps/google_benchmarks/src/libbenchmark.a ../dependencies/libyyjson.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.8.0/skylake-clang10-native.json --benchmark_out_format=json
2021-01-24 20:35:08
Running benchmark/bench_ondemand
Run on (4 X 4000 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 256 KiB (x4)
  L3 Unified 8192 KiB (x1)
Load Average: 0.65, 0.50, 0.30
simdjson::dom implementation:      haswell
simdjson::ondemand implementation: haswell

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                  266297 ns       295040 ns         2577           3.094k           2.38873G               0        92.734k     976.17k              1.54576          3.78253k        3.6924G          2.99617M                    4.74442                     3.06931           378.253k    3.24871k   631.515k        2.2086G/s    1.24098   92.8391k   982.859k         1.55635    3.7552k/s 3.69083G/s     2.99617M               4.74442                3.04842        100        375.52k/s [BEST: throughput=  2.39 GB/s doc_throughput=  3782 docs/s instructions=     2996170 cycles=      976170 branch_miss=    3094 cache_miss=       0 cache_ref=     92734 items=       100 avg_time=    266297 ns]
partial_tweets<simdjson_ondemand>/manual_time             169567 ns       198086 ns         4138           1.651k           3.76651G               0         58.44k     619.25k             0.980578          5.96424k       3.69335G          1.94965M                    3.08726                      3.1484           596.424k    1.86463k   631.515k        3.4685G/s  0.0430159   58.4695k   625.939k         0.99117   5.89737k/s 3.69139G/s     1.94965M               3.08726                3.11476        100       589.737k/s [BEST: throughput=  3.77 GB/s doc_throughput=  5964 docs/s instructions=     1949648 cycles=      619250 branch_miss=    1651 cache_miss=       0 cache_ref=     58440 items=       100 avg_time=    169567 ns]
partial_tweets<yyjson>/manual_time                        646016 ns       676736 ns         1077          10.201k           1.75353G             523        79.045k    1.33001M              2.10606           2.7767k       3.69303G          2.90303M                    4.59694                     2.18272            277.67k    7.80503k   631.515k       932.267M/s    1083.56   51.7813k   1.54204M          2.4418   1.54795k/s 2.38699G/s     2.90352M               4.59771                1.88291        100       154.795k/s [BEST: throughput=  1.75 GB/s doc_throughput=  2776 docs/s instructions=     2903034 cycles=     1330009 branch_miss=   10201 cache_miss=     523 cache_ref=     79045 items=       100 avg_time=    646016 ns]
partial_tweets<yyjson_insitu>/manual_time                 436803 ns       466301 ns         1598           7.069k           1.99822G             893        48.507k    1.16049M              1.83763          3.16418k         3.672G          2.90272M                    4.59644                     2.50129           316.418k    7.56296k   631.515k       1.34647G/s    146.554   33.8884k   1.26584M         2.00445   2.28936k/s 2.89796G/s     2.90298M               4.59686                2.29333        100       228.936k/s [BEST: throughput=  2.00 GB/s doc_throughput=  3164 docs/s instructions=     2902723 cycles=     1160490 branch_miss=    7069 cache_miss=     893 cache_ref=     48507 items=       100 avg_time=    436803 ns]
partial_tweets<sajson>/manual_time                        585271 ns       614248 ns         1193          10.752k           1.12387G               0        48.429k    2.07456M              3.28505          1.77965k       3.69198G          5.86951M                    9.29433                     2.82928           177.965k    11.1675k   631.515k       1029.03M/s    1.27661   48.3825k    2.1597M         3.41987   1.70861k/s 3.69009G/s     5.86951M               9.29433                2.71774        100       170.861k/s [BEST: throughput=  1.12 GB/s doc_throughput=  1779 docs/s instructions=     5869509 cycles=     2074557 branch_miss=   10752 cache_miss=       0 cache_ref=     48429 items=       100 avg_time=    585270 ns]
partial_tweets<rapidjson>/manual_time                    2172073 ns      2201465 ns          323          31.961k           318.854M          9.713k        55.015k    7.29777M               11.556           504.903       3.68467G          21.8983M                    34.6758                     3.00068           50.4903k    32.0978k   631.515k       277.274M/s    594.882   34.2215k   7.43269M         11.7696     460.39/s 3.42193G/s      21.899M               34.6769                2.94631        100        46.039k/s [BEST: throughput=  0.32 GB/s doc_throughput=   504 docs/s instructions=    21898264 cycles=     7297775 branch_miss=   31961 cache_miss=    9713 cache_ref=     55015 items=       100 avg_time=   2172073 ns]
partial_tweets<rapidjson_insitu>/manual_time             1519176 ns      1548341 ns          462          25.812k           448.126M              48        46.197k    5.20237M              8.23792           709.605       3.69163G          13.3154M                    21.0848                     2.55948           70.9605k      25.98k   631.515k       396.438M/s    274.959   35.1914k   5.26585M         8.33843    658.251/s 3.46625G/s      13.316M               21.0857                2.52874        100       65.8251k/s [BEST: throughput=  0.45 GB/s doc_throughput=   709 docs/s instructions=    13315353 cycles=     5202372 branch_miss=   25812 cache_miss=      48 cache_ref=     46197 items=       100 avg_time=   1519176 ns]
partial_tweets<nlohmann_json>/manual_time                8174302 ns      8209561 ns           86          153.04k           79.5515M               2        230.68k     29.289M               46.379           125.969       3.68952G           78.128M                    123.715                     2.66748           12.5969k    164.072k   631.515k       73.6772M/s    122.512   361.526k   30.1574M          47.754    122.335/s 3.68929G/s     78.5276M               124.348                2.60393        100       12.2335k/s [BEST: throughput=  0.08 GB/s doc_throughput=   125 docs/s instructions=    78128036 cycles=    29289030 branch_miss=  153040 cache_miss=       2 cache_ref=    230680 items=       100 avg_time=   8174302 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                  90782406 ns     94187357 ns            8          924.33k           507.155M        11.0596M       15.6164M    334.597M              7.27405           11.0254       3.68907G          1039.39M                    22.5961                      3.1064           11.0254M    924.356k   45.9988M        483.22M/s   11.1231M   15.6171M   334.881M         7.28021    11.0154/s 3.68883G/s     1039.39M               22.5961                3.10377      1000k       11.0154M/s [BEST: throughput=  0.51 GB/s doc_throughput=    11 docs/s instructions=  1039392796 cycles=   334597343 branch_miss=  924330 cache_miss=11059642 cache_ref=  15616428 items=   1000000 avg_time=  90782405 ns]
large_random<simdjson_ondemand>/manual_time             71788160 ns     75156109 ns           10         975.714k           640.997M        5.72993M       8.10078M    264.736M              5.75528           13.9351       3.68912G          689.848M                    14.9971                      2.6058           13.9351M    975.013k   45.9988M       611.074M/s   5.77081M   8.10244M    264.82M         5.75712    13.9299/s 3.68892G/s     689.848M               14.9971                2.60496      1000k       13.9299M/s [BEST: throughput=  0.64 GB/s doc_throughput=    13 docs/s instructions=   689847684 cycles=   264735671 branch_miss=  975714 cache_miss= 5729928 cache_ref=   8100784 items=   1000000 avg_time=  71788159 ns]
large_random<simdjson_ondemand_unordered>/manual_time   66867825 ns     70250596 ns           10         920.428k           688.344M        5.73941M       8.09775M    246.522M              5.35932           14.9644       3.68906G          686.848M                    14.9319                     2.78615           14.9644M    921.541k   45.9988M       656.038M/s   5.77586M   8.09921M    246.67M         5.36253    14.9549/s 3.68891G/s     686.848M               14.9319                2.78449      1000k       14.9549M/s [BEST: throughput=  0.69 GB/s doc_throughput=    14 docs/s instructions=   686847927 cycles=   246522261 branch_miss=  920428 cache_miss= 5739408 cache_ref=   8097753 items=   1000000 avg_time=  66867825 ns]
large_random<yyjson>/manual_time                       122115180 ns    125547108 ns            6         676.441k           376.823M        6.06966M       9.30847M    330.818M              7.19189           8.19202       2.71007G           866.68M                    18.8414                     2.61981           8.19202M    675.979k   45.9988M       359.233M/s   6.06617M   9.31072M   330.684M         7.18896    8.18899/s 2.70796G/s      866.68M               18.8414                2.62087      1000k       8.18899M/s [BEST: throughput=  0.38 GB/s doc_throughput=     8 docs/s instructions=   866680087 cycles=   330817916 branch_miss=  676441 cache_miss= 6069662 cache_ref=   9308473 items=   1000000 avg_time= 122115180 ns]
large_random<yyjson_insitu>/manual_time                103945643 ns    107371823 ns            7         674.055k            442.72M        5.19746M       7.94978M    298.032M              6.47912           9.62461       2.86844G          860.559M                    18.7083                     2.88748           9.62461M    675.915k   45.9988M       422.027M/s   5.20065M   7.96043M   298.263M         6.48415    9.62041/s 2.86941G/s     860.559M               18.7083                2.88524      1000k       9.62041M/s [BEST: throughput=  0.44 GB/s doc_throughput=     9 docs/s instructions=   860559328 cycles=   298031516 branch_miss=  674055 cache_miss= 5197464 cache_ref=   7949781 items=   1000000 avg_time= 103945643 ns]
large_random<sajson>/manual_time                        89316520 ns     92719811 ns            8          582.44k           515.682M        8.35512M       12.4359M     329.07M               7.1539           11.2108       3.68914G          1094.99M                    23.8048                     3.32754           11.2108M    582.567k   45.9988M        491.15M/s   8.40491M   12.3449M   329.492M         7.16307    11.1961/s 3.68904G/s     1094.99M               23.8048                3.32328      1000k       11.1961M/s [BEST: throughput=  0.52 GB/s doc_throughput=    11 docs/s instructions=  1094993866 cycles=   329070467 branch_miss=  582440 cache_miss= 8355124 cache_ref=  12435909 items=   1000000 avg_time=  89316520 ns]
large_random<rapidjson>/manual_time                    213333257 ns    216767457 ns            3         597.321k           221.456M        7.11487M       11.0081M    708.242M               15.397           4.81439       3.40975G          2.01614G                    43.8304                     2.84669           4.81439M    597.337k   45.9988M       205.631M/s   6.61392M   10.3324M   710.207M         15.4397     4.6875/s  3.3291G/s     2.01615G               43.8306                2.83882      1000k        4.6875M/s [BEST: throughput=  0.22 GB/s doc_throughput=     4 docs/s instructions=  2016144155 cycles=   708241756 branch_miss=  597321 cache_miss= 7114875 cache_ref=  11008068 items=   1000000 avg_time= 213333257 ns]
large_random<rapidjson_lossless>/manual_time           247371013 ns    250803171 ns            3         588.613k           190.404M        7.10539M       11.0392M    833.158M              18.1126           4.13933       3.44871G          2.47511G                    53.8082                     2.97076           4.13933M    589.482k   45.9988M       177.336M/s   6.60086M   10.3718M    835.88M         18.1718    4.04251/s 3.37906G/s     2.47512G               53.8084                2.96109      1000k       4.04251M/s [BEST: throughput=  0.19 GB/s doc_throughput=     4 docs/s instructions=  2475111250 cycles=   833158499 branch_miss=  588613 cache_miss= 7105387 cache_ref=  11039246 items=   1000000 avg_time= 247371012 ns]
large_random<rapidjson_insitu>/manual_time             237414857 ns    240847782 ns            3         586.532k           198.287M        8.09448M       12.5056M    797.994M              17.3481            4.3107       3.43991G          1.74114G                     37.852                      2.1819            4.3107M    585.434k   45.9988M       184.773M/s   7.61926M   11.8362M   799.313M         17.3768    4.21204/s 3.36674G/s     1.74115G               37.8522                2.17831      1000k       4.21204M/s [BEST: throughput=  0.20 GB/s doc_throughput=     4 docs/s instructions=  1741143989 cycles=   797993656 branch_miss=  586532 cache_miss= 8094482 cache_ref=  12505595 items=   1000000 avg_time= 237414856 ns]
large_random<nlohmann_json>/manual_time               1260809914 ns   1264128142 ns            1         4.14131M           36.4835M        46.7968M        60.879M    4.63763G              100.821          0.793141       3.67829G          12.3636G                     268.78                     2.66592           793.141k    4.14131M   45.9988M       34.7934M/s   46.7968M    60.879M   4.63763G         100.821   0.793141/s 3.67829G/s     12.3636G                268.78                2.66592      1000k       793.141k/s [BEST: throughput=  0.04 GB/s doc_throughput=     0 docs/s instructions= 12363552555 cycles=  4637628509 branch_miss= 4141314 cache_miss=46796759 cache_ref=  60879046 items=   1000000 avg_time=1260809914 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                        94349521 ns    104605654 ns            7         1061.21k           1.45656G        15.7351M       22.4206M    347.773M              2.53285           10.6082       3.68924G          985.296M                    7.17596                     2.83316           5.56174M     1060.8k   137.305M       1.35534G/s   15.7432M   22.3423M   347.964M         2.53424    10.5989/s 3.68803G/s     985.296M               7.17596                2.83161   524.288k       5.55687M/s [BEST: throughput=  1.46 GB/s doc_throughput=    10 docs/s instructions=   985295807 cycles=   347773138 branch_miss= 1061208 cache_miss=15735061 cache_ref=  22420603 items=    524288 avg_time=  94349521 ns]
kostya<simdjson_ondemand>/manual_time                   62560499 ns     72795924 ns           11         467.118k           2.19678G        10.0411M       14.0228M    230.512M              1.67883           15.9993       3.68803G          660.998M                    4.81409                     2.86752           8.38823M    467.728k   137.305M       2.04403G/s   10.0503M   13.9385M   230.733M         1.68044    15.9845/s 3.68816G/s     660.998M               4.81409                2.86478   524.288k        8.3805M/s [BEST: throughput=  2.20 GB/s doc_throughput=    15 docs/s instructions=   660998290 cycles=   230512421 branch_miss=  467118 cache_miss=10041068 cache_ref=  14022822 items=    524288 avg_time=  62560498 ns]
kostya<yyjson>/manual_time                             176975047 ns    187282692 ns            4         415.784k           776.108M         11.282M       16.3538M    456.534M              3.32496           5.65244       2.58053G          978.903M                     7.1294                     2.14421           2.96351M    415.609k   137.305M       739.902M/s   11.2799M   16.3996M   456.511M         3.32479    5.65051/s 2.57952G/s     978.903M                7.1294                2.14432   524.288k        2.9625M/s [BEST: throughput=  0.78 GB/s doc_throughput=     5 docs/s instructions=   978902587 cycles=   456533894 branch_miss=  415784 cache_miss=11281977 cache_ref=  16353814 items=    524288 avg_time= 176975047 ns]
kostya<yyjson_insitu>/manual_time                      124043002 ns    134322061 ns            6         420.127k           1.10779G        8.65304M       12.3972M    363.438M              2.64694           8.06808       2.93225G          960.633M                    6.99635                     2.64318              4.23M    420.793k   137.305M       1055.64M/s   8.65618M    12.381M   363.463M         2.64712    8.06172/s 2.93014G/s     960.633M               6.99635                  2.643   524.288k       4.22666M/s [BEST: throughput=  1.11 GB/s doc_throughput=     8 docs/s instructions=   960633120 cycles=   363438029 branch_miss=  420127 cache_miss= 8653041 cache_ref=  12397154 items=    524288 avg_time= 124043002 ns]
kostya<sajson>/manual_time                             139185195 ns    149473507 ns            5           452.7k           987.478M        12.2873M       17.1498M    512.961M              3.73592           7.19186       3.68914G           1.5245G                     11.103                     2.97197            3.7706M    450.638k   137.305M       940.791M/s   12.2972M   17.1762M   513.279M         3.73824    7.18467/s 3.68774G/s      1.5245G                11.103                2.97012   524.288k       3.76684M/s [BEST: throughput=  0.99 GB/s doc_throughput=     7 docs/s instructions=  1524502572 cycles=   512960733 branch_miss=  452700 cache_miss=12287339 cache_ref=  17149794 items=    524288 avg_time= 139185195 ns]
kostya<rapidjson>/manual_time                          277846806 ns    288122186 ns            3         953.008k           500.016M        8.28325M       12.2709M    931.091M              6.78119           3.64164        3.3907G          2.74239G                     19.973                     2.94535           1.90927M    950.223k   137.305M       471.282M/s   7.98493M   11.8851M   934.176M         6.80366    3.59911/s  3.3622G/s     2.74239G                19.973                2.93563   524.288k       1.88697M/s [BEST: throughput=  0.50 GB/s doc_throughput=     3 docs/s instructions=  2742391711 cycles=   931090800 branch_miss=  953008 cache_miss= 8283252 cache_ref=  12270947 items=    524288 avg_time= 277846806 ns]
kostya<rapidjson_lossless>/manual_time                 288903488 ns    299252876 ns            2         951.034k           479.189M        8.28407M       12.2418M    976.013M              7.10836           3.48996       3.40625G          3.00767G                     21.905                     3.08159           1.82974M    949.829k   137.305M       453.246M/s   8.06741M    11.976M   977.737M         7.12091    3.46136/s  3.3843G/s     3.00767G               21.9051                3.07616   524.288k       1.81475M/s [BEST: throughput=  0.48 GB/s doc_throughput=     3 docs/s instructions=  3007672121 cycles=   976012653 branch_miss=  951034 cache_miss= 8284074 cache_ref=  12241838 items=    524288 avg_time= 288903487 ns]
kostya<rapidjson_insitu>/manual_time                   272789370 ns    283107347 ns            3         1035.28k           509.032M        11.9328M       16.0951M    914.099M              6.65743           3.70731       3.38884G          2.22149G                    16.1792                     2.43025            1.9437M    1017.75k   137.305M        480.02M/s   11.6409M   15.7111M   915.927M         6.67074    3.66583/s 3.35763G/s     2.22149G               16.1792                 2.4254   524.288k       1.92195M/s [BEST: throughput=  0.51 GB/s doc_throughput=     3 docs/s instructions=  2221486268 cycles=   914098969 branch_miss= 1035278 cache_miss=11932795 cache_ref=  16095134 items=    524288 avg_time= 272789370 ns]
kostya<nlohmann_json>/manual_time                     1855532333 ns   1865702855 ns            1         15.1134M           73.9976M        68.9489M        86.426M    6.84474G              49.8506          0.538929       3.68883G          17.2658G                    125.748                     2.52249           282.554k    15.1134M   137.305M       70.5696M/s   68.9489M    86.426M   6.84474G         49.8506   0.538929/s 3.68883G/s     17.2658G               125.748                2.52249   524.288k       282.554k/s [BEST: throughput=  0.07 GB/s doc_throughput=     0 docs/s instructions= 17265772731 cycles=  6844742931 branch_miss=15113423 cache_miss=68948891 cache_ref=  86426036 items=    524288 avg_time=1855532333 ns]
distinct_user_id<simdjson_dom>/manual_time                265933 ns       296335 ns         2632           3.264k           2.39247G               0        94.744k    974.728k              1.54348          3.78847k       3.69273G          2.93045M                    4.64034                     3.00642           435.674k    3.39653k   631.515k       2.21162G/s   0.611702   94.8839k   981.182k         1.55369   3.76034k/s 3.68958G/s     2.93045M               4.64034                2.98665        115       432.439k/s [BEST: throughput=  2.39 GB/s doc_throughput=  3788 docs/s instructions=     2930445 cycles=      974728 branch_miss=    3264 cache_miss=       0 cache_ref=     94744 items=       115 avg_time=    265933 ns]
distinct_user_id<simdjson_ondemand>/manual_time           163567 ns       193102 ns         4273           1.615k           3.88783G               0        57.087k    599.869k             0.949889          6.15635k         3.693G          1.89893M                    3.00695                     3.16558            707.98k    1.72864k   631.515k       3.59575G/s   0.033934   56.9629k   603.727k        0.955998   6.11371k/s 3.69102G/s     1.89893M               3.00695                3.14535        115       703.077k/s [BEST: throughput=  3.89 GB/s doc_throughput=  6156 docs/s instructions=     1898931 cycles=      599869 branch_miss=    1615 cache_miss=       0 cache_ref=     57087 items=       115 avg_time=    163566 ns]
distinct_user_id<yyjson>/manual_time                      556865 ns       590354 ns         1000           6.845k           1.86979G          22.02k        76.708k    1.24699M              1.97459           2.9608k       3.69208G          2.86133M                     4.5309                      2.2946           340.493k    7.62705k   631.515k       1081.52M/s   7.37436k   58.0811k   1.46126M          2.3139   1.79577k/s 2.62408G/s     2.86153M               4.53121                1.95826        115       206.513k/s [BEST: throughput=  1.87 GB/s doc_throughput=  2960 docs/s instructions=     2861332 cycles=     1246986 branch_miss=    6845 cache_miss=   22020 cache_ref=     76708 items=       115 avg_time=    556865 ns]
distinct_user_id<yyjson_insitu>/manual_time               429048 ns       461792 ns         1631           7.313k            2.0257G             323        46.707k    1.14725M              1.81667          3.20769k       3.68003G          2.86082M                    4.53009                     2.49362           368.884k     7.7014k   631.515k       1.37081G/s    47.1398   32.3724k   1.24895M          1.9777   2.33074k/s 2.91098G/s     2.86108M               4.53051                2.29079        115       268.036k/s [BEST: throughput=  2.03 GB/s doc_throughput=  3207 docs/s instructions=     2860819 cycles=     1147254 branch_miss=    7313 cache_miss=     323 cache_ref=     46707 items=       115 avg_time=    429047 ns]
distinct_user_id<sajson>/manual_time                      580879 ns       611546 ns         1201          10.958k             1.128G               0         47.92k    2.06695M              3.27299          1.78618k       3.69193G          5.80807M                    9.19704                     2.80998            205.41k    11.1602k   631.515k       1036.81M/s    1.46711   47.9748k   2.14307M         3.39354   1.72153k/s 3.68936G/s     5.80807M               9.19704                2.71016        115       197.976k/s [BEST: throughput=  1.13 GB/s doc_throughput=  1786 docs/s instructions=     5808071 cycles=     2066945 branch_miss=   10958 cache_miss=       0 cache_ref=     47920 items=       115 avg_time=    580879 ns]
distinct_user_id<rapidjson>/manual_time                  2154385 ns      2185163 ns          326           31.98k           320.994M              77        55.268k    7.25168M               11.483           508.292       3.68597G          21.8275M                    34.5638                        3.01           58.4536k    32.0273k   631.515k       279.551M/s   1.18824k   35.7125k   7.39667M         11.7126     464.17/s 3.43331G/s     21.8284M               34.5651                 2.9511        115       53.3795k/s [BEST: throughput=  0.32 GB/s doc_throughput=   508 docs/s instructions=    21827545 cycles=     7251681 branch_miss=   31980 cache_miss=      77 cache_ref=     55268 items=       115 avg_time=   2154384 ns]
distinct_user_id<rapidjson_insitu>/manual_time           1537429 ns      1567919 ns          446          25.747k           418.448M              45        35.864k    5.23204M               8.2849            662.61        3.4668G            13.25M                    20.9813                     2.53247           76.2001k    33.9226k   631.515k       391.732M/s    3.6421k   38.8463k   5.42931M         8.59727    650.437/s 3.53142G/s     13.2497M               20.9808                 2.4404        115       74.8002k/s [BEST: throughput=  0.42 GB/s doc_throughput=   662 docs/s instructions=    13249986 cycles=     5232040 branch_miss=   25747 cache_miss=      45 cache_ref=     35864 items=       115 avg_time=   1537428 ns]
distinct_user_id<nlohmann_json>/manual_time              7584354 ns      7617202 ns           94         128.133k           86.0577M              20       224.622k    27.0739M              42.8713           136.272       3.68941G          73.5943M                    116.536                     2.71828           15.6713k    141.457k   631.515k       79.4082M/s    198.713   406.893k   27.9727M         44.2946     131.85/s 3.68821G/s     72.2482M               114.405                2.58281        115       15.1628k/s [BEST: throughput=  0.09 GB/s doc_throughput=   136 docs/s instructions=    73594264 cycles=    27073869 branch_miss=  128133 cache_miss=      20 cache_ref=    224622 items=       115 avg_time=   7584354 ns]
find_tweet<simdjson_dom>/manual_time                      254506 ns       283860 ns         2747           2.971k           2.50129G               0         84.12k     932.33k              1.47634          3.96077k       3.69275G          2.84527M                    4.50547                     3.05179           3.96077k    3.14264k   631.515k       2.31092G/s   0.235166   84.2227k   939.354k         1.48746   3.92917k/s 3.69089G/s     2.84527M               4.50547                3.02897          1       3.92917k/s [BEST: throughput=  2.50 GB/s doc_throughput=  3960 docs/s instructions=     2845271 cycles=      932330 branch_miss=    2971 cache_miss=       0 cache_ref=     84120 items=         1 avg_time=    254506 ns]
find_tweet<simdjson_ondemand>/manual_time                 112365 ns       140939 ns         6218              918           5.65605G               0        32.902k    412.486k             0.653169          8.95632k       3.69436G          1.39044M                    2.20176                     3.37089           8.95632k     976.146   631.515k       5.23421G/s  0.0299132   32.9566k   414.761k        0.656771   8.89954k/s 3.69118G/s     1.39044M               2.20176                 3.3524          1       8.89954k/s [BEST: throughput=  5.66 GB/s doc_throughput=  8956 docs/s instructions=     1390444 cycles=      412486 branch_miss=     918 cache_miss=       0 cache_ref=     32902 items=         1 avg_time=    112365 ns]
find_tweet<yyjson>/manual_time                            620907 ns       651968 ns         1134           9.986k           1.82173G             573        68.827k    1.28012M              2.02706           2.8847k       3.69275G          2.80059M                    4.43472                     2.18776            2.8847k    7.59793k   631.515k       969.967M/s    1062.02   41.7411k   1.48807M         2.35634   1.61055k/s  2.3966G/s     2.80127M                4.4358                1.88249          1       1.61055k/s [BEST: throughput=  1.82 GB/s doc_throughput=  2884 docs/s instructions=     2800590 cycles=     1280116 branch_miss=    9986 cache_miss=     573 cache_ref=     68827 items=         1 avg_time=    620907 ns]
find_tweet<yyjson_insitu>/manual_time                     418941 ns       449522 ns         1669           6.975k           2.09949G             391        38.479k    1.10751M              1.75374          3.32453k       3.68197G          2.80048M                    4.43454                     2.52861           3.32453k    7.47817k   631.515k       1.40388G/s    13.8736   23.6766k   1.21277M         1.92042   2.38697k/s 2.89486G/s     2.80074M               4.43495                2.30937          1       2.38697k/s [BEST: throughput=  2.10 GB/s doc_throughput=  3324 docs/s instructions=     2800476 cycles=     1107514 branch_miss=    6975 cache_miss=     391 cache_ref=     38479 items=         1 avg_time=    418940 ns]
find_tweet<sajson>/manual_time                            568721 ns       598763 ns         1230          10.472k           1.12052G               0        38.432k    2.08077M              3.29489          1.77433k       3.69198G          5.71295M                    9.04642                     2.74559           1.77433k    10.9667k   631.515k       1058.97M/s    1.05854   38.3525k   2.09832M         3.32267   1.75833k/s 3.68954G/s     5.71295M               9.04642                2.72263          1       1.75833k/s [BEST: throughput=  1.12 GB/s doc_throughput=  1774 docs/s instructions=     5712951 cycles=     2080774 branch_miss=   10472 cache_miss=       0 cache_ref=     38432 items=         1 avg_time=    568720 ns]
find_tweet<rapidjson>/manual_time                        2162075 ns      2190888 ns          325          31.372k           319.482M         21.377k        49.137k    7.29689M              11.5546           505.897       3.69148G          21.7439M                    34.4313                     2.97988            505.897    31.8871k   631.515k       278.556M/s    928.345   27.9916k   7.42495M         11.7574    462.519/s 3.43418G/s     21.7448M               34.4328                2.92861          1        462.519/s [BEST: throughput=  0.32 GB/s doc_throughput=   505 docs/s instructions=    21743898 cycles=     7296894 branch_miss=   31372 cache_miss=   21377 cache_ref=     49137 items=         1 avg_time=   2162074 ns]
find_tweet<rapidjson_insitu>/manual_time                 1538768 ns      1568694 ns          452          26.069k           448.014M              18        36.285k     5.2036M              8.23988           709.427       3.69158G           13.171M                    20.8562                     2.53113            709.427    33.3449k   631.515k       391.391M/s   3.30458k   29.2599k   5.43214M         8.60177    649.871/s 3.53019G/s     13.1713M               20.8567                2.42469          1        649.871/s [BEST: throughput=  0.45 GB/s doc_throughput=   709 docs/s instructions=    13171018 cycles=     5203605 branch_miss=   26069 cache_miss=      18 cache_ref=     36285 items=         1 avg_time=   1538768 ns]
find_tweet<nlohmann_json>/manual_time                    6496218 ns      6525535 ns          110         101.992k           100.754M          1.888k       167.748k    23.1134M                 36.6           159.543       3.68758G          63.6059M                    100.719                      2.7519            159.543    115.609k   631.515k       92.7093M/s    144.309   334.523k   23.9608M         37.9418    153.936/s 3.68843G/s     62.2729M               98.6088                2.59895          1        153.936/s [BEST: throughput=  0.10 GB/s doc_throughput=   159 docs/s instructions=    63605857 cycles=    23113419 branch_miss=  101992 cache_miss=    1888 cache_ref=    167748 items=         1 avg_time=   6496218 ns]
top_tweet<simdjson_dom>/manual_time                       261178 ns       289903 ns         2679           3.053k            2.4385G               0        91.854k    956.329k              1.51434          3.86135k       3.69272G          2.88216M                    4.56388                     3.01377           3.86135k    3.25257k   631.515k       2.25189G/s   0.284808   91.9811k    963.87k         1.52628   3.82881k/s 3.69047G/s     2.88216M               4.56388                 2.9902          1       3.82881k/s [BEST: throughput=  2.44 GB/s doc_throughput=  3861 docs/s instructions=     2882159 cycles=      956329 branch_miss=    3053 cache_miss=       0 cache_ref=     91854 items=         1 avg_time=    261178 ns]
top_tweet<simdjson_ondemand>/manual_time                  163394 ns       191855 ns         4290           1.627k            3.8918G               0        57.019k    599.263k             0.948929          6.16264k       3.69304G          1.91452M                    3.03163                     3.19479           6.16264k    1.73116k   631.515k       3.59955G/s     1.1697   57.0084k   602.775k         0.95449   6.12018k/s 3.68909G/s     1.91452M               3.03163                3.17618          1       6.12018k/s [BEST: throughput=  3.89 GB/s doc_throughput=  6162 docs/s instructions=     1914519 cycles=      599263 branch_miss=    1627 cache_miss=       0 cache_ref=     57019 items=         1 avg_time=    163393 ns]
top_tweet<simdjson_ondemand_forward_only>/manual_time     164688 ns       193176 ns         4249           1.864k           3.88962G               0        57.644k    599.609k             0.949477          6.15919k       3.69311G          1.92466M                    3.04768                     3.20986           6.15919k    2.11291k   631.515k       3.57126G/s  0.0468345   57.8333k   607.836k        0.962504   6.07208k/s 3.69083G/s     1.92466M               3.04768                3.16641          1       6.07208k/s [BEST: throughput=  3.89 GB/s doc_throughput=  6159 docs/s instructions=     1924658 cycles=      599609 branch_miss=    1864 cache_miss=       0 cache_ref=     57644 items=         1 avg_time=    164688 ns]
top_tweet<yyjson>/manual_time                             626194 ns       656373 ns         1125          10.201k            1.7945G             161          72.8k    1.29956M              2.05784          2.84158k        3.6928G          2.82786M                     4.4779                     2.17602           2.84158k    7.74849k   631.515k       961.778M/s    969.073   47.1165k   1.50759M         2.38726   1.59695k/s 2.40754G/s     2.82855M               4.47898                 1.8762          1       1.59695k/s [BEST: throughput=  1.79 GB/s doc_throughput=  2841 docs/s instructions=     2827861 cycles=     1299559 branch_miss=   10201 cache_miss=     161 cache_ref=     72800 items=         1 avg_time=    626194 ns]
top_tweet<yyjson_insitu>/manual_time                      424547 ns       454161 ns         1650           7.072k           2.02896G             242        43.282k    1.12949M              1.78855          3.21284k       3.62889G          2.82754M                    4.47739                     2.50337           3.21284k    7.59016k   631.515k       1.38535G/s    45.3055   28.7959k   1.23339M         1.95307   2.35545k/s 2.90519G/s      2.8278M               4.47781                2.29271          1       2.35545k/s [BEST: throughput=  2.03 GB/s doc_throughput=  3212 docs/s instructions=     2827541 cycles=     1129495 branch_miss=    7072 cache_miss=     242 cache_ref=     43282 items=         1 avg_time=    424546 ns]
top_tweet<sajson>/manual_time                             573002 ns       601998 ns         1220          10.619k           1.11133G               0        43.522k    2.09794M              3.32207          1.75979k       3.69193G          5.74294M                    9.09391                     2.73742           1.75979k    10.9749k   631.515k       1051.06M/s    0.59918   43.6468k   2.11377M         3.34715   1.74519k/s 3.68894G/s     5.74294M               9.09391                2.71692          1       1.74519k/s [BEST: throughput=  1.11 GB/s doc_throughput=  1759 docs/s instructions=     5742943 cycles=     2097938 branch_miss=   10619 cache_miss=       0 cache_ref=     43522 items=         1 avg_time=    573002 ns]
top_tweet<rapidjson>/manual_time                         2150048 ns      2178830 ns          327           31.65k           322.002M          8.941k         52.34k    7.23986M              11.4643           509.889       3.69152G          21.8024M                     34.524                     3.01144            509.889     32.064k   631.515k       280.115M/s    1044.77    32.598k   7.38141M         11.6884    465.106/s 3.43314G/s     21.8031M                34.525                2.95378          1        465.106/s [BEST: throughput=  0.32 GB/s doc_throughput=   509 docs/s instructions=    21802410 cycles=     7239858 branch_miss=   31650 cache_miss=    8941 cache_ref=     52340 items=         1 avg_time=   2150047 ns]
top_tweet<rapidjson_insitu>/manual_time                  1521375 ns      1549769 ns          455          25.949k           450.654M              18         42.02k    5.17318M              8.19169           713.608       3.69162G          13.2245M                    20.9408                     2.55635            713.608    31.9318k   631.515k       395.865M/s   3.55391k     34.91k   5.36648M         8.49778      657.3/s 3.52739G/s     13.2249M               20.9416                2.46436          1          657.3/s [BEST: throughput=  0.45 GB/s doc_throughput=   713 docs/s instructions=    13224458 cycles=     5173178 branch_miss=   25949 cache_miss=      18 cache_ref=     42020 items=         1 avg_time=   1521374 ns]
top_tweet<nlohmann_json>/manual_time                     9076516 ns      9106268 ns           77          191.43k           70.1344M              44       392.681k    33.2234M               52.609           111.057        3.6897G          85.6683M                    135.655                     2.57855            111.057    196.701k   631.515k       66.3536M/s     206.87   404.303k   33.4829M         53.0199    110.174/s 3.68896G/s     86.0466M               136.254                2.56987          1        110.174/s [BEST: throughput=  0.07 GB/s doc_throughput=   111 docs/s instructions=    85668302 cycles=    33223395 branch_miss=  191430 cache_miss=      44 cache_ref=    392681 items=         1 avg_time=   9076515 ns]
