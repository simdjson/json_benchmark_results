run_benchmark: v0.8.0 /home/jkeiser/simdjson_benchmark_results/v0.8.0/skylake-clang10-native.json -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native
git reset --hard v0.8.0
HEAD is now at c96ff018 Version 0.8.
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The CXX compiler identification is Clang 10.0.1
-- The C compiler identification is Clang 10.0.1
-- Check for working CXX compiler: /usr/bin/clang++-10
-- Check for working CXX compiler: /usr/bin/clang++-10 -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Check for working C compiler: /usr/bin/clang-10
-- Check for working C compiler: /usr/bin/clang-10 -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed
-- Check if compiler accepts -pthread
-- Check if compiler accepts -pthread - yes
-- Found Threads: TRUE  
-- Looking for fork
-- Looking for fork - found
-- Looking for wait
-- Looking for wait - found
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- Found Git: /usr/bin/git (found version "2.27.0") 
-- git Version: v0.2.1-c96ff018
-- Version: 0.2.1
-- Performing Test HAVE_CXX_FLAG_STD_CXX11
-- Performing Test HAVE_CXX_FLAG_STD_CXX11 - Success
-- Performing Test HAVE_CXX_FLAG_WALL
-- Performing Test HAVE_CXX_FLAG_WALL - Success
-- Performing Test HAVE_CXX_FLAG_WEXTRA
-- Performing Test HAVE_CXX_FLAG_WEXTRA - Success
-- Performing Test HAVE_CXX_FLAG_WSHADOW
-- Performing Test HAVE_CXX_FLAG_WSHADOW - Success
-- Performing Test HAVE_CXX_FLAG_WERROR
-- Performing Test HAVE_CXX_FLAG_WERROR - Success
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32 - Success
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED - Success
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WD654
-- Performing Test HAVE_CXX_FLAG_WD654 - Failed
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY - Success
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES -- failed to compile
-- Performing Test HAVE_CXX_FLAG_COVERAGE
-- Performing Test HAVE_CXX_FLAG_COVERAGE - Success
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Performing Test USE_BOOST_JSON
-- Performing Test USE_BOOST_JSON - Failed
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Found Python3: /usr/bin/python3.8 (found version "3.8.6") found components: Interpreter 
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 10
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
Scanning dependencies of target benchmark
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_api_internal.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_name.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_name.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_register.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_register.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_runner.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_runner.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/colorprint.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/colorprint.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/commandlineflags.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/commandlineflags.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/complexity.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/complexity.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/console_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/console_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/counter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/counter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/csv_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/csv_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/json_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/json_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/sleep.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sleep.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/statistics.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/statistics.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/string_util.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/string_util.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/sysinfo.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sysinfo.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/timers.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/timers.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -P CMakeFiles/benchmark.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/benchmark.dir/link.txt --verbose=1
/usr/bin/ar qc libbenchmark.a  CMakeFiles/benchmark.dir/benchmark.cc.o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o CMakeFiles/benchmark.dir/benchmark_name.cc.o CMakeFiles/benchmark.dir/benchmark_register.cc.o CMakeFiles/benchmark.dir/benchmark_runner.cc.o CMakeFiles/benchmark.dir/colorprint.cc.o CMakeFiles/benchmark.dir/commandlineflags.cc.o CMakeFiles/benchmark.dir/complexity.cc.o CMakeFiles/benchmark.dir/console_reporter.cc.o CMakeFiles/benchmark.dir/counter.cc.o CMakeFiles/benchmark.dir/csv_reporter.cc.o CMakeFiles/benchmark.dir/json_reporter.cc.o CMakeFiles/benchmark.dir/reporter.cc.o CMakeFiles/benchmark.dir/sleep.cc.o CMakeFiles/benchmark.dir/statistics.cc.o CMakeFiles/benchmark.dir/string_util.cc.o CMakeFiles/benchmark.dir/sysinfo.cc.o CMakeFiles/benchmark.dir/timers.cc.o
/usr/bin/ranlib libbenchmark.a
[ 80%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
Scanning dependencies of target generated-data
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated && /usr/bin/ruby genfeaturejson.rb /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-miss.json ...
[ 80%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/clang++-10  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/include  -march=native -O3 -DNDEBUG -fPIC   -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -pthread -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/clang++-10 -fPIC -march=native -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.7 -o ../libsimdjson.so.7.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.7.0.0 ../libsimdjson.so.7 ../libsimdjson.so
[ 80%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
Scanning dependencies of target yyjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/clang-10  -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src  -O3 -DNDEBUG   -o CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o   -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src/yyjson.c
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -P CMakeFiles/yyjson.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -E cmake_link_script CMakeFiles/yyjson.dir/link.txt --verbose=1
/usr/bin/ar qc libyyjson.a  CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o
/usr/bin/ranlib libyyjson.a
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/clang++-10  -DRAPIDJSON_HAS_STDSTRING -DSAJSON_UNSORTED_OBJECT_KEYS -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_COMPETITION_NLOHMANN_JSON -DSIMDJSON_COMPETITION_RAPIDJSON -DSIMDJSON_COMPETITION_SAJSON -DSIMDJSON_COMPETITION_YYJSON -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/rapidjson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/sajson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/json  -march=native -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/clang++-10  -march=native -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.7.0.0 ../_deps/google_benchmarks/src/libbenchmark.a ../dependencies/libyyjson.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.8.0/skylake-clang10-native.json --benchmark_out_format=json
2021-01-25 02:39:41
Running benchmark/bench_ondemand
Run on (4 X 4000 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 256 KiB (x4)
  L3 Unified 8192 KiB (x1)
Load Average: 0.98, 0.47, 0.45
simdjson::dom implementation:      haswell
simdjson::ondemand implementation: haswell
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                  266098 ns       294300 ns         2583            3.17k           2.38747G               0        87.154k     976.78k              1.54672          3.78055k       3.69276G          2.99617M                    4.74442                     3.06739           378.055k    3.32083k   631.515k       2.21025G/s   0.903988   87.2873k   982.077k         1.55511   3.75801k/s 3.69065G/s     2.99617M               4.74442                3.05085        100       375.801k/s [BEST: throughput=  2.39 GB/s doc_throughput=  3780 docs/s instructions=     2996170 cycles=      976780 branch_miss=    3170 cache_miss=       0 cache_ref=     87154 items=       100 avg_time=    266098 ns]
partial_tweets<simdjson_ondemand>/manual_time             169259 ns       197228 ns         4133           1.674k           3.75908G               0        54.881k    620.517k             0.982585          5.95249k       3.69362G          1.94965M                    3.08726                     3.14197           595.249k    1.80885k   631.515k       3.47483G/s   0.671183   54.7841k   624.805k        0.989375   5.90812k/s 3.69142G/s     1.94965M               3.08726                3.12041        100       590.812k/s [BEST: throughput=  3.76 GB/s doc_throughput=  5952 docs/s instructions=     1949648 cycles=      620517 branch_miss=    1674 cache_miss=       0 cache_ref=     54881 items=       100 avg_time=    169258 ns]
partial_tweets<yyjson>/manual_time                        647178 ns       677312 ns         1080          10.202k           1.75758G             396        74.877k    1.32693M              2.10118          2.78311k       3.69298G          2.90303M                    4.59694                     2.18779           278.311k    7.80583k   631.515k       930.594M/s    996.113   49.2183k   1.53849M         2.43619   1.54517k/s 2.37723G/s     2.90352M               4.59771                1.88726        100       154.517k/s [BEST: throughput=  1.76 GB/s doc_throughput=  2783 docs/s instructions=     2903034 cycles=     1326926 branch_miss=   10202 cache_miss=     396 cache_ref=     74877 items=       100 avg_time=    647177 ns]
partial_tweets<yyjson_insitu>/manual_time                 436182 ns       465035 ns         1605           7.212k            1.9961G             565        45.575k    1.16098M              1.83841          3.16081k       3.66964G          2.90272M                    4.59644                     2.50023           316.081k    7.55701k   631.515k       1.34839G/s    150.022   31.9391k   1.26333M         2.00048   2.29262k/s 2.89634G/s     2.90298M               4.59686                2.29788        100       229.262k/s [BEST: throughput=  2.00 GB/s doc_throughput=  3160 docs/s instructions=     2902723 cycles=     1160983 branch_miss=    7212 cache_miss=     565 cache_ref=     45575 items=       100 avg_time=    436181 ns]
partial_tweets<sajson>/manual_time                        583924 ns       612254 ns         1196          10.786k           1.12251G               0        45.721k    2.07705M              3.28899          1.77748k       3.69191G          5.86951M                    9.29433                     2.82589           177.748k    11.0957k   631.515k        1031.4M/s    1.61957      45.8k   2.15466M         3.41189   1.71255k/s 3.68996G/s     5.86951M               9.29433                 2.7241        100       171.255k/s [BEST: throughput=  1.12 GB/s doc_throughput=  1777 docs/s instructions=     5869509 cycles=     2077048 branch_miss=   10786 cache_miss=       0 cache_ref=     45721 items=       100 avg_time=    583924 ns]
partial_tweets<rapidjson>/manual_time                    2173350 ns      2202478 ns          322           32.19k           319.414M            1046        51.389k    7.28923M              11.5424            505.79       3.68682G          21.8985M                    34.6761                     3.00422            50.579k    32.2799k   631.515k       277.111M/s    637.739   32.8679k   7.43327M         11.7705    460.119/s 3.42019G/s     21.8994M               34.6776                2.94613        100       46.0119k/s [BEST: throughput=  0.32 GB/s doc_throughput=   505 docs/s instructions=    21898455 cycles=     7289230 branch_miss=   32190 cache_miss=    1046 cache_ref=     51389 items=       100 avg_time=   2173349 ns]
partial_tweets<rapidjson_insitu>/manual_time             1522011 ns      1550571 ns          461          26.245k           447.124M              78        42.884k    5.21405M              8.25641           708.018       3.69164G          13.3151M                    21.0843                     2.55369           70.8018k    26.1417k   631.515k         395.7M/s    272.915   33.8895k   5.27248M         8.34893    657.026/s 3.46415G/s     13.3154M               21.0849                2.52546        100       65.7026k/s [BEST: throughput=  0.45 GB/s doc_throughput=   708 docs/s instructions=    13315052 cycles=     5214048 branch_miss=   26245 cache_miss=      78 cache_ref=     42884 items=       100 avg_time=   1522010 ns]
partial_tweets<nlohmann_json>/manual_time                8205242 ns      8241129 ns           86         150.835k           79.6822M             166       228.942k    29.2401M              46.3015           126.176       3.68941G          78.1904M                    123.814                     2.67408           12.6176k    160.771k   631.515k       73.3994M/s   1.79905k   369.968k   30.2711M         47.9341    121.873/s 3.68924G/s     79.2887M               125.553                2.61929        100       12.1873k/s [BEST: throughput=  0.08 GB/s doc_throughput=   126 docs/s instructions=    78190376 cycles=    29240105 branch_miss=  150835 cache_miss=     166 cache_ref=    228942 items=       100 avg_time=   8205242 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                  91214969 ns     94608476 ns            8         953.453k           504.845M        10.9466M       15.2204M    336.137M              7.30753           10.9752       3.68916G          1039.39M                    22.5961                     3.09217           10.9752M    954.317k   45.9988M       480.928M/s   10.9862M   15.2167M   336.484M         7.31507    10.9631/s 3.68892G/s     1039.39M               22.5961                3.08898      1000k       10.9631M/s [BEST: throughput=  0.50 GB/s doc_throughput=    10 docs/s instructions=  1039392802 cycles=   336137232 branch_miss=  953453 cache_miss=10946600 cache_ref=  15220369 items=   1000000 avg_time=  91214969 ns]
large_random<simdjson_ondemand>/manual_time             72015808 ns     75398404 ns           10         974.315k            639.01M         5.7337M       7.90074M    265.555M              5.77309           13.8919       3.68907G          689.848M                    14.9971                     2.59776           13.8919M    974.385k   45.9988M       609.142M/s   5.76376M   7.90396M    265.64M         5.77495    13.8858/s 3.68864G/s     689.848M               14.9971                2.59692      1000k       13.8858M/s [BEST: throughput=  0.64 GB/s doc_throughput=    13 docs/s instructions=   689847684 cycles=   265555275 branch_miss=  974315 cache_miss= 5733702 cache_ref=   7900745 items=   1000000 avg_time=  72015808 ns]
large_random<simdjson_ondemand_unordered>/manual_time   67034585 ns     70401037 ns           10         920.621k           686.476M        5.69963M       7.89463M    247.192M              5.37388           14.9238       3.68904G          686.848M                    14.9319                      2.7786           14.9238M     920.49k   45.9988M       654.406M/s   5.73163M   7.89721M   247.294M          5.3761    14.9177/s 3.68905G/s     686.848M               14.9319                2.77745      1000k       14.9177M/s [BEST: throughput=  0.69 GB/s doc_throughput=    14 docs/s instructions=   686847927 cycles=   247191967 branch_miss=  920621 cache_miss= 5699630 cache_ref=   7894629 items=   1000000 avg_time=  67034585 ns]
large_random<yyjson>/manual_time                       121954970 ns    125372758 ns            6         673.692k           377.309M        5.87666M       8.94224M    330.262M               7.1798           8.20259         2.709G           866.68M                    18.8414                     2.62422           8.20259M    676.251k   45.9988M       359.705M/s   5.89398M   8.98541M   330.594M         7.18701    8.19975/s 2.71078G/s      866.68M               18.8414                2.62159      1000k       8.19975M/s [BEST: throughput=  0.38 GB/s doc_throughput=     8 docs/s instructions=   866679875 cycles=   330261938 branch_miss=  673692 cache_miss= 5876664 cache_ref=   8942236 items=   1000000 avg_time= 121954970 ns]
large_random<yyjson_insitu>/manual_time                103936488 ns    107347639 ns            7         673.676k           442.768M        5.05206M       7.70838M    297.944M              6.47722           9.62566       2.86791G          860.559M                    18.7083                     2.88832           9.62566M    675.671k   45.9988M       422.064M/s   5.04648M   7.68172M   298.092M         6.48042    9.62126/s 2.86802G/s     860.559M               18.7083                 2.8869      1000k       9.62126M/s [BEST: throughput=  0.44 GB/s doc_throughput=     9 docs/s instructions=   860559121 cycles=   297944307 branch_miss=  673676 cache_miss= 5052057 cache_ref=   7708381 items=   1000000 avg_time= 103936488 ns]
large_random<sajson>/manual_time                        89183894 ns     92576404 ns            8         581.477k           516.753M        8.30386M       12.1667M    328.406M              7.13944           11.2341       3.68933G          1094.99M                    23.8048                     3.33427           11.2341M    582.041k   45.9988M       491.881M/s   8.29905M   12.1139M   329.007M         7.15252    11.2128/s 3.68909G/s     1094.99M               23.8048                3.32818      1000k       11.2128M/s [BEST: throughput=  0.52 GB/s doc_throughput=    11 docs/s instructions=  1094993865 cycles=   328405603 branch_miss=  581477 cache_miss= 8303858 cache_ref=  12166658 items=   1000000 avg_time=  89183894 ns]
large_random<rapidjson>/manual_time                    213382871 ns    216809227 ns            3         617.491k           221.283M        7.05844M       10.6908M    708.932M               15.412           4.81063       3.41041G          2.01614G                    43.8304                     2.84392           4.81063M     617.54k   45.9988M       205.583M/s   6.54269M   10.0367M   710.564M         15.4475    4.68641/s    3.33G/s     2.01615G               43.8306                 2.8374      1000k       4.68641M/s [BEST: throughput=  0.22 GB/s doc_throughput=     4 docs/s instructions=  2016143544 cycles=   708932261 branch_miss=  617491 cache_miss= 7058441 cache_ref=  10690842 items=   1000000 avg_time= 213382871 ns]
large_random<rapidjson_lossless>/manual_time           247279682 ns    250699543 ns            3         601.138k           190.389M        7.04924M       10.7165M    833.403M              18.1179             4.139       3.44946G          2.47511G                    53.8082                     2.96988             4.139M    601.331k   45.9988M       177.402M/s   6.53185M   10.0706M   835.722M         18.1683      4.044/s 3.37966G/s     2.47512G               53.8084                2.96166      1000k         4.044M/s [BEST: throughput=  0.19 GB/s doc_throughput=     4 docs/s instructions=  2475110647 cycles=   833403238 branch_miss=  601138 cache_miss= 7049240 cache_ref=  10716544 items=   1000000 avg_time= 247279682 ns]
large_random<rapidjson_insitu>/manual_time             237321835 ns    240740777 ns            3         588.476k           198.243M         8.1271M       12.2468M    798.311M              17.3551           4.30974       3.44051G          1.74114G                     37.852                     2.18103           4.30974M    588.384k   45.9988M       184.845M/s   7.64436M   11.6014M   799.227M          17.375    4.21369/s 3.36769G/s     1.74115G               37.8521                2.17855      1000k       4.21369M/s [BEST: throughput=  0.20 GB/s doc_throughput=     4 docs/s instructions=  1741143784 cycles=   798311103 branch_miss=  588476 cache_miss= 8127104 cache_ref=  12246766 items=   1000000 avg_time= 237321835 ns]
large_random<nlohmann_json>/manual_time               1283689032 ns   1287123697 ns            1         6.00898M           35.8333M         47.138M       60.9057M    4.72332G              102.684          0.779005       3.67949G          12.3636G                     268.78                     2.61756           779.005k    6.00898M   45.9988M       34.1733M/s    47.138M   60.9057M   4.72332G         102.684   0.779005/s 3.67949G/s     12.3636G                268.78                2.61756      1000k       779.005k/s [BEST: throughput=  0.04 GB/s doc_throughput=     0 docs/s instructions= 12363550489 cycles=  4723315693 branch_miss= 6008984 cache_miss=47138011 cache_ref=  60905677 items=   1000000 avg_time=1283689032 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                        94404078 ns    104930168 ns            7         1060.53k           1.45554G        15.8749M       22.2315M    348.012M              2.53459           10.6008       3.68921G          985.296M                    7.17596                     2.83121           5.55787M    1060.27k   137.305M       1.35455G/s   15.8844M   22.1227M   348.264M         2.53643    10.5928/s 3.68908G/s     985.296M               7.17596                2.82916   524.288k       5.55366M/s [BEST: throughput=  1.46 GB/s doc_throughput=    10 docs/s instructions=   985295807 cycles=   348012404 branch_miss= 1060534 cache_miss=15874939 cache_ref=  22231525 items=    524288 avg_time=  94404077 ns]
kostya<simdjson_ondemand>/manual_time                   62548667 ns     73031665 ns           11         468.326k           2.19739G        10.1091M       13.9086M    230.522M              1.67891           16.0037       3.68922G          660.998M                    4.81409                     2.86739           8.39057M    468.507k   137.305M       2.04441G/s   10.1272M   13.8549M   230.741M          1.6805    15.9876/s 3.68898G/s     660.998M               4.81409                2.86468   524.288k       8.38208M/s [BEST: throughput=  2.20 GB/s doc_throughput=    16 docs/s instructions=   660998286 cycles=   230522468 branch_miss=  468326 cache_miss=10109052 cache_ref=  13908627 items=    524288 avg_time=  62548666 ns]
kostya<yyjson>/manual_time                             178017254 ns    188559074 ns            4         418.827k           772.529M        11.2169M       16.2437M    459.476M              3.34639           5.62637       2.58518G          978.903M                     7.1294                     2.13048           2.94984M    420.033k   137.305M       735.571M/s   11.2179M   16.2356M    459.57M         3.34708    5.61743/s 2.58161G/s     978.903M                7.1294                2.13004   524.288k       2.94515M/s [BEST: throughput=  0.77 GB/s doc_throughput=     5 docs/s instructions=   978902588 cycles=   459475834 branch_miss=  418827 cache_miss=11216939 cache_ref=  16243725 items=    524288 avg_time= 178017254 ns]
kostya<yyjson_insitu>/manual_time                      124086583 ns    134627764 ns            6          426.98k           1.10682G        8.70696M       12.3854M     363.39M              2.64659           8.06104        2.9293G          960.633M                    6.99635                     2.64353           4.22631M    426.398k   137.305M       1055.27M/s    8.7099M   12.3451M   363.434M         2.64691    8.05889/s 2.92887G/s     960.633M               6.99635                2.64321   524.288k       4.22518M/s [BEST: throughput=  1.11 GB/s doc_throughput=     8 docs/s instructions=   960633224 cycles=   363390248 branch_miss=  426980 cache_miss= 8706958 cache_ref=  12385403 items=    524288 avg_time= 124086583 ns]
kostya<sajson>/manual_time                             139218592 ns    149777489 ns            5         449.755k           987.885M        12.2945M       17.2039M      512.7M              3.73402           7.19482       3.68878G           1.5245G                     11.103                     2.97348           3.77216M    449.738k   137.305M       940.566M/s   12.3184M   17.1761M   513.471M         3.73964    7.18295/s 3.68824G/s      1.5245G                11.103                2.96901   524.288k       3.76593M/s [BEST: throughput=  0.99 GB/s doc_throughput=     7 docs/s instructions=  1524502573 cycles=   512699777 branch_miss=  449755 cache_miss=12294545 cache_ref=  17203941 items=    524288 avg_time= 139218591 ns]
kostya<rapidjson>/manual_time                          277986814 ns    288583080 ns            3         957.849k           500.045M         8.3102M       12.3481M    931.577M              6.78473           3.64186       3.39267G          2.74239G                     19.973                     2.94381           1.90938M    957.516k   137.305M       471.045M/s   8.00488M   11.9129M   934.638M         6.80702    3.59729/s 3.36217G/s     2.74239G                19.973                2.93418   524.288k       1.88602M/s [BEST: throughput=  0.50 GB/s doc_throughput=     3 docs/s instructions=  2742391711 cycles=   931577485 branch_miss=  957849 cache_miss= 8310203 cache_ref=  12348062 items=    524288 avg_time= 277986814 ns]
kostya<rapidjson_lossless>/manual_time                 288980166 ns    299597696 ns            2         950.664k           478.967M        8.31582M       12.2966M    976.185M              7.10961           3.48835       3.40527G          3.00767G                     21.905                     3.08105            1.8289M    949.726k   137.305M       453.125M/s   8.08337M   12.0746M   977.774M         7.12118    3.46045/s 3.38353G/s     3.00767G               21.9051                3.07604   524.288k       1.81427M/s [BEST: throughput=  0.48 GB/s doc_throughput=     3 docs/s instructions=  3007672133 cycles=   976184955 branch_miss=  950664 cache_miss= 8315820 cache_ref=  12296606 items=    524288 avg_time= 288980166 ns]
kostya<rapidjson_insitu>/manual_time                   272831315 ns    283362550 ns            3         1006.24k           509.042M        11.9496M       16.1434M    913.986M              6.65661           3.70738        3.3885G          2.22149G                    16.1792                     2.43055           1.94374M    1002.69k   137.305M       479.946M/s   11.6507M   15.7204M   915.867M         6.67031    3.66527/s  3.3569G/s     2.22149G               16.1792                2.42556   524.288k       1.92166M/s [BEST: throughput=  0.51 GB/s doc_throughput=     3 docs/s instructions=  2221486268 cycles=   913986329 branch_miss= 1006241 cache_miss=11949608 cache_ref=  16143365 items=    524288 avg_time= 272831314 ns]
kostya<nlohmann_json>/manual_time                     1855638106 ns   1866076600 ns            1         14.8307M           73.9934M        69.4658M        86.913M    6.84473G              49.8505          0.538898       3.68861G          17.2658G                    125.748                     2.52249           282.538k    14.8307M   137.305M       70.5656M/s   69.4658M    86.913M   6.84473G         49.8505   0.538898/s 3.68861G/s     17.2658G               125.748                2.52249   524.288k       282.538k/s [BEST: throughput=  0.07 GB/s doc_throughput=     0 docs/s instructions= 17265773329 cycles=  6844726795 branch_miss=14830664 cache_miss=69465826 cache_ref=  86912991 items=    524288 avg_time=1855638106 ns]
distinct_user_id<simdjson_dom>/manual_time                267054 ns       297533 ns         2623           3.241k           2.38182G               0        94.683k    979.102k               1.5504          3.77159k       3.69277G          2.93045M                    4.64034                     2.99299           433.733k    3.41869k   631.515k       2.20234G/s    10.8357    94.461k   985.435k         1.56043   3.74456k/s 3.69002G/s     2.93045M               4.64034                2.97376        115       430.624k/s [BEST: throughput=  2.38 GB/s doc_throughput=  3771 docs/s instructions=     2930445 cycles=      979102 branch_miss=    3241 cache_miss=       0 cache_ref=     94683 items=       115 avg_time=    267054 ns]
distinct_user_id<simdjson_ondemand>/manual_time           163483 ns       192962 ns         4281            1.57k           3.89993G               0        56.842k    598.006k             0.946939          6.17551k       3.69299G          1.89893M                    3.00695                     3.17544           710.183k    1.69168k   631.515k       3.59758G/s  0.0401775   56.9086k    603.29k        0.955306   6.11683k/s 3.69023G/s     1.89893M               3.00695                3.14762        115       703.436k/s [BEST: throughput=  3.90 GB/s doc_throughput=  6175 docs/s instructions=     1898931 cycles=      598006 branch_miss=    1570 cache_miss=       0 cache_ref=     56842 items=       115 avg_time=    163483 ns]
distinct_user_id<yyjson>/manual_time                      557015 ns       590452 ns         1000           6.695k           1.86816G         22.329k        76.287k    1.24808M              1.97633          2.95821k       3.69208G          2.86133M                     4.5309                     2.29259           340.194k    7.58634k   631.515k       1081.23M/s   7.53625k   58.0157k   1.46186M         2.31485   1.79528k/s 2.62446G/s     2.86153M               4.53121                1.95745        115       206.458k/s [BEST: throughput=  1.87 GB/s doc_throughput=  2958 docs/s instructions=     2861332 cycles=     1248079 branch_miss=    6695 cache_miss=   22329 cache_ref=     76287 items=       115 avg_time=    557015 ns]
distinct_user_id<yyjson_insitu>/manual_time               429430 ns       462098 ns         1630           7.329k           2.02657G             208        46.806k    1.14716M              1.81653          3.20906k       3.68132G          2.86082M                    4.53009                     2.49382           369.042k    7.72401k   631.515k       1.36959G/s    76.3914   32.4831k   1.25091M          1.9808   2.32867k/s 2.91295G/s     2.86108M               4.53051                2.28721        115       267.797k/s [BEST: throughput=  2.03 GB/s doc_throughput=  3209 docs/s instructions=     2860819 cycles=     1147165 branch_miss=    7329 cache_miss=     208 cache_ref=     46806 items=       115 avg_time=    429429 ns]
distinct_user_id<sajson>/manual_time                      580845 ns       611454 ns         1206          11.021k           1.12655G               0        47.848k    2.06949M              3.27703          1.78389k       3.69176G          5.80807M                    9.19704                     2.80652           205.148k    11.1746k   631.515k       1036.87M/s    8.13184   47.9543k   2.14307M         3.39354   1.72163k/s 3.68958G/s     5.80807M               9.19704                2.71016        115       197.987k/s [BEST: throughput=  1.13 GB/s doc_throughput=  1783 docs/s instructions=     5808071 cycles=     2069495 branch_miss=   11021 cache_miss=       0 cache_ref=     47848 items=       115 avg_time=    580845 ns]
distinct_user_id<rapidjson>/manual_time                  2161738 ns      2191781 ns          320          32.641k           320.637M             932        54.736k     7.2707M              11.5131           507.727       3.69153G          21.8274M                    34.5636                     3.00211           58.3886k    32.8517k   631.515k         278.6M/s   1.21981k   35.9189k   7.42143M         11.7518    462.591/s 3.43308G/s     21.8283M                34.565                2.94126        115       53.1979k/s [BEST: throughput=  0.32 GB/s doc_throughput=   507 docs/s instructions=    21827427 cycles=     7270700 branch_miss=   32641 cache_miss=     932 cache_ref=     54736 items=       115 avg_time=   2161737 ns]
distinct_user_id<rapidjson_insitu>/manual_time           1534751 ns      1565107 ns          446          25.499k           419.105M              36        36.038k    5.22843M              8.27919            663.65       3.46985G          13.2499M                    20.9812                     2.53421           76.3198k    33.2226k   631.515k       392.415M/s   3.41215k   38.8102k   5.41237M         8.57046    651.572/s 3.52655G/s     13.2496M               20.9807                2.44803        115       74.9307k/s [BEST: throughput=  0.42 GB/s doc_throughput=   663 docs/s instructions=    13249939 cycles=     5228431 branch_miss=   25499 cache_miss=      36 cache_ref=     36038 items=       115 avg_time=   1534750 ns]
distinct_user_id<nlohmann_json>/manual_time              7579765 ns      7615191 ns           94         126.435k           86.2082M              38       223.028k    27.0318M              42.8047            136.51       3.69011G          73.5927M                    116.534                     2.72245           15.6987k    140.882k   631.515k       79.4562M/s   1.46133k   401.087k   27.9622M         44.2779     131.93/s 3.68906G/s     72.2852M               114.463                2.58511        115        15.172k/s [BEST: throughput=  0.09 GB/s doc_throughput=   136 docs/s instructions=    73592664 cycles=    27031810 branch_miss=  126435 cache_miss=      38 cache_ref=    223028 items=       115 avg_time=   7579764 ns]
find_tweet<simdjson_dom>/manual_time                      255215 ns       284472 ns         2741           3.072k           2.48933G               0        84.263k    936.776k              1.48338          3.94183k       3.69262G          2.84527M                    4.50547                      3.0373           3.94183k    3.14774k   631.515k       2.30451G/s    0.83838   84.2731k   941.882k         1.49146   3.91827k/s 3.69055G/s     2.84527M               4.50547                3.02083          1       3.91827k/s [BEST: throughput=  2.49 GB/s doc_throughput=  3941 docs/s instructions=     2845271 cycles=      936776 branch_miss=    3072 cache_miss=       0 cache_ref=     84263 items=         1 avg_time=    255214 ns]
find_tweet<simdjson_ondemand>/manual_time                 113694 ns       142209 ns         6153              915           5.58497G               0        32.786k    417.757k             0.661516          8.84377k       3.69455G          1.39044M                    2.20176                     3.32836           8.84377k     973.705   631.515k       5.17303G/s   0.722087   32.9116k   419.741k        0.664658   8.79551k/s 3.69184G/s     1.39044M               2.20176                3.31262          1       8.79551k/s [BEST: throughput=  5.58 GB/s doc_throughput=  8843 docs/s instructions=     1390444 cycles=      417757 branch_miss=     915 cache_miss=       0 cache_ref=     32786 items=         1 avg_time=    113694 ns]
find_tweet<yyjson>/manual_time                            620434 ns       651331 ns         1136           9.816k           1.83576G             826         68.06k    1.27036M              2.01161          2.90692k       3.69284G          2.80059M                    4.43472                     2.20456           2.90692k    7.60866k   631.515k       970.708M/s    1043.23   41.5765k    1.4873M         2.35513   1.61178k/s  2.3972G/s     2.80107M               4.43547                1.88332          1       1.61178k/s [BEST: throughput=  1.84 GB/s doc_throughput=  2906 docs/s instructions=     2800590 cycles=     1270362 branch_miss=    9816 cache_miss=     826 cache_ref=     68060 items=         1 avg_time=    620433 ns]
find_tweet<yyjson_insitu>/manual_time                     417865 ns       448434 ns         1674           7.027k           2.09391G             408        38.084k    1.11027M               1.7581          3.31569k        3.6813G          2.80048M                    4.43454                     2.52235           3.31569k    7.40471k   631.515k        1.4075G/s    14.5335    23.517k   1.20955M         1.91531   2.39312k/s  2.8946G/s     2.80074M               4.43495                2.31552          1       2.39312k/s [BEST: throughput=  2.09 GB/s doc_throughput=  3315 docs/s instructions=     2800476 cycles=     1110265 branch_miss=    7027 cache_miss=     408 cache_ref=     38084 items=         1 avg_time=    417864 ns]
find_tweet<sajson>/manual_time                            568487 ns       598523 ns         1227          10.941k           1.12455G               0        38.323k    2.06622M              3.27185          1.78072k       3.67937G          5.71295M                    9.04642                     2.76492           1.78072k    10.8946k   631.515k       1059.41M/s    1.29584   38.2555k   2.09765M         3.32161   1.75906k/s 3.68988G/s     5.71295M               9.04642                 2.7235          1       1.75906k/s [BEST: throughput=  1.12 GB/s doc_throughput=  1780 docs/s instructions=     5712952 cycles=     2066225 branch_miss=   10941 cache_miss=       0 cache_ref=     38323 items=         1 avg_time=    568486 ns]
find_tweet<rapidjson>/manual_time                        2152569 ns      2181939 ns          327           31.54k           321.227M          9.063k        48.613k    7.25732M              11.4919           508.661       3.69152G          21.7435M                    34.4307                     2.99608            508.661    32.0978k   631.515k       279.786M/s    947.382   28.8821k   7.39319M         11.7071    464.561/s 3.43459G/s     21.7442M               34.4319                2.94112          1        464.561/s [BEST: throughput=  0.32 GB/s doc_throughput=   508 docs/s instructions=    21743521 cycles=     7257319 branch_miss=   31540 cache_miss=    9063 cache_ref=     48613 items=         1 avg_time=   2152568 ns]
find_tweet<rapidjson_insitu>/manual_time                 1532421 ns      1562378 ns          451          25.487k            446.79M         12.768k        37.793k    5.21793M              8.26255           707.489       3.69162G          13.1703M                    20.8551                     2.52405            707.489    32.3101k   631.515k       393.012M/s   3.44829k   30.2572k   5.41211M         8.57004    652.562/s 3.53174G/s     13.1708M               20.8558                2.43358          1        652.562/s [BEST: throughput=  0.45 GB/s doc_throughput=   707 docs/s instructions=    13170295 cycles=     5217926 branch_miss=   25487 cache_miss=   12768 cache_ref=     37793 items=         1 avg_time=   1532421 ns]
find_tweet<nlohmann_json>/manual_time                    6495522 ns      6526649 ns          111         101.036k           101.086M             404        169.62k    23.0438M              36.4897           160.069        3.6886G          63.6291M                    100.756                     2.76123            160.069    115.491k   631.515k       92.7192M/s    1035.91   334.684k   23.9623M         37.9441    153.952/s 3.68905G/s     62.2727M               98.6085                2.59878          1        153.952/s [BEST: throughput=  0.10 GB/s doc_throughput=   160 docs/s instructions=    63629135 cycles=    23043763 branch_miss=  101036 cache_miss=     404 cache_ref=    169620 items=         1 avg_time=   6495521 ns]
top_tweet<simdjson_dom>/manual_time                       261542 ns       290183 ns         2676           3.092k              2.43G               0        91.659k    959.612k              1.51954          3.84789k       3.69248G          2.88216M                    4.56388                     3.00346           3.84789k    3.21581k   631.515k       2.24876G/s    1.22048   91.8549k    964.85k         1.52783   3.82348k/s 3.68908G/s     2.88216M               4.56388                2.98716          1       3.82348k/s [BEST: throughput=  2.43 GB/s doc_throughput=  3847 docs/s instructions=     2882159 cycles=      959612 branch_miss=    3092 cache_miss=       0 cache_ref=     91659 items=         1 avg_time=    261542 ns]
top_tweet<simdjson_ondemand>/manual_time                  163751 ns       192184 ns         4271           1.552k           3.90152G               0        57.041k    597.806k             0.946622          6.17803k       3.69326G          1.91452M                    3.03163                     3.20258           6.17803k    1.73258k   631.515k        3.5917G/s   0.805198   57.0189k   604.405k        0.957071   6.10684k/s   3.691G/s     1.91452M               3.03163                3.16761          1       6.10684k/s [BEST: throughput=  3.90 GB/s doc_throughput=  6178 docs/s instructions=     1914519 cycles=      597806 branch_miss=    1552 cache_miss=       0 cache_ref=     57041 items=         1 avg_time=    163750 ns]
top_tweet<simdjson_ondemand_forward_only>/manual_time     164901 ns       193284 ns         4244            1.89k           3.88142G               0        57.812k    600.864k             0.951464          6.14621k       3.69303G          1.92466M                    3.04768                     3.20315           6.14621k    2.11938k   631.515k       3.56666G/s  0.0607917   57.9102k    608.47k        0.963509   6.06426k/s 3.68992G/s     1.92466M               3.04768                3.16311          1       6.06426k/s [BEST: throughput=  3.88 GB/s doc_throughput=  6146 docs/s instructions=     1924658 cycles=      600864 branch_miss=    1890 cache_miss=       0 cache_ref=     57812 items=         1 avg_time=    164900 ns]
top_tweet<yyjson>/manual_time                             625734 ns       656225 ns         1125          10.059k           1.79915G             538        74.383k    1.29631M              2.05269          2.84895k       3.69311G          2.82786M                     4.4779                     2.18148           2.84895k     7.7667k   631.515k       962.485M/s    999.695   46.8037k   1.50782M         2.38762   1.59812k/s 2.40968G/s     2.82834M               4.47866                1.87578          1       1.59812k/s [BEST: throughput=  1.80 GB/s doc_throughput=  2848 docs/s instructions=     2827861 cycles=     1296306 branch_miss=   10059 cache_miss=     538 cache_ref=     74383 items=         1 avg_time=    625734 ns]
top_tweet<yyjson_insitu>/manual_time                      423920 ns       453410 ns         1652           7.419k           2.04332G             365        42.771k    1.13797M              1.80197          3.23559k         3.682G          2.82754M                    4.47739                     2.48472           3.23559k     7.5395k   631.515k        1.3874G/s    46.5605   28.8245k   1.23121M         1.94961   2.35894k/s 2.90434G/s      2.8278M               4.47781                2.29677          1       2.35894k/s [BEST: throughput=  2.04 GB/s doc_throughput=  3235 docs/s instructions=     2827540 cycles=     1137971 branch_miss=    7419 cache_miss=     365 cache_ref=     42771 items=         1 avg_time=    423919 ns]
top_tweet<sajson>/manual_time                             573453 ns       602469 ns         1219          10.615k           1.10991G               0        43.737k    2.10059M              3.32627          1.75754k       3.69186G          5.74294M                    9.09391                     2.73397           1.75754k    11.0425k   631.515k       1050.23M/s    8.49303   43.6906k   2.11557M         3.34999   1.74382k/s 3.68917G/s     5.74294M               9.09391                2.71461          1       1.74382k/s [BEST: throughput=  1.11 GB/s doc_throughput=  1757 docs/s instructions=     5742943 cycles=     2100589 branch_miss=   10615 cache_miss=       0 cache_ref=     43737 items=         1 avg_time=    573453 ns]
top_tweet<rapidjson>/manual_time                         2153259 ns      2181731 ns          327          31.935k           321.643M             816        51.319k    7.24805M              11.4772            509.32       3.69158G          21.8022M                    34.5236                       3.008             509.32    32.2748k   631.515k       279.697M/s    1062.02   32.3683k   7.38957M         11.7013    464.412/s 3.43181G/s      21.803M               34.5249                 2.9505          1        464.412/s [BEST: throughput=  0.32 GB/s doc_throughput=   509 docs/s instructions=    21802153 cycles=     7248054 branch_miss=   31935 cache_miss=     816 cache_ref=     51319 items=         1 avg_time=   2153259 ns]
top_tweet<rapidjson_insitu>/manual_time                  1518556 ns      1547682 ns          464          26.066k           450.374M          2.363k        41.668k    5.17627M              8.19659           713.165       3.69153G          13.2245M                     20.941                     2.55484            713.165    31.6511k   631.515k         396.6M/s   3.51131k   35.1445k   5.35914M         8.48616     658.52/s  3.5291G/s     13.2248M               20.9414                2.46771          1         658.52/s [BEST: throughput=  0.45 GB/s doc_throughput=   713 docs/s instructions=    13224535 cycles=     5176271 branch_miss=   26066 cache_miss=    2363 cache_ref=     41668 items=         1 avg_time=   1518555 ns]
top_tweet<nlohmann_json>/manual_time                     9072665 ns      9100848 ns           77         191.308k           70.1194M             920       401.539k    33.2304M              52.6202           111.034        3.6897G          85.7101M                    135.721                     2.57926            111.034    195.815k   631.515k       66.3818M/s    326.208   406.838k   33.4622M         52.9871    110.221/s 3.68824G/s     86.0637M               136.281                2.57197          1        110.221/s [BEST: throughput=  0.07 GB/s doc_throughput=   111 docs/s instructions=    85710052 cycles=    33230441 branch_miss=  191308 cache_miss=     920 cache_ref=    401539 items=         1 avg_time=   9072665 ns]
