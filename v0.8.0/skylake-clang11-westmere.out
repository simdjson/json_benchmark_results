run_benchmark: v0.8.0 /home/jkeiser/simdjson_benchmark_results/v0.8.0/skylake-clang11-westmere.json -DSIMDJSON_IMPLEMENTATION=westmere
git reset --hard v0.8.0
HEAD is now at c96ff018 Version 0.8.
cmake -DSIMDJSON_IMPLEMENTATION=westmere ..
-- The CXX compiler identification is Clang 11.0.0
-- The C compiler identification is Clang 11.0.0
-- Check for working CXX compiler: /usr/bin/clang++-11
-- Check for working CXX compiler: /usr/bin/clang++-11 -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Check for working C compiler: /usr/bin/clang-11
-- Check for working C compiler: /usr/bin/clang-11 -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- No build type selected, default to Release
-- Excluding implementation fallback due to SIMDJSON_IMPLEMENTATION=westmere
-- Including implementation westmere due to SIMDJSON_IMPLEMENTATION=westmere
-- Excluding implementation haswell due to SIMDJSON_IMPLEMENTATION=westmere
-- Excluding implementation arm64 due to SIMDJSON_IMPLEMENTATION=westmere
-- Excluding implementation ppc64 due to SIMDJSON_IMPLEMENTATION=westmere
-- Selected implementation westmere as builtin implementation based on westmere.
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed
-- Check if compiler accepts -pthread
-- Check if compiler accepts -pthread - yes
-- Found Threads: TRUE  
-- Looking for fork
-- Looking for fork - found
-- Looking for wait
-- Looking for wait - found
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- Found Git: /usr/bin/git (found version "2.27.0") 
-- git Version: v0.2.1-c96ff018
-- Version: 0.2.1
-- Performing Test HAVE_CXX_FLAG_STD_CXX11
-- Performing Test HAVE_CXX_FLAG_STD_CXX11 - Success
-- Performing Test HAVE_CXX_FLAG_WALL
-- Performing Test HAVE_CXX_FLAG_WALL - Success
-- Performing Test HAVE_CXX_FLAG_WEXTRA
-- Performing Test HAVE_CXX_FLAG_WEXTRA - Success
-- Performing Test HAVE_CXX_FLAG_WSHADOW
-- Performing Test HAVE_CXX_FLAG_WSHADOW - Success
-- Performing Test HAVE_CXX_FLAG_WERROR
-- Performing Test HAVE_CXX_FLAG_WERROR - Success
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32 - Success
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED - Success
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WD654
-- Performing Test HAVE_CXX_FLAG_WD654 - Failed
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY - Success
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES -- failed to compile
-- Performing Test HAVE_CXX_FLAG_COVERAGE
-- Performing Test HAVE_CXX_FLAG_COVERAGE - Success
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Performing Test USE_BOOST_JSON
-- Performing Test USE_BOOST_JSON - Failed
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Found Python3: /usr/bin/python3.8 (found version "3.8.6") found components: Interpreter 
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
make[1]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[2]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
Scanning dependencies of target benchmark
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[  0%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/benchmark.cc.o
[ 10%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o
[ 10%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/benchmark_name.cc.o
[ 10%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/benchmark_register.cc.o
[ 20%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/benchmark_runner.cc.o
[ 20%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/colorprint.cc.o
[ 30%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/commandlineflags.cc.o
[ 30%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/complexity.cc.o
[ 30%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/console_reporter.cc.o
[ 40%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/counter.cc.o
[ 40%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/csv_reporter.cc.o
[ 50%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/json_reporter.cc.o
[ 50%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/reporter.cc.o
[ 60%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/sleep.cc.o
[ 60%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/statistics.cc.o
[ 60%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/string_util.cc.o
[ 70%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/sysinfo.cc.o
[ 70%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/timers.cc.o
[ 80%] Linking CXX static library libbenchmark.a
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 80%] Built target benchmark
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
Scanning dependencies of target generated-data
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 80%] Generating utf-8.json, escape.json, 0-structurals.json, 7-structurals.json, 15-structurals.json, 23-structurals.json
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-miss.json ...
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 80%] Built target generated-data
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
Scanning dependencies of target simdjson
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 80%] Building CXX object src/CMakeFiles/simdjson.dir/simdjson.cpp.o
[ 80%] Linking CXX shared library ../libsimdjson.so
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 80%] Built target simdjson
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
Scanning dependencies of target yyjson
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 80%] Building C object dependencies/CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o
[ 90%] Linking C static library libyyjson.a
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 90%] Built target yyjson
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
Scanning dependencies of target bench_ondemand
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[100%] Building CXX object benchmark/CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o
In file included from /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp:30:
/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/./partial_tweets/simdjson_ondemand.h:27:23: error: always_inline function 'iterate' requires target feature 'sse4.2', but would be inlined into function 'run' that is compiled without support for 'sse4.2'
    auto doc = parser.iterate(json);
                      ^
/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/./partial_tweets/simdjson_ondemand.h:28:39: error: always_inline function 'find_field' requires target feature 'sse4.2', but would be inlined into function 'run' that is compiled without support for 'sse4.2'
    for (ondemand::object tweet : doc.find_field("statuses")) {
                                      ^
/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/./partial_tweets/simdjson_ondemand.h:28:33: error: always_inline function 'begin' requires target feature 'sse4.2', but would be inlined into function 'run' that is compiled without support for 'sse4.2'
    for (ondemand::object tweet : doc.find_field("statuses")) {
                                ^
/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/./partial_tweets/simdjson_ondemand.h:28:33: error: always_inline function 'end' requires target feature 'sse4.2', but would be inlined into function 'run' that is compiled without support for 'sse4.2'
/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/./partial_tweets/simdjson_ondemand.h:28:33: error: always_inline function 'operator!=' requires target feature 'sse4.2', but would be inlined into function 'run' that is compiled without support for 'sse4.2'
/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/./partial_tweets/simdjson_ondemand.h:28:33: error: always_inline function 'operator*' requires target feature 'sse4.2', but would be inlined into function 'run' that is compiled without support for 'sse4.2'
/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/./partial_tweets/simdjson_ondemand.h:28:33: error: always_inline function 'operator object' requires target feature 'sse4.2', but would be inlined into function 'run' that is compiled without support for 'sse4.2'
/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/./partial_tweets/simdjson_ondemand.h:30:15: error: always_inline function 'find_field' requires target feature 'sse4.2', but would be inlined into function 'run' that is compiled without support for 'sse4.2'
        tweet.find_field("created_at"),
              ^
/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/./partial_tweets/simdjson_ondemand.h:30:9: error: always_inline function 'operator basic_string_view' requires target feature 'sse4.2', but would be inlined into function 'run' that is compiled without support for 'sse4.2'
        tweet.find_field("created_at"),
        ^
/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/./partial_tweets/simdjson_ondemand.h:31:15: error: always_inline function 'find_field' requires target feature 'sse4.2', but would be inlined into function 'run' that is compiled without support for 'sse4.2'
        tweet.find_field("id"),
              ^
/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/./partial_tweets/simdjson_ondemand.h:31:9: error: always_inline function 'operator unsigned long' requires target feature 'sse4.2', but would be inlined into function 'run' that is compiled without support for 'sse4.2'
        tweet.find_field("id"),
        ^
/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/./partial_tweets/simdjson_ondemand.h:32:15: error: always_inline function 'find_field' requires target feature 'sse4.2', but would be inlined into function 'run' that is compiled without support for 'sse4.2'
        tweet.find_field("text"),
              ^
/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/./partial_tweets/simdjson_ondemand.h:32:9: error: always_inline function 'operator basic_string_view' requires target feature 'sse4.2', but would be inlined into function 'run' that is compiled without support for 'sse4.2'
        tweet.find_field("text"),
        ^
/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/./partial_tweets/simdjson_ondemand.h:33:28: error: always_inline function 'find_field' requires target feature 'sse4.2', but would be inlined into function 'run' that is compiled without support for 'sse4.2'
        nullable_int(tweet.find_field("in_reply_to_status_id")),
                           ^
/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/./partial_tweets/simdjson_ondemand.h:33:22: error: always_inline function 'operator simdjson::westmere::ondemand::value &&' requires target feature 'sse4.2', but would be inlined into function 'run' that is compiled without support for 'sse4.2'
        nullable_int(tweet.find_field("in_reply_to_status_id")),
                     ^
/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/./partial_tweets/simdjson_ondemand.h:34:25: error: always_inline function 'find_field' requires target feature 'sse4.2', but would be inlined into function 'run' that is compiled without support for 'sse4.2'
        read_user(tweet.find_field("user")),
                        ^
/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/./partial_tweets/simdjson_ondemand.h:34:19: error: always_inline function 'operator object' requires target feature 'sse4.2', but would be inlined into function 'run' that is compiled without support for 'sse4.2'
        read_user(tweet.find_field("user")),
                  ^
/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/./partial_tweets/simdjson_ondemand.h:35:15: error: always_inline function 'find_field' requires target feature 'sse4.2', but would be inlined into function 'run' that is compiled without support for 'sse4.2'
        tweet.find_field("retweet_count"),
              ^
/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/./partial_tweets/simdjson_ondemand.h:35:9: error: always_inline function 'operator unsigned long' requires target feature 'sse4.2', but would be inlined into function 'run' that is compiled without support for 'sse4.2'
        tweet.find_field("retweet_count"),
        ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
20 errors generated.
make[3]: *** [benchmark/CMakeFiles/bench_ondemand.dir/build.make:63: benchmark/CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o] Error 1
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[2]: *** [CMakeFiles/Makefile2:3418: benchmark/CMakeFiles/bench_ondemand.dir/all] Error 2
make[2]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[1]: *** [CMakeFiles/Makefile2:3425: benchmark/CMakeFiles/bench_ondemand.dir/rule] Error 2
make[1]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make: *** [Makefile:1432: bench_ondemand] Error 2
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.8.0/skylake-clang11-westmere.json --benchmark_out_format=json
./run_benchmark_official.sh: line 112: benchmark/bench_ondemand: No such file or directory
