run_benchmark: v0.8.0 /home/jkeiser/simdjson_benchmark_results/v0.8.0/skylake-clang11-westmere.json -DCMAKE_BUILD_TYPE=Release -DSIMDJSON_EXCLUDE_IMPLEMENTATION=haswell
git reset --hard v0.8.0
HEAD is now at c96ff018 Version 0.8.
cmake -DCMAKE_BUILD_TYPE=Release -DSIMDJSON_EXCLUDE_IMPLEMENTATION=haswell -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The CXX compiler identification is Clang 11.0.0
-- The C compiler identification is Clang 11.0.0
-- Check for working CXX compiler: /usr/bin/clang++-11
-- Check for working CXX compiler: /usr/bin/clang++-11 -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Check for working C compiler: /usr/bin/clang-11
-- Check for working C compiler: /usr/bin/clang-11 -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Excluding implementation haswell due to SIMDJSON_EXCLUDE_IMPLEMENTATION=haswell
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed
-- Check if compiler accepts -pthread
-- Check if compiler accepts -pthread - yes
-- Found Threads: TRUE  
-- Looking for fork
-- Looking for fork - found
-- Looking for wait
-- Looking for wait - found
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- Found Git: /usr/bin/git (found version "2.27.0") 
-- git Version: v0.2.1-c96ff018
-- Version: 0.2.1
-- Performing Test HAVE_CXX_FLAG_STD_CXX11
-- Performing Test HAVE_CXX_FLAG_STD_CXX11 - Success
-- Performing Test HAVE_CXX_FLAG_WALL
-- Performing Test HAVE_CXX_FLAG_WALL - Success
-- Performing Test HAVE_CXX_FLAG_WEXTRA
-- Performing Test HAVE_CXX_FLAG_WEXTRA - Success
-- Performing Test HAVE_CXX_FLAG_WSHADOW
-- Performing Test HAVE_CXX_FLAG_WSHADOW - Success
-- Performing Test HAVE_CXX_FLAG_WERROR
-- Performing Test HAVE_CXX_FLAG_WERROR - Success
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32 - Success
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED - Success
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WD654
-- Performing Test HAVE_CXX_FLAG_WD654 - Failed
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY - Success
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES -- failed to compile
-- Performing Test HAVE_CXX_FLAG_COVERAGE
-- Performing Test HAVE_CXX_FLAG_COVERAGE - Success
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Performing Test USE_BOOST_JSON
-- Performing Test USE_BOOST_JSON - Failed
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Found Python3: /usr/bin/python3.8 (found version "3.8.6") found components: Interpreter 
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 10
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
Scanning dependencies of target benchmark
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_api_internal.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_name.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_name.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_register.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_register.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_runner.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_runner.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/colorprint.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/colorprint.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/commandlineflags.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/commandlineflags.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/complexity.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/complexity.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/console_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/console_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/counter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/counter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/csv_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/csv_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/json_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/json_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/sleep.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sleep.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/statistics.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/statistics.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/string_util.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/string_util.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/sysinfo.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sysinfo.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/timers.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/timers.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -P CMakeFiles/benchmark.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/benchmark.dir/link.txt --verbose=1
/usr/bin/ar qc libbenchmark.a  CMakeFiles/benchmark.dir/benchmark.cc.o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o CMakeFiles/benchmark.dir/benchmark_name.cc.o CMakeFiles/benchmark.dir/benchmark_register.cc.o CMakeFiles/benchmark.dir/benchmark_runner.cc.o CMakeFiles/benchmark.dir/colorprint.cc.o CMakeFiles/benchmark.dir/commandlineflags.cc.o CMakeFiles/benchmark.dir/complexity.cc.o CMakeFiles/benchmark.dir/console_reporter.cc.o CMakeFiles/benchmark.dir/counter.cc.o CMakeFiles/benchmark.dir/csv_reporter.cc.o CMakeFiles/benchmark.dir/json_reporter.cc.o CMakeFiles/benchmark.dir/reporter.cc.o CMakeFiles/benchmark.dir/sleep.cc.o CMakeFiles/benchmark.dir/statistics.cc.o CMakeFiles/benchmark.dir/string_util.cc.o CMakeFiles/benchmark.dir/sysinfo.cc.o CMakeFiles/benchmark.dir/timers.cc.o
/usr/bin/ranlib libbenchmark.a
[ 80%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
Scanning dependencies of target generated-data
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated && /usr/bin/ruby genfeaturejson.rb /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-miss.json ...
[ 80%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/clang++-11  -DSIMDJSON_IMPLEMENTATION_HASWELL=0 -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/include  -O3 -DNDEBUG -fPIC   -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -pthread -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/clang++-11 -fPIC -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.7 -o ../libsimdjson.so.7.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.7.0.0 ../libsimdjson.so.7 ../libsimdjson.so
[ 80%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
Scanning dependencies of target yyjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/clang-11  -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src  -O3 -DNDEBUG   -o CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o   -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src/yyjson.c
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -P CMakeFiles/yyjson.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -E cmake_link_script CMakeFiles/yyjson.dir/link.txt --verbose=1
/usr/bin/ar qc libyyjson.a  CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o
/usr/bin/ranlib libyyjson.a
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/clang++-11  -DRAPIDJSON_HAS_STDSTRING -DSAJSON_UNSORTED_OBJECT_KEYS -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_COMPETITION_NLOHMANN_JSON -DSIMDJSON_COMPETITION_RAPIDJSON -DSIMDJSON_COMPETITION_SAJSON -DSIMDJSON_COMPETITION_YYJSON -DSIMDJSON_IMPLEMENTATION_HASWELL=0 -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/rapidjson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/sajson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/json  -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/clang++-11  -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.7.0.0 ../_deps/google_benchmarks/src/libbenchmark.a ../dependencies/libyyjson.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.8.0/skylake-clang11-westmere.json --benchmark_out_format=json
2021-01-24 21:45:27
Running benchmark/bench_ondemand
Run on (4 X 4000 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 256 KiB (x4)
  L3 Unified 8192 KiB (x1)
Load Average: 0.94, 0.50, 0.43
simdjson::dom implementation:      westmere
simdjson::ondemand implementation: fallback

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                  354466 ns       382747 ns         1979           3.795k            1.7894G               0        88.273k    1.30311M              2.06346          2.83351k       3.69237G          4.34397M                    6.87865                     3.33354           283.351k    3.96147k   631.515k       1.65924G/s    2.28449   88.3816k   1.30817M         2.07147   2.82115k/s 3.69052G/s     4.34397M               6.87865                3.32066        100       282.115k/s [BEST: throughput=  1.79 GB/s doc_throughput=  2833 docs/s instructions=     4343969 cycles=     1303109 branch_miss=    3795 cache_miss=       0 cache_ref=     88273 items=       100 avg_time=    354465 ns]
partial_tweets<simdjson_ondemand>/manual_time             261055 ns       289062 ns         2681           2.578k           2.43174G               0        56.164k    959.039k              1.51863          3.85064k       3.69292G          3.27683M                    5.18885                     3.41679           385.064k    2.71731k   631.515k       2.25295G/s   0.154047   56.2217k   963.568k          1.5258   3.83061k/s 3.69106G/s     3.27683M               5.18885                3.40073        100       383.061k/s [BEST: throughput=  2.43 GB/s doc_throughput=  3850 docs/s instructions=     3276834 cycles=      959039 branch_miss=    2578 cache_miss=       0 cache_ref=     56164 items=       100 avg_time=    261054 ns]
partial_tweets<yyjson>/manual_time                        642668 ns       673304 ns         1084           9.548k           1.77713G             434        74.464k    1.31215M              2.07779          2.81407k        3.6925G           2.9199M                    4.62365                     2.22527           281.407k    7.49405k   631.515k       937.124M/s    1025.43   49.2909k   1.52927M         2.42159   1.55601k/s 2.37956G/s     2.92039M               4.62442                1.90966        100       155.601k/s [BEST: throughput=  1.78 GB/s doc_throughput=  2814 docs/s instructions=     2919902 cycles=     1312155 branch_miss=    9548 cache_miss=     434 cache_ref=     74464 items=       100 avg_time=    642667 ns]
partial_tweets<yyjson_insitu>/manual_time                 433481 ns       462490 ns         1614           6.884k           2.01881G             670        45.837k    1.15184M              1.82394          3.19677k       3.68217G          2.91959M                    4.62315                     2.53471           319.677k    7.30602k   631.515k       1.35679G/s    142.936   31.8128k   1.25428M         1.98614   2.30691k/s  2.8935G/s     2.91985M               4.62356                2.32791        100       230.691k/s [BEST: throughput=  2.02 GB/s doc_throughput=  3196 docs/s instructions=     2919587 cycles=     1151843 branch_miss=    6884 cache_miss=     670 cache_ref=     45837 items=       100 avg_time=    433480 ns]
partial_tweets<sajson>/manual_time                        598341 ns       626727 ns         1170          10.318k           1061.38M               0        45.512k    2.19666M               3.4784          1.68069k       3.69192G          5.87949M                    9.31013                     2.67656           168.069k    10.6404k   631.515k       1006.55M/s    5.66923   45.5912k   2.20786M         3.49613   1.67129k/s 3.68996G/s     5.87949M               9.31013                2.66299        100       167.129k/s [BEST: throughput=  1.06 GB/s doc_throughput=  1680 docs/s instructions=     5879487 cycles=     2196660 branch_miss=   10318 cache_miss=       0 cache_ref=     45512 items=       100 avg_time=    598340 ns]
partial_tweets<rapidjson>/manual_time                    2391589 ns      2420576 ns          293          30.468k           287.099M         10.159k        52.868k    8.10651M              12.8366            454.62       3.68538G          21.8956M                    34.6715                     2.70099            45.462k    30.7671k   631.515k       251.824M/s    626.191   32.8996k   8.24244M         13.0519    418.132/s 3.44643G/s     21.8962M               34.6725                2.65652        100       41.8132k/s [BEST: throughput=  0.29 GB/s doc_throughput=   454 docs/s instructions=    21895569 cycles=     8106512 branch_miss=   30468 cache_miss=   10159 cache_ref=     52868 items=       100 avg_time=   2391589 ns]
partial_tweets<rapidjson_insitu>/manual_time             1523973 ns      1552728 ns          461          25.623k           447.663M             123        43.425k    5.20786M              8.24662           708.871       3.69171G          13.3567M                    21.1502                     2.56472           70.8871k    26.0282k   631.515k       395.191M/s    284.469    33.385k   5.27438M         8.35195     656.18/s 3.46094G/s     13.3573M               21.1512                2.53248        100        65.618k/s [BEST: throughput=  0.45 GB/s doc_throughput=   708 docs/s instructions=    13356691 cycles=     5207863 branch_miss=   25623 cache_miss=     123 cache_ref=     43425 items=       100 avg_time=   1523972 ns]
partial_tweets<nlohmann_json>/manual_time                9229497 ns      9263690 ns           83         151.884k           76.3218M             104       230.683k     30.529M              48.3424           120.855       3.68958G          80.3011M                    127.156                     2.63032           12.0855k    246.588k   631.515k       65.2538M/s    295.506   365.586k   34.0434M         53.9075    108.348/s 3.68855G/s     80.6513M               127.711                2.36907        100       10.8348k/s [BEST: throughput=  0.08 GB/s doc_throughput=   120 docs/s instructions=    80301085 cycles=    30528968 branch_miss=  151884 cache_miss=     104 cache_ref=    230683 items=       100 avg_time=   9229496 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                 100193169 ns    103591178 ns            7         910.668k           459.519M        10.9377M       15.4911M    369.233M              8.02701           9.98981       3.68856G          1.16046G                    25.2281                      3.1429           9.98981M    911.652k   45.9988M       437.833M/s   10.9842M   15.4916M   369.566M         8.03426    9.98072/s 3.68853G/s     1.16046G               25.2281                3.14007      1000k       9.98072M/s [BEST: throughput=  0.46 GB/s doc_throughput=     9 docs/s instructions=  1160462596 cycles=   369232622 branch_miss=  910668 cache_miss=10937721 cache_ref=  15491146 items=   1000000 avg_time= 100193169 ns]
large_random<simdjson_ondemand>/manual_time             70712454 ns     74082484 ns           10         922.405k           651.224M        5.69746M       8.07085M    260.576M              5.66484           14.1574       3.68908G          744.919M                    16.1943                     2.85874           14.1574M    924.059k   45.9988M        620.37M/s   5.73472M   8.07199M   260.751M         5.66864    14.1418/s 3.68748G/s     744.919M               16.1943                2.85683      1000k       14.1418M/s [BEST: throughput=  0.65 GB/s doc_throughput=    14 docs/s instructions=   744919064 cycles=   260575651 branch_miss=  922405 cache_miss= 5697457 cache_ref=   8070854 items=   1000000 avg_time=  70712454 ns]
large_random<simdjson_ondemand_unordered>/manual_time   70892646 ns     74252572 ns           10         996.326k           649.294M         5.7384M        8.0693M    261.307M              5.68073           14.1155       3.68846G          741.919M                    16.1291                     2.83927           14.1155M    998.411k   45.9988M       618.793M/s   5.75073M   8.06989M   261.422M         5.68323    14.1058/s 3.68757G/s     741.919M               16.1291                2.83802      1000k       14.1058M/s [BEST: throughput=  0.65 GB/s doc_throughput=    14 docs/s instructions=   741919078 cycles=   261306714 branch_miss=  996326 cache_miss= 5738397 cache_ref=   8069299 items=   1000000 avg_time=  70892645 ns]
large_random<yyjson>/manual_time                       124523070 ns    127941690 ns            6         734.096k           369.731M        5.84494M       9.07799M    339.609M              7.38299           8.03784       2.72972G          855.681M                    18.6023                     2.51961           8.03784M    735.198k   45.9988M       352.287M/s   5.84385M   9.07152M   339.612M         7.38307    8.03064/s  2.7273G/s     855.681M               18.6023                2.51958      1000k       8.03064M/s [BEST: throughput=  0.37 GB/s doc_throughput=     8 docs/s instructions=   855680942 cycles=   339608519 branch_miss=  734096 cache_miss= 5844937 cache_ref=   9077993 items=   1000000 avg_time= 124523070 ns]
large_random<yyjson_insitu>/manual_time                106834172 ns    110254281 ns            7         733.432k           430.822M        4.96824M        7.7082M    308.045M              6.69681           9.36594       2.88513G           849.56M                    18.4692                     2.75791           9.36594M    734.924k   45.9988M       410.616M/s   4.97149M   7.71333M   308.331M         6.70303     9.3603/s 2.88607G/s      849.56M               18.4692                2.75535      1000k        9.3603M/s [BEST: throughput=  0.43 GB/s doc_throughput=     9 docs/s instructions=   849560292 cycles=   308045283 branch_miss=  733432 cache_miss= 4968242 cache_ref=   7708200 items=   1000000 avg_time= 106834172 ns]
large_random<sajson>/manual_time                        92492744 ns     95929928 ns            8         587.939k           498.404M        8.18405M       12.1603M    340.479M              7.40192           10.8352       3.68914G          1.12599G                    24.4787                     3.30708           10.8352M    588.879k   45.9988M       474.284M/s   8.22504M   12.0844M   341.089M         7.41517    10.8117/s 3.68774G/s     1.12599G               24.4787                3.30117      1000k       10.8117M/s [BEST: throughput=  0.50 GB/s doc_throughput=    10 docs/s instructions=  1125990565 cycles=   340479260 branch_miss=  587939 cache_miss= 8184049 cache_ref=  12160299 items=   1000000 avg_time=  92492744 ns]
large_random<rapidjson>/manual_time                    216128198 ns    219515834 ns            3         591.879k           218.885M        7.04977M       10.9034M    716.522M               15.577           4.75849       3.40956G          2.01514G                    43.8086                      2.8124           4.75849M    593.322k   45.9988M       202.971M/s   6.52996M   10.2494M   720.225M         15.6575    4.62688/s  3.3324G/s     2.01515G               43.8088                2.79795      1000k       4.62688M/s [BEST: throughput=  0.22 GB/s doc_throughput=     4 docs/s instructions=  2015143739 cycles=   716522128 branch_miss=  591879 cache_miss= 7049768 cache_ref=  10903440 items=   1000000 avg_time= 216128198 ns]
large_random<rapidjson_lossless>/manual_time           245071369 ns    248470480 ns            3         590.861k           192.166M        7.02218M       10.9204M    825.084M              17.9371           4.17763       3.44689G          2.48011G                    53.9169                     3.00589           4.17763M     593.34k   45.9988M           179M/s   6.51366M   10.2534M   827.181M         17.9827    4.08044/s 3.37527G/s     2.48012G               53.9171                2.99828      1000k       4.08044M/s [BEST: throughput=  0.19 GB/s doc_throughput=     4 docs/s instructions=  2480110859 cycles=   825083656 branch_miss=  590861 cache_miss= 7022184 cache_ref=  10920352 items=   1000000 avg_time= 245071369 ns]
large_random<rapidjson_insitu>/manual_time             236238052 ns    239611666 ns            3         583.205k           199.311M        8.16968M       12.4876M    792.839M              17.2361           4.33296       3.43534G          1.73714G                     37.765                     2.19104           4.33296M    582.724k   45.9988M       185.693M/s   7.64838M   11.8233M   794.293M         17.2677    4.23302/s 3.36226G/s     1.73715G               37.7652                2.18704      1000k       4.23302M/s [BEST: throughput=  0.20 GB/s doc_throughput=     4 docs/s instructions=  1737143595 cycles=   792838992 branch_miss=  583205 cache_miss= 8169679 cache_ref=  12487591 items=   1000000 avg_time= 236238052 ns]
large_random<nlohmann_json>/manual_time               1259280895 ns   1262569155 ns            1          4.1107M           36.5278M        46.8091M       61.0489M    4.63212G              100.701          0.794104       3.67839G          12.7485G                     277.15                      2.7522           794.104k     4.1107M   45.9988M       34.8356M/s   46.8091M   61.0489M   4.63212G         100.701   0.794104/s 3.67839G/s     12.7485G                277.15                 2.7522      1000k       794.104k/s [BEST: throughput=  0.04 GB/s doc_throughput=     0 docs/s instructions= 12748548938 cycles=  4632124236 branch_miss= 4110697 cache_miss=46809123 cache_ref=  61048912 items=   1000000 avg_time=1259280895 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                       108664746 ns    119039307 ns            6         1.10801M           1.26436G        15.8764M       22.4805M    400.616M              2.91771           9.20843       3.68904G           1.2306G                    8.96251                     3.07177           4.82787M    1.10816M   137.305M       1.17679G/s   15.9134M   22.4681M   400.728M         2.91852    9.20262/s 3.68774G/s      1.2306G               8.96251                 3.0709   524.288k       4.82482M/s [BEST: throughput=  1.26 GB/s doc_throughput=     9 docs/s instructions=  1230597003 cycles=   400615593 branch_miss= 1108007 cache_miss=15876449 cache_ref=  22480539 items=    524288 avg_time= 108664746 ns]
kostya<simdjson_ondemand>/manual_time                   71438201 ns     81817107 ns           10         507.606k           1.92471G        10.1738M       14.1901M    263.133M              1.91641           14.0178       3.68854G          837.618M                    6.10042                     3.18325           7.34934M    512.318k   137.305M       1.79001G/s   10.1988M   14.1304M   263.457M         1.91877    13.9981/s 3.68791G/s     837.618M               6.10042                3.17933   524.288k       7.33904M/s [BEST: throughput=  1.92 GB/s doc_throughput=    14 docs/s instructions=   837618093 cycles=   263133144 branch_miss=  507606 cache_miss=10173763 cache_ref=  14190072 items=    524288 avg_time=  71438200 ns]
kostya<yyjson>/manual_time                             177079149 ns    187502688 ns            4         412.819k           776.221M        11.2062M       16.2957M    456.687M              3.32608           5.65326       2.58177G          974.184M                    7.09504                     2.13316           2.96394M    413.567k   137.305M       739.467M/s   11.2073M   16.2723M   456.816M         3.32702    5.64719/s 2.57973G/s     974.185M               7.09504                2.13255   524.288k       2.96076M/s [BEST: throughput=  0.78 GB/s doc_throughput=     5 docs/s instructions=   974184488 cycles=   456687113 branch_miss=  412819 cache_miss=11206191 cache_ref=  16295740 items=    524288 avg_time= 177079148 ns]
kostya<yyjson_insitu>/manual_time                      123235840 ns    133662460 ns            6         414.176k           1.11495G        8.67084M       12.4056M    360.091M              2.62256           8.12023       2.92402G          955.915M                    6.96198                     2.65465           4.25734M    413.317k   137.305M       1062.55M/s   8.67127M   12.3913M   360.088M         2.62254    8.11452/s 2.92194G/s     955.915M               6.96198                2.65467   524.288k       4.25435M/s [BEST: throughput=  1.11 GB/s doc_throughput=     8 docs/s instructions=   955914811 cycles=   360090601 branch_miss=  414176 cache_miss= 8670839 cache_ref=  12405572 items=    524288 avg_time= 123235840 ns]
kostya<sajson>/manual_time                             148157604 ns    158575171 ns            5         418.357k            929.05M        12.3654M       17.1563M    545.201M              3.97073           6.76633       3.68901G          1.53761G                    11.1985                     2.82026            3.5475M    417.801k   137.305M       883.817M/s   12.3214M   17.1684M   546.459M         3.97989    6.74957/s 3.68836G/s     1.53761G               11.1985                2.81377   524.288k       3.53872M/s [BEST: throughput=  0.93 GB/s doc_throughput=     6 docs/s instructions=  1537609229 cycles=   545200665 branch_miss=  418357 cache_miss=12365396 cache_ref=  17156323 items=    524288 avg_time= 148157604 ns]
kostya<rapidjson>/manual_time                          283448082 ns    293871773 ns            2           976.8k           488.712M        8.29213M       12.3119M     955.47M              6.95874           3.55931       3.40082G          2.73925G                    19.9501                     2.86691           1.86611M    978.135k   137.305M       461.969M/s   8.07712M   12.0324M   957.378M         6.97264    3.52798/s 3.37761G/s     2.73925G               19.9501                 2.8612   524.288k       1.84968M/s [BEST: throughput=  0.49 GB/s doc_throughput=     3 docs/s instructions=  2739246079 cycles=   955470432 branch_miss=  976800 cache_miss= 8292130 cache_ref=  12311902 items=    524288 avg_time= 283448081 ns]
kostya<rapidjson_lossless>/manual_time                 297708740 ns    308140656 ns            2          958.63k           464.882M        8.29811M       12.2546M       1008M               7.3413           3.38576       3.41284G           3.0082G                    21.9089                     2.98433           1.77511M     959.21k   137.305M        439.84M/s   8.06493M    12.035M    1009.6M         7.35298    3.35899/s 3.39123G/s      3.0082G               21.9089                2.97959   524.288k       1.76108M/s [BEST: throughput=  0.46 GB/s doc_throughput=     3 docs/s instructions=  3008196655 cycles=  1007996790 branch_miss=  958630 cache_miss= 8298113 cache_ref=  12254642 items=    524288 avg_time= 297708739 ns]
kostya<rapidjson_insitu>/manual_time                   272285754 ns    282714058 ns            3         961.342k           510.022M        11.9702M       16.0797M    912.073M              6.64268           3.71452       3.38791G          2.22201G                     16.183                     2.43622           1.94748M    961.539k   137.305M       480.907M/s   11.6656M   15.7311M   913.917M         6.65611    3.67261/s 3.35646G/s     2.22201G                16.183                2.43131   524.288k       1.92551M/s [BEST: throughput=  0.51 GB/s doc_throughput=     3 docs/s instructions=  2222010811 cycles=   912073418 branch_miss=  961342 cache_miss=11970191 cache_ref=  16079704 items=    524288 avg_time= 272285754 ns]
kostya<nlohmann_json>/manual_time                     1945027859 ns   1955328062 ns            1         14.5089M           70.5928M        69.5288M       88.4334M    7.17447G               52.252          0.514131       3.68862G          17.7632G                     129.37                     2.47589           269.553k    14.5089M   137.305M       67.3226M/s   69.5288M   88.4334M   7.17447G          52.252   0.514131/s 3.68862G/s     17.7632G                129.37                2.47589   524.288k       269.553k/s [BEST: throughput=  0.07 GB/s doc_throughput=     0 docs/s instructions= 17763207185 cycles=  7174466461 branch_miss=14508904 cache_miss=69528774 cache_ref=  88433372 items=    524288 avg_time=1945027859 ns]
distinct_user_id<simdjson_dom>/manual_time                349040 ns       379810 ns         2005           3.973k           1.81742G               0         95.95k    1.28309M              2.03176          2.87788k       3.69257G          4.27899M                    6.77576                     3.33492           330.956k    4.05245k   631.515k       1.68504G/s    3.93466   95.7663k   1.28807M         2.03966     2.865k/s 3.69034G/s     4.27899M               6.77576                3.32201        115       329.475k/s [BEST: throughput=  1.82 GB/s doc_throughput=  2877 docs/s instructions=     4278992 cycles=     1283088 branch_miss=    3973 cache_miss=       0 cache_ref=     95950 items=       115 avg_time=    349039 ns]
distinct_user_id<simdjson_ondemand>/manual_time           219795 ns       250020 ns         3184           2.081k           2.88584G               0        57.889k    808.207k              1.27979          4.56972k       3.69328G          2.89509M                    4.58435                     3.58211           525.517k    2.19712k   631.515k       2.67587G/s  0.0326633   57.7108k   811.469k         1.28496   4.54969k/s 3.69193G/s     2.89509M               4.58435                3.56771        115       523.214k/s [BEST: throughput=  2.89 GB/s doc_throughput=  4569 docs/s instructions=     2895087 cycles=      808207 branch_miss=    2081 cache_miss=       0 cache_ref=     57889 items=       115 avg_time=    219795 ns]
distinct_user_id<yyjson>/manual_time                      554435 ns       588471 ns         1000           6.941k           1.88175G         15.641k        77.659k    1.23923M              1.96232          2.97974k       3.69259G          2.87805M                    4.55737                     2.32244            342.67k    7.34929k   631.515k       1086.26M/s    7.4001k    57.974k   1.45307M         2.30092   1.80364k/s 2.62081G/s     2.87824M               4.55768                 1.9808        115       207.418k/s [BEST: throughput=  1.88 GB/s doc_throughput=  2979 docs/s instructions=     2878046 cycles=     1239233 branch_miss=    6941 cache_miss=   15641 cache_ref=     77659 items=       115 avg_time=    554435 ns]
distinct_user_id<yyjson_insitu>/manual_time               426114 ns       459124 ns         1643           7.007k           2.03828G             273        46.602k    1.14091M              1.80662           3.2276k       3.68239G          2.87753M                    4.55655                     2.52214           371.174k    7.38753k   631.515k       1.38025G/s    52.7237   32.3515k   1.23905M         1.96202   2.34679k/s 2.90778G/s     2.87779M               4.55697                2.32259        115       269.881k/s [BEST: throughput=  2.04 GB/s doc_throughput=  3227 docs/s instructions=     2877530 cycles=     1140907 branch_miss=    7007 cache_miss=     273 cache_ref=     46602 items=       115 avg_time=    426113 ns]
distinct_user_id<sajson>/manual_time                      595099 ns       625794 ns         1178          10.156k           1069.36M               0        47.841k     2.1803M              3.45249          1.69333k       3.69197G          5.81792M                    9.21265                      2.6684           194.733k    10.6484k   631.515k       1012.03M/s   0.631579   48.0155k    2.1957M         3.47688   1.68039k/s 3.68964G/s     5.81792M               9.21265                2.64969        115       193.245k/s [BEST: throughput=  1.07 GB/s doc_throughput=  1693 docs/s instructions=     5817924 cycles=     2180302 branch_miss=   10156 cache_miss=       0 cache_ref=     47841 items=       115 avg_time=    595098 ns]
distinct_user_id<rapidjson>/manual_time                  2376513 ns      2406931 ns          296          30.376k           288.665M          8.866k        55.469k    8.07599M              12.7883           457.099       3.69153G           21.823M                    34.5566                     2.70221           52.5664k    30.7881k   631.515k       253.422M/s   1.26784k   35.9934k   8.21813M         13.0133    420.785/s 3.45806G/s     21.8238M               34.5578                2.65556        115       48.3902k/s [BEST: throughput=  0.29 GB/s doc_throughput=   457 docs/s instructions=    21823033 cycles=     8075991 branch_miss=   30376 cache_miss=    8866 cache_ref=     55469 items=       115 avg_time=   2376513 ns]
distinct_user_id<rapidjson_insitu>/manual_time           1541017 ns      1571914 ns          439          26.908k           444.377M         12.452k          47.1k    5.24642M              8.30767           703.669       3.69174G          13.2912M                    21.0466                     2.53339           80.9219k    32.8982k   631.515k        390.82M/s   2.93149k   38.3379k   5.41836M         8.57994    648.922/s 3.51609G/s     13.2904M               21.0452                2.45284        115        74.626k/s [BEST: throughput=  0.44 GB/s doc_throughput=   703 docs/s instructions=    13291214 cycles=     5246418 branch_miss=   26908 cache_miss=   12452 cache_ref=     47100 items=       115 avg_time=   1541016 ns]
distinct_user_id<nlohmann_json>/manual_time              8053626 ns      8088100 ns           90         127.124k           81.7069M            3.4k       222.848k    28.5062M              45.1394           129.382        3.6882G           75.756M                    119.959                     2.65753            14.879k    141.433k   631.515k       74.7812M/s      143.2   490.491k   29.7087M         47.0436    124.168/s 3.68886G/s     74.3366M               117.711                2.50218        115       14.2793k/s [BEST: throughput=  0.08 GB/s doc_throughput=   129 docs/s instructions=    75756020 cycles=    28506187 branch_miss=  127124 cache_miss=    3400 cache_ref=    222848 items=       115 avg_time=   8053626 ns]
find_tweet<simdjson_dom>/manual_time                      337202 ns       366323 ns         2074           3.734k           1.88034G               0        84.971k    1.24022M              1.96388          2.97751k       3.69277G          4.19367M                    6.64065                     3.38139           2.97751k    3.83591k   631.515k       1.74419G/s    0.54918   85.1477k   1.24445M         1.97058   2.96558k/s 3.69053G/s     4.19367M               6.64065                3.36989          1       2.96558k/s [BEST: throughput=  1.88 GB/s doc_throughput=  2977 docs/s instructions=     4193672 cycles=     1240222 branch_miss=    3734 cache_miss=       0 cache_ref=     84971 items=         1 avg_time=    337202 ns]
find_tweet<simdjson_ondemand>/manual_time                 174403 ns       202896 ns         4012           1.267k            3.6337G               0         33.82k    641.987k              1.01658          5.75394k       3.69395G          2.38922M                    3.78331                      3.7216           5.75394k    1.35965k   631.515k       3.37234G/s  0.0338983   33.8781k   643.818k         1.01948   5.73386k/s 3.69156G/s     2.38922M               3.78331                3.71102          1       5.73386k/s [BEST: throughput=  3.63 GB/s doc_throughput=  5753 docs/s instructions=     2389218 cycles=      641987 branch_miss=    1267 cache_miss=       0 cache_ref=     33820 items=         1 avg_time=    174402 ns]
find_tweet<yyjson>/manual_time                            618101 ns       649690 ns         1135            9.29k           1.85442G              65        69.419k    1.25757M              1.99136          2.93646k       3.69281G          2.81715M                    4.46093                     2.24015           2.93646k    7.30751k   631.515k       974.371M/s    1064.13   41.6738k   1.47887M         2.34178   1.61786k/s  2.3926G/s     2.81784M               4.46203                 1.9054          1       1.61786k/s [BEST: throughput=  1.85 GB/s doc_throughput=  2936 docs/s instructions=     2817146 cycles=     1257573 branch_miss=    9290 cache_miss=      65 cache_ref=     69419 items=         1 avg_time=    618100 ns]
find_tweet<yyjson_insitu>/manual_time                     415694 ns       446124 ns         1685           6.685k           2.10659G             541        38.173k    1.10356M              1.74748          3.33577k       3.68121G          2.81704M                    4.46076                     2.55269           3.33577k    7.13983k   631.515k       1.41485G/s    17.4582   23.5101k   1.20123M         1.90214   2.40561k/s  2.8897G/s      2.8173M               4.46118                2.34535          1       2.40561k/s [BEST: throughput=  2.11 GB/s doc_throughput=  3335 docs/s instructions=     2817038 cycles=     1103557 branch_miss=    6685 cache_miss=     541 cache_ref=     38173 items=         1 avg_time=    415694 ns]
find_tweet<sajson>/manual_time                            582279 ns       612269 ns         1200           9.947k           1092.59M               0        38.442k    2.13397M              3.37912          1.73012k       3.69201G          5.72273M                    9.06191                     2.68174           1.73012k    10.3812k   631.515k       1034.31M/s    3.96333   38.3663k    2.1484M         3.40198   1.71739k/s 3.68964G/s     5.72273M               9.06191                2.66372          1       1.71739k/s [BEST: throughput=  1.09 GB/s doc_throughput=  1730 docs/s instructions=     5722731 cycles=     2133965 branch_miss=    9947 cache_miss=       0 cache_ref=     38442 items=         1 avg_time=    582279 ns]
find_tweet<rapidjson>/manual_time                        2369845 ns      2399090 ns          296          31.177k           288.815M             172        47.456k    8.07185M              12.7817           457.337       3.69155G          21.7391M                    34.4237                      2.6932            457.337    31.0763k   631.515k       254.135M/s    993.003   28.5739k   8.19361M         12.9745    421.969/s 3.45744G/s     21.7399M               34.4249                2.65327          1        421.969/s [BEST: throughput=  0.29 GB/s doc_throughput=   457 docs/s instructions=    21739058 cycles=     8071846 branch_miss=   31177 cache_miss=     172 cache_ref=     47456 items=         1 avg_time=   2369844 ns]
find_tweet<rapidjson_insitu>/manual_time                 1526468 ns      1556625 ns          440          25.322k           453.766M              56        36.332k    5.13779M              8.13566           718.536       3.69169G          13.2115M                    20.9203                     2.57144            718.536    32.1595k   631.515k       394.545M/s    2.7079k   28.9708k   5.36635M         8.49757    655.107/s 3.51553G/s     13.2118M               20.9208                2.46197          1        655.107/s [BEST: throughput=  0.45 GB/s doc_throughput=   718 docs/s instructions=    13211510 cycles=     5137794 branch_miss=   25322 cache_miss=      56 cache_ref=     36332 items=         1 avg_time=   1526468 ns]
find_tweet<nlohmann_json>/manual_time                    6929375 ns      6959417 ns          105         100.138k           95.1769M           2.13k       169.479k    24.4689M              38.7463           150.712       3.68776G          65.8458M                    104.266                       2.691            150.712    114.627k   631.515k        86.914M/s    118.248   387.616k   25.5584M         40.4715    144.313/s 3.68841G/s     64.4678M               102.084                2.52237          1        144.313/s [BEST: throughput=  0.10 GB/s doc_throughput=   150 docs/s instructions=    65845800 cycles=    24468897 branch_miss=  100138 cache_miss=    2130 cache_ref=    169479 items=         1 avg_time=   6929375 ns]
top_tweet<simdjson_dom>/manual_time                       343377 ns       372018 ns         2039           3.792k           1.84777G               0        92.965k    1.26196M              1.99831          2.92593k       3.69241G          4.23056M                    6.69906                     3.35236           2.92593k    3.91589k   631.515k       1.71282G/s    5.23296   92.9573k   1.26679M         2.00595   2.91225k/s 3.68921G/s     4.23056M               6.69906                3.33959          1       2.91225k/s [BEST: throughput=  1.85 GB/s doc_throughput=  2925 docs/s instructions=     4230559 cycles=     1261963 branch_miss=    3792 cache_miss=       0 cache_ref=     92965 items=         1 avg_time=    343377 ns]
top_tweet<simdjson_ondemand>/manual_time                  216642 ns       245059 ns         3231           1.932k           2.92682G               0        57.721k    796.876k              1.26185          4.63461k       3.69321G          2.91581M                    4.61717                     3.65906           4.63461k    2.03631k   631.515k       2.71482G/s  0.0928505   57.5601k   799.598k         1.26616   4.61591k/s 3.69087G/s     2.91581M               4.61717                 3.6466          1       4.61591k/s [BEST: throughput=  2.93 GB/s doc_throughput=  4634 docs/s instructions=     2915814 cycles=      796876 branch_miss=    1932 cache_miss=       0 cache_ref=     57721 items=         1 avg_time=    216642 ns]
top_tweet<simdjson_ondemand_forward_only>/manual_time     234675 ns       263200 ns         2981           2.163k           2.70695G               0        58.296k    861.536k              1.36424          4.28644k       3.69292G          3.14127M                    4.97418                     3.64613           4.28644k    2.30215k   631.515k        2.5062G/s  0.0352231   58.4455k   866.172k         1.37158   4.26121k/s 3.69094G/s     3.14127M               4.97418                3.62661          1       4.26121k/s [BEST: throughput=  2.71 GB/s doc_throughput=  4286 docs/s instructions=     3141272 cycles=      861536 branch_miss=    2163 cache_miss=       0 cache_ref=     58296 items=         1 avg_time=    234675 ns]
top_tweet<yyjson>/manual_time                             623000 ns       653717 ns         1131           9.554k           1.81736G             208         74.36k    1.28311M               2.0318          2.87778k       3.69252G          2.84442M                    4.50412                     2.21681           2.87778k    7.41218k   631.515k       966.709M/s    995.813   46.7837k   1.49736M         2.37106   1.60514k/s 2.40347G/s     2.84491M               4.50489                1.89995          1       1.60514k/s [BEST: throughput=  1.82 GB/s doc_throughput=  2877 docs/s instructions=     2844421 cycles=     1283113 branch_miss=    9554 cache_miss=     208 cache_ref=     74360 items=         1 avg_time=    622999 ns]
top_tweet<yyjson_insitu>/manual_time                      421319 ns       451076 ns         1662           7.283k           2.05429G              16        43.062k    1.13529M              1.79772          3.25295k       3.69304G           2.8441M                    4.50362                     2.50518           3.25295k       7.27k   631.515k       1.39596G/s    47.5554   28.6706k   1.22208M         1.93515    2.3735k/s  2.9006G/s     2.84437M               4.50404                2.32749          1        2.3735k/s [BEST: throughput=  2.05 GB/s doc_throughput=  3252 docs/s instructions=     2844105 cycles=     1135288 branch_miss=    7283 cache_miss=      16 cache_ref=     43062 items=         1 avg_time=    421318 ns]
top_tweet<sajson>/manual_time                             587544 ns       616589 ns         1189          10.054k           1083.52M               0        43.792k    2.15183M              3.40741          1.71574k       3.69198G          5.75272M                     9.1094                     2.67341           1.71574k    10.5271k   631.515k       1025.05M/s   0.713204   43.7094k   2.16761M         3.43239     1.702k/s 3.68927G/s     5.75272M                9.1094                2.65395          1         1.702k/s [BEST: throughput=  1.08 GB/s doc_throughput=  1715 docs/s instructions=     5752722 cycles=     2151830 branch_miss=   10054 cache_miss=       0 cache_ref=     43792 items=         1 avg_time=    587543 ns]
top_tweet<rapidjson>/manual_time                         2379159 ns      2408838 ns          295          31.146k           288.242M             556        51.415k    8.08784M               12.807            456.43       3.69153G          21.7979M                    34.5168                     2.69514             456.43    31.1742k   631.515k        253.14M/s   1.15308k   32.3385k   8.22908M         13.0307    420.317/s 3.45882G/s     21.7987M               34.5181                2.64898          1        420.317/s [BEST: throughput=  0.29 GB/s doc_throughput=   456 docs/s instructions=    21797898 cycles=     8087843 branch_miss=   31146 cache_miss=     556 cache_ref=     51415 items=         1 avg_time=   2379159 ns]
top_tweet<rapidjson_insitu>/manual_time                  1535103 ns      1564235 ns          441          25.703k           448.477M         12.763k        42.357k    5.19833M              8.23152            710.16       3.69165G          13.2659M                    21.0064                     2.55195             710.16    32.5845k   631.515k       392.325M/s   2.86328k    33.924k   5.39532M         8.54346    651.422/s 3.51463G/s     13.2662M               21.0069                2.45883          1        651.422/s [BEST: throughput=  0.45 GB/s doc_throughput=   710 docs/s instructions=    13265881 cycles=     5198331 branch_miss=   25703 cache_miss=   12763 cache_ref=     42357 items=         1 avg_time=   1535103 ns]
top_tweet<nlohmann_json>/manual_time                     9315662 ns      9344322 ns           75         188.804k           67.9339M             342       400.374k    34.2991M              54.3124           107.573       3.68965G          87.5798M                    138.682                     2.55342            107.573    189.953k   631.515k       64.6502M/s    356.827    405.67k   34.3569M          54.404    107.346/s 3.68808G/s     87.5985M               138.712                2.54966          1        107.346/s [BEST: throughput=  0.07 GB/s doc_throughput=   107 docs/s instructions=    87579827 cycles=    34299071 branch_miss=  188804 cache_miss=     342 cache_ref=    400374 items=         1 avg_time=   9315662 ns]
