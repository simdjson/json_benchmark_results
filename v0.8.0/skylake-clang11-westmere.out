run_benchmark: v0.8.0 /home/jkeiser/simdjson_benchmark_results/v0.8.0/skylake-clang11-westmere.json -DCMAKE_BUILD_TYPE=Release -DSIMDJSON_EXCLUDE_IMPLEMENTATION=haswell
git reset --hard v0.8.0
HEAD is now at c96ff018 Version 0.8.
cmake -DCMAKE_BUILD_TYPE=Release -DSIMDJSON_EXCLUDE_IMPLEMENTATION=haswell -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The CXX compiler identification is Clang 11.0.0
-- The C compiler identification is Clang 11.0.0
-- Check for working CXX compiler: /usr/bin/clang++-11
-- Check for working CXX compiler: /usr/bin/clang++-11 -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Check for working C compiler: /usr/bin/clang-11
-- Check for working C compiler: /usr/bin/clang-11 -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Excluding implementation haswell due to SIMDJSON_EXCLUDE_IMPLEMENTATION=haswell
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed
-- Check if compiler accepts -pthread
-- Check if compiler accepts -pthread - yes
-- Found Threads: TRUE  
-- Looking for fork
-- Looking for fork - found
-- Looking for wait
-- Looking for wait - found
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- Found Git: /usr/bin/git (found version "2.27.0") 
-- git Version: v0.2.1-c96ff018
-- Version: 0.2.1
-- Performing Test HAVE_CXX_FLAG_STD_CXX11
-- Performing Test HAVE_CXX_FLAG_STD_CXX11 - Success
-- Performing Test HAVE_CXX_FLAG_WALL
-- Performing Test HAVE_CXX_FLAG_WALL - Success
-- Performing Test HAVE_CXX_FLAG_WEXTRA
-- Performing Test HAVE_CXX_FLAG_WEXTRA - Success
-- Performing Test HAVE_CXX_FLAG_WSHADOW
-- Performing Test HAVE_CXX_FLAG_WSHADOW - Success
-- Performing Test HAVE_CXX_FLAG_WERROR
-- Performing Test HAVE_CXX_FLAG_WERROR - Success
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32 - Success
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED - Success
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WD654
-- Performing Test HAVE_CXX_FLAG_WD654 - Failed
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY - Success
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES -- failed to compile
-- Performing Test HAVE_CXX_FLAG_COVERAGE
-- Performing Test HAVE_CXX_FLAG_COVERAGE - Success
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Performing Test USE_BOOST_JSON
-- Performing Test USE_BOOST_JSON - Failed
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Found Python3: /usr/bin/python3.8 (found version "3.8.6") found components: Interpreter 
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 10
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
Scanning dependencies of target benchmark
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_api_internal.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_name.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_name.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_register.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_register.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_runner.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_runner.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/colorprint.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/colorprint.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/commandlineflags.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/commandlineflags.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/complexity.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/complexity.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/console_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/console_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/counter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/counter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/csv_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/csv_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/json_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/json_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/sleep.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sleep.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/statistics.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/statistics.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/string_util.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/string_util.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/sysinfo.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sysinfo.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/timers.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/timers.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -P CMakeFiles/benchmark.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/benchmark.dir/link.txt --verbose=1
/usr/bin/ar qc libbenchmark.a  CMakeFiles/benchmark.dir/benchmark.cc.o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o CMakeFiles/benchmark.dir/benchmark_name.cc.o CMakeFiles/benchmark.dir/benchmark_register.cc.o CMakeFiles/benchmark.dir/benchmark_runner.cc.o CMakeFiles/benchmark.dir/colorprint.cc.o CMakeFiles/benchmark.dir/commandlineflags.cc.o CMakeFiles/benchmark.dir/complexity.cc.o CMakeFiles/benchmark.dir/console_reporter.cc.o CMakeFiles/benchmark.dir/counter.cc.o CMakeFiles/benchmark.dir/csv_reporter.cc.o CMakeFiles/benchmark.dir/json_reporter.cc.o CMakeFiles/benchmark.dir/reporter.cc.o CMakeFiles/benchmark.dir/sleep.cc.o CMakeFiles/benchmark.dir/statistics.cc.o CMakeFiles/benchmark.dir/string_util.cc.o CMakeFiles/benchmark.dir/sysinfo.cc.o CMakeFiles/benchmark.dir/timers.cc.o
/usr/bin/ranlib libbenchmark.a
[ 80%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
Scanning dependencies of target generated-data
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated && /usr/bin/ruby genfeaturejson.rb /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-miss.json ...
[ 80%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/clang++-11  -DSIMDJSON_IMPLEMENTATION_HASWELL=0 -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/include  -O3 -DNDEBUG -fPIC   -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -pthread -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/clang++-11 -fPIC -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.7 -o ../libsimdjson.so.7.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.7.0.0 ../libsimdjson.so.7 ../libsimdjson.so
[ 80%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
Scanning dependencies of target yyjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/clang-11  -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src  -O3 -DNDEBUG   -o CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o   -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src/yyjson.c
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -P CMakeFiles/yyjson.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -E cmake_link_script CMakeFiles/yyjson.dir/link.txt --verbose=1
/usr/bin/ar qc libyyjson.a  CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o
/usr/bin/ranlib libyyjson.a
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/clang++-11  -DRAPIDJSON_HAS_STDSTRING -DSAJSON_UNSORTED_OBJECT_KEYS -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_COMPETITION_NLOHMANN_JSON -DSIMDJSON_COMPETITION_RAPIDJSON -DSIMDJSON_COMPETITION_SAJSON -DSIMDJSON_COMPETITION_YYJSON -DSIMDJSON_IMPLEMENTATION_HASWELL=0 -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/rapidjson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/sajson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/json  -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/clang++-11  -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.7.0.0 ../_deps/google_benchmarks/src/libbenchmark.a ../dependencies/libyyjson.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.8.0/skylake-clang11-westmere.json --benchmark_out_format=json
2021-01-25 02:52:03
Running benchmark/bench_ondemand
Run on (4 X 4000 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 256 KiB (x4)
  L3 Unified 8192 KiB (x1)
Load Average: 1.14, 1.01, 0.79
simdjson::dom implementation:      westmere
simdjson::ondemand implementation: fallback

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                  352525 ns       380867 ns         1990           3.815k           1.79968G               0         88.16k     1.2956M              2.05158          2.84977k       3.69218G          4.34397M                    6.87865                     3.35285           284.977k    3.92193k   631.515k       1.66838G/s    1.09799   88.1351k   1.30091M         2.05998   2.83668k/s 3.69027G/s     4.34397M               6.87865                3.33918        100       283.668k/s [BEST: throughput=  1.80 GB/s doc_throughput=  2849 docs/s instructions=     4343969 cycles=     1295604 branch_miss=    3815 cache_miss=       0 cache_ref=     88160 items=       100 avg_time=    352524 ns]
partial_tweets<simdjson_ondemand>/manual_time             260339 ns       288442 ns         2688           2.561k           2.43884G               0        56.266k    956.143k              1.51405          3.86188k       3.69251G          3.27683M                    5.18885                     3.42714           386.188k    2.71531k   631.515k       2.25915G/s    1.06362   56.2483k   960.828k         1.52146   3.84115k/s 3.69068G/s     3.27683M               5.18885                3.41043        100       384.115k/s [BEST: throughput=  2.44 GB/s doc_throughput=  3861 docs/s instructions=     3276834 cycles=      956143 branch_miss=    2561 cache_miss=       0 cache_ref=     56266 items=       100 avg_time=    260338 ns]
partial_tweets<yyjson>/manual_time                        643856 ns       674510 ns         1087           9.552k           1.78049G             592         74.99k     1.3098M              2.07406           2.8194k       3.69284G           2.9199M                    4.62365                     2.22927            281.94k    7.51546k   631.515k       935.394M/s    981.174   49.3232k   1.52758M         2.41891   1.55314k/s 2.37255G/s      2.9206M               4.62474                1.91191        100       155.314k/s [BEST: throughput=  1.78 GB/s doc_throughput=  2819 docs/s instructions=     2919902 cycles=     1309800 branch_miss=    9552 cache_miss=     592 cache_ref=     74990 items=       100 avg_time=    643856 ns]
partial_tweets<yyjson_insitu>/manual_time                 434086 ns       463106 ns         1613           6.847k           2.01118G             617         45.87k    1.15341M              1.82641          3.18469k       3.67324G           2.9198M                    4.62348                     2.53145           318.469k    7.36924k   631.515k        1.3549G/s    140.923   32.0481k   1.25666M         1.98992   2.30369k/s 2.89497G/s     2.92006M               4.62389                2.32366        100       230.369k/s [BEST: throughput=  2.01 GB/s doc_throughput=  3184 docs/s instructions=     2919795 cycles=     1153406 branch_miss=    6847 cache_miss=     617 cache_ref=     45870 items=       100 avg_time=    434085 ns]
partial_tweets<sajson>/manual_time                        597993 ns       626462 ns         1168          10.238k           1061.82M               0        45.663k    2.19578M                3.477          1.68138k       3.69194G          5.87949M                    9.31013                     2.67763           168.138k    10.6059k   631.515k       1007.14M/s    1.62928    45.786k   2.20667M         3.49425   1.67226k/s 3.69013G/s     5.87949M               9.31013                2.66442        100       167.226k/s [BEST: throughput=  1.06 GB/s doc_throughput=  1681 docs/s instructions=     5879487 cycles=     2195780 branch_miss=   10238 cache_miss=       0 cache_ref=     45663 items=       100 avg_time=    597992 ns]
partial_tweets<rapidjson>/manual_time                    2397250 ns      2426745 ns          289          30.136k             286.9M         10.437k        52.874k    8.11127M              12.8441           454.305       3.68499G           21.895M                    34.6705                     2.69933           45.4305k     30.742k   631.515k       251.229M/s    671.848   32.8478k   8.26044M         13.0804    417.145/s  3.4458G/s     21.8957M               34.6717                2.65067        100       41.7145k/s [BEST: throughput=  0.29 GB/s doc_throughput=   454 docs/s instructions=    21894965 cycles=     8111272 branch_miss=   30136 cache_miss=   10437 cache_ref=     52874 items=       100 avg_time=   2397250 ns]
partial_tweets<rapidjson_insitu>/manual_time             1521475 ns      1550194 ns          460          25.887k           449.127M             236        42.484k     5.1908M              8.21959           711.189       3.69164G          13.3568M                    21.1504                     2.57317           71.1189k    26.3349k   631.515k       395.839M/s      277.1   34.2495k   5.26516M         8.33735    657.257/s 3.46056G/s     13.3572M                21.151                 2.5369        100       65.7257k/s [BEST: throughput=  0.45 GB/s doc_throughput=   711 docs/s instructions=    13356777 cycles=     5190796 branch_miss=   25887 cache_miss=     236 cache_ref=     42484 items=       100 avg_time=   1521475 ns]
partial_tweets<nlohmann_json>/manual_time                8580725 ns      8617057 ns           83         149.208k           76.2647M              61       225.092k    30.5522M              48.3793           120.765       3.68963G          80.3011M                    127.156                     2.62832           12.0765k    164.482k   631.515k       70.1875M/s   2.36413k   360.717k   31.6575M         50.1295     116.54/s 3.68937G/s     80.9501M               128.184                2.55706        100        11.654k/s [BEST: throughput=  0.08 GB/s doc_throughput=   120 docs/s instructions=    80301096 cycles=    30552226 branch_miss=  149208 cache_miss=      61 cache_ref=    225092 items=       100 avg_time=   8580724 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                  99886233 ns    103277089 ns            7         904.318k           460.833M        11.0205M       15.3144M    368.222M              8.00503           10.0184       3.68898G          1.16046G                    25.2281                     3.15153           10.0184M    905.463k   45.9988M       439.178M/s    11.077M   15.3132M   368.466M         8.01034    10.0114/s 3.68885G/s     1.16046G               25.2281                3.14945      1000k       10.0114M/s [BEST: throughput=  0.46 GB/s doc_throughput=    10 docs/s instructions=  1160462595 cycles=   368221723 branch_miss=  904318 cache_miss=11020512 cache_ref=  15314365 items=   1000000 avg_time=  99886232 ns]
large_random<simdjson_ondemand>/manual_time             70066967 ns     73480445 ns           10         922.343k           656.917M         5.7755M       7.95107M    258.312M              5.61563           14.2812         3.689G          744.919M                    16.1943                     2.88379           14.2812M    922.957k   45.9988M       626.085M/s   5.80557M   7.95241M   258.451M         5.61866    14.2721/s 3.68863G/s     744.919M               16.1943                2.88224      1000k       14.2721M/s [BEST: throughput=  0.66 GB/s doc_throughput=    14 docs/s instructions=   744919063 cycles=   258312143 branch_miss=  922343 cache_miss= 5775501 cache_ref=   7951070 items=   1000000 avg_time=  70066966 ns]
large_random<simdjson_ondemand_unordered>/manual_time   70136477 ns     73509672 ns           10         988.898k           656.323M        5.76982M        7.9496M    258.559M              5.62099           14.2683       3.68918G          741.919M                    16.1291                     2.86944           14.2683M    996.587k   45.9988M       625.464M/s   5.76728M   7.95019M   258.718M         5.62445    14.2579/s 3.68878G/s     741.919M               16.1291                2.86768      1000k       14.2579M/s [BEST: throughput=  0.66 GB/s doc_throughput=    14 docs/s instructions=   741919076 cycles=   258558819 branch_miss=  988898 cache_miss= 5769817 cache_ref=   7949604 items=   1000000 avg_time=  70136477 ns]
large_random<yyjson>/manual_time                       124409641 ns    127830371 ns            6         734.759k           370.027M        5.96828M       9.12035M    339.244M              7.37506           8.04428       2.72897G          855.681M                    18.6023                     2.52232           8.04428M    735.077k   45.9988M       352.608M/s   5.96562M   9.10796M   339.295M         7.37616    8.03796/s 2.72724G/s     855.681M               18.6023                2.52194      1000k       8.03796M/s [BEST: throughput=  0.37 GB/s doc_throughput=     8 docs/s instructions=   855680947 cycles=   339243821 branch_miss=  734759 cache_miss= 5968276 cache_ref=   9120353 items=   1000000 avg_time= 124409641 ns]
large_random<yyjson_insitu>/manual_time                106794786 ns    110203831 ns            7         734.225k           430.875M        5.06955M        7.7128M    308.226M              6.70075            9.3671       2.88718G           849.56M                    18.4692                     2.75629            9.3671M    734.378k   45.9988M       410.768M/s    5.0741M   7.72582M   308.225M         6.70073    9.36375/s 2.88615G/s      849.56M               18.4692                2.75629      1000k       9.36375M/s [BEST: throughput=  0.43 GB/s doc_throughput=     9 docs/s instructions=   849560185 cycles=   308226089 branch_miss=  734225 cache_miss= 5069547 cache_ref=   7712802 items=   1000000 avg_time= 106794785 ns]
large_random<sajson>/manual_time                        92559521 ns     95956228 ns            8         590.238k           497.986M        8.28849M       12.2207M    340.745M               7.4077           10.8261       3.68893G          1.12599G                    24.4787                      3.3045           10.8261M     590.51k   45.9988M       473.942M/s   8.36642M   12.1309M   341.431M         7.42261    10.8039/s 3.68877G/s     1.12599G               24.4787                3.29786      1000k       10.8039M/s [BEST: throughput=  0.50 GB/s doc_throughput=    10 docs/s instructions=  1125990567 cycles=   340744988 branch_miss=  590238 cache_miss= 8288492 cache_ref=  12220692 items=   1000000 avg_time=  92559520 ns]
large_random<rapidjson>/manual_time                    216042763 ns    219461392 ns            3         604.779k           218.922M        7.07345M       10.7141M    717.158M              15.5908            4.7593       3.41317G          2.01514G                    43.8086                      2.8099            4.7593M    606.451k   45.9988M       203.052M/s   6.61065M   10.0634M   720.306M         15.6592    4.62871/s 3.33409G/s     2.01515G               43.8088                2.79763      1000k       4.62871M/s [BEST: throughput=  0.22 GB/s doc_throughput=     4 docs/s instructions=  2015144158 cycles=   717158260 branch_miss=  604779 cache_miss= 7073451 cache_ref=  10714091 items=   1000000 avg_time= 216042763 ns]
large_random<rapidjson_lossless>/manual_time           247998932 ns    251415490 ns            3          591.79k           189.706M        7.15184M       10.7529M    836.591M              18.1872           4.12415       3.45023G          2.48011G                    53.9169                     2.96454           4.12415M    596.093k   45.9988M       176.887M/s   6.61725M   10.0897M    838.31M         18.2246    4.03228/s  3.3803G/s     2.48012G               53.9171                2.95847      1000k       4.03228M/s [BEST: throughput=  0.19 GB/s doc_throughput=     4 docs/s instructions=  2480111161 cycles=   836590880 branch_miss=  591790 cache_miss= 7151842 cache_ref=  10752933 items=   1000000 avg_time= 247998932 ns]
large_random<rapidjson_insitu>/manual_time             230223251 ns    233634254 ns            3         590.682k            204.61M        8.20672M       12.3096M    771.395M              16.7699           4.44817       3.43129G          1.73714G                     37.765                     2.25195           4.44817M    590.638k   45.9988M       190.545M/s   7.72514M   11.6524M    772.73M         16.7989    4.34361/s 3.35644G/s     1.73715G               37.7652                2.24807      1000k       4.34361M/s [BEST: throughput=  0.20 GB/s doc_throughput=     4 docs/s instructions=  1737143879 cycles=   771394559 branch_miss=  590682 cache_miss= 8206721 cache_ref=  12309587 items=   1000000 avg_time= 230223251 ns]
large_random<nlohmann_json>/manual_time               1261656342 ns   1265062534 ns            1         4.11473M            36.459M        47.7428M        61.114M    4.64191G              100.914          0.792609       3.67922G          12.7486G                     277.15                      2.7464           792.609k    4.11473M   45.9988M         34.77M/s   47.7428M    61.114M   4.64191G         100.914   0.792609/s 3.67922G/s     12.7486G                277.15                 2.7464      1000k       792.609k/s [BEST: throughput=  0.04 GB/s doc_throughput=     0 docs/s instructions= 12748553298 cycles=  4641909736 branch_miss= 4114729 cache_miss=47742790 cache_ref=  61114008 items=   1000000 avg_time=1261656342 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                       108429977 ns    118704972 ns            6          1097.9k           1.26766G        16.1456M       22.4501M    399.585M               2.9102           9.23246       3.68915G           1.2306G                    8.96251                     3.07969           4.84047M    1097.84k   137.305M       1.17933G/s   16.1634M   22.3855M   399.976M         2.91305    9.22254/s  3.6888G/s      1.2306G               8.96251                3.07668   524.288k       4.83527M/s [BEST: throughput=  1.27 GB/s doc_throughput=     9 docs/s instructions=  1230597004 cycles=   399585109 branch_miss= 1097899 cache_miss=16145606 cache_ref=  22450145 items=    524288 avg_time= 108429976 ns]
kostya<simdjson_ondemand>/manual_time                   70916558 ns     81158306 ns           10         507.752k           1.93847G         10.312M        14.136M    261.304M              1.90309            14.118       3.68908G          837.618M                    6.10042                     3.20553           7.40189M    507.688k   137.305M       1.80318G/s   10.3334M   14.0539M   261.599M         1.90524    14.1011/s 3.68883G/s     837.618M               6.10042                3.20191   524.288k       7.39303M/s [BEST: throughput=  1.94 GB/s doc_throughput=    14 docs/s instructions=   837618091 cycles=   261303837 branch_miss=  507752 cache_miss=10311975 cache_ref=  14135995 items=    524288 avg_time=  70916558 ns]
kostya<yyjson>/manual_time                             176095463 ns    186414911 ns            4         413.582k           780.883M        11.5084M       16.5316M    453.087M              3.29986           5.68722        2.5768G          974.184M                    7.09504                      2.1501           2.98174M    413.504k   137.305M       743.598M/s   11.5103M   16.5495M    453.11M         3.30003    5.67874/s 2.57309G/s     974.185M               7.09504                2.14999   524.288k       2.97729M/s [BEST: throughput=  0.78 GB/s doc_throughput=     5 docs/s instructions=   974184488 cycles=   453087040 branch_miss=  413582 cache_miss=11508431 cache_ref=  16531563 items=    524288 avg_time= 176095462 ns]
kostya<yyjson_insitu>/manual_time                      123320607 ns    133631154 ns            6         420.441k           1.11388G        8.85089M       12.4841M    360.355M              2.62449           8.11242       2.92336G          955.915M                    6.96198                      2.6527           4.25325M    420.576k   137.305M       1061.82M/s   8.85343M   12.4865M   360.499M         2.62553    8.10894/s 2.92326G/s     955.915M               6.96198                2.65165   524.288k       4.25142M/s [BEST: throughput=  1.11 GB/s doc_throughput=     8 docs/s instructions=   955915127 cycles=   360355432 branch_miss=  420441 cache_miss= 8850887 cache_ref=  12484114 items=    524288 avg_time= 123320606 ns]
kostya<sajson>/manual_time                             147852819 ns    158150735 ns            5         400.689k           930.344M        12.4556M       17.2489M    544.447M              3.96524           6.77575       3.68904G          1.53761G                    11.1985                     2.82417           3.55244M    402.841k   137.305M       885.639M/s   12.4924M   17.2873M    545.42M         3.97232    6.76348/s 3.68894G/s     1.53761G               11.1985                2.81913   524.288k       3.54601M/s [BEST: throughput=  0.93 GB/s doc_throughput=     6 docs/s instructions=  1537609229 cycles=   544447131 branch_miss=  400689 cache_miss=12455598 cache_ref=  17248934 items=    524288 avg_time= 147852819 ns]
kostya<rapidjson>/manual_time                          283124874 ns    293450588 ns            2         972.275k           489.051M        8.42617M       12.1965M    954.863M              6.95432           3.56179       3.40102G          2.73925G                    19.9501                     2.86873            1.8674M    972.442k   137.305M       462.496M/s   8.19327M   11.9728M   956.585M         6.96686    3.53201/s 3.37867G/s     2.73925G               19.9501                2.86357   524.288k       1.85179M/s [BEST: throughput=  0.49 GB/s doc_throughput=     3 docs/s instructions=  2739246167 cycles=   954863234 branch_miss=  972275 cache_miss= 8426169 cache_ref=  12196540 items=    524288 avg_time= 283124874 ns]
kostya<rapidjson_lossless>/manual_time                 297360338 ns    307706984 ns            2         959.656k           465.454M        8.41966M       12.3426M     1007.1M              7.33478           3.38993         3.414G           3.0082G                    21.9089                     2.98698            1.7773M    959.872k   137.305M       440.355M/s   8.19257M   12.0735M   1008.74M         7.34672    3.36292/s 3.39232G/s      3.0082G               21.9089                2.98213   524.288k       1.76314M/s [BEST: throughput=  0.47 GB/s doc_throughput=     3 docs/s instructions=  3008196595 cycles=  1007102156 branch_miss=  959656 cache_miss= 8419661 cache_ref=  12342624 items=    524288 avg_time= 297360338 ns]
kostya<rapidjson_insitu>/manual_time                   267345540 ns    277679107 ns            3         969.588k           516.141M        11.7359M       15.6667M      886.4M               6.4557           3.75909       3.33205G          2.22201G                    16.1831                     2.50678           1.97084M    1.40935M   137.305M       489.794M/s    11.886M   15.8121M   895.997M          6.5256    3.74048/s 3.35146G/s     2.22201G                16.183                2.47993   524.288k       1.96109M/s [BEST: throughput=  0.52 GB/s doc_throughput=     3 docs/s instructions=  2222013698 cycles=   886400007 branch_miss=  969588 cache_miss=11735888 cache_ref=  15666696 items=    524288 avg_time= 267345540 ns]
kostya<nlohmann_json>/manual_time                     1953300882 ns   1963601559 ns            1         14.8475M           70.2938M        70.3196M       87.9424M    7.20636G              52.4843          0.511954       3.68932G          17.7632G                     129.37                     2.46494           268.411k    14.8475M   137.305M       67.0374M/s   70.3196M   87.9424M   7.20636G         52.4843   0.511954/s 3.68932G/s     17.7632G                129.37                2.46494   524.288k       268.411k/s [BEST: throughput=  0.07 GB/s doc_throughput=     0 docs/s instructions= 17763207048 cycles=  7206356543 branch_miss=14847454 cache_miss=70319596 cache_ref=  87942400 items=    524288 avg_time=1953300882 ns]
distinct_user_id<simdjson_dom>/manual_time                346519 ns       376847 ns         2018           3.809k           1.83223G              41        89.984k     1.2726M              2.01515          2.90132k       3.69221G          4.27899M                    6.77576                     3.36241           333.652k      3.989k   631.515k       1.69729G/s    3.72646   89.7918k   1.27873M         2.02486   2.88584k/s 3.69022G/s     4.27899M               6.77576                3.34628        115       331.872k/s [BEST: throughput=  1.83 GB/s doc_throughput=  2901 docs/s instructions=     4278992 cycles=     1272598 branch_miss=    3809 cache_miss=      41 cache_ref=     89984 items=       115 avg_time=    346518 ns]
distinct_user_id<simdjson_ondemand>/manual_time           218825 ns       248488 ns         3199           2.051k           2.89986G               0        53.812k    804.205k              1.27345          4.59192k       3.69284G          2.89509M                    4.58435                     3.59994            528.07k    2.18677k   631.515k       2.68774G/s    1.29165   53.8157k   807.589k         1.27881   4.56987k/s 3.69057G/s     2.89509M               4.58435                3.58485        115       525.535k/s [BEST: throughput=  2.90 GB/s doc_throughput=  4591 docs/s instructions=     2895087 cycles=      804205 branch_miss=    2051 cache_miss=       0 cache_ref=     53812 items=       115 avg_time=    218824 ns]
distinct_user_id<yyjson>/manual_time                      553352 ns       586837 ns         1000           6.396k           1.88015G         21.842k        73.979k    1.24023M               1.9639           2.9772k       3.69243G          2.87805M                    4.55737                     2.32057           342.378k    7.31453k   631.515k       1088.38M/s    7.5299k   55.5142k   1.45033M         2.29658   1.80717k/s 2.62098G/s     2.87824M               4.55768                1.98455        115       207.824k/s [BEST: throughput=  1.88 GB/s doc_throughput=  2977 docs/s instructions=     2878046 cycles=     1240234 branch_miss=    6396 cache_miss=   21842 cache_ref=     73979 items=       115 avg_time=    553352 ns]
distinct_user_id<yyjson_insitu>/manual_time               425848 ns       458359 ns         1645           6.943k            2.0392G             377        44.031k    1.14018M              1.80547          3.22907k       3.68172G          2.87753M                    4.55655                     2.52375           371.343k    7.41779k   631.515k       1.38111G/s    70.6517   30.4277k   1.23956M         1.96284   2.34825k/s 2.91081G/s     2.87779M               4.55697                2.32162        115       270.049k/s [BEST: throughput=  2.04 GB/s doc_throughput=  3229 docs/s instructions=     2877530 cycles=     1140180 branch_miss=    6943 cache_miss=     377 cache_ref=     44031 items=       115 avg_time=    425848 ns]
distinct_user_id<sajson>/manual_time                      594535 ns       624735 ns         1177          10.181k           1069.62M               0        45.574k    2.17977M              3.45166          1.69374k       3.69197G          5.81792M                    9.21265                     2.66905            194.78k    10.6113k   631.515k       1012.99M/s    21.7315   45.5472k   2.19364M         3.47362   1.68199k/s 3.68968G/s     5.81792M               9.21265                2.65218        115       193.428k/s [BEST: throughput=  1.07 GB/s doc_throughput=  1693 docs/s instructions=     5817924 cycles=     2179774 branch_miss=   10181 cache_miss=       0 cache_ref=     45574 items=       115 avg_time=    594535 ns]
distinct_user_id<rapidjson>/manual_time                  2377913 ns      2408340 ns          296          30.707k           287.533M         15.192k        53.831k    8.10778M              12.8386           455.306       3.69152G           21.823M                    34.5565                     2.69161           52.3602k    30.6356k   631.515k       253.272M/s   1.28933k   35.2842k   8.22606M         13.0259    420.537/s 3.45936G/s     21.8238M               34.5578                2.65301        115       48.3617k/s [BEST: throughput=  0.29 GB/s doc_throughput=   455 docs/s instructions=    21822959 cycles=     8107777 branch_miss=   30707 cache_miss=   15192 cache_ref=     53831 items=       115 avg_time=   2377912 ns]
distinct_user_id<rapidjson_insitu>/manual_time           1558779 ns      1589241 ns          435          25.735k           439.249M         13.173k        45.852k    5.30741M              8.40425           695.548       3.69156G            13.29M                    21.0446                     2.50404            79.988k    32.0821k   631.515k       386.366M/s   3.01065k   37.4317k   5.48647M          8.6878    641.528/s 3.51973G/s     13.2903M                21.045                2.42237        115       73.7757k/s [BEST: throughput=  0.44 GB/s doc_throughput=   695 docs/s instructions=    13289968 cycles=     5307408 branch_miss=   25735 cache_miss=   13173 cache_ref=     45852 items=       115 avg_time=   1558778 ns]
distinct_user_id<nlohmann_json>/manual_time              8022918 ns      8057406 ns           90         126.722k           81.8195M           4.17k       216.654k    28.4676M              45.0782           129.561       3.68828G          75.7277M                    119.914                     2.66014           14.8995k    139.779k   631.515k       75.0674M/s    232.178   480.494k   29.5998M          46.871    124.643/s  3.6894G/s     74.3354M                117.71                2.51135        115       14.3339k/s [BEST: throughput=  0.08 GB/s doc_throughput=   129 docs/s instructions=    75727716 cycles=    28467566 branch_miss=  126722 cache_miss=    4170 cache_ref=    216654 items=       115 avg_time=   8022917 ns]
find_tweet<simdjson_dom>/manual_time                      334172 ns       362971 ns         2095           3.582k           1.89942G               0        79.443k    1.22767M              1.94402          3.00773k       3.69251G          4.19367M                    6.64065                     3.41595           3.00773k     3.7509k   631.515k          1.76G/s    16.7126    79.464k   1.23323M         1.95281   2.99247k/s  3.6904G/s     4.19367M               6.64065                3.40056          1       2.99247k/s [BEST: throughput=  1.90 GB/s doc_throughput=  3007 docs/s instructions=     4193672 cycles=     1227675 branch_miss=    3582 cache_miss=       0 cache_ref=     79443 items=         1 avg_time=    334172 ns]
find_tweet<simdjson_ondemand>/manual_time                 173434 ns       201526 ns         4034           1.251k           3.65204G               0        31.399k    638.552k              1.01114          5.78299k       3.69274G          2.38922M                    3.78331                     3.74162           5.78299k    1.32267k   631.515k       3.39117G/s   0.032474   31.4321k    640.17k         1.01371   5.76588k/s 3.69114G/s     2.38922M               3.78331                3.73216          1       5.76588k/s [BEST: throughput=  3.65 GB/s doc_throughput=  5782 docs/s instructions=     2389218 cycles=      638552 branch_miss=    1251 cache_miss=       0 cache_ref=     31399 items=         1 avg_time=    173434 ns]
find_tweet<yyjson>/manual_time                            616502 ns       647282 ns         1356           9.514k           1.84633G             573        64.869k    1.26307M              2.00007          2.92365k       3.69279G          2.81717M                    4.46097                      2.2304           2.92365k      7.312k   631.515k       976.898M/s    1053.31   39.4453k   1.47518M         2.33594   1.62205k/s 2.39282G/s     2.81763M                4.4617                1.91002          1       1.62205k/s [BEST: throughput=  1.85 GB/s doc_throughput=  2923 docs/s instructions=     2817168 cycles=     1263075 branch_miss=    9514 cache_miss=     573 cache_ref=     64869 items=         1 avg_time=    616502 ns]
find_tweet<yyjson_insitu>/manual_time                     414853 ns       444799 ns         1688           6.604k           2.11623G             420        35.928k    1098.53k              1.73952          3.35104k       3.68122G          2.81683M                    4.46043                     2.56418           3.35104k    7.11306k   631.515k       1.41772G/s    17.0053   21.9308k   1.19976M         1.89981   2.41049k/s 2.89201G/s     2.81709M               4.46085                2.34805          1       2.41049k/s [BEST: throughput=  2.12 GB/s doc_throughput=  3351 docs/s instructions=     2816831 cycles=     1098530 branch_miss=    6604 cache_miss=     420 cache_ref=     35928 items=         1 avg_time=    414853 ns]
find_tweet<sajson>/manual_time                            582702 ns       612238 ns         1202           9.948k           1091.81M               0        36.123k    2.13547M               3.3815          1.72887k       3.69196G          5.72273M                    9.06191                     2.67985           1.72887k    10.4451k   631.515k       1033.56M/s    14.8794    36.147k    2.1501M         3.40467   1.71614k/s 3.68988G/s     5.72273M               9.06191                2.66161          1       1.71614k/s [BEST: throughput=  1.09 GB/s doc_throughput=  1728 docs/s instructions=     5722731 cycles=     2135468 branch_miss=    9948 cache_miss=       0 cache_ref=     36123 items=         1 avg_time=    582702 ns]
find_tweet<rapidjson>/manual_time                        2362462 ns      2391288 ns          297          30.284k           290.334M             216        44.914k    8.02953M              12.7147           459.742       3.69151G          21.7389M                    34.4234                     2.70737            459.742     30.494k   631.515k       254.929M/s     1003.4   27.2491k   8.17152M         12.9396    423.287/s  3.4589G/s     21.7397M               34.4247                2.66042          1        423.287/s [BEST: throughput=  0.29 GB/s doc_throughput=   459 docs/s instructions=    21738891 cycles=     8029530 branch_miss=   30284 cache_miss=     216 cache_ref=     44914 items=         1 avg_time=   2362462 ns]
find_tweet<rapidjson_insitu>/manual_time                 1532470 ns      1562263 ns          440          25.962k           447.621M          13.13k        36.652k    5.20816M              8.24709           708.806       3.69157G          13.2117M                    20.9207                     2.53674            708.806    32.3275k   631.515k       392.999M/s   2.76816k   27.6878k   5.38945M         8.53416    652.541/s 3.51684G/s      13.212M               20.9212                2.45147          1        652.541/s [BEST: throughput=  0.45 GB/s doc_throughput=   708 docs/s instructions=    13211749 cycles=     5208160 branch_miss=   25962 cache_miss=   13130 cache_ref=     36652 items=         1 avg_time=   1532470 ns]
find_tweet<nlohmann_json>/manual_time                    6916341 ns      6947048 ns          105          98.904k           95.3893M          3.312k        162.32k    24.4285M              38.6823           151.048       3.68988G          65.8451M                    104.265                     2.69542            151.048    113.831k   631.515k       87.0778M/s    257.419   379.521k   25.5177M         40.4072    144.585/s 3.68948G/s     64.4652M                102.08                2.52629          1        144.585/s [BEST: throughput=  0.10 GB/s doc_throughput=   151 docs/s instructions=    65845061 cycles=    24428468 branch_miss=   98904 cache_miss=    3312 cache_ref=    162320 items=         1 avg_time=   6916341 ns]
top_tweet<simdjson_dom>/manual_time                       340469 ns       368690 ns         2051           3.752k            1.8623G               0        86.878k    1.25214M              1.98275          2.94894k       3.69248G          4.23056M                    6.69906                     3.37867           2.94894k    3.83854k   631.515k       1.72745G/s    13.2023    87.121k   1.25646M         1.98959   2.93713k/s 3.69037G/s     4.23056M               6.69906                3.36705          1       2.93713k/s [BEST: throughput=  1.86 GB/s doc_throughput=  2948 docs/s instructions=     4230559 cycles=     1252137 branch_miss=    3752 cache_miss=       0 cache_ref=     86878 items=         1 avg_time=    340468 ns]
top_tweet<simdjson_ondemand>/manual_time                  215900 ns       243831 ns         3240           1.946k           2.93813G               0        53.868k    793.648k              1.25674           4.6525k       3.69245G          2.91581M                    4.61717                     3.67394            4.6525k    2.04731k   631.515k       2.72415G/s   0.417901   53.9511k   796.872k         1.26184   4.63178k/s 3.69093G/s     2.91581M               4.61717                3.65907          1       4.63178k/s [BEST: throughput=  2.94 GB/s doc_throughput=  4652 docs/s instructions=     2915814 cycles=      793648 branch_miss=    1946 cache_miss=       0 cache_ref=     53868 items=         1 avg_time=    215899 ns]
top_tweet<simdjson_ondemand_forward_only>/manual_time     233987 ns       262055 ns         2992           2.189k            2.7121G               0         54.79k    859.883k              1.36162          4.29459k       3.69285G          3.14127M                    4.97418                     3.65314           4.29459k    2.32532k   631.515k       2.51357G/s    1.49866   54.8001k   863.531k          1.3674   4.27373k/s  3.6905G/s     3.14127M               4.97418                3.63771          1       4.27373k/s [BEST: throughput=  2.71 GB/s doc_throughput=  4294 docs/s instructions=     3141272 cycles=      859883 branch_miss=    2189 cache_miss=       0 cache_ref=     54790 items=         1 avg_time=    233987 ns]
top_tweet<yyjson>/manual_time                             620785 ns       650848 ns         1134           9.199k           1.83527G             385        69.831k    1.27077M              2.01226          2.90613k       3.69303G          2.84443M                    4.50414                     2.23835           2.90613k    7.41385k   631.515k       970.159M/s    957.171   44.6218k   1.49237M         2.36316   1.61086k/s 2.40401G/s     2.84491M               4.50489                 1.9063          1       1.61086k/s [BEST: throughput=  1.84 GB/s doc_throughput=  2906 docs/s instructions=     2844430 cycles=     1270770 branch_miss=    9199 cache_miss=     385 cache_ref=     69831 items=         1 avg_time=    620784 ns]
top_tweet<yyjson_insitu>/manual_time                      420868 ns       449985 ns         1665           6.726k           2.07244G          3.117k        41.035k    1.12187M              1.77648           3.2817k       3.68165G          2.84411M                    4.50362                     2.53515            3.2817k    7.27775k   631.515k       1.39746G/s    50.6541   27.0079k   1.22173M          1.9346   2.37604k/s 2.90288G/s     2.84437M               4.50404                2.32815          1       2.37604k/s [BEST: throughput=  2.07 GB/s doc_throughput=  3281 docs/s instructions=     2844106 cycles=     1121871 branch_miss=    6726 cache_miss=    3117 cache_ref=     41035 items=         1 avg_time=    420867 ns]
top_tweet<sajson>/manual_time                             586578 ns       615142 ns         1193          10.047k           1083.43M               0        41.543k    2.15194M              3.40758           1.7156k       3.69186G          5.75272M                     9.1094                     2.67328            1.7156k    10.4556k   631.515k       1026.73M/s   0.952221   41.3946k   2.16446M         3.42742    1.7048k/s 3.68999G/s     5.75272M                9.1094                 2.6578          1        1.7048k/s [BEST: throughput=  1.08 GB/s doc_throughput=  1715 docs/s instructions=     5752722 cycles=     2151936 branch_miss=   10047 cache_miss=       0 cache_ref=     41543 items=         1 avg_time=    586577 ns]
top_tweet<rapidjson>/manual_time                         2373122 ns      2402163 ns          296          29.877k           288.714M         14.716k        50.207k    8.07462M              12.7861           457.177       3.69153G          21.7976M                    34.5164                     2.69952            457.177    30.6165k   631.515k       253.784M/s   1.15738k   32.2262k   8.21097M          13.002    421.386/s 3.45999G/s     21.7984M               34.5177                2.65479          1        421.386/s [BEST: throughput=  0.29 GB/s doc_throughput=   457 docs/s instructions=    21797609 cycles=     8074617 branch_miss=   29877 cache_miss=   14716 cache_ref=     50207 items=         1 avg_time=   2373121 ns]
top_tweet<rapidjson_insitu>/manual_time                  1529274 ns      1558059 ns          442          25.697k           452.566M              48        39.521k    5.15132M              8.15708           716.635       3.69162G          13.2657M                    21.0062                     2.57521            716.635    32.3993k   631.515k       393.821M/s   2.84993k   33.3127k   5.37733M         8.51497    653.905/s 3.51626G/s     13.2662M                21.007                2.46707          1        653.905/s [BEST: throughput=  0.45 GB/s doc_throughput=   716 docs/s instructions=    13265725 cycles=     5151321 branch_miss=   25697 cache_miss=      48 cache_ref=     39521 items=         1 avg_time=   1529273 ns]
top_tweet<nlohmann_json>/manual_time                     9323149 ns      9354743 ns           75         186.607k            67.967M             445       385.474k    34.2767M              54.2769           107.625       3.68904G          87.5722M                     138.67                     2.55486            107.625    187.854k   631.515k       64.5983M/s   2.59053k   403.715k   34.3946M         54.4637     107.26/s 3.68916G/s     87.5999M               138.714                2.54691          1         107.26/s [BEST: throughput=  0.07 GB/s doc_throughput=   107 docs/s instructions=    87572181 cycles=    34276697 branch_miss=  186607 cache_miss=     445 cache_ref=    385474 items=         1 avg_time=   9323148 ns]
