run_benchmark: v0.8.0 /home/jkeiser/simdjson_benchmark_results/v0.8.0/ampere-clang10-debug.json -DCMAKE_BUILD_TYPE=Debug
git reset --hard v0.8.0
HEAD is now at c96ff018 Version 0.8.
cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The CXX compiler identification is Clang 10.0.1
-- The C compiler identification is Clang 10.0.1
-- Check for working CXX compiler: /usr/bin/clang++-10
-- Check for working CXX compiler: /usr/bin/clang++-10 -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Check for working C compiler: /usr/bin/clang-10
-- Check for working C compiler: /usr/bin/clang-10 -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed
-- Check if compiler accepts -pthread
-- Check if compiler accepts -pthread - yes
-- Found Threads: TRUE  
-- Looking for fork
-- Looking for fork - found
-- Looking for wait
-- Looking for wait - found
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Found Git: /usr/bin/git (found version "2.27.0") 
-- git Version: v0.2.1-c96ff018
-- Version: 0.2.1
-- Performing Test HAVE_CXX_FLAG_STD_CXX11
-- Performing Test HAVE_CXX_FLAG_STD_CXX11 - Success
-- Performing Test HAVE_CXX_FLAG_WALL
-- Performing Test HAVE_CXX_FLAG_WALL - Success
-- Performing Test HAVE_CXX_FLAG_WEXTRA
-- Performing Test HAVE_CXX_FLAG_WEXTRA - Success
-- Performing Test HAVE_CXX_FLAG_WSHADOW
-- Performing Test HAVE_CXX_FLAG_WSHADOW - Success
-- Performing Test HAVE_CXX_FLAG_WERROR
-- Performing Test HAVE_CXX_FLAG_WERROR - Success
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32 - Success
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED - Success
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WD654
-- Performing Test HAVE_CXX_FLAG_WD654 - Failed
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY - Success
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES -- failed to compile
-- Performing Test HAVE_CXX_FLAG_COVERAGE
-- Performing Test HAVE_CXX_FLAG_COVERAGE - Success
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Performing Test USE_BOOST_JSON
-- Performing Test USE_BOOST_JSON - Failed
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Found Python3: /usr/bin/python3.8 (found version "3.8.6") found components: Interpreter 
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 10
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
Scanning dependencies of target benchmark
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_api_internal.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_name.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_name.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_register.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_register.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_runner.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_runner.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/colorprint.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/colorprint.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/commandlineflags.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/commandlineflags.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/complexity.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/complexity.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/console_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/console_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/counter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/counter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/csv_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/csv_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/json_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/json_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/sleep.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sleep.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/statistics.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/statistics.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/string_util.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/string_util.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/sysinfo.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sysinfo.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/timers.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/timers.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -P CMakeFiles/benchmark.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/benchmark.dir/link.txt --verbose=1
/usr/bin/ar qc libbenchmarkd.a  CMakeFiles/benchmark.dir/benchmark.cc.o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o CMakeFiles/benchmark.dir/benchmark_name.cc.o CMakeFiles/benchmark.dir/benchmark_register.cc.o CMakeFiles/benchmark.dir/benchmark_runner.cc.o CMakeFiles/benchmark.dir/colorprint.cc.o CMakeFiles/benchmark.dir/commandlineflags.cc.o CMakeFiles/benchmark.dir/complexity.cc.o CMakeFiles/benchmark.dir/console_reporter.cc.o CMakeFiles/benchmark.dir/counter.cc.o CMakeFiles/benchmark.dir/csv_reporter.cc.o CMakeFiles/benchmark.dir/json_reporter.cc.o CMakeFiles/benchmark.dir/reporter.cc.o CMakeFiles/benchmark.dir/sleep.cc.o CMakeFiles/benchmark.dir/statistics.cc.o CMakeFiles/benchmark.dir/string_util.cc.o CMakeFiles/benchmark.dir/sysinfo.cc.o CMakeFiles/benchmark.dir/timers.cc.o
/usr/bin/ranlib libbenchmarkd.a
[ 80%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
Scanning dependencies of target generated-data
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated && /usr/bin/ruby genfeaturejson.rb /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-miss.json ...
[ 80%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/clang++-10  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/include  -g -fPIC   -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -pthread -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/clang++-10 -fPIC -g  -shared -Wl,-soname,libsimdjson.so.7 -o ../libsimdjson.so.7.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.7.0.0 ../libsimdjson.so.7 ../libsimdjson.so
[ 80%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
Scanning dependencies of target yyjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/clang-10  -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src  -g   -o CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o   -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src/yyjson.c
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -P CMakeFiles/yyjson.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -E cmake_link_script CMakeFiles/yyjson.dir/link.txt --verbose=1
/usr/bin/ar qc libyyjson.a  CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o
/usr/bin/ranlib libyyjson.a
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/clang++-10  -DRAPIDJSON_HAS_STDSTRING -DSAJSON_UNSORTED_OBJECT_KEYS -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_COMPETITION_NLOHMANN_JSON -DSIMDJSON_COMPETITION_RAPIDJSON -DSIMDJSON_COMPETITION_SAJSON -DSIMDJSON_COMPETITION_YYJSON -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/rapidjson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/sajson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/json  -g   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/clang++-10  -g   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.7.0.0 ../_deps/google_benchmarks/src/libbenchmarkd.a ../dependencies/libyyjson.a -pthread /usr/lib/aarch64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.8.0/ampere-clang10-debug.json --benchmark_out_format=json
2021-01-24 20:44:01
Running benchmark/bench_ondemand
Run on (32 X 3300 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x32)
  L1 Instruction 32 KiB (x32)
  L2 Unified 256 KiB (x16)
Load Average: 0.72, 0.25, 0.08
***WARNING*** Library was built as DEBUG. Timings may be affected.
simdjson::dom implementation:      arm64
simdjson::ondemand implementation: arm64

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                57145068 ns     57222515 ns           12          39.415k           11.0563M        1.45807M       93.9212M    182.624M              289.184           17.5076       3.19731G          80.3481M                    127.231                    0.439965           1.75076k    39.3368k   631.515k       10.5391M/s   1.45782M    93.923M   182.674M         289.264    17.4993/s 3.19668G/s     80.3481M               127.231               0.439843        100       1.74993k/s [BEST: throughput=  0.01 GB/s doc_throughput=    17 docs/s instructions=    80348074 cycles=   182623851 branch_miss=   39415 cache_miss= 1458073 cache_ref=  93921211 items=       100 avg_time=  57145067 ns]
partial_tweets<simdjson_ondemand>/manual_time           47115153 ns     47191907 ns           15          31.218k           13.4091M        1.53767M       74.6909M    150.581M              238.444           21.2332       3.19732G            64.23M                    101.708                    0.426548           2.12332k    31.2319k   631.515k       12.7827M/s    1.5369M   74.6878M   150.607M         238.486    21.2246/s 3.19658G/s       64.23M               101.708               0.426473        100       2.12246k/s [BEST: throughput=  0.01 GB/s doc_throughput=    21 docs/s instructions=    64230030 cycles=   150581169 branch_miss=   31218 cache_miss= 1537673 cache_ref=  74690876 items=       100 avg_time=  47115153 ns]
partial_tweets<yyjson>/manual_time                       4346954 ns      4424331 ns          161          50.737k           149.209M         24.669k       7.18236M    13.5098M              21.3927           236.272       3.19199G          11.3502M                     17.973                    0.840147           23.6272k    50.3925k   631.515k       138.548M/s   24.7197k   7.18361M    13.656M         21.6242    230.046/s 3.14151G/s     11.3503M               17.9731               0.831159        100       23.0046k/s [BEST: throughput=  0.15 GB/s doc_throughput=   236 docs/s instructions=    11350242 cycles=    13509821 branch_miss=   50737 cache_miss=   24669 cache_ref=   7182363 items=       100 avg_time=   4346954 ns]
partial_tweets<yyjson_insitu>/manual_time                4266049 ns      4343175 ns          164            50.2k           150.525M         14.715k       7.02235M    13.4275M              21.2624           238.355       3.20052G          11.2512M                    17.8163                    0.837924           23.8355k    50.3517k   631.515k       141.175M/s   14.7827k   7.02392M   13.5126M         21.3971    234.409/s 3.16747G/s     11.2512M               17.8162               0.832649        100       23.4409k/s [BEST: throughput=  0.15 GB/s doc_throughput=   238 docs/s instructions=    11251241 cycles=    13427515 branch_miss=   50200 cache_miss=   14715 cache_ref=   7022352 items=       100 avg_time=   4266048 ns]
partial_tweets<sajson>/manual_time                       7664640 ns      7741979 ns           91          89.079k           82.5601M          12.93k       11.9597M      24.48M              38.7639           130.733       3.20035G          26.4445M                    41.8748                     1.08025           13.0733k    89.7104k   631.515k       78.5764M/s   12.9857k   11.9601M   24.5013M         38.7977    130.469/s 3.19667G/s     26.4445M               41.8747                1.07931        100       13.0469k/s [BEST: throughput=  0.08 GB/s doc_throughput=   130 docs/s instructions=    26444533 cycles=    24479995 branch_miss=   89079 cache_miss=   12930 cache_ref=  11959652 items=       100 avg_time=   7664639 ns]
partial_tweets<rapidjson>/manual_time                   27793778 ns     27872456 ns           25         145.929k           22.7835M         13.544k       56.0975M    88.6094M              140.312           36.0775       3.19681G          104.474M                    165.434                     1.17904           3.60775k    146.084k   631.515k       21.6689M/s   13.7923k   56.0981M    88.647M         140.372    35.9793/s 3.18946G/s     104.474M               165.435                1.17854        100       3.59793k/s [BEST: throughput=  0.02 GB/s doc_throughput=    36 docs/s instructions=   104474177 cycles=    88609386 branch_miss=  145929 cache_miss=   13544 cache_ref=  56097511 items=       100 avg_time=  27793778 ns]
partial_tweets<rapidjson_insitu>/manual_time            20827256 ns     20906779 ns           34         124.971k            30.417M         14.036k       38.2177M    66.3792M              105.111           48.1651       3.19716G          73.4249M                    116.268                     1.10614           4.81651k     125.22k   631.515k       28.9169M/s   14.2129k   38.2199M   66.4311M         105.193     48.014/s 3.18962G/s     73.4253M               116.269                1.10529        100        4.8014k/s [BEST: throughput=  0.03 GB/s doc_throughput=    48 docs/s instructions=    73424937 cycles=    66379162 branch_miss=  124971 cache_miss=   14036 cache_ref=  38217720 items=       100 avg_time=  20827256 ns]
partial_tweets<nlohmann_json>/manual_time              119877436 ns    119981371 ns            6         950.317k           5.32254M        240.899k        256.61M    379.279M              600.586           8.42821       3.19664G          430.557M                    681.785                      1.1352            842.821     973.22k   631.515k       5.02396M/s   301.469k   256.973M   383.192M         606.783    8.34185/s 3.19653G/s     431.256M               682.891                1.12543        100        834.185/s [BEST: throughput=  0.01 GB/s doc_throughput=     8 docs/s instructions=   430557386 cycles=   379278759 branch_miss=  950317 cache_miss=  240899 cache_ref= 256609876 items=       100 avg_time= 119877436 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                6764699449 ns   6768583433 ns            1         12.6558M           6.79983M        4.38333M       12.8027G    21.6275G              470.176          0.147826       3.19712G          15.4391G                    335.641                    0.713862           147.826k    12.6558M   45.9988M       6.48482M/s   4.38333M   12.8027G   21.6275G         470.176   0.147826/s 3.19712G/s     15.4391G               335.641               0.713862      1000k       147.826k/s [BEST: throughput=  0.01 GB/s doc_throughput=     0 docs/s instructions= 15439071645 cycles= 21627530217 branch_miss=12655754 cache_miss= 4383329 cache_ref=12802704565 items=   1000000 avg_time=6764699449 ns]
large_random<simdjson_ondemand>/manual_time           4702871302 ns   4706544200 ns            1         7.22289M             9.781M        2.70643M       8.05428G    15.0342G              326.839          0.212636       3.19681G          9.70819G                    211.053                    0.645741           212.636k    7.22289M   45.9988M       9.32789M/s   2.70643M   8.05428G   15.0342G         326.839   0.212636/s 3.19681G/s     9.70819G               211.053               0.645741      1000k       212.636k/s [BEST: throughput=  0.01 GB/s doc_throughput=     0 docs/s instructions=  9708194478 cycles= 15034181224 branch_miss= 7222888 cache_miss= 2706427 cache_ref=8054282592 items=   1000000 avg_time=4702871302 ns]
large_random<simdjson_ondemand_unordered>/manual_time 4938188835 ns   4941839268 ns            1         6.56851M           9.31491M        10.1805M       8.20649G    15.7865G              343.194          0.202503       3.19682G           9.9762G                     216.88                    0.631944           202.503k    6.56851M   45.9988M       8.88339M/s   10.1805M   8.20649G   15.7865G         343.194   0.202503/s 3.19682G/s      9.9762G                216.88               0.631944      1000k       202.503k/s [BEST: throughput=  0.01 GB/s doc_throughput=     0 docs/s instructions=  9976197697 cycles= 15786513236 branch_miss= 6568507 cache_miss=10180533 cache_ref=8206490904 items=   1000000 avg_time=4938188835 ns]
large_random<yyjson>/manual_time                       977688036 ns    981305005 ns            1         1.63818M           47.0485M        4.95941M       1.69106G    3.09917G               67.375           1.02282        3.1699G          3.08853G                    67.1437                    0.996566           1022.82k    1.63818M   45.9988M        44.869M/s   4.95941M   1.69106G   3.09917G          67.375    1.02282/s  3.1699G/s     3.08853G               67.1437               0.996566      1000k       1022.82k/s [BEST: throughput=  0.05 GB/s doc_throughput=     1 docs/s instructions=  3088526479 cycles=  3099168727 branch_miss= 1638181 cache_miss= 4959406 cache_ref=1691059638 items=   1000000 avg_time= 977688036 ns]
large_random<yyjson_insitu>/manual_time                971495953 ns    975154115 ns            1         1.63247M           47.3484M         4.2523M       1.67948G    3.08644G              67.0983           1.02934         3.177G          3.08134G                    66.9874                    0.998347           1029.34k    1.63247M   45.9988M        45.155M/s    4.2523M   1.67948G   3.08644G         67.0983    1.02934/s   3.177G/s     3.08134G               66.9874               0.998347      1000k       1029.34k/s [BEST: throughput=  0.05 GB/s doc_throughput=     1 docs/s instructions=  3081338830 cycles=  3086439804 branch_miss= 1632471 cache_miss= 4252303 cache_ref=1679483372 items=   1000000 avg_time= 971495953 ns]
large_random<sajson>/manual_time                      2267242433 ns   2270846655 ns            1         12.2921M           20.2884M         3.4792M       3.77315G    7.24918G              157.595          0.441064       3.19735G          7.16295G                    155.721                    0.988106           441.064k    12.2921M   45.9988M       19.3485M/s    3.4792M   3.77315G   7.24918G         157.595   0.441064/s 3.19735G/s     7.16295G               155.721               0.988106      1000k       441.064k/s [BEST: throughput=  0.02 GB/s doc_throughput=     0 docs/s instructions=  7162954729 cycles=  7249178498 branch_miss=12292132 cache_miss= 3479196 cache_ref=3773145924 items=   1000000 avg_time=2267242433 ns]
large_random<rapidjson>/manual_time                   3945895549 ns   3949512596 ns            1         17.9524M           11.6574M        5.00087M       7.23514G    12.5837G              273.566          0.253428       3.18906G          13.5305G                     294.15                     1.07524           253.428k    17.9524M   45.9988M       11.1173M/s   5.00087M   7.23514G   12.5837G         273.566   0.253428/s 3.18906G/s     13.5305G                294.15                1.07524      1000k       253.428k/s [BEST: throughput=  0.01 GB/s doc_throughput=     0 docs/s instructions= 13530532486 cycles= 12583715468 branch_miss=17952378 cache_miss= 5000872 cache_ref=7235138755 items=   1000000 avg_time=3945895549 ns]
large_random<rapidjson_lossless>/manual_time          4751910922 ns   4755564311 ns            1         17.5931M           9.68006M        5.00795M       9.13468G    15.1601G              329.577          0.210442       3.19033G          16.6683G                    362.363                     1.09948           210.442k    17.5931M   45.9988M       9.23162M/s   5.00795M   9.13468G   15.1601G         329.577   0.210442/s 3.19033G/s     16.6683G               362.363                1.09948      1000k       210.442k/s [BEST: throughput=  0.01 GB/s doc_throughput=     0 docs/s instructions= 16668266847 cycles= 15160147017 branch_miss=17593059 cache_miss= 5007955 cache_ref=9134677422 items=   1000000 avg_time=4751910922 ns]
large_random<rapidjson_insitu>/manual_time            3725160333 ns   3728775152 ns            1         13.6634M           12.3481M        5.72208M         6.817G    11.8783G              258.232          0.268445       3.18868G          12.7765G                    277.758                     1.07562           268.445k    13.6634M   45.9988M       11.7761M/s   5.72208M     6.817G   11.8783G         258.232   0.268445/s 3.18868G/s     12.7765G               277.758                1.07562      1000k       268.445k/s [BEST: throughput=  0.01 GB/s doc_throughput=     0 docs/s instructions= 12776533210 cycles= 11878347764 branch_miss=13663361 cache_miss= 5722082 cache_ref=6817001348 items=   1000000 avg_time=3725160333 ns]
large_random<nlohmann_json>/manual_time               21521508636 ns   21525250015 ns            1         96.7279M           2.13734M        28.7114M       37.5343G    68.7949G             1.49558k         0.0464651       3.19656G          64.1499G                    1.3946k                    0.932481           46.4651k    96.7279M   45.9988M       2.03833M/s   28.7114M   37.5343G   68.7949G        1.49558k  0.0464651/s 3.19656G/s     64.1499G               1.3946k               0.932481      1000k       46.4651k/s [BEST: throughput=  0.00 GB/s doc_throughput=     0 docs/s instructions= 64149945356 cycles= 68794876415 branch_miss=96727894 cache_miss=28711410 cache_ref=37534298228 items=   1000000 avg_time=21521508636 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                      10625710179 ns   10636515940 ns            1         11.7604M            12.922M        7.78767M       18.6653G    33.9711G              247.414         0.0941114       3.19707G          18.5922G                    135.408                    0.547294           49.3415k    11.7604M   137.305M       12.3233M/s   7.78767M   18.6653G   33.9711G         247.414  0.0941114/s 3.19707G/s     18.5922G               135.408               0.547294   524.288k       49.3415k/s [BEST: throughput=  0.01 GB/s doc_throughput=     0 docs/s instructions= 18592179614 cycles= 33971124158 branch_miss=11760375 cache_miss= 7787666 cache_ref=18665260818 items=    524288 avg_time=10625710179 ns]
kostya<simdjson_ondemand>/manual_time                 8488156414 ns   8498952463 ns            1         9.55076M           16.1761M        7.15231M       14.2487G    27.1368G              197.639          0.117811       3.19702G          13.8784G                    101.077                    0.511423            61.767k    9.55076M   137.305M       15.4267M/s   7.15231M   14.2487G   27.1368G         197.639   0.117811/s 3.19702G/s     13.8784G               101.077               0.511423   524.288k        61.767k/s [BEST: throughput=  0.02 GB/s doc_throughput=     0 docs/s instructions= 13878358037 cycles= 27136773278 branch_miss= 9550756 cache_miss= 7152306 cache_ref=14248658884 items=    524288 avg_time=8488156414 ns]
kostya<yyjson>/manual_time                            1234367695 ns   1245074784 ns            1         4.34636M           111.235M        8.02356M       2.10066G    3.89904G              28.3969          0.810131       3.15874G          3.44903G                    25.1195                    0.884584           424.742k    4.34636M   137.305M       106.082M/s   8.02356M   2.10066G   3.89904G         28.3969   0.810131/s 3.15874G/s     3.44903G               25.1195               0.884584   524.288k       424.742k/s [BEST: throughput=  0.11 GB/s doc_throughput=     0 docs/s instructions=  3449029239 cycles=  3899041783 branch_miss= 4346356 cache_miss= 8023564 cache_ref=2100664813 items=    524288 avg_time=1234367695 ns]
kostya<yyjson_insitu>/manual_time                     1217750179 ns   1228490628 ns            1         4.24195M           112.753M        5.86704M       2.06639G    3.86694G              28.1631          0.821186       3.17548G          3.42757G                    24.9632                     0.88638           430.538k    4.24195M   137.305M        107.53M/s   5.86704M   2.06639G   3.86694G         28.1631   0.821186/s 3.17548G/s     3.42757G               24.9632                0.88638   524.288k       430.538k/s [BEST: throughput=  0.11 GB/s doc_throughput=     0 docs/s instructions=  3427574988 cycles=  3866935912 branch_miss= 4241955 cache_miss= 5867041 cache_ref=2066389390 items=    524288 avg_time=1217750179 ns]
kostya<sajson>/manual_time                            2760386212 ns   2771093569 ns            1         27.6495M           49.7412M        4.83708M       4.06745G     8.8256G              64.2773          0.362268       3.19723G          8.69544G                    63.3294                    0.985252           189.933k    27.6495M   137.305M       47.4369M/s   4.83708M   4.06745G    8.8256G         64.2773   0.362268/s 3.19723G/s     8.69544G               63.3294               0.985252   524.288k       189.933k/s [BEST: throughput=  0.05 GB/s doc_throughput=     0 docs/s instructions=  8695437428 cycles=  8825598212 branch_miss=27649454 cache_miss= 4837077 cache_ref=4067453938 items=    524288 avg_time=2760386212 ns]
kostya<rapidjson>/manual_time                         4872331257 ns   4833766000 ns            1         38.6663M           28.1806M        5.91549M       8.53935G    15.3747G              111.975          0.205241       3.15551G          15.9601G                    116.238                     1.03807           107.605k    38.6663M   137.305M       26.8751M/s   5.91549M   8.53935G   15.3747G         111.975   0.205241/s 3.15551G/s     15.9601G               116.238                1.03807   524.288k       107.605k/s [BEST: throughput=  0.03 GB/s doc_throughput=     0 docs/s instructions= 15960080020 cycles= 15374689230 branch_miss=38666260 cache_miss= 5915495 cache_ref=8539354539 items=    524288 avg_time=4872331257 ns]
kostya<rapidjson_lossless>/manual_time                5328852378 ns   5339549604 ns            1           40.39M           25.7663M        5.41398M       9.66029G    16.9921G              123.754          0.187658       3.18869G          17.7704G                    129.423                      1.0458           98.3867k      40.39M   137.305M       24.5727M/s   5.41398M   9.66029G   16.9921G         123.754   0.187658/s 3.18869G/s     17.7704G               129.423                 1.0458   524.288k       98.3867k/s [BEST: throughput=  0.03 GB/s doc_throughput=     0 docs/s instructions= 17770372316 cycles= 16992077289 branch_miss=40389961 cache_miss= 5413977 cache_ref=9660285955 items=    524288 avg_time=5328852378 ns]
kostya<rapidjson_insitu>/manual_time                  4486520634 ns   4497205511 ns            1         34.9287M           30.6039M        6.27716M       7.65294G    14.2999G              104.147           0.22289        3.1873G          14.4204G                    105.025                     1.00843           116.858k    34.9287M   137.305M       29.1861M/s   6.27716M   7.65294G   14.2999G         104.147    0.22289/s  3.1873G/s     14.4204G               105.025                1.00843   524.288k       116.858k/s [BEST: throughput=  0.03 GB/s doc_throughput=     0 docs/s instructions= 14420433757 cycles= 14299888031 branch_miss=34928683 cache_miss= 6277158 cache_ref=7652940740 items=    524288 avg_time=4486520634 ns]
kostya<nlohmann_json>/manual_time                     32825261654 ns   32836231554 ns            1         198.372M           4.18291M        39.3741M       60.9414G    104.932G              764.229         0.0304643        3.1967G          101.537G                    739.498                     0.96764           15.9721k    198.372M   137.305M       3.98913M/s   39.3741M   60.9414G   104.932G         764.229  0.0304643/s  3.1967G/s     101.537G               739.498                0.96764   524.288k       15.9721k/s [BEST: throughput=  0.00 GB/s doc_throughput=     0 docs/s instructions=101536827943 cycles=104932406901 branch_miss=198372160 cache_miss=39374083 cache_ref=60941433429 items=    524288 avg_time=32825261654 ns]
distinct_user_id<simdjson_dom>/manual_time              56811361 ns     56946535 ns           12          36.103k           11.1216M         1.4536M        92.798M    181.553M              287.488            17.611       3.19733G          78.5681M                    124.412                    0.432756           2.02527k         36k   631.515k        10.601M/s   1.45393M   92.8012M   181.606M         287.572    17.6021/s 3.19665G/s     78.5681M               124.412               0.432629        115       2.02424k/s [BEST: throughput=  0.01 GB/s doc_throughput=    17 docs/s instructions=    78568136 cycles=   181552815 branch_miss=   36103 cache_miss= 1453602 cache_ref=  92798048 items=       115 avg_time=  56811360 ns]
distinct_user_id<simdjson_ondemand>/manual_time         45674196 ns     45808505 ns           15          29.128k           13.8328M        1.46938M       73.6219M     145.97M              231.142           21.9041       3.19734G          64.1604M                    101.598                    0.439545           2.51897k    29.5474k   631.515k        13.186M/s   1.46943M   73.6261M   146.008M         231.203    21.8942/s 3.19674G/s     64.1604M               101.598               0.439429        115       2.51783k/s [BEST: throughput=  0.01 GB/s doc_throughput=    21 docs/s instructions=    64160376 cycles=   145969837 branch_miss=   29128 cache_miss= 1469378 cache_ref=  73621882 items=       115 avg_time=  45674195 ns]
distinct_user_id<yyjson>/manual_time                     4175352 ns      4310346 ns          168          49.895k           152.913M         24.595k       7.01403M    13.2184M              20.9313           242.136       3.20066G          11.0788M                    17.5433                    0.838137           27.8457k    50.0802k   631.515k       144.242M/s   24.6417k   7.01717M   13.3478M         21.1361    239.501/s  3.1968G/s     11.0787M               17.5431               0.830005        115       27.5426k/s [BEST: throughput=  0.15 GB/s doc_throughput=   242 docs/s instructions=    11078843 cycles=    13218417 branch_miss=   49895 cache_miss=   24595 cache_ref=   7014030 items=       115 avg_time=   4175352 ns]
distinct_user_id<yyjson_insitu>/manual_time              4146229 ns      4281672 ns          169          50.327k           154.541M         14.757k       6.85791M     13.043M              20.6536           244.714       3.19182G          10.9795M                     17.386                    0.841792           28.1422k    50.3195k   631.515k       145.255M/s   14.7619k    6.8585M   13.1895M         20.8856    241.183/s 3.18109G/s     10.9796M               17.3861               0.832447        115        27.736k/s [BEST: throughput=  0.15 GB/s doc_throughput=   244 docs/s instructions=    10979530 cycles=    13043037 branch_miss=   50327 cache_miss=   14757 cache_ref=   6857911 items=       115 avg_time=   4146229 ns]
distinct_user_id<sajson>/manual_time                     7623962 ns      7759509 ns           92          87.518k           83.5224M         12.998k       11.7268M     24.167M              38.2683           132.257       3.19626G          26.0243M                    41.2093                     1.07685           15.2096k    87.8356k   631.515k       78.9956M/s   13.0067k   11.7284M   24.3722M         38.5932    131.165/s 3.19679G/s     26.0243M               41.2093                1.06779        115        15.084k/s [BEST: throughput=  0.08 GB/s doc_throughput=   132 docs/s instructions=    26024296 cycles=    24167017 branch_miss=   87518 cache_miss=   12998 cache_ref=  11726809 items=       115 avg_time=   7623961 ns]
distinct_user_id<rapidjson>/manual_time                 27521161 ns     27657471 ns           25         144.153k           23.0122M         14.298k       55.5974M    87.7497M              138.951           36.4396       3.19756G          103.463M                    163.832                     1.17907           4.19055k     144.57k   631.515k       21.8835M/s   14.5428k   55.5997M   87.8272M         139.074    36.3357/s 3.19126G/s     103.463M               163.833                1.17803        115        4.1786k/s [BEST: throughput=  0.02 GB/s doc_throughput=    36 docs/s instructions=   103462657 cycles=    87749714 branch_miss=  144153 cache_miss=   14298 cache_ref=  55597353 items=       115 avg_time=  27521161 ns]
distinct_user_id<rapidjson_insitu>/manual_time          20515441 ns     20653299 ns           34         124.193k           30.7975M         14.527k       37.7279M    65.5597M              103.813           48.7677        3.1972G          72.4392M                    114.707                     1.10494           5.60828k    124.582k   631.515k       29.3564M/s   14.6385k   37.7276M   65.5834M         103.851    48.7438/s 3.19678G/s     72.4393M               114.707                1.10454        115       5.60553k/s [BEST: throughput=  0.03 GB/s doc_throughput=    48 docs/s instructions=    72439239 cycles=    65559722 branch_miss=  124193 cache_miss=   14527 cache_ref=  37727935 items=       115 avg_time=  20515440 ns]
distinct_user_id<nlohmann_json>/manual_time            114047331 ns    114185967 ns            6         872.473k           5.56893M         196.58k       246.122M    362.421M              573.891           8.81837       3.19596G          412.245M                    652.787                     1.13748            1014.11    884.734k   631.515k       5.28079M/s   231.009k   245.692M   364.544M         577.253    8.76829/s 3.19642G/s     410.886M               650.636                1.12713        115        1008.35/s [BEST: throughput=  0.01 GB/s doc_throughput=     8 docs/s instructions=   412245030 cycles=   362420538 branch_miss=  872473 cache_miss=  196580 cache_ref= 246122493 items=       115 avg_time= 114047331 ns]
find_tweet<simdjson_dom>/manual_time                    56165563 ns     56254410 ns           12          34.301k           11.2498M        1.44715M       91.5021M     179.47M               284.19            17.814       3.19709G           76.532M                    121.188                    0.426433             17.814    34.0483k   631.515k       10.7229M/s   1.44754M   91.5029M   179.537M         284.296    17.8045/s 3.19657G/s      76.532M               121.188               0.426275          1        17.8045/s [BEST: throughput=  0.01 GB/s doc_throughput=    17 docs/s instructions=    76532034 cycles=   179470263 branch_miss=   34301 cache_miss= 1447150 cache_ref=  91502107 items=         1 avg_time=  56165562 ns]
find_tweet<simdjson_ondemand>/manual_time               42618183 ns     42706313 ns           16          17.427k           14.8241M        1.44115M       68.0647M    136.197M              215.668           23.4739       3.19709G          54.8334M                    86.8284                    0.402602            23.4739    17.4087k   631.515k       14.1315M/s   1.44117M   68.0702M   136.226M         215.713    23.4642/s 3.19643G/s     54.8334M               86.8284               0.402519          1        23.4642/s [BEST: throughput=  0.01 GB/s doc_throughput=    23 docs/s instructions=    54833425 cycles=   136197449 branch_miss=   17427 cache_miss= 1441150 cache_ref=  68064722 items=         1 avg_time=  42618182 ns]
find_tweet<yyjson>/manual_time                           4382387 ns      4199543 ns          170          49.325k           157.525M         22.044k       6.83883M    12.7981M              20.2657            249.44       3.19235G           10.777M                    17.0652                    0.842077             249.44    49.3588k   631.515k       137.427M/s   22.1311k   6.83762M   12.8995M         20.4263    228.186/s 2.94349G/s     10.7775M                17.066               0.835493          1        228.186/s [BEST: throughput=  0.16 GB/s doc_throughput=   249 docs/s instructions=    10776953 cycles=    12798064 branch_miss=   49325 cache_miss=   22044 cache_ref=   6838832 items=         1 avg_time=   4382386 ns]
find_tweet<yyjson_insitu>/manual_time                    4031518 ns      4121639 ns          174          49.256k           159.548M          12.11k       6.67779M    12.6686M              20.0606           252.643       3.20063G          10.6782M                    16.9089                    0.842892            252.643    49.3378k   631.515k       149.388M/s   12.1974k   6.67857M   12.7619M         20.2084    248.046/s 3.16554G/s     10.6784M               16.9091               0.836737          1        248.046/s [BEST: throughput=  0.16 GB/s doc_throughput=   252 docs/s instructions=    10678239 cycles=    12668573 branch_miss=   49256 cache_miss=   12110 cache_ref=   6677785 items=         1 avg_time=   4031518 ns]
find_tweet<sajson>/manual_time                           7456834 ns      7546683 ns           94          86.232k           84.8714M         10.404k       11.4822M    23.8134M              37.7084           134.393       3.20037G          25.5916M                    40.5241                     1.07467            134.393    86.8441k   631.515k       80.7661M/s   10.4008k   11.4854M   23.8383M         37.7479    134.105/s 3.19685G/s     25.5916M               40.5241                1.07355          1        134.105/s [BEST: throughput=  0.08 GB/s doc_throughput=   134 docs/s instructions=    25591580 cycles=    23813426 branch_miss=   86232 cache_miss=   10404 cache_ref=  11482173 items=         1 avg_time=   7456833 ns]
find_tweet<rapidjson>/manual_time                       27138564 ns     27229756 ns           26          140.95k           23.3303M         11.572k       54.9697M    86.5582M              137.064           36.9433       3.19775G          102.195M                    161.825                     1.18065            36.9433    141.175k   631.515k        22.192M/s   11.8042k   54.9715M   86.6029M         137.135    36.8479/s 3.19114G/s     102.195M               161.826                1.18005          1        36.8479/s [BEST: throughput=  0.02 GB/s doc_throughput=    36 docs/s instructions=   102195009 cycles=    86558191 branch_miss=  140950 cache_miss=   11572 cache_ref=  54969654 items=         1 avg_time=  27138564 ns]
find_tweet<rapidjson_insitu>/manual_time                20143790 ns     20236850 ns           35         123.219k           31.3644M         11.259k       37.1107M    64.3738M              101.935           49.6654       3.19715G          71.1995M                    112.744                     1.10603            49.6654    123.274k   631.515k        29.898M/s   11.2876k   37.1109M   64.3952M         101.969    49.6431/s 3.19678G/s     71.1995M               112.744                1.10566          1        49.6431/s [BEST: throughput=  0.03 GB/s doc_throughput=    49 docs/s instructions=    71199493 cycles=    64373775 branch_miss=  123219 cache_miss=   11259 cache_ref=  37110735 items=         1 avg_time=  20143790 ns]
find_tweet<nlohmann_json>/manual_time                   98574966 ns     98668578 ns            7          628.73k           6.43579M         98.492k        216.27M    313.581M              496.554            10.191       3.19572G          361.344M                    572.186                     1.15231             10.191    641.453k   631.515k       6.10966M/s   131.271k   215.779M   315.096M         498.952    10.1446/s 3.19651G/s     359.901M                 569.9                1.14219          1        10.1446/s [BEST: throughput=  0.01 GB/s doc_throughput=    10 docs/s instructions=   361343881 cycles=   313581248 branch_miss=  628730 cache_miss=   98492 cache_ref= 216269585 items=         1 avg_time=  98574966 ns]
top_tweet<simdjson_dom>/manual_time                     56135880 ns     56230111 ns           12          33.854k           11.2532M        1.46649M       91.9095M    179.412M              284.098           17.8194       3.19701G           77.329M                     122.45                    0.431013            17.8194    33.8779k   631.515k       10.7286M/s   1.46686M   91.9131M   179.451M          284.16    17.8139/s 3.19673G/s      77.329M                122.45               0.430919          1        17.8139/s [BEST: throughput=  0.01 GB/s doc_throughput=    17 docs/s instructions=    77329028 cycles=   179412198 branch_miss=   33854 cache_miss= 1466489 cache_ref=  91909492 items=         1 avg_time=  56135879 ns]
top_tweet<simdjson_ondemand>/manual_time                45635678 ns     45729492 ns           15          30.718k           13.8439M        1.46422M       73.3431M    145.847M              230.948           21.9218       3.19723G          63.0274M                    99.8035                    0.432147            21.9218    30.8595k   631.515k       13.1971M/s   1.46502M   73.3472M   145.886M          231.01    21.9127/s 3.19676G/s     63.0274M               99.8035               0.432031          1        21.9127/s [BEST: throughput=  0.01 GB/s doc_throughput=    21 docs/s instructions=    63027425 cycles=   145847350 branch_miss=   30718 cache_miss= 1464217 cache_ref=  73343050 items=         1 avg_time=  45635677 ns]
top_tweet<simdjson_ondemand_forward_only>/manual_time   46053443 ns     46147973 ns           15          29.632k           13.7214M        1.48069M       73.9586M    147.159M              233.026           21.7277       3.19744G          63.4713M                    100.506                     0.43131            21.7277      29.72k   631.515k       13.0774M/s   1.48203M    73.962M   147.213M         233.111    21.7139/s 3.19657G/s     63.4713M               100.506               0.431153          1        21.7139/s [BEST: throughput=  0.01 GB/s doc_throughput=    21 docs/s instructions=    63471256 cycles=   147159420 branch_miss=   29632 cache_miss= 1480692 cache_ref=  73958640 items=         1 avg_time=  46053442 ns]
top_tweet<yyjson>/manual_time                            4176494 ns      4272444 ns          168          49.712k           154.763M         23.543k       6.90161M    13.0266M              20.6276           245.066       3.19238G           10.885M                    17.2363                    0.835594            245.066    49.5991k   631.515k       144.202M/s   23.6612k   6.90388M   13.1107M         20.7607    239.435/s 3.13916G/s     10.8854M                17.237               0.830272          1        239.435/s [BEST: throughput=  0.15 GB/s doc_throughput=   245 docs/s instructions=    10884956 cycles=    13026612 branch_miss=   49712 cache_miss=   23543 cache_ref=   6901612 items=         1 avg_time=   4176494 ns]
top_tweet<yyjson_insitu>/manual_time                     4096472 ns      4193200 ns          171          49.506k           156.956M         13.603k       6.74415M    12.8777M              20.3918           248.539       3.20062G          10.7862M                    17.0799                    0.837589            248.539     49.505k   631.515k       147.019M/s   13.7318k   6.74475M   12.9683M         20.5352    244.112/s 3.16571G/s     10.7864M               17.0801               0.831751          1        244.112/s [BEST: throughput=  0.16 GB/s doc_throughput=   248 docs/s instructions=    10786224 cycles=    12877712 branch_miss=   49506 cache_miss=   13603 cache_ref=   6744148 items=         1 avg_time=   4096472 ns]
top_tweet<sajson>/manual_time                            7534179 ns      7631196 ns           93          86.474k           84.4894M         11.983k       11.6236M    23.9208M              37.8785           133.788       3.20033G          25.8223M                    40.8894                     1.07949            133.788    86.8817k   631.515k        79.937M/s   12.0127k    11.625M   24.0853M         38.1388    132.728/s  3.1968G/s     25.8223M               40.8894                1.07212          1        132.728/s [BEST: throughput=  0.08 GB/s doc_throughput=   133 docs/s instructions=    25822257 cycles=    23920843 branch_miss=   86474 cache_miss=   11983 cache_ref=  11623602 items=         1 avg_time=   7534179 ns]
top_tweet<rapidjson>/manual_time                        27399955 ns     27500434 ns           26         142.656k           23.1137M         13.433k       55.4135M    87.3733M              138.355           36.6004        3.1979G          103.088M                    163.239                     1.17985            36.6004    142.897k   631.515k       21.9803M/s   13.7087k   55.4155M   87.4364M         138.455    36.4964/s 3.19111G/s     103.088M                163.24                1.17901          1        36.4964/s [BEST: throughput=  0.02 GB/s doc_throughput=    36 docs/s instructions=   103087578 cycles=    87373254 branch_miss=  142656 cache_miss=   13433 cache_ref=  55413534 items=         1 avg_time=  27399955 ns]
top_tweet<rapidjson_insitu>/manual_time                 20390623 ns     20490196 ns           34         123.689k           30.9849M         13.418k       37.5447M    65.1579M              103.177           49.0643       3.19693G          72.0697M                    114.122                     1.10608            49.0643    124.016k   631.515k       29.5361M/s   13.4622k   37.5452M   65.1834M         103.217    49.0421/s 3.19673G/s     72.0697M               114.122                1.10565          1        49.0421/s [BEST: throughput=  0.03 GB/s doc_throughput=    49 docs/s instructions=    72069725 cycles=    65157922 branch_miss=  123689 cache_miss=   13418 cache_ref=  37544692 items=         1 avg_time=  20390623 ns]
top_tweet<nlohmann_json>/manual_time                   125971172 ns    126074315 ns            6         1068.24k           5.01687M        384.734k       270.071M    402.379M              637.164           7.94418       3.19657G          454.634M                     719.91                     1.12987            7.94418    1071.57k   631.515k       4.78093M/s   388.453k   270.031M   402.673M         637.629    7.93832/s 3.19654G/s     454.505M               719.705                1.12872          1        7.93832/s [BEST: throughput=  0.01 GB/s doc_throughput=     7 docs/s instructions=   454634192 cycles=   402378746 branch_miss= 1068237 cache_miss=  384734 cache_ref= 270071016 items=         1 avg_time= 125971172 ns]
