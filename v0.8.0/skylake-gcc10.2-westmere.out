run_benchmark: v0.8.0 /home/jkeiser/simdjson_benchmark_results/v0.8.0/skylake-gcc10.2-westmere.json -DCMAKE_BUILD_TYPE=Release -DSIMDJSON_EXCLUDE_IMPLEMENTATION=haswell
git reset --hard v0.8.0
HEAD is now at c96ff018 Version 0.8.
cmake -DCMAKE_BUILD_TYPE=Release -DSIMDJSON_EXCLUDE_IMPLEMENTATION=haswell -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The CXX compiler identification is GNU 10.2.0
-- The C compiler identification is GNU 10.2.0
-- Check for working CXX compiler: /usr/bin/g++-10
-- Check for working CXX compiler: /usr/bin/g++-10 -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Check for working C compiler: /usr/bin/gcc-10
-- Check for working C compiler: /usr/bin/gcc-10 -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Excluding implementation haswell due to SIMDJSON_EXCLUDE_IMPLEMENTATION=haswell
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed
-- Check if compiler accepts -pthread
-- Check if compiler accepts -pthread - yes
-- Found Threads: TRUE  
-- Looking for fork
-- Looking for fork - found
-- Looking for wait
-- Looking for wait - found
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- Found Git: /usr/bin/git (found version "2.27.0") 
-- git Version: v0.2.1-c96ff018
-- Version: 0.2.1
-- Performing Test HAVE_CXX_FLAG_STD_CXX11
-- Performing Test HAVE_CXX_FLAG_STD_CXX11 - Success
-- Performing Test HAVE_CXX_FLAG_WALL
-- Performing Test HAVE_CXX_FLAG_WALL - Success
-- Performing Test HAVE_CXX_FLAG_WEXTRA
-- Performing Test HAVE_CXX_FLAG_WEXTRA - Success
-- Performing Test HAVE_CXX_FLAG_WSHADOW
-- Performing Test HAVE_CXX_FLAG_WSHADOW - Success
-- Performing Test HAVE_CXX_FLAG_WERROR
-- Performing Test HAVE_CXX_FLAG_WERROR - Success
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32 - Failed
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED - Success
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WD654
-- Performing Test HAVE_CXX_FLAG_WD654 - Failed
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY - Failed
-- Performing Test HAVE_CXX_FLAG_COVERAGE
-- Performing Test HAVE_CXX_FLAG_COVERAGE - Success
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Performing Test USE_BOOST_JSON
-- Performing Test USE_BOOST_JSON - Failed
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Found Python3: /usr/bin/python3.8 (found version "3.8.6") found components: Interpreter 
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 10
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
Scanning dependencies of target benchmark
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_api_internal.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_name.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_name.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_register.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_register.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_runner.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_runner.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/colorprint.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/colorprint.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/commandlineflags.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/commandlineflags.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/complexity.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/complexity.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/console_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/console_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/counter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/counter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/csv_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/csv_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/json_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/json_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/sleep.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sleep.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/statistics.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/statistics.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/string_util.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/string_util.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/sysinfo.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sysinfo.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/timers.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/timers.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -P CMakeFiles/benchmark.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/benchmark.dir/link.txt --verbose=1
/usr/bin/ar qc libbenchmark.a  CMakeFiles/benchmark.dir/benchmark.cc.o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o CMakeFiles/benchmark.dir/benchmark_name.cc.o CMakeFiles/benchmark.dir/benchmark_register.cc.o CMakeFiles/benchmark.dir/benchmark_runner.cc.o CMakeFiles/benchmark.dir/colorprint.cc.o CMakeFiles/benchmark.dir/commandlineflags.cc.o CMakeFiles/benchmark.dir/complexity.cc.o CMakeFiles/benchmark.dir/console_reporter.cc.o CMakeFiles/benchmark.dir/counter.cc.o CMakeFiles/benchmark.dir/csv_reporter.cc.o CMakeFiles/benchmark.dir/json_reporter.cc.o CMakeFiles/benchmark.dir/reporter.cc.o CMakeFiles/benchmark.dir/sleep.cc.o CMakeFiles/benchmark.dir/statistics.cc.o CMakeFiles/benchmark.dir/string_util.cc.o CMakeFiles/benchmark.dir/sysinfo.cc.o CMakeFiles/benchmark.dir/timers.cc.o
/usr/bin/ranlib libbenchmark.a
[ 80%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
Scanning dependencies of target generated-data
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated && /usr/bin/ruby genfeaturejson.rb /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-miss.json ...
[ 80%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/g++-10  -DSIMDJSON_IMPLEMENTATION_HASWELL=0 -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/include  -O3 -DNDEBUG -fPIC   -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -pthread -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/g++-10 -fPIC -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.7 -o ../libsimdjson.so.7.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.7.0.0 ../libsimdjson.so.7 ../libsimdjson.so
[ 80%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
Scanning dependencies of target yyjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/gcc-10  -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src  -O3 -DNDEBUG   -o CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o   -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src/yyjson.c
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -P CMakeFiles/yyjson.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -E cmake_link_script CMakeFiles/yyjson.dir/link.txt --verbose=1
/usr/bin/ar qc libyyjson.a  CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o
/usr/bin/ranlib libyyjson.a
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/g++-10  -DRAPIDJSON_HAS_STDSTRING -DSAJSON_UNSORTED_OBJECT_KEYS -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_COMPETITION_NLOHMANN_JSON -DSIMDJSON_COMPETITION_RAPIDJSON -DSIMDJSON_COMPETITION_SAJSON -DSIMDJSON_COMPETITION_YYJSON -DSIMDJSON_IMPLEMENTATION_HASWELL=0 -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/rapidjson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/sajson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/json  -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/g++-10  -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.7.0.0 ../_deps/google_benchmarks/src/libbenchmark.a ../dependencies/libyyjson.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.8.0/skylake-gcc10.2-westmere.json --benchmark_out_format=json
2021-01-25 03:02:45
Running benchmark/bench_ondemand
Run on (4 X 4000 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 256 KiB (x4)
  L3 Unified 8192 KiB (x1)
Load Average: 1.00, 1.00, 0.92
simdjson::dom implementation:      westmere
simdjson::ondemand implementation: fallback

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                  357075 ns       385804 ns         1963           3.377k           1.77633G               0        94.842k    1.31264M              2.07856          2.81281k       3.69222G          4.41982M                    6.99876                     3.36712           281.281k    3.51823k   631.515k       1.64711G/s    4.93836   94.6526k   1.31755M         2.08633   2.80053k/s 3.68983G/s     4.41982M               6.99876                3.35458        100       280.053k/s [BEST: throughput=  1.78 GB/s doc_throughput=  2812 docs/s instructions=     4419821 cycles=     1312642 branch_miss=    3377 cache_miss=       0 cache_ref=     94842 items=       100 avg_time=    357075 ns]
partial_tweets<simdjson_ondemand>/manual_time             256259 ns       284716 ns         2732           1.934k           2.47494G               0        59.895k    942.213k              1.49199          3.91905k       3.69258G          3.51375M                    5.56401                     3.72926           391.905k    2.00397k   631.515k       2.29511G/s   0.237189   60.0616k   945.489k         1.49718    3.9023k/s 3.68958G/s     3.51375M               5.56401                3.71633        100        390.23k/s [BEST: throughput=  2.47 GB/s doc_throughput=  3919 docs/s instructions=     3513754 cycles=      942213 branch_miss=    1934 cache_miss=       0 cache_ref=     59895 items=       100 avg_time=    256259 ns]
partial_tweets<yyjson>/manual_time                        668582 ns       699072 ns         1044           9.513k           1.68365G             442        78.898k    1.38512M              2.19332          2.66605k       3.69279G          2.90845M                    4.60552                     2.09979           266.605k    7.49218k   631.515k       900.801M/s    933.662    51.711k    1.6157M         2.55845    1.4957k/s 2.41661G/s     2.90894M               4.60629                1.80042        100        149.57k/s [BEST: throughput=  1.68 GB/s doc_throughput=  2666 docs/s instructions=     2908453 cycles=     1385117 branch_miss=    9513 cache_miss=     442 cache_ref=     78898 items=       100 avg_time=    668582 ns]
partial_tweets<yyjson_insitu>/manual_time                 458274 ns       487566 ns         1527           7.267k             1.887G              14        48.566k    1.23569M              1.95671          2.98804k        3.6923G          2.90814M                    4.60501                     2.35345           298.804k    7.32284k   631.515k       1.28339G/s    131.254   33.9865k    1.3441M         2.12837    2.1821k/s 2.93296G/s      2.9084M               4.60543                2.16383        100        218.21k/s [BEST: throughput=  1.89 GB/s doc_throughput=  2988 docs/s instructions=     2908136 cycles=     1235690 branch_miss=    7267 cache_miss=      14 cache_ref=     48566 items=       100 avg_time=    458273 ns]
partial_tweets<sajson>/manual_time                        592012 ns       620812 ns         1180          10.293k              1078M               0         48.46k    2.16277M              3.42474          1.70701k       3.69188G          6.05184M                    9.58305                     2.79818           170.701k    10.9264k   631.515k       1017.31M/s       1.45   48.3944k   2.18444M         3.45905   1.68915k/s 3.68986G/s     6.05184M               9.58305                2.77043        100       168.915k/s [BEST: throughput=  1.08 GB/s doc_throughput=  1707 docs/s instructions=     6051839 cycles=     2162775 branch_miss=   10293 cache_miss=       0 cache_ref=     48460 items=       100 avg_time=    592012 ns]
partial_tweets<rapidjson>/manual_time                    1618795 ns      1647880 ns          433          26.307k           446.323M          1.371k        54.335k    5.22337M              8.27117           706.749       3.69161G          13.4093M                    21.2336                     2.56718           70.6749k    26.5301k   631.515k       372.042M/s     507.18   34.3501k   5.38241M         8.52301    617.743/s 3.32495G/s     13.4103M               21.2351                 2.4915        100       61.7743k/s [BEST: throughput=  0.45 GB/s doc_throughput=   706 docs/s instructions=    13409324 cycles=     5223368 branch_miss=   26307 cache_miss=    1371 cache_ref=     54335 items=       100 avg_time=   1618795 ns]
partial_tweets<rapidjson_insitu>/manual_time             1129760 ns      1158870 ns          623          23.444k           623.195M             464        45.718k    3.74095M              5.92377           986.826       3.69166G          9.75494M                    15.4469                     2.60761           98.6826k    23.5051k   631.515k       533.086M/s    218.167   35.3701k   3.82032M         6.04945    885.144/s 3.38153G/s     9.75554M               15.4478                 2.5536        100       88.5144k/s [BEST: throughput=  0.62 GB/s doc_throughput=   986 docs/s instructions=     9754938 cycles=     3740947 branch_miss=   23444 cache_miss=     464 cache_ref=     45718 items=       100 avg_time=   1129759 ns]
partial_tweets<nlohmann_json>/manual_time                7495127 ns      7531713 ns           94         137.234k           87.5843M              14       234.752k    26.6089M               42.135           138.689       3.69036G          71.2265M                    112.787                      2.6768           13.8689k    147.575k   631.515k       80.3535M/s    1.3383k   377.029k   27.6487M         43.7816     133.42/s  3.6889G/s     72.2579M                114.42                2.61343        100        13.342k/s [BEST: throughput=  0.09 GB/s doc_throughput=   138 docs/s instructions=    71226501 cycles=    26608874 branch_miss=  137234 cache_miss=      14 cache_ref=    234752 items=       100 avg_time=   7495127 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                 100039794 ns    103419593 ns            7         983.971k           461.768M        10.9087M       15.4459M    367.485M              7.98901           10.0387       3.68907G          1.11536G                    24.2476                     3.03512           10.0387M    986.507k   45.9988M       438.504M/s   10.9502M   15.4512M    368.91M         8.01999    9.99602/s 3.68763G/s     1.11536G               24.2476                 3.0234      1000k       9.99602M/s [BEST: throughput=  0.46 GB/s doc_throughput=    10 docs/s instructions=  1115360606 cycles=   367484886 branch_miss=  983971 cache_miss=10908659 cache_ref=  15445857 items=   1000000 avg_time= 100039793 ns]
large_random<simdjson_ondemand>/manual_time             65001451 ns     68388108 ns           11         873.708k           708.936M        5.73375M       8.05228M    239.323M               5.2028           15.4121       3.68845G          719.738M                    15.6469                      3.0074           15.4121M    874.418k   45.9988M       674.875M/s   5.73774M   8.05231M   239.746M         5.21201    15.3843/s 3.68832G/s     719.738M               15.6469                3.00208      1000k       15.3843M/s [BEST: throughput=  0.71 GB/s doc_throughput=    15 docs/s instructions=   719737981 cycles=   239322583 branch_miss=  873708 cache_miss= 5733749 cache_ref=   8052284 items=   1000000 avg_time=  65001450 ns]
large_random<simdjson_ondemand_unordered>/manual_time   68703568 ns     72078565 ns           10         863.465k           670.001M        5.67757M       8.05223M    253.269M                5.506           14.5656       3.68902G          723.738M                    15.7339                     2.85758           14.5656M    864.894k   45.9988M       638.509M/s   5.71509M   8.05301M   253.423M         5.50934    14.5553/s 3.68864G/s     723.738M               15.7339                2.85585      1000k       14.5553M/s [BEST: throughput=  0.67 GB/s doc_throughput=    14 docs/s instructions=   723737986 cycles=   253269149 branch_miss=  863465 cache_miss= 5677568 cache_ref=   8052228 items=   1000000 avg_time=  68703567 ns]
large_random<yyjson>/manual_time                       127357675 ns    130782324 ns            5         661.634k            361.43M        5.80902M        9.0186M    349.641M               7.6011           7.85739       2.74727G           944.15M                    20.5255                     2.70034           7.85739M    661.455k   45.9988M       344.446M/s   5.81278M   9.02618M   349.656M         7.60142     7.8519/s 2.74546G/s      944.15M               20.5255                2.70022      1000k        7.8519M/s [BEST: throughput=  0.36 GB/s doc_throughput=     7 docs/s instructions=   944149620 cycles=   349641149 branch_miss=  661634 cache_miss= 5809020 cache_ref=   9018602 items=   1000000 avg_time= 127357675 ns]
large_random<yyjson_insitu>/manual_time                109503608 ns    112928462 ns            6         661.581k           420.338M        4.97927M       7.65611M    318.107M              6.91556           9.13803       2.90687G          938.029M                    20.3925                     2.94878           9.13803M    661.637k   45.9988M       400.606M/s   4.95824M   7.65911M   318.216M         6.91793    9.13212/s 2.90599G/s     938.029M               20.3925                2.94777      1000k       9.13212M/s [BEST: throughput=  0.42 GB/s doc_throughput=     9 docs/s instructions=   938028646 cycles=   318107174 branch_miss=  661581 cache_miss= 4979271 cache_ref=   7656110 items=   1000000 avg_time= 109503607 ns]
large_random<sajson>/manual_time                        95661655 ns     99055827 ns            7         602.276k           482.043M        8.43111M       12.1316M    352.031M              7.65306           10.4795        3.6891G          1099.99M                    23.9134                     3.12469           10.4795M     602.08k   45.9988M       458.573M/s   8.42524M   12.0655M    352.89M         7.67173    10.4535/s 3.68894G/s     1099.99M               23.9134                3.11708      1000k       10.4535M/s [BEST: throughput=  0.48 GB/s doc_throughput=    10 docs/s instructions=  1099987388 cycles=   352031163 branch_miss=  602276 cache_miss= 8431112 cache_ref=  12131615 items=   1000000 avg_time=  95661654 ns]
large_random<rapidjson>/manual_time                    175882033 ns    179309196 ns            4         597.044k           272.715M        6.99254M       10.6703M    564.243M              12.2665           5.92875       3.34526G          1.66014G                     36.091                     2.94225           5.92875M    597.674k   45.9988M       249.416M/s   6.42452M   9.94822M   569.772M         12.3867    5.68563/s 3.23951G/s     1.66015G               36.0912                2.91371      1000k       5.68563M/s [BEST: throughput=  0.27 GB/s doc_throughput=     5 docs/s instructions=  1660142804 cycles=   564242723 branch_miss=  597044 cache_miss= 6992537 cache_ref=  10670289 items=   1000000 avg_time= 175882033 ns]
large_random<rapidjson_lossless>/manual_time           211752599 ns    215175963 ns            3         680.059k           224.259M        6.99191M       10.6369M    698.747M              15.1905           4.87532       3.40661G          2.02311G                    43.9818                     2.89534           4.87532M    675.118k   45.9988M       207.166M/s   6.48253M   9.99586M   704.611M          15.318    4.72249/s 3.32752G/s     2.02312G                43.982                2.87126      1000k       4.72249M/s [BEST: throughput=  0.22 GB/s doc_throughput=     4 docs/s instructions=  2023109868 cycles=   698746657 branch_miss=  680059 cache_miss= 6991910 cache_ref=  10636898 items=   1000000 avg_time= 211752599 ns]
large_random<rapidjson_insitu>/manual_time             157634668 ns    161052478 ns            5         586.705k           306.682M        8.06728M       12.2007M    495.485M              10.7717           6.66718       3.30349G          1.49214G                    32.4387                     3.01147           6.66718M    587.119k   45.9988M       278.288M/s   7.48756M   11.4319M   501.311M         10.8983    6.34378/s  3.1802G/s     1.49215G               32.4389                 2.9765      1000k       6.34378M/s [BEST: throughput=  0.31 GB/s doc_throughput=     6 docs/s instructions=  1492140425 cycles=   495485060 branch_miss=  586705 cache_miss= 8067281 cache_ref=  12200674 items=   1000000 avg_time= 157634668 ns]
large_random<nlohmann_json>/manual_time               1233154990 ns   1236597458 ns            1         4.50984M           37.3017M        46.9597M       60.2665M    4.53681G               98.629          0.810928       3.67903G          11.9494G                    259.776                     2.63387           810.928k    4.50984M   45.9988M       35.5737M/s   46.9597M   60.2665M   4.53681G          98.629   0.810928/s 3.67903G/s     11.9494G               259.776                2.63387      1000k       810.928k/s [BEST: throughput=  0.04 GB/s doc_throughput=     0 docs/s instructions= 11949358099 cycles=  4536814358 branch_miss= 4509844 cache_miss=46959687 cache_ref=  60266503 items=   1000000 avg_time=1233154990 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                       101618044 ns    111983388 ns            7         443.871k           1.35334G        15.8217M       22.2519M    374.283M              2.72593           9.85644        3.6891G          1.20656G                    8.78745                     3.22365           5.16761M    444.717k   137.305M       1.25839G/s   15.8755M   22.1933M   374.828M         2.72989    9.84077/s 3.68859G/s     1.20656G               8.78745                3.21897   524.288k        5.1594M/s [BEST: throughput=  1.35 GB/s doc_throughput=     9 docs/s instructions=  1206560117 cycles=   374283310 branch_miss=  443871 cache_miss=15821728 cache_ref=  22251934 items=    524288 avg_time= 101618044 ns]
kostya<simdjson_ondemand>/manual_time                   71213018 ns     81614687 ns           10         452.217k           1.92993G        10.2359M         14.05M    262.451M              1.91145           14.0558       3.68896G          870.688M                    6.34127                     3.31752           7.36928M    452.486k   137.305M       1.79567G/s   10.2543M   13.9541M   262.688M         1.91317    14.0424/s 3.68876G/s     870.688M               6.34127                3.31453   524.288k       7.36225M/s [BEST: throughput=  1.93 GB/s doc_throughput=    14 docs/s instructions=   870687546 cycles=   262451034 branch_miss=  452217 cache_miss=10235856 cache_ref=  14049997 items=    524288 avg_time=  71213017 ns]
kostya<yyjson>/manual_time                             200018263 ns    210407136 ns            4         415.032k            687.51M        11.4275M       16.1761M    540.579M              3.93707           5.00717       2.70677G          984.045M                    7.16686                     1.82035            2.6252M    415.243k   137.305M       654.661M/s   11.4295M   16.1806M    540.61M          3.9373    4.99954/s 2.70281G/s     984.045M               7.16686                1.82025   524.288k        2.6212M/s [BEST: throughput=  0.69 GB/s doc_throughput=     5 docs/s instructions=   984045144 cycles=   540579261 branch_miss=  415032 cache_miss=11427479 cache_ref=  16176095 items=    524288 avg_time= 200018262 ns]
kostya<yyjson_insitu>/manual_time                      147182777 ns    157636736 ns            5         417.149k            933.92M        8.80848M       12.1437M    447.946M              3.26242           6.80179       3.04684G          965.775M                     7.0338                     2.15601            3.5661M     416.91k   137.305M       889.671M/s   8.81677M   12.1841M   448.392M         3.26567    6.79427/s  3.0465G/s     965.776M                7.0338                2.15386   524.288k       3.56216M/s [BEST: throughput=  0.93 GB/s doc_throughput=     6 docs/s instructions=   965775476 cycles=   447946104 branch_miss=  417149 cache_miss= 8808481 cache_ref=  12143658 items=    524288 avg_time= 147182777 ns]
kostya<sajson>/manual_time                             148406647 ns    158792804 ns            5         377.649k           926.429M        12.4036M        17.264M    546.758M              3.98207           6.74723       3.68911G          1.62034G                     11.801                     2.96355           3.53749M    377.708k   137.305M       882.334M/s   12.4439M   17.2648M    547.43M         3.98696    6.73824/s 3.68871G/s     1.62034G                11.801                2.95991   524.288k       3.53278M/s [BEST: throughput=  0.93 GB/s doc_throughput=     6 docs/s instructions=  1620343049 cycles=   546758161 branch_miss=  377649 cache_miss=12403648 cache_ref=  17263974 items=    524288 avg_time= 148406647 ns]
kostya<rapidjson>/manual_time                          243694363 ns    254120832 ns            3         956.186k           571.578M        8.10821M       11.8933M    804.704M               5.8607           4.16284       3.34985G          2.29873G                    16.7418                     2.85662           2.18253M    954.991k   137.305M        537.33M/s   7.80876M   11.5054M   808.047M         5.88505     4.1035/s 3.31582G/s     2.29873G               16.7418                 2.8448   524.288k       2.15142M/s [BEST: throughput=  0.57 GB/s doc_throughput=     4 docs/s instructions=  2298729673 cycles=   804703834 branch_miss=  956186 cache_miss= 8108214 cache_ref=  11893265 items=    524288 avg_time= 243694363 ns]
kostya<rapidjson_lossless>/manual_time                 263452534 ns    273862404 ns            3         967.457k           528.397M        8.10976M       11.9009M     877.04M              6.38753           3.84834       3.37515G          2.50529G                    18.2462                     2.85653           2.01764M      966.2k   137.305M       497.032M/s   7.80847M   11.5272M   880.831M         6.41514    3.79575/s 3.34341G/s     2.50529G               18.2462                2.84424   524.288k       1.99007M/s [BEST: throughput=  0.53 GB/s doc_throughput=     3 docs/s instructions=  2505290612 cycles=   877039554 branch_miss=  967457 cache_miss= 8109757 cache_ref=  11900871 items=    524288 avg_time= 263452534 ns]
kostya<rapidjson_insitu>/manual_time                   219583206 ns    229986536 ns            3         1006.59k           634.603M        11.2071M       15.6395M    717.173M              5.22321           4.62185       3.31466G          2.03228G                    14.8012                     2.83373           2.42318M    1005.98k   137.305M       596.331M/s   10.9015M   15.2562M   719.641M         5.24119    4.55408/s 3.27731G/s     2.03228G               14.8012                2.82401   524.288k       2.38765M/s [BEST: throughput=  0.63 GB/s doc_throughput=     4 docs/s instructions=  2032275218 cycles=   717172827 branch_miss= 1006589 cache_miss=11207093 cache_ref=  15639517 items=    524288 avg_time= 219583206 ns]
kostya<nlohmann_json>/manual_time                     1540069713 ns   1550490447 ns            1         3.77538M           89.1551M        70.0854M       87.3587M    5.68188G              41.3815          0.649321       3.68937G           15.147G                    110.317                     2.66585           340.431k    3.77538M   137.305M       85.0249M/s   70.0854M   87.3587M   5.68188G         41.3815   0.649321/s 3.68937G/s      15.147G               110.317                2.66585   524.288k       340.431k/s [BEST: throughput=  0.09 GB/s doc_throughput=     0 docs/s instructions= 15147049809 cycles=  5681883186 branch_miss= 3775383 cache_miss=70085374 cache_ref=  87358666 items=    524288 avg_time=1540069713 ns]
distinct_user_id<simdjson_dom>/manual_time                350875 ns       380819 ns         1995           3.454k           1.80709G               0        89.468k    1.29032M              2.04321          2.86151k       3.69226G          4.36075M                    6.90521                     3.37959           329.074k     3.5678k   631.515k       1.67622G/s     3.8005    89.509k   1.29488M         2.05043   2.85002k/s 3.69044G/s     4.36075M               6.90521                3.36768        115       327.752k/s [BEST: throughput=  1.81 GB/s doc_throughput=  2861 docs/s instructions=     4360746 cycles=     1290318 branch_miss=    3454 cache_miss=       0 cache_ref=     89468 items=       115 avg_time=    350874 ns]
distinct_user_id<simdjson_ondemand>/manual_time           248366 ns       277960 ns         2819           1.591k           2.55442G               0        54.306k    912.901k              1.44557          4.04491k       3.69261G           3.2075M                    5.07906                     3.51352           465.165k    1.71536k   631.515k       2.36805G/s    1.33061   54.3461k    916.66k         1.45152   4.02631k/s 3.69076G/s      3.2075M               5.07906                3.49912        115       463.026k/s [BEST: throughput=  2.55 GB/s doc_throughput=  4044 docs/s instructions=     3207500 cycles=      912901 branch_miss=    1591 cache_miss=       0 cache_ref=     54306 items=       115 avg_time=    248366 ns]
distinct_user_id<yyjson>/manual_time                      578102 ns       611288 ns         1000           7.058k           1.77076G         15.927k        73.531k    1.31678M              2.08511          2.80399k       3.69223G          2.87509M                    4.55268                     2.18342           322.459k    7.43875k   631.515k       1041.79M/s   7.44165k   55.4074k   1.54066M         2.43963    1.7298k/s 2.66504G/s     2.87528M                 4.553                1.86626        115       198.927k/s [BEST: throughput=  1.77 GB/s doc_throughput=  2803 docs/s instructions=     2875088 cycles=     1316780 branch_miss=    7058 cache_miss=   15927 cache_ref=     73531 items=       115 avg_time=    578102 ns]
distinct_user_id<yyjson_insitu>/manual_time               452219 ns       484862 ns         1548           7.061k           1.90873G             413        44.084k    1.21819M                1.929          3.02246k       3.68194G          2.87478M                    4.55219                     2.35987           347.583k    7.51497k   631.515k       1.30057G/s    72.9483   30.6883k   1.33619M         2.11585   2.21132k/s 2.95475G/s     2.87504M               4.55261                2.15167        115       254.302k/s [BEST: throughput=  1.91 GB/s doc_throughput=  3022 docs/s instructions=     2874778 cycles=     1218191 branch_miss=    7061 cache_miss=     413 cache_ref=     44084 items=       115 avg_time=    452218 ns]
distinct_user_id<sajson>/manual_time                      587687 ns       618257 ns         1190          10.341k           1085.63M               0          45.4k    2.14763M              3.40076          1.71909k       3.69196G           5.9843M                    9.47611                     2.78647           197.695k    10.8864k   631.515k        1024.8M/s     2.3084   45.4578k   2.16847M         3.43376   1.70159k/s 3.68984G/s     5.98431M               9.47611                2.75969        115       195.682k/s [BEST: throughput=  1.09 GB/s doc_throughput=  1719 docs/s instructions=     5984305 cycles=     2147629 branch_miss=   10341 cache_miss=       0 cache_ref=     45400 items=       115 avg_time=    587687 ns]
distinct_user_id<rapidjson>/manual_time                  1603869 ns      1634150 ns          440          26.777k           447.381M              88        51.605k    5.21092M              8.25146           708.425       3.69155G            13.35M                    21.1396                     2.56192           81.4688k    26.5709k   631.515k       375.504M/s    931.002   34.0021k   5.36219M           8.491    623.492/s 3.34329G/s     13.3509M               21.1411                2.48982        115       71.7016k/s [BEST: throughput=  0.45 GB/s doc_throughput=   708 docs/s instructions=    13349968 cycles=     5210923 branch_miss=   26777 cache_miss=      88 cache_ref=     51605 items=       115 avg_time=   1603868 ns]
distinct_user_id<rapidjson_insitu>/manual_time           1108635 ns      1138822 ns          642          23.574k           625.257M             138        42.977k    3.72864M              5.90428            990.09       3.69169G          9.70587M                    15.3692                     2.60306            113.86k    23.5878k   631.515k       543.244M/s   2.06031k   35.6365k   3.80499M         6.02518     902.01/s 3.43214G/s     9.70641M                 15.37                2.55097        115       103.731k/s [BEST: throughput=  0.63 GB/s doc_throughput=   990 docs/s instructions=     9705873 cycles=     3728642 branch_miss=   23574 cache_miss=     138 cache_ref=     42977 items=       115 avg_time=   1108634 ns]
distinct_user_id<nlohmann_json>/manual_time              7700651 ns      7734598 ns          104         113.317k           95.6509M            1.5k        216.19k    24.3498M              38.5577           151.463       3.68808G            66.63M                    105.508                     2.73637           17.4182k    227.373k   631.515k       78.2089M/s    28.0096   387.832k   28.4096M         44.9864    129.859/s 3.68924G/s     65.2985M                 103.4                2.29847        115       14.9338k/s [BEST: throughput=  0.10 GB/s doc_throughput=   151 docs/s instructions=    66629962 cycles=    24349756 branch_miss=  113317 cache_miss=    1500 cache_ref=    216190 items=       115 avg_time=   7700651 ns]
find_tweet<simdjson_dom>/manual_time                      339460 ns       368151 ns         2061           3.193k           1.87011G               0        79.414k    1.24686M               1.9744          2.96131k       3.69235G          4.27971M                    6.77689                     3.43238           2.96131k    3.35884k   631.515k       1.73259G/s    21.9054   79.4215k   1.25266M         1.98358   2.94586k/s 3.69015G/s     4.27971M               6.77689                 3.4165          1       2.94586k/s [BEST: throughput=  1.87 GB/s doc_throughput=  2961 docs/s instructions=     4279706 cycles=     1246862 branch_miss=    3193 cache_miss=       0 cache_ref=     79414 items=         1 avg_time=    339459 ns]
find_tweet<simdjson_ondemand>/manual_time                 178922 ns       206927 ns         3909              667           3.53826G               0        31.456k    659.064k              1.04362          5.60281k       3.69261G          2.56045M                    4.05445                     3.88497           5.60281k     693.846   631.515k       3.28715G/s  0.0908161   31.5566k   660.401k         1.04574   5.58902k/s   3.691G/s     2.56045M               4.05445                3.87711          1       5.58902k/s [BEST: throughput=  3.54 GB/s doc_throughput=  5602 docs/s instructions=     2560446 cycles=      659064 branch_miss=     667 cache_miss=       0 cache_ref=     31456 items=         1 avg_time=    178922 ns]
find_tweet<yyjson>/manual_time                            642339 ns       672666 ns         1121           9.439k           1.70733G             383        64.777k    1.34349M               2.1274          2.70354k       3.63217G          2.82414M                      4.472                     2.10209           2.70354k    7.36536k   631.515k       937.604M/s    1010.52   39.4843k   1.57013M         2.48629   1.55681k/s  2.4444G/s     2.82461M               4.47276                1.79897          1       1.55681k/s [BEST: throughput=  1.71 GB/s doc_throughput=  2703 docs/s instructions=     2824137 cycles=     1343487 branch_miss=    9439 cache_miss=     383 cache_ref=     64777 items=         1 avg_time=    642339 ns]
find_tweet<yyjson_insitu>/manual_time                     441829 ns       471649 ns         1584           6.809k            1.9619G             576        35.841k    1.18334M              1.87381          3.10665k       3.67622G          2.82381M                    4.47149                     2.38631           3.10665k     7.2376k   631.515k       1.33116G/s    16.6136   22.2191k   1.29873M         2.05653   2.26332k/s 2.93945G/s     2.82407M                4.4719                2.17449          1       2.26332k/s [BEST: throughput=  1.96 GB/s doc_throughput=  3106 docs/s instructions=     2823811 cycles=     1183337 branch_miss=    6809 cache_miss=     576 cache_ref=     35841 items=         1 avg_time=    441828 ns]
find_tweet<sajson>/manual_time                            575989 ns       605468 ns         1216          10.077k           1.10933G               0        36.061k    2.10171M              3.32804          1.75662k        3.6919G          5.89219M                    9.33024                     2.80352           1.75662k    10.7614k   631.515k       1045.61M/s    13.5107     36.04k   2.12531M         3.36541   1.73615k/s 3.68984G/s     5.89219M               9.33024                2.77239          1       1.73615k/s [BEST: throughput=  1.11 GB/s doc_throughput=  1756 docs/s instructions=     5892186 cycles=     2101709 branch_miss=   10077 cache_miss=       0 cache_ref=     36061 items=         1 avg_time=    575988 ns]
find_tweet<rapidjson>/manual_time                        1590152 ns      1618885 ns          443           25.91k           451.863M         10.129k        46.022k    5.15928M              8.16969           715.522       3.69158G          13.2818M                    21.0316                     2.57435            715.522    26.3154k   631.515k       378.743M/s    690.219   26.5961k   5.31271M         8.41264    628.871/s 3.34101G/s     13.2824M               21.0326                2.50012          1        628.871/s [BEST: throughput=  0.45 GB/s doc_throughput=   715 docs/s instructions=    13281783 cycles=     5159284 branch_miss=   25910 cache_miss=   10129 cache_ref=     46022 items=         1 avg_time=   1590152 ns]
find_tweet<rapidjson_insitu>/manual_time                 1099115 ns      1128660 ns          652          23.327k           630.981M             930        34.297k    3.69477M              5.85065           999.154       3.69165G           9.6478M                    15.2772                      2.6112            999.154     23.452k   631.515k        547.95M/s   1.83335k   26.6103k   3.77017M         5.97004    909.823/s 3.43019G/s     9.64813M               15.2778                2.55907          1        909.823/s [BEST: throughput=  0.63 GB/s doc_throughput=   999 docs/s instructions=     9647801 cycles=     3694772 branch_miss=   23327 cache_miss=     930 cache_ref=     34297 items=         1 avg_time=   1099115 ns]
find_tweet<nlohmann_json>/manual_time                    6393380 ns      6423532 ns          124          92.165k           113.061M          1.293k       161.813k    20.6073M              32.6315           179.032       3.68936G           57.048M                    90.3352                     2.76834            179.032     177.33k   631.515k       94.2005M/s    91.5484   317.707k   23.5875M         37.3507    156.412/s 3.68937G/s     55.7006M               88.2016                2.36144          1        156.412/s [BEST: throughput=  0.11 GB/s doc_throughput=   179 docs/s instructions=    57048026 cycles=    20607282 branch_miss=   92165 cache_miss=    1293 cache_ref=    161813 items=         1 avg_time=   6393380 ns]
top_tweet<simdjson_dom>/manual_time                       345620 ns       373733 ns         2025           3.325k           1.83482G               0        87.067k    1.27074M              2.01222          2.90542k       3.69205G          4.31377M                    6.83083                     3.39468           2.90542k    3.46594k   631.515k       1.70171G/s    13.4025   87.0652k   1.27537M         2.01954   2.89335k/s  3.6901G/s     4.31377M               6.83083                3.38236          1       2.89335k/s [BEST: throughput=  1.83 GB/s doc_throughput=  2905 docs/s instructions=     4313774 cycles=     1270745 branch_miss=    3325 cache_miss=       0 cache_ref=     87067 items=         1 avg_time=    345620 ns]
top_tweet<simdjson_ondemand>/manual_time                  232241 ns       260162 ns         3013           1.561k           2.73259G               0        54.026k    853.368k               1.3513          4.32704k       3.69256G          3.18192M                    5.03855                     3.72866           4.32704k    1.68495k   631.515k       2.53247G/s   0.536011   54.0641k   857.067k         1.35716   4.30587k/s 3.69042G/s     3.18192M               5.03855                3.71257          1       4.30587k/s [BEST: throughput=  2.73 GB/s doc_throughput=  4327 docs/s instructions=     3181920 cycles=      853368 branch_miss=    1561 cache_miss=       0 cache_ref=     54026 items=         1 avg_time=    232241 ns]
top_tweet<simdjson_ondemand_forward_only>/manual_time     253729 ns       281682 ns         2759           1.549k           2.49854G               0        54.821k    933.282k              1.47785          3.95642k       3.69245G          3.40282M                    5.38834                     3.64608           3.95642k    1.65847k   631.515k         2.318G/s    1.53135   54.9847k   936.391k         1.48277   3.94121k/s 3.69052G/s     3.40282M               5.38834                3.63397          1       3.94121k/s [BEST: throughput=  2.50 GB/s doc_throughput=  3956 docs/s instructions=     3402819 cycles=      933282 branch_miss=    1549 cache_miss=       0 cache_ref=     54821 items=         1 avg_time=    253728 ns]
top_tweet<yyjson>/manual_time                             646287 ns       675823 ns         1129           9.699k           1.71417G             193        69.014k    1.36037M              2.15414          2.71437k       3.69255G          2.84502M                    4.50507                     2.09136           2.71437k    7.45155k   631.515k       931.877M/s     896.46   44.4345k   1.58547M         2.51058    1.5473k/s  2.4532G/s      2.8455M               4.50583                1.79473          1        1.5473k/s [BEST: throughput=  1.71 GB/s doc_throughput=  2714 docs/s instructions=     2845019 cycles=     1360369 branch_miss=    9699 cache_miss=     193 cache_ref=     69014 items=         1 avg_time=    646286 ns]
top_tweet<yyjson_insitu>/manual_time                      446695 ns       475769 ns         1567           6.872k           1.93356G             250        40.424k    1.20261M              1.90433          3.06177k       3.68213G           2.8449M                    4.50488                      2.3656           3.06177k    7.32894k   631.515k       1.31666G/s    42.8864   27.1734k   1.31703M         2.08551   2.23866k/s 2.94839G/s     2.84516M                4.5053                2.16028          1       2.23866k/s [BEST: throughput=  1.93 GB/s doc_throughput=  3061 docs/s instructions=     2844901 cycles=     1202612 branch_miss=    6872 cache_miss=     250 cache_ref=     40424 items=         1 avg_time=    446695 ns]
top_tweet<sajson>/manual_time                             579700 ns       608178 ns         1205           10.19k            1099.8M               0        41.326k    2.11991M              3.35686          1.74153k       3.69188G          5.91933M                    9.37322                     2.79226           1.74153k    10.7644k   631.515k       1038.92M/s    1.89046   41.3579k   2.13894M         3.38699   1.72503k/s 3.68973G/s     5.91933M               9.37322                2.76742          1       1.72503k/s [BEST: throughput=  1.10 GB/s doc_throughput=  1741 docs/s instructions=     5919331 cycles=     2119907 branch_miss=   10190 cache_miss=       0 cache_ref=     41326 items=         1 avg_time=    579700 ns]
top_tweet<rapidjson>/manual_time                         1597410 ns      1626189 ns          442          26.013k           450.358M             105        48.059k    5.17654M              8.19702           713.139        3.6916G          13.3312M                    21.1099                     2.57532            713.139    26.4262k   631.515k       377.023M/s     824.69   30.6164k   5.34002M         8.45589    626.013/s 3.34293G/s     13.3322M               21.1114                2.49665          1        626.013/s [BEST: throughput=  0.45 GB/s doc_throughput=   713 docs/s instructions=    13331247 cycles=     5176544 branch_miss=   26013 cache_miss=     105 cache_ref=     48059 items=         1 avg_time=   1597409 ns]
top_tweet<rapidjson_insitu>/manual_time                  1105147 ns      1133783 ns          646          23.477k           627.371M             895        39.892k    3.71601M              5.88428           993.437       3.69162G          9.68927M                    15.3429                     2.60744            993.437    23.5772k   631.515k       544.959M/s   1.95485k   32.0455k   3.79272M         6.00574    904.857/s 3.43186G/s      9.6896M               15.3434                2.55479          1        904.857/s [BEST: throughput=  0.63 GB/s doc_throughput=   993 docs/s instructions=     9689274 cycles=     3716011 branch_miss=   23477 cache_miss=     895 cache_ref=     39892 items=         1 avg_time=   1105147 ns]
top_tweet<nlohmann_json>/manual_time                     8393139 ns      8424187 ns           84         180.984k           76.0317M               9       383.606k    30.6456M              48.5271           120.396        3.6896G          78.3729M                    124.103                     2.55739            120.396    186.342k   631.515k       71.7562M/s    1.4228k   390.034k   30.9649M         49.0327    119.145/s 3.68931G/s     78.9641M               125.039                2.55012          1        119.145/s [BEST: throughput=  0.08 GB/s doc_throughput=   120 docs/s instructions=    78372852 cycles=    30645598 branch_miss=  180984 cache_miss=       9 cache_ref=    383606 items=         1 avg_time=   8393139 ns]
