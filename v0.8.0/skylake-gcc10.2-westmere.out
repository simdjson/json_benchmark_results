run_benchmark: v0.8.0 /home/jkeiser/simdjson_benchmark_results/v0.8.0/skylake-gcc10.2-westmere.json -DCMAKE_BUILD_TYPE=Release -DSIMDJSON_EXCLUDE_IMPLEMENTATION=haswell
git reset --hard v0.8.0
HEAD is now at c96ff018 Version 0.8.
cmake -DCMAKE_BUILD_TYPE=Release -DSIMDJSON_EXCLUDE_IMPLEMENTATION=haswell -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The CXX compiler identification is GNU 10.2.0
-- The C compiler identification is GNU 10.2.0
-- Check for working CXX compiler: /usr/bin/g++-10
-- Check for working CXX compiler: /usr/bin/g++-10 -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Check for working C compiler: /usr/bin/gcc-10
-- Check for working C compiler: /usr/bin/gcc-10 -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Excluding implementation haswell due to SIMDJSON_EXCLUDE_IMPLEMENTATION=haswell
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed
-- Check if compiler accepts -pthread
-- Check if compiler accepts -pthread - yes
-- Found Threads: TRUE  
-- Looking for fork
-- Looking for fork - found
-- Looking for wait
-- Looking for wait - found
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- Found Git: /usr/bin/git (found version "2.27.0") 
-- git Version: v0.2.1-c96ff018
-- Version: 0.2.1
-- Performing Test HAVE_CXX_FLAG_STD_CXX11
-- Performing Test HAVE_CXX_FLAG_STD_CXX11 - Success
-- Performing Test HAVE_CXX_FLAG_WALL
-- Performing Test HAVE_CXX_FLAG_WALL - Success
-- Performing Test HAVE_CXX_FLAG_WEXTRA
-- Performing Test HAVE_CXX_FLAG_WEXTRA - Success
-- Performing Test HAVE_CXX_FLAG_WSHADOW
-- Performing Test HAVE_CXX_FLAG_WSHADOW - Success
-- Performing Test HAVE_CXX_FLAG_WERROR
-- Performing Test HAVE_CXX_FLAG_WERROR - Success
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32 - Failed
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED - Success
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WD654
-- Performing Test HAVE_CXX_FLAG_WD654 - Failed
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY - Failed
-- Performing Test HAVE_CXX_FLAG_COVERAGE
-- Performing Test HAVE_CXX_FLAG_COVERAGE - Success
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Performing Test USE_BOOST_JSON
-- Performing Test USE_BOOST_JSON - Failed
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Found Python3: /usr/bin/python3.8 (found version "3.8.6") found components: Interpreter 
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 10
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
Scanning dependencies of target benchmark
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_api_internal.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_name.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_name.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_register.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_register.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_runner.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_runner.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/colorprint.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/colorprint.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/commandlineflags.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/commandlineflags.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/complexity.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/complexity.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/console_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/console_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/counter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/counter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/csv_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/csv_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/json_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/json_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/sleep.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sleep.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/statistics.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/statistics.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/string_util.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/string_util.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/sysinfo.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sysinfo.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/timers.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/timers.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -P CMakeFiles/benchmark.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/benchmark.dir/link.txt --verbose=1
/usr/bin/ar qc libbenchmark.a  CMakeFiles/benchmark.dir/benchmark.cc.o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o CMakeFiles/benchmark.dir/benchmark_name.cc.o CMakeFiles/benchmark.dir/benchmark_register.cc.o CMakeFiles/benchmark.dir/benchmark_runner.cc.o CMakeFiles/benchmark.dir/colorprint.cc.o CMakeFiles/benchmark.dir/commandlineflags.cc.o CMakeFiles/benchmark.dir/complexity.cc.o CMakeFiles/benchmark.dir/console_reporter.cc.o CMakeFiles/benchmark.dir/counter.cc.o CMakeFiles/benchmark.dir/csv_reporter.cc.o CMakeFiles/benchmark.dir/json_reporter.cc.o CMakeFiles/benchmark.dir/reporter.cc.o CMakeFiles/benchmark.dir/sleep.cc.o CMakeFiles/benchmark.dir/statistics.cc.o CMakeFiles/benchmark.dir/string_util.cc.o CMakeFiles/benchmark.dir/sysinfo.cc.o CMakeFiles/benchmark.dir/timers.cc.o
/usr/bin/ranlib libbenchmark.a
[ 80%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
Scanning dependencies of target generated-data
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated && /usr/bin/ruby genfeaturejson.rb /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-miss.json ...
[ 80%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/g++-10  -DSIMDJSON_IMPLEMENTATION_HASWELL=0 -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/include  -O3 -DNDEBUG -fPIC   -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -pthread -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/g++-10 -fPIC -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.7 -o ../libsimdjson.so.7.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.7.0.0 ../libsimdjson.so.7 ../libsimdjson.so
[ 80%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
Scanning dependencies of target yyjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/gcc-10  -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src  -O3 -DNDEBUG   -o CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o   -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src/yyjson.c
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -P CMakeFiles/yyjson.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -E cmake_link_script CMakeFiles/yyjson.dir/link.txt --verbose=1
/usr/bin/ar qc libyyjson.a  CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o
/usr/bin/ranlib libyyjson.a
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/g++-10  -DRAPIDJSON_HAS_STDSTRING -DSAJSON_UNSORTED_OBJECT_KEYS -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_COMPETITION_NLOHMANN_JSON -DSIMDJSON_COMPETITION_RAPIDJSON -DSIMDJSON_COMPETITION_SAJSON -DSIMDJSON_COMPETITION_YYJSON -DSIMDJSON_IMPLEMENTATION_HASWELL=0 -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/rapidjson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/sajson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/json  -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/g++-10  -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.7.0.0 ../_deps/google_benchmarks/src/libbenchmark.a ../dependencies/libyyjson.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.8.0/skylake-gcc10.2-westmere.json --benchmark_out_format=json
2021-01-24 21:47:35
Running benchmark/bench_ondemand
Run on (4 X 4000 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 256 KiB (x4)
  L3 Unified 8192 KiB (x1)
Load Average: 1.13, 0.71, 0.52
simdjson::dom implementation:      westmere
simdjson::ondemand implementation: fallback

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                  356179 ns       384361 ns         1966           3.352k            1.7803G               0         88.62k    1.30973M              2.07394          2.81909k       3.69224G          4.41982M                    6.99876                     3.37461           281.909k    3.48356k   631.515k       1.65126G/s    3.88199   88.4491k   1.31438M         2.08131   2.80757k/s 3.69021G/s     4.41982M               6.99876                3.36268        100       280.757k/s [BEST: throughput=  1.78 GB/s doc_throughput=  2819 docs/s instructions=     4419821 cycles=     1309726 branch_miss=    3352 cache_miss=       0 cache_ref=     88620 items=       100 avg_time=    356179 ns]
partial_tweets<simdjson_ondemand>/manual_time             256261 ns       284324 ns         2733           1.917k            2.4751G               0        56.205k    942.126k              1.49185          3.91931k       3.69248G          3.51375M                    5.56401                      3.7296           391.931k    2.03701k   631.515k       2.29509G/s   0.148921   56.1994k   945.772k         1.49762   3.90227k/s 3.69065G/s     3.51375M               5.56401                3.71522        100       390.227k/s [BEST: throughput=  2.48 GB/s doc_throughput=  3919 docs/s instructions=     3513754 cycles=      942126 branch_miss=    1917 cache_miss=       0 cache_ref=     56205 items=       100 avg_time=    256261 ns]
partial_tweets<yyjson>/manual_time                        664329 ns       694978 ns         1051           9.703k           1.67909G             517        74.508k    1.38872M              2.19903          2.65883k       3.69238G          2.90845M                    4.60552                     2.09434           265.883k    7.55417k   631.515k       906.568M/s    987.262    49.199k   1.61081M          2.5507   1.50528k/s 2.42471G/s     2.90915M               4.60661                1.80602        100       150.528k/s [BEST: throughput=  1.68 GB/s doc_throughput=  2658 docs/s instructions=     2908453 cycles=     1388722 branch_miss=    9703 cache_miss=     517 cache_ref=     74508 items=       100 avg_time=    664329 ns]
partial_tweets<yyjson_insitu>/manual_time                 456219 ns       484991 ns         1534           6.881k           1.89929G             743        45.955k    1.22432M               1.9387          3.00751k       3.68216G          2.90814M                    4.60502                     2.37531           300.751k    7.34605k   631.515k       1.28917G/s    129.654   31.9791k   1.33969M         2.12139   2.19193k/s  2.9365G/s      2.9084M               4.60543                2.17095        100       219.193k/s [BEST: throughput=  1.90 GB/s doc_throughput=  3007 docs/s instructions=     2908137 cycles=     1224321 branch_miss=    6881 cache_miss=     743 cache_ref=     45955 items=       100 avg_time=    456218 ns]
partial_tweets<sajson>/manual_time                        589278 ns       617710 ns         1184          10.079k           1081.22M               0        45.833k     2.1563M              3.41449          1.71211k       3.69182G          6.05184M                    9.58305                     2.80658           171.211k    10.6066k   631.515k       1022.03M/s    6.73649   45.9778k   2.17435M         3.44307   1.69699k/s 3.68986G/s     6.05184M               9.58305                2.78329        100       169.699k/s [BEST: throughput=  1.08 GB/s doc_throughput=  1712 docs/s instructions=     6051839 cycles=     2156302 branch_miss=   10079 cache_miss=       0 cache_ref=     45833 items=       100 avg_time=    589277 ns]
partial_tweets<rapidjson>/manual_time                    1626482 ns      1655473 ns          431           26.91k           443.951M         10.246k        52.888k    5.25124M               8.3153           702.993       3.69158G          13.4099M                    21.2345                     2.55366           70.2993k    27.2599k   631.515k       370.284M/s    496.571   32.4452k   5.41547M         8.57537    614.824/s 3.32956G/s     13.4106M               21.2356                2.47635        100       61.4824k/s [BEST: throughput=  0.44 GB/s doc_throughput=   702 docs/s instructions=    13409902 cycles=     5251239 branch_miss=   26910 cache_miss=   10246 cache_ref=     52888 items=       100 avg_time=   1626482 ns]
partial_tweets<rapidjson_insitu>/manual_time             1130124 ns      1158695 ns          622          23.783k           623.079M              42        43.579k    3.74158M              5.92477           986.642        3.6916G          9.75504M                     15.447                      2.6072           98.6642k     23.906k   631.515k       532.915M/s    225.548   33.3812k   3.82605M         6.05852    884.859/s 3.38551G/s     9.75564M                15.448                 2.5498        100       88.4859k/s [BEST: throughput=  0.62 GB/s doc_throughput=   986 docs/s instructions=     9755040 cycles=     3741582 branch_miss=   23783 cache_miss=      42 cache_ref=     43579 items=       100 avg_time=   1130123 ns]
partial_tweets<nlohmann_json>/manual_time                7510473 ns      7545404 ns           93           138.9k           87.0017M               5       226.209k    26.7793M              42.4049           137.767        3.6893G          71.2174M                    112.772                     2.65941           13.7767k    151.116k   631.515k       80.1893M/s    79.6344   356.083k   27.7079M         43.8754    133.147/s 3.68924G/s      71.789M               113.677                2.59092        100       13.3147k/s [BEST: throughput=  0.09 GB/s doc_throughput=   137 docs/s instructions=    71217354 cycles=    26779343 branch_miss=  138900 cache_miss=       5 cache_ref=    226209 items=       100 avg_time=   7510472 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                 100253346 ns    103650241 ns            7         893.211k           460.598M        11.0263M       15.2271M    368.415M              8.00924           10.0133       3.68904G          1.11536G                    24.2476                     3.02745           10.0133M    893.711k   45.9988M        437.57M/s     11.03M   15.2239M   369.822M         8.03982    9.97473/s 3.68888G/s     1.11536G               24.2476                3.01594      1000k       9.97473M/s [BEST: throughput=  0.46 GB/s doc_throughput=    10 docs/s instructions=  1115360606 cycles=   368415415 branch_miss=  893211 cache_miss=11026251 cache_ref=  15227079 items=   1000000 avg_time= 100253345 ns]
large_random<simdjson_ondemand>/manual_time             65164634 ns     68528691 ns           11         886.181k           707.286M        5.73522M       7.92425M    239.926M              5.21592           15.3762       3.68915G          719.738M                    15.6469                     2.99983           15.3762M    887.891k   45.9988M       673.185M/s    5.7503M   7.92759M   240.378M         5.22574    15.3457/s 3.68877G/s     719.738M               15.6469                 2.9942      1000k       15.3457M/s [BEST: throughput=  0.71 GB/s doc_throughput=    15 docs/s instructions=   719737981 cycles=   239926061 branch_miss=  886181 cache_miss= 5735217 cache_ref=   7924250 items=   1000000 avg_time=  65164634 ns]
large_random<simdjson_ondemand_unordered>/manual_time   68679695 ns     72032890 ns           10         863.059k           670.143M        5.70741M       7.91502M    253.219M               5.5049           14.5687       3.68907G          723.738M                    15.7339                     2.85815           14.5687M    863.702k   45.9988M       638.731M/s   5.73972M   7.91632M   253.351M         5.50777    14.5603/s 3.68887G/s     723.738M               15.7339                2.85666      1000k       14.5603M/s [BEST: throughput=  0.67 GB/s doc_throughput=    14 docs/s instructions=   723737986 cycles=   253218678 branch_miss=  863059 cache_miss= 5707413 cache_ref=   7915021 items=   1000000 avg_time=  68679695 ns]
large_random<yyjson>/manual_time                       127028608 ns    130450998 ns            6         661.267k           362.371M        5.85415M        8.9366M    349.544M              7.59898           7.87783       2.75365G           944.15M                    20.5255                     2.70109           7.87783M    660.964k   45.9988M       345.338M/s   5.85601M   8.94594M   349.469M         7.59735    7.87224/s  2.7511G/s     944.149M               20.5255                2.70167      1000k       7.87224M/s [BEST: throughput=  0.36 GB/s doc_throughput=     7 docs/s instructions=   944149621 cycles=   349543754 branch_miss=  661267 cache_miss= 5854147 cache_ref=   8936600 items=   1000000 avg_time= 127028608 ns]
large_random<yyjson_insitu>/manual_time                109347871 ns    112766699 ns            6         658.088k           420.877M        4.97484M       7.58887M    317.872M              6.91045           9.14974       2.90845G          938.029M                    20.3925                     2.95096           9.14974M    661.164k   45.9988M       401.177M/s   4.98074M   7.60092M    318.14M         6.91626    9.14513/s 2.90943G/s     938.029M               20.3925                2.94848      1000k       9.14513M/s [BEST: throughput=  0.42 GB/s doc_throughput=     9 docs/s instructions=   938028642 cycles=   317872119 branch_miss=  658088 cache_miss= 4974844 cache_ref=   7588874 items=   1000000 avg_time= 109347871 ns]
large_random<sajson>/manual_time                        95587559 ns     98866183 ns            7         601.531k             482.5M        8.35471M       12.0841M      351.7M              7.64585           10.4894       3.68912G          1099.99M                    23.9134                     3.12763           10.4894M    601.034k   45.9988M       458.928M/s   8.43435M   12.0573M    352.17M         7.65607    10.4616/s 3.68427G/s     1099.99M               23.9134                3.12346      1000k       10.4616M/s [BEST: throughput=  0.48 GB/s doc_throughput=    10 docs/s instructions=  1099987388 cycles=   351699801 branch_miss=  601531 cache_miss= 8354707 cache_ref=  12084100 items=   1000000 avg_time=  95587558 ns]
large_random<rapidjson>/manual_time                    186166465 ns    189587727 ns            4         606.524k           257.449M         6.9896M       10.6683M    601.299M              13.0721           5.59687       3.36539G          1.66014G                     36.091                     2.76093           5.59687M    601.083k   45.9988M       235.638M/s   6.42413M    9.9297M    607.94M         13.2164    5.37154/s 3.26557G/s     1.66015G               36.0912                2.73078      1000k       5.37154M/s [BEST: throughput=  0.26 GB/s doc_throughput=     5 docs/s instructions=  1660142898 cycles=   601298508 branch_miss=  606524 cache_miss= 6989603 cache_ref=  10668318 items=   1000000 avg_time= 186166465 ns]
large_random<rapidjson_lossless>/manual_time           211504508 ns    214914426 ns            3         676.634k           224.324M         6.9898M       10.6409M    698.585M               15.187           4.87673       3.40681G          2.02311G                    43.9818                     2.89601           4.87673M    665.466k   45.9988M       207.409M/s   6.47776M   9.98053M    703.85M         15.3015    4.72803/s 3.32782G/s     2.02312G                43.982                2.87436      1000k       4.72803M/s [BEST: throughput=  0.22 GB/s doc_throughput=     4 docs/s instructions=  2023109806 cycles=   698585283 branch_miss=  676634 cache_miss= 6989802 cache_ref=  10640855 items=   1000000 avg_time= 211504507 ns]
large_random<rapidjson_insitu>/manual_time             157604331 ns    161017621 ns            5         586.748k            307.04M        8.08182M        12.198M    494.932M              10.7597           6.67497       3.30365G          1.49214G                    32.4387                     3.01484           6.67497M    587.965k   45.9988M       278.342M/s   7.48979M   11.3935M   501.286M         10.8978      6.345/s 3.18066G/s     1.49215G               32.4389                2.97665      1000k         6.345M/s [BEST: throughput=  0.31 GB/s doc_throughput=     6 docs/s instructions=  1492140367 cycles=   494931892 branch_miss=  586748 cache_miss= 8081822 cache_ref=  12198028 items=   1000000 avg_time= 157604330 ns]
large_random<nlohmann_json>/manual_time               1232851228 ns   1236237777 ns            1         4.50963M           37.3109M        46.8668M       60.5572M    4.53562G              98.6031          0.811128       3.67897G          11.9494G                    259.776                     2.63456           811.128k    4.50963M   45.9988M       35.5824M/s   46.8668M   60.5572M   4.53562G         98.6031   0.811128/s 3.67897G/s     11.9494G               259.776                2.63456      1000k       811.128k/s [BEST: throughput=  0.04 GB/s doc_throughput=     0 docs/s instructions= 11949359048 cycles=  4535623106 branch_miss= 4509627 cache_miss=46866786 cache_ref=  60557192 items=   1000000 avg_time=1232851228 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                       101879544 ns    111934200 ns            7         446.847k           1.34917G        15.8288M       22.1928M    375.415M              2.73417           9.82607       3.68885G          1.20656G                    8.78745                     3.21394           5.15169M    446.942k   137.305M       1.25516G/s   15.8595M   22.1875M    375.83M         2.73719    9.81551/s 3.68897G/s     1.20656G               8.78745                3.21038   524.288k       5.14616M/s [BEST: throughput=  1.35 GB/s doc_throughput=     9 docs/s instructions=  1206560118 cycles=   375414543 branch_miss=  446847 cache_miss=15828784 cache_ref=  22192800 items=    524288 avg_time= 101879544 ns]
kostya<simdjson_ondemand>/manual_time                   71179413 ns     81197735 ns           10         451.453k           1.93047G        10.2198M       14.0452M    262.391M              1.91101           14.0597       3.68914G          870.688M                    6.34127                     3.31828           7.37133M    451.402k   137.305M       1.79652G/s   10.2415M     13.99M   262.578M         1.91237     14.049/s 3.68896G/s     870.688M               6.34127                3.31592   524.288k       7.36573M/s [BEST: throughput=  1.93 GB/s doc_throughput=    14 docs/s instructions=   870687546 cycles=   262391381 branch_miss=  451453 cache_miss=10219836 cache_ref=  14045246 items=    524288 avg_time=  71179413 ns]
kostya<yyjson>/manual_time                             200482148 ns    210593438 ns            3         412.679k           685.917M        11.4284M       16.2127M    542.561M               3.9515           4.99557        2.7104G          984.045M                    7.16685                      1.8137           2.61912M     412.69k   137.305M       653.147M/s   11.4289M   16.1959M   542.505M         3.95109    4.98798/s   2.706G/s     984.045M               7.16686                1.81389   524.288k       2.61514M/s [BEST: throughput=  0.69 GB/s doc_throughput=     4 docs/s instructions=   984044935 cycles=   542560827 branch_miss=  412679 cache_miss=11428400 cache_ref=  16212679 items=    524288 avg_time= 200482147 ns]
kostya<yyjson_insitu>/manual_time                      147171486 ns    157256016 ns            5         412.171k            933.23M        8.80223M       12.1619M    448.711M              3.26799           6.79677       3.04978G          965.775M                     7.0338                     2.15233           3.56346M    412.496k   137.305M       889.739M/s   8.80392M   12.1659M   448.842M         3.26894    6.79479/s 3.04979G/s     965.775M                7.0338                2.15171   524.288k       3.56243M/s [BEST: throughput=  0.93 GB/s doc_throughput=     6 docs/s instructions=   965775264 cycles=   448711012 branch_miss=  412171 cache_miss= 8802231 cache_ref=  12161899 items=    524288 avg_time= 147171486 ns]
kostya<sajson>/manual_time                             148284904 ns    158338954 ns            5         378.505k           926.229M        12.3916M       17.2634M    546.897M              3.98308           6.74578       3.68925G          1.62034G                     11.801                     2.96279           3.53673M     378.93k   137.305M       883.059M/s   12.4211M    17.264M   547.036M         3.98409    6.74377/s 3.68909G/s     1.62034G                11.801                2.96204   524.288k       3.53568M/s [BEST: throughput=  0.93 GB/s doc_throughput=     6 docs/s instructions=  1620343048 cycles=   546897002 branch_miss=  378505 cache_miss=12391604 cache_ref=  17263416 items=    524288 avg_time= 148284904 ns]
kostya<rapidjson>/manual_time                          245732322 ns    255823610 ns            3         956.838k           566.595M        8.09724M        11.841M    812.226M              5.91549           4.12655       3.35169G          2.29873G                    16.7418                     2.83016            2.1635M    957.943k   137.305M       532.874M/s   7.79706M   11.5467M   815.296M         5.93785    4.06947/s 3.31782G/s     2.29873G               16.7418                 2.8195   524.288k       2.13357M/s [BEST: throughput=  0.57 GB/s doc_throughput=     4 docs/s instructions=  2298729907 cycles=   812225718 branch_miss=  956838 cache_miss= 8097242 cache_ref=  11840972 items=    524288 avg_time= 245732322 ns]
kostya<rapidjson_lossless>/manual_time                 263341377 ns    273441874 ns            3         971.048k           528.277M        8.08937M       12.0091M    877.526M              6.39107           3.84747       3.37626G          2.50529G                    18.2462                     2.85495           2.01718M    969.709k   137.305M       497.241M/s   7.79482M   11.6029M   880.776M         6.41474    3.79735/s 3.34462G/s     2.50529G               18.2462                2.84441   524.288k       1.99091M/s [BEST: throughput=  0.53 GB/s doc_throughput=     3 docs/s instructions=  2505290833 cycles=   877526473 branch_miss=  971048 cache_miss= 8089370 cache_ref=  12009102 items=    524288 avg_time= 263341377 ns]
kostya<rapidjson_insitu>/manual_time                   219488708 ns    229570885 ns            3         1012.58k           634.736M         11.206M       15.6097M     717.19M              5.22333           4.62282       3.31544G          2.03228G                    14.8012                     2.83366           2.42369M    1013.21k   137.305M       596.588M/s   10.8993M   15.2648M   719.551M         5.24053    4.55604/s  3.2783G/s     2.03228G               14.8012                2.82437   524.288k       2.38868M/s [BEST: throughput=  0.63 GB/s doc_throughput=     4 docs/s instructions=  2032275433 cycles=   717189785 branch_miss= 1012582 cache_miss=11206050 cache_ref=  15609696 items=    524288 avg_time= 219488708 ns]
kostya<nlohmann_json>/manual_time                     1565743724 ns   1575866189 ns            1         6.11907M           87.6931M        69.5159M       87.2934M    5.77663G              42.0715          0.638674       3.68939G           15.147G                    110.317                     2.62212           334.849k    6.11907M   137.305M       83.6307M/s   69.5159M   87.2934M   5.77663G         42.0715   0.638674/s 3.68939G/s      15.147G               110.317                2.62212   524.288k       334.849k/s [BEST: throughput=  0.09 GB/s doc_throughput=     0 docs/s instructions= 15147049913 cycles=  5776631586 branch_miss= 6119075 cache_miss=69515929 cache_ref=  87293385 items=    524288 avg_time=1565743724 ns]
distinct_user_id<simdjson_dom>/manual_time                350913 ns       380743 ns         1994           3.383k           1.80717G               0        89.471k    1.29026M              2.04312          2.86164k       3.69227G          4.36075M                    6.90521                     3.37973           329.089k    3.53837k   631.515k       1.67604G/s    0.83651   89.7553k     1.295M         2.05062   2.84971k/s 3.69038G/s     4.36075M               6.90521                3.36737        115       327.717k/s [BEST: throughput=  1.81 GB/s doc_throughput=  2861 docs/s instructions=     4360746 cycles=     1290264 branch_miss=    3383 cache_miss=       0 cache_ref=     89471 items=       115 avg_time=    350912 ns]
distinct_user_id<simdjson_ondemand>/manual_time           248609 ns       278257 ns         2814           1.597k           2.55149G               0        54.303k    913.897k              1.44715          4.04027k       3.69239G           3.2075M                    5.07906                      3.5097           464.631k    1.74672k   631.515k       2.36574G/s   0.229922   54.2465k   917.548k         1.45293   4.02239k/s 3.69073G/s      3.2075M               5.07906                3.49573        115       462.575k/s [BEST: throughput=  2.55 GB/s doc_throughput=  4040 docs/s instructions=     3207500 cycles=      913897 branch_miss=    1597 cache_miss=       0 cache_ref=     54303 items=       115 avg_time=    248608 ns]
distinct_user_id<yyjson>/manual_time                      576908 ns       610470 ns         1000           6.619k           1.76202G         22.555k        74.087k    1.32326M              2.09537          2.79016k        3.6921G          2.87509M                    4.55268                     2.17273           320.868k     7.4495k   631.515k       1043.94M/s   7.42872k   55.4619k   1.53799M          2.4354   1.73338k/s 2.66593G/s     2.87528M                 4.553                 1.8695        115       199.339k/s [BEST: throughput=  1.76 GB/s doc_throughput=  2790 docs/s instructions=     2875088 cycles=     1323260 branch_miss=    6619 cache_miss=   22555 cache_ref=     74087 items=       115 avg_time=    576907 ns]
distinct_user_id<yyjson_insitu>/manual_time               450839 ns       483278 ns         1553           6.934k           1.91606G             462        44.228k    1.21362M              1.92175          3.03407k        3.6822G          2.87457M                    4.55186                      2.3686           348.918k    7.57531k   631.515k       1.30456G/s    42.9981   30.4559k   1.33282M         2.11052   2.21809k/s 2.95632G/s     2.87483M               4.55228                2.15695        115        255.08k/s [BEST: throughput=  1.92 GB/s doc_throughput=  3034 docs/s instructions=     2874571 cycles=     1213615 branch_miss=    6934 cache_miss=     462 cache_ref=     44228 items=       115 avg_time=    450838 ns]
distinct_user_id<sajson>/manual_time                      585649 ns       616182 ns         1197          10.073k            1089.5M               0        45.304k    2.13994M              3.38858          1.72521k       3.69184G           5.9843M                    9.47611                     2.79649           198.399k     10.707k   631.515k       1028.36M/s   0.787803    45.344k   2.16108M         3.42205   1.70751k/s 3.69006G/s     5.98431M               9.47611                2.76913        115       196.363k/s [BEST: throughput=  1.09 GB/s doc_throughput=  1725 docs/s instructions=     5984305 cycles=     2139937 branch_miss=   10073 cache_miss=       0 cache_ref=     45304 items=       115 avg_time=    585649 ns]
distinct_user_id<rapidjson>/manual_time                  1612793 ns      1643207 ns          436           26.88k           444.543M          9.015k        53.006k    5.24433M              8.30437           703.931       3.69165G            13.35M                    21.1397                     2.54561           80.9521k    27.1009k   631.515k       373.426M/s    930.314   33.5947k   5.39654M         8.54538    620.042/s 3.34608G/s     13.3507M               21.1407                2.47393        115       71.3049k/s [BEST: throughput=  0.44 GB/s doc_throughput=   703 docs/s instructions=    13350043 cycles=     5244334 branch_miss=   26880 cache_miss=    9015 cache_ref=     53006 items=       115 avg_time=   1612793 ns]
distinct_user_id<rapidjson_insitu>/manual_time           1106269 ns      1136207 ns          640          23.275k           626.161M             129        42.953k    3.72316M               5.8956           991.522       3.69159G          9.70617M                    15.3697                     2.60697           114.025k    23.6898k   631.515k       544.406M/s   2.01682k   34.8445k   3.79802M         6.01414    903.939/s 3.43318G/s      9.7065M               15.3702                2.55567        115       103.953k/s [BEST: throughput=  0.63 GB/s doc_throughput=   991 docs/s instructions=     9706173 cycles=     3723158 branch_miss=   23275 cache_miss=     129 cache_ref=     42953 items=       115 avg_time=   1106269 ns]
distinct_user_id<nlohmann_json>/manual_time              7276612 ns      7310759 ns          104          116.88k            95.045M              85        215.81k    24.5196M              38.8266           150.503       3.69027G          66.7046M                    105.626                     2.72046           17.3079k     181.45k   631.515k       82.7665M/s    120.567   368.323k   26.8445M         42.5081    137.427/s 3.68915G/s     65.3665M               103.508                2.43501        115       15.8041k/s [BEST: throughput=  0.10 GB/s doc_throughput=   150 docs/s instructions=    66704576 cycles=    24519585 branch_miss=  116880 cache_miss=      85 cache_ref=    215810 items=       115 avg_time=   7276611 ns]
find_tweet<simdjson_dom>/manual_time                      339263 ns       367947 ns         2064           3.159k           1.86961G               0        79.374k    1.24718M               1.9749          2.96052k       3.69229G          4.27971M                    6.77689                     3.43151           2.96052k    3.33636k   631.515k       1.73359G/s   0.264535   79.4054k   1.25199M         1.98251   2.94756k/s 3.69031G/s     4.27971M               6.77689                3.41833          1       2.94756k/s [BEST: throughput=  1.87 GB/s doc_throughput=  2960 docs/s instructions=     4279706 cycles=     1247178 branch_miss=    3159 cache_miss=       0 cache_ref=     79374 items=         1 avg_time=    339263 ns]
find_tweet<simdjson_ondemand>/manual_time                 178901 ns       206949 ns         3910              645           3.53853G               0        31.492k    659.171k              1.04379          5.60325k        3.6935G          2.56045M                    4.05445                     3.88434           5.60325k       686.6   631.515k       3.28754G/s   0.403836   31.5066k   660.328k         1.04563   5.58968k/s 3.69103G/s     2.56045M               4.05445                3.87754          1       5.58968k/s [BEST: throughput=  3.54 GB/s doc_throughput=  5603 docs/s instructions=     2560446 cycles=      659171 branch_miss=     645 cache_miss=       0 cache_ref=     31492 items=         1 avg_time=    178900 ns]
find_tweet<yyjson>/manual_time                            641084 ns       671844 ns         1120           9.476k           1.73739G             137        64.177k    1.34214M              2.12527          2.75115k       3.69243G          2.82414M                      4.472                      2.1042           2.75115k    7.42941k   631.515k       939.439M/s    995.592   39.3305k   1.56791M         2.48278   1.55986k/s 2.44572G/s     2.82461M               4.47276                1.80151          1       1.55986k/s [BEST: throughput=  1.74 GB/s doc_throughput=  2751 docs/s instructions=     2824136 cycles=     1342141 branch_miss=    9476 cache_miss=     137 cache_ref=     64177 items=         1 avg_time=    641084 ns]
find_tweet<yyjson_insitu>/manual_time                     440395 ns       470262 ns         1590           6.874k            1.9598G             518        35.929k     1.1864M              1.87865          3.10333k       3.68178G          2.82381M                    4.47149                     2.38016           3.10333k    7.25125k   631.515k       1.33549G/s    14.4868   21.9109k   1.29467M          2.0501   2.27069k/s  2.9398G/s     2.82407M                4.4719                2.18131          1       2.27069k/s [BEST: throughput=  1.96 GB/s doc_throughput=  3103 docs/s instructions=     2823811 cycles=     1186397 branch_miss=    6874 cache_miss=     518 cache_ref=     35929 items=         1 avg_time=    440395 ns]
find_tweet<sajson>/manual_time                            572956 ns       602435 ns         1220           9.846k           1.11237G               0        35.986k    2.09597M              3.31895          1.76143k       3.69189G          5.89219M                    9.33024                      2.8112           1.76143k    10.4187k   631.515k       1051.14M/s    1.10574   35.9621k   2.11416M         3.34775   1.74533k/s 3.68991G/s     5.89219M               9.33024                2.78702          1       1.74533k/s [BEST: throughput=  1.11 GB/s doc_throughput=  1761 docs/s instructions=     5892186 cycles=     2095966 branch_miss=    9846 cache_miss=       0 cache_ref=     35986 items=         1 avg_time=    572955 ns]
find_tweet<rapidjson>/manual_time                        1603982 ns      1632781 ns          441          26.519k           447.559M         21.586k        47.564k    5.20885M              8.24819           708.706       3.69155G          13.2815M                    21.0312                      2.5498            708.706    27.0818k   631.515k       375.478M/s    688.658   26.1866k   5.36333M          8.4928    623.448/s 3.34376G/s     13.2822M               21.0323                2.47649          1        623.448/s [BEST: throughput=  0.45 GB/s doc_throughput=   708 docs/s instructions=    13281536 cycles=     5208855 branch_miss=   26519 cache_miss=   21586 cache_ref=     47564 items=         1 avg_time=   1603982 ns]
find_tweet<rapidjson_insitu>/manual_time                 1100258 ns      1129720 ns          649          23.548k           629.481M          5.961k        35.004k    3.70365M               5.8647           996.778       3.69172G          9.64767M                     15.277                     2.60491            996.778    23.8327k   631.515k        547.38M/s   1.84384k   25.9617k   3.77479M         5.97736    908.878/s 3.43082G/s     9.64821M               15.2779                2.55596          1        908.878/s [BEST: throughput=  0.63 GB/s doc_throughput=   996 docs/s instructions=     9647672 cycles=     3703649 branch_miss=   23548 cache_miss=    5961 cache_ref=     35004 items=         1 avg_time=   1100258 ns]
find_tweet<nlohmann_json>/manual_time                    5789143 ns      5819240 ns          123          93.231k           112.599M              30       163.525k    20.6959M              32.7718           178.299       3.69007G          57.0689M                    90.3682                      2.7575            178.299    108.001k   631.515k       104.033M/s    54.3659   298.166k   21.3576M         33.8196    172.737/s 3.68925G/s     55.7196M               88.2317                2.60889          1        172.737/s [BEST: throughput=  0.11 GB/s doc_throughput=   178 docs/s instructions=    57068882 cycles=    20695897 branch_miss=   93231 cache_miss=      30 cache_ref=    163525 items=         1 avg_time=   5789142 ns]
top_tweet<simdjson_dom>/manual_time                       345303 ns       373399 ns         2028           3.276k           1.83664G               0        87.138k    1.26952M              2.01027          2.90831k       3.69216G          4.31377M                    6.83083                     3.39796           2.90831k    3.40295k   631.515k       1.70327G/s   0.601085   87.2015k   1.27426M         2.01778   2.89601k/s 3.69026G/s     4.31377M               6.83083                3.38533          1       2.89601k/s [BEST: throughput=  1.84 GB/s doc_throughput=  2908 docs/s instructions=     4313774 cycles=     1269518 branch_miss=    3276 cache_miss=       0 cache_ref=     87138 items=         1 avg_time=    345303 ns]
top_tweet<simdjson_ondemand>/manual_time                  232450 ns       260362 ns         3009           1.571k            2.7324G               0        54.195k     853.43k               1.3514          4.32674k       3.69257G          3.18192M                    5.03855                     3.72839           4.32674k      1.709k   631.515k        2.5302G/s  0.0491858   54.0914k   857.901k         1.35848     4.302k/s 3.69069G/s     3.18192M               5.03855                3.70896          1         4.302k/s [BEST: throughput=  2.73 GB/s doc_throughput=  4326 docs/s instructions=     3181920 cycles=      853430 branch_miss=    1571 cache_miss=       0 cache_ref=     54195 items=         1 avg_time=    232449 ns]
top_tweet<simdjson_ondemand_forward_only>/manual_time     253809 ns       281704 ns         2758           1.564k           2.49775G               0        54.848k    933.618k              1.47838          3.95516k       3.69261G          3.40282M                    5.38834                     3.64477           3.95516k    1.67142k   631.515k       2.31727G/s   0.109862    55.005k   936.728k          1.4833   3.93997k/s 3.69068G/s     3.40282M               5.38834                3.63266          1       3.93997k/s [BEST: throughput=  2.50 GB/s doc_throughput=  3955 docs/s instructions=     3402819 cycles=      933618 branch_miss=    1564 cache_miss=       0 cache_ref=     54848 items=         1 avg_time=    253808 ns]
top_tweet<yyjson>/manual_time                             645705 ns       675566 ns         1127           9.566k           1.71315G             283        70.416k    1.36113M              2.15535          2.71277k       3.69244G          2.84502M                    4.50507                     2.09018           2.71277k    7.53259k   631.515k       932.716M/s    942.383   44.4027k   1.58452M         2.50908   1.54869k/s 2.45394G/s      2.8455M               4.50583                1.79581          1       1.54869k/s [BEST: throughput=  1.71 GB/s doc_throughput=  2712 docs/s instructions=     2845019 cycles=     1361134 branch_miss=    9566 cache_miss=     283 cache_ref=     70416 items=         1 avg_time=    645705 ns]
top_tweet<yyjson_insitu>/manual_time                      445303 ns       474294 ns         1573           6.775k           1.94321G             564        40.413k    1.19654M              1.89472          3.07707k       3.68184G          2.84469M                    4.50455                     2.37743           3.07707k    7.32926k   631.515k       1.32077G/s    38.8442   26.8198k   1.31259M         2.07848   2.24566k/s 2.94764G/s     2.84496M               4.50497                2.16743          1       2.24566k/s [BEST: throughput=  1.94 GB/s doc_throughput=  3077 docs/s instructions=     2844694 cycles=     1196542 branch_miss=    6775 cache_miss=     564 cache_ref=     40413 items=         1 avg_time=    445303 ns]
top_tweet<sajson>/manual_time                             579581 ns       608084 ns         1206          10.004k           1.10338G               0        41.327k    2.11304M              3.34598           1.7472k        3.6919G          5.91933M                    9.37322                     2.80134            1.7472k    10.5907k   631.515k       1039.13M/s   0.888889   41.3026k   2.13865M         3.38653   1.72538k/s 3.68999G/s     5.91933M               9.37322                2.76779          1       1.72538k/s [BEST: throughput=  1.10 GB/s doc_throughput=  1747 docs/s instructions=     5919331 cycles=     2113038 branch_miss=   10004 cache_miss=       0 cache_ref=     41327 items=         1 avg_time=    579580 ns]
top_tweet<rapidjson>/manual_time                         1609625 ns      1638208 ns          439          27.202k           446.221M             288        48.412k    5.22464M              8.27318           706.587       3.69166G          13.3308M                    21.1092                     2.55152            706.587    27.1267k   631.515k       374.161M/s    808.843   30.2389k   5.38459M         8.52647    621.263/s 3.34525G/s     13.3316M               21.1105                2.47588          1        621.263/s [BEST: throughput=  0.45 GB/s doc_throughput=   706 docs/s instructions=    13330774 cycles=     5224638 branch_miss=   27202 cache_miss=     288 cache_ref=     48412 items=         1 avg_time=   1609624 ns]
top_tweet<rapidjson_insitu>/manual_time                  1105935 ns      1134499 ns          643          23.927k           625.867M              25        39.433k    3.72503M              5.89856           991.056       3.69171G          9.68886M                    15.3423                     2.60102            991.056    23.8817k   631.515k       544.571M/s   1.95756k   31.5909k   3.79613M         6.01114    904.212/s  3.4325G/s      9.6894M               15.3431                2.55244          1        904.212/s [BEST: throughput=  0.63 GB/s doc_throughput=   991 docs/s instructions=     9688864 cycles=     3725026 branch_miss=   23927 cache_miss=      25 cache_ref=     39433 items=         1 avg_time=   1105934 ns]
top_tweet<nlohmann_json>/manual_time                     8379956 ns      8409698 ns           83         184.247k           75.8492M              30       386.056k    30.7178M              48.6415           120.107       3.68941G          78.5759M                    124.424                     2.55799            120.107    188.096k   631.515k       71.8691M/s    67.5542   394.092k    30.915M         48.9537    119.332/s 3.68916G/s     78.8907M               124.923                2.55186          1        119.332/s [BEST: throughput=  0.08 GB/s doc_throughput=   120 docs/s instructions=    78575861 cycles=    30717809 branch_miss=  184247 cache_miss=      30 cache_ref=    386056 items=         1 avg_time=   8379955 ns]
