run_benchmark: v0.8.0 /home/jkeiser/simdjson_benchmark_results/v0.8.0/skylake-clang11.json 
git reset --hard v0.8.0
HEAD is now at c96ff018 Version 0.8.
cmake ..
-- The CXX compiler identification is Clang 11.0.0
-- The C compiler identification is Clang 11.0.0
-- Check for working CXX compiler: /usr/bin/clang++-11
-- Check for working CXX compiler: /usr/bin/clang++-11 -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Check for working C compiler: /usr/bin/clang-11
-- Check for working C compiler: /usr/bin/clang-11 -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- No build type selected, default to Release
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed
-- Check if compiler accepts -pthread
-- Check if compiler accepts -pthread - yes
-- Found Threads: TRUE  
-- Looking for fork
-- Looking for fork - found
-- Looking for wait
-- Looking for wait - found
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- Found Git: /usr/bin/git (found version "2.27.0") 
-- git Version: v0.2.1-c96ff018
-- Version: 0.2.1
-- Performing Test HAVE_CXX_FLAG_STD_CXX11
-- Performing Test HAVE_CXX_FLAG_STD_CXX11 - Success
-- Performing Test HAVE_CXX_FLAG_WALL
-- Performing Test HAVE_CXX_FLAG_WALL - Success
-- Performing Test HAVE_CXX_FLAG_WEXTRA
-- Performing Test HAVE_CXX_FLAG_WEXTRA - Success
-- Performing Test HAVE_CXX_FLAG_WSHADOW
-- Performing Test HAVE_CXX_FLAG_WSHADOW - Success
-- Performing Test HAVE_CXX_FLAG_WERROR
-- Performing Test HAVE_CXX_FLAG_WERROR - Success
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32 - Success
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED - Success
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WD654
-- Performing Test HAVE_CXX_FLAG_WD654 - Failed
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY - Success
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES -- failed to compile
-- Performing Test HAVE_CXX_FLAG_COVERAGE
-- Performing Test HAVE_CXX_FLAG_COVERAGE - Success
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Performing Test USE_BOOST_JSON
-- Performing Test USE_BOOST_JSON - Failed
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Found Python3: /usr/bin/python3.8 (found version "3.8.6") found components: Interpreter 
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
make[1]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[2]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
Scanning dependencies of target benchmark
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[  0%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/benchmark.cc.o
[ 10%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o
[ 10%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/benchmark_name.cc.o
[ 10%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/benchmark_register.cc.o
[ 20%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/benchmark_runner.cc.o
[ 20%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/colorprint.cc.o
[ 30%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/commandlineflags.cc.o
[ 30%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/complexity.cc.o
[ 30%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/console_reporter.cc.o
[ 40%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/counter.cc.o
[ 40%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/csv_reporter.cc.o
[ 50%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/json_reporter.cc.o
[ 50%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/reporter.cc.o
[ 60%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/sleep.cc.o
[ 60%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/statistics.cc.o
[ 60%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/string_util.cc.o
[ 70%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/sysinfo.cc.o
[ 70%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/timers.cc.o
[ 80%] Linking CXX static library libbenchmark.a
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 80%] Built target benchmark
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
Scanning dependencies of target generated-data
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 80%] Generating utf-8.json, escape.json, 0-structurals.json, 7-structurals.json, 15-structurals.json, 23-structurals.json
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-miss.json ...
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 80%] Built target generated-data
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
Scanning dependencies of target simdjson
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 80%] Building CXX object src/CMakeFiles/simdjson.dir/simdjson.cpp.o
[ 80%] Linking CXX shared library ../libsimdjson.so
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 80%] Built target simdjson
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
Scanning dependencies of target yyjson
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 80%] Building C object dependencies/CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o
[ 90%] Linking C static library libyyjson.a
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 90%] Built target yyjson
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
Scanning dependencies of target bench_ondemand
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[100%] Building CXX object benchmark/CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o
[100%] Linking CXX executable bench_ondemand
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[100%] Built target bench_ondemand
make[2]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[1]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.8.0/skylake-clang11.json --benchmark_out_format=json
2021-01-23 04:26:26
Running benchmark/bench_ondemand
Run on (4 X 3200 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 1024 KiB (x4)
  L3 Unified 8448 KiB (x1)
Load Average: 1.00, 0.85, 0.47
***WARNING*** CPU scaling is enabled, the benchmark real time measurements may be noisy and will incur extra overhead.
simdjson::dom implementation:      haswell
simdjson::ondemand implementation: fallback
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                  317692 ns       388528 ns         2197           3.548k           2.00575G               0        33.384k    1005.51k              1.59222           3.1761k        3.1936G          2.98281M                    4.72326                     2.96646            317.61k    3.64309k   631.515k        1.8513G/s   0.750569   33.4682k   1013.63k         1.60508    3.1477k/s 3.19062G/s     2.98281M               4.72326                2.94269        100        314.77k/s [BEST: throughput=  2.01 GB/s doc_throughput=  3176 docs/s instructions=     2982809 cycles=     1005510 branch_miss=    3548 cache_miss=       0 cache_ref=     33384 items=       100 avg_time=    317692 ns]
partial_tweets<simdjson_ondemand>/manual_time             224005 ns       281575 ns         3127           2.187k           2.84314G               0        12.033k    709.595k              1.12364          4.50209k       3.19466G          2.26558M                    3.58754                     3.19278           450.209k    2.29972k   631.515k       2.62558G/s  0.0674768   12.1074k   714.894k         1.13203   4.46418k/s 3.19141G/s     2.26558M               3.58754                3.16912        100       446.418k/s [BEST: throughput=  2.84 GB/s doc_throughput=  4502 docs/s instructions=     2265584 cycles=      709595 branch_miss=    2187 cache_miss=       0 cache_ref=     12033 items=       100 avg_time=    224005 ns]
partial_tweets<yyjson>/manual_time                        801423 ns       880693 ns          876           9.899k           1.41239G             268        27.787k    1.42821M              2.26156          2.23651k       3.19419G          2.91991M                    4.62366                     2.04446           223.651k    7.59233k   631.515k       751.488M/s    546.266   25.4397k   1.58575M         2.51102   1.24778k/s 1.97866G/s      2.9204M               4.62443                1.84165        100       124.778k/s [BEST: throughput=  1.41 GB/s doc_throughput=  2236 docs/s instructions=     2919910 cycles=     1428206 branch_miss=    9899 cache_miss=     268 cache_ref=     27787 items=       100 avg_time=    801422 ns]
partial_tweets<yyjson_insitu>/manual_time                 522078 ns       586384 ns         1354           6.852k           1.73945G          1.647k        14.175k    1.15083M              1.82234          2.75441k       3.16986G           2.9198M                    4.62349                     2.53712           275.441k    7.37484k   631.515k       1.12655G/s     96.288   11.2588k    1.2637M         2.00106   1.91542k/s 2.42052G/s     2.92006M                4.6239                2.31072        100       191.542k/s [BEST: throughput=  1.74 GB/s doc_throughput=  2754 docs/s instructions=     2919803 cycles=     1150832 branch_miss=    6852 cache_miss=    1647 cache_ref=     14175 items=       100 avg_time=    522077 ns]
partial_tweets<sajson>/manual_time                        690738 ns       754581 ns         1014          10.328k           920.451M               2         13.25k    2.19069M              3.46894          1.45753k       3.19299G          5.87949M                    9.31014                     2.68386           145.753k    10.6446k   631.515k       871.908M/s    4.20316    13.318k   2.20357M         3.48933   1.44773k/s 3.19016G/s      5.8795M               9.31014                2.66817        100       144.773k/s [BEST: throughput=  0.92 GB/s doc_throughput=  1457 docs/s instructions=     5879495 cycles=     2190689 branch_miss=   10328 cache_miss=       2 cache_ref=     13250 items=       100 avg_time=    690737 ns]
partial_tweets<rapidjson>/manual_time                    2800524 ns      2867827 ns          250          30.029k           249.802M             962        22.976k    8.07175M              12.7816            395.56       3.19286G          21.8948M                    34.6702                     2.71252            39.556k    30.6031k   631.515k       215.052M/s     480.86   14.8956k   8.23792M         13.0447    357.076/s 2.94156G/s     21.8957M               34.6717                2.65792        100       35.7076k/s [BEST: throughput=  0.25 GB/s doc_throughput=   395 docs/s instructions=    21894763 cycles=     8071753 branch_miss=   30029 cache_miss=     962 cache_ref=     22976 items=       100 avg_time=   2800524 ns]
partial_tweets<rapidjson_insitu>/manual_time             1778181 ns      1840551 ns          396          26.189k           388.395M             269        14.572k    5.19154M              8.22078           615.021       3.19291G          13.3568M                    21.1504                      2.5728           61.5021k    26.6055k   631.515k       338.694M/s    230.202   10.0233k   5.26797M         8.34179    562.372/s 2.96256G/s     13.3572M                21.151                2.53555        100       56.2372k/s [BEST: throughput=  0.39 GB/s doc_throughput=   615 docs/s instructions=    13356795 cycles=     5191544 branch_miss=   26189 cache_miss=     269 cache_ref=     14572 items=       100 avg_time=   1778180 ns]
partial_tweets<nlohmann_json>/manual_time               10293583 ns     10381868 ns           70         152.372k           65.4171M              12        98.332k    30.7928M              48.7601           103.588       3.18975G          80.3147M                    127.178                     2.60823           10.3588k     184.81k   631.515k       58.5083M/s    261.786   144.763k   32.8245M         51.9773    97.1479/s 3.18883G/s     81.2611M               128.676                2.47562        100       9.71479k/s [BEST: throughput=  0.07 GB/s doc_throughput=   103 docs/s instructions=    80314715 cycles=    30792765 branch_miss=  152372 cache_miss=      12 cache_ref=     98332 items=       100 avg_time=  10293583 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                  99897851 ns    106188184 ns            7         929.708k           461.244M        6.75751M       6.89567M    318.012M              6.91349           10.0273       3.18881G          1038.74M                    22.5819                     3.26635           10.0273M    935.555k   45.9988M       439.127M/s   6.80659M   6.89572M   318.524M         6.92461    10.0102/s 3.18849G/s     1038.74M               22.5819                 3.2611      1000k       10.0102M/s [BEST: throughput=  0.46 GB/s doc_throughput=    10 docs/s instructions=  1038738117 cycles=   318012218 branch_miss=  929708 cache_miss= 6757508 cache_ref=   6895674 items=   1000000 avg_time=  99897850 ns]
large_random<simdjson_ondemand>/manual_time             72934309 ns     79210587 ns           10         926.167k           631.221M        3.47886M       3.57293M    232.382M              5.05192           13.7226       3.18888G          672.195M                    14.6133                     2.89262           13.7226M    926.002k   45.9988M       601.471M/s   3.50943M   3.57291M   232.556M         5.05569     13.711/s 3.18856G/s     672.195M               14.6133                2.89047      1000k        13.711M/s [BEST: throughput=  0.63 GB/s doc_throughput=    13 docs/s instructions=   672194585 cycles=   232382312 branch_miss=  926167 cache_miss= 3478864 cache_ref=   3572931 items=   1000000 avg_time=  72934308 ns]
large_random<simdjson_ondemand_unordered>/manual_time   73007157 ns     79278463 ns           10         990.889k           630.552M        3.50239M       3.57287M     232.63M              5.05732            13.708        3.1889G          669.195M                    14.5481                     2.87664            13.708M    993.877k   45.9988M       600.871M/s   3.52107M   3.57283M   232.773M         5.06042    13.6973/s 3.18836G/s     669.195M               14.5481                2.87488      1000k       13.6973M/s [BEST: throughput=  0.63 GB/s doc_throughput=    13 docs/s instructions=   669194598 cycles=   232630450 branch_miss=  990889 cache_miss= 3502390 cache_ref=   3572869 items=   1000000 avg_time=  73007156 ns]
large_random<yyjson>/manual_time                       156034380 ns    162290759 ns            4         725.588k           294.954M        4.20092M       4.31461M    355.851M               7.7361            6.4122       2.28179G          855.681M                    18.6023                      2.4046            6.4122M     726.22k   45.9988M       281.142M/s   4.20171M   4.31581M   355.985M         7.73902    6.40884/s 2.28146G/s     855.681M               18.6023                 2.4037      1000k       6.40884M/s [BEST: throughput=  0.29 GB/s doc_throughput=     6 docs/s instructions=   855680759 cycles=   355851305 branch_miss=  725588 cache_miss= 4200921 cache_ref=   4314613 items=   1000000 avg_time= 156034380 ns]
large_random<yyjson_insitu>/manual_time                129478874 ns    135730625 ns            5         725.791k           355.517M        3.48499M       3.67863M     312.11M              6.78518           7.72883       2.41224G           849.56M                    18.4692                     2.72199           7.72883M    726.454k   45.9988M       338.803M/s   3.48658M   3.68414M    312.34M         6.79019    7.72327/s 2.41229G/s      849.56M               18.4692                2.71998      1000k       7.72327M/s [BEST: throughput=  0.36 GB/s doc_throughput=     7 docs/s instructions=   849560204 cycles=   312109781 branch_miss=  725791 cache_miss= 3484989 cache_ref=   3678626 items=   1000000 avg_time= 129478874 ns]
large_random<sajson>/manual_time                       109813590 ns    116096474 ns            6         588.474k           419.751M        5.47287M       5.57719M    349.504M              7.59812           9.12526       3.18932G          1.12599G                    24.4787                     3.22168           9.12526M    588.727k   45.9988M       399.476M/s   5.47985M   5.57737M   350.195M         7.61315    9.10634/s   3.189G/s     1.12599G               24.4787                3.21532      1000k       9.10634M/s [BEST: throughput=  0.42 GB/s doc_throughput=     9 docs/s instructions=  1125990580 cycles=   349504247 branch_miss=  588474 cache_miss= 5472874 cache_ref=   5577192 items=   1000000 avg_time= 109813589 ns]
large_random<rapidjson>/manual_time                    253864603 ns    260127368 ns            3          613.27k           187.323M        4.35231M       4.95434M     713.67M               15.515           4.07235       2.90632G          2.01413G                    43.7865                     2.82221           4.07235M    608.778k   45.9988M         172.8M/s    4.0943M   4.75054M   717.877M         15.6064    3.93911/s  2.8278G/s     2.01414G               43.7867                2.80568      1000k       3.93911M/s [BEST: throughput=  0.19 GB/s doc_throughput=     4 docs/s instructions=  2014126575 cycles=   713669957 branch_miss=  613270 cache_miss= 4352305 cache_ref=   4954345 items=   1000000 avg_time= 253864603 ns]
large_random<rapidjson_lossless>/manual_time           287669156 ns    293985295 ns            3         588.721k           164.499M         4.3314M       5.07602M    822.965M               17.891           3.57616       2.94305G          2.47909G                    53.8948                     3.01239           3.57616M    588.059k   45.9988M       152.494M/s   4.07626M   5.01289M   826.404M         17.9658    3.47622/s 2.87276G/s      2.4791G                53.895                2.99987      1000k       3.47622M/s [BEST: throughput=  0.16 GB/s doc_throughput=     3 docs/s instructions=  2479093695 cycles=   822965043 branch_miss=  588721 cache_miss= 4331404 cache_ref=   5076023 items=   1000000 avg_time= 287669156 ns]
large_random<rapidjson_insitu>/manual_time             275832442 ns    282122258 ns            3         581.946k           171.486M        5.04537M       5.66011M     786.82M              17.1052           3.72806       2.93331G          1.73613G                    37.7429                     2.20651           3.72806M     581.47k   45.9988M       159.038M/s   4.79972M   5.45674M   788.923M         17.1509    3.62539/s 2.86015G/s     1.73614G               37.7431                2.20064      1000k       3.62539M/s [BEST: throughput=  0.17 GB/s doc_throughput=     3 docs/s instructions=  1736126421 cycles=   786819718 branch_miss=  581946 cache_miss= 5045370 cache_ref=   5660114 items=   1000000 avg_time= 275832441 ns]
large_random<nlohmann_json>/manual_time               1473056748 ns   1479288120 ns            1         4.10715M           31.2268M        30.4581M       30.9144M    4.68299G              101.807           0.67886        3.1791G          12.7486G                     277.15                     2.72231            678.86k    4.10715M   45.9988M       29.7802M/s   30.4581M   30.9144M   4.68299G         101.807    0.67886/s  3.1791G/s     12.7486G                277.15                2.72231      1000k        678.86k/s [BEST: throughput=  0.03 GB/s doc_throughput=     0 docs/s instructions= 12748551864 cycles=  4682990896 branch_miss= 4107150 cache_miss=30458126 cache_ref=  30914359 items=   1000000 avg_time=1473056748 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                       105538098 ns    125001861 ns            7         1019.49k           1.30228G        10.2189M        10.319M    336.195M              2.44852           9.48456       3.18866G          984.675M                    7.17144                     2.92888           4.97264M    1019.78k   137.305M       1.21165G/s   10.2415M   10.3194M   336.481M         2.45061    9.47525/s 3.18824G/s     984.675M               7.17144                2.92639   524.288k       4.96776M/s [BEST: throughput=  1.30 GB/s doc_throughput=     9 docs/s instructions=   984674903 cycles=   336194676 branch_miss= 1019493 cache_miss=10218915 cache_ref=  10318987 items=    524288 avg_time= 105538098 ns]
kostya<simdjson_ondemand>/manual_time                   67851221 ns     87328997 ns           10         462.813k           2.02815G        6.41114M       6.47106M    215.886M              1.57231           14.7711       3.18888G          650.941M                    4.74084                      3.0152           7.74432M     461.61k   137.305M       1.88464G/s   6.42335M   6.47105M   216.353M         1.57571    14.7381/s 3.18863G/s     650.941M               4.74084                 3.0087   524.288k       7.72702M/s [BEST: throughput=  2.03 GB/s doc_throughput=    14 docs/s instructions=   650940583 cycles=   215886325 branch_miss=  462813 cache_miss= 6411142 cache_ref=   6471056 items=    524288 avg_time=  67851221 ns]
kostya<yyjson>/manual_time                             232617684 ns    252193567 ns            3         421.675k           590.297M        8.49945M       8.64931M    506.902M               3.6918           4.29917       2.17926G          974.185M                    7.09504                     1.92184             2.254M    421.485k   137.305M       562.916M/s   8.49855M   8.65018M   507.038M         3.69279     4.2989/s 2.17971G/s     974.185M               7.09504                1.92132   524.288k       2.25386M/s [BEST: throughput=  0.59 GB/s doc_throughput=     4 docs/s instructions=   974184501 cycles=   506902282 branch_miss=  421675 cache_miss= 8499454 cache_ref=   8649314 items=    524288 avg_time= 232617683 ns]
kostya<yyjson_insitu>/manual_time                      153661956 ns    173174905 ns            5         413.826k           893.714M        6.35646M       6.50907M    376.608M              2.74285           6.50897       2.45133G          955.915M                    6.96198                     2.53822           3.41258M     414.05k   137.305M       852.158M/s    6.3628M   6.51075M   376.623M         2.74297    6.50779/s 2.45098G/s     955.915M               6.96198                2.53812   524.288k       3.41196M/s [BEST: throughput=  0.89 GB/s doc_throughput=     6 docs/s instructions=   955914830 cycles=   376607682 branch_miss=  413826 cache_miss= 6356457 cache_ref=   6509067 items=    524288 avg_time= 153661955 ns]
kostya<sajson>/manual_time                             175030741 ns    194596127 ns            4         390.694k           786.431M        8.46692M       8.54138M     556.82M              4.05535           5.72762       3.18926G          1.53761G                    11.1985                     2.76141           3.00292M    391.891k   137.305M       748.121M/s   8.49255M   8.54142M   558.189M         4.06532    5.71328/s 3.18909G/s     1.53761G               11.1985                2.75464   524.288k       2.99541M/s [BEST: throughput=  0.79 GB/s doc_throughput=     5 docs/s instructions=  1537609243 cycles=   556820160 branch_miss=  390694 cache_miss= 8466920 cache_ref=   8541380 items=    524288 avg_time= 175030741 ns]
kostya<rapidjson>/manual_time                          332952438 ns    352513382 ns            2         1051.91k           416.919M        5.23175M       5.91171M    951.049M              6.92654           3.03645       2.88781G          2.73711G                    19.9346                       2.878           1.59197M     1078.2k   137.305M       393.282M/s   5.11779M   5.80425M   953.839M         6.94686    3.00343/s 2.86479G/s     2.73712G               19.9346                2.86958   524.288k       1.57466M/s [BEST: throughput=  0.42 GB/s doc_throughput=     3 docs/s instructions=  2737114642 cycles=   951048831 branch_miss= 1051906 cache_miss= 5231745 cache_ref=   5911712 items=    524288 avg_time= 332952438 ns]
kostya<rapidjson_lossless>/manual_time                 347609517 ns    367144372 ns            2         981.319k           398.913M        5.23774M       5.88182M    999.051M              7.27615            2.9053       2.90255G          3.00607G                    21.8933                     3.00892           1.52322M    981.301k   137.305M       376.699M/s   5.11543M   5.76663M   1001.19M         7.29173    2.87679/s 2.88022G/s     3.00607G               21.8934                3.00249   524.288k       1.50827M/s [BEST: throughput=  0.40 GB/s doc_throughput=     2 docs/s instructions=  3006065078 cycles=   999051373 branch_miss=  981319 cache_miss= 5237742 cache_ref=   5881822 items=    524288 avg_time= 347609516 ns]
kostya<rapidjson_insitu>/manual_time                   320593772 ns    340124145 ns            2         1019.61k           432.522M        7.38444M        8.0046M    914.173M              6.65797           3.15008       2.87972G          2.21988G                    16.1675                     2.42829           1.65155M    997.076k   137.305M       408.443M/s   7.25944M   7.90322M    915.67M         6.66888    3.11921/s 2.85617G/s     2.21988G               16.1675                2.42432   524.288k       1.63537M/s [BEST: throughput=  0.43 GB/s doc_throughput=     3 docs/s instructions=  2219879239 cycles=   914172906 branch_miss= 1019607 cache_miss= 7384443 cache_ref=   8004595 items=    524288 avg_time= 320593772 ns]
kostya<nlohmann_json>/manual_time                     2413253086 ns   2432775651 ns            1         14.2568M           56.8962M        44.8466M       45.4111M    7.69709G              56.0583          0.414378       3.18951G          17.7632G                     129.37                     2.30778           217.254k    14.2568M   137.305M       54.2605M/s   44.8466M   45.4111M   7.69709G         56.0583   0.414378/s 3.18951G/s     17.7632G                129.37                2.30778   524.288k       217.254k/s [BEST: throughput=  0.06 GB/s doc_throughput=     0 docs/s instructions= 17763207034 cycles=  7697086047 branch_miss=14256846 cache_miss=44846628 cache_ref=  45411104 items=    524288 avg_time=2413253086 ns]
distinct_user_id<simdjson_dom>/manual_time                303817 ns       382617 ns         2302           3.741k           2.09464G               0         33.54k    962.886k              1.52472          3.31685k       3.19375G          2.91783M                    4.62037                      3.0303           381.438k    3.85255k   631.515k       1.93585G/s   0.590356    33.482k   969.324k         1.53492   3.29145k/s 3.19048G/s     2.91783M               4.62037                3.01017        115       378.517k/s [BEST: throughput=  2.09 GB/s doc_throughput=  3316 docs/s instructions=     2917832 cycles=      962886 branch_miss=    3741 cache_miss=       0 cache_ref=     33540 items=       115 avg_time=    303817 ns]
distinct_user_id<simdjson_ondemand>/manual_time           175991 ns       238735 ns         3954           1.632k           3.63587G               3         7.989k    554.888k             0.878662          5.75738k        3.1947G          1.88384M                    2.98304                     3.39499           662.099k    1.69269k   631.515k       3.34189G/s    3.09813    8.0573k   561.633k        0.889343    5.6821k/s 3.19126G/s     1.88384M               2.98304                3.35421        115       653.441k/s [BEST: throughput=  3.64 GB/s doc_throughput=  5757 docs/s instructions=     1883837 cycles=      554888 branch_miss=    1632 cache_miss=       3 cache_ref=      7989 items=       115 avg_time=    175991 ns]
distinct_user_id<yyjson>/manual_time                      697999 ns       786885 ns         1000           6.632k           1.53196G          7.177k        27.302k    1.31666M              2.08492          2.42584k         3.194G          2.87805M                    4.55738                     2.18588           278.972k    7.40388k   631.515k       862.837M/s   2.27145k   24.7935k   1.51329M         2.39629   1.43267k/s 2.16805G/s     2.87825M               4.55769                1.90198        115       164.757k/s [BEST: throughput=  1.53 GB/s doc_throughput=  2425 docs/s instructions=     2878054 cycles=     1316658 branch_miss=    6632 cache_miss=    7177 cache_ref=     27302 items=       115 avg_time=    697999 ns]
distinct_user_id<yyjson_insitu>/manual_time               520014 ns       591583 ns         1358           7.011k           1.76652G          1.484k        13.272k    1.13563M              1.79827          2.79727k       3.17667G          2.87754M                    4.55656                     2.53386           321.686k    7.43505k   631.515k       1.13102G/s    68.9698   8.92378k   1.25696M         1.99039   1.92303k/s 2.41717G/s      2.8778M               4.55698                2.28949        115       221.148k/s [BEST: throughput=  1.77 GB/s doc_throughput=  2797 docs/s instructions=     2877538 cycles=     1135634 branch_miss=    7011 cache_miss=    1484 cache_ref=     13272 items=       115 avg_time=    520013 ns]
distinct_user_id<sajson>/manual_time                      686253 ns       757207 ns         1017          10.221k           926.271M              11        12.955k    2.17705M              3.44735          1.46674k       3.19318G          5.81793M                    9.21266                     2.67239           168.676k    10.5884k   631.515k       877.605M/s     12.177   13.1255k   2.18918M         3.46656   1.45719k/s 3.19005G/s     5.81793M               9.21266                2.65758        115       167.577k/s [BEST: throughput=  0.93 GB/s doc_throughput=  1466 docs/s instructions=     5817932 cycles=     2177053 branch_miss=   10221 cache_miss=      11 cache_ref=     12955 items=       115 avg_time=    686253 ns]
distinct_user_id<rapidjson>/manual_time                  2784800 ns      2858459 ns          252          29.229k           250.423M         12.537k        22.828k    8.05123M              12.7491           396.544       3.19266G          21.8228M                    34.5562                     2.71049           45.6025k    30.3516k   631.515k       216.267M/s    853.171   13.4443k   8.21209M         13.0038    359.092/s  2.9489G/s     21.8234M               34.5572                2.65747        115       41.2956k/s [BEST: throughput=  0.25 GB/s doc_throughput=   396 docs/s instructions=    21822772 cycles=     8051227 branch_miss=   29229 cache_miss=   12537 cache_ref=     22828 items=       115 avg_time=   2784800 ns]
distinct_user_id<rapidjson_insitu>/manual_time           1808529 ns      1880343 ns          379          26.201k           388.498M          7.089k         14.11k    5.19001M              8.21834           615.184       3.19281G          13.2899M                    21.0444                     2.56066           70.7462k    37.4781k   631.515k       333.011M/s   2.74589k   12.1059k   5.51284M         8.72955    552.936/s 3.04825G/s     13.2901M               21.0448                2.41075        115       63.5876k/s [BEST: throughput=  0.39 GB/s doc_throughput=   615 docs/s instructions=    13289861 cycles=     5190007 branch_miss=   26201 cache_miss=    7089 cache_ref=     14110 items=       115 avg_time=   1808528 ns]
distinct_user_id<nlohmann_json>/manual_time              9483471 ns      9574645 ns           76         127.835k           70.3755M              18        97.783k    28.6121M               45.307           111.439       3.18851G          75.7428M                    119.938                     2.64723           12.8155k    141.147k   631.515k       63.5062M/s    115.421   105.402k   30.2467M         47.8955    105.447/s 3.18942G/s     74.3685M               117.762                2.45873        115       12.1264k/s [BEST: throughput=  0.07 GB/s doc_throughput=   111 docs/s instructions=    75742757 cycles=    28612072 branch_miss=  127835 cache_miss=      18 cache_ref=     97783 items=       115 avg_time=   9483470 ns]
find_tweet<simdjson_dom>/manual_time                      289128 ns       364554 ns         2423           3.506k            2.1992G              14        29.608k     917.22k              1.45241          3.48242k       3.19414G          2.83251M                    4.48526                     3.08815           3.48242k     3.5851k   631.515k        2.0342G/s    20.7833   29.6652k   922.578k          1.4609   3.45867k/s  3.1909G/s     2.83251M               4.48526                3.07021          1       3.45867k/s [BEST: throughput=  2.20 GB/s doc_throughput=  3482 docs/s instructions=     2832512 cycles=      917220 branch_miss=    3506 cache_miss=      14 cache_ref=     29608 items=         1 avg_time=    289128 ns]
find_tweet<simdjson_ondemand>/manual_time                 123603 ns       188277 ns         5652              811           5.14175G               2         7.275k    392.493k              0.62151          8.14193k       3.19565G          1.37797M                      2.182                     3.51081           8.14193k     843.105   631.515k       4.75833G/s    2.00566   7.31338k   394.616k        0.624872   8.09042k/s 3.19261G/s     1.37797M                 2.182                3.49192          1       8.09042k/s [BEST: throughput=  5.14 GB/s doc_throughput=  8141 docs/s instructions=     1377968 cycles=      392493 branch_miss=     811 cache_miss=       2 cache_ref=      7275 items=         1 avg_time=    123602 ns]
find_tweet<yyjson>/manual_time                            781783 ns       867199 ns          969           9.664k           1.45617G             197         27.23k    1.38512M              2.19334          2.30584k       3.19388G          2.81718M                    4.46098                     2.03388           2.30584k    7.35056k   631.515k       770.367M/s    369.092   20.1225k   1.52536M          2.4154   1.27913k/s 1.95113G/s     2.81764M               4.46172                1.84719          1       1.27913k/s [BEST: throughput=  1.46 GB/s doc_throughput=  2305 docs/s instructions=     2817178 cycles=     1385124 branch_miss=    9664 cache_miss=     197 cache_ref=     27230 items=         1 avg_time=    781782 ns]
find_tweet<yyjson_insitu>/manual_time                     504680 ns       568550 ns         1000           6.657k           1.81836G          1.181k        12.453k    1.10393M              1.74806          2.87936k       3.17861G          2.81684M                    4.46045                     2.55165           2.87936k    7.20312k   631.515k       1.16538G/s      7.095    5.3236k   1.20909M         1.91459   1.98145k/s 2.39576G/s      2.8171M               4.46086                2.32993          1       1.98145k/s [BEST: throughput=  1.82 GB/s doc_throughput=  2879 docs/s instructions=     2816839 cycles=     1103928 branch_miss=    6657 cache_miss=    1181 cache_ref=     12453 items=         1 avg_time=    504679 ns]
find_tweet<sajson>/manual_time                            776065 ns       845732 ns         1036          10.044k           942.738M               0        12.582k    2.13898M              3.38706          1.49282k       3.19311G          5.72274M                    9.06192                     2.67546           1.49282k    20.6291k   631.515k       776.042M/s    3.05405   12.5666k   2.47549M         3.91992   1.28855k/s 3.18979G/s     5.72274M               9.06192                2.31176          1       1.28855k/s [BEST: throughput=  0.94 GB/s doc_throughput=  1492 docs/s instructions=     5722739 cycles=     2138977 branch_miss=   10044 cache_miss=       0 cache_ref=     12582 items=         1 avg_time=    776065 ns]
find_tweet<rapidjson>/manual_time                        2769616 ns      2839538 ns          254          29.125k           252.543M          6.741k        21.356k    7.98378M              12.6423             399.9       3.19271G          21.7392M                    34.4239                     2.72292              399.9    30.4721k   631.515k       217.452M/s    664.181   10.7227k   8.16395M         12.9276    361.061/s 2.94768G/s     21.7398M               34.4248                 2.6629          1        361.061/s [BEST: throughput=  0.25 GB/s doc_throughput=   399 docs/s instructions=    21739181 cycles=     7983781 branch_miss=   29125 cache_miss=    6741 cache_ref=     21356 items=         1 avg_time=   2769615 ns]
find_tweet<rapidjson_insitu>/manual_time                 1781998 ns      1849591 ns          398          40.077k           363.832M          6.857k        17.877k    5.50756M              8.72119           576.126       3.17305G          13.2126M                     20.922                     2.39899            576.126    33.5608k   631.515k       337.969M/s   1.64001k   8.88993k   5.37359M         8.50905    561.168/s 3.01549G/s     13.2118M               20.9208                2.45866          1        561.168/s [BEST: throughput=  0.36 GB/s doc_throughput=   576 docs/s instructions=    13212581 cycles=     5507562 branch_miss=   40077 cache_miss=    6857 cache_ref=     17877 items=         1 avg_time=   1781997 ns]
find_tweet<nlohmann_json>/manual_time                    8211105 ns      8300206 ns           89         101.282k           81.9253M              40        76.407k    24.5858M              38.9314           129.728       3.18947G          65.8708M                    104.306                     2.67923            129.728    116.647k   631.515k        73.347M/s    109.045   82.0665k   26.1892M         41.4704    121.786/s 3.18948G/s     64.4845M               102.111                2.46225          1        121.786/s [BEST: throughput=  0.08 GB/s doc_throughput=   129 docs/s instructions=    65870833 cycles=    24585759 branch_miss=  101282 cache_miss=      40 cache_ref=     76407 items=         1 avg_time=   8211105 ns]
top_tweet<simdjson_dom>/manual_time                       296598 ns       377284 ns         2357           3.559k           2.14618G               0        32.023k    939.787k              1.48815          3.39846k       3.19383G           2.8694M                    4.54368                     3.05324           3.39846k    3.69452k   631.515k       1.98297G/s    0.16207   32.0975k   946.325k          1.4985   3.37157k/s  3.1906G/s      2.8694M               4.54368                3.03215          1       3.37157k/s [BEST: throughput=  2.15 GB/s doc_throughput=  3398 docs/s instructions=     2869399 cycles=      939787 branch_miss=    3559 cache_miss=       0 cache_ref=     32023 items=         1 avg_time=    296597 ns]
top_tweet<simdjson_ondemand>/manual_time                  171210 ns       237582 ns         4084           1.435k           3.71882G               2         8.394k    542.609k             0.859218          5.88873k       3.19528G          1.90456M                    3.01587                     3.51001           5.88873k    1.52658k   631.515k       3.43523G/s    2.16724   8.30115k   546.486k        0.865357   5.84079k/s 3.19191G/s     1.90456M               3.01587                3.48511          1       5.84079k/s [BEST: throughput=  3.72 GB/s doc_throughput=  5888 docs/s instructions=     1904564 cycles=      542609 branch_miss=    1435 cache_miss=       2 cache_ref=      8394 items=         1 avg_time=    171209 ns]
top_tweet<simdjson_ondemand_forward_only>/manual_time     192802 ns       259977 ns         3629           1.782k           3.30698G               0         8.935k    610.026k             0.965972          5.23659k       3.19446G          2.13002M                    3.37288                     3.49169           5.23659k    1.92778k   631.515k        3.0505G/s   0.125379    8.9942k   615.328k        0.974368   5.18666k/s  3.1915G/s     2.13002M               3.37288                 3.4616          1       5.18666k/s [BEST: throughput=  3.31 GB/s doc_throughput=  5236 docs/s instructions=     2130022 cycles=      610026 branch_miss=    1782 cache_miss=       0 cache_ref=      8935 items=         1 avg_time=    192802 ns]
top_tweet<yyjson>/manual_time                             793744 ns       883975 ns          990            9.89k           1.43653G             259        27.395k    1.40426M              2.22364          2.27473k       3.19432G          2.84445M                    4.50417                     2.02558           2.27473k    7.58243k   631.515k       758.758M/s    432.708   22.7583k   1.56244M         2.47412   1.25985k/s 1.96845G/s     2.84492M                4.5049                1.82081          1       1.25985k/s [BEST: throughput=  1.44 GB/s doc_throughput=  2274 docs/s instructions=     2844453 cycles=     1404263 branch_miss=    9890 cache_miss=     259 cache_ref=     27395 items=         1 avg_time=    793743 ns]
top_tweet<yyjson_insitu>/manual_time                      513678 ns       585016 ns         1374           6.783k           1.79037G          1.132k        13.214k    1.12086M              1.77488          2.83504k       3.17768G          2.84411M                    4.50364                     2.53744           2.83504k     7.2612k   631.515k       1.14497G/s    49.1739   7.88503k   1.23686M         1.95857   1.94674k/s 2.40786G/s     2.84438M               4.50405                2.29967          1       1.94674k/s [BEST: throughput=  1.79 GB/s doc_throughput=  2835 docs/s instructions=     2844114 cycles=     1120861 branch_miss=    6783 cache_miss=    1132 cache_ref=     13214 items=         1 avg_time=    513678 ns]
top_tweet<sajson>/manual_time                             678917 ns       753119 ns         1031          10.197k           936.728M               2        13.286k    2.15254M              3.40854           1.4833k       3.19287G          5.75273M                    9.10941                     2.67253            1.4833k    10.5936k   631.515k       887.089M/s    3.43065    13.152k   2.16583M         3.42957   1.47293k/s 3.19012G/s     5.75273M               9.10941                2.65614          1       1.47293k/s [BEST: throughput=  0.94 GB/s doc_throughput=  1483 docs/s instructions=     5752730 cycles=     2152543 branch_miss=   10197 cache_miss=       2 cache_ref=     13286 items=         1 avg_time=    678916 ns]
top_tweet<rapidjson>/manual_time                         2780117 ns      2854810 ns          252          29.738k           250.984M           9.36k        22.115k    8.03337M              12.7208           397.431       3.19271G          21.7985M                    34.5177                     2.71349            397.431    30.8022k   631.515k       216.631M/s     767.21   11.3728k   8.19793M         12.9814    359.697/s 2.94877G/s     21.7993M               34.5191                2.65913          1        359.697/s [BEST: throughput=  0.25 GB/s doc_throughput=   397 docs/s instructions=    21798473 cycles=     8033373 branch_miss=   29738 cache_miss=    9360 cache_ref=     22115 items=         1 avg_time=   2780116 ns]
top_tweet<rapidjson_insitu>/manual_time                  1806550 ns      1879957 ns          375          25.801k           358.948M              79         9.024k    5.20638M              8.24427           568.392       2.95927G          13.2672M                    21.0085                     2.54826            568.392    38.1144k   631.515k       333.376M/s   2.69649k   10.9269k   5.50914M         8.72368    553.541/s 3.04953G/s     13.2669M                21.008                2.40816          1        553.541/s [BEST: throughput=  0.36 GB/s doc_throughput=   568 docs/s instructions=    13267209 cycles=     5206380 branch_miss=   25801 cache_miss=      79 cache_ref=      9024 items=         1 avg_time=   1806549 ns]
top_tweet<nlohmann_json>/manual_time                    11080934 ns     11173330 ns           63         191.465k           57.3358M             290        166.49k    35.1269M              55.6233           90.7908        3.1892G          87.7997M                     139.03                      2.4995            90.7908    196.787k   631.515k        54.351M/s    266.127   165.054k   35.3392M         55.9594    90.2451/s 3.18919G/s     88.0956M               139.499                2.49286          1        90.2451/s [BEST: throughput=  0.06 GB/s doc_throughput=    90 docs/s instructions=    87799661 cycles=    35126932 branch_miss=  191465 cache_miss=     290 cache_ref=    166490 items=         1 avg_time=  11080934 ns]
