run_benchmark: v0.8.0 /home/jkeiser/simdjson_benchmark_results/v0.8.0/skylake-x-clang11.json -DCMAKE_BUILD_TYPE=Release
git reset --hard v0.8.0
HEAD is now at c96ff018 Version 0.8.
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The CXX compiler identification is Clang 11.0.0
-- The C compiler identification is Clang 11.0.0
-- Check for working CXX compiler: /usr/bin/clang++-11
-- Check for working CXX compiler: /usr/bin/clang++-11 -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Check for working C compiler: /usr/bin/clang-11
-- Check for working C compiler: /usr/bin/clang-11 -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed
-- Check if compiler accepts -pthread
-- Check if compiler accepts -pthread - yes
-- Found Threads: TRUE  
-- Looking for fork
-- Looking for fork - found
-- Looking for wait
-- Looking for wait - found
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- Found Git: /usr/bin/git (found version "2.27.0") 
-- git Version: v0.2.1-c96ff018
-- Version: 0.2.1
-- Performing Test HAVE_CXX_FLAG_STD_CXX11
-- Performing Test HAVE_CXX_FLAG_STD_CXX11 - Success
-- Performing Test HAVE_CXX_FLAG_WALL
-- Performing Test HAVE_CXX_FLAG_WALL - Success
-- Performing Test HAVE_CXX_FLAG_WEXTRA
-- Performing Test HAVE_CXX_FLAG_WEXTRA - Success
-- Performing Test HAVE_CXX_FLAG_WSHADOW
-- Performing Test HAVE_CXX_FLAG_WSHADOW - Success
-- Performing Test HAVE_CXX_FLAG_WERROR
-- Performing Test HAVE_CXX_FLAG_WERROR - Success
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32 - Success
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED - Success
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WD654
-- Performing Test HAVE_CXX_FLAG_WD654 - Failed
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY - Success
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES -- failed to compile
-- Performing Test HAVE_CXX_FLAG_COVERAGE
-- Performing Test HAVE_CXX_FLAG_COVERAGE - Success
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Performing Test USE_BOOST_JSON
-- Performing Test USE_BOOST_JSON - Failed
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Found Python3: /usr/bin/python3.8 (found version "3.8.6") found components: Interpreter 
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 10
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
Scanning dependencies of target benchmark
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_api_internal.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_name.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_name.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_register.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_register.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_runner.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_runner.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/colorprint.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/colorprint.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/commandlineflags.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/commandlineflags.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/complexity.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/complexity.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/console_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/console_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/counter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/counter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/csv_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/csv_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/json_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/json_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/sleep.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sleep.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/statistics.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/statistics.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/string_util.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/string_util.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/sysinfo.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sysinfo.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/timers.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/timers.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -P CMakeFiles/benchmark.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/benchmark.dir/link.txt --verbose=1
/usr/bin/ar qc libbenchmark.a  CMakeFiles/benchmark.dir/benchmark.cc.o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o CMakeFiles/benchmark.dir/benchmark_name.cc.o CMakeFiles/benchmark.dir/benchmark_register.cc.o CMakeFiles/benchmark.dir/benchmark_runner.cc.o CMakeFiles/benchmark.dir/colorprint.cc.o CMakeFiles/benchmark.dir/commandlineflags.cc.o CMakeFiles/benchmark.dir/complexity.cc.o CMakeFiles/benchmark.dir/console_reporter.cc.o CMakeFiles/benchmark.dir/counter.cc.o CMakeFiles/benchmark.dir/csv_reporter.cc.o CMakeFiles/benchmark.dir/json_reporter.cc.o CMakeFiles/benchmark.dir/reporter.cc.o CMakeFiles/benchmark.dir/sleep.cc.o CMakeFiles/benchmark.dir/statistics.cc.o CMakeFiles/benchmark.dir/string_util.cc.o CMakeFiles/benchmark.dir/sysinfo.cc.o CMakeFiles/benchmark.dir/timers.cc.o
/usr/bin/ranlib libbenchmark.a
[ 80%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
Scanning dependencies of target generated-data
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated && /usr/bin/ruby genfeaturejson.rb /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-miss.json ...
[ 80%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/clang++-11  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/include  -O3 -DNDEBUG -fPIC   -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -pthread -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/clang++-11 -fPIC -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.7 -o ../libsimdjson.so.7.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.7.0.0 ../libsimdjson.so.7 ../libsimdjson.so
[ 80%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
Scanning dependencies of target yyjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/clang-11  -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src  -O3 -DNDEBUG   -o CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o   -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src/yyjson.c
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -P CMakeFiles/yyjson.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -E cmake_link_script CMakeFiles/yyjson.dir/link.txt --verbose=1
/usr/bin/ar qc libyyjson.a  CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o
/usr/bin/ranlib libyyjson.a
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/clang++-11  -DRAPIDJSON_HAS_STDSTRING -DSAJSON_UNSORTED_OBJECT_KEYS -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_COMPETITION_NLOHMANN_JSON -DSIMDJSON_COMPETITION_RAPIDJSON -DSIMDJSON_COMPETITION_SAJSON -DSIMDJSON_COMPETITION_YYJSON -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/rapidjson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/sajson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/json  -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/clang++-11  -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.7.0.0 ../_deps/google_benchmarks/src/libbenchmark.a ../dependencies/libyyjson.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.8.0/skylake-x-clang11.json --benchmark_out_format=json
2021-01-25 01:00:02
Running benchmark/bench_ondemand
Run on (4 X 3200 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 1024 KiB (x4)
  L3 Unified 8448 KiB (x1)
Load Average: 1.00, 0.94, 0.61
***WARNING*** CPU scaling is enabled, the benchmark real time measurements may be noisy and will incur extra overhead.
simdjson::dom implementation:      haswell
simdjson::ondemand implementation: fallback

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                  316408 ns       384234 ns         2223           3.489k           2.01131G               0        33.627k    1002.83k              1.58797           3.1849k       3.19389G          2.98281M                    4.72326                     2.97441            318.49k    3.58591k   631.515k       1.85882G/s    1.09852   33.5276k   1009.53k         1.59858   3.16048k/s 3.19058G/s     2.98281M               4.72326                2.95467        100       316.048k/s [BEST: throughput=  2.01 GB/s doc_throughput=  3184 docs/s instructions=     2982809 cycles=     1002825 branch_miss=    3489 cache_miss=       0 cache_ref=     33627 items=       100 avg_time=    316407 ns]
partial_tweets<simdjson_ondemand>/manual_time             223633 ns       275970 ns         3130           2.146k           2.84876G               0           8.7k    708.163k              1.12137          4.51099k       3.19451G          2.26558M                    3.58754                     3.19924           451.099k    2.30396k   631.515k       2.62996G/s  0.0578275   8.75165k   713.614k            1.13   4.47162k/s 3.19101G/s     2.26558M               3.58754                 3.1748        100       447.162k/s [BEST: throughput=  2.85 GB/s doc_throughput=  4510 docs/s instructions=     2265584 cycles=      708163 branch_miss=    2146 cache_miss=       0 cache_ref=      8700 items=       100 avg_time=    223632 ns]
partial_tweets<yyjson>/manual_time                        792537 ns       869661 ns          882           9.672k           1.42309G             259        28.055k    1.41752M              2.24464          2.25346k       3.19433G          2.91991M                    4.62366                     2.05987           225.346k    7.60052k   631.515k       759.914M/s    643.085   26.0392k   1.57107M         2.48778   1.26177k/s 1.98233G/s      2.9206M               4.62476                1.85899        100       126.177k/s [BEST: throughput=  1.42 GB/s doc_throughput=  2253 docs/s instructions=     2919910 cycles=     1417521 branch_miss=    9672 cache_miss=     259 cache_ref=     28055 items=       100 avg_time=    792536 ns]
partial_tweets<yyjson_insitu>/manual_time                 518564 ns       581402 ns         1363            6.78k            1.7513G          1.882k        14.115k    1.14326M              1.81035          2.77317k       3.17047G           2.9198M                    4.62349                     2.55392           277.317k     7.3721k   631.515k       1.13418G/s    137.459   12.2176k   1.25942M         1.99428    1.9284k/s 2.42866G/s     2.92006M                4.6239                2.31858        100        192.84k/s [BEST: throughput=  1.75 GB/s doc_throughput=  2773 docs/s instructions=     2919803 cycles=     1143264 branch_miss=    6780 cache_miss=    1882 cache_ref=     14115 items=       100 avg_time=    518564 ns]
partial_tweets<sajson>/manual_time                        690510 ns       751942 ns         1014          10.351k           920.173M             107        13.253k    2.19138M              3.47003          1.45709k       3.19303G          5.87949M                    9.31014                     2.68301           145.709k    10.7035k   631.515k       872.195M/s    80.5296    13.293k   2.20268M         3.48792    1.4482k/s 3.18993G/s      5.8795M               9.31014                2.66925        100        144.82k/s [BEST: throughput=  0.92 GB/s doc_throughput=  1457 docs/s instructions=     5879495 cycles=     2191377 branch_miss=   10351 cache_miss=     107 cache_ref=     13253 items=       100 avg_time=    690510 ns]
partial_tweets<rapidjson>/manual_time                    2796679 ns      2862668 ns          249          29.998k            249.47M          9.895k        22.758k    8.08202M              12.7978           395.034       3.19267G          21.8958M                    34.6718                     2.70919           39.5034k    30.8709k   631.515k       215.348M/s    526.695   16.2849k    8.2391M         13.0466    357.567/s 2.94603G/s     21.8966M               34.6731                2.65764        100       35.7567k/s [BEST: throughput=  0.25 GB/s doc_throughput=   395 docs/s instructions=    21895753 cycles=     8082021 branch_miss=   29998 cache_miss=    9895 cache_ref=     22758 items=       100 avg_time=   2796679 ns]
partial_tweets<rapidjson_insitu>/manual_time             1774482 ns      1834281 ns          396          25.923k           390.121M             256        14.757k    5.16848M              8.18425           617.755       3.19285G          13.3568M                    21.1504                     2.58428           61.7755k    26.5882k   631.515k         339.4M/s    247.677   10.4333k   5.26186M         8.33212    563.545/s 2.96529G/s     13.3572M                21.151                2.53849        100       56.3545k/s [BEST: throughput=  0.39 GB/s doc_throughput=   617 docs/s instructions=    13356805 cycles=     5168478 branch_miss=   25923 cache_miss=     256 cache_ref=     14757 items=       100 avg_time=   1774482 ns]
partial_tweets<nlohmann_json>/manual_time                9950623 ns     10036149 ns           70         151.132k           65.6112M              14        98.901k    30.6942M              48.6041           103.895       3.18897G          80.2472M                    127.071                     2.61441           10.3895k    161.991k   631.515k       60.5248M/s    61.8286   132.144k   31.7275M         50.2403    100.496/s 3.18849G/s     80.4114M               127.331                2.53444        100       10.0496k/s [BEST: throughput=  0.07 GB/s doc_throughput=   103 docs/s instructions=    80247183 cycles=    30694212 branch_miss=  151132 cache_miss=      14 cache_ref=     98901 items=       100 avg_time=   9950622 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                  99609901 ns    105475579 ns            7         929.468k           462.568M        6.85381M       6.89537M    317.063M              6.89286           10.0561       3.18841G          1038.74M                    22.5819                     3.27613           10.0561M    941.347k   45.9988M       440.396M/s   6.81979M   6.89545M   317.549M         6.90342    10.0392/s 3.18792G/s     1038.74M               22.5819                3.27111      1000k       10.0392M/s [BEST: throughput=  0.46 GB/s doc_throughput=    10 docs/s instructions=  1038738117 cycles=   317062966 branch_miss=  929468 cache_miss= 6853811 cache_ref=   6895374 items=   1000000 avg_time=  99609901 ns]
large_random<simdjson_ondemand>/manual_time             72911254 ns     78754610 ns           10         928.393k           631.236M        3.50869M       3.57318M    232.381M              5.05189           13.7229       3.18893G          672.195M                    14.6133                     2.89265           13.7229M    928.863k   45.9988M       601.661M/s   3.52903M   3.57326M   232.465M         5.05372    13.7153/s 3.18833G/s     672.195M               14.6133                 2.8916      1000k       13.7153M/s [BEST: throughput=  0.63 GB/s doc_throughput=    13 docs/s instructions=   672194585 cycles=   232380576 branch_miss=  928393 cache_miss= 3508687 cache_ref=   3573176 items=   1000000 avg_time=  72911253 ns]
large_random<simdjson_ondemand_unordered>/manual_time   73023121 ns     78895427 ns           10         992.615k           630.709M         3.4996M       3.57311M    232.577M              5.05615           13.7114       3.18896G          669.195M                    14.5481                     2.87731           13.7114M    999.863k   45.9988M       600.739M/s   3.51927M   3.57317M   232.808M         5.06117    13.6943/s 3.18814G/s     669.195M               14.5481                2.87445      1000k       13.6943M/s [BEST: throughput=  0.63 GB/s doc_throughput=    13 docs/s instructions=   669194598 cycles=   232576571 branch_miss=  992615 cache_miss= 3499601 cache_ref=   3573109 items=   1000000 avg_time=  73023121 ns]
large_random<yyjson>/manual_time                       153683730 ns    159598326 ns            5         734.523k           299.392M        4.21006M       5.29975M    351.566M              7.64295           6.50869       2.28824G          855.681M                    18.6023                     2.43391           6.50869M    734.722k   45.9988M       285.442M/s   4.20947M   5.28549M   351.796M         7.64793    6.50687/s 2.28909G/s     855.681M               18.6023                2.43232      1000k       6.50687M/s [BEST: throughput=  0.30 GB/s doc_throughput=     6 docs/s instructions=   855680758 cycles=   351566196 branch_miss=  734523 cache_miss= 4210063 cache_ref=   5299753 items=   1000000 avg_time= 153683729 ns]
large_random<yyjson_insitu>/manual_time                127776273 ns    133732408 ns            5         734.615k           360.105M        3.49177M       4.56536M    309.098M              6.71969           7.82858       2.41979G           849.56M                    18.4692                     2.74852           7.82858M    734.921k   45.9988M       343.318M/s   3.49271M    4.5572M   309.289M         6.72386    7.82618/s 2.42055G/s      849.56M               18.4692                2.74681      1000k       7.82618M/s [BEST: throughput=  0.36 GB/s doc_throughput=     7 docs/s instructions=   849559987 cycles=   309097637 branch_miss=  734615 cache_miss= 3491768 cache_ref=   4565362 items=   1000000 avg_time= 127776272 ns]
large_random<sajson>/manual_time                       109059671 ns    115005580 ns            6         589.704k           422.589M        5.50906M       5.57732M    347.064M              7.54507           9.18697       3.18847G          1.12599G                    24.4787                     3.24433           9.18697M    590.852k   45.9988M       402.237M/s   5.47735M   5.57733M   347.665M         7.55813    9.16929/s 3.18784G/s     1.12599G               24.4787                3.23873      1000k       9.16929M/s [BEST: throughput=  0.42 GB/s doc_throughput=     9 docs/s instructions=  1125990577 cycles=   347064110 branch_miss=  589704 cache_miss= 5509062 cache_ref=   5577318 items=   1000000 avg_time= 109059670 ns]
large_random<rapidjson>/manual_time                    253930637 ns    259831474 ns            3         591.611k           187.574M        4.33974M       5.21681M    713.526M              15.5118           4.07779       2.90961G          2.01413G                    43.7865                     2.82278           4.07779M    647.566k   45.9988M       172.755M/s   4.07075M   5.14896M   719.457M         15.6408    3.93808/s 2.83328G/s     2.01414G               43.7867                2.79952      1000k       3.93808M/s [BEST: throughput=  0.19 GB/s doc_throughput=     4 docs/s instructions=  2014126173 cycles=   713525628 branch_miss=  591611 cache_miss= 4339742 cache_ref=   5216807 items=   1000000 avg_time= 253930637 ns]
large_random<rapidjson_lossless>/manual_time           287853574 ns    293726150 ns            3          587.25k           164.407M        4.34945M       5.21396M    824.046M              17.9145           3.57416       2.94527G          2.47909G                    53.8948                     3.00844           3.57416M     587.17k   45.9988M       152.396M/s   4.08173M    5.1471M   828.162M          18.004    3.47399/s 2.87702G/s      2.4791G                53.895                 2.9935      1000k       3.47399M/s [BEST: throughput=  0.16 GB/s doc_throughput=     3 docs/s instructions=  2479093253 cycles=   824046041 branch_miss=  587250 cache_miss= 4349448 cache_ref=   5213959 items=   1000000 avg_time= 287853573 ns]
large_random<rapidjson_insitu>/manual_time             276419591 ns    282309849 ns            3         585.609k           171.387M        5.02903M       5.93457M    788.106M              17.1332            3.7259        2.9364G          1.73613G                    37.7429                     2.20291            3.7259M     585.32k   45.9988M         158.7M/s   4.78093M   5.86837M   792.128M         17.2206    3.61769/s 2.86567G/s     1.73613G               37.7431                2.19174      1000k       3.61769M/s [BEST: throughput=  0.17 GB/s doc_throughput=     3 docs/s instructions=  1736125975 cycles=   788105590 branch_miss=  585609 cache_miss= 5029032 cache_ref=   5934572 items=   1000000 avg_time= 276419591 ns]
large_random<nlohmann_json>/manual_time               1469859432 ns   1475747050 ns            1         4.11619M           31.2947M        30.2754M       31.0696M     4.6731G              101.592          0.680337       3.17928G          12.7486G                     277.15                     2.72807           680.337k    4.11619M   45.9988M       29.8449M/s   30.2754M   31.0696M    4.6731G         101.592   0.680337/s 3.17928G/s     12.7486G                277.15                2.72807      1000k       680.337k/s [BEST: throughput=  0.03 GB/s doc_throughput=     0 docs/s instructions= 12748553826 cycles=  4673095401 branch_miss= 4116192 cache_miss=30275388 cache_ref=  31069554 items=   1000000 avg_time=1469859432 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                       104237154 ns    122486561 ns            7         1016.63k           1.31853G        10.1919M       10.3181M    332.058M               2.4184            9.6029       3.18872G          984.675M                    7.17144                     2.96537           5.03468M    1016.64k   137.305M       1.22677G/s    10.239M   10.3182M   332.348M         2.42051    9.59351/s 3.18838G/s     984.675M               7.17144                2.96279   524.288k       5.02976M/s [BEST: throughput=  1.32 GB/s doc_throughput=     9 docs/s instructions=   984674902 cycles=   332057852 branch_miss= 1016630 cache_miss=10191864 cache_ref=  10318113 items=    524288 avg_time= 104237153 ns]
kostya<simdjson_ondemand>/manual_time                   66861544 ns     85117986 ns           10         460.395k           2.05594G        6.43529M        6.4712M    212.951M              1.55094           14.9735       3.18863G          650.941M                    4.74084                     3.05676           7.85043M    459.241k   137.305M       1.91254G/s   6.43929M   6.47103M   213.173M         1.55255    14.9563/s 3.18827G/s     650.941M               4.74084                3.05358   524.288k        7.8414M/s [BEST: throughput=  2.06 GB/s doc_throughput=    14 docs/s instructions=   650940583 cycles=   212951416 branch_miss=  460395 cache_miss= 6435291 cache_ref=   6471196 items=    524288 avg_time=  66861544 ns]
kostya<yyjson>/manual_time                             228589064 ns    246863761 ns            3         425.998k           601.064M        8.50138M       9.79883M    498.367M              3.62963           4.37758       2.18164G          974.185M                    7.09504                     1.95476           2.29511M    424.474k   137.305M       572.837M/s   8.50182M   9.76193M   498.375M          3.6297    4.37466/s 2.18022G/s     974.185M               7.09504                1.95472   524.288k       2.29358M/s [BEST: throughput=  0.60 GB/s doc_throughput=     4 docs/s instructions=   974184817 cycles=   498366708 branch_miss=  425998 cache_miss= 8501384 cache_ref=   9798830 items=    524288 avg_time= 228589064 ns]
kostya<yyjson_insitu>/manual_time                      151059307 ns    169310934 ns            5         413.713k           909.234M        6.36313M       7.65043M    370.881M              2.70114             6.622       2.45597G          955.915M                    6.96198                     2.57742           3.47184M    413.507k   137.305M        866.84M/s   6.36415M   7.63207M   370.956M         2.70169    6.61992/s  2.4557G/s     955.915M               6.96198                 2.5769   524.288k       3.47074M/s [BEST: throughput=  0.91 GB/s doc_throughput=     6 docs/s instructions=   955915036 cycles=   370880635 branch_miss=  413713 cache_miss= 6363131 cache_ref=   7650434 items=    524288 avg_time= 151059307 ns]
kostya<sajson>/manual_time                             173335347 ns    191549075 ns            4         399.108k           793.741M        8.52007M       8.54074M    551.651M               4.0177           5.78086       3.18902G          1.53761G                    11.1985                     2.78729           3.03084M    399.628k   137.305M       755.439M/s   8.49012M   8.54059M   552.681M          4.0252    5.76916/s 3.18851G/s     1.53761G               11.1985                2.78209   524.288k        3.0247M/s [BEST: throughput=  0.79 GB/s doc_throughput=     5 docs/s instructions=  1537609243 cycles=   551650958 branch_miss=  399108 cache_miss= 8520068 cache_ref=   8540742 items=    524288 avg_time= 173335346 ns]
kostya<rapidjson>/manual_time                          331463182 ns    349780728 ns            2         1027.05k           418.418M        5.19537M       6.47215M    948.877M              6.91072           3.04736       2.89157G          2.73711G                    19.9346                     2.88458            1.5977M     1021.1k   137.305M       395.049M/s   5.07357M   6.43734M   950.899M         6.92545    3.01693/s 2.86879G/s     2.73712G               19.9346                2.87845   524.288k       1.58174M/s [BEST: throughput=  0.42 GB/s doc_throughput=     3 docs/s instructions=  2737114309 cycles=   948876783 branch_miss= 1027054 cache_miss= 5195370 cache_ref=   6472145 items=    524288 avg_time= 331463181 ns]
kostya<rapidjson_lossless>/manual_time                 347843237 ns    366156284 ns            2         1056.36k           398.472M         5.1959M       6.47569M    1002.02M              7.29777            2.9021       2.90796G          3.00606G                    21.8933                           3           1.52153M    1053.21k   137.305M       376.446M/s   5.07357M    6.4433M   1003.85M         7.31113    2.87486/s 2.88594G/s     3.00607G               21.8933                2.99452   524.288k       1.50725M/s [BEST: throughput=  0.40 GB/s doc_throughput=     2 docs/s instructions=  3006064741 cycles=  1002019934 branch_miss= 1056364 cache_miss= 5195898 cache_ref=   6475689 items=    524288 avg_time= 347843237 ns]
kostya<rapidjson_insitu>/manual_time                   319328704 ns    337603897 ns            2         973.647k           435.925M         7.3295M       8.62861M    908.139M              6.61403           3.17487       2.88322G          2.21988G                    16.1675                     2.44443           1.66454M    1.12314M   137.305M       410.061M/s   7.20602M   8.59468M   913.706M         6.65458    3.13157/s 2.86134G/s     2.21988G               16.1675                2.42953   524.288k       1.64184M/s [BEST: throughput=  0.44 GB/s doc_throughput=     3 docs/s instructions=  2219878905 cycles=   908139441 branch_miss=  973647 cache_miss= 7329499 cache_ref=   8628612 items=    524288 avg_time= 319328703 ns]
kostya<nlohmann_json>/manual_time                     2312703374 ns   2330960513 ns            1         14.2762M           59.3699M        44.7713M       45.4079M    7.37641G              53.7228          0.432394       3.18952G          17.7632G                     129.37                     2.40811           226.699k    14.2762M   137.305M       56.6196M/s   44.7713M   45.4079M   7.37641G         53.7228   0.432394/s 3.18952G/s     17.7632G                129.37                2.40811   524.288k       226.699k/s [BEST: throughput=  0.06 GB/s doc_throughput=     0 docs/s instructions= 17763208486 cycles=  7376412972 branch_miss=14276229 cache_miss=44771306 cache_ref=  45407874 items=    524288 avg_time=2312703374 ns]
distinct_user_id<simdjson_dom>/manual_time                302367 ns       378871 ns         2312           3.689k           2.10785G               0        34.138k    956.822k              1.51512          3.33776k       3.19364G          2.91783M                    4.62037                      3.0495           383.843k    3.81596k   631.515k       1.94513G/s   0.147924   34.0626k   964.772k         1.52771   3.30724k/s 3.19073G/s     2.91783M               4.62037                3.02438        115       380.332k/s [BEST: throughput=  2.11 GB/s doc_throughput=  3337 docs/s instructions=     2917832 cycles=      956822 branch_miss=    3689 cache_miss=       0 cache_ref=     34138 items=       115 avg_time=    302367 ns]
distinct_user_id<simdjson_ondemand>/manual_time           176149 ns       235496 ns         3973           1.701k           3.63814G              13         7.915k    554.553k             0.878131          5.76097k       3.19476G          1.88384M                    2.98304                     3.39704           662.511k    1.76662k   631.515k       3.33889G/s     12.748   7.92768k   562.216k        0.890266     5.677k/s  3.1917G/s     1.88384M               2.98304                3.35073        115       652.855k/s [BEST: throughput=  3.64 GB/s doc_throughput=  5760 docs/s instructions=     1883837 cycles=      554553 branch_miss=    1701 cache_miss=      13 cache_ref=      7915 items=       115 avg_time=    176149 ns]
distinct_user_id<yyjson>/manual_time                      687605 ns       774431 ns         1000           6.447k           1.54497G          7.127k        27.323k    1.30544M              2.06715          2.44645k       3.19369G          2.87797M                    4.55725                      2.2046           281.342k      7.407k   631.515k       875.881M/s    2.2775k   26.1852k   1.49251M         2.36338   1.45432k/s 2.17059G/s     2.87843M               4.55798                1.92859        115       167.247k/s [BEST: throughput=  1.54 GB/s doc_throughput=  2446 docs/s instructions=     2877971 cycles=     1305438 branch_miss=    6447 cache_miss=    7127 cache_ref=     27323 items=       115 avg_time=    687604 ns]
distinct_user_id<yyjson_insitu>/manual_time               513694 ns       586021 ns         1375           7.345k           1.76402G             125        14.891k    1.14339M              1.81055          2.79332k       3.19385G          2.87754M                    4.55656                     2.51668           321.232k    7.46379k   631.515k       1.14493G/s    128.567   12.0824k   1.24453M         1.97071   1.94668k/s 2.42271G/s      2.8778M               4.55698                2.31235        115       223.868k/s [BEST: throughput=  1.76 GB/s doc_throughput=  2793 docs/s instructions=     2877537 cycles=     1143388 branch_miss=    7345 cache_miss=     125 cache_ref=     14891 items=       115 avg_time=    513694 ns]
distinct_user_id<sajson>/manual_time                      685730 ns       754035 ns         1022          10.193k           927.614M               0        13.176k    2.17388M              3.44233          1.46887k       3.19315G          5.81793M                    9.21266                     2.67629            168.92k    10.6193k   631.515k       878.275M/s    2.01272   13.2584k   2.18766M         3.46414    1.4583k/s 3.19026G/s     5.81793M               9.21266                2.65943        115       167.705k/s [BEST: throughput=  0.93 GB/s doc_throughput=  1468 docs/s instructions=     5817932 cycles=     2173880 branch_miss=   10193 cache_miss=       0 cache_ref=     13176 items=       115 avg_time=    685729 ns]
distinct_user_id<rapidjson>/manual_time                  2787551 ns      2861758 ns          252          30.254k           250.292M             809        23.474k    8.05551M              12.7559           396.336       3.19269G          21.8227M                    34.5561                     2.70904           45.5787k    31.1113k   631.515k       216.053M/s    972.187   16.9845k    8.2323M         13.0358    358.738/s 2.95324G/s     21.8236M               34.5575                2.65097        115       41.2549k/s [BEST: throughput=  0.25 GB/s doc_throughput=   396 docs/s instructions=    21822678 cycles=     8055514 branch_miss=   30254 cache_miss=     809 cache_ref=     23474 items=       115 avg_time=   2787550 ns]
distinct_user_id<rapidjson_insitu>/manual_time           1809057 ns      1878358 ns          375          25.906k           388.909M          7.119k        14.405k    5.18444M              8.20953           615.836       3.19276G          13.2896M                     21.044                     2.56337           70.8211k    37.7988k   631.515k       332.914M/s   2.80058k   12.7069k    5.5205M         8.74168    552.774/s 3.05159G/s     13.2901M               21.0447                 2.4074        115        63.569k/s [BEST: throughput=  0.39 GB/s doc_throughput=   615 docs/s instructions=    13289624 cycles=     5184439 branch_miss=   25906 cache_miss=    7119 cache_ref=     14405 items=       115 avg_time=   1809057 ns]
distinct_user_id<nlohmann_json>/manual_time              9804595 ns      9892763 ns           76          125.51k           70.5018M          1.242k        98.658k    28.5618M              45.2274           111.639       3.18861G           75.716M                    119.896                     2.65096           12.8385k    178.816k   631.515k       61.4263M/s    67.0658   105.997k   31.2708M         49.5171    101.993/s  3.1894G/s     74.4125M               117.832                2.37962        115       11.7292k/s [BEST: throughput=  0.07 GB/s doc_throughput=   111 docs/s instructions=    75715972 cycles=    28561762 branch_miss=  125510 cache_miss=    1242 cache_ref=     98658 items=       115 avg_time=   9804594 ns]
find_tweet<simdjson_dom>/manual_time                      287001 ns       359799 ns         2441           3.328k           2.21807G               1        30.128k    909.389k              1.44001           3.5123k       3.19404G          2.83251M                    4.48526                     3.11474            3.5123k    3.47682k   631.515k       2.04928G/s    1.36706   30.0236k   915.779k         1.45013   3.48431k/s 3.19086G/s     2.83251M               4.48526                3.09301          1       3.48431k/s [BEST: throughput=  2.22 GB/s doc_throughput=  3512 docs/s instructions=     2832512 cycles=      909389 branch_miss=    3328 cache_miss=       1 cache_ref=     30128 items=         1 avg_time=    287000 ns]
find_tweet<simdjson_ondemand>/manual_time                 123477 ns       185820 ns         5663              814           5.14523G               3         7.485k    392.058k             0.620821          8.14744k       3.19427G          1.37797M                      2.182                      3.5147           8.14744k     831.664   631.515k       4.76317G/s    1.38089    7.5305k   394.152k        0.624138   8.09865k/s  3.1921G/s     1.37797M                 2.182                3.49603          1       8.09865k/s [BEST: throughput=  5.15 GB/s doc_throughput=  8147 docs/s instructions=     1377968 cycles=      392058 branch_miss=     814 cache_miss=       3 cache_ref=      7485 items=         1 avg_time=    123477 ns]
find_tweet<yyjson>/manual_time                            776199 ns       861088 ns          969           9.606k           1.46611G             199        27.289k    1.37586M              2.17867          2.32157k       3.19416G          2.81716M                    4.46096                     2.04756           2.32157k    7.41359k   631.515k       775.909M/s    457.623   25.0143k   1.52369M         2.41275   1.28833k/s 1.96301G/s     2.81764M               4.46171                1.84922          1       1.28833k/s [BEST: throughput=  1.47 GB/s doc_throughput=  2321 docs/s instructions=     2817163 cycles=     1375861 branch_miss=    9606 cache_miss=     199 cache_ref=     27289 items=         1 avg_time=    776199 ns]
find_tweet<yyjson_insitu>/manual_time                     502234 ns       569659 ns         1000           6.852k           1.81029G          2.196k        12.969k    1.10923M              1.75647          2.86659k       3.17971G          2.81684M                    4.46045                     2.53945           2.86659k     7.2091k   631.515k       1.17106G/s      9.022   10.4865k   1.20848M         1.91363   1.99111k/s 2.40622G/s      2.8171M               4.46086                 2.3311          1       1.99111k/s [BEST: throughput=  1.81 GB/s doc_throughput=  2866 docs/s instructions=     2816839 cycles=     1109234 branch_miss=    6852 cache_miss=    2196 cache_ref=     12969 items=         1 avg_time=    502233 ns]
find_tweet<sajson>/manual_time                            674471 ns       740605 ns         1038          10.031k           943.681M               0        12.646k    2.13675M              3.38354          1.49431k       3.19298G          5.72274M                    9.06192                     2.67824           1.49431k    10.4856k   631.515k       892.936M/s    2.95857   12.7862k   2.15171M         3.40721   1.48264k/s 3.19021G/s     5.72274M               9.06192                2.65963          1       1.48264k/s [BEST: throughput=  0.94 GB/s doc_throughput=  1494 docs/s instructions=     5722739 cycles=     2136754 branch_miss=   10031 cache_miss=       0 cache_ref=     12646 items=         1 avg_time=    674471 ns]
find_tweet<rapidjson>/manual_time                        2764537 ns      2834306 ns          254          30.151k           250.995M           7.46k        21.378k    8.03287M                12.72           397.449       3.19265G          21.7394M                    34.4242                      2.7063            397.449    30.6536k   631.515k       217.852M/s    663.921   14.1288k   8.16003M         12.9214    361.724/s 2.95168G/s       21.74M               34.4252                2.66421          1        361.724/s [BEST: throughput=  0.25 GB/s doc_throughput=   397 docs/s instructions=    21739392 cycles=     8032872 branch_miss=   30151 cache_miss=    7460 cache_ref=     21378 items=         1 avg_time=   2764536 ns]
find_tweet<rapidjson_insitu>/manual_time                 1784302 ns      1849154 ns          396          41.937k           361.738M          6.892k        13.362k    5.57402M              8.82642           572.809       3.19285G          13.2116M                    20.9204                     2.37021            572.809    33.9877k   631.515k       337.532M/s   1.65572k    9.6211k   5.38724M         8.53066    560.443/s 3.01924G/s     13.2121M               20.9212                2.45247          1        560.443/s [BEST: throughput=  0.36 GB/s doc_throughput=   572 docs/s instructions=    13211571 cycles=     5574018 branch_miss=   41937 cache_miss=    6892 cache_ref=     13362 items=         1 avg_time=   1784301 ns]
find_tweet<nlohmann_json>/manual_time                    8915663 ns      9001646 ns           89           99.66k           81.7715M             760        76.873k    24.6225M              38.9896           129.485       3.18824G          65.8442M                    104.264                     2.67414            129.485    192.092k   631.515k       67.5507M/s    54.1573   81.9625k   28.4367M         45.0294    112.162/s 3.18953G/s     64.4853M               102.112                2.26767          1        112.162/s [BEST: throughput=  0.08 GB/s doc_throughput=   129 docs/s instructions=    65844237 cycles=    24622543 branch_miss=   99660 cache_miss=     760 cache_ref=     76873 items=         1 avg_time=   8915662 ns]
top_tweet<simdjson_dom>/manual_time                       294414 ns       372025 ns         2376           3.439k           2.16351G               1        32.317k    932.261k              1.47623           3.4259k       3.19383G           2.8694M                    4.54368                     3.07789            3.4259k    3.59322k   631.515k       1.99768G/s    1.22643   32.3495k   939.417k         1.48756   3.39658k/s  3.1908G/s      2.8694M               4.54368                3.05445          1       3.39658k/s [BEST: throughput=  2.16 GB/s doc_throughput=  3425 docs/s instructions=     2869399 cycles=      932261 branch_miss=    3439 cache_miss=       1 cache_ref=     32317 items=         1 avg_time=    294414 ns]
top_tweet<simdjson_ondemand>/manual_time                  171291 ns       233515 ns         4082           1.443k           3.72086G               1         7.989k    542.175k             0.858531          5.89195k       3.19447G          1.90456M                    3.01587                     3.51282           5.89195k    1.55514k   631.515k       3.43359G/s    2.97795   8.02868k   546.715k         0.86572     5.838k/s 3.19172G/s     1.90456M               3.01587                3.48365          1         5.838k/s [BEST: throughput=  3.72 GB/s doc_throughput=  5891 docs/s instructions=     1904564 cycles=      542175 branch_miss=    1443 cache_miss=       1 cache_ref=      7989 items=         1 avg_time=    171291 ns]
top_tweet<simdjson_ondemand_forward_only>/manual_time     192998 ns       256438 ns         3629             1.8k           3.30219G               4         8.627k    610.941k             0.967421            5.229k       3.19461G          2.13002M                    3.37288                     3.48646             5.229k    1.96239k   631.515k       3.04741G/s    3.49656   8.57624k   615.906k        0.975283    5.1814k/s 3.19126G/s     2.13002M               3.37288                3.45836          1        5.1814k/s [BEST: throughput=  3.30 GB/s doc_throughput=  5229 docs/s instructions=     2130022 cycles=      610941 branch_miss=    1800 cache_miss=       4 cache_ref=      8627 items=         1 avg_time=    192997 ns]
top_tweet<yyjson>/manual_time                             782024 ns       869804 ns          997            9.53k           1.46132G             232        27.374k    1.38042M              2.18589          2.31398k       3.19427G          2.84446M                    4.50418                     2.06058           2.31398k    7.56094k   631.515k        770.13M/s    483.414   25.5637k   1.54108M         2.44029   1.27873k/s 1.97063G/s     2.84512M               4.50523                1.84619          1       1.27873k/s [BEST: throughput=  1.46 GB/s doc_throughput=  2313 docs/s instructions=     2844459 cycles=     1380420 branch_miss=    9530 cache_miss=     232 cache_ref=     27374 items=         1 avg_time=    782023 ns]
top_tweet<yyjson_insitu>/manual_time                      509231 ns       581097 ns         1388           6.782k           1.79197G          2.135k        13.942k    1.11985M              1.77328          2.83757k       3.17766G          2.84411M                    4.50364                     2.53973           2.83757k    7.33303k   631.515k       1.15496G/s    88.6859   11.4503k   1.23024M         1.94807   1.96374k/s 2.41587G/s     2.84438M               4.50405                2.31206          1       1.96374k/s [BEST: throughput=  1.79 GB/s doc_throughput=  2837 docs/s instructions=     2844114 cycles=     1119851 branch_miss=    6782 cache_miss=    2135 cache_ref=     13942 items=         1 avg_time=    509231 ns]
top_tweet<sajson>/manual_time                             677792 ns       748662 ns         1032          10.107k           938.633M               0        12.965k     2.1482M              3.40167          1.48632k       3.19292G          5.75273M                    9.10941                     2.67793           1.48632k    10.5114k   631.515k       888.562M/s    2.57655   13.0794k   2.16214M         3.42373   1.47538k/s 3.18998G/s     5.75273M               9.10941                2.66067          1       1.47538k/s [BEST: throughput=  0.94 GB/s doc_throughput=  1486 docs/s instructions=     5752730 cycles=     2148204 branch_miss=   10107 cache_miss=       0 cache_ref=     12965 items=         1 avg_time=    677791 ns]
top_tweet<rapidjson>/manual_time                         2779804 ns      2854074 ns          253           29.65k           250.955M         12.383k        22.246k    8.03421M              12.7221           397.386       3.19268G          21.7984M                    34.5176                      2.7132            397.386    31.4191k   631.515k       216.655M/s     816.85   15.2756k   8.20674M         12.9953    359.738/s 2.95227G/s      21.799M               34.5186                2.65623          1        359.738/s [BEST: throughput=  0.25 GB/s doc_throughput=   397 docs/s instructions=    21798389 cycles=     8034207 branch_miss=   29650 cache_miss=   12383 cache_ref=     22246 items=         1 avg_time=   2779803 ns]
top_tweet<rapidjson_insitu>/manual_time                  1783887 ns      1853924 ns          395          25.484k           391.825M          6.831k         13.77k     5.1458M              8.14834           620.453       3.19273G          13.2661M                    21.0068                     2.57805            620.453    33.3623k   631.515k       337.611M/s   1.78132k   10.9362k   5.38594M         8.52859    560.574/s 3.01921G/s     13.2664M               21.0073                2.46316          1        560.574/s [BEST: throughput=  0.39 GB/s doc_throughput=   620 docs/s instructions=    13266137 cycles=     5145801 branch_miss=   25484 cache_miss=    6831 cache_ref=     13770 items=         1 avg_time=   1783887 ns]
top_tweet<nlohmann_json>/manual_time                    11239543 ns     11328844 ns           62         189.606k           56.6513M              31       164.301k     35.565M              56.3169           89.7069       3.19042G          87.7709M                    138.985                      2.4679            89.7069    195.898k   631.515k        53.584M/s    100.565   163.899k   35.8487M         56.7662    88.9716/s 3.18952G/s     88.1329M               139.558                2.45847          1        88.9716/s [BEST: throughput=  0.06 GB/s doc_throughput=    89 docs/s instructions=    87770893 cycles=    35564956 branch_miss=  189606 cache_miss=      31 cache_ref=    164301 items=         1 avg_time=  11239542 ns]
