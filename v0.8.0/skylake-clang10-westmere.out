run_benchmark: v0.8.0 /home/jkeiser/simdjson_benchmark_results/v0.8.0/skylake-clang10-westmere.json -DCMAKE_BUILD_TYPE=Release -DSIMDJSON_EXCLUDE_IMPLEMENTATION=haswell
git reset --hard v0.8.0
HEAD is now at c96ff018 Version 0.8.
cmake -DCMAKE_BUILD_TYPE=Release -DSIMDJSON_EXCLUDE_IMPLEMENTATION=haswell -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The CXX compiler identification is Clang 10.0.1
-- The C compiler identification is Clang 10.0.1
-- Check for working CXX compiler: /usr/bin/clang++-10
-- Check for working CXX compiler: /usr/bin/clang++-10 -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Check for working C compiler: /usr/bin/clang-10
-- Check for working C compiler: /usr/bin/clang-10 -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Excluding implementation haswell due to SIMDJSON_EXCLUDE_IMPLEMENTATION=haswell
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed
-- Check if compiler accepts -pthread
-- Check if compiler accepts -pthread - yes
-- Found Threads: TRUE  
-- Looking for fork
-- Looking for fork - found
-- Looking for wait
-- Looking for wait - found
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- Found Git: /usr/bin/git (found version "2.27.0") 
-- git Version: v0.2.1-c96ff018
-- Version: 0.2.1
-- Performing Test HAVE_CXX_FLAG_STD_CXX11
-- Performing Test HAVE_CXX_FLAG_STD_CXX11 - Success
-- Performing Test HAVE_CXX_FLAG_WALL
-- Performing Test HAVE_CXX_FLAG_WALL - Success
-- Performing Test HAVE_CXX_FLAG_WEXTRA
-- Performing Test HAVE_CXX_FLAG_WEXTRA - Success
-- Performing Test HAVE_CXX_FLAG_WSHADOW
-- Performing Test HAVE_CXX_FLAG_WSHADOW - Success
-- Performing Test HAVE_CXX_FLAG_WERROR
-- Performing Test HAVE_CXX_FLAG_WERROR - Success
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32 - Success
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED - Success
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WD654
-- Performing Test HAVE_CXX_FLAG_WD654 - Failed
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY - Success
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES -- failed to compile
-- Performing Test HAVE_CXX_FLAG_COVERAGE
-- Performing Test HAVE_CXX_FLAG_COVERAGE - Success
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Performing Test USE_BOOST_JSON
-- Performing Test USE_BOOST_JSON - Failed
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Found Python3: /usr/bin/python3.8 (found version "3.8.6") found components: Interpreter 
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 10
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
Scanning dependencies of target benchmark
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_api_internal.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_name.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_name.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_register.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_register.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_runner.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_runner.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/colorprint.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/colorprint.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/commandlineflags.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/commandlineflags.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/complexity.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/complexity.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/console_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/console_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/counter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/counter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/csv_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/csv_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/json_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/json_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/sleep.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sleep.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/statistics.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/statistics.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/string_util.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/string_util.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/sysinfo.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sysinfo.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/timers.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/timers.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -P CMakeFiles/benchmark.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/benchmark.dir/link.txt --verbose=1
/usr/bin/ar qc libbenchmark.a  CMakeFiles/benchmark.dir/benchmark.cc.o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o CMakeFiles/benchmark.dir/benchmark_name.cc.o CMakeFiles/benchmark.dir/benchmark_register.cc.o CMakeFiles/benchmark.dir/benchmark_runner.cc.o CMakeFiles/benchmark.dir/colorprint.cc.o CMakeFiles/benchmark.dir/commandlineflags.cc.o CMakeFiles/benchmark.dir/complexity.cc.o CMakeFiles/benchmark.dir/console_reporter.cc.o CMakeFiles/benchmark.dir/counter.cc.o CMakeFiles/benchmark.dir/csv_reporter.cc.o CMakeFiles/benchmark.dir/json_reporter.cc.o CMakeFiles/benchmark.dir/reporter.cc.o CMakeFiles/benchmark.dir/sleep.cc.o CMakeFiles/benchmark.dir/statistics.cc.o CMakeFiles/benchmark.dir/string_util.cc.o CMakeFiles/benchmark.dir/sysinfo.cc.o CMakeFiles/benchmark.dir/timers.cc.o
/usr/bin/ranlib libbenchmark.a
[ 80%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
Scanning dependencies of target generated-data
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated && /usr/bin/ruby genfeaturejson.rb /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-miss.json ...
[ 80%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/clang++-10  -DSIMDJSON_IMPLEMENTATION_HASWELL=0 -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/include  -O3 -DNDEBUG -fPIC   -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -pthread -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/clang++-10 -fPIC -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.7 -o ../libsimdjson.so.7.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.7.0.0 ../libsimdjson.so.7 ../libsimdjson.so
[ 80%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
Scanning dependencies of target yyjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/clang-10  -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src  -O3 -DNDEBUG   -o CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o   -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src/yyjson.c
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -P CMakeFiles/yyjson.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -E cmake_link_script CMakeFiles/yyjson.dir/link.txt --verbose=1
/usr/bin/ar qc libyyjson.a  CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o
/usr/bin/ranlib libyyjson.a
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/clang++-10  -DRAPIDJSON_HAS_STDSTRING -DSAJSON_UNSORTED_OBJECT_KEYS -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_COMPETITION_NLOHMANN_JSON -DSIMDJSON_COMPETITION_RAPIDJSON -DSIMDJSON_COMPETITION_SAJSON -DSIMDJSON_COMPETITION_YYJSON -DSIMDJSON_IMPLEMENTATION_HASWELL=0 -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/rapidjson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/sajson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/json  -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/clang++-10  -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.7.0.0 ../_deps/google_benchmarks/src/libbenchmark.a ../dependencies/libyyjson.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.8.0/skylake-clang10-westmere.json --benchmark_out_format=json
2021-01-24 21:43:28
Running benchmark/bench_ondemand
Run on (4 X 4000 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 256 KiB (x4)
  L3 Unified 8192 KiB (x1)
Load Average: 0.57, 0.25, 0.35
simdjson::dom implementation:      westmere
simdjson::ondemand implementation: fallback

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                  363965 ns       392695 ns         1927           3.591k           1.74138G               0        94.784k    1.33901M              2.12031          2.75746k       3.69226G          4.37538M                    6.92838                     3.26763           275.746k     3.7113k   631.515k       1.61594G/s    7.37883   94.7279k   1.34312M         2.12682   2.74752k/s 3.69024G/s     4.37538M               6.92838                3.25762        100       274.752k/s [BEST: throughput=  1.74 GB/s doc_throughput=  2757 docs/s instructions=     4375376 cycles=     1339005 branch_miss=    3591 cache_miss=       0 cache_ref=     94784 items=       100 avg_time=    363964 ns]
partial_tweets<simdjson_ondemand>/manual_time             242518 ns       271080 ns         2886           2.322k           2.61878G               0        59.709k    890.484k              1.41008          4.14681k       3.69267G          3.31379M                    5.24736                     3.72133           414.681k    2.46918k   631.515k       2.42516G/s   0.389813   59.6971k   895.042k         1.41729   4.12341k/s 3.69063G/s     3.31379M               5.24736                3.70238        100       412.341k/s [BEST: throughput=  2.62 GB/s doc_throughput=  4146 docs/s instructions=     3313787 cycles=      890484 branch_miss=    2322 cache_miss=       0 cache_ref=     59709 items=       100 avg_time=    242517 ns]
partial_tweets<yyjson>/manual_time                        637042 ns       667806 ns         1095             9.6k           1.81484G             403        78.868k    1.28504M              2.03484          2.87379k       3.69292G          2.90333M                    4.59741                     2.25934           287.379k    7.50607k   631.515k         945.4M/s    1040.87   51.9908k   1.50445M         2.38228   1.56975k/s 2.36161G/s     2.90382M               4.59818                1.93016        100       156.975k/s [BEST: throughput=  1.81 GB/s doc_throughput=  2873 docs/s instructions=     2903333 cycles=     1285035 branch_miss=    9600 cache_miss=     403 cache_ref=     78868 items=       100 avg_time=    637042 ns]
partial_tweets<yyjson_insitu>/manual_time                 426792 ns       456165 ns         1640             6.8k           2.06159G          1.341k        48.491k    1.12435M              1.78041          3.26452k       3.67048G          2.90302M                    4.59692                     2.58194           326.452k    7.28224k   631.515k       1.37806G/s     140.09   33.7826k   1.22873M         1.94568   2.34306k/s 2.87898G/s     2.90328M               4.59733                2.36284        100       234.306k/s [BEST: throughput=  2.06 GB/s doc_throughput=  3264 docs/s instructions=     2903022 cycles=     1124355 branch_miss=    6800 cache_miss=    1341 cache_ref=     48491 items=       100 avg_time=    426791 ns]
partial_tweets<sajson>/manual_time                        590629 ns       619471 ns         1186          10.477k            1077.5M               0        48.129k    2.16377M              3.42631          1.70621k       3.69184G          5.87178M                    9.29793                     2.71368           170.621k    10.8608k   631.515k       1019.69M/s    1.72007    48.306k   2.17952M         3.45126   1.69311k/s 3.69017G/s     5.87178M               9.29793                2.69407        100       169.311k/s [BEST: throughput=  1.08 GB/s doc_throughput=  1706 docs/s instructions=     5871783 cycles=     2163768 branch_miss=   10477 cache_miss=       0 cache_ref=     48129 items=       100 avg_time=    590629 ns]
partial_tweets<rapidjson>/manual_time                    2421876 ns      2451319 ns          289          29.894k           285.062M             369        53.962k    8.17813M                12.95           451.394       3.69156G          21.9146M                    34.7017                     2.67966           45.1394k    30.0173k   631.515k       248.675M/s    638.225    34.207k   8.34671M          13.217    412.903/s 3.44638G/s     21.9154M               34.7029                2.62564        100       41.2903k/s [BEST: throughput=  0.29 GB/s doc_throughput=   451 docs/s instructions=    21914613 cycles=     8178129 branch_miss=   29894 cache_miss=     369 cache_ref=     53962 items=       100 avg_time=   2421875 ns]
partial_tweets<rapidjson_insitu>/manual_time             1518485 ns      1547572 ns          462          26.588k           447.854M              15        45.928k    5.20546M              8.24282           709.174       3.69158G          13.3446M                    21.1311                     2.56357           70.9174k    26.4831k   631.515k       396.619M/s    270.061   35.3465k    5.2587M         8.32711    658.551/s 3.46312G/s     13.3452M                21.132                2.53774        100       65.8551k/s [BEST: throughput=  0.45 GB/s doc_throughput=   709 docs/s instructions=    13344586 cycles=     5205462 branch_miss=   26588 cache_miss=      15 cache_ref=     45928 items=       100 avg_time=   1518484 ns]
partial_tweets<nlohmann_json>/manual_time                8013166 ns      8048369 ns           88         153.808k           81.2517M              19       230.433k    28.6758M               45.408           128.662       3.68948G          78.2132M                     123.85                      2.7275           12.8662k    164.617k   631.515k       75.1588M/s    393.273   371.097k   29.5645M         46.8153    124.795/s  3.6895G/s     78.6931M                124.61                2.66174        100       12.4795k/s [BEST: throughput=  0.08 GB/s doc_throughput=   128 docs/s instructions=    78213207 cycles=    28675830 branch_miss=  153808 cache_miss=      19 cache_ref=    230433 items=       100 avg_time=   8013166 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                 102598644 ns    106006594 ns            7         941.616k           449.284M        11.1071M       15.6011M    377.705M              8.21121           9.76731       3.68917G          1.16406G                    25.3062                     3.08192           9.76731M    946.977k   45.9988M       427.568M/s   11.1476M   15.5987M   378.484M         8.22814    9.74672/s 3.68898G/s     1.16406G               25.3062                3.07557      1000k       9.74672M/s [BEST: throughput=  0.45 GB/s doc_throughput=     9 docs/s instructions=  1164056358 cycles=   377705494 branch_miss=  941616 cache_miss=11107143 cache_ref=  15601061 items=   1000000 avg_time= 102598643 ns]
large_random<simdjson_ondemand>/manual_time             70926541 ns     74304206 ns           10         912.726k           648.927M        5.77858M       8.13144M    261.501M              5.68495           14.1075       3.68912G          752.513M                    16.3594                     2.87767           14.1075M    914.062k   45.9988M       618.497M/s   5.79717M   8.13106M   261.641M           5.688    14.0991/s  3.6889G/s     752.513M               16.3594                2.87613      1000k       14.0991M/s [BEST: throughput=  0.65 GB/s doc_throughput=    14 docs/s instructions=   752512831 cycles=   261500668 branch_miss=  912726 cache_miss= 5778583 cache_ref=   8131439 items=   1000000 avg_time=  70926541 ns]
large_random<simdjson_ondemand_unordered>/manual_time   71286555 ns     74667324 ns           10         941.596k           645.706M        5.83481M       8.13123M    262.791M              5.71301           14.0375       3.68893G          751.513M                    16.3377                     2.85973           14.0375M    948.328k   45.9988M       615.373M/s   5.77803M   8.13349M    262.98M         5.71712    14.0279/s 3.68906G/s     751.513M               16.3377                2.85768      1000k       14.0279M/s [BEST: throughput=  0.65 GB/s doc_throughput=    14 docs/s instructions=   751512830 cycles=   262791351 branch_miss=  941596 cache_miss= 5834810 cache_ref=   8131225 items=   1000000 avg_time=  71286555 ns]
large_random<yyjson>/manual_time                       121457001 ns    124889257 ns            6         661.764k           378.864M        5.92174M       9.23386M    328.446M              7.14031            8.2364       2.70521G           866.68M                    18.8414                     2.63873            8.2364M    664.235k   45.9988M        361.18M/s   5.93389M   9.23644M   328.628M         7.14428    8.23337/s 2.70572G/s      866.68M               18.8414                2.63726      1000k       8.23337M/s [BEST: throughput=  0.38 GB/s doc_throughput=     8 docs/s instructions=   866679881 cycles=   328445591 branch_miss=  661764 cache_miss= 5921741 cache_ref=   9233864 items=   1000000 avg_time= 121457000 ns]
large_random<yyjson_insitu>/manual_time                103471064 ns    106896148 ns            7         664.656k           444.702M        5.06356M       7.86981M    296.227M              6.43989            9.6677       2.86383G          860.559M                    18.7083                     2.90507            9.6677M    663.505k   45.9988M       423.963M/s   5.06049M   7.86982M   296.237M          6.4401    9.66454/s 2.86299G/s     860.559M               18.7083                2.90497      1000k       9.66454M/s [BEST: throughput=  0.44 GB/s doc_throughput=     9 docs/s instructions=   860559337 cycles=   296226874 branch_miss=  664656 cache_miss= 5063561 cache_ref=   7869806 items=   1000000 avg_time= 103471063 ns]
large_random<sajson>/manual_time                        91811944 ns     95221023 ns            8         582.019k           501.711M        8.52541M       12.3762M    338.226M              7.35293            10.907       3.68904G          1.13399G                    24.6526                     3.35276            10.907M    582.209k   45.9988M       477.801M/s   8.54402M   12.3514M    338.71M         7.36346    10.8918/s 3.68917G/s     1.13399G               24.6526                3.34796      1000k       10.8918M/s [BEST: throughput=  0.50 GB/s doc_throughput=    10 docs/s instructions=  1133989144 cycles=   338225586 branch_miss=  582019 cache_miss= 8525405 cache_ref=  12376225 items=   1000000 avg_time=  91811943 ns]
large_random<rapidjson>/manual_time                    212704115 ns    216134270 ns            3         593.045k           222.156M        7.16087M        10.907M    705.529M               15.338           4.82962       3.40744G          2.02114G                    43.9391                     2.86472           4.82962M    592.604k   45.9988M       206.239M/s   6.62464M   10.2349M   707.617M         15.3834    4.70137/s 3.32677G/s     2.02115G               43.9393                2.85628      1000k       4.70137M/s [BEST: throughput=  0.22 GB/s doc_throughput=     4 docs/s instructions=  2021143698 cycles=   705529353 branch_miss=  593045 cache_miss= 7160867 cache_ref=  10906996 items=   1000000 avg_time= 212704115 ns]
large_random<rapidjson_lossless>/manual_time           246648259 ns    250082352 ns            3         584.391k           190.992M        7.11612M       10.9148M    830.159M              18.0474           4.15211       3.44691G          2.48311G                    53.9821                     2.99113           4.15211M     586.21k   45.9988M       177.856M/s   6.62353M   10.2619M   832.713M         18.1029    4.05436/s 3.37612G/s     2.48312G               53.9823                2.98196      1000k       4.05436M/s [BEST: throughput=  0.19 GB/s doc_throughput=     4 docs/s instructions=  2483111370 cycles=   830159482 branch_miss=  584391 cache_miss= 7116122 cache_ref=  10914807 items=   1000000 avg_time= 246648259 ns]
large_random<rapidjson_insitu>/manual_time             236060637 ns    239480322 ns            3         590.698k           199.492M        8.10981M       12.4665M    792.301M              17.2244            4.3369       3.43613G          1.75214G                    38.0911                     2.21146            4.3369M    590.888k   45.9988M       185.833M/s   7.61971M   11.8017M   793.743M         17.2557     4.2362/s 3.36245G/s     1.75215G               38.0913                2.20746      1000k        4.2362M/s [BEST: throughput=  0.20 GB/s doc_throughput=     4 docs/s instructions=  1752143931 cycles=   792300932 branch_miss=  590698 cache_miss= 8109809 cache_ref=  12466532 items=   1000000 avg_time= 236060636 ns]
large_random<nlohmann_json>/manual_time               1241076390 ns   1244496895 ns            1         4.11844M           37.0636M        46.9068M        60.827M    4.56558G              99.2544          0.805752       3.67873G          12.3806G                     269.15                     2.71172           805.752k    4.11844M   45.9988M       35.3466M/s   46.9068M    60.827M   4.56558G         99.2544   0.805752/s 3.67873G/s     12.3806G                269.15                2.71172      1000k       805.752k/s [BEST: throughput=  0.04 GB/s doc_throughput=     0 docs/s instructions= 12380551870 cycles=  4565579625 branch_miss= 4118442 cache_miss=46906845 cache_ref=  60827000 items=   1000000 avg_time=1241076390 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                       110953048 ns    121403013 ns            6         1080.88k            1.2386G        15.8832M       22.5456M    408.951M              2.97841            9.0208       3.68906G          1.23813G                    9.01737                     3.02758            4.7295M    1081.44k   137.305M       1.15252G/s    15.937M   22.5617M   409.259M         2.98066    9.01282/s 3.68858G/s     1.23813G               9.01737                 3.0253   524.288k       4.72531M/s [BEST: throughput=  1.24 GB/s doc_throughput=     9 docs/s instructions=  1238129982 cycles=   408950792 branch_miss= 1080880 cache_miss=15883154 cache_ref=  22545564 items=    524288 avg_time= 110953048 ns]
kostya<simdjson_ondemand>/manual_time                   75997302 ns     86397202 ns            9         517.957k           1.80806G        10.2037M       14.2241M    280.104M              2.04001           13.1682       3.68847G          846.724M                    6.16674                     3.02289           6.90394M    518.289k   137.305M       1.68263G/s   10.2272M    14.145M   280.229M         2.04092    13.1584/s 3.68735G/s     846.724M               6.16674                3.02154   524.288k       6.89877M/s [BEST: throughput=  1.81 GB/s doc_throughput=    13 docs/s instructions=   846723942 cycles=   280103718 branch_miss=  517957 cache_miss=10203739 cache_ref=  14224144 items=    524288 avg_time=  75997302 ns]
kostya<yyjson>/manual_time                             176677824 ns    187086558 ns            4          414.29k           778.294M        11.2936M       16.4235M     454.53M              3.31037           5.66836       2.57644G          978.903M                     7.1294                     2.15366           2.97185M    413.973k   137.305M       741.147M/s   11.2952M    16.391M   454.626M         3.31107    5.66002/s 2.57319G/s     978.903M                7.1294                 2.1532   524.288k       2.96748M/s [BEST: throughput=  0.78 GB/s doc_throughput=     5 docs/s instructions=   978902897 cycles=   454529929 branch_miss=  414290 cache_miss=11293649 cache_ref=  16423494 items=    524288 avg_time= 176677824 ns]
kostya<yyjson_insitu>/manual_time                      123423214 ns    133856432 ns            6          411.85k           1.11296G        8.67619M       12.3346M      360.8M              2.62773           8.10572       2.92454G          960.633M                    6.99635                     2.66251           4.24973M    412.737k   137.305M       1060.94M/s   8.67711M   12.3718M   360.779M         2.62757     8.1022/s  2.9231G/s     960.633M               6.99635                2.66267   524.288k       4.24789M/s [BEST: throughput=  1.11 GB/s doc_throughput=     8 docs/s instructions=   960633122 cycles=   360800050 branch_miss=  411850 cache_miss= 8676185 cache_ref=  12334612 items=    524288 avg_time= 123423214 ns]
kostya<sajson>/manual_time                             137819904 ns    148274770 ns            5         354.916k           997.207M        12.3004M       17.1965M    507.952M              3.69945           7.26271       3.68911G          1.54442G                    11.2481                     3.04049           3.80775M    355.172k   137.305M       950.111M/s   12.3166M   17.1529M   508.341M         3.70227    7.25585/s 3.68844G/s     1.54442G               11.2481                3.03817   524.288k       3.80415M/s [BEST: throughput=  1.00 GB/s doc_throughput=     7 docs/s instructions=  1544424210 cycles=   507952359 branch_miss=  354916 cache_miss=12300404 cache_ref=  17196460 items=    524288 avg_time= 137819903 ns]
kostya<rapidjson>/manual_time                          280125902 ns    290615730 ns            2         1010.48k           494.493M        8.28888M       12.2208M    942.777M               6.8663           3.60142       3.39534G          2.74501G                    19.9921                     2.91162           1.88818M     1009.8k   137.305M       467.448M/s   8.06126M    11.987M   944.689M         6.88023    3.56982/s 3.37237G/s     2.74501G               19.9921                2.90573   524.288k       1.87162M/s [BEST: throughput=  0.49 GB/s doc_throughput=     3 docs/s instructions=  2745013158 cycles=   942777330 branch_miss= 1010476 cache_miss= 8288878 cache_ref=  12220807 items=    524288 avg_time= 280125902 ns]
kostya<rapidjson_lossless>/manual_time                 302404386 ns    312819612 ns            2         970.257k           458.001M        8.30272M       12.2495M    1024.12M              7.45873           3.33565       3.41611G          3.01187G                    21.9356                     2.94093           1.74884M    971.036k   137.305M        433.01M/s   8.07091M   11.9705M   1026.19M          7.4738    3.30683/s 3.39344G/s     3.01187G               21.9356                  2.935   524.288k       1.73373M/s [BEST: throughput=  0.46 GB/s doc_throughput=     3 docs/s instructions=  3011866444 cycles=  1024120991 branch_miss=  970257 cache_miss= 8302724 cache_ref=  12249474 items=    524288 avg_time= 302404386 ns]
kostya<rapidjson_insitu>/manual_time                   270098012 ns    280527535 ns            3         1010.95k           514.531M        11.9721M       16.0883M    902.894M              6.57583           3.74735       3.38346G          2.22935G                    16.2365                     2.46912           1.96469M    1023.25k   137.305M       484.803M/s   11.6736M   15.7375M   904.948M         6.59079    3.70236/s 3.35044G/s     2.22935G               16.2365                2.46351   524.288k        1.9411M/s [BEST: throughput=  0.51 GB/s doc_throughput=     3 docs/s instructions=  2229350598 cycles=   902893743 branch_miss= 1010954 cache_miss=11972085 cache_ref=  16088298 items=    524288 avg_time= 270098011 ns]
kostya<nlohmann_json>/manual_time                     1828805061 ns   1839138818 ns            1         14.9532M           75.0791M        69.9267M       87.5921M    6.74547G              49.1276          0.546805       3.68846G          17.2831G                    125.874                     2.56218           286.683k    14.9532M   137.305M        71.601M/s   69.9267M   87.5921M   6.74547G         49.1276   0.546805/s 3.68846G/s     17.2831G               125.874                2.56218   524.288k       286.683k/s [BEST: throughput=  0.08 GB/s doc_throughput=     0 docs/s instructions= 17283075109 cycles=  6745468998 branch_miss=14953249 cache_miss=69926670 cache_ref=  87592098 items=    524288 avg_time=1828805061 ns]
distinct_user_id<simdjson_dom>/manual_time                358709 ns       388913 ns         1952           3.779k           1.76932G               0        95.859k    1.31788M              2.08685           2.8017k        3.6923G           4.3095M                    6.82406                     3.27003           322.196k    3.93145k   631.515k       1.63961G/s    2.31301    95.939k   1.32354M         2.09582   2.78777k/s 3.68974G/s      4.3095M               6.82406                3.25603        115       320.594k/s [BEST: throughput=  1.77 GB/s doc_throughput=  2801 docs/s instructions=     4309498 cycles=     1317877 branch_miss=    3779 cache_miss=       0 cache_ref=     95859 items=       115 avg_time=    358709 ns]
distinct_user_id<simdjson_ondemand>/manual_time           229280 ns       258450 ns         3053           1.752k           2.77002G               0        58.193k    841.816k              1.33301          4.38631k       3.69247G          2.93274M                    4.64397                     3.48382           504.426k    1.87513k   631.515k       2.56518G/s  0.0658369   58.1245k   845.958k         1.33957   4.36149k/s 3.68964G/s     2.93274M               4.64397                3.46676        115       501.571k/s [BEST: throughput=  2.77 GB/s doc_throughput=  4386 docs/s instructions=     2932736 cycles=      841816 branch_miss=    1752 cache_miss=       0 cache_ref=     58193 items=       115 avg_time=    229279 ns]
distinct_user_id<yyjson>/manual_time                      547226 ns       580823 ns         1000           6.988k           1.92407G         15.346k         77.58k    1.21193M              1.91908          3.04675k       3.69244G          2.86148M                    4.53113                      2.3611           350.376k    7.30493k   631.515k       1100.57M/s   7.35596k   58.1671k   1.42556M         2.25737    1.8274k/s 2.60507G/s     2.86167M               4.53144                 2.0074        115       210.151k/s [BEST: throughput=  1.92 GB/s doc_throughput=  3046 docs/s instructions=     2861478 cycles=     1211928 branch_miss=    6988 cache_miss=   15346 cache_ref=     77580 items=       115 avg_time=    547225 ns]
distinct_user_id<yyjson_insitu>/manual_time               419009 ns       451759 ns         1670           6.836k           2.09935G             349        46.778k    1.10733M              1.75345           3.3243k       3.68111G          2.86097M                    4.53032                     2.58365           382.295k    7.38235k   631.515k       1.40366G/s    49.0132   32.3413k   1.21284M         1.92052   2.38658k/s 2.89454G/s     2.86123M               4.53074                2.35912        115       274.457k/s [BEST: throughput=  2.10 GB/s doc_throughput=  3324 docs/s instructions=     2860965 cycles=     1107333 branch_miss=    6836 cache_miss=     349 cache_ref=     46778 items=       115 avg_time=    419008 ns]
distinct_user_id<sajson>/manual_time                      585837 ns       616514 ns         1192          10.332k           1087.78M               0        47.914k    2.14339M              3.39404          1.72249k       3.69195G          5.81022M                    9.20044                     2.71077           198.086k     10.783k   631.515k       1028.03M/s   0.886745   47.9767k   2.16117M         3.42219   1.70696k/s 3.68902G/s     5.81022M               9.20045                2.68846        115         196.3k/s [BEST: throughput=  1.09 GB/s doc_throughput=  1722 docs/s instructions=     5810219 cycles=     2143386 branch_miss=   10332 cache_miss=       0 cache_ref=     47914 items=       115 avg_time=    585837 ns]
distinct_user_id<rapidjson>/manual_time                  2406931 ns      2437729 ns          292          29.768k           285.492M          8.872k        55.344k    8.16566M              12.9303           452.075       3.69149G          21.8426M                    34.5876                     2.67493           51.9887k    30.1608k   631.515k       250.219M/s   1.28733k   36.1263k   8.32432M         13.1815    415.467/s 3.45848G/s     21.8433M               34.5887                2.62403        115       47.7787k/s [BEST: throughput=  0.29 GB/s doc_throughput=   452 docs/s instructions=    21842586 cycles=     8165656 branch_miss=   29768 cache_miss=    8872 cache_ref=     55344 items=       115 avg_time=   2406930 ns]
distinct_user_id<rapidjson_insitu>/manual_time           1515601 ns      1546113 ns          458          26.109k            450.44M          2.368k        45.863k    5.17554M              8.19544           713.269       3.69156G          13.2778M                    21.0253                     2.56548            82.026k    30.7438k   631.515k       397.373M/s   2.78079k   38.2708k   5.32541M         8.43275    659.804/s 3.51373G/s     13.2781M               21.0257                2.49334        115       75.8775k/s [BEST: throughput=  0.45 GB/s doc_throughput=   713 docs/s instructions=    13277763 cycles=     5175542 branch_miss=   26109 cache_miss=    2368 cache_ref=     45863 items=       115 avg_time=   1515601 ns]
distinct_user_id<nlohmann_json>/manual_time              7420850 ns      7453626 ns           97         128.561k           88.1371M              22       225.294k    26.4338M              41.8577           139.565       3.68922G          73.6559M                    116.634                     2.78643           16.0499k    142.496k   631.515k       81.1578M/s    266.835   423.712k   27.3683M         43.3376    134.755/s 3.68803G/s     72.3116M               114.505                2.64216        115       15.4969k/s [BEST: throughput=  0.09 GB/s doc_throughput=   139 docs/s instructions=    73655873 cycles=    26433773 branch_miss=  128561 cache_miss=      22 cache_ref=    225294 items=       115 avg_time=   7420849 ns]
find_tweet<simdjson_dom>/manual_time                      347248 ns       376349 ns         2016           3.587k           1.82622G               0        85.531k     1.2768M              2.02181          2.89181k       3.69228G          4.22418M                    6.68896                      3.3084           2.89181k    3.71196k   631.515k       1.69373G/s   0.635913   85.3261k   1.28118M         2.02874   2.87978k/s 3.68953G/s     4.22418M               6.68896                3.29709          1       2.87978k/s [BEST: throughput=  1.83 GB/s doc_throughput=  2891 docs/s instructions=     4224178 cycles=     1276805 branch_miss=    3587 cache_miss=       0 cache_ref=     85531 items=         1 avg_time=    347248 ns]
find_tweet<simdjson_ondemand>/manual_time                 176116 ns       204508 ns         3974             1051           3.59627G               0        33.858k    648.501k               1.0269          5.69466k       3.69299G          2.42697M                    3.84309                     3.74243           5.69466k     1096.13   631.515k       3.33952G/s  0.0400101   33.7879k   649.885k         1.02909   5.67807k/s 3.69009G/s     2.42697M               3.84309                3.73446          1       5.67807k/s [BEST: throughput=  3.60 GB/s doc_throughput=  5694 docs/s instructions=     2426967 cycles=      648501 branch_miss=    1051 cache_miss=       0 cache_ref=     33858 items=         1 avg_time=    176116 ns]
find_tweet<yyjson>/manual_time                            611327 ns       642309 ns         1152           9.392k           1.88491G             147        69.728k    1.23703M              1.95882          2.98474k        3.6922G          2.80059M                    4.43472                     2.26397           2.98474k    7.33221k   631.515k       985.168M/s    1042.98   41.7192k   1.45264M         2.30025   1.63579k/s 2.37621G/s     2.80107M               4.43547                1.92825          1       1.63579k/s [BEST: throughput=  1.88 GB/s doc_throughput=  2984 docs/s instructions=     2800590 cycles=     1237026 branch_miss=    9392 cache_miss=     147 cache_ref=     69728 items=         1 avg_time=    611326 ns]
find_tweet<yyjson_insitu>/manual_time                     408890 ns       439219 ns         1711           6.645k           2.16404G             646         38.29k    1074.17k              1.70095          3.42675k       3.68093G          2.80027M                    4.43421                      2.6069           3.42675k    7.14427k   631.515k       1.43839G/s    16.0695   23.4242k   1.17548M         1.86137   2.44565k/s 2.87482G/s     2.80053M               4.43462                2.38245          1       2.44565k/s [BEST: throughput=  2.16 GB/s doc_throughput=  3426 docs/s instructions=     2800269 cycles=     1074175 branch_miss=    6645 cache_miss=     646 cache_ref=     38290 items=         1 avg_time=    408889 ns]
find_tweet<sajson>/manual_time                            572944 ns       602878 ns         1219           9.914k           1.11281G               0         38.47k    2.09505M              3.31749          1.76213k       3.69174G          5.71503M                    9.04971                     2.72788           1.76213k    10.4758k   631.515k       1051.17M/s    6.72436   38.3759k   2.11371M         3.34704   1.74537k/s  3.6892G/s     5.71503M               9.04971                2.70379          1       1.74537k/s [BEST: throughput=  1.11 GB/s doc_throughput=  1762 docs/s instructions=     5715026 cycles=     2095046 branch_miss=    9914 cache_miss=       0 cache_ref=     38470 items=         1 avg_time=    572944 ns]
find_tweet<rapidjson>/manual_time                        2410470 ns      2439137 ns          291          29.347k            284.41M         14.816k        49.038k    8.19687M              12.9797           450.362       3.69156G          21.7593M                    34.4557                     2.65459            450.362     29.786k   631.515k       249.852M/s    1022.55   28.6195k   8.33848M         13.2039    414.857/s 3.45928G/s     21.7601M               34.4571                2.60961          1        414.857/s [BEST: throughput=  0.28 GB/s doc_throughput=   450 docs/s instructions=    21759320 cycles=     8196874 branch_miss=   29347 cache_miss=   14816 cache_ref=     49038 items=         1 avg_time=   2410469 ns]
find_tweet<rapidjson_insitu>/manual_time                 1506494 ns      1536208 ns          460          26.105k           454.234M             100        36.246k    5.13234M              8.12703           719.277       3.69157G          13.1995M                    20.9013                     2.57183            719.277    30.9739k   631.515k       399.776M/s   2.57594k   29.0174k   5.29034M         8.37722    663.793/s 3.51169G/s     13.1998M               20.9018                2.49508          1        663.793/s [BEST: throughput=  0.45 GB/s doc_throughput=   719 docs/s instructions=    13199505 cycles=     5132339 branch_miss=   26105 cache_miss=     100 cache_ref=     36246 items=         1 avg_time=   1506493 ns]
find_tweet<nlohmann_json>/manual_time                    6292667 ns      6323163 ns          114         102.719k           104.193M              84       170.154k    22.3656M              35.4157           164.988       3.69006G          63.6857M                    100.846                     2.84749            164.988    116.423k   631.515k       95.7082M/s    223.667   338.093k   23.2134M         36.7583    158.915/s 3.68896G/s     62.3234M               98.6888                 2.6848          1        158.915/s [BEST: throughput=  0.10 GB/s doc_throughput=   164 docs/s instructions=    63685743 cycles=    22365577 branch_miss=  102719 cache_miss=      84 cache_ref=    170154 items=         1 avg_time=   6292667 ns]
top_tweet<simdjson_dom>/manual_time                       352263 ns       380875 ns         1986           3.607k           1.80075G               0        93.262k    1.29479M              2.05029          2.85148k       3.69207G          4.26107M                    6.74737                     3.29093           2.85148k    3.68901k   631.515k       1.66962G/s    11.2115   93.1211k   1.29945M         2.05767   2.83879k/s 3.68886G/s     4.26107M               6.74737                3.27913          1       2.83879k/s [BEST: throughput=  1.80 GB/s doc_throughput=  2851 docs/s instructions=     4261066 cycles=     1294789 branch_miss=    3607 cache_miss=       0 cache_ref=     93262 items=         1 avg_time=    352262 ns]
top_tweet<simdjson_ondemand>/manual_time                  227094 ns       255416 ns         3081           1.716k           2.79881G               0        57.794k     833.22k               1.3194           4.4319k       3.69275G          2.95277M                    4.67569                      3.5438            4.4319k    1.88014k   631.515k       2.58987G/s   0.714378   57.8506k   837.892k          1.3268   4.40346k/s 3.68962G/s     2.95277M               4.67569                3.52404          1       4.40346k/s [BEST: throughput=  2.80 GB/s doc_throughput=  4431 docs/s instructions=     2952767 cycles=      833220 branch_miss=    1716 cache_miss=       0 cache_ref=     57794 items=         1 avg_time=    227094 ns]
top_tweet<simdjson_ondemand_forward_only>/manual_time     236700 ns       265055 ns         2956           1.996k           2.68356G               0        58.292k    868.926k              1.37594          4.24941k       3.69242G          3.17844M                    5.03305                      3.6579           4.24941k    2.14569k   631.515k       2.48476G/s   0.566306   58.5029k   873.423k         1.38306   4.22475k/s 3.68999G/s     3.17845M               5.03305                3.63907          1       4.22475k/s [BEST: throughput=  2.68 GB/s doc_throughput=  4249 docs/s instructions=     3178445 cycles=      868926 branch_miss=    1996 cache_miss=       0 cache_ref=     58292 items=         1 avg_time=    236700 ns]
top_tweet<yyjson>/manual_time                             616830 ns       646993 ns         1143           9.604k           1.85508G             241        73.274k    1.25713M              1.99067           2.9375k       3.69284G          2.82786M                     4.4779                     2.24945            2.9375k    7.46262k   631.515k       976.378M/s    975.613   47.0312k   1.47221M         2.33124   1.62119k/s 2.38674G/s     2.82834M               4.47866                1.92115          1       1.62119k/s [BEST: throughput=  1.86 GB/s doc_throughput=  2937 docs/s instructions=     2827861 cycles=     1257135 branch_miss=    9604 cache_miss=     241 cache_ref=     73274 items=         1 avg_time=    616830 ns]
top_tweet<yyjson_insitu>/manual_time                      414622 ns       444067 ns         1686           6.699k           2.13328G             484        42.868k    1089.71k              1.72555          3.37804k       3.68108G          2.82754M                    4.47739                     2.59476           3.37804k    7.27463k   631.515k       1.41851G/s    48.3849   28.6286k   1.19652M         1.89468   2.41184k/s 2.88581G/s      2.8278M               4.47781                2.36336          1       2.41184k/s [BEST: throughput=  2.13 GB/s doc_throughput=  3378 docs/s instructions=     2827540 cycles=     1089710 branch_miss=    6699 cache_miss=     484 cache_ref=     42868 items=         1 avg_time=    414621 ns]
top_tweet<sajson>/manual_time                             577868 ns       606798 ns         1212          10.077k           1.10362G               0        43.486k    2.11264M              3.34534          1.74758k       3.69199G          5.74502M                     9.0972                     2.71936           1.74758k    10.5965k   631.515k       1042.21M/s    1.37046   43.6088k   2.13163M         3.37542    1.7305k/s 3.68878G/s     5.74502M                9.0972                2.69513          1        1.7305k/s [BEST: throughput=  1.10 GB/s doc_throughput=  1747 docs/s instructions=     5745018 cycles=     2112635 branch_miss=   10077 cache_miss=       0 cache_ref=     43486 items=         1 avg_time=    577867 ns]
top_tweet<rapidjson>/manual_time                         2401507 ns      2430482 ns          293          29.627k           285.962M          8.984k        51.997k    8.15219M              12.9089           452.819       3.69147G          21.8184M                    34.5493                     2.67639            452.819    30.0484k   631.515k       250.784M/s   1.14592k   32.7318k   8.30641M         13.1531    416.405/s 3.45883G/s     21.8191M               34.5503                2.62677          1        416.405/s [BEST: throughput=  0.29 GB/s doc_throughput=   452 docs/s instructions=    21818416 cycles=     8152195 branch_miss=   29627 cache_miss=    8984 cache_ref=     51997 items=         1 avg_time=   2401506 ns]
top_tweet<rapidjson_insitu>/manual_time                  1520816 ns      1549635 ns          470          26.138k           420.663M              26        31.526k     5.2057M               8.2432           666.117       3.46761G          13.2542M                    20.9879                     2.54609            666.117    32.3177k   631.515k       396.011M/s   2.67089k   34.1705k   5.34157M         8.45834    657.542/s 3.51231G/s     13.2543M               20.9881                2.48135          1        657.542/s [BEST: throughput=  0.42 GB/s doc_throughput=   666 docs/s instructions=    13254199 cycles=     5205704 branch_miss=   26138 cache_miss=      26 cache_ref=     31526 items=         1 avg_time=   1520816 ns]
top_tweet<nlohmann_json>/manual_time                     8979450 ns      9009882 ns           78         192.366k           70.9407M             275       397.369k    32.8455M              52.0106           112.334       3.68967G           85.773M                    135.821                     2.61141            112.334    198.231k   631.515k       67.0709M/s    292.128   416.169k   33.1264M         52.4555    111.365/s 3.68914G/s     86.1291M               136.385                2.60001          1        111.365/s [BEST: throughput=  0.07 GB/s doc_throughput=   112 docs/s instructions=    85773028 cycles=    32845481 branch_miss=  192366 cache_miss=     275 cache_ref=    397369 items=         1 avg_time=   8979450 ns]
