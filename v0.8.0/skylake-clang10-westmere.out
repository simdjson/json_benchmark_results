run_benchmark: v0.8.0 /home/jkeiser/simdjson_benchmark_results/v0.8.0/skylake-clang10-westmere.json -DCMAKE_BUILD_TYPE=Release -DSIMDJSON_EXCLUDE_IMPLEMENTATION=haswell
git reset --hard v0.8.0
HEAD is now at c96ff018 Version 0.8.
cmake -DCMAKE_BUILD_TYPE=Release -DSIMDJSON_EXCLUDE_IMPLEMENTATION=haswell -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The CXX compiler identification is Clang 10.0.1
-- The C compiler identification is Clang 10.0.1
-- Check for working CXX compiler: /usr/bin/clang++-10
-- Check for working CXX compiler: /usr/bin/clang++-10 -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Check for working C compiler: /usr/bin/clang-10
-- Check for working C compiler: /usr/bin/clang-10 -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Excluding implementation haswell due to SIMDJSON_EXCLUDE_IMPLEMENTATION=haswell
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed
-- Check if compiler accepts -pthread
-- Check if compiler accepts -pthread - yes
-- Found Threads: TRUE  
-- Looking for fork
-- Looking for fork - found
-- Looking for wait
-- Looking for wait - found
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- Found Git: /usr/bin/git (found version "2.27.0") 
-- git Version: v0.2.1-c96ff018
-- Version: 0.2.1
-- Performing Test HAVE_CXX_FLAG_STD_CXX11
-- Performing Test HAVE_CXX_FLAG_STD_CXX11 - Success
-- Performing Test HAVE_CXX_FLAG_WALL
-- Performing Test HAVE_CXX_FLAG_WALL - Success
-- Performing Test HAVE_CXX_FLAG_WEXTRA
-- Performing Test HAVE_CXX_FLAG_WEXTRA - Success
-- Performing Test HAVE_CXX_FLAG_WSHADOW
-- Performing Test HAVE_CXX_FLAG_WSHADOW - Success
-- Performing Test HAVE_CXX_FLAG_WERROR
-- Performing Test HAVE_CXX_FLAG_WERROR - Success
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32 - Success
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED - Success
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WD654
-- Performing Test HAVE_CXX_FLAG_WD654 - Failed
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY - Success
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES -- failed to compile
-- Performing Test HAVE_CXX_FLAG_COVERAGE
-- Performing Test HAVE_CXX_FLAG_COVERAGE - Success
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Performing Test USE_BOOST_JSON
-- Performing Test USE_BOOST_JSON - Failed
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Found Python3: /usr/bin/python3.8 (found version "3.8.6") found components: Interpreter 
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 10
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
Scanning dependencies of target benchmark
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_api_internal.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_name.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_name.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_register.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_register.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_runner.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_runner.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/colorprint.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/colorprint.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/commandlineflags.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/commandlineflags.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/complexity.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/complexity.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/console_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/console_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/counter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/counter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/csv_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/csv_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/json_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/json_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/sleep.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sleep.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/statistics.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/statistics.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/string_util.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/string_util.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/sysinfo.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sysinfo.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/timers.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/timers.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -P CMakeFiles/benchmark.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/benchmark.dir/link.txt --verbose=1
/usr/bin/ar qc libbenchmark.a  CMakeFiles/benchmark.dir/benchmark.cc.o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o CMakeFiles/benchmark.dir/benchmark_name.cc.o CMakeFiles/benchmark.dir/benchmark_register.cc.o CMakeFiles/benchmark.dir/benchmark_runner.cc.o CMakeFiles/benchmark.dir/colorprint.cc.o CMakeFiles/benchmark.dir/commandlineflags.cc.o CMakeFiles/benchmark.dir/complexity.cc.o CMakeFiles/benchmark.dir/console_reporter.cc.o CMakeFiles/benchmark.dir/counter.cc.o CMakeFiles/benchmark.dir/csv_reporter.cc.o CMakeFiles/benchmark.dir/json_reporter.cc.o CMakeFiles/benchmark.dir/reporter.cc.o CMakeFiles/benchmark.dir/sleep.cc.o CMakeFiles/benchmark.dir/statistics.cc.o CMakeFiles/benchmark.dir/string_util.cc.o CMakeFiles/benchmark.dir/sysinfo.cc.o CMakeFiles/benchmark.dir/timers.cc.o
/usr/bin/ranlib libbenchmark.a
[ 80%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
Scanning dependencies of target generated-data
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated && /usr/bin/ruby genfeaturejson.rb /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-miss.json ...
[ 80%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/clang++-10  -DSIMDJSON_IMPLEMENTATION_HASWELL=0 -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/include  -O3 -DNDEBUG -fPIC   -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -pthread -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/clang++-10 -fPIC -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.7 -o ../libsimdjson.so.7.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.7.0.0 ../libsimdjson.so.7 ../libsimdjson.so
[ 80%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
Scanning dependencies of target yyjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/clang-10  -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src  -O3 -DNDEBUG   -o CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o   -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src/yyjson.c
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -P CMakeFiles/yyjson.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -E cmake_link_script CMakeFiles/yyjson.dir/link.txt --verbose=1
/usr/bin/ar qc libyyjson.a  CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o
/usr/bin/ranlib libyyjson.a
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/clang++-10  -DRAPIDJSON_HAS_STDSTRING -DSAJSON_UNSORTED_OBJECT_KEYS -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_COMPETITION_NLOHMANN_JSON -DSIMDJSON_COMPETITION_RAPIDJSON -DSIMDJSON_COMPETITION_SAJSON -DSIMDJSON_COMPETITION_YYJSON -DSIMDJSON_IMPLEMENTATION_HASWELL=0 -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/rapidjson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/sajson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/json  -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/clang++-10  -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.7.0.0 ../_deps/google_benchmarks/src/libbenchmark.a ../dependencies/libyyjson.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.8.0/skylake-clang10-westmere.json --benchmark_out_format=json
2021-01-25 02:41:41
Running benchmark/bench_ondemand
Run on (4 X 4000 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 256 KiB (x4)
  L3 Unified 8192 KiB (x1)
Load Average: 1.00, 0.65, 0.52
simdjson::dom implementation:      westmere
simdjson::ondemand implementation: fallback

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                  365501 ns       394239 ns         1919           3.687k           1.73781G               0        94.544k    1.34174M              2.12464          2.75182k       3.69223G          4.37538M                    6.92838                     3.26097           275.182k    3.82718k   631.515k       1.60915G/s    1.66285   94.7097k   1.34837M         2.13514   2.73597k/s 3.68911G/s     4.37538M               6.92838                3.24493        100       273.597k/s [BEST: throughput=  1.74 GB/s doc_throughput=  2751 docs/s instructions=     4375376 cycles=     1341741 branch_miss=    3687 cache_miss=       0 cache_ref=     94544 items=       100 avg_time=    365500 ns]
partial_tweets<simdjson_ondemand>/manual_time             242538 ns       271156 ns         2886           2.305k           2.61917G               0        59.758k    890.378k              1.40991          4.14743k       3.69278G          3.31379M                    5.24736                     3.72178           414.743k    2.46712k   631.515k       2.42496G/s   0.866251   59.7162k   895.048k          1.4173   4.12307k/s 3.69035G/s     3.31379M               5.24736                3.70236        100       412.307k/s [BEST: throughput=  2.62 GB/s doc_throughput=  4147 docs/s instructions=     3313787 cycles=      890378 branch_miss=    2305 cache_miss=       0 cache_ref=     59758 items=       100 avg_time=    242537 ns]
partial_tweets<yyjson>/manual_time                        638300 ns       668740 ns         1096           9.689k           1.81023G             338        79.143k    1.28839M              2.04015          2.86649k       3.69315G          2.90333M                    4.59741                     2.25346           286.649k    7.50567k   631.515k       943.537M/s    963.164   51.9625k    1.5037M         2.38109   1.56666k/s 2.35578G/s     2.90382M               4.59818                1.93112        100       156.666k/s [BEST: throughput=  1.81 GB/s doc_throughput=  2866 docs/s instructions=     2903333 cycles=     1288388 branch_miss=    9689 cache_miss=     338 cache_ref=     79143 items=       100 avg_time=    638300 ns]
partial_tweets<yyjson_insitu>/manual_time                 427110 ns       456547 ns         1640           7.146k           2.06161G              19        48.683k    1.13112M              1.79113          3.26454k        3.6926G          2.90302M                    4.59691                     2.56649           326.454k    7.29006k   631.515k       1.37703G/s    143.324   34.1785k   1.22878M         1.94577   2.34132k/s 2.87697G/s     2.90328M               4.59733                2.36274        100       234.132k/s [BEST: throughput=  2.06 GB/s doc_throughput=  3264 docs/s instructions=     2903020 cycles=     1131125 branch_miss=    7146 cache_miss=      19 cache_ref=     48683 items=       100 avg_time=    427109 ns]
partial_tweets<sajson>/manual_time                        588855 ns       617602 ns         1184          10.092k           1083.13M               0        48.461k    2.15257M              3.40858          1.71514k       3.69195G          5.87178M                    9.29793                      2.7278           171.514k     10.635k   631.515k       1022.76M/s    1.79139   48.3365k   2.17207M         3.43946   1.69821k/s 3.68863G/s     5.87178M               9.29793                2.70331        100       169.821k/s [BEST: throughput=  1.08 GB/s doc_throughput=  1715 docs/s instructions=     5871783 cycles=     2152570 branch_miss=   10092 cache_miss=       0 cache_ref=     48461 items=       100 avg_time=    588855 ns]
partial_tweets<rapidjson>/manual_time                    2428595 ns      2458218 ns          288          30.795k           284.578M             184        54.201k    8.19202M               12.972           450.627       3.69154G          21.9149M                    34.7021                     2.67515           45.0627k    30.8123k   631.515k       247.987M/s    666.927   34.7169k   8.36708M         13.2492    411.761/s 3.44524G/s     21.9158M               34.7036                2.61929        100       41.1761k/s [BEST: throughput=  0.28 GB/s doc_throughput=   450 docs/s instructions=    21914885 cycles=     8192016 branch_miss=   30795 cache_miss=     184 cache_ref=     54201 items=       100 avg_time=   2428594 ns]
partial_tweets<rapidjson_insitu>/manual_time             1516622 ns      1545475 ns          463          26.338k           449.056M             294        45.958k    5.19152M              8.22074           711.078       3.69157G          13.3444M                    21.1308                     2.57042           71.1078k    26.2196k   631.515k       397.106M/s    270.918   35.5044k   5.24868M         8.31126     659.36/s 3.46077G/s     13.3448M               21.1314                 2.5425        100        65.936k/s [BEST: throughput=  0.45 GB/s doc_throughput=   711 docs/s instructions=    13344398 cycles=     5191518 branch_miss=   26338 cache_miss=     294 cache_ref=     45958 items=       100 avg_time=   1516621 ns]
partial_tweets<nlohmann_json>/manual_time                8143854 ns      8180032 ns           87         153.607k           80.6192M             186       229.488k     28.899M              45.7614            127.66       3.68925G          78.2185M                    123.858                     2.70661            12.766k    168.019k   631.515k       73.9527M/s   1.79723k   370.359k   30.0401M         47.5684    122.792/s 3.68869G/s     79.1968M               125.408                2.63637        100       12.2792k/s [BEST: throughput=  0.08 GB/s doc_throughput=   127 docs/s instructions=    78218456 cycles=    28899031 branch_miss=  153607 cache_miss=     186 cache_ref=    229488 items=       100 avg_time=   8143853 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                 102771417 ns    106147693 ns            7         971.492k           448.312M        10.9348M       15.4793M    378.505M              8.22858           9.74617       3.68897G          1.16406G                    25.3062                     3.07541           9.74617M     971.85k   45.9988M       426.849M/s   10.9853M    15.481M   378.963M         8.23856    9.73033/s 3.68744G/s     1.16406G               25.3062                3.07168      1000k       9.73033M/s [BEST: throughput=  0.45 GB/s doc_throughput=     9 docs/s instructions=  1164056359 cycles=   378504678 branch_miss=  971492 cache_miss=10934781 cache_ref=  15479317 items=   1000000 avg_time= 102771417 ns]
large_random<simdjson_ondemand>/manual_time             70912716 ns     74302971 ns           10         912.938k           649.286M         5.7491M       8.07155M    261.322M              5.68105           14.1153       3.68863G          752.513M                    16.3594                     2.87964           14.1153M    913.567k   45.9988M       618.618M/s   5.76831M   8.07281M     261.5M         5.68494    14.1018/s 3.68764G/s     752.513M               16.3594                2.87767      1000k       14.1018M/s [BEST: throughput=  0.65 GB/s doc_throughput=    14 docs/s instructions=   752512830 cycles=   261321552 branch_miss=  912938 cache_miss= 5749100 cache_ref=   8071551 items=   1000000 avg_time=  70912715 ns]
large_random<simdjson_ondemand_unordered>/manual_time   71275589 ns     74645583 ns           10         941.071k            645.69M        5.69986M       8.06839M    262.675M              5.71047           14.0371       3.68719G          751.513M                    16.3377                       2.861           14.0371M    943.705k   45.9988M       615.468M/s   5.74057M   8.07165M   262.873M         5.71478      14.03/s 3.68812G/s     751.513M               16.3377                2.85885      1000k         14.03M/s [BEST: throughput=  0.65 GB/s doc_throughput=    14 docs/s instructions=   751512832 cycles=   262674504 branch_miss=  941071 cache_miss= 5699858 cache_ref=   8068391 items=   1000000 avg_time=  71275589 ns]
large_random<yyjson>/manual_time                       121607371 ns    125017906 ns            6         664.596k           378.393M        5.69262M        8.9249M    328.335M              7.13791           8.22616       2.70094G           866.68M                    18.8414                     2.63962           8.22616M    664.038k   45.9988M       360.733M/s   5.70377M   8.93633M   328.358M         7.13841    8.22319/s 2.70015G/s      866.68M               18.8414                2.63943      1000k       8.22319M/s [BEST: throughput=  0.38 GB/s doc_throughput=     8 docs/s instructions=   866679884 cycles=   328334991 branch_miss=  664596 cache_miss= 5692622 cache_ref=   8924904 items=   1000000 avg_time= 121607371 ns]
large_random<yyjson_insitu>/manual_time                103413262 ns    106816690 ns            7         660.734k           445.211M        4.84251M       7.62618M    295.798M              6.43056           9.67876       2.86296G          860.559M                    18.7083                     2.90928           9.67876M    663.384k   45.9988M       424.199M/s   4.85178M   7.62593M       296M         6.43495    9.66994/s  2.8623G/s     860.559M               18.7083                 2.9073      1000k       9.66994M/s [BEST: throughput=  0.45 GB/s doc_throughput=     9 docs/s instructions=   860559432 cycles=   295797844 branch_miss=  660734 cache_miss= 4842508 cache_ref=   7626180 items=   1000000 avg_time= 103413261 ns]
large_random<sajson>/manual_time                        91796331 ns     95209652 ns            8         581.728k           501.943M        8.30157M       12.0763M    338.023M              7.34852           10.9121       3.68854G          1.13399G                    24.6526                     3.35477           10.9121M    581.824k   45.9988M       477.882M/s   8.38873M   12.1385M   338.541M         7.35977    10.8937/s 3.68795G/s     1.13399G               24.6526                3.34964      1000k       10.8937M/s [BEST: throughput=  0.50 GB/s doc_throughput=    10 docs/s instructions=  1133989144 cycles=   338022744 branch_miss=  581728 cache_miss= 8301567 cache_ref=  12076328 items=   1000000 avg_time=  91796330 ns]
large_random<rapidjson>/manual_time                    213398399 ns    216820410 ns            3         586.272k           221.293M        7.03652M       10.9024M    708.441M              15.4013           4.81086       3.40821G          2.02114G                    43.9391                     2.85294           4.81086M    586.739k   45.9988M       205.568M/s    6.5334M   10.2443M    710.25M         15.4406    4.68607/s 3.32828G/s     2.02115G               43.9393                2.84569      1000k       4.68607M/s [BEST: throughput=  0.22 GB/s doc_throughput=     4 docs/s instructions=  2021144147 cycles=   708441491 branch_miss=  586272 cache_miss= 7036524 cache_ref=  10902400 items=   1000000 avg_time= 213398398 ns]
large_random<rapidjson_lossless>/manual_time           247099529 ns    250504410 ns            3         587.367k           190.715M        7.00507M       10.9192M    831.288M               18.072           4.14608       3.44659G          2.48311G                    53.9821                     2.98706           4.14608M    590.707k   45.9988M       177.531M/s   6.53404M   10.2712M   834.198M         18.1352    4.04695/s 3.37596G/s     2.48312G               53.9823                2.97666      1000k       4.04695M/s [BEST: throughput=  0.19 GB/s doc_throughput=     4 docs/s instructions=  2483111105 cycles=   831288052 branch_miss=  587367 cache_miss= 7005066 cache_ref=  10919193 items=   1000000 avg_time= 247099529 ns]
large_random<rapidjson_insitu>/manual_time             237411992 ns    240844581 ns            3         584.352k           198.387M        8.11035M       12.4999M    797.121M              17.3292           4.31288       3.43789G          1.75214G                    38.0911                     2.19809           4.31288M    583.192k   45.9988M       184.775M/s   7.65433M   11.8469M   798.644M         17.3623    4.21209/s 3.36396G/s     1.75215G               38.0913                2.19391      1000k       4.21209M/s [BEST: throughput=  0.20 GB/s doc_throughput=     4 docs/s instructions=  1752143847 cycles=   797120766 branch_miss=  584352 cache_miss= 8110352 cache_ref=  12499927 items=   1000000 avg_time= 237411992 ns]
large_random<nlohmann_json>/manual_time               1242702235 ns   1245982032 ns            1         4.11308M           37.0151M        46.7889M        61.071M    4.57077G              99.3672          0.804698       3.67809G          12.3806G                     269.15                     2.70864           804.698k    4.11308M   45.9988M       35.3004M/s   46.7889M    61.071M   4.57077G         99.3672   0.804698/s 3.67809G/s     12.3806G                269.15                2.70864      1000k       804.698k/s [BEST: throughput=  0.04 GB/s doc_throughput=     0 docs/s instructions= 12380552153 cycles=  4570768639 branch_miss= 4113077 cache_miss=46788913 cache_ref=  61071022 items=   1000000 avg_time=1242702235 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                       111124107 ns    121500686 ns            6         1094.16k           1.23657G        15.9201M       22.4424M    409.615M              2.98325           9.00604       3.68901G          1.23813G                    9.01737                     3.02267           4.72176M    1093.48k   137.305M       1.15074G/s   15.9694M   22.4975M   409.799M         2.98459    8.99895/s 3.68776G/s     1.23813G               9.01737                3.02131   524.288k       4.71804M/s [BEST: throughput=  1.24 GB/s doc_throughput=     9 docs/s instructions=  1238129982 cycles=   409615011 branch_miss= 1094165 cache_miss=15920143 cache_ref=  22442431 items=    524288 avg_time= 111124107 ns]
kostya<simdjson_ondemand>/manual_time                   76018185 ns     86348057 ns            9         520.743k            1.8079G        10.2001M        14.108M    280.172M              2.04051            13.167       3.68903G          846.724M                    6.16674                     3.02216           6.90332M    521.116k   137.305M       1.68217G/s   10.2252M    14.147M   280.324M         2.04161    13.1547/s 3.68759G/s     846.724M               6.16674                3.02052   524.288k       6.89688M/s [BEST: throughput=  1.81 GB/s doc_throughput=    13 docs/s instructions=   846723939 cycles=   280171603 branch_miss=  520743 cache_miss=10200098 cache_ref=  14108048 items=    524288 avg_time=  76018184 ns]
kostya<yyjson>/manual_time                             177449298 ns    187813063 ns            4         414.151k           774.959M        11.2139M       16.2569M    457.303M              3.33056           5.64407       2.58105G          978.903M                     7.1294                      2.1406           2.95912M    414.411k   137.305M       737.925M/s   11.2135M   16.2315M   457.326M         3.33073    5.63541/s 2.57722G/s     978.903M                7.1294                2.14049   524.288k       2.95458M/s [BEST: throughput=  0.77 GB/s doc_throughput=     5 docs/s instructions=   978902581 cycles=   457303043 branch_miss=  414151 cache_miss=11213923 cache_ref=  16256910 items=    524288 avg_time= 177449297 ns]
kostya<yyjson_insitu>/manual_time                      123317287 ns    133679022 ns            6         412.221k           1.11424G        8.68128M       12.3929M    360.409M              2.62488           8.11506       2.92474G          960.633M                    6.99634                     2.66539           4.25463M    412.411k   137.305M       1061.85M/s   8.68303M    12.395M   360.478M         2.62538    8.10916/s 2.92318G/s     960.633M               6.99634                2.66489   524.288k       4.25154M/s [BEST: throughput=  1.11 GB/s doc_throughput=     8 docs/s instructions=   960632917 cycles=   360409485 branch_miss=  412221 cache_miss= 8681277 cache_ref=  12392861 items=    524288 avg_time= 123317287 ns]
kostya<sajson>/manual_time                             137906058 ns    148258787 ns            5         354.833k           996.745M        12.2906M       17.1488M     508.17M              3.70103           7.25935       3.68898G          1.54442G                    11.2481                     3.03919           3.80599M    355.075k   137.305M       949.518M/s   12.3113M   17.1817M    508.53M         3.70366    7.25131/s 3.68751G/s     1.54442G               11.2481                3.03703   524.288k       3.80178M/s [BEST: throughput=  1.00 GB/s doc_throughput=     7 docs/s instructions=  1544424211 cycles=   508169762 branch_miss=  354833 cache_miss=12290563 cache_ref=  17148843 items=    524288 avg_time= 137906058 ns]
kostya<rapidjson>/manual_time                          281103557 ns    291502995 ns            3         1005.58k           494.375M        8.28546M        12.314M    943.495M              6.87152           3.60056       3.39711G          2.74501G                    19.9921                     2.90941           1.88773M    1002.89k   137.305M       465.822M/s   8.00132M    11.947M   945.969M         6.88954    3.55741/s  3.3652G/s     2.74502G               19.9921                 2.9018   524.288k       1.86511M/s [BEST: throughput=  0.49 GB/s doc_throughput=     3 docs/s instructions=  2745013119 cycles=   943494519 branch_miss= 1005584 cache_miss= 8285459 cache_ref=  12314027 items=    524288 avg_time= 281103556 ns]
kostya<rapidjson_lossless>/manual_time                 302498322 ns    312915714 ns            2         967.023k           457.751M         8.2967M       12.2245M     1024.5M              7.46148           3.33383        3.4155G          3.01187G                    21.9356                     2.93984           1.74789M    967.678k   137.305M       432.876M/s   8.07356M   11.9523M   1026.69M         7.47741     3.3058/s 3.39402G/s     3.01187G               21.9356                2.93358   524.288k       1.73319M/s [BEST: throughput=  0.46 GB/s doc_throughput=     3 docs/s instructions=  3011866410 cycles=  1024498397 branch_miss=  967023 cache_miss= 8296702 cache_ref=  12224542 items=    524288 avg_time= 302498322 ns]
kostya<rapidjson_insitu>/manual_time                   273609614 ns    284011079 ns            3          1.3008M           506.428M         11.944M       16.0744M    918.661M              6.69066           3.68835       3.38834G          2.22935G                    16.2365                     2.42674           1.93376M    1.20295M   137.305M       478.581M/s   11.6493M   15.7075M   918.131M          6.6868    3.65484/s 3.35562G/s     2.22935G               16.2365                2.42814   524.288k       1.91619M/s [BEST: throughput=  0.51 GB/s doc_throughput=     3 docs/s instructions=  2229350564 cycles=   918661204 branch_miss= 1300800 cache_miss=11943952 cache_ref=  16074407 items=    524288 avg_time= 273609613 ns]
kostya<nlohmann_json>/manual_time                     1832920832 ns   1843166795 ns            1         14.9156M           74.9105M        69.4425M       86.9047M    6.76099G              49.2407          0.545577       3.68864G          17.2831G                    125.874                     2.55629            286.04k    14.9156M   137.305M       71.4402M/s   69.4425M   86.9047M   6.76099G         49.2407   0.545577/s 3.68864G/s     17.2831G               125.874                2.55629   524.288k        286.04k/s [BEST: throughput=  0.07 GB/s doc_throughput=     0 docs/s instructions= 17283073163 cycles=  6760989883 branch_miss=14915627 cache_miss=69442540 cache_ref=  86904729 items=    524288 avg_time=1832920832 ns]
distinct_user_id<simdjson_dom>/manual_time                358196 ns       388515 ns         1955           3.791k           1.77124G               0        95.849k    1.31645M              2.08459          2.80475k       3.69232G           4.3095M                    6.82406                     3.27357           322.546k    3.88341k   631.515k       1.64196G/s      6.089   95.9193k   1.32163M         2.09279   2.79177k/s 3.68968G/s      4.3095M               6.82406                3.26075        115       321.053k/s [BEST: throughput=  1.77 GB/s doc_throughput=  2804 docs/s instructions=     4309498 cycles=     1316452 branch_miss=    3791 cache_miss=       0 cache_ref=     95849 items=       115 avg_time=    358196 ns]
distinct_user_id<simdjson_ondemand>/manual_time           229320 ns       258641 ns         3051            1.74k           2.76994G               0        57.906k     841.88k              1.33311          4.38618k       3.69263G          2.93274M                    4.64397                     3.48356            504.41k    1.87639k   631.515k       2.56473G/s    1.47525   58.0502k   846.289k         1.34009   4.36072k/s 3.69043G/s     2.93274M               4.64397                3.46541        115       501.483k/s [BEST: throughput=  2.77 GB/s doc_throughput=  4386 docs/s instructions=     2932736 cycles=      841880 branch_miss=    1740 cache_miss=       0 cache_ref=     57906 items=       115 avg_time=    229319 ns]
distinct_user_id<yyjson>/manual_time                      547227 ns       580902 ns         1000           6.507k           1.92593G         22.007k         76.72k    1.21081M              1.91731           3.0497k       3.69261G          2.86148M                    4.53113                     2.36327           350.716k    7.29839k   631.515k       1100.57M/s    7.4526k   58.1829k   1.42652M         2.25889   1.82739k/s 2.60682G/s     2.86167M               4.53144                2.00605        115        210.15k/s [BEST: throughput=  1.93 GB/s doc_throughput=  3049 docs/s instructions=     2861478 cycles=     1210811 branch_miss=    6507 cache_miss=   22007 cache_ref=     76720 items=       115 avg_time=    547227 ns]
distinct_user_id<yyjson_insitu>/manual_time               419522 ns       452356 ns         1669           6.729k           2.10276G             910        46.927k    1.10541M              1.75041          3.32972k       3.68071G          2.86097M                    4.53032                     2.58814           382.917k    7.37895k   631.515k       1.40194G/s    69.2786   32.6246k    1.2141M         1.92251   2.38366k/s   2.894G/s     2.86123M               4.53074                2.35667        115       274.121k/s [BEST: throughput=  2.10 GB/s doc_throughput=  3329 docs/s instructions=     2860965 cycles=     1105413 branch_miss=    6729 cache_miss=     910 cache_ref=     46927 items=       115 avg_time=    419522 ns]
distinct_user_id<sajson>/manual_time                      585623 ns       616240 ns         1194          10.201k           1087.72M               0        47.825k    2.14345M              3.39413          1.72239k       3.69186G          5.81022M                    9.20044                     2.71069           198.075k    10.7292k   631.515k       1028.41M/s   0.798995   47.8591k   2.16034M         3.42088   1.70758k/s 3.68896G/s     5.81022M               9.20045                 2.6895        115       196.372k/s [BEST: throughput=  1.09 GB/s doc_throughput=  1722 docs/s instructions=     5810219 cycles=     2143446 branch_miss=   10201 cache_miss=       0 cache_ref=     47825 items=       115 avg_time=    585622 ns]
distinct_user_id<rapidjson>/manual_time                  2413114 ns      2444167 ns          291          30.702k           284.313M          9.005k        55.603k     8.1996M               12.984           450.208       3.69153G           21.843M                    34.5883                     2.66392            51.774k    30.8611k   631.515k       249.578M/s   1.30619k   36.6148k   8.34962M         13.2216    414.402/s  3.4601G/s     21.8437M               34.5893                2.61613        115       47.6563k/s [BEST: throughput=  0.28 GB/s doc_throughput=   450 docs/s instructions=    21843038 cycles=     8199596 branch_miss=   30702 cache_miss=    9005 cache_ref=     55603 items=       115 avg_time=   2413114 ns]
distinct_user_id<rapidjson_insitu>/manual_time           1490050 ns      1520420 ns          485          26.498k           450.219M              35        45.968k    5.17812M              8.19952           712.919       3.69158G          13.2777M                    21.0252                      2.5642           81.9857k    26.2626k   631.515k       404.188M/s   2.66523k   38.3761k   5.22732M         8.27742    671.118/s 3.50815G/s     13.2781M               21.0257                2.54013        115       77.1786k/s [BEST: throughput=  0.45 GB/s doc_throughput=   712 docs/s instructions=    13277744 cycles=     5178118 branch_miss=   26498 cache_miss=      35 cache_ref=     45968 items=       115 avg_time=   1490050 ns]
distinct_user_id<nlohmann_json>/manual_time              7513624 ns      7548305 ns           95         127.669k           87.2423M          2.988k       222.109k    26.6916M              42.2661           138.148       3.68739G          73.6306M                    116.594                     2.75856            15.887k    144.249k   631.515k       80.1557M/s    168.032   429.772k   27.7184M         43.8919    133.092/s 3.68909G/s     72.2743M               114.446                2.60745        115       15.3055k/s [BEST: throughput=  0.09 GB/s doc_throughput=   138 docs/s instructions=    73630622 cycles=    26691648 branch_miss=  127669 cache_miss=    2988 cache_ref=    222109 items=       115 avg_time=   7513624 ns]
find_tweet<simdjson_dom>/manual_time                      346082 ns       375353 ns         2022           3.498k           1.83427G               0        85.345k    1.27122M              2.01297          2.90455k       3.69232G          4.22418M                    6.68896                     3.32293           2.90455k    3.64565k   631.515k       1.69944G/s    4.39021   85.3054k   1.27705M          2.0222   2.88949k/s 3.69003G/s     4.22418M               6.68896                3.30776          1       2.88949k/s [BEST: throughput=  1.83 GB/s doc_throughput=  2904 docs/s instructions=     4224178 cycles=     1271219 branch_miss=    3498 cache_miss=       0 cache_ref=     85345 items=         1 avg_time=    346081 ns]
find_tweet<simdjson_ondemand>/manual_time                 175837 ns       204347 ns         3976             1014           3.60102G               0        33.954k    647.684k               1.0256           5.7022k       3.69322G          2.42697M                    3.84309                     3.74715            5.7022k     1052.71   631.515k       3.34483G/s  0.0759557   33.8657k    648.99k         1.02767   5.68709k/s 3.69086G/s     2.42697M               3.84309                3.73961          1       5.68709k/s [BEST: throughput=  3.60 GB/s doc_throughput=  5702 docs/s instructions=     2426967 cycles=      647684 branch_miss=    1014 cache_miss=       0 cache_ref=     33954 items=         1 avg_time=    175836 ns]
find_tweet<yyjson>/manual_time                            610439 ns       641555 ns         1159           9.621k           1.88466G             130        68.242k    1.23729M              1.95924          2.98434k       3.69249G          2.80058M                     4.4347                     2.26349           2.98434k    7.33222k   631.515k       986.601M/s    1019.24   41.9237k   1.45246M         2.29996   1.63817k/s 2.37937G/s     2.80127M                4.4358                1.92864          1       1.63817k/s [BEST: throughput=  1.88 GB/s doc_throughput=  2984 docs/s instructions=     2800581 cycles=     1237287 branch_miss=    9621 cache_miss=     130 cache_ref=     68242 items=         1 avg_time=    610438 ns]
find_tweet<yyjson_insitu>/manual_time                     408866 ns       439243 ns         1712           6.736k           2.15859G             688        38.433k    1075.09k               1.7024          3.41811k       3.67479G          2.80027M                    4.43421                     2.60467           3.41811k    7.16408k   631.515k       1.43848G/s     13.264   23.6515k   1.17638M          1.8628   2.44579k/s 2.87718G/s     2.80053M               4.43462                2.38063          1       2.44579k/s [BEST: throughput=  2.16 GB/s doc_throughput=  3418 docs/s instructions=     2800269 cycles=     1075094 branch_miss=    6736 cache_miss=     688 cache_ref=     38433 items=         1 avg_time=    408866 ns]
find_tweet<sajson>/manual_time                            574046 ns       604089 ns         1217          10.215k           1.11058G               0        38.094k    2.09947M              3.32449           1.7586k       3.69212G          5.71503M                    9.04971                     2.72213            1.7586k    10.6193k   631.515k       1049.15M/s    5.54396   38.2313k   2.11807M         3.35394   1.74202k/s 3.68972G/s     5.71503M               9.04971                2.69823          1       1.74202k/s [BEST: throughput=  1.11 GB/s doc_throughput=  1758 docs/s instructions=     5715026 cycles=     2099467 branch_miss=   10215 cache_miss=       0 cache_ref=     38094 items=         1 avg_time=    574045 ns]
find_tweet<rapidjson>/manual_time                        2402070 ns      2431556 ns          292          30.865k           285.549M              98        47.551k    8.16411M              12.9278           452.165       3.69153G          21.7591M                    34.4553                     2.66521            452.165    30.7629k   631.515k       250.725M/s    1030.78   28.3347k   8.31114M         13.1606    416.308/s 3.45999G/s       21.76M               34.4568                2.61817          1        416.308/s [BEST: throughput=  0.29 GB/s doc_throughput=   452 docs/s instructions=    21759056 cycles=     8164109 branch_miss=   30865 cache_miss=      98 cache_ref=     47551 items=         1 avg_time=   2402069 ns]
find_tweet<rapidjson_insitu>/manual_time                 1491414 ns      1521526 ns          460           26.17k           449.492M              84        36.461k    5.18647M              8.21274           711.767       3.69156G          13.1994M                    20.9011                     2.54496            711.767    26.1233k   631.515k       403.818M/s   2.65957k   28.8645k   5.23719M         8.29306    670.504/s 3.51156G/s     13.1997M               20.9016                2.52037          1        670.504/s [BEST: throughput=  0.45 GB/s doc_throughput=   711 docs/s instructions=    13199355 cycles=     5186470 branch_miss=   26170 cache_miss=      84 cache_ref=     36461 items=         1 avg_time=   1491414 ns]
find_tweet<nlohmann_json>/manual_time                    6396749 ns      6425841 ns          113          102.68k           102.929M             114       169.395k    22.6318M              35.8372           162.988        3.6887G          63.6842M                    100.844                     2.81393            162.988    117.931k   631.515k       94.1509M/s    186.513   350.871k   23.5898M         37.3543    156.329/s 3.68778G/s     62.2993M               98.6505                2.64094          1        156.329/s [BEST: throughput=  0.10 GB/s doc_throughput=   162 docs/s instructions=    63684203 cycles=    22631756 branch_miss=  102680 cache_miss=     114 cache_ref=    169395 items=         1 avg_time=   6396748 ns]
top_tweet<simdjson_dom>/manual_time                       354010 ns       382661 ns         1978           3.753k           1.79244G               0        92.879k    1.30078M              2.05978          2.83832k       3.69203G          4.26107M                    6.74737                     3.27578           2.83832k    3.85809k   631.515k       1.66138G/s    15.1785   93.0172k   1.30595M         2.06797   2.82478k/s 3.68903G/s     4.26107M               6.74737                 3.2628          1       2.82478k/s [BEST: throughput=  1.79 GB/s doc_throughput=  2838 docs/s instructions=     4261066 cycles=     1300779 branch_miss=    3753 cache_miss=       0 cache_ref=     92879 items=         1 avg_time=    354010 ns]
top_tweet<simdjson_ondemand>/manual_time                  227065 ns       255518 ns         3079           1.727k           2.80104G               0          57.8k    832.535k              1.31831          4.43544k       3.69266G          2.95277M                    4.67569                     3.54672           4.43544k    1.90061k   631.515k        2.5902G/s   0.236765   57.8673k   837.968k         1.32692   4.40402k/s 3.69043G/s     2.95277M               4.67569                3.52372          1       4.40402k/s [BEST: throughput=  2.80 GB/s doc_throughput=  4435 docs/s instructions=     2952767 cycles=      832535 branch_miss=    1727 cache_miss=       0 cache_ref=     57800 items=         1 avg_time=    227065 ns]
top_tweet<simdjson_ondemand_forward_only>/manual_time     236499 ns       264980 ns         2959           1.916k           2.69088G               0        58.492k    866.664k              1.37236          4.26099k       3.69285G          3.17844M                    5.03305                     3.66745           4.26099k    2.10753k   631.515k       2.48688G/s   0.874282   58.5522k   872.691k          1.3819   4.22835k/s 3.69004G/s     3.17845M               5.03305                3.64212          1       4.22835k/s [BEST: throughput=  2.69 GB/s doc_throughput=  4260 docs/s instructions=     3178445 cycles=      866664 branch_miss=    1916 cache_miss=       0 cache_ref=     58492 items=         1 avg_time=    236499 ns]
top_tweet<yyjson>/manual_time                             615698 ns       645668 ns         1144           9.895k           1.84749G              92        73.565k    1.26223M              1.99874          2.92548k       3.69264G          2.82786M                     4.4779                     2.24036           2.92548k    7.43975k   631.515k       978.174M/s    956.948   47.0573k   1.47089M         2.32914   1.62417k/s 2.38898G/s     2.82834M               4.47866                1.92288          1       1.62417k/s [BEST: throughput=  1.85 GB/s doc_throughput=  2925 docs/s instructions=     2827861 cycles=     1262233 branch_miss=    9895 cache_miss=      92 cache_ref=     73565 items=         1 avg_time=    615697 ns]
top_tweet<yyjson_insitu>/manual_time                      414103 ns       443760 ns         1689           6.834k           2.12203G             487        42.954k    1095.44k              1.73463          3.36023k       3.68094G          2.82754M                    4.47739                     2.58118           3.36023k    7.23032k   631.515k       1.42028G/s    43.7774   28.9751k   1.19539M          1.8929   2.41486k/s 2.88671G/s      2.8278M               4.47781                2.36558          1       2.41486k/s [BEST: throughput=  2.12 GB/s doc_throughput=  3360 docs/s instructions=     2827540 cycles=     1095444 branch_miss=    6834 cache_miss=     487 cache_ref=     42954 items=         1 avg_time=    414103 ns]
top_tweet<sajson>/manual_time                             577639 ns       606730 ns         1207          10.171k           1.10233G               0        43.614k    2.11507M               3.3492          1.74553k       3.69193G          5.74502M                     9.0972                     2.71623           1.74553k    10.5694k   631.515k       1042.62M/s    2.80447   43.5105k   2.13122M         3.37478   1.73118k/s 3.68954G/s     5.74502M                9.0972                2.69564          1       1.73118k/s [BEST: throughput=  1.10 GB/s doc_throughput=  1745 docs/s instructions=     5745018 cycles=     2115072 branch_miss=   10171 cache_miss=       0 cache_ref=     43614 items=         1 avg_time=    577639 ns]
top_tweet<rapidjson>/manual_time                         2408242 ns      2437697 ns          291          30.609k           284.846M          8.769k        52.255k    8.18426M              12.9597           451.052       3.69152G           21.818M                    34.5486                     2.66584            451.052    30.8336k   631.515k       250.083M/s   1.19612k   32.4152k   8.33287M          13.195    415.241/s 3.46014G/s     21.8187M               34.5497                2.61839          1        415.241/s [BEST: throughput=  0.28 GB/s doc_throughput=   451 docs/s instructions=    21817955 cycles=     8184262 branch_miss=   30609 cache_miss=    8769 cache_ref=     52255 items=         1 avg_time=   2408242 ns]
top_tweet<rapidjson_insitu>/manual_time                  1485738 ns      1514624 ns          487          26.177k           452.187M              41        41.254k    5.15554M              8.16376           716.036       3.69155G          13.2539M                    20.9875                     2.57081            716.036    26.1586k   631.515k       405.361M/s   2.59133k   33.9425k   5.21024M         8.25038    673.066/s 3.50684G/s     13.2542M                20.988                2.54388          1        673.066/s [BEST: throughput=  0.45 GB/s doc_throughput=   716 docs/s instructions=    13253931 cycles=     5155538 branch_miss=   26177 cache_miss=      41 cache_ref=     41254 items=         1 avg_time=   1485737 ns]
top_tweet<nlohmann_json>/manual_time                     9024571 ns      9055223 ns           78         192.152k             70.65M             377       393.158k    32.9758M              52.2169           111.874       3.68912G          85.7608M                    135.802                     2.60072            111.874     197.41k   631.515k       66.7355M/s   2.14774k    403.26k   33.2865M         52.7089    110.809/s 3.68843G/s     86.1054M               136.347                 2.5868          1        110.809/s [BEST: throughput=  0.07 GB/s doc_throughput=   111 docs/s instructions=    85760803 cycles=    32975785 branch_miss=  192152 cache_miss=     377 cache_ref=    393158 items=         1 avg_time=   9024571 ns]
