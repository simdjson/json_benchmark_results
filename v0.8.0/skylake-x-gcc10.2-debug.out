run_benchmark: v0.8.0 /home/jkeiser/simdjson_benchmark_results/v0.8.0/skylake-x-gcc10.2-debug.json -DCMAKE_BUILD_TYPE=Debug
git reset --hard v0.8.0
HEAD is now at c96ff018 Version 0.8.
cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The CXX compiler identification is GNU 10.2.0
-- The C compiler identification is GNU 10.2.0
-- Check for working CXX compiler: /usr/bin/g++-10
-- Check for working CXX compiler: /usr/bin/g++-10 -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Check for working C compiler: /usr/bin/gcc-10
-- Check for working C compiler: /usr/bin/gcc-10 -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed
-- Check if compiler accepts -pthread
-- Check if compiler accepts -pthread - yes
-- Found Threads: TRUE  
-- Looking for fork
-- Looking for fork - found
-- Looking for wait
-- Looking for wait - found
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- Found Git: /usr/bin/git (found version "2.27.0") 
-- git Version: v0.2.1-c96ff018
-- Version: 0.2.1
-- Performing Test HAVE_CXX_FLAG_STD_CXX11
-- Performing Test HAVE_CXX_FLAG_STD_CXX11 - Success
-- Performing Test HAVE_CXX_FLAG_WALL
-- Performing Test HAVE_CXX_FLAG_WALL - Success
-- Performing Test HAVE_CXX_FLAG_WEXTRA
-- Performing Test HAVE_CXX_FLAG_WEXTRA - Success
-- Performing Test HAVE_CXX_FLAG_WSHADOW
-- Performing Test HAVE_CXX_FLAG_WSHADOW - Success
-- Performing Test HAVE_CXX_FLAG_WERROR
-- Performing Test HAVE_CXX_FLAG_WERROR - Success
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32 - Failed
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED - Success
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WD654
-- Performing Test HAVE_CXX_FLAG_WD654 - Failed
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY - Failed
-- Performing Test HAVE_CXX_FLAG_COVERAGE
-- Performing Test HAVE_CXX_FLAG_COVERAGE - Success
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Performing Test USE_BOOST_JSON
-- Performing Test USE_BOOST_JSON - Failed
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Found Python3: /usr/bin/python3.8 (found version "3.8.6") found components: Interpreter 
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 10
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
Scanning dependencies of target benchmark
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -g   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -g   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_api_internal.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -g   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_name.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_name.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -g   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_register.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_register.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -g   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_runner.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_runner.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -g   -std=c++17 -o CMakeFiles/benchmark.dir/colorprint.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/colorprint.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -g   -std=c++17 -o CMakeFiles/benchmark.dir/commandlineflags.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/commandlineflags.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -g   -std=c++17 -o CMakeFiles/benchmark.dir/complexity.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/complexity.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -g   -std=c++17 -o CMakeFiles/benchmark.dir/console_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/console_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -g   -std=c++17 -o CMakeFiles/benchmark.dir/counter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/counter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -g   -std=c++17 -o CMakeFiles/benchmark.dir/csv_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/csv_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -g   -std=c++17 -o CMakeFiles/benchmark.dir/json_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/json_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -g   -std=c++17 -o CMakeFiles/benchmark.dir/reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -g   -std=c++17 -o CMakeFiles/benchmark.dir/sleep.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sleep.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -g   -std=c++17 -o CMakeFiles/benchmark.dir/statistics.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/statistics.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -g   -std=c++17 -o CMakeFiles/benchmark.dir/string_util.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/string_util.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -g   -std=c++17 -o CMakeFiles/benchmark.dir/sysinfo.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sysinfo.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -g   -std=c++17 -o CMakeFiles/benchmark.dir/timers.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/timers.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -P CMakeFiles/benchmark.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/benchmark.dir/link.txt --verbose=1
/usr/bin/ar qc libbenchmarkd.a  CMakeFiles/benchmark.dir/benchmark.cc.o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o CMakeFiles/benchmark.dir/benchmark_name.cc.o CMakeFiles/benchmark.dir/benchmark_register.cc.o CMakeFiles/benchmark.dir/benchmark_runner.cc.o CMakeFiles/benchmark.dir/colorprint.cc.o CMakeFiles/benchmark.dir/commandlineflags.cc.o CMakeFiles/benchmark.dir/complexity.cc.o CMakeFiles/benchmark.dir/console_reporter.cc.o CMakeFiles/benchmark.dir/counter.cc.o CMakeFiles/benchmark.dir/csv_reporter.cc.o CMakeFiles/benchmark.dir/json_reporter.cc.o CMakeFiles/benchmark.dir/reporter.cc.o CMakeFiles/benchmark.dir/sleep.cc.o CMakeFiles/benchmark.dir/statistics.cc.o CMakeFiles/benchmark.dir/string_util.cc.o CMakeFiles/benchmark.dir/sysinfo.cc.o CMakeFiles/benchmark.dir/timers.cc.o
/usr/bin/ranlib libbenchmarkd.a
[ 80%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
Scanning dependencies of target generated-data
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated && /usr/bin/ruby genfeaturejson.rb /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-miss.json ...
[ 80%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/g++-10  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/include  -g -fPIC   -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -pthread -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/g++-10 -fPIC -g  -shared -Wl,-soname,libsimdjson.so.7 -o ../libsimdjson.so.7.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.7.0.0 ../libsimdjson.so.7 ../libsimdjson.so
[ 80%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
Scanning dependencies of target yyjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/gcc-10  -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src  -g   -o CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o   -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src/yyjson.c
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -P CMakeFiles/yyjson.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -E cmake_link_script CMakeFiles/yyjson.dir/link.txt --verbose=1
/usr/bin/ar qc libyyjson.a  CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o
/usr/bin/ranlib libyyjson.a
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/g++-10  -DRAPIDJSON_HAS_STDSTRING -DSAJSON_UNSORTED_OBJECT_KEYS -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_COMPETITION_NLOHMANN_JSON -DSIMDJSON_COMPETITION_RAPIDJSON -DSIMDJSON_COMPETITION_SAJSON -DSIMDJSON_COMPETITION_YYJSON -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/rapidjson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/sajson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/json  -g   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/g++-10  -g   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.7.0.0 ../_deps/google_benchmarks/src/libbenchmarkd.a ../dependencies/libyyjson.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.8.0/skylake-x-gcc10.2-debug.json --benchmark_out_format=json
2021-01-25 01:19:01
Running benchmark/bench_ondemand
Run on (4 X 3200 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 1024 KiB (x4)
  L3 Unified 8448 KiB (x1)
Load Average: 1.00, 1.00, 0.93
***WARNING*** CPU scaling is enabled, the benchmark real time measurements may be noisy and will incur extra overhead.
***WARNING*** Library was built as DEBUG. Timings may be affected.
simdjson::dom implementation:      haswell
simdjson::ondemand implementation: fallback
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                15335445 ns     15409284 ns           46          17.708k           41.1992M               0        43.666k    48.9069M              77.4438           65.2386       3.19062G          82.4036M                    130.486                     1.68491           6.52386k    17.7788k   631.515k       39.2724M/s    29.5435    43.721k   48.9219M         77.4675    65.2084/s 3.19012G/s     82.4036M               130.486                1.68439        100       6.52084k/s [BEST: throughput=  0.04 GB/s doc_throughput=    65 docs/s instructions=    82403562 cycles=    48906938 branch_miss=   17708 cache_miss=       0 cache_ref=     43666 items=       100 avg_time=  15335444 ns]
partial_tweets<simdjson_ondemand>/manual_time           11204967 ns     11270453 ns           62           5.342k           56.4064M               4        27.541k    35.7222M              56.5659           89.3192       3.19068G          65.0157M                    102.952                     1.82004           8.93192k    5.42482k   631.515k       53.7493M/s    16.4355   27.8759k   35.7387M          56.592    89.2461/s 3.18954G/s     65.0157M               102.952                 1.8192        100       8.92461k/s [BEST: throughput=  0.06 GB/s doc_throughput=    89 docs/s instructions=    65015691 cycles=    35722219 branch_miss=    5342 cache_miss=       4 cache_ref=     27541 items=       100 avg_time=  11204967 ns]
partial_tweets<yyjson>/manual_time                       1919205 ns      2000381 ns          365           9.912k           402.702M             270        29.306k    4.99006M              7.90173           637.677       3.18205G          12.8843M                    20.4022                     2.58199           63.7677k    8.80032k   631.515k       313.807M/s    678.973   26.4233k   5.14285M         8.14367    521.049/s 2.67968G/s     12.8848M               20.4029                2.50537        100       52.1049k/s [BEST: throughput=  0.40 GB/s doc_throughput=   637 docs/s instructions=    12884283 cycles=     4990061 branch_miss=    9912 cache_miss=     270 cache_ref=     29306 items=       100 avg_time=   1919204 ns]
partial_tweets<yyjson_insitu>/manual_time                1638071 ns      1705991 ns          429           8.355k           427.913M              29         15.95k    4.71224M               7.4618           677.598         3.193G           12.884M                    20.4017                     2.73415           67.7598k    8.47769k   631.515k       367.664M/s    131.378   12.9166k   4.81768M         7.62877    610.474/s 2.94107G/s     12.8842M                20.402                2.67435        100       61.0474k/s [BEST: throughput=  0.43 GB/s doc_throughput=   677 docs/s instructions=    12883990 cycles=     4712241 branch_miss=    8355 cache_miss=      29 cache_ref=     15950 items=       100 avg_time=   1638070 ns]
partial_tweets<sajson>/manual_time                       3491546 ns      3558158 ns          201          41.601k           181.322M               0        14.157k    11.1196M              17.6078           287.122       3.19268G          27.8592M                    44.1149                     2.50541           28.7122k    41.7355k   631.515k       172.491M/s    16.8706   14.2481k   11.1368M          17.635    286.406/s 3.18964G/s     27.8592M               44.1149                2.50155        100       28.6406k/s [BEST: throughput=  0.18 GB/s doc_throughput=   287 docs/s instructions=    27859214 cycles=    11119603 branch_miss=   41601 cache_miss=       0 cache_ref=     14157 items=       100 avg_time=   3491545 ns]
partial_tweets<rapidjson>/manual_time                   15996716 ns     16067877 ns           44           65.39k           40.1372M             474        24.628k    50.1954M              79.4842            63.557       3.19027G          104.823M                    165.987                      2.0883            6.3557k      65.38k   631.515k        37.649M/s    390.659   16.6699k   50.3722M          79.764    62.5128/s 3.14891G/s     104.823M               165.987                2.08098        100       6.25128k/s [BEST: throughput=  0.04 GB/s doc_throughput=    63 docs/s instructions=   104823130 cycles=    50195433 branch_miss=   65390 cache_miss=     474 cache_ref=     24628 items=       100 avg_time=  15996716 ns]
partial_tweets<rapidjson_insitu>/manual_time            10972892 ns     11038439 ns           64           49.92k           58.3312M               4        15.897k     34.538M              54.6906           92.3671       3.19017G          75.1835M                    119.053                     2.17684           9.23671k    49.7593k   631.515k       54.8861M/s    179.578   11.4229k   34.6323M         54.8401    91.1337/s 3.15617G/s      75.184M               119.053                2.17092        100       9.11337k/s [BEST: throughput=  0.06 GB/s doc_throughput=    92 docs/s instructions=    75183481 cycles=    34537959 branch_miss=   49920 cache_miss=       4 cache_ref=     15897 items=       100 avg_time=  10972892 ns]
partial_tweets<nlohmann_json>/manual_time               90447253 ns     90541785 ns            8         401.896k           7.01666M             752       102.275k    287.149M              454.699           11.1108       3.19046G          492.704M                    780.193                     1.71585           1.11108k    411.757k   631.515k       6.65868M/s      600.5   145.145k   288.539M         456.899    11.0562/s 3.19013G/s     493.501M               781.455                1.71035        100       1.10562k/s [BEST: throughput=  0.01 GB/s doc_throughput=    11 docs/s instructions=   492703713 cycles=   287148995 branch_miss=  401896 cache_miss=     752 cache_ref=    102275 items=       100 avg_time=  90447252 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                2895504929 ns   2901593157 ns            1           4.002M           15.8863M        6.88533M       6.97481M    9.23826G              200.837          0.345363       3.19055G          15.4891G                    336.728                     1.67662           345.363k      4.002M   45.9988M       15.1503M/s   6.88533M   6.97481M   9.23826G         200.837   0.345363/s 3.19055G/s     15.4891G               336.728                1.67662      1000k       345.363k/s [BEST: throughput=  0.02 GB/s doc_throughput=     0 docs/s instructions= 15489081871 cycles=  9238255277 branch_miss= 4002004 cache_miss= 6885327 cache_ref=   6974808 items=   1000000 avg_time=2895504929 ns]
large_random<simdjson_ondemand>/manual_time           1386787794 ns   1392967462 ns            1         918.876k           33.1693M         3.5746M       3.63466M    4.42437G              96.1845          0.721091       3.19037G          8.58735G                    186.686                     1.94092           721.091k    918.876k   45.9988M       31.6327M/s    3.5746M   3.63466M   4.42437G         96.1845   0.721091/s 3.19037G/s     8.58735G               186.686                1.94092      1000k       721.091k/s [BEST: throughput=  0.03 GB/s doc_throughput=     0 docs/s instructions=  8587347327 cycles=  4424368029 branch_miss=  918876 cache_miss= 3574600 cache_ref=   3634656 items=   1000000 avg_time=1386787794 ns]
large_random<simdjson_ondemand_unordered>/manual_time 1396026464 ns   1402175096 ns            1         921.034k           32.9498M        3.56918M       3.62319M    4.45378G              96.8239          0.716319       3.19033G          8.64335G                    187.904                     1.94068           716.319k    921.034k   45.9988M       31.4234M/s   3.56918M   3.62319M   4.45378G         96.8239   0.716319/s 3.19033G/s     8.64335G               187.904                1.94068      1000k       716.319k/s [BEST: throughput=  0.03 GB/s doc_throughput=     0 docs/s instructions=  8643347337 cycles=  4453778988 branch_miss=  921034 cache_miss= 3569176 cache_ref=   3623187 items=   1000000 avg_time=1396026464 ns]
large_random<yyjson>/manual_time                       422821373 ns    429041761 ns            2         887.025k           108.802M        4.22783M       5.46594M    1.20707G              26.2413           2.36533       2.85512G          3.23149G                    70.2517                     2.67714           2.36533M    886.034k   45.9988M        103.75M/s   4.22383M   5.46915M   1.20707G         26.2413    2.36506/s 2.85479G/s     3.23149G               70.2517                2.67714      1000k       2.36506M/s [BEST: throughput=  0.11 GB/s doc_throughput=     2 docs/s instructions=  3231489947 cycles=  1207069240 branch_miss=  887025 cache_miss= 4227830 cache_ref=   5465943 items=   1000000 avg_time= 422821373 ns]
large_random<yyjson_insitu>/manual_time                396062637 ns    402313076 ns            2         890.601k           116.155M         3.4975M       4.73599M    1.16285G                25.28           2.52518       2.93641G          3.22537G                    70.1186                     2.77368           2.52518M    890.019k   45.9988M        110.76M/s   3.49846M    4.7418M    1.1629G         25.2811    2.52485/s 2.93615G/s     3.22537G               70.1186                2.77356      1000k       2.52485M/s [BEST: throughput=  0.12 GB/s doc_throughput=     2 docs/s instructions=  3225369339 cycles=  1162850274 branch_miss=  890601 cache_miss= 3497497 cache_ref=   4735990 items=   1000000 avg_time= 396062637 ns]
large_random<sajson>/manual_time                       893210156 ns    899446031 ns            1         1.67566M           51.4983M          5.558M       5.58897M    2.84922G              61.9413           1.11956       3.18987G          7.02397G                    152.699                     2.46522           1.11956M    1.67566M   45.9988M       49.1126M/s     5.558M   5.58897M   2.84922G         61.9413    1.11956/s 3.18987G/s     7.02397G               152.699                2.46522      1000k       1.11956M/s [BEST: throughput=  0.05 GB/s doc_throughput=     1 docs/s instructions=  7023969420 cycles=  2849222458 branch_miss= 1675658 cache_miss= 5558000 cache_ref=   5588968 items=   1000000 avg_time= 893210156 ns]
large_random<rapidjson>/manual_time                   2251776653 ns   2257901001 ns            1         3.63766M           20.4278M        4.35977M       5.18181M    7.11544G              154.688          0.444094       3.15992G          14.3764G                     312.54                     2.02046           444.094k    3.63766M   45.9988M       19.4814M/s   4.35977M   5.18181M   7.11544G         154.688   0.444094/s 3.15992G/s     14.3764G                312.54                2.02046      1000k       444.094k/s [BEST: throughput=  0.02 GB/s doc_throughput=     0 docs/s instructions= 14376449249 cycles=  7115440766 branch_miss= 3637657 cache_miss= 4359767 cache_ref=   5181807 items=   1000000 avg_time=2251776653 ns]
large_random<rapidjson_lossless>/manual_time          2698114500 ns   2704279658 ns            1         6.40393M           17.0485M        4.36725M       5.17223M    8.53979G              185.653          0.370629        3.1651G          17.5232G                    380.949                     2.05194           370.629k    6.40393M   45.9988M       16.2587M/s   4.36725M   5.17223M   8.53979G         185.653   0.370629/s  3.1651G/s     17.5232G               380.949                2.05194      1000k       370.629k/s [BEST: throughput=  0.02 GB/s doc_throughput=     0 docs/s instructions= 17523182582 cycles=  8539791557 branch_miss= 6403932 cache_miss= 4367246 cache_ref=   5172227 items=   1000000 avg_time=2698114500 ns]
large_random<rapidjson_insitu>/manual_time            2091943077 ns   2098096367 ns            1         3.64479M           21.9885M        5.05871M       5.88382M    6.60513G              143.594          0.478024       3.15741G          13.6794G                    297.387                     2.07104           478.024k    3.64479M   45.9988M       20.9699M/s   5.05871M   5.88382M   6.60513G         143.594   0.478024/s 3.15741G/s     13.6794G               297.387                2.07104      1000k       478.024k/s [BEST: throughput=  0.02 GB/s doc_throughput=     0 docs/s instructions= 13679448775 cycles=  6605125831 branch_miss= 3644792 cache_miss= 5058707 cache_ref=   5883820 items=   1000000 avg_time=2091943076 ns]
large_random<nlohmann_json>/manual_time               13477628801 ns   13483376476 ns            1         38.6516M           3.41297M         30.419M       31.0626M    42.9883G              934.554          0.074197       3.18961G          72.0459G                   1.56626k                     1.67594            74.197k    38.6516M   45.9988M       3.25486M/s    30.419M   31.0626M   42.9883G         934.554   0.074197/s 3.18961G/s     72.0459G              1.56626k                1.67594      1000k        74.197k/s [BEST: throughput=  0.00 GB/s doc_throughput=     0 docs/s instructions= 72045856885 cycles= 42988319308 branch_miss=38651606 cache_miss=30419028 cache_ref=  31062554 items=   1000000 avg_time=13477628801 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                      3319232095 ns   3338863913 ns            1         3.38704M           41.3665M        10.3035M       10.4661M    10.5896G              77.1249          0.301275       3.19039G          17.9583G                    130.791                     1.69583           157.955k    3.38704M   137.305M       39.4502M/s   10.3035M   10.4661M   10.5896G         77.1249   0.301275/s 3.19039G/s     17.9583G               130.791                1.69583   524.288k       157.955k/s [BEST: throughput=  0.04 GB/s doc_throughput=     0 docs/s instructions= 17958267255 cycles= 10589639050 branch_miss= 3387037 cache_miss=10303523 cache_ref=  10466123 items=    524288 avg_time=3319232095 ns]
kostya<simdjson_ondemand>/manual_time                 2054864017 ns   2074526452 ns            1         599.045k           66.8195M         6.4705M       6.59354M    6.55584G              47.7465           0.48665        3.1904G          12.3957G                    90.2786                     1.89079           255.145k    599.045k   137.305M        63.724M/s    6.4705M   6.59354M   6.55584G         47.7465    0.48665/s  3.1904G/s     12.3957G               90.2786                1.89079   524.288k       255.145k/s [BEST: throughput=  0.07 GB/s doc_throughput=     0 docs/s instructions= 12395706417 cycles=  6555837848 branch_miss=  599045 cache_miss= 6470499 cache_ref=   6593545 items=    524288 avg_time=2054864016 ns]
kostya<yyjson>/manual_time                             524285405 ns    544021933 ns            1         425.701k            261.89M        8.52448M       9.86368M    1.43695G              10.4654           1.90736       2.74078G          3.60689G                    26.2692                      2.5101              1000k    425.701k   137.305M       249.758M/s   8.52448M   9.86368M   1.43695G         10.4654    1.90736/s 2.74078G/s     3.60689G               26.2692                 2.5101   524.288k          1000k/s [BEST: throughput=  0.26 GB/s doc_throughput=     1 docs/s instructions=  3606894369 cycles=  1436952450 branch_miss=  425701 cache_miss= 8524478 cache_ref=   9863683 items=    524288 avg_time= 524285405 ns]
kostya<yyjson_insitu>/manual_time                      444261304 ns    464005460 ns            2         426.015k           309.091M          6.389M       7.74587M    1.30321G              9.49134           2.25113       2.93369G          3.58862G                    26.1362                     2.75369           1.18024M    425.995k   137.305M       294.746M/s   6.38923M   7.74422M   1.30336G         9.49248    2.25093/s 2.93378G/s     3.58862G               26.1362                2.75335   524.288k       1.18013M/s [BEST: throughput=  0.31 GB/s doc_throughput=     2 docs/s instructions=  3588624649 cycles=  1303207766 branch_miss=  426015 cache_miss= 6389003 cache_ref=   7745871 items=    524288 avg_time= 444261304 ns]
kostya<sajson>/manual_time                            1055550773 ns   1075236582 ns            1         4.46078M           130.079M        8.50619M       8.54205M    3.36677G              24.5204          0.947373       3.18959G           8.7463G                    63.6998                     2.59783           496.696k    4.46078M   137.305M       124.053M/s   8.50619M   8.54205M   3.36677G         24.5204   0.947373/s 3.18959G/s      8.7463G               63.6998                2.59783   524.288k       496.696k/s [BEST: throughput=  0.13 GB/s doc_throughput=     0 docs/s instructions=  8746297109 cycles=  3366772943 branch_miss= 4460785 cache_miss= 8506194 cache_ref=   8542053 items=    524288 avg_time=1055550773 ns]
kostya<rapidjson>/manual_time                         2706673445 ns   2726318164 ns            1          13.349M           50.7283M        5.23157M       5.93492M    8.53777G               62.181          0.369457       3.15434G          16.7054G                    121.666                     1.95665           193.702k     13.349M   137.305M       48.3783M/s   5.23157M   5.93492M   8.53777G          62.181   0.369457/s 3.15434G/s     16.7054G               121.666                1.95665   524.288k       193.702k/s [BEST: throughput=  0.05 GB/s doc_throughput=     0 docs/s instructions= 16705387973 cycles=  8537767086 branch_miss=13349003 cache_miss= 5231574 cache_ref=   5934919 items=    524288 avg_time=2706673445 ns]
kostya<rapidjson_lossless>/manual_time                2951071333 ns   2970568739 ns            1           14.55M           46.5272M        5.21401M       6.46976M    9.31698G              67.8561           0.33886       3.15715G          18.5251G                    134.919                     1.98832            177.66k      14.55M   137.305M       44.3718M/s   5.21401M   6.46976M   9.31698G         67.8561    0.33886/s 3.15715G/s     18.5251G               134.919                1.98832   524.288k        177.66k/s [BEST: throughput=  0.05 GB/s doc_throughput=     0 docs/s instructions= 18525117785 cycles=  9316982224 branch_miss=14549971 cache_miss= 5214008 cache_ref=   6469761 items=    524288 avg_time=2951071333 ns]
kostya<rapidjson_insitu>/manual_time                  2419978746 ns   2439653360 ns            1         12.0835M           56.7381M        7.29938M       8.53987M    7.62223G              55.5131          0.413227       3.14971G          15.2562G                    111.112                     2.00154            216.65k    12.0835M   137.305M       54.1097M/s   7.29938M   8.53987M   7.62223G         55.5131   0.413227/s 3.14971G/s     15.2562G               111.112                2.00154   524.288k        216.65k/s [BEST: throughput=  0.06 GB/s doc_throughput=     0 docs/s instructions= 15256209953 cycles=  7622231265 branch_miss=12083482 cache_miss= 7299382 cache_ref=   8539873 items=    524288 avg_time=2419978746 ns]
kostya<nlohmann_json>/manual_time                     21855315499 ns   21874254314 ns            1          58.617M           6.28245M        45.1145M       45.7508M    69.7331G               507.87         0.0457555       3.19067G          115.835G                    843.631                     1.66111            23.989k     58.617M   137.305M       5.99141M/s   45.1145M   45.7508M   69.7331G          507.87  0.0457555/s 3.19067G/s     115.835G               843.631                1.66111   524.288k        23.989k/s [BEST: throughput=  0.01 GB/s doc_throughput=     0 docs/s instructions=115834697841 cycles= 69733122917 branch_miss=58617049 cache_miss=45114504 cache_ref=  45750842 items=    524288 avg_time=21855315499 ns]
distinct_user_id<simdjson_dom>/manual_time              14912769 ns     15020964 ns           47          15.163k           42.3776M               3        44.283k    47.5467M              75.2899           67.1046        3.1906G           80.487M                    127.451                      1.6928           7.71703k    15.1436k   631.515k       40.3855M/s    13.1489   44.3664k   47.5738M         75.3328    67.0566/s 3.19014G/s      80.487M               127.451                1.69183        115       7.71151k/s [BEST: throughput=  0.04 GB/s doc_throughput=    67 docs/s instructions=    80486973 cycles=    47546719 branch_miss=   15163 cache_miss=       3 cache_ref=     44283 items=       115 avg_time=  14912769 ns]
distinct_user_id<simdjson_ondemand>/manual_time         11037566 ns     11136444 ns           63           4.919k           57.2679M              26        24.799k    35.1884M              55.7206           90.6834       3.19101G          63.8644M                    101.129                     1.81493           10.4286k     4.9513k   631.515k       54.5645M/s    15.8095   25.0159k   35.2076M          55.751    90.5997/s  3.1898G/s     63.8644M               101.129                1.81394        115        10.419k/s [BEST: throughput=  0.06 GB/s doc_throughput=    90 docs/s instructions=    63864404 cycles=    35188410 branch_miss=    4919 cache_miss=      26 cache_ref=     24799 items=       115 avg_time=  11037565 ns]
distinct_user_id<yyjson>/manual_time                     1662243 ns      1777725 ns          468           7.502k            425.82M          7.232k         28.24k    4.73518M              7.49812           674.283       3.19285G          12.6251M                    19.9917                     2.66623           77.5425k    8.11865k   631.515k       362.318M/s   4.36407k    27.404k   4.87994M         7.72735    601.597/s 2.93576G/s     12.6252M                19.992                2.58717        115       69.1836k/s [BEST: throughput=  0.43 GB/s doc_throughput=   674 docs/s instructions=    12625072 cycles=     4735177 branch_miss=    7502 cache_miss=    7232 cache_ref=     28240 items=       115 avg_time=   1662242 ns]
distinct_user_id<yyjson_insitu>/manual_time              1604669 ns      1707729 ns          437           7.862k           437.302M          1.826k        15.371k    4.59098M              7.26979           692.464       3.17909G          12.6246M                     19.991                     2.74987           79.6334k    8.43496k   631.515k       375.317M/s    117.384   12.8476k   4.71268M          7.4625    623.182/s 2.93685G/s     12.6249M               19.9914                2.67892        115       71.6659k/s [BEST: throughput=  0.44 GB/s doc_throughput=   692 docs/s instructions=    12624613 cycles=     4590981 branch_miss=    7862 cache_miss=    1826 cache_ref=     15371 items=       115 avg_time=   1604668 ns]
distinct_user_id<sajson>/manual_time                     3436485 ns      3536445 ns          204          41.479k           184.271M               0        13.911k    10.9416M              17.3259           291.792       3.19266G          27.4249M                    43.4272                     2.50649           33.5561k    41.6199k   631.515k       175.255M/s    10.3235   14.0764k   10.9604M         17.3558    290.995/s 3.18943G/s     27.4249M               43.4272                2.50218        115       33.4644k/s [BEST: throughput=  0.18 GB/s doc_throughput=   291 docs/s instructions=    27424941 cycles=    10941557 branch_miss=   41479 cache_miss=       0 cache_ref=     13911 items=       115 avg_time=   3436485 ns]
distinct_user_id<rapidjson>/manual_time                 15760588 ns     15865002 ns           45          63.472k           40.6361M          9.719k        23.541k     49.582M              78.5127            64.347       3.19045G          103.662M                    164.149                     2.09073           7.39991k    63.7926k   631.515k        38.213M/s   1.69082k   18.2779k   49.7257M         78.7403    63.4494/s 3.15507G/s     103.663M                164.15                 2.0847        115       7.29668k/s [BEST: throughput=  0.04 GB/s doc_throughput=    64 docs/s instructions=   103662438 cycles=    49581973 branch_miss=   63472 cache_miss=    9719 cache_ref=     23541 items=       115 avg_time=  15760588 ns]
distinct_user_id<rapidjson_insitu>/manual_time          10681837 ns     10782126 ns           66          48.849k           59.1831M          4.563k        15.618k    34.0418M              53.9049           93.7161       3.19026G           74.055M                    117.266                     2.17542           10.7773k    48.8746k   631.515k       56.3817M/s   6.33005k    15.778k   34.0772M          53.961    93.6169/s  3.1902G/s     74.0552M               117.266                2.17316        115       10.7659k/s [BEST: throughput=  0.06 GB/s doc_throughput=    93 docs/s instructions=    74054988 cycles=    34041754 branch_miss=   48849 cache_miss=    4563 cache_ref=     15618 items=       115 avg_time=  10681836 ns]
distinct_user_id<nlohmann_json>/manual_time             86498976 ns     86612718 ns            8         360.346k            7.3228M          1.971k       102.184k    275.159M              435.713           11.5956       3.19064G          473.268M                    749.417                     1.71998           1.33349k    368.628k   631.515k       6.96262M/s    342.625   110.824k   275.952M         436.969    11.5608/s 3.19024G/s     471.999M               747.408                1.71044        115        1.3295k/s [BEST: throughput=  0.01 GB/s doc_throughput=    11 docs/s instructions=   473267967 cycles=   275159168 branch_miss=  360346 cache_miss=    1971 cache_ref=    102184 items=       115 avg_time=  86498975 ns]
find_tweet<simdjson_dom>/manual_time                    14437721 ns     14514710 ns           48          13.124k           43.7648M               2        40.783k    46.0405M              72.9048           69.3012       3.19066G          78.3146M                    124.011                       1.701            69.3012     13.196k   631.515k       41.7143M/s    24.5417   41.0809k   46.0575M         72.9318     69.263/s 3.19008G/s     78.3146M               124.011                1.70036          1         69.263/s [BEST: throughput=  0.04 GB/s doc_throughput=    69 docs/s instructions=    78314624 cycles=    46040455 branch_miss=   13124 cache_miss=       2 cache_ref=     40783 items=         1 avg_time=  14437721 ns]
find_tweet<simdjson_ondemand>/manual_time               10024604 ns     10097931 ns           70           3.022k           63.0561M              70         16.24k    31.9586M              50.6063           99.8489       3.19104G          56.1003M                    88.8345                      1.7554            99.8489    3.09024k   631.515k       60.0781M/s    76.4857   16.1351k   31.9772M         50.6357    99.7546/s 3.18987G/s     56.1003M               88.8345                1.75438          1        99.7546/s [BEST: throughput=  0.06 GB/s doc_throughput=    99 docs/s instructions=    56100318 cycles=    31958647 branch_miss=    3022 cache_miss=      70 cache_ref=     16240 items=         1 avg_time=  10024603 ns]
find_tweet<yyjson>/manual_time                           1844595 ns      1931739 ns          389           9.772k            422.66M             217        28.377k     4.7541M              7.52808            669.28       3.18182G          12.3601M                    19.5721                     2.59988             669.28    8.40163k   631.515k         326.5M/s    452.103   24.7269k   4.91024M         7.77533    542.124/s 2.66196G/s     12.3605M               19.5728                 2.5173          1        542.124/s [BEST: throughput=  0.42 GB/s doc_throughput=   669 docs/s instructions=    12360066 cycles=     4754098 branch_miss=    9772 cache_miss=     217 cache_ref=     28377 items=         1 avg_time=   1844595 ns]
find_tweet<yyjson_insitu>/manual_time                    1557920 ns      1629629 ns          450           7.509k           453.919M          2.098k         14.15k    4.43716M              7.02621           718.778       3.18933G          12.3597M                    19.5715                      2.7855            718.778    8.17841k   631.515k       386.579M/s    13.6622   10.9239k   4.56451M         7.22787    641.882/s 2.92987G/s     12.3599M               19.5719                2.70784          1        641.882/s [BEST: throughput=  0.45 GB/s doc_throughput=   718 docs/s instructions=    12359691 cycles=     4437157 branch_miss=    7509 cache_miss=    2098 cache_ref=     14150 items=         1 avg_time=   1557919 ns]
find_tweet<sajson>/manual_time                           3369902 ns      3441090 ns          208           41.25k           187.998M               0        13.649k    10.7247M              16.9824           297.693       3.19266G          26.9641M                    42.6975                     2.51421            297.693    41.5124k   631.515k       178.717M/s    17.2212   13.7086k   10.7486M         17.0203    296.745/s 3.18958G/s     26.9641M               42.6975                2.50862          1        296.745/s [BEST: throughput=  0.19 GB/s doc_throughput=   297 docs/s instructions=    26964085 cycles=    10724669 branch_miss=   41250 cache_miss=       0 cache_ref=     13649 items=         1 avg_time=   3369901 ns]
find_tweet<rapidjson>/manual_time                       15588496 ns     15662073 ns           45          62.485k           41.0832M          9.818k        22.106k    49.0444M              77.6615           65.0549       3.19058G           102.21M                     161.85                     2.08404            65.0549    62.7863k   631.515k       38.6349M/s   1.56711k   15.8526k   49.1799M         77.8761    64.1499/s 3.15488G/s     102.211M                161.85                2.07831          1        64.1499/s [BEST: throughput=  0.04 GB/s doc_throughput=    65 docs/s instructions=   102210388 cycles=    49044388 branch_miss=   62485 cache_miss=    9818 cache_ref=     22106 items=         1 avg_time=  15588495 ns]
find_tweet<rapidjson_insitu>/manual_time                10478663 ns     10550044 ns           67           48.21k            60.319M          6.891k        14.802k    33.4064M              52.8988           95.5147        3.1908G          72.6342M                    115.016                     2.17426            95.5147    48.2877k   631.515k       57.4749M/s   6.21907k   14.7236k   33.4302M         52.9365     95.432/s 3.19031G/s     72.6342M               115.016                2.17271          1         95.432/s [BEST: throughput=  0.06 GB/s doc_throughput=    95 docs/s instructions=    72634222 cycles=    33406410 branch_miss=   48210 cache_miss=    6891 cache_ref=     14802 items=         1 avg_time=  10478662 ns]
find_tweet<nlohmann_json>/manual_time                   76001643 ns     76093177 ns            9         279.296k           8.33048M          2.343k        80.471k    241.877M               383.01           13.1913       3.19066G          419.122M                    663.677                     1.73279            13.1913    285.329k   631.515k        7.9243M/s    590.222    88.321k   242.484M         383.972    13.1576/s 3.19051G/s     417.834M               661.637                1.72314          1        13.1576/s [BEST: throughput=  0.01 GB/s doc_throughput=    13 docs/s instructions=   419121842 cycles=   241876875 branch_miss=  279296 cache_miss=    2343 cache_ref=     80471 items=         1 avg_time=  76001642 ns]
top_tweet<simdjson_dom>/manual_time                     14629261 ns     14710575 ns           48          14.039k           43.1917M              47        42.938k    46.6507M              73.8711           68.3938       3.19062G          79.1624M                    125.353                     1.69692            68.3938    14.0433k   631.515k       41.1682M/s    77.3333   42.8368k   46.6692M         73.9003    68.3562/s 3.19012G/s     79.1624M               125.353                1.69625          1        68.3562/s [BEST: throughput=  0.04 GB/s doc_throughput=    68 docs/s instructions=    79162442 cycles=    46650711 branch_miss=   14039 cache_miss=      47 cache_ref=     42938 items=         1 avg_time=  14629261 ns]
top_tweet<simdjson_ondemand>/manual_time                11043854 ns     11115762 ns           63           4.962k           57.2152M              12        24.576k     35.218M              55.7675           90.5999       3.19075G          63.6572M                    100.801                     1.80752            90.5999    5.04976k   631.515k       54.5335M/s    13.3968   24.8449k   35.2304M         55.7871    90.5481/s 3.19005G/s     63.6572M               100.801                1.80688          1        90.5481/s [BEST: throughput=  0.06 GB/s doc_throughput=    90 docs/s instructions=    63657161 cycles=    35218028 branch_miss=    4962 cache_miss=      12 cache_ref=     24576 items=         1 avg_time=  11043854 ns]
top_tweet<simdjson_ondemand_forward_only>/manual_time   11104524 ns     11177596 ns           63           5.057k           56.9088M               1        24.759k    35.4077M              56.0679           90.1147       3.19076G          64.3436M                    101.888                     1.81722            90.1147    5.10602k   631.515k       54.2355M/s    16.4286   24.9271k   35.4234M         56.0928    90.0534/s    3.19G/s     64.3436M               101.888                1.81641          1        90.0534/s [BEST: throughput=  0.06 GB/s doc_throughput=    90 docs/s instructions=    64343568 cycles=    35407737 branch_miss=    5057 cache_miss=       1 cache_ref=     24759 items=         1 avg_time=  11104524 ns]
top_tweet<yyjson>/manual_time                            1857334 ns      1946700 ns          387           9.718k           419.112M             204          28.8k    4.79393M              7.59115           663.661       3.18154G          12.4505M                    19.7153                     2.59715            663.661    8.58788k   631.515k        324.26M/s    472.478   25.9706k   4.95102M         7.83991    538.406/s 2.66566G/s      12.451M               19.7161                2.51483          1        538.406/s [BEST: throughput=  0.42 GB/s doc_throughput=   663 docs/s instructions=    12450522 cycles=     4793926 branch_miss=    9718 cache_miss=     204 cache_ref=     28800 items=         1 avg_time=   1857333 ns]
top_tweet<yyjson_insitu>/manual_time                     1574926 ns      1650601 ns          446           8.286k           447.932M              35        15.499k    4.50171M              7.12843           709.298       3.19305G          12.4501M                    19.7147                     2.76565            709.298    8.32058k   631.515k       382.405M/s    100.789   12.3291k   4.61814M          7.3128    634.951/s 2.93229G/s     12.4504M               19.7151                2.69598          1        634.951/s [BEST: throughput=  0.45 GB/s doc_throughput=   709 docs/s instructions=    12450143 cycles=     4501712 branch_miss=    8286 cache_miss=      35 cache_ref=     15499 items=         1 avg_time=   1574925 ns]
top_tweet<sajson>/manual_time                            3403967 ns      3478206 ns          206          41.543k           185.915M               0        13.901k    10.8449M              17.1728           294.395       3.19267G          27.2084M                    43.0843                     2.50888            294.395    41.6196k   631.515k       176.929M/s    13.3398   14.0926k   10.8569M         17.1918    293.775/s 3.18948G/s     27.2084M               43.0843                2.50609          1        293.775/s [BEST: throughput=  0.19 GB/s doc_throughput=   294 docs/s instructions=    27208386 cycles=    10844852 branch_miss=   41543 cache_miss=       0 cache_ref=     13901 items=         1 avg_time=   3403966 ns]
top_tweet<rapidjson>/manual_time                        15738797 ns     15817786 ns           45          63.629k           40.7004M              87        23.046k    49.5052M              78.3911           64.4488       3.19055G          103.234M                     163.47                     2.08531            64.4488    63.6618k   631.515k       38.2659M/s   1.75187k   17.1806k   49.6595M         78.6355    63.5373/s 3.15523G/s     103.234M               163.471                2.07885          1        63.5373/s [BEST: throughput=  0.04 GB/s doc_throughput=    64 docs/s instructions=   103233594 cycles=    49505175 branch_miss=   63629 cache_miss=      87 cache_ref=     23046 items=         1 avg_time=  15738797 ns]
top_tweet<rapidjson_insitu>/manual_time                 10617280 ns     10691570 ns           66          48.953k           59.5469M          3.845k        15.309k    33.8337M              53.5754           94.2922       3.19025G          73.6315M                    116.595                     2.17628            94.2922    48.8933k   631.515k       56.7245M/s   6.24702k   15.3391k   33.8718M         53.6358    94.1861/s 3.19025G/s     73.6317M               116.595                2.17384          1        94.1861/s [BEST: throughput=  0.06 GB/s doc_throughput=    94 docs/s instructions=    73631522 cycles=    33833664 branch_miss=   48953 cache_miss=    3845 cache_ref=     15309 items=         1 avg_time=  10617279 ns]
top_tweet<nlohmann_json>/manual_time                    94879112 ns     94973604 ns            7         452.959k           6.66074M              89       167.939k    302.519M              479.036           10.5472       3.19073G          517.746M                    819.847                     1.71145            10.5472    456.358k   631.515k       6.34765M/s        521    168.36k   302.716M         479.349    10.5397/s 3.19054G/s      517.88M               820.059                1.71078          1        10.5397/s [BEST: throughput=  0.01 GB/s doc_throughput=    10 docs/s instructions=   517745811 cycles=   302518676 branch_miss=  452959 cache_miss=      89 cache_ref=    167939 items=         1 avg_time=  94879112 ns]
