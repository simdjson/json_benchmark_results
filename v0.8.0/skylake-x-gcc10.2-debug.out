run_benchmark: v0.8.0 /home/jkeiser/simdjson_benchmark_results/v0.8.0/skylake-x-gcc10.2-debug.json -DCMAKE_BUILD_TYPE=Debug
git reset --hard v0.8.0
HEAD is now at c96ff018 Version 0.8.
cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The CXX compiler identification is GNU 10.2.0
-- The C compiler identification is GNU 10.2.0
-- Check for working CXX compiler: /usr/bin/g++-10
-- Check for working CXX compiler: /usr/bin/g++-10 -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Check for working C compiler: /usr/bin/gcc-10
-- Check for working C compiler: /usr/bin/gcc-10 -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed
-- Check if compiler accepts -pthread
-- Check if compiler accepts -pthread - yes
-- Found Threads: TRUE  
-- Looking for fork
-- Looking for fork - found
-- Looking for wait
-- Looking for wait - found
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- Found Git: /usr/bin/git (found version "2.27.0") 
-- git Version: v0.2.1-c96ff018
-- Version: 0.2.1
-- Performing Test HAVE_CXX_FLAG_STD_CXX11
-- Performing Test HAVE_CXX_FLAG_STD_CXX11 - Success
-- Performing Test HAVE_CXX_FLAG_WALL
-- Performing Test HAVE_CXX_FLAG_WALL - Success
-- Performing Test HAVE_CXX_FLAG_WEXTRA
-- Performing Test HAVE_CXX_FLAG_WEXTRA - Success
-- Performing Test HAVE_CXX_FLAG_WSHADOW
-- Performing Test HAVE_CXX_FLAG_WSHADOW - Success
-- Performing Test HAVE_CXX_FLAG_WERROR
-- Performing Test HAVE_CXX_FLAG_WERROR - Success
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32 - Failed
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED - Success
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WD654
-- Performing Test HAVE_CXX_FLAG_WD654 - Failed
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY - Failed
-- Performing Test HAVE_CXX_FLAG_COVERAGE
-- Performing Test HAVE_CXX_FLAG_COVERAGE - Success
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Performing Test USE_BOOST_JSON
-- Performing Test USE_BOOST_JSON - Failed
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Found Python3: /usr/bin/python3.8 (found version "3.8.6") found components: Interpreter 
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 10
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
Scanning dependencies of target benchmark
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -g   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -g   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_api_internal.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -g   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_name.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_name.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -g   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_register.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_register.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -g   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_runner.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_runner.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -g   -std=c++17 -o CMakeFiles/benchmark.dir/colorprint.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/colorprint.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -g   -std=c++17 -o CMakeFiles/benchmark.dir/commandlineflags.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/commandlineflags.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -g   -std=c++17 -o CMakeFiles/benchmark.dir/complexity.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/complexity.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -g   -std=c++17 -o CMakeFiles/benchmark.dir/console_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/console_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -g   -std=c++17 -o CMakeFiles/benchmark.dir/counter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/counter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -g   -std=c++17 -o CMakeFiles/benchmark.dir/csv_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/csv_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -g   -std=c++17 -o CMakeFiles/benchmark.dir/json_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/json_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -g   -std=c++17 -o CMakeFiles/benchmark.dir/reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -g   -std=c++17 -o CMakeFiles/benchmark.dir/sleep.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sleep.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -g   -std=c++17 -o CMakeFiles/benchmark.dir/statistics.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/statistics.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -g   -std=c++17 -o CMakeFiles/benchmark.dir/string_util.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/string_util.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -g   -std=c++17 -o CMakeFiles/benchmark.dir/sysinfo.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sysinfo.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -g   -std=c++17 -o CMakeFiles/benchmark.dir/timers.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/timers.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -P CMakeFiles/benchmark.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/benchmark.dir/link.txt --verbose=1
/usr/bin/ar qc libbenchmarkd.a  CMakeFiles/benchmark.dir/benchmark.cc.o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o CMakeFiles/benchmark.dir/benchmark_name.cc.o CMakeFiles/benchmark.dir/benchmark_register.cc.o CMakeFiles/benchmark.dir/benchmark_runner.cc.o CMakeFiles/benchmark.dir/colorprint.cc.o CMakeFiles/benchmark.dir/commandlineflags.cc.o CMakeFiles/benchmark.dir/complexity.cc.o CMakeFiles/benchmark.dir/console_reporter.cc.o CMakeFiles/benchmark.dir/counter.cc.o CMakeFiles/benchmark.dir/csv_reporter.cc.o CMakeFiles/benchmark.dir/json_reporter.cc.o CMakeFiles/benchmark.dir/reporter.cc.o CMakeFiles/benchmark.dir/sleep.cc.o CMakeFiles/benchmark.dir/statistics.cc.o CMakeFiles/benchmark.dir/string_util.cc.o CMakeFiles/benchmark.dir/sysinfo.cc.o CMakeFiles/benchmark.dir/timers.cc.o
/usr/bin/ranlib libbenchmarkd.a
[ 80%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
Scanning dependencies of target generated-data
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated && /usr/bin/ruby genfeaturejson.rb /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-miss.json ...
[ 80%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/g++-10  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/include  -g -fPIC   -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -pthread -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/g++-10 -fPIC -g  -shared -Wl,-soname,libsimdjson.so.7 -o ../libsimdjson.so.7.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.7.0.0 ../libsimdjson.so.7 ../libsimdjson.so
[ 80%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
Scanning dependencies of target yyjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/gcc-10  -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src  -g   -o CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o   -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src/yyjson.c
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -P CMakeFiles/yyjson.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -E cmake_link_script CMakeFiles/yyjson.dir/link.txt --verbose=1
/usr/bin/ar qc libyyjson.a  CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o
/usr/bin/ranlib libyyjson.a
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/g++-10  -DRAPIDJSON_HAS_STDSTRING -DSAJSON_UNSORTED_OBJECT_KEYS -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_COMPETITION_NLOHMANN_JSON -DSIMDJSON_COMPETITION_RAPIDJSON -DSIMDJSON_COMPETITION_SAJSON -DSIMDJSON_COMPETITION_YYJSON -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/rapidjson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/sajson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/json  -g   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/g++-10  -g   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.7.0.0 ../_deps/google_benchmarks/src/libbenchmarkd.a ../dependencies/libyyjson.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.8.0/skylake-x-gcc10.2-debug.json --benchmark_out_format=json
2021-01-24 20:57:01
Running benchmark/bench_ondemand
Run on (4 X 3200 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 1024 KiB (x4)
  L3 Unified 8448 KiB (x1)
Load Average: 1.00, 1.00, 0.75
***WARNING*** CPU scaling is enabled, the benchmark real time measurements may be noisy and will incur extra overhead.
***WARNING*** Library was built as DEBUG. Timings may be affected.
simdjson::dom implementation:      haswell
simdjson::ondemand implementation: fallback

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                15346531 ns     15420983 ns           46          17.617k           41.1727M               1        43.802k    48.9201M              77.4647           65.1967       3.18943G          82.4036M                    130.486                     1.68445           6.51967k    17.7118k   631.515k        39.244M/s    33.8913   44.3061k   48.9452M         77.5043    65.1613/s 3.18933G/s     82.4036M               130.486                1.68359        100       6.51613k/s [BEST: throughput=  0.04 GB/s doc_throughput=    65 docs/s instructions=    82403563 cycles=    48920119 branch_miss=   17617 cache_miss=       1 cache_ref=     43802 items=       100 avg_time=  15346530 ns]
partial_tweets<simdjson_ondemand>/manual_time           11206334 ns     11272599 ns           62           5.348k           56.3803M              11        28.089k    35.7336M               56.584           89.2779       3.19022G          65.0157M                    102.952                     1.81945           8.92779k    5.38816k   631.515k       53.7428M/s    7.64516   28.2316k   35.7408M         56.5953    89.2352/s 3.18934G/s     65.0157M               102.952                1.81909        100       8.92352k/s [BEST: throughput=  0.06 GB/s doc_throughput=    89 docs/s instructions=    65015691 cycles=    35733647 branch_miss=    5348 cache_miss=      11 cache_ref=     28089 items=       100 avg_time=  11206334 ns]
partial_tweets<yyjson>/manual_time                       1920556 ns      2001774 ns          365          10.057k            403.34M             326        29.286k    4.98024M              7.88618           638.687       3.18081G          12.8843M                    20.4022                     2.58708           63.8687k    8.83282k   631.515k       313.586M/s    700.395   24.3208k   5.15729M         8.16654    520.682/s 2.68531G/s     12.8848M               20.4029                2.49836        100       52.0682k/s [BEST: throughput=  0.40 GB/s doc_throughput=   638 docs/s instructions=    12884283 cycles=     4980242 branch_miss=   10057 cache_miss=     326 cache_ref=     29286 items=       100 avg_time=   1920556 ns]
partial_tweets<yyjson_insitu>/manual_time                1639478 ns      1704985 ns          428           8.459k           427.835M              41        16.255k    4.71301M              7.46303           677.475       3.19295G           12.884M                    20.4017                     2.73371           67.7475k     8.5749k   631.515k       367.348M/s    90.7874   10.0346k   4.82572M          7.6415     609.95/s 2.94345G/s     12.8842M                20.402                2.66989        100        60.995k/s [BEST: throughput=  0.43 GB/s doc_throughput=   677 docs/s instructions=    12883990 cycles=     4713013 branch_miss=    8459 cache_miss=      41 cache_ref=     16255 items=       100 avg_time=   1639478 ns]
partial_tweets<sajson>/manual_time                       3498736 ns      3565144 ns          200          41.865k           181.019M              12        14.317k     11.138M              17.6369           286.643       3.19262G          27.8592M                    44.1149                     2.50128           28.6643k    42.1213k   631.515k       172.136M/s      14.48   14.3205k   11.1589M         17.6701    285.817/s 3.18942G/s     27.8592M               44.1149                2.49658        100       28.5817k/s [BEST: throughput=  0.18 GB/s doc_throughput=   286 docs/s instructions=    27859214 cycles=    11137961 branch_miss=   41865 cache_miss=      12 cache_ref=     14317 items=       100 avg_time=   3498736 ns]
partial_tweets<rapidjson>/manual_time                   15966503 ns     16034797 ns           44          66.103k           40.1702M             424         24.78k     50.153M               79.417           63.6092       3.19019G          104.823M                    165.987                     2.09007           6.36092k    65.8968k   631.515k       37.7202M/s    282.455   12.5654k   50.2906M         79.6349    62.6311/s 3.14976G/s     104.823M               165.987                2.08435        100       6.26311k/s [BEST: throughput=  0.04 GB/s doc_throughput=    63 docs/s instructions=   104823130 cycles=    50153042 branch_miss=   66103 cache_miss=     424 cache_ref=     24780 items=       100 avg_time=  15966502 ns]
partial_tweets<rapidjson_insitu>/manual_time            10969861 ns     11035145 ns           64          49.765k           58.3429M              13        16.254k    34.5382M               54.691           92.3856       3.19083G          75.1835M                    119.053                     2.17682           9.23856k    49.8467k   631.515k       54.9013M/s    127.422   10.4611k   34.6275M         54.8325    91.1589/s 3.15661G/s      75.184M               119.053                2.17122        100       9.11589k/s [BEST: throughput=  0.06 GB/s doc_throughput=    92 docs/s instructions=    75183480 cycles=    34538173 branch_miss=   49765 cache_miss=      13 cache_ref=     16254 items=       100 avg_time=  10969861 ns]
partial_tweets<nlohmann_json>/manual_time               90206811 ns     90301891 ns            8         399.154k           7.03365M             354       101.413k    286.466M              453.618           11.1377       3.19059G          492.704M                    780.193                     1.71994           1.11377k    409.451k   631.515k       6.67643M/s    715.375   145.563k   287.813M          455.75    11.0856/s 3.19059G/s     493.501M               781.455                1.71466        100       1.10856k/s [BEST: throughput=  0.01 GB/s doc_throughput=    11 docs/s instructions=   492703713 cycles=   286466387 branch_miss=  399154 cache_miss=     354 cache_ref=    101413 items=       100 avg_time=  90206810 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                2893033877 ns   2899119442 ns            1         4.00119M           15.8998M        6.88487M        6.9846M    9.23054G              200.669          0.345658       3.19061G          15.4891G                    336.728                     1.67803           345.658k    4.00119M   45.9988M       15.1633M/s   6.88487M    6.9846M   9.23054G         200.669   0.345658/s 3.19061G/s     15.4891G               336.728                1.67803      1000k       345.658k/s [BEST: throughput=  0.02 GB/s doc_throughput=     0 docs/s instructions= 15489081861 cycles=  9230541861 branch_miss= 4001191 cache_miss= 6884874 cache_ref=   6984596 items=   1000000 avg_time=2893033877 ns]
large_random<simdjson_ondemand>/manual_time           1387113859 ns   1393271031 ns            1         918.115k           33.1615M        3.57773M       3.63711M    4.42537G              96.2063          0.720921       3.19035G          8.58735G                    186.686                     1.94048           720.921k    918.115k   45.9988M       31.6253M/s   3.57773M   3.63711M   4.42537G         96.2063   0.720921/s 3.19035G/s     8.58735G               186.686                1.94048      1000k       720.921k/s [BEST: throughput=  0.03 GB/s doc_throughput=     0 docs/s instructions=  8587347321 cycles=  4425373305 branch_miss=  918115 cache_miss= 3577730 cache_ref=   3637112 items=   1000000 avg_time=1387113859 ns]
large_random<simdjson_ondemand_unordered>/manual_time 1397214736 ns   1403325774 ns            1         919.396k           32.9218M        3.57329M       3.64256M    4.45771G              96.9094           0.71571       3.19043G          8.64335G                    187.904                     1.93896            715.71k    919.396k   45.9988M       31.3966M/s   3.57329M   3.64256M   4.45771G         96.9094    0.71571/s 3.19043G/s     8.64335G               187.904                1.93896      1000k        715.71k/s [BEST: throughput=  0.03 GB/s doc_throughput=     0 docs/s instructions=  8643347333 cycles=  4457713859 branch_miss=  919396 cache_miss= 3573286 cache_ref=   3642564 items=   1000000 avg_time=1397214736 ns]
large_random<yyjson>/manual_time                       422659043 ns    428839485 ns            2         883.258k           108.845M        4.20532M       4.34731M    1.20728G               26.246           2.36626       2.85674G          3.23149G                    70.2517                     2.67667           2.36626M    882.389k   45.9988M        103.79M/s     4.205M    4.3466M   1.20742G          26.249    2.36597/s 2.85672G/s     3.23149G               70.2517                2.67636      1000k       2.36597M/s [BEST: throughput=  0.11 GB/s doc_throughput=     2 docs/s instructions=  3231489942 cycles=  1207281877 branch_miss=  883258 cache_miss= 4205319 cache_ref=   4347306 items=   1000000 avg_time= 422659043 ns]
large_random<yyjson_insitu>/manual_time                396293951 ns    402502237 ns            2         883.454k           116.079M        3.49012M       3.63573M    1.16384G              25.3016           2.52353       2.93699G          3.22537G                    70.1186                     2.77131           2.52353M    883.294k   45.9988M       110.695M/s   3.48836M   3.63169M   1.16382G          25.301    2.52338/s 2.93675G/s     3.22537G               70.1186                2.77137      1000k       2.52338M/s [BEST: throughput=  0.12 GB/s doc_throughput=     2 docs/s instructions=  3225369340 cycles=  1163842484 branch_miss=  883454 cache_miss= 3490124 cache_ref=   3635728 items=   1000000 avg_time= 396293951 ns]
large_random<sajson>/manual_time                       893423689 ns    899567236 ns            1         1.68157M            51.486M        5.55855M         5.589M     2.8499G               61.956           1.11929       3.18986G          7.02397G                    152.699                     2.46464           1.11929M    1.68157M   45.9988M       49.1008M/s   5.55855M     5.589M    2.8499G          61.956    1.11929/s 3.18986G/s     7.02397G               152.699                2.46464      1000k       1.11929M/s [BEST: throughput=  0.05 GB/s doc_throughput=     1 docs/s instructions=  7023969420 cycles=  2849897919 branch_miss= 1681569 cache_miss= 5558545 cache_ref=   5589004 items=   1000000 avg_time= 893423689 ns]
large_random<rapidjson>/manual_time                   2249600636 ns   2255728241 ns            1         3.67686M           20.4475M        4.37809M       4.91608M    7.10934G              154.555          0.444523       3.16027G          14.3764G                     312.54                     2.02219           444.523k    3.67686M   45.9988M       19.5003M/s   4.37809M   4.91608M   7.10934G         154.555   0.444523/s 3.16027G/s     14.3764G                312.54                2.02219      1000k       444.523k/s [BEST: throughput=  0.02 GB/s doc_throughput=     0 docs/s instructions= 14376449087 cycles=  7109337234 branch_miss= 3676863 cache_miss= 4378091 cache_ref=   4916082 items=   1000000 avg_time=2249600636 ns]
large_random<rapidjson_lossless>/manual_time          2703200631 ns   2709315004 ns            1         6.41789M           17.0164M        4.43101M       4.92336M    8.55628G              186.011          0.369932       3.16524G          17.5232G                    380.949                     2.04799           369.932k    6.41789M   45.9988M       16.2281M/s   4.43101M   4.92336M   8.55628G         186.011   0.369932/s 3.16524G/s     17.5232G               380.949                2.04799      1000k       369.932k/s [BEST: throughput=  0.02 GB/s doc_throughput=     0 docs/s instructions= 17523182419 cycles=  8556283972 branch_miss= 6417886 cache_miss= 4431006 cache_ref=   4923363 items=   1000000 avg_time=2703200631 ns]
large_random<rapidjson_insitu>/manual_time            2089336502 ns   2095482136 ns            1         3.67042M            22.016M        5.07026M       5.64736M    6.59745G              143.427          0.478621       3.15768G          13.6794G                    297.387                     2.07344           478.621k    3.67042M   45.9988M       20.9961M/s   5.07026M   5.64736M   6.59745G         143.427   0.478621/s 3.15768G/s     13.6794G               297.387                2.07344      1000k       478.621k/s [BEST: throughput=  0.02 GB/s doc_throughput=     0 docs/s instructions= 13679448611 cycles=  6597454531 branch_miss= 3670424 cache_miss= 5070261 cache_ref=   5647365 items=   1000000 avg_time=2089336502 ns]
large_random<nlohmann_json>/manual_time               13416889886 ns   13422726871 ns            1         36.2784M           3.42842M        30.4862M       30.9758M    42.7955G              930.361         0.0745329       3.18967G          72.0459G                   1.56626k                     1.68349           74.5329k    36.2784M   45.9988M        3.2696M/s   30.4862M   30.9758M   42.7955G         930.361  0.0745329/s 3.18967G/s     72.0459G              1.56626k                1.68349      1000k       74.5329k/s [BEST: throughput=  0.00 GB/s doc_throughput=     0 docs/s instructions= 72045856835 cycles= 42795470422 branch_miss=36278415 cache_miss=30486182 cache_ref=  30975774 items=   1000000 avg_time=13416889886 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                      3318859006 ns   3337621642 ns            1         3.84936M           41.3711M        10.3028M       10.4845M    10.5884G              77.1158          0.301308       3.19037G          17.9583G                    130.791                     1.69603           157.972k    3.84936M   137.305M       39.4546M/s   10.3028M   10.4845M   10.5884G         77.1158   0.301308/s 3.19037G/s     17.9583G               130.791                1.69603   524.288k       157.972k/s [BEST: throughput=  0.04 GB/s doc_throughput=     0 docs/s instructions= 17958267244 cycles= 10588391397 branch_miss= 3849364 cache_miss=10302821 cache_ref=  10484502 items=    524288 avg_time=3318859006 ns]
kostya<simdjson_ondemand>/manual_time                 2053929092 ns   2072680490 ns            1         598.923k           66.8499M        6.46916M       6.59067M    6.55272G              47.7238          0.486872       3.19033G          12.3957G                    90.2786                     1.89169           255.261k    598.923k   137.305M       63.7531M/s   6.46916M   6.59067M   6.55272G         47.7238   0.486872/s 3.19033G/s     12.3957G               90.2786                1.89169   524.288k       255.261k/s [BEST: throughput=  0.07 GB/s doc_throughput=     0 docs/s instructions= 12395706413 cycles=  6552717352 branch_miss=  598923 cache_miss= 6469162 cache_ref=   6590668 items=    524288 avg_time=2053929092 ns]
kostya<yyjson>/manual_time                             523241118 ns    542146914 ns            1         426.492k           262.412M        8.55029M       8.74994M    1.43507G              10.4517           1.91116       2.74266G          3.60689G                    26.2692                     2.51339              1002k    426.492k   137.305M       250.256M/s   8.55029M   8.74994M   1.43507G         10.4517    1.91116/s 2.74266G/s     3.60689G               26.2692                2.51339   524.288k          1002k/s [BEST: throughput=  0.26 GB/s doc_throughput=     1 docs/s instructions=  3606894369 cycles=  1435071196 branch_miss=  426492 cache_miss= 8550291 cache_ref=   8749941 items=    524288 avg_time= 523241117 ns]
kostya<yyjson_insitu>/manual_time                      445134480 ns    464008694 ns            2         430.729k           308.459M        6.38386M       6.59505M    1.30667G              9.51655           2.24652       2.93547G          3.58862G                    26.1362                     2.74639           1.17783M    430.937k   137.305M       294.168M/s   6.38456M   6.59234M   1.30673G           9.517    2.24651/s 2.93559G/s     3.58862G               26.1362                2.74626   524.288k       1.17782M/s [BEST: throughput=  0.31 GB/s doc_throughput=     2 docs/s instructions=  3588624742 cycles=  1306670080 branch_miss=  430729 cache_miss= 6383856 cache_ref=   6595050 items=    524288 avg_time= 445134480 ns]
kostya<sajson>/manual_time                            1054906845 ns   1073709191 ns            1         4.38011M           130.158M        8.50612M       8.53955M    3.36479G              24.5059          0.947951       3.18965G           8.7463G                    63.6998                     2.59936           496.999k    4.38011M   137.305M       124.129M/s   8.50612M   8.53955M   3.36479G         24.5059   0.947951/s 3.18965G/s      8.7463G               63.6998                2.59936   524.288k       496.999k/s [BEST: throughput=  0.13 GB/s doc_throughput=     0 docs/s instructions=  8746297104 cycles=  3364785311 branch_miss= 4380110 cache_miss= 8506122 cache_ref=   8539548 items=    524288 avg_time=1054906845 ns]
kostya<rapidjson>/manual_time                         2714237184 ns   2733002494 ns            1         13.3074M            50.587M        5.25214M       5.80369M    8.56292G              62.3642          0.368428       3.15482G          16.7054G                    121.666                      1.9509           193.162k    13.3074M   137.305M       48.2435M/s   5.25214M   5.80369M   8.56292G         62.3642   0.368428/s 3.15482G/s     16.7054G               121.666                 1.9509   524.288k       193.162k/s [BEST: throughput=  0.05 GB/s doc_throughput=     0 docs/s instructions= 16705387964 cycles=  8562918347 branch_miss=13307397 cache_miss= 5252141 cache_ref=   5803686 items=    524288 avg_time=2714237184 ns]
kostya<rapidjson_lossless>/manual_time                2953135376 ns   2971903763 ns            1         14.5602M           46.4946M        5.24852M       5.85806M    9.32416G              67.9084          0.338623       3.15738G          18.5251G                    134.919                     1.98679           177.536k    14.5602M   137.305M       44.3408M/s   5.24852M   5.85806M   9.32416G         67.9084   0.338623/s 3.15738G/s     18.5251G               134.919                1.98679   524.288k       177.536k/s [BEST: throughput=  0.05 GB/s doc_throughput=     0 docs/s instructions= 18525117776 cycles=  9324160990 branch_miss=14560187 cache_miss= 5248516 cache_ref=   5858061 items=    524288 avg_time=2953135376 ns]
kostya<rapidjson_insitu>/manual_time                  2415697174 ns   2434489295 ns            1         12.5489M           56.8387M        7.35059M       7.89525M    7.60948G              55.4203          0.413959       3.15001G          15.2562G                    111.112                      2.0049           217.034k    12.5489M   137.305M       54.2056M/s   7.35059M   7.89525M   7.60948G         55.4203   0.413959/s 3.15001G/s     15.2562G               111.112                 2.0049   524.288k       217.034k/s [BEST: throughput=  0.06 GB/s doc_throughput=     0 docs/s instructions= 15256209951 cycles=  7609479187 branch_miss=12548869 cache_miss= 7350586 cache_ref=   7895252 items=    524288 avg_time=2415697174 ns]
kostya<nlohmann_json>/manual_time                     21834581242 ns   21852879450 ns            1         59.2507M           6.28842M        45.1548M       45.7326M    69.6702G              507.412         0.0457989       3.19082G          115.835G                    843.631                     1.66261           24.0118k    59.2507M   137.305M        5.9971M/s   45.1548M   45.7326M   69.6702G         507.412  0.0457989/s 3.19082G/s     115.835G               843.631                1.66261   524.288k       24.0118k/s [BEST: throughput=  0.01 GB/s doc_throughput=     0 docs/s instructions=115834697786 cycles= 69670239691 branch_miss=59250685 cache_miss=45154804 cache_ref=  45732624 items=    524288 avg_time=21834581242 ns]
distinct_user_id<simdjson_dom>/manual_time              14918782 ns     15029076 ns           47          14.895k           42.3558M               1        44.755k    47.5618M              75.3138           67.0702       3.18998G           80.487M                    127.451                     1.69226           7.71307k    15.0564k   631.515k       40.3692M/s    13.0213   44.8097k   47.5809M         75.3441    67.0296/s 3.18933G/s      80.487M               127.451                1.69158        115        7.7084k/s [BEST: throughput=  0.04 GB/s doc_throughput=    67 docs/s instructions=    80486973 cycles=    47561783 branch_miss=   14895 cache_miss=       1 cache_ref=     44755 items=       115 avg_time=  14918782 ns]
distinct_user_id<simdjson_ondemand>/manual_time         11049334 ns     11148587 ns           63           5.121k           57.1892M              10         26.25k    35.2278M               55.783           90.5587       3.19019G          63.8644M                    101.129                      1.8129           10.4143k    5.20646k   631.515k       54.5064M/s    17.2381   26.5325k   35.2396M         55.8016    90.5032/s 3.18929G/s     63.8644M               101.129                1.81229        115       10.4079k/s [BEST: throughput=  0.06 GB/s doc_throughput=    90 docs/s instructions=    63864404 cycles=    35227807 branch_miss=    5121 cache_miss=      10 cache_ref=     26250 items=       115 avg_time=  11049334 ns]
distinct_user_id<yyjson>/manual_time                     1662602 ns      1778258 ns          468           7.438k           426.539M          7.239k        28.279k    4.72703M              7.48522           675.422       3.19274G          12.6251M                    19.9917                     2.67082           77.6736k    8.10754k   631.515k       362.239M/s    4.3668k   26.6939k   4.88486M         7.73514    601.467/s 2.93808G/s     12.6252M                19.992                2.58456        115       69.1687k/s [BEST: throughput=  0.43 GB/s doc_throughput=   675 docs/s instructions=    12625072 cycles=     4727031 branch_miss=    7438 cache_miss=    7239 cache_ref=     28279 items=       115 avg_time=   1662602 ns]
distinct_user_id<yyjson_insitu>/manual_time              1605147 ns      1705762 ns          437           8.326k           440.361M              17        16.044k    4.57883M              7.25055           697.309       3.19286G          12.6246M                     19.991                     2.75717           80.1905k    8.42477k   631.515k       375.205M/s    94.7391    10.388k   4.71586M         7.46753    622.996/s 2.93796G/s     12.6249M               19.9914                2.67711        115       71.6445k/s [BEST: throughput=  0.44 GB/s doc_throughput=   697 docs/s instructions=    12624611 cycles=     4578830 branch_miss=    8326 cache_miss=      17 cache_ref=     16044 items=       115 avg_time=   1605147 ns]
distinct_user_id<sajson>/manual_time                     3441225 ns      3541978 ns          203          41.809k           184.044M               7        14.066k    10.9553M              17.3477           291.432       3.19273G          27.4249M                    43.4272                     2.50334           33.5147k    42.0763k   631.515k       175.013M/s    9.71921   14.1781k   10.9749M         17.3786    290.594/s 3.18923G/s     27.4249M               43.4272                2.49888        115       33.4183k/s [BEST: throughput=  0.18 GB/s doc_throughput=   291 docs/s instructions=    27424941 cycles=    10955342 branch_miss=   41809 cache_miss=       7 cache_ref=     14066 items=       115 avg_time=   3441225 ns]
distinct_user_id<rapidjson>/manual_time                 15762579 ns     15864152 ns           44          64.362k           40.6488M             127        23.749k    49.5732M              78.4989           64.3672       3.19089G          103.662M                    164.148                     2.09109           7.40222k    64.2832k   631.515k       38.2082M/s    1.6517k   14.8752k   49.7465M         78.7733    63.4414/s 3.15599G/s     103.663M                164.15                2.08382        115       7.29576k/s [BEST: throughput=  0.04 GB/s doc_throughput=    64 docs/s instructions=   103662193 cycles=    49573221 branch_miss=   64362 cache_miss=     127 cache_ref=     23749 items=       115 avg_time=  15762578 ns]
distinct_user_id<rapidjson_insitu>/manual_time          10685018 ns     10785494 ns           66          49.458k           59.1793M          2.679k         16.14k    34.0484M              53.9155           93.7101       3.19068G          74.0552M                    117.266                       2.175           10.7767k    49.2367k   631.515k       56.3649M/s   6.51594k   16.0117k    34.087M         53.9765     93.589/s 3.19017G/s     74.0552M               117.266                2.17254        115       10.7627k/s [BEST: throughput=  0.06 GB/s doc_throughput=    93 docs/s instructions=    74055242 cycles=    34048416 branch_miss=   49458 cache_miss=    2679 cache_ref=     16140 items=       115 avg_time=  10685018 ns]
distinct_user_id<nlohmann_json>/manual_time             86292346 ns     86411785 ns            8         356.933k             7.343M          2.851k        101.91k    274.401M              434.512           11.6276       3.19062G          473.267M                    749.416                     1.72473           1.33717k    364.012k   631.515k       6.97929M/s      444.5   109.723k   275.318M         435.964    11.5885/s 3.19052G/s     472.005M               747.417                 1.7144        115       1.33268k/s [BEST: throughput=  0.01 GB/s doc_throughput=    11 docs/s instructions=   473267469 cycles=   274400769 branch_miss=  356933 cache_miss=    2851 cache_ref=    101910 items=       115 avg_time=  86292346 ns]
find_tweet<simdjson_dom>/manual_time                    14446309 ns     14524412 ns           48          13.053k             43.74M               3         41.69k    46.0568M              72.9307            69.262       3.18999G          78.3146M                    124.011                     1.70039             69.262    13.2181k   631.515k       41.6895M/s    8.52083   41.6915k   46.0759M         72.9608    69.2218/s 3.18946G/s     78.3146M               124.011                1.69969          1        69.2218/s [BEST: throughput=  0.04 GB/s doc_throughput=    69 docs/s instructions=    78314624 cycles=    46056829 branch_miss=   13053 cache_miss=       3 cache_ref=     41690 items=         1 avg_time=  14446309 ns]
find_tweet<simdjson_ondemand>/manual_time               10027000 ns     10102038 ns           70            3.05k           63.0116M               5        15.828k    31.9717M              50.6271           99.7785       3.19009G          56.1003M                    88.8345                     1.75468            99.7785    3.08461k   631.515k       60.0638M/s    6.08571   15.8644k   31.9809M         50.6416    99.7307/s 3.18948G/s     56.1003M               88.8345                1.75418          1        99.7307/s [BEST: throughput=  0.06 GB/s doc_throughput=    99 docs/s instructions=    56100318 cycles=    31971745 branch_miss=    3050 cache_miss=       5 cache_ref=     15828 items=         1 avg_time=  10026999 ns]
find_tweet<yyjson>/manual_time                           1840267 ns      1926401 ns          390           10.01k           422.949M             198        28.057k    4.75176M              7.52439           669.738       3.18243G          12.3601M                    19.5721                     2.60115            669.738    8.46378k   631.515k       327.267M/s    386.674   20.6029k   4.90553M         7.76787    543.399/s 2.66566G/s     12.3607M               19.5732                2.51976          1        543.399/s [BEST: throughput=  0.42 GB/s doc_throughput=   669 docs/s instructions=    12360057 cycles=     4751763 branch_miss=   10010 cache_miss=     198 cache_ref=     28057 items=         1 avg_time=   1840267 ns]
find_tweet<yyjson_insitu>/manual_time                    1561839 ns      1627605 ns          449           7.435k           454.377M          1.555k        13.638k    4.43287M              7.01942           719.503       3.18946G          12.3597M                    19.5715                     2.78819            719.503    8.20326k   631.515k       385.609M/s    13.2249   5.98753k   4.57916M         7.25107    640.271/s  2.9319G/s     12.3599M               19.5719                2.69917          1        640.271/s [BEST: throughput=  0.45 GB/s doc_throughput=   719 docs/s instructions=    12359691 cycles=     4432871 branch_miss=    7435 cache_miss=    1555 cache_ref=     13638 items=         1 avg_time=   1561839 ns]
find_tweet<sajson>/manual_time                           3376840 ns      3447751 ns          207          41.616k           187.531M               3        13.621k    10.7513M              17.0246           296.954       3.19263G          26.9641M                    42.6975                     2.50799            296.954    41.8566k   631.515k        178.35M/s    16.1643    13.671k   10.7702M         17.0545    296.135/s 3.18942G/s     26.9641M               42.6975                2.50359          1        296.135/s [BEST: throughput=  0.19 GB/s doc_throughput=   296 docs/s instructions=    26964085 cycles=    10751271 branch_miss=   41616 cache_miss=       3 cache_ref=     13621 items=         1 avg_time=   3376840 ns]
find_tweet<rapidjson>/manual_time                       15535855 ns     15606810 ns           45          62.738k           41.2191M          7.999k        22.103k     48.883M              77.4059           65.2703       3.19061G           102.21M                     161.85                     2.09092            65.2703    63.0271k   631.515k       38.7658M/s   1.50696k   12.0043k   49.0226M          77.627    64.3672/s 3.15545G/s     102.211M               161.851                2.08498          1        64.3672/s [BEST: throughput=  0.04 GB/s doc_throughput=    65 docs/s instructions=   102210484 cycles=    48883006 branch_miss=   62738 cache_miss=    7999 cache_ref=     22103 items=         1 avg_time=  15535855 ns]
find_tweet<rapidjson_insitu>/manual_time                10476736 ns     10548176 ns           67          48.155k           60.3328M          2.734k         14.95k    33.3986M              52.8865           95.5367       3.19079G          72.6344M                    115.016                     2.17477            95.5367    48.2196k   631.515k       57.4854M/s   6.14203k   14.8362k   33.4238M         52.9263    95.4496/s 3.19028G/s     72.6344M               115.016                2.17314          1        95.4496/s [BEST: throughput=  0.06 GB/s doc_throughput=    95 docs/s instructions=    72634447 cycles=    33398630 branch_miss=   48155 cache_miss=    2734 cache_ref=     14950 items=         1 avg_time=  10476735 ns]
find_tweet<nlohmann_json>/manual_time                   75895482 ns     75985890 ns            9         277.935k           8.34677M          2.079k        81.579k    241.401M              382.256           13.2171       3.19061G          419.124M                     663.68                     1.73622            13.2171    285.337k   631.515k       7.93538M/s    367.556   87.4178k   242.147M         383.438     13.176/s 3.19053G/s     417.833M               661.637                1.72554          1         13.176/s [BEST: throughput=  0.01 GB/s doc_throughput=    13 docs/s instructions=   419123843 cycles=   241400682 branch_miss=  277935 cache_miss=    2079 cache_ref=     81579 items=         1 avg_time=  75895482 ns]
top_tweet<simdjson_dom>/manual_time                     14632269 ns     14714495 ns           48          14.005k           43.1884M               6         42.94k    46.6444M              73.8611           68.3885       3.18994G          79.1624M                    125.353                     1.69715            68.3885    14.1231k   631.515k       41.1597M/s    10.0833   43.0827k   46.6693M         73.9005    68.3421/s 3.18948G/s     79.1624M               125.353                1.69624          1        68.3421/s [BEST: throughput=  0.04 GB/s doc_throughput=    68 docs/s instructions=    79162442 cycles=    46644370 branch_miss=   14005 cache_miss=       6 cache_ref=     42940 items=         1 avg_time=  14632268 ns]
top_tweet<simdjson_ondemand>/manual_time                11014822 ns     11087305 ns           64           5.043k           57.3674M               5        25.127k    35.1119M              55.5995           90.8409        3.1896G          63.6572M                    100.801                     1.81298            90.8409    5.10247k   631.515k       54.6772M/s    8.42188   25.4377k   35.1311M         55.6298    90.7868/s 3.18944G/s     63.6572M               100.801                1.81199          1        90.7868/s [BEST: throughput=  0.06 GB/s doc_throughput=    90 docs/s instructions=    63657162 cycles=    35111947 branch_miss=    5043 cache_miss=       5 cache_ref=     25127 items=         1 avg_time=  11014822 ns]
top_tweet<simdjson_ondemand_forward_only>/manual_time   11075128 ns     11148113 ns           63           5.231k           57.0535M               2        26.389k     35.317M              55.9243           90.3438       3.19067G          64.3436M                    101.888                     1.82189            90.3438    5.20463k   631.515k       54.3795M/s    3.84127   26.4734k   35.3239M         55.9352    90.2924/s 3.18948G/s     64.3436M               101.888                1.82153          1        90.2924/s [BEST: throughput=  0.06 GB/s doc_throughput=    90 docs/s instructions=    64343568 cycles=    35317019 branch_miss=    5231 cache_miss=       2 cache_ref=     26389 items=         1 avg_time=  11075127 ns]
top_tweet<yyjson>/manual_time                            1860303 ns      1949998 ns          386          10.096k           421.203M             328        28.444k     4.7877M              7.58129           666.973       3.19326G          12.4505M                    19.7153                     2.60052            666.973    8.61261k   631.515k       323.743M/s     477.42   23.8035k   4.96901M          7.8684    537.547/s 2.67108G/s     12.4512M               19.7164                2.50577          1        537.547/s [BEST: throughput=  0.42 GB/s doc_throughput=   666 docs/s instructions=    12450518 cycles=     4787696 branch_miss=   10096 cache_miss=     328 cache_ref=     28444 items=         1 avg_time=   1860302 ns]
top_tweet<yyjson_insitu>/manual_time                     1580360 ns      1653161 ns          444           7.973k           447.909M          1.856k         14.55k    4.49664M               7.1204           709.261       3.18929G          12.4501M                    19.7147                     2.76877            709.261    8.35243k   631.515k        381.09M/s    73.0676   9.41662k   4.63779M         7.34391    632.767/s 2.93464G/s     12.4504M               19.7151                2.68455          1        632.767/s [BEST: throughput=  0.45 GB/s doc_throughput=   709 docs/s instructions=    12450144 cycles=     4496638 branch_miss=    7973 cache_miss=    1856 cache_ref=     14550 items=         1 avg_time=   1580359 ns]
top_tweet<sajson>/manual_time                            3412707 ns      3486948 ns          205          41.836k            185.49M              71        13.684k    10.8695M              17.2118           293.723       3.19262G          27.2084M                    43.0843                     2.50319            293.723    41.9711k   631.515k       176.476M/s    77.2585   13.9526k   10.8845M         17.2356    293.023/s 3.18941G/s     27.2084M               43.0843                2.49973          1        293.023/s [BEST: throughput=  0.19 GB/s doc_throughput=   293 docs/s instructions=    27208386 cycles=    10869481 branch_miss=   41836 cache_miss=      71 cache_ref=     13684 items=         1 avg_time=   3412707 ns]
top_tweet<rapidjson>/manual_time                        15690193 ns     15765457 ns           45          63.722k            40.825M          7.618k        22.901k    49.3549M              78.1531           64.6461        3.1906G          103.234M                     163.47                     2.09167            64.6461    64.0286k   631.515k       38.3845M/s   1.49551k   13.3435k   49.5149M         78.4066    63.7341/s 3.15579G/s     103.235M               163.471                2.08492          1        63.7341/s [BEST: throughput=  0.04 GB/s doc_throughput=    64 docs/s instructions=   103234006 cycles=    49354868 branch_miss=   63722 cache_miss=    7618 cache_ref=     22901 items=         1 avg_time=  15690192 ns]
top_tweet<rapidjson_insitu>/manual_time                 10619138 ns     10693831 ns           66          48.901k           59.5321M              35        15.751k    33.8468M              53.5962           94.2688        3.1907G          73.6317M                    116.595                     2.17544            94.2688    48.9279k   631.515k       56.7146M/s   6.25318k   15.5797k   33.8772M         53.6443    94.1696/s  3.1902G/s     73.6319M               116.596                2.17349          1        94.1696/s [BEST: throughput=  0.06 GB/s doc_throughput=    94 docs/s instructions=    73631688 cycles=    33846806 branch_miss=   48901 cache_miss=      35 cache_ref=     15751 items=         1 avg_time=  10619138 ns]
top_tweet<nlohmann_json>/manual_time                    94671305 ns     94764593 ns            7         454.915k           6.67349M             115       168.491k     301.94M              478.119           10.5674       3.19073G          517.668M                    819.725                     1.71448            10.5674     457.03k   631.515k       6.36159M/s    590.857   168.575k   302.059M         478.309    10.5629/s 3.19061G/s     518.008M               820.262                1.71492          1        10.5629/s [BEST: throughput=  0.01 GB/s doc_throughput=    10 docs/s instructions=   517668421 cycles=   301939545 branch_miss=  454915 cache_miss=     115 cache_ref=    168491 items=         1 avg_time=  94671305 ns]
