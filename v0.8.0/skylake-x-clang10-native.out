run_benchmark: v0.8.0 /home/jkeiser/simdjson_benchmark_results/v0.8.0/skylake-x-clang10-native.json -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native
git reset --hard v0.8.0
HEAD is now at c96ff018 Version 0.8.
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The CXX compiler identification is Clang 10.0.1
-- The C compiler identification is Clang 10.0.1
-- Check for working CXX compiler: /usr/bin/clang++-10
-- Check for working CXX compiler: /usr/bin/clang++-10 -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Check for working C compiler: /usr/bin/clang-10
-- Check for working C compiler: /usr/bin/clang-10 -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed
-- Check if compiler accepts -pthread
-- Check if compiler accepts -pthread - yes
-- Found Threads: TRUE  
-- Looking for fork
-- Looking for fork - found
-- Looking for wait
-- Looking for wait - found
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- Found Git: /usr/bin/git (found version "2.27.0") 
-- git Version: v0.2.1-c96ff018
-- Version: 0.2.1
-- Performing Test HAVE_CXX_FLAG_STD_CXX11
-- Performing Test HAVE_CXX_FLAG_STD_CXX11 - Success
-- Performing Test HAVE_CXX_FLAG_WALL
-- Performing Test HAVE_CXX_FLAG_WALL - Success
-- Performing Test HAVE_CXX_FLAG_WEXTRA
-- Performing Test HAVE_CXX_FLAG_WEXTRA - Success
-- Performing Test HAVE_CXX_FLAG_WSHADOW
-- Performing Test HAVE_CXX_FLAG_WSHADOW - Success
-- Performing Test HAVE_CXX_FLAG_WERROR
-- Performing Test HAVE_CXX_FLAG_WERROR - Success
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32 - Success
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED - Success
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WD654
-- Performing Test HAVE_CXX_FLAG_WD654 - Failed
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY - Success
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES -- failed to compile
-- Performing Test HAVE_CXX_FLAG_COVERAGE
-- Performing Test HAVE_CXX_FLAG_COVERAGE - Success
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Performing Test USE_BOOST_JSON
-- Performing Test USE_BOOST_JSON - Failed
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Found Python3: /usr/bin/python3.8 (found version "3.8.6") found components: Interpreter 
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 10
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
Scanning dependencies of target benchmark
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_api_internal.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_name.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_name.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_register.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_register.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_runner.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_runner.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/colorprint.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/colorprint.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/commandlineflags.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/commandlineflags.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/complexity.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/complexity.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/console_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/console_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/counter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/counter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/csv_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/csv_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/json_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/json_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/sleep.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sleep.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/statistics.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/statistics.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/string_util.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/string_util.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/sysinfo.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sysinfo.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/timers.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/timers.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -P CMakeFiles/benchmark.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/benchmark.dir/link.txt --verbose=1
/usr/bin/ar qc libbenchmark.a  CMakeFiles/benchmark.dir/benchmark.cc.o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o CMakeFiles/benchmark.dir/benchmark_name.cc.o CMakeFiles/benchmark.dir/benchmark_register.cc.o CMakeFiles/benchmark.dir/benchmark_runner.cc.o CMakeFiles/benchmark.dir/colorprint.cc.o CMakeFiles/benchmark.dir/commandlineflags.cc.o CMakeFiles/benchmark.dir/complexity.cc.o CMakeFiles/benchmark.dir/console_reporter.cc.o CMakeFiles/benchmark.dir/counter.cc.o CMakeFiles/benchmark.dir/csv_reporter.cc.o CMakeFiles/benchmark.dir/json_reporter.cc.o CMakeFiles/benchmark.dir/reporter.cc.o CMakeFiles/benchmark.dir/sleep.cc.o CMakeFiles/benchmark.dir/statistics.cc.o CMakeFiles/benchmark.dir/string_util.cc.o CMakeFiles/benchmark.dir/sysinfo.cc.o CMakeFiles/benchmark.dir/timers.cc.o
/usr/bin/ranlib libbenchmark.a
[ 80%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
Scanning dependencies of target generated-data
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated && /usr/bin/ruby genfeaturejson.rb /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-miss.json ...
[ 80%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/clang++-10  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/include  -march=native -O3 -DNDEBUG -fPIC   -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -pthread -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/clang++-10 -fPIC -march=native -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.7 -o ../libsimdjson.so.7.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.7.0.0 ../libsimdjson.so.7 ../libsimdjson.so
[ 80%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
Scanning dependencies of target yyjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/clang-10  -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src  -O3 -DNDEBUG   -o CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o   -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src/yyjson.c
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -P CMakeFiles/yyjson.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -E cmake_link_script CMakeFiles/yyjson.dir/link.txt --verbose=1
/usr/bin/ar qc libyyjson.a  CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o
/usr/bin/ranlib libyyjson.a
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/clang++-10  -DRAPIDJSON_HAS_STDSTRING -DSAJSON_UNSORTED_OBJECT_KEYS -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_COMPETITION_NLOHMANN_JSON -DSIMDJSON_COMPETITION_RAPIDJSON -DSIMDJSON_COMPETITION_SAJSON -DSIMDJSON_COMPETITION_YYJSON -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/rapidjson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/sajson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/json  -march=native -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/clang++-10  -march=native -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.7.0.0 ../_deps/google_benchmarks/src/libbenchmark.a ../dependencies/libyyjson.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.8.0/skylake-x-clang10-native.json --benchmark_out_format=json
2021-01-25 00:50:29
Running benchmark/bench_ondemand
Run on (4 X 3200 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 1024 KiB (x4)
  L3 Unified 8448 KiB (x1)
Load Average: 1.01, 0.54, 0.24
***WARNING*** CPU scaling is enabled, the benchmark real time measurements may be noisy and will incur extra overhead.
simdjson::dom implementation:      haswell
simdjson::ondemand implementation: haswell

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                  322924 ns       394394 ns         2165            3.57k            1.9702G               2        35.391k    1023.81k               1.6212           3.1198k       3.19408G           2.9944M                    4.74161                     2.92476            311.98k     3.6722k   631.515k       1.82131G/s     1.3164   35.5123k   1030.34k         1.63154   3.09671k/s 3.19067G/s      2.9944M               4.74161                2.90621        100       309.671k/s [BEST: throughput=  1.97 GB/s doc_throughput=  3119 docs/s instructions=     2994397 cycles=     1023809 branch_miss=    3570 cache_miss=       2 cache_ref=     35391 items=       100 avg_time=    322923 ns]
partial_tweets<simdjson_ondemand>/manual_time             208808 ns       266274 ns         3355           1.791k           3.04744G               0        12.477k    661.844k              1.04803           4.8256k        3.1938G          1.92824M                    3.05335                     2.91343            482.56k    1.91537k   631.515k       2.81668G/s   0.318927   12.4079k   666.339k         1.05514   4.78909k/s 3.19116G/s     1.92824M               3.05335                2.89378        100       478.909k/s [BEST: throughput=  3.05 GB/s doc_throughput=  4825 docs/s instructions=     1928239 cycles=      661844 branch_miss=    1791 cache_miss=       0 cache_ref=     12477 items=       100 avg_time=    208807 ns]
partial_tweets<yyjson>/manual_time                        791531 ns       871651 ns          882          10.127k           1.42975G             235        28.187k    1.41109M              2.23445          2.26401k       3.19471G          2.90304M                    4.59695                     2.05731           226.401k    7.73177k   631.515k       760.879M/s    616.849   25.8823k   1.56177M         2.47305   1.26337k/s  1.9731G/s     2.90353M               4.59772                1.85913        100       126.337k/s [BEST: throughput=  1.43 GB/s doc_throughput=  2264 docs/s instructions=     2903042 cycles=     1411088 branch_miss=   10127 cache_miss=     235 cache_ref=     28187 items=       100 avg_time=    791531 ns]
partial_tweets<yyjson_insitu>/manual_time                 512847 ns       579040 ns         1378           7.171k           1.76924G          2.287k        14.316k    1.13115M              1.79116          2.80158k         3.169G          2.90294M                    4.59678                     2.56637           280.158k    7.50557k   631.515k       1.14682G/s    120.631   12.1426k   1.23931M         1.96244    1.9499k/s 2.41653G/s      2.9032M                4.5972                2.34259        100        194.99k/s [BEST: throughput=  1.77 GB/s doc_throughput=  2801 docs/s instructions=     2902938 cycles=     1131145 branch_miss=    7171 cache_miss=    2287 cache_ref=     14316 items=       100 avg_time=    512847 ns]
partial_tweets<sajson>/manual_time                        691605 ns       756473 ns         1013          10.682k           921.198M               3        13.661k    2.18891M              3.46612          1.45871k       3.19298G          5.87163M                    9.29768                     2.68245           145.871k    11.2343k   631.515k       870.814M/s     5.6002   13.6369k   2.20632M         3.49369   1.44591k/s 3.19014G/s     5.87163M               9.29768                2.66128        100       144.591k/s [BEST: throughput=  0.92 GB/s doc_throughput=  1458 docs/s instructions=     5871627 cycles=     2188908 branch_miss=   10682 cache_miss=       3 cache_ref=     13661 items=       100 avg_time=    691605 ns]
partial_tweets<rapidjson>/manual_time                    2821021 ns      2889737 ns          248          30.065k           246.965M           7.31k        22.606k    8.16416M              12.9279           391.067       3.19273G           21.896M                    34.6722                     2.68197           39.1067k    30.8783k   631.515k        213.49M/s    489.222   15.8142k   8.32709M         13.1859    354.482/s  2.9518G/s     21.8967M               34.6733                2.62958        100       35.4482k/s [BEST: throughput=  0.25 GB/s doc_throughput=   391 docs/s instructions=    21895996 cycles=     8164156 branch_miss=   30065 cache_miss=    7310 cache_ref=     22606 items=       100 avg_time=   2821021 ns]
partial_tweets<rapidjson_insitu>/manual_time             1796025 ns      1860018 ns          391          25.295k           383.736M          5.299k        14.303k    5.25445M              8.32038           607.643       3.19283G          13.3232M                    21.0972                      2.5356           60.7643k    26.0062k   631.515k       335.329M/s    228.803   10.3588k   5.33087M          8.4414    556.785/s 2.96815G/s     13.3238M               21.0981                2.49936        100       55.6785k/s [BEST: throughput=  0.38 GB/s doc_throughput=   607 docs/s instructions=    13323167 cycles=     5254447 branch_miss=   25295 cache_miss=    5299 cache_ref=     14303 items=       100 avg_time=   1796024 ns]
partial_tweets<nlohmann_json>/manual_time                9430426 ns      9518806 ns           75         152.964k           69.7736M               5          98.3k    28.8686M              45.7132           110.486       3.18957G          78.1904M                    123.814                      2.7085           11.0486k    163.906k   631.515k       63.8635M/s      50.08   136.467k   30.0753M          47.624     106.04/s 3.18918G/s     78.6629M               124.562                2.61553        100        10.604k/s [BEST: throughput=  0.07 GB/s doc_throughput=   110 docs/s instructions=    78190432 cycles=    28868568 branch_miss=  152964 cache_miss=       5 cache_ref=     98300 items=       100 avg_time=   9430426 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                 100989735 ns    107095348 ns            7         948.076k           456.044M        6.79234M       6.89708M    321.583M              6.99111           9.91426       3.18825G          1025.66M                    22.2976                     3.18942           9.91426M    948.304k   45.9988M       434.379M/s   6.81734M   6.89704M   321.969M         6.99952      9.902/s 3.18814G/s     1025.66M               22.2976                3.18559      1000k         9.902M/s [BEST: throughput=  0.46 GB/s doc_throughput=     9 docs/s instructions=  1025663210 cycles=   321582669 branch_miss=  948076 cache_miss= 6792342 cache_ref=   6897081 items=   1000000 avg_time= 100989735 ns]
large_random<simdjson_ondemand>/manual_time             78029944 ns     84096505 ns            9         1016.73k           590.023M        3.49819M       3.57288M    248.609M              5.40469           12.8269       3.18889G          669.118M                    14.5464                     2.69145           12.8269M    1018.04k   45.9988M       562.193M/s   3.51936M   3.57304M   248.782M         5.40844    12.8156/s 3.18828G/s     669.118M               14.5464                2.68958      1000k       12.8156M/s [BEST: throughput=  0.59 GB/s doc_throughput=    12 docs/s instructions=   669118090 cycles=   248609007 branch_miss= 1016734 cache_miss= 3498186 cache_ref=   3572877 items=   1000000 avg_time=  78029943 ns]
large_random<simdjson_ondemand_unordered>/manual_time   73065820 ns     79139399 ns           10         948.916k           629.937M        3.51582M       3.57274M    232.823M              5.06151           13.6946       3.18843G          666.118M                    14.4812                     2.86105           13.6946M    950.005k   45.9988M       600.388M/s   3.52724M   3.57274M   232.964M         5.06457    13.6863/s 3.18841G/s     666.118M               14.4812                2.85932      1000k       13.6863M/s [BEST: throughput=  0.63 GB/s doc_throughput=    13 docs/s instructions=   666118333 cycles=   232823261 branch_miss=  948916 cache_miss= 3515822 cache_ref=   3572742 items=   1000000 avg_time=  73065820 ns]
large_random<yyjson>/manual_time                       151185880 ns    157306573 ns            5         669.611k           304.419M        4.21183M       5.46191M    342.975M              7.45618           6.61797        2.2698G           866.68M                    18.8414                     2.52695           6.61797M    667.785k   45.9988M       290.158M/s   4.21079M   5.41136M   343.196M         7.46099    6.61437/s 2.27003G/s      866.68M               18.8414                2.52532      1000k       6.61437M/s [BEST: throughput=  0.30 GB/s doc_throughput=     6 docs/s instructions=   866679881 cycles=   342975309 branch_miss=  669611 cache_miss= 4211831 cache_ref=   5461908 items=   1000000 avg_time= 151185880 ns]
large_random<yyjson_insitu>/manual_time                125116789 ns    131237239 ns            6         665.327k           367.915M        3.49423M       4.71757M    300.208M              6.52644           7.99838       2.40118G          860.559M                    18.7083                     2.86654           7.99838M    667.539k   45.9988M       350.615M/s   3.49368M    4.6817M   300.456M         6.53183    7.99253/s  2.4014G/s     860.559M               18.7083                2.86418      1000k       7.99253M/s [BEST: throughput=  0.37 GB/s doc_throughput=     7 docs/s instructions=   860559342 cycles=   300208204 branch_miss=  665327 cache_miss= 3494233 cache_ref=   4717572 items=   1000000 avg_time= 125116788 ns]
large_random<sajson>/manual_time                       109989105 ns    116145882 ns            6         577.277k           418.613M        5.44886M       5.57692M    350.391M               7.6174           9.10053       3.18874G          1.10099G                    23.9353                     3.14219           9.10053M    577.417k   45.9988M       398.838M/s   5.47459M    5.5769M   350.712M         7.62438    9.09181/s 3.18861G/s     1.10099G               23.9353                3.13931      1000k       9.09181M/s [BEST: throughput=  0.42 GB/s doc_throughput=     9 docs/s instructions=  1100994444 cycles=   350391181 branch_miss=  577277 cache_miss= 5448864 cache_ref=   5576919 items=   1000000 avg_time= 109989104 ns]
large_random<rapidjson>/manual_time                    252399366 ns    258519491 ns            3         591.442k           188.364M        4.33989M       5.19087M    710.702M              15.4505           4.09497       2.91031G          1.99713G                     43.417                     2.81008           4.09497M    591.213k   45.9988M       173.803M/s   4.06794M    5.1175M   715.091M         15.5459    3.96198/s 2.83317G/s     1.99714G               43.4172                2.79284      1000k       3.96198M/s [BEST: throughput=  0.19 GB/s doc_throughput=     4 docs/s instructions=  1997127389 cycles=   710701849 branch_miss=  591442 cache_miss= 4339888 cache_ref=   5190874 items=   1000000 avg_time= 252399365 ns]
large_random<rapidjson_lossless>/manual_time           287934674 ns    294045295 ns            3         600.959k           164.586M         4.3405M       5.19371M     823.36M              17.8996           3.57806       2.94603G           2.4771G                    53.8513                     3.00852           3.57806M    636.658k   45.9988M       152.353M/s   4.07453M   5.11598M   828.573M         18.0129    3.47301/s 2.87764G/s      2.4771G               53.8515                 2.9896      1000k       3.47301M/s [BEST: throughput=  0.16 GB/s doc_throughput=     3 docs/s instructions=  2477095411 cycles=   823360240 branch_miss=  600959 cache_miss= 4340502 cache_ref=   5193708 items=   1000000 avg_time= 287934674 ns]
large_random<rapidjson_insitu>/manual_time             278305305 ns    284436839 ns            3         589.666k           170.238M        5.03177M       5.91437M    793.579M              17.2522           3.70093       2.93698G          1.72213G                    37.4385                     2.17008           3.70093M    588.111k   45.9988M       157.625M/s   4.77394M   5.83974M   797.771M         17.3433    3.59318/s 2.86653G/s     1.72214G               37.4387                2.15868      1000k       3.59318M/s [BEST: throughput=  0.17 GB/s doc_throughput=     3 docs/s instructions=  1722127218 cycles=   793579384 branch_miss=  589666 cache_miss= 5031767 cache_ref=   5914365 items=   1000000 avg_time= 278305305 ns]
large_random<nlohmann_json>/manual_time               1438521126 ns   1444598253 ns            1         4.10988M           31.9764M        30.2797M       31.0707M    4.57306G               99.417          0.695158         3.179G          12.3636G                     268.78                     2.70356           695.158k    4.10988M   45.9988M       30.4951M/s   30.2797M   31.0707M   4.57306G          99.417   0.695158/s   3.179G/s     12.3636G                268.78                2.70356      1000k       695.158k/s [BEST: throughput=  0.03 GB/s doc_throughput=     0 docs/s instructions= 12363552015 cycles=  4573059395 branch_miss= 4109882 cache_miss=30279718 cache_ref=  31070727 items=   1000000 avg_time=1438521126 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                       106634801 ns    125429242 ns            7         1023.61k           1.28845G        10.2071M       10.3178M    339.793M              2.47473           9.38385       3.18857G          983.199M                    7.16069                     2.89352           4.91984M    1023.94k   137.305M       1.19919G/s   10.2388M    10.318M   339.979M         2.47608     9.3778/s 3.18825G/s     983.199M               7.16069                2.89194   524.288k       4.91667M/s [BEST: throughput=  1.29 GB/s doc_throughput=     9 docs/s instructions=   983198681 cycles=   339793422 branch_miss= 1023605 cache_miss=10207102 cache_ref=  10317793 items=    524288 avg_time= 106634800 ns]
kostya<simdjson_ondemand>/manual_time                   71892190 ns     90687930 ns           10         474.045k           1.91171G        6.42177M       6.47135M    229.003M              1.66784           13.9231       3.18842G          655.755M                     4.7759                     2.86353            7.2997M    474.823k   137.305M       1.77871G/s   6.43605M   6.47135M   229.209M         1.66934    13.9097/s 3.18824G/s     655.755M                4.7759                2.86094   524.288k        7.2927M/s [BEST: throughput=  1.91 GB/s doc_throughput=    13 docs/s instructions=   655755419 cycles=   229002643 branch_miss=  474045 cache_miss= 6421774 cache_ref=   6471345 items=    524288 avg_time=  71892189 ns]
kostya<yyjson>/manual_time                             229266866 ns    248189218 ns            3         418.929k           599.351M        8.49596M       9.91588M     498.82M              3.63293           4.36511        2.1774G          978.903M                    7.12941                     1.96244           2.28857M    419.106k   137.305M       571.143M/s   8.49592M   9.91872M   499.023M         3.63441    4.36173/s  2.1766G/s     978.903M                7.1294                1.96164   524.288k        2.2868M/s [BEST: throughput=  0.60 GB/s doc_throughput=     4 docs/s instructions=   978902918 cycles=   498819635 branch_miss=  418929 cache_miss= 8495962 cache_ref=   9915876 items=    524288 avg_time= 229266865 ns]
kostya<yyjson_insitu>/manual_time                      151253678 ns    170188501 ns            5         412.345k           908.026M        6.35971M       7.77942M    370.838M              2.70084           6.61321       2.45243G          960.633M                    6.99635                     2.59044           3.46722M    412.918k   137.305M       865.726M/s   6.36023M   7.78464M   370.995M         2.70197    6.61141/s  2.4528G/s     960.633M               6.99635                2.58935   524.288k       3.46628M/s [BEST: throughput=  0.91 GB/s doc_throughput=     6 docs/s instructions=   960633232 cycles=   370838207 branch_miss=  412345 cache_miss= 6359713 cache_ref=   7779415 items=    524288 avg_time= 151253678 ns]
kostya<sajson>/manual_time                             172935344 ns    191774361 ns            4         357.967k           795.085M        8.46132M       8.54028M    550.691M              4.01071           5.79065       3.18886G          1.52817G                    11.1298                     2.77501           3.03597M    358.682k   137.305M       757.186M/s   8.48798M    8.5406M   551.408M         4.01594    5.78251/s 3.18852G/s     1.52817G               11.1298                 2.7714   524.288k        3.0317M/s [BEST: throughput=  0.80 GB/s doc_throughput=     5 docs/s instructions=  1528172905 cycles=   550690700 branch_miss=  357967 cache_miss= 8461321 cache_ref=   8540284 items=    524288 avg_time= 172935343 ns]
kostya<rapidjson>/manual_time                          328095202 ns    346999899 ns            2         943.916k           422.861M        5.19384M       6.43585M    938.729M              6.83682           3.07972       2.89102G           2.7303G                    19.8849                     2.90851           1.61466M    944.106k   137.305M       399.104M/s   5.07118M   6.39848M    941.02M          6.8535     3.0479/s 2.86813G/s      2.7303G               19.8849                2.90143   524.288k       1.59798M/s [BEST: throughput=  0.42 GB/s doc_throughput=     3 docs/s instructions=  2730299326 cycles=   938729429 branch_miss=  943916 cache_miss= 5193842 cache_ref=   6435847 items=    524288 avg_time= 328095201 ns]
kostya<rapidjson_lossless>/manual_time                 346700342 ns    365565670 ns            2         1.14508M            400.03M        5.19818M       6.44091M    997.715M              7.26641           2.91344       2.90679G          3.00816G                    21.9086                     3.01505           1.52748M    1.15251M   137.305M       377.687M/s   5.07362M    6.4043M   1000.24M         7.28481    2.88434/s 2.88503G/s     3.00816G               21.9086                3.00744   524.288k       1.51222M/s [BEST: throughput=  0.40 GB/s doc_throughput=     2 docs/s instructions=  3008163103 cycles=   997715054 branch_miss= 1145083 cache_miss= 5198184 cache_ref=   6440908 items=    524288 avg_time= 346700342 ns]
kostya<rapidjson_insitu>/manual_time                   312017195 ns    330910286 ns            2         522.214k           444.541M        7.32842M       8.59456M    888.495M              6.47096           3.23762       2.87661G          2.21202G                    16.1102                     2.48962           1.69744M    505.037k   137.305M        419.67M/s    7.2062M   8.55552M   889.973M         6.48172    3.20495/s 2.85232G/s     2.21202G               16.1102                2.48549   524.288k       1.68032M/s [BEST: throughput=  0.44 GB/s doc_throughput=     3 docs/s instructions=  2212015332 cycles=   888495118 branch_miss=  522214 cache_miss= 7328424 cache_ref=   8594561 items=    524288 avg_time= 312017195 ns]
kostya<nlohmann_json>/manual_time                     2155519168 ns   2174344157 ns            1         15.1172M           63.6993M         46.131M       46.7167M     6.8747G              50.0688          0.463925       3.18935G          17.2658G                    125.748                      2.5115            243.23k    15.1172M   137.305M       60.7484M/s    46.131M   46.7167M    6.8747G         50.0688   0.463925/s 3.18935G/s     17.2658G               125.748                 2.5115   524.288k        243.23k/s [BEST: throughput=  0.06 GB/s doc_throughput=     0 docs/s instructions= 17265774372 cycles=  6874695118 branch_miss=15117248 cache_miss=46130979 cache_ref=  46716696 items=    524288 avg_time=2155519168 ns]
distinct_user_id<simdjson_dom>/manual_time                315478 ns       393762 ns         2217           3.519k           2.01986G               0         33.65k     998.56k              1.58121          3.19843k       3.19383G          2.92867M                    4.63753                      2.9329            367.82k    3.71324k   631.515k        1.8643G/s   0.522327   33.7016k   1006.58k         1.59391    3.1698k/s 3.19065G/s     2.92867M               4.63753                2.90953        115       364.527k/s [BEST: throughput=  2.02 GB/s doc_throughput=  3198 docs/s instructions=     2928672 cycles=      998560 branch_miss=    3519 cache_miss=       0 cache_ref=     33650 items=       115 avg_time=    315477 ns]
distinct_user_id<simdjson_ondemand>/manual_time           178120 ns       241063 ns         3929           1.628k           3.57572G               1        10.698k    564.155k             0.893336          5.66213k       3.19432G          1.87658M                    2.97155                     3.32635           651.145k    1.73128k   631.515k       3.30195G/s   0.249682   10.8533k   568.558k        0.900307   5.61419k/s 3.19199G/s     1.87658M               2.97155                3.30059        115       645.632k/s [BEST: throughput=  3.58 GB/s doc_throughput=  5662 docs/s instructions=     1876578 cycles=      564155 branch_miss=    1628 cache_miss=       1 cache_ref=     10698 items=       115 avg_time=    178120 ns]
distinct_user_id<yyjson>/manual_time                      686728 ns       776028 ns         1000           6.629k           1.56031G          7.199k        27.375k    1.29243M              2.04655          2.47073k       3.19325G          2.86105M                    4.53045                      2.2137           284.134k     7.6015k   631.515k       876.999M/s   2.27087k   26.1763k   1.48445M         2.35062   1.45618k/s 2.16163G/s     2.86154M               4.53123                1.92767        115       167.461k/s [BEST: throughput=  1.56 GB/s doc_throughput=  2470 docs/s instructions=     2861050 cycles=     1292428 branch_miss=    6629 cache_miss=    7199 cache_ref=     27375 items=       115 avg_time=    686727 ns]
distinct_user_id<yyjson_insitu>/manual_time               508386 ns       583862 ns         1388           7.143k           1.80501G           1.54k        14.028k    1.11165M              1.76029          2.85823k       3.17736G          2.86083M                     4.5301                     2.57349           328.696k    7.57899k   631.515k       1.15689G/s    106.363   12.0156k   1.22468M         1.93927   1.96701k/s 2.40896G/s     2.86109M               4.53052                2.33619        115       226.206k/s [BEST: throughput=  1.81 GB/s doc_throughput=  2858 docs/s instructions=     2860827 cycles=     1111652 branch_miss=    7143 cache_miss=    1540 cache_ref=     14028 items=       115 avg_time=    508385 ns]
distinct_user_id<sajson>/manual_time                      688138 ns       760669 ns         1017          10.779k           925.138M               2        13.415k    2.17963M              3.45143          1.46495k       3.19305G          5.81019M                     9.2004                     2.66568           168.469k    11.2446k   631.515k       875.202M/s      3.588   13.5087k   2.19521M         3.47611    1.4532k/s 3.19008G/s     5.81019M                9.2004                2.64675        115       167.118k/s [BEST: throughput=  0.93 GB/s doc_throughput=  1464 docs/s instructions=     5810189 cycles=     2179628 branch_miss=   10779 cache_miss=       2 cache_ref=     13415 items=       115 avg_time=    688137 ns]
distinct_user_id<rapidjson>/manual_time                  2806075 ns      2882241 ns          250          29.675k           248.355M          7.072k        22.824k    8.11833M              12.8553           393.269       3.19269G          21.8259M                    34.5611                     2.68846           45.2259k    30.6612k   631.515k       214.627M/s    929.396   16.4513k   8.30103M         13.1446     356.37/s 2.95824G/s     21.8266M               34.5622                2.62938        115       40.9825k/s [BEST: throughput=  0.25 GB/s doc_throughput=   393 docs/s instructions=    21825853 cycles=     8118334 branch_miss=   29675 cache_miss=    7072 cache_ref=     22824 items=       115 avg_time=   2806074 ns]
distinct_user_id<rapidjson_insitu>/manual_time           1764241 ns      1836640 ns          424          25.388k             385.3M          4.518k        14.836k    5.23292M               8.2863            610.12       3.19271G          13.2579M                    20.9938                     2.53355           70.1637k    28.3237k   631.515k        341.37M/s   2.40392k   12.4402k   5.35398M           8.478    566.816/s 3.03472G/s     13.2581M               20.9942                2.47631        115       65.1838k/s [BEST: throughput=  0.39 GB/s doc_throughput=   610 docs/s instructions=    13257893 cycles=     5232924 branch_miss=   25388 cache_miss=    4518 cache_ref=     14836 items=       115 avg_time=   1764240 ns]
distinct_user_id<nlohmann_json>/manual_time              9164191 ns      9255529 ns           82           129.6k           75.3482M           1.43k        99.475k    26.7214M              42.3131           119.313       3.18821G          73.5829M                    116.518                     2.75371            13.721k    156.241k   631.515k       65.7188M/s    57.1341   105.884k   29.2285M         46.2831     109.12/s 3.18942G/s     72.1915M               114.315                 2.4699        115       12.5488k/s [BEST: throughput=  0.08 GB/s doc_throughput=   119 docs/s instructions=    73582874 cycles=    26721355 branch_miss=  129600 cache_miss=    1430 cache_ref=     99475 items=       115 avg_time=   9164191 ns]
find_tweet<simdjson_dom>/manual_time                      301149 ns       376831 ns         2322           3.404k           2.11354G              35        29.969k    954.283k               1.5111          3.34678k       3.19377G           2.8435M                    4.50266                     2.97972           3.34678k    3.51513k   631.515k         1.953G/s    37.0512    30.043k   960.918k         1.52161   3.32061k/s 3.19084G/s      2.8435M               4.50266                2.95915          1       3.32061k/s [BEST: throughput=  2.11 GB/s doc_throughput=  3346 docs/s instructions=     2843498 cycles=      954283 branch_miss=    3404 cache_miss=      35 cache_ref=     29969 items=         1 avg_time=    301149 ns]
find_tweet<simdjson_ondemand>/manual_time                 130988 ns       197042 ns         5341              881           4.85135G               0         7.815k    415.988k             0.658714          7.68208k       3.19566G           1.3681M                    2.16638                      3.2888           7.68208k     909.551   631.515k       4.49006G/s    0.12713   7.83752k   418.146k        0.662131   7.63429k/s 3.19224G/s      1.3681M               2.16638                3.27183          1       7.63429k/s [BEST: throughput=  4.85 GB/s doc_throughput=  7682 docs/s instructions=     1368102 cycles=      415988 branch_miss=     881 cache_miss=       0 cache_ref=      7815 items=         1 avg_time=    130988 ns]
find_tweet<yyjson>/manual_time                            775108 ns       862609 ns         1066           9.594k           1.48771G             221        27.368k    1.35583M              2.14695          2.35578k       3.19405G           2.8006M                    4.43473                      2.0656           2.35578k     7.5222k   631.515k       777.001M/s     457.75   24.8073k   1.51276M         2.39545   1.29014k/s 1.95168G/s     2.80108M               4.43548                1.85163          1       1.29014k/s [BEST: throughput=  1.49 GB/s doc_throughput=  2355 docs/s instructions=     2800598 cycles=     1355831 branch_miss=    9594 cache_miss=     221 cache_ref=     27368 items=         1 avg_time=    775107 ns]
find_tweet<yyjson_insitu>/manual_time                     495824 ns       566911 ns         1413           7.366k           1.84503G             128         14.12k    1093.18k              1.73104          2.92159k       3.19382G          2.80028M                    4.43422                     2.56159           2.92159k    7.30255k   631.515k        1.1862G/s    8.45577   10.5501k   1.18548M         1.87721   2.01685k/s 2.39094G/s     2.80054M               4.43464                2.36236          1       2.01685k/s [BEST: throughput=  1.85 GB/s doc_throughput=  2921 docs/s instructions=     2800276 cycles=     1093179 branch_miss=    7366 cache_miss=     128 cache_ref=     14120 items=         1 avg_time=    495823 ns]
find_tweet<sajson>/manual_time                            674842 ns       745752 ns         1037          10.563k           943.117M               0        13.133k    2.13819M              3.38581          1.49342k       3.19322G          5.71507M                    9.04978                     2.67285           1.49342k    11.0301k   631.515k       892.446M/s    3.34426   13.1565k   2.15287M         3.40906   1.48183k/s 3.19018G/s     5.71507M               9.04978                2.65463          1       1.48183k/s [BEST: throughput=  0.94 GB/s doc_throughput=  1493 docs/s instructions=     5715069 cycles=     2138190 branch_miss=   10563 cache_miss=       0 cache_ref=     13133 items=         1 avg_time=    674841 ns]
find_tweet<rapidjson>/manual_time                        2786366 ns      2859357 ns          252           29.75k           249.281M         11.901k         21.09k    8.08816M              12.8075           394.735       3.19268G          21.7422M                    34.4286                     2.68815            394.735    30.4589k   631.515k       216.145M/s    655.833    13.655k   8.23891M         13.0463     358.89/s 2.95686G/s     21.7428M               34.4296                2.63904          1         358.89/s [BEST: throughput=  0.25 GB/s doc_throughput=   394 docs/s instructions=    21742184 cycles=     8088156 branch_miss=   29750 cache_miss=   11901 cache_ref=     21090 items=         1 avg_time=   2786365 ns]
find_tweet<rapidjson_insitu>/manual_time                 1726948 ns      1795623 ns          395          25.227k           387.716M          6.888k        13.511k    5.20046M               8.2349           613.946        3.1928G          13.1793M                    20.8693                     2.53425            613.946    25.7699k   631.515k       348.742M/s   2.45413k   10.1544k    5.2498M         8.31302    579.056/s 3.03993G/s     13.1795M               20.8696                2.51047          1        579.056/s [BEST: throughput=  0.39 GB/s doc_throughput=   613 docs/s instructions=    13179253 cycles=     5200464 branch_miss=   25227 cache_miss=    6888 cache_ref=     13511 items=         1 avg_time=   1726947 ns]
find_tweet<nlohmann_json>/manual_time                    7681761 ns      7770478 ns           96         101.606k           89.2794M             885        76.635k    22.5627M              35.7279           141.373       3.18976G          63.6323M                    100.761                     2.82025            141.373    117.099k   631.515k       78.4012M/s    45.1042   82.3308k   24.4999M         38.7954    130.178/s 3.18936G/s     62.2307M               98.5419                2.54004          1        130.178/s [BEST: throughput=  0.09 GB/s doc_throughput=   141 docs/s instructions=    63632306 cycles=    22562685 branch_miss=  101606 cache_miss=     885 cache_ref=     76635 items=         1 avg_time=   7681761 ns]
top_tweet<simdjson_dom>/manual_time                       309244 ns       390024 ns         2263           3.495k           2.06033G              46        32.272k    979.109k              1.55041          3.26253k       3.19437G          2.88039M                    4.56107                     2.94184           3.26253k    3.64923k   631.515k       1.90188G/s    43.5572   32.3425k   986.755k         1.56252   3.23369k/s 3.19086G/s     2.88039M               4.56107                2.91905          1       3.23369k/s [BEST: throughput=  2.06 GB/s doc_throughput=  3262 docs/s instructions=     2880386 cycles=      979109 branch_miss=    3495 cache_miss=      46 cache_ref=     32272 items=         1 avg_time=    309244 ns]
top_tweet<simdjson_ondemand>/manual_time                  191428 ns       258494 ns         3655            1.57k           3.34161G               4        10.119k    603.899k              0.95627          5.29143k       3.19549G          1.89218M                    2.99625                     3.13327           5.29143k    1.75109k   631.515k       3.07241G/s    5.16416   10.0933k    611.06k        0.967609    5.2239k/s 3.19212G/s     1.89218M               2.99625                3.09655          1        5.2239k/s [BEST: throughput=  3.34 GB/s doc_throughput=  5291 docs/s instructions=     1892177 cycles=      603899 branch_miss=    1570 cache_miss=       4 cache_ref=     10119 items=         1 avg_time=    191427 ns]
top_tweet<simdjson_ondemand_forward_only>/manual_time     188762 ns       256987 ns         3697           1.978k           3.37924G               0        10.837k    597.133k             0.945556            5.351k       3.19526G          1.90297M                    3.01334                     3.18684             5.351k    2.06874k   631.515k        3.1158G/s  0.0135245   10.7542k   602.496k        0.954049   5.29768k/s 3.19183G/s     1.90297M               3.01334                3.15848          1       5.29768k/s [BEST: throughput=  3.38 GB/s doc_throughput=  5350 docs/s instructions=     1902970 cycles=      597133 branch_miss=    1978 cache_miss=       0 cache_ref=     10837 items=         1 avg_time=    188761 ns]
top_tweet<yyjson>/manual_time                             781233 ns       871832 ns          999           9.788k           1.46567G             209        27.467k    1.37637M              2.17947          2.32087k       3.19438G          2.82791M                    4.47797                     2.05461           2.32087k    7.68253k   631.515k        770.91M/s    457.027   25.3912k   1.53232M         2.42642   1.28003k/s 1.96142G/s     2.82835M               4.47867                1.84579          1       1.28003k/s [BEST: throughput=  1.47 GB/s doc_throughput=  2320 docs/s instructions=     2827908 cycles=     1376370 branch_miss=    9788 cache_miss=     209 cache_ref=     27467 items=         1 avg_time=    781232 ns]
top_tweet<yyjson_insitu>/manual_time                      502923 ns       578541 ns         1000           7.643k           1.80907G             110        14.659k    1.11504M              1.76566          2.86465k        3.1942G          2.82755M                     4.4774                     2.53583           2.86465k    7.43796k   631.515k       1.16945G/s     78.156   11.5411k    1.2079M         1.91271   1.98838k/s 2.40177G/s     2.82781M               4.47782                2.34109          1       1.98838k/s [BEST: throughput=  1.81 GB/s doc_throughput=  2864 docs/s instructions=     2827547 cycles=     1115040 branch_miss=    7643 cache_miss=     110 cache_ref=     14659 items=         1 avg_time=    502922 ns]
top_tweet<sajson>/manual_time                             678373 ns       753034 ns         1029          10.511k            938.62M               0        13.381k     2.1483M              3.40181           1.4863k       3.19301G          5.74506M                    9.09727                     2.67424            1.4863k    11.0323k   631.515k         887.8M/s    3.17104   13.3509k   2.16409M         3.42683   1.47411k/s 3.19012G/s     5.74506M               9.09727                2.65472          1       1.47411k/s [BEST: throughput=  0.94 GB/s doc_throughput=  1486 docs/s instructions=     5745061 cycles=     2148296 branch_miss=   10511 cache_miss=       0 cache_ref=     13381 items=         1 avg_time=    678373 ns]
top_tweet<rapidjson>/manual_time                         2799135 ns      2876922 ns          251          29.872k           248.234M         12.304k        22.008k    8.12218M              12.8614           393.077       3.19264G          21.8006M                    34.5211                     2.68409            393.077    30.7629k   631.515k       215.159M/s    813.964    15.131k   8.27957M         13.1106    357.253/s  2.9579G/s     21.8012M               34.5221                2.63314          1        357.253/s [BEST: throughput=  0.25 GB/s doc_throughput=   393 docs/s instructions=    21800618 cycles=     8122177 branch_miss=   29872 cache_miss=   12304 cache_ref=     22008 items=         1 avg_time=   2799134 ns]
top_tweet<rapidjson_insitu>/manual_time                  1795828 ns      1869699 ns          412          25.232k           387.155M          1.154k        14.498k     5.2079M              8.24668           613.057       3.19274G          13.2334M                    20.9549                     2.54102            613.057    33.9614k   631.515k       335.366M/s   2.43397k   11.4802k   5.46129M         8.64793    556.846/s  3.0411G/s     13.2336M               20.9553                2.42316          1        556.846/s [BEST: throughput=  0.39 GB/s doc_throughput=   613 docs/s instructions=    13233364 cycles=     5207901 branch_miss=   25232 cache_miss=    1154 cache_ref=     14498 items=         1 avg_time=   1795827 ns]
top_tweet<nlohmann_json>/manual_time                    10434451 ns     10525943 ns           67         190.021k           60.6614M            1046         165.8k    33.2011M              52.5737            96.057       3.18919G          85.5378M                    135.449                     2.57636             96.057    192.671k   631.515k       57.7184M/s     80.806    165.05k   33.2786M         52.6965    95.8364/s  3.1893G/s     85.5107M               135.406                2.56954          1        95.8364/s [BEST: throughput=  0.06 GB/s doc_throughput=    96 docs/s instructions=    85537790 cycles=    33201064 branch_miss=  190021 cache_miss=    1046 cache_ref=    165800 items=         1 avg_time=  10434451 ns]
