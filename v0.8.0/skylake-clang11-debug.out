run_benchmark: v0.8.0 /home/jkeiser/simdjson_benchmark_results/v0.8.0/skylake-clang11-debug.json -DCMAKE_BUILD_TYPE=Debug
git reset --hard v0.8.0
HEAD is now at c96ff018 Version 0.8.
cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The CXX compiler identification is Clang 11.0.0
-- The C compiler identification is Clang 11.0.0
-- Check for working CXX compiler: /usr/bin/clang++-11
-- Check for working CXX compiler: /usr/bin/clang++-11 -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Check for working C compiler: /usr/bin/clang-11
-- Check for working C compiler: /usr/bin/clang-11 -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed
-- Check if compiler accepts -pthread
-- Check if compiler accepts -pthread - yes
-- Found Threads: TRUE  
-- Looking for fork
-- Looking for fork - found
-- Looking for wait
-- Looking for wait - found
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- Found Git: /usr/bin/git (found version "2.27.0") 
-- git Version: v0.2.1-c96ff018
-- Version: 0.2.1
-- Performing Test HAVE_CXX_FLAG_STD_CXX11
-- Performing Test HAVE_CXX_FLAG_STD_CXX11 - Success
-- Performing Test HAVE_CXX_FLAG_WALL
-- Performing Test HAVE_CXX_FLAG_WALL - Success
-- Performing Test HAVE_CXX_FLAG_WEXTRA
-- Performing Test HAVE_CXX_FLAG_WEXTRA - Success
-- Performing Test HAVE_CXX_FLAG_WSHADOW
-- Performing Test HAVE_CXX_FLAG_WSHADOW - Success
-- Performing Test HAVE_CXX_FLAG_WERROR
-- Performing Test HAVE_CXX_FLAG_WERROR - Success
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32 - Success
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED - Success
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WD654
-- Performing Test HAVE_CXX_FLAG_WD654 - Failed
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY - Success
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES -- failed to compile
-- Performing Test HAVE_CXX_FLAG_COVERAGE
-- Performing Test HAVE_CXX_FLAG_COVERAGE - Success
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Performing Test USE_BOOST_JSON
-- Performing Test USE_BOOST_JSON - Failed
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Found Python3: /usr/bin/python3.8 (found version "3.8.6") found components: Interpreter 
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 10
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
Scanning dependencies of target benchmark
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_api_internal.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_name.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_name.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_register.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_register.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_runner.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_runner.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/colorprint.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/colorprint.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/commandlineflags.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/commandlineflags.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/complexity.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/complexity.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/console_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/console_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/counter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/counter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/csv_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/csv_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/json_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/json_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/sleep.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sleep.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/statistics.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/statistics.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/string_util.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/string_util.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/sysinfo.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sysinfo.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/timers.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/timers.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -P CMakeFiles/benchmark.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/benchmark.dir/link.txt --verbose=1
/usr/bin/ar qc libbenchmarkd.a  CMakeFiles/benchmark.dir/benchmark.cc.o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o CMakeFiles/benchmark.dir/benchmark_name.cc.o CMakeFiles/benchmark.dir/benchmark_register.cc.o CMakeFiles/benchmark.dir/benchmark_runner.cc.o CMakeFiles/benchmark.dir/colorprint.cc.o CMakeFiles/benchmark.dir/commandlineflags.cc.o CMakeFiles/benchmark.dir/complexity.cc.o CMakeFiles/benchmark.dir/console_reporter.cc.o CMakeFiles/benchmark.dir/counter.cc.o CMakeFiles/benchmark.dir/csv_reporter.cc.o CMakeFiles/benchmark.dir/json_reporter.cc.o CMakeFiles/benchmark.dir/reporter.cc.o CMakeFiles/benchmark.dir/sleep.cc.o CMakeFiles/benchmark.dir/statistics.cc.o CMakeFiles/benchmark.dir/string_util.cc.o CMakeFiles/benchmark.dir/sysinfo.cc.o CMakeFiles/benchmark.dir/timers.cc.o
/usr/bin/ranlib libbenchmarkd.a
[ 80%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
Scanning dependencies of target generated-data
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated && /usr/bin/ruby genfeaturejson.rb /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-miss.json ...
[ 80%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/clang++-11  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/include  -g -fPIC   -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -pthread -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/clang++-11 -fPIC -g  -shared -Wl,-soname,libsimdjson.so.7 -o ../libsimdjson.so.7.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.7.0.0 ../libsimdjson.so.7 ../libsimdjson.so
[ 80%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
Scanning dependencies of target yyjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/clang-11  -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src  -g   -o CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o   -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src/yyjson.c
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -P CMakeFiles/yyjson.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -E cmake_link_script CMakeFiles/yyjson.dir/link.txt --verbose=1
/usr/bin/ar qc libyyjson.a  CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o
/usr/bin/ranlib libyyjson.a
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/clang++-11  -DRAPIDJSON_HAS_STDSTRING -DSAJSON_UNSORTED_OBJECT_KEYS -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_COMPETITION_NLOHMANN_JSON -DSIMDJSON_COMPETITION_RAPIDJSON -DSIMDJSON_COMPETITION_SAJSON -DSIMDJSON_COMPETITION_YYJSON -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/rapidjson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/sajson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/json  -g   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/clang++-11  -g   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.7.0.0 ../_deps/google_benchmarks/src/libbenchmarkd.a ../dependencies/libyyjson.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.8.0/skylake-clang11-debug.json --benchmark_out_format=json
2021-01-24 20:43:52
Running benchmark/bench_ondemand
Run on (4 X 4000 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 256 KiB (x4)
  L3 Unified 8192 KiB (x1)
Load Average: 1.05, 0.94, 0.63
***WARNING*** Library was built as DEBUG. Timings may be affected.
simdjson::dom implementation:      haswell
simdjson::ondemand implementation: fallback

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
partial_tweets<simdjson_dom>/manual_time                22421687 ns     22451526 ns           31          18.304k           28.1758M               0       6.67399M    82.7028M              130.959           44.6161       3.68988G          78.2262M                    123.871                    0.945872           4.46161k    18.4156k   631.515k       26.8606M/s    151.226   6.67225M   82.7266M         130.997    44.5997/s 3.68958G/s     78.2262M               123.871               0.945599        100       4.45997k/s [BEST: throughput=  0.03 GB/s doc_throughput=    44 docs/s instructions=    78226206 cycles=    82702783 branch_miss=   18304 cache_miss=       0 cache_ref=   6673993 items=       100 avg_time=  22421687 ns]
partial_tweets<simdjson_ondemand>/manual_time           17332332 ns     17362786 ns           40           7.924k           36.4499M               0       6.53429M    63.9259M              101.226           57.7182       3.68969G          63.7559M                    100.957                     0.99734           5.77182k    7.97602k   631.515k       34.7478M/s     32.125   6.54643M   63.9479M         101.261    57.6956/s 3.68951G/s     63.7559M               100.957               0.996997        100       5.76956k/s [BEST: throughput=  0.04 GB/s doc_throughput=    57 docs/s instructions=    63755869 cycles=    63925930 branch_miss=    7924 cache_miss=       0 cache_ref=   6534289 items=       100 avg_time=  17332332 ns]
partial_tweets<yyjson>/manual_time                       2331043 ns      2362427 ns          300          12.774k           308.259M             570        77.599k    7.56312M              11.9762           488.126       3.69175G          10.5728M                     16.742                     1.39794           48.8126k    11.5289k   631.515k       258.365M/s    1075.18   52.5649k    7.7312M         12.2423    428.992/s 3.31663G/s     10.5733M               16.7427                1.36761        100       42.8992k/s [BEST: throughput=  0.31 GB/s doc_throughput=   488 docs/s instructions=    10572810 cycles=     7563122 branch_miss=   12774 cache_miss=     570 cache_ref=     77599 items=       100 avg_time=   2331043 ns]
partial_tweets<yyjson_insitu>/manual_time                2115905 ns      2145869 ns          331          10.969k           316.554M              49        49.056k    7.35388M              11.6448           501.261       3.68621G          10.5724M                    16.7414                     1.43767           50.1261k    11.3353k   631.515k       284.635M/s    177.997    35.465k   7.45195M         11.8001    472.611/s 3.52187G/s     10.5727M               16.7418                1.41878        100       47.2611k/s [BEST: throughput=  0.32 GB/s doc_throughput=   501 docs/s instructions=    10572442 cycles=     7353875 branch_miss=   10969 cache_miss=      49 cache_ref=     49056 items=       100 avg_time=   2115905 ns]
partial_tweets<sajson>/manual_time                       3249316 ns      3278542 ns          215          42.285k           194.584M               0        45.994k    11.9807M              18.9713           308.122       3.69151G          26.9812M                    42.7245                     2.25206           30.8122k    42.3346k   631.515k        185.35M/s    13.2233   46.1026k    11.989M         18.9845    307.757/s 3.68969G/s     26.9812M               42.7245                 2.2505        100       30.7757k/s [BEST: throughput=  0.19 GB/s doc_throughput=   308 docs/s instructions=    26981168 cycles=    11980674 branch_miss=   42285 cache_miss=       0 cache_ref=     45994 items=       100 avg_time=   3249315 ns]
partial_tweets<rapidjson>/manual_time                   12521489 ns     12551870 ns           56          67.584k           51.1865M             121        54.898k    45.5077M              72.0611           81.0535       3.68856G          105.145M                    166.497                     2.31049           8.10535k     67.473k   631.515k       48.0981M/s    405.054   36.3238k   45.6294M         72.2538    79.8627/s 3.64408G/s     105.146M               166.498                2.30435        100       7.98627k/s [BEST: throughput=  0.05 GB/s doc_throughput=    81 docs/s instructions=   105145246 cycles=    45507678 branch_miss=   67584 cache_miss=     121 cache_ref=     54898 items=       100 avg_time=  12521488 ns]
partial_tweets<rapidjson_insitu>/manual_time             9624034 ns      9654078 ns           73          52.652k           66.4375M             131        45.177k    35.0684M              55.5305           105.203       3.68931G          76.8333M                    121.665                     2.19096           10.5203k    52.8076k   631.515k       62.5787M/s    210.329   35.8014k   35.1786M          55.705    103.907/s 3.65528G/s     76.8336M               121.666                 2.1841        100       10.3907k/s [BEST: throughput=  0.07 GB/s doc_throughput=   105 docs/s instructions=    76833312 cycles=    35068363 branch_miss=   52652 cache_miss=     131 cache_ref=     45177 items=       100 avg_time=   9624034 ns]
partial_tweets<nlohmann_json>/manual_time               60257006 ns     60295747 ns           12         427.825k           10.5245M             128       267.797k    221.379M              350.552           16.6656        3.6894G          425.793M                    674.241                     1.92337           1.66656k     436.79k   631.515k       9.99485M/s   1.22983k    403.09k    222.31M         352.026    16.5956/s 3.68936G/s     426.173M               674.843                1.91702        100       1.65956k/s [BEST: throughput=  0.01 GB/s doc_throughput=    16 docs/s instructions=   425792998 cycles=   221378807 branch_miss=  427825 cache_miss=     128 cache_ref=    267797 items=       100 avg_time=  60257006 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                2898307678 ns   2901738449 ns            1         3.97714M           15.8709M        11.2219M       31.5996M    10.6939G              232.483          0.345029       3.68972G          14.5571G                    316.468                     1.36125           345.029k    3.97714M   45.9988M       15.1357M/s   11.2219M   31.5996M   10.6939G         232.483   0.345029/s 3.68972G/s     14.5571G               316.468                1.36125      1000k       345.029k/s [BEST: throughput=  0.02 GB/s doc_throughput=     0 docs/s instructions= 14557149957 cycles= 10693941877 branch_miss= 3977143 cache_miss=11221905 cache_ref=  31599597 items=   1000000 avg_time=2898307678 ns]
large_random<simdjson_ondemand>/manual_time           1671628950 ns   1675074853 ns            1         906.647k           27.5173M        5.66708M       62.5435M    6.16769G              134.084          0.598219       3.68963G          8.50871G                    184.977                     1.37956           598.219k    906.647k   45.9988M       26.2426M/s   5.66708M   62.5435M   6.16769G         134.084   0.598219/s 3.68963G/s     8.50871G               184.977                1.37956      1000k       598.219k/s [BEST: throughput=  0.03 GB/s doc_throughput=     0 docs/s instructions=  8508705967 cycles=  6167687815 branch_miss=  906647 cache_miss= 5667082 cache_ref=  62543548 items=   1000000 avg_time=1671628950 ns]
large_random<simdjson_ondemand_unordered>/manual_time 1689297850 ns   1692719158 ns            1         907.122k           27.2295M        5.67607M       35.9326M    6.23296G              135.503          0.591962       3.68967G          8.57171G                    186.346                     1.37522           591.962k    907.122k   45.9988M       25.9681M/s   5.67607M   35.9326M   6.23296G         135.503   0.591962/s 3.68967G/s     8.57171G               186.346                1.37522      1000k       591.962k/s [BEST: throughput=  0.03 GB/s doc_throughput=     0 docs/s instructions=  8571705970 cycles=  6232955070 branch_miss=  907122 cache_miss= 5676072 cache_ref=  35932630 items=   1000000 avg_time=1689297850 ns]
large_random<yyjson>/manual_time                       363337798 ns    366762539 ns            2         662.419k           126.613M         6.6177M       9.21396M    1.21876G              26.4955           2.75252       3.35466G          2.94182G                    63.9542                     2.41378           2.75252M    663.955k   45.9988M       120.736M/s   6.61411M   9.22169M   1.21885G         26.4975    2.75226/s  3.3546G/s     2.94182G               63.9542                2.41359      1000k       2.75226M/s [BEST: throughput=  0.13 GB/s doc_throughput=     2 docs/s instructions=  2941816859 cycles=  1218758476 branch_miss=  662419 cache_miss= 6617703 cache_ref=   9213960 items=   1000000 avg_time= 363337798 ns]
large_random<yyjson_insitu>/manual_time                345090935 ns    348511128 ns            2         668.336k           133.295M        5.73987M       7.88338M    1.18678G              25.8003           2.89779       3.43904G           2.9357G                    63.8212                     2.47366           2.89779M    667.062k   45.9988M        127.12M/s   5.74944M    7.8984M   1.18663G         25.7969    2.89779/s 3.43859G/s      2.9357G               63.8212                2.47399      1000k       2.89779M/s [BEST: throughput=  0.13 GB/s doc_throughput=     2 docs/s instructions=  2935696253 cycles=  1186782004 branch_miss=  668336 cache_miss= 5739873 cache_ref=   7883375 items=   1000000 avg_time= 345090935 ns]
large_random<sajson>/manual_time                       794238043 ns    797665692 ns            1         1.71955M           57.9156M        9.17434M       12.3067M    2.93059G              63.7103           1.25907       3.68982G          7.02395G                    152.699                     2.39677           1.25907M    1.71955M   45.9988M       55.2326M/s   9.17434M   12.3067M   2.93059G         63.7103    1.25907/s 3.68982G/s     7.02395G               152.699                2.39677      1000k       1.25907M/s [BEST: throughput=  0.06 GB/s doc_throughput=     1 docs/s instructions=  7023953651 cycles=  2930593650 branch_miss= 1719553 cache_miss= 9174340 cache_ref=  12306654 items=   1000000 avg_time= 794238043 ns]
large_random<rapidjson>/manual_time                   1780731950 ns   1784164426 ns            1         6.35535M           25.8314M        7.13207M       10.8472M     6.5117G              141.562          0.561567       3.65675G          14.2771G                    310.381                     2.19254           561.567k    6.35535M   45.9988M       24.6347M/s   7.13207M   10.8472M    6.5117G         141.562   0.561567/s 3.65675G/s     14.2771G               310.381                2.19254      1000k       561.567k/s [BEST: throughput=  0.03 GB/s doc_throughput=     0 docs/s instructions= 14277128144 cycles=  6511697711 branch_miss= 6355348 cache_miss= 7132073 cache_ref=  10847222 items=   1000000 avg_time=1780731950 ns]
large_random<rapidjson_lossless>/manual_time          2150669268 ns   2154092195 ns            1         7.39009M           21.3881M        7.14966M        10.927M    7.87589G               171.22          0.464972       3.66206G          17.2529G                    375.073                     2.19059           464.972k    7.39009M   45.9988M       20.3973M/s   7.14966M    10.927M   7.87589G          171.22   0.464972/s 3.66206G/s     17.2529G               375.073                2.19059      1000k       464.972k/s [BEST: throughput=  0.02 GB/s doc_throughput=     0 docs/s instructions= 17252881657 cycles=  7875890485 branch_miss= 7390092 cache_miss= 7149659 cache_ref=  10927035 items=   1000000 avg_time=2150669268 ns]
large_random<rapidjson_insitu>/manual_time            1710147827 ns   1713555508 ns            1         6.47265M           26.8975M        8.30389M       12.4319M    6.25096G              135.894          0.584745       3.65521G          13.5471G                    294.511                     2.16721           584.745k    6.47265M   45.9988M       25.6515M/s   8.30389M   12.4319M   6.25096G         135.894   0.584745/s 3.65521G/s     13.5471G               294.511                2.16721      1000k       584.745k/s [BEST: throughput=  0.03 GB/s doc_throughput=     0 docs/s instructions= 13547128181 cycles=  6250957447 branch_miss= 6472645 cache_miss= 8303891 cache_ref=  12431861 items=   1000000 avg_time=1710147827 ns]
large_random<nlohmann_json>/manual_time               9298579066 ns   9302047776 ns            1         37.0243M           4.94686M        48.4876M       63.4482M     34.296G              745.586          0.107543       3.68831G          63.4372G                   1.37911k                     1.84969           107.543k    37.0243M   45.9988M       4.71769M/s   48.4876M   63.4482M    34.296G         745.586   0.107543/s 3.68831G/s     63.4372G              1.37911k                1.84969      1000k       107.543k/s [BEST: throughput=  0.00 GB/s doc_throughput=     0 docs/s instructions= 63437173482 cycles= 34296037590 branch_miss=37024335 cache_miss=48487604 cache_ref=  63448241 items=   1000000 avg_time=9298579066 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                      4096540563 ns   4106802532 ns            1           3.555M           33.5173M        17.0308M       69.7809M    15.1148G              110.082          0.244108       3.68965G           17.133G                    124.781                     1.13352           127.983k      3.555M   137.305M       31.9646M/s   17.0308M   69.7809M   15.1148G         110.082   0.244108/s 3.68965G/s      17.133G               124.781                1.13352   524.288k       127.983k/s [BEST: throughput=  0.03 GB/s doc_throughput=     0 docs/s instructions= 17133005592 cycles= 15114817334 branch_miss= 3555003 cache_miss=17030800 cache_ref=  69780898 items=    524288 avg_time=4096540562 ns]
kostya<simdjson_ondemand>/manual_time                 2925601166 ns   2935867186 ns            1         1.61911M           46.9322M        10.1368M       29.8929M    10.7943G              78.6156           0.34181        3.6896G          12.3057G                    89.6227                     1.14001           179.207k    1.61911M   137.305M       44.7581M/s   10.1368M   29.8929M   10.7943G         78.6156    0.34181/s  3.6896G/s     12.3057G               89.6227                1.14001   524.288k       179.207k/s [BEST: throughput=  0.05 GB/s doc_throughput=     0 docs/s instructions= 12305650221 cycles= 10794307943 branch_miss= 1619109 cache_miss=10136831 cache_ref=  29892884 items=    524288 avg_time=2925601166 ns]
kostya<yyjson>/manual_time                             467325902 ns    477574653 ns            2         971.628k           293.939M        13.6804M       17.5797M    1.52563G              11.1112           2.14077       3.26602G          3.23633G                    23.5704                     2.12131           1.12238M    971.417k   137.305M       280.199M/s   13.6847M   17.5669M   1.52585G         11.1129    2.13983/s 3.26508G/s     3.23633G               23.5704                  2.121   524.288k       1.12189M/s [BEST: throughput=  0.29 GB/s doc_throughput=     2 docs/s instructions=  3236330738 cycles=  1525625406 branch_miss=  971628 cache_miss=13680400 cache_ref=  17579737 items=    524288 avg_time= 467325901 ns]
kostya<yyjson_insitu>/manual_time                      413991418 ns    424238813 ns            2         970.605k           331.671M        11.1265M       13.5892M    1.43063G              10.4194           2.41558        3.4558G          3.21806G                    23.4373                      2.2494           1.26646M    970.913k   137.305M       316.297M/s   11.1304M   13.5884M   1.43065G         10.4195    2.41551/s 3.45575G/s     3.21806G               23.4373                2.24937   524.288k       1.26642M/s [BEST: throughput=  0.33 GB/s doc_throughput=     2 docs/s instructions=  3218060888 cycles=  1430629675 branch_miss=  970605 cache_miss=11126501 cache_ref=  13589191 items=    524288 avg_time= 413991418 ns]
kostya<sajson>/manual_time                            1120548515 ns   1130812050 ns            1         11.5415M           122.534M        15.0917M       17.9215M    4.13451G              30.1119           0.89242       3.68972G          8.77973G                    63.9433                     2.12352           467.885k    11.5415M   137.305M       116.857M/s   15.0917M   17.9215M   4.13451G         30.1119    0.89242/s 3.68972G/s     8.77973G               63.9433                2.12352   524.288k       467.885k/s [BEST: throughput=  0.12 GB/s doc_throughput=     0 docs/s instructions=  8779729951 cycles=  4134513962 branch_miss=11541507 cache_miss=15091720 cache_ref=  17921460 items=    524288 avg_time=1120548515 ns]
kostya<rapidjson>/manual_time                         2277407962 ns   2287708407 ns            1         16.2833M             60.29M        8.84754M       12.4049M    8.31993G              60.5945          0.439096       3.65324G          16.8303G                    122.576                     2.02289           230.213k    16.2833M   137.305M       57.4971M/s   8.84754M   12.4049M   8.31993G         60.5945   0.439096/s 3.65324G/s     16.8303G               122.576                2.02289   524.288k       230.213k/s [BEST: throughput=  0.06 GB/s doc_throughput=     0 docs/s instructions= 16830320867 cycles=  8319925049 branch_miss=16283281 cache_miss= 8847538 cache_ref=  12404942 items=    524288 avg_time=2277407962 ns]
kostya<rapidjson_lossless>/manual_time                2496489682 ns   2506755887 ns            1         16.5607M           54.9992M         8.8473M       12.4607M    9.12749G               66.476          0.400562       3.65613G          18.5552G                    135.138                     2.03289            210.01k    16.5607M   137.305M       52.4513M/s    8.8473M   12.4607M   9.12749G          66.476   0.400562/s 3.65613G/s     18.5552G               135.138                2.03289   524.288k        210.01k/s [BEST: throughput=  0.05 GB/s doc_throughput=     0 docs/s instructions= 18555160207 cycles=  9127487725 branch_miss=16560702 cache_miss= 8847303 cache_ref=  12460721 items=    524288 avg_time=2496489682 ns]
kostya<rapidjson_insitu>/manual_time                  2103599215 ns   2113847633 ns            1          15.532M           65.2715M        12.9648M       16.3566M     7.6783G              55.9215          0.475376       3.65008G          15.3825G                    112.031                     2.00337           249.234k     15.532M   137.305M       62.2477M/s   12.9648M   16.3566M    7.6783G         55.9215   0.475376/s 3.65008G/s     15.3825G               112.031                2.00337   524.288k       249.234k/s [BEST: throughput=  0.07 GB/s doc_throughput=     0 docs/s instructions= 15382481971 cycles=  7678299807 branch_miss=15531961 cache_miss=12964767 cache_ref=  16356630 items=    524288 avg_time=2103599215 ns]
kostya<nlohmann_json>/manual_time                     14544937982 ns   14555276234 ns            1         59.7524M           9.44005M        73.0204M       98.2491M    53.6664G              390.855         0.0687524        3.6897G          100.398G                    731.208                     1.87079           36.0461k    59.7524M   137.305M       9.00274M/s   73.0204M   98.2491M   53.6664G         390.855  0.0687524/s  3.6897G/s     100.398G               731.208                1.87079   524.288k       36.0461k/s [BEST: throughput=  0.01 GB/s doc_throughput=     0 docs/s instructions=100398444435 cycles= 53666395299 branch_miss=59752372 cache_miss=73020377 cache_ref=  98249126 items=    524288 avg_time=14544937982 ns]
distinct_user_id<simdjson_dom>/manual_time              22128744 ns     22183300 ns           32          17.197k           28.5448M               1       6.79092M     81.632M              129.264           45.2005       3.68981G          76.3623M                    120.919                    0.935445           5.19805k    17.2046k   631.515k       27.2162M/s   1.18534k   6.78663M   81.6442M         129.283    45.1901/s 3.68951G/s     76.3623M               120.919               0.935306        115       5.19686k/s [BEST: throughput=  0.03 GB/s doc_throughput=    45 docs/s instructions=    76362305 cycles=    81632039 branch_miss=   17197 cache_miss=       1 cache_ref=   6790916 items=       115 avg_time=  22128743 ns]
distinct_user_id<simdjson_ondemand>/manual_time         17227928 ns     17282164 ns           41            7.53k           36.6672M               0       6.70113M     63.547M              100.626           58.0623       3.68968G          62.4741M                    98.9274                    0.983117           6.67716k     7.6169k   631.515k       34.9583M/s    205.293   6.69792M   63.5628M         100.651    58.0453/s 3.68952G/s     62.4741M               98.9274               0.982873        115       6.67521k/s [BEST: throughput=  0.04 GB/s doc_throughput=    58 docs/s instructions=    62474130 cycles=    63546982 branch_miss=    7530 cache_miss=       0 cache_ref=   6701127 items=       115 avg_time=  17227927 ns]
distinct_user_id<yyjson>/manual_time                     2071909 ns      2127056 ns          349          10.492k           316.946M         22.441k        79.124k    7.34654M              11.6332           501.882        3.6871G          10.3044M                    16.3169                     1.40261           57.7164k      11.02k   631.515k       290.679M/s   19.6161k   74.1721k   7.44499M         11.7891    482.647/s  3.5933G/s     10.3044M               16.3169                1.38407        115       55.5044k/s [BEST: throughput=  0.32 GB/s doc_throughput=   501 docs/s instructions=    10304351 cycles=     7346540 branch_miss=   10492 cache_miss=   22441 cache_ref=     79124 items=       115 avg_time=   2071909 ns]
distinct_user_id<yyjson_insitu>/manual_time              2082986 ns      2137691 ns          336          11.357k           320.049M          2.171k        48.922k    7.27049M              11.5128           506.795       3.68465G          10.3038M                     16.316                     1.41721           58.2814k     11.405k   631.515k       289.133M/s    250.759   35.5039k   7.33593M         11.6164     480.08/s 3.52184G/s      10.304M               16.3164                 1.4046        115       55.2092k/s [BEST: throughput=  0.32 GB/s doc_throughput=   506 docs/s instructions=    10303781 cycles=     7270490 branch_miss=   11357 cache_miss=    2171 cache_ref=     48922 items=       115 avg_time=   2082985 ns]
distinct_user_id<sajson>/manual_time                     3195496 ns      3248670 ns          219          42.282k           197.919M               0        46.838k    11.7787M              18.6516           313.404       3.69151G          26.5515M                    42.0441                     2.25419           36.0415k    42.3633k   631.515k       188.471M/s    36.6941   46.9924k   11.7896M         18.6687     312.94/s 3.68944G/s     26.5515M               42.0441                2.25211        115       35.9882k/s [BEST: throughput=  0.20 GB/s doc_throughput=   313 docs/s instructions=    26551510 cycles=    11778743 branch_miss=   42282 cache_miss=       0 cache_ref=     46838 items=       115 avg_time=   3195495 ns]
distinct_user_id<rapidjson>/manual_time                 12350167 ns     12404055 ns           57          65.935k           51.8553M         11.666k        57.364k    44.9351M              71.1545           82.1125       3.68974G          104.008M                    164.696                     2.31463           9.44294k     66.124k   631.515k       48.7653M/s   2.70356k   40.6823k   45.0794M          71.383    80.9706/s 3.65011G/s     104.009M               164.697                2.30723        115       9.31162k/s [BEST: throughput=  0.05 GB/s doc_throughput=    82 docs/s instructions=   104008138 cycles=    44935135 branch_miss=   65935 cache_miss=   11666 cache_ref=     57364 items=       115 avg_time=  12350166 ns]
distinct_user_id<rapidjson_insitu>/manual_time           9389119 ns      9442477 ns           75          51.651k           67.4328M             258        46.026k    34.5561M              54.7194           106.779       3.68988G           75.725M                     119.91                     2.19136           12.2796k    51.8646k   631.515k       64.1444M/s   13.2927k   47.7952k   34.6421M         54.8556    106.506/s 3.68961G/s     75.7252M                119.91                2.18593        115       12.2482k/s [BEST: throughput=  0.07 GB/s doc_throughput=   106 docs/s instructions=    75725047 cycles=    34556117 branch_miss=   51651 cache_miss=     258 cache_ref=     46026 items=       115 avg_time=   9389119 ns]
distinct_user_id<nlohmann_json>/manual_time             57354082 ns     57413379 ns           12         383.266k           11.0331M          1.469k       325.003k    211.179M                334.4           17.4708       3.68946G          406.323M                     643.41                     1.92407           2.00914k    386.314k   631.515k       10.5007M/s   1.23758k   358.856k   211.602M          335.07    17.4356/s 3.68939G/s     406.483M               643.663                1.92098        115       2.00509k/s [BEST: throughput=  0.01 GB/s doc_throughput=    17 docs/s instructions=   406323364 cycles=   211178835 branch_miss=  383266 cache_miss=    1469 cache_ref=    325003 items=       115 avg_time=  57354081 ns]
find_tweet<simdjson_dom>/manual_time                    21881783 ns     21911622 ns           32          15.586k           28.8696M               9       6.74292M    80.7139M               127.81           45.7148       3.68982G          74.2435M                    117.564                    0.919836            45.7148    15.7011k   631.515k       27.5233M/s     860.75   6.74926M   80.7326M          127.84    45.7001/s 3.68949G/s     74.2435M               117.564               0.919623          1        45.7001/s [BEST: throughput=  0.03 GB/s doc_throughput=    45 docs/s instructions=    74243533 cycles=    80713912 branch_miss=   15586 cache_miss=       9 cache_ref=   6742917 items=         1 avg_time=  21881782 ns]
find_tweet<simdjson_ondemand>/manual_time               16038984 ns     16068714 ns           44           3.272k           39.3936M               1       7.19317M    59.1491M              93.6621           62.3795       3.68969G           54.934M                    86.9877                    0.928739            62.3795      3.317k   631.515k       37.5497M/s    15.8864   7.19834M   59.1777M         93.7076    62.3481/s 3.68962G/s      54.934M               86.9877               0.928289          1        62.3481/s [BEST: throughput=  0.04 GB/s doc_throughput=    62 docs/s instructions=    54934016 cycles=    59149050 branch_miss=    3272 cache_miss=       1 cache_ref=   7193173 items=         1 avg_time=  16038984 ns]
find_tweet<yyjson>/manual_time                           2248150 ns      2279525 ns          319          12.209k           320.614M             700        68.196k    7.27152M              11.5144           507.691       3.69168G          10.0177M                     15.863                     1.37767            507.691    11.2174k   631.515k       267.891M/s    1.2968k   42.7877k   7.46609M         11.8225     444.81/s   3.321G/s     10.0182M               15.8638                1.34183          1         444.81/s [BEST: throughput=  0.32 GB/s doc_throughput=   507 docs/s instructions=    10017742 cycles=     7271516 branch_miss=   12209 cache_miss=     700 cache_ref=     68196 items=         1 avg_time=   2248149 ns]
find_tweet<yyjson_insitu>/manual_time                    2042845 ns      2073392 ns          343          10.769k           327.838M          1.536k         38.56k    7.10746M              11.2546            519.13       3.68969G          10.0174M                    15.8624                     1.40942             519.13    11.0237k   631.515k       294.814M/s     46.242   25.2536k   7.18812M         11.3823    489.513/s 3.51868G/s     10.0176M               15.8628                1.39364          1        489.513/s [BEST: throughput=  0.33 GB/s doc_throughput=   519 docs/s instructions=    10017365 cycles=     7107457 branch_miss=   10769 cache_miss=    1536 cache_ref=     38560 items=         1 avg_time=   2042845 ns]
find_tweet<sajson>/manual_time                           3137870 ns      3167963 ns          223           42.09k           201.521M               0        36.637k    11.5682M              18.3181           319.107       3.69148G          26.1128M                    41.3495                     2.25729            319.107    42.1933k   631.515k       191.933M/s    13.8117   36.6984k   11.5772M         18.3325    318.688/s 3.68952G/s     26.1128M               41.3495                2.25553          1        318.688/s [BEST: throughput=  0.20 GB/s doc_throughput=   319 docs/s instructions=    26112801 cycles=    11568183 branch_miss=   42090 cache_miss=       0 cache_ref=     36637 items=         1 avg_time=   3137870 ns]
find_tweet<rapidjson>/manual_time                       12171550 ns     12201612 ns           58          64.829k           52.6061M         11.437k        49.076k    44.2936M              70.1386           83.3014       3.68972G          102.589M                     162.45                     2.31612            83.3014    64.9061k   631.515k       49.4809M/s   2.05672k   32.1004k    44.418M         70.3356    82.1588/s 3.64933G/s      102.59M                162.45                2.30964          1        82.1588/s [BEST: throughput=  0.05 GB/s doc_throughput=    83 docs/s instructions=   102589349 cycles=    44293565 branch_miss=   64829 cache_miss=   11437 cache_ref=     49076 items=         1 avg_time=  12171550 ns]
find_tweet<rapidjson_insitu>/manual_time                 9213267 ns      9243983 ns           76          50.844k           68.6388M         11.225k        38.549k    33.9424M              53.7477           108.689       3.68918G          74.3364M                    117.711                     2.19007            108.689    51.1286k   631.515k       65.3687M/s   11.8326k   38.2874k   33.9937M         53.8287    108.539/s 3.68964G/s     74.3363M               117.711                2.18677          1        108.539/s [BEST: throughput=  0.07 GB/s doc_throughput=   108 docs/s instructions=    74336413 cycles=    33942450 branch_miss=   50844 cache_miss=   11225 cache_ref=     38549 items=         1 avg_time=   9213266 ns]
find_tweet<nlohmann_json>/manual_time                   49777940 ns     49811344 ns           14         286.997k           12.7203M          6.286k       185.364k    183.174M              290.055           20.1425       3.68959G          357.657M                    566.347                     1.95255            20.1425    293.642k   631.515k       12.0989M/s    617.143   280.354k   183.652M         290.811    20.0892/s 3.68942G/s     356.314M               564.221                1.94016          1        20.0892/s [BEST: throughput=  0.01 GB/s doc_throughput=    20 docs/s instructions=   357656502 cycles=   183174206 branch_miss=  286997 cache_miss=    6286 cache_ref=    185364 items=         1 avg_time=  49777939 ns]
top_tweet<simdjson_dom>/manual_time                     22032905 ns     22062340 ns           32          16.141k           28.6701M               7       6.74761M    81.2758M                128.7           45.3989       3.68983G          75.0759M                    118.882                    0.923717            45.3989    16.1102k   631.515k       27.3346M/s    949.781   6.75361M   81.2889M         128.721    45.3867/s 3.68943G/s     75.0759M               118.882               0.923568          1        45.3867/s [BEST: throughput=  0.03 GB/s doc_throughput=    45 docs/s instructions=    75075867 cycles=    81275790 branch_miss=   16141 cache_miss=       7 cache_ref=   6747611 items=         1 avg_time=  22032905 ns]
top_tweet<simdjson_ondemand>/manual_time                17113671 ns     17143793 ns           41           7.704k           36.9137M               0       6.75085M    63.1251M              99.9582           58.4527       3.68983G          62.2624M                    98.5921                    0.986333            58.4527    7.75124k   631.515k       35.1917M/s    21.6829   6.77095M   63.1439M         99.9879    58.4328/s 3.68967G/s     62.2624M               98.5921                0.98604          1        58.4328/s [BEST: throughput=  0.04 GB/s doc_throughput=    58 docs/s instructions=    62262379 cycles=    63125088 branch_miss=    7704 cache_miss=       0 cache_ref=   6750848 items=         1 avg_time=  17113670 ns]
top_tweet<simdjson_ondemand_forward_only>/manual_time   17187792 ns     17217918 ns           41           7.793k           36.7514M              18       6.72894M    63.4035M              100.399           58.1956        3.6898G           63.043M                    99.8283                    0.994314            58.1956     7.7938k   631.515k         35.04M/s    233.122   6.73612M   63.4156M         100.418    58.1808/s 3.68957G/s      63.043M               99.8283               0.994124          1        58.1808/s [BEST: throughput=  0.04 GB/s doc_throughput=    58 docs/s instructions=    63043038 cycles=    63403526 branch_miss=    7793 cache_miss=      18 cache_ref=   6728945 items=         1 avg_time=  17187791 ns]
top_tweet<yyjson>/manual_time                            2270864 ns      2301912 ns          316          12.659k            315.33M             683        74.026k    7.38378M              11.6922           499.323       3.68689G          10.1204M                    16.0255                     1.37062            499.323    11.4675k   631.515k       265.212M/s   1.21434k   49.1928k   7.54944M         11.9545    440.361/s 3.32448G/s     10.1208M               16.0263                1.34061          1        440.361/s [BEST: throughput=  0.32 GB/s doc_throughput=   499 docs/s instructions=    10120364 cycles=     7383778 branch_miss=   12659 cache_miss=     683 cache_ref=     74026 items=         1 avg_time=   2270864 ns]
top_tweet<yyjson_insitu>/manual_time                     2060189 ns      2090107 ns          340           10.85k           324.971M          1.492k        44.724k    7.17039M              11.3543            514.59       3.68981G            10.12M                    16.0249                     1.41136             514.59    11.1607k   631.515k       292.332M/s    176.029   31.8946k   7.25173M         11.4831    485.392/s 3.51994G/s     10.1202M               16.0253                1.39556          1        485.392/s [BEST: throughput=  0.32 GB/s doc_throughput=   514 docs/s instructions=    10119986 cycles=     7170394 branch_miss=   10850 cache_miss=    1492 cache_ref=     44724 items=         1 avg_time=   2060188 ns]
top_tweet<sajson>/manual_time                            3171089 ns      3200525 ns          221          42.164k           199.443M               0         42.54k    11.6887M               18.509           315.817        3.6915G          26.3459M                    41.7185                     2.25396            315.817    42.2444k   631.515k       189.922M/s    53.4525   42.6196k   11.7003M         18.5273    315.349/s 3.68968G/s     26.3459M               41.7185                2.25173          1        315.349/s [BEST: throughput=  0.20 GB/s doc_throughput=   315 docs/s instructions=    26345859 cycles=    11688723 branch_miss=   42164 cache_miss=       0 cache_ref=     42540 items=         1 avg_time=   3171088 ns]
top_tweet<rapidjson>/manual_time                        12299095 ns     12329409 ns           57          65.988k           52.0735M         13.905k        53.788k    44.7472M               70.857           82.4581       3.68977G          103.591M                    164.035                     2.31502            82.4581    66.0724k   631.515k       48.9678M/s   2.45637k   36.8412k   44.8873M         71.0788    81.3068/s 3.64965G/s     103.592M               164.037                2.30781          1        81.3068/s [BEST: throughput=  0.05 GB/s doc_throughput=    82 docs/s instructions=   103590850 cycles=    44747239 branch_miss=   65988 cache_miss=   13905 cache_ref=     53788 items=         1 avg_time=  12299094 ns]
top_tweet<rapidjson_insitu>/manual_time                  9334011 ns      9363988 ns           75          51.531k           67.7626M          4.149k        42.934k    34.3881M              54.4534           107.302        3.6899G          75.3141M                    119.259                     2.19012            107.302    51.7115k   631.515k       64.5231M/s   12.4345k   44.0857k   34.4384M         54.5329    107.135/s 3.68956G/s      75.314M               119.259                2.18692          1        107.135/s [BEST: throughput=  0.07 GB/s doc_throughput=   107 docs/s instructions=    75314104 cycles=    34388130 branch_miss=   51531 cache_miss=    4149 cache_ref=     42934 items=         1 avg_time=   9334010 ns]
top_tweet<nlohmann_json>/manual_time                    63518187 ns     63552277 ns           11          484.98k           9.94595M             238       425.584k    234.259M              370.947           15.7493       3.68942G          449.596M                    711.932                     1.91923            15.7493    485.744k   631.515k       9.48169M/s    1042.73   435.519k   234.349M          371.09    15.7435/s 3.68947G/s     449.702M                 712.1                1.91894          1        15.7435/s [BEST: throughput=  0.01 GB/s doc_throughput=    15 docs/s instructions=   449595724 cycles=   234258791 branch_miss=  484980 cache_miss=     238 cache_ref=    425584 items=         1 avg_time=  63518186 ns]
