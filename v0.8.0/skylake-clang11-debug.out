run_benchmark: v0.8.0 /home/jkeiser/simdjson_benchmark_results/v0.8.0/skylake-clang11-debug.json -DCMAKE_BUILD_TYPE=Debug
git reset --hard v0.8.0
HEAD is now at c96ff018 Version 0.8.
cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The CXX compiler identification is Clang 11.0.0
-- The C compiler identification is Clang 11.0.0
-- Check for working CXX compiler: /usr/bin/clang++-11
-- Check for working CXX compiler: /usr/bin/clang++-11 -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Check for working C compiler: /usr/bin/clang-11
-- Check for working C compiler: /usr/bin/clang-11 -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed
-- Check if compiler accepts -pthread
-- Check if compiler accepts -pthread - yes
-- Found Threads: TRUE  
-- Looking for fork
-- Looking for fork - found
-- Looking for wait
-- Looking for wait - found
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- Found Git: /usr/bin/git (found version "2.27.0") 
-- git Version: v0.2.1-c96ff018
-- Version: 0.2.1
-- Performing Test HAVE_CXX_FLAG_STD_CXX11
-- Performing Test HAVE_CXX_FLAG_STD_CXX11 - Success
-- Performing Test HAVE_CXX_FLAG_WALL
-- Performing Test HAVE_CXX_FLAG_WALL - Success
-- Performing Test HAVE_CXX_FLAG_WEXTRA
-- Performing Test HAVE_CXX_FLAG_WEXTRA - Success
-- Performing Test HAVE_CXX_FLAG_WSHADOW
-- Performing Test HAVE_CXX_FLAG_WSHADOW - Success
-- Performing Test HAVE_CXX_FLAG_WERROR
-- Performing Test HAVE_CXX_FLAG_WERROR - Success
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32 - Success
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED - Success
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WD654
-- Performing Test HAVE_CXX_FLAG_WD654 - Failed
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY - Success
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES -- failed to compile
-- Performing Test HAVE_CXX_FLAG_COVERAGE
-- Performing Test HAVE_CXX_FLAG_COVERAGE - Success
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Performing Test USE_BOOST_JSON
-- Performing Test USE_BOOST_JSON - Failed
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Found Python3: /usr/bin/python3.8 (found version "3.8.6") found components: Interpreter 
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 10
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
Scanning dependencies of target benchmark
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_api_internal.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_name.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_name.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_register.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_register.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_runner.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_runner.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/colorprint.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/colorprint.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/commandlineflags.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/commandlineflags.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/complexity.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/complexity.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/console_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/console_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/counter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/counter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/csv_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/csv_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/json_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/json_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/sleep.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sleep.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/statistics.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/statistics.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/string_util.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/string_util.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/sysinfo.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sysinfo.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/timers.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/timers.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -P CMakeFiles/benchmark.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/benchmark.dir/link.txt --verbose=1
/usr/bin/ar qc libbenchmarkd.a  CMakeFiles/benchmark.dir/benchmark.cc.o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o CMakeFiles/benchmark.dir/benchmark_name.cc.o CMakeFiles/benchmark.dir/benchmark_register.cc.o CMakeFiles/benchmark.dir/benchmark_runner.cc.o CMakeFiles/benchmark.dir/colorprint.cc.o CMakeFiles/benchmark.dir/commandlineflags.cc.o CMakeFiles/benchmark.dir/complexity.cc.o CMakeFiles/benchmark.dir/console_reporter.cc.o CMakeFiles/benchmark.dir/counter.cc.o CMakeFiles/benchmark.dir/csv_reporter.cc.o CMakeFiles/benchmark.dir/json_reporter.cc.o CMakeFiles/benchmark.dir/reporter.cc.o CMakeFiles/benchmark.dir/sleep.cc.o CMakeFiles/benchmark.dir/statistics.cc.o CMakeFiles/benchmark.dir/string_util.cc.o CMakeFiles/benchmark.dir/sysinfo.cc.o CMakeFiles/benchmark.dir/timers.cc.o
/usr/bin/ranlib libbenchmarkd.a
[ 80%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
Scanning dependencies of target generated-data
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated && /usr/bin/ruby genfeaturejson.rb /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-miss.json ...
[ 80%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/clang++-11  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/include  -g -fPIC   -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -pthread -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/clang++-11 -fPIC -g  -shared -Wl,-soname,libsimdjson.so.7 -o ../libsimdjson.so.7.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.7.0.0 ../libsimdjson.so.7 ../libsimdjson.so
[ 80%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
Scanning dependencies of target yyjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/clang-11  -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src  -g   -o CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o   -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src/yyjson.c
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -P CMakeFiles/yyjson.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -E cmake_link_script CMakeFiles/yyjson.dir/link.txt --verbose=1
/usr/bin/ar qc libyyjson.a  CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o
/usr/bin/ranlib libyyjson.a
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/clang++-11  -DRAPIDJSON_HAS_STDSTRING -DSAJSON_UNSORTED_OBJECT_KEYS -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_COMPETITION_NLOHMANN_JSON -DSIMDJSON_COMPETITION_RAPIDJSON -DSIMDJSON_COMPETITION_SAJSON -DSIMDJSON_COMPETITION_YYJSON -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/rapidjson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/sajson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/json  -g   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/clang++-11  -g   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.7.0.0 ../_deps/google_benchmarks/src/libbenchmarkd.a ../dependencies/libyyjson.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.8.0/skylake-clang11-debug.json --benchmark_out_format=json
2021-01-25 02:53:44
Running benchmark/bench_ondemand
Run on (4 X 4000 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 256 KiB (x4)
  L3 Unified 8192 KiB (x1)
Load Average: 1.04, 1.01, 0.82
***WARNING*** Library was built as DEBUG. Timings may be affected.
simdjson::dom implementation:      haswell
simdjson::ondemand implementation: fallback

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                22545318 ns     22576673 ns           31          18.253k           28.0273M               5       7.50689M    83.1393M              131.651           44.3811       3.68982G          78.2262M                    123.871                    0.940905           4.43811k    18.2762k   631.515k       26.7133M/s   2.77961k   7.51315M   83.1783M         131.712    44.3551/s 3.68938G/s     78.2262M               123.871               0.940464        100       4.43551k/s [BEST: throughput=  0.03 GB/s doc_throughput=    44 docs/s instructions=    78226206 cycles=    83139336 branch_miss=   18253 cache_miss=       5 cache_ref=   7506885 items=       100 avg_time=  22545318 ns]
partial_tweets<simdjson_ondemand>/manual_time           17290317 ns     17320783 ns           40           8.072k           36.5415M               1       7.74085M    63.7563M              100.958           57.8632       3.68914G          63.7559M                    100.957                    0.999994           5.78632k    8.06317k   631.515k       34.8322M/s     27.525   7.75706M   63.7922M         101.015    57.8358/s 3.68948G/s     63.7559M               100.957                0.99943        100       5.78358k/s [BEST: throughput=  0.04 GB/s doc_throughput=    57 docs/s instructions=    63755870 cycles=    63756261 branch_miss=    8072 cache_miss=       1 cache_ref=   7740850 items=       100 avg_time=  17290316 ns]
partial_tweets<yyjson>/manual_time                       2313840 ns      2345955 ns          303          12.826k           311.762M             825        77.411k    7.47789M              11.8412           493.674       3.69164G          10.5728M                     16.742                     1.41388           49.3674k     11.491k   631.515k       260.286M/s    1061.73   53.3334k   7.65809M         12.1265    432.182/s 3.30969G/s     10.5733M               16.7427                1.38067        100       43.2182k/s [BEST: throughput=  0.31 GB/s doc_throughput=   493 docs/s instructions=    10572810 cycles=     7477894 branch_miss=   12826 cache_miss=     825 cache_ref=     77411 items=       100 avg_time=   2313839 ns]
partial_tweets<yyjson_insitu>/manual_time                2097889 ns      2128006 ns          334          10.858k           319.776M          1.461k        48.446k    7.28402M              11.5342           506.363       3.68836G          10.5724M                    16.7414                     1.45146           50.6363k     11.247k   631.515k       287.079M/s    164.084   35.7889k   7.37808M         11.6831     476.67/s 3.51691G/s     10.5727M               16.7418                1.43299        100        47.667k/s [BEST: throughput=  0.32 GB/s doc_throughput=   506 docs/s instructions=    10572443 cycles=     7284025 branch_miss=   10858 cache_miss=    1461 cache_ref=     48446 items=       100 avg_time=   2097888 ns]
partial_tweets<sajson>/manual_time                       3250068 ns      3279670 ns          215          42.222k           194.549M               0        45.934k    11.9826M              18.9744           308.067       3.69145G          26.9812M                    42.7245                     2.25169           30.8067k    42.3444k   631.515k       185.307M/s     180.53   46.1992k   11.9914M         18.9883    307.686/s 3.68959G/s     26.9812M               42.7245                2.25004        100       30.7686k/s [BEST: throughput=  0.19 GB/s doc_throughput=   308 docs/s instructions=    26981162 cycles=    11982644 branch_miss=   42222 cache_miss=       0 cache_ref=     45934 items=       100 avg_time=   3250068 ns]
partial_tweets<rapidjson>/manual_time                   12576177 ns     12606886 ns           56          67.627k            50.981M             119        54.386k     45.691M              72.3514           80.7281       3.68855G          105.145M                    166.497                     2.30122           8.07281k    67.9722k   631.515k       47.8889M/s    366.536    36.916k   45.8221M          72.559    79.5154/s 3.64357G/s     105.146M               166.498                2.29466        100       7.95154k/s [BEST: throughput=  0.05 GB/s doc_throughput=    80 docs/s instructions=   105145137 cycles=    45691004 branch_miss=   67627 cache_miss=     119 cache_ref=     54386 items=       100 avg_time=  12576177 ns]
partial_tweets<rapidjson_insitu>/manual_time             9625358 ns      9656548 ns           73          52.534k           66.4548M             112        45.714k    35.0648M               55.525           105.231        3.6899G          76.8332M                    121.665                     2.19117           10.5231k    52.7844k   631.515k       62.5701M/s    452.507   36.8573k   35.1771M         55.7026    103.892/s 3.65462G/s     76.8337M               121.666                 2.1842        100       10.3892k/s [BEST: throughput=  0.07 GB/s doc_throughput=   105 docs/s instructions=    76833197 cycles=    35064846 branch_miss=   52534 cache_miss=     112 cache_ref=     45714 items=       100 avg_time=   9625358 ns]
partial_tweets<nlohmann_json>/manual_time               60273368 ns     60314973 ns           12         425.517k           10.5202M             126       313.829k    221.474M              350.702           16.6586       3.68945G          425.805M                    674.259                      1.9226           1.66586k    435.271k   631.515k       9.99214M/s   1.52033k   428.081k    222.35M         352.089    16.5911/s 3.68902G/s     426.158M               674.818                1.91661        100       1.65911k/s [BEST: throughput=  0.01 GB/s doc_throughput=    16 docs/s instructions=   425804885 cycles=   221473533 branch_miss=  425517 cache_miss=     126 cache_ref=    313829 items=       100 avg_time=  60273368 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                2901602951 ns   2904883055 ns            1         3.96882M           15.8529M        11.2811M       140.038M     10.704G              232.702          0.344637         3.689G          14.5571G                    316.468                     1.35997           344.637k    3.96882M   45.9988M       15.1185M/s   11.2811M   140.038M    10.704G         232.702   0.344637/s   3.689G/s     14.5571G               316.468                1.35997      1000k       344.637k/s [BEST: throughput=  0.02 GB/s doc_throughput=     0 docs/s instructions= 14557149978 cycles= 10704022546 branch_miss= 3968824 cache_miss=11281144 cache_ref= 140037843 items=   1000000 avg_time=2901602951 ns]
large_random<simdjson_ondemand>/manual_time           1672097328 ns   1675372703 ns            1         904.695k           27.5096M        5.54549M       237.327M    6.16831G              134.097          0.598051       3.68896G          8.50871G                    184.977                     1.37942           598.051k    904.695k   45.9988M       26.2352M/s   5.54549M   237.327M   6.16831G         134.097   0.598051/s 3.68896G/s     8.50871G               184.977                1.37942      1000k       598.051k/s [BEST: throughput=  0.03 GB/s doc_throughput=     0 docs/s instructions=  8508705976 cycles=  6168305053 branch_miss=  904695 cache_miss= 5545495 cache_ref= 237326984 items=   1000000 avg_time=1672097328 ns]
large_random<simdjson_ondemand_unordered>/manual_time 1687736395 ns   1691168726 ns            1         905.059k           27.2547M        5.58324M       211.435M     6.2265G              135.362           0.59251       3.68926G          8.57171G                    186.346                     1.37665            592.51k    905.059k   45.9988M       25.9921M/s   5.58324M   211.435M    6.2265G         135.362    0.59251/s 3.68926G/s     8.57171G               186.346                1.37665      1000k        592.51k/s [BEST: throughput=  0.03 GB/s doc_throughput=     0 docs/s instructions=  8571705976 cycles=  6226498828 branch_miss=  905059 cache_miss= 5583238 cache_ref= 211435028 items=   1000000 avg_time=1687736395 ns]
large_random<yyjson>/manual_time                       364284346 ns    367722697 ns            2         665.421k           126.295M        6.58391M       9.34173M    1.22148G              26.5546           2.74563       3.35372G          2.94182G                    63.9542                     2.40841           2.74563M    666.384k   45.9988M       120.422M/s   6.57591M   9.32926M    1.2217G         26.5595    2.74511/s 3.35371G/s     2.94182G               63.9542                2.40796      1000k       2.74511M/s [BEST: throughput=  0.13 GB/s doc_throughput=     2 docs/s instructions=  2941816864 cycles=  1221477098 branch_miss=  665421 cache_miss= 6583906 cache_ref=   9341730 items=   1000000 avg_time= 364284346 ns]
large_random<yyjson_insitu>/manual_time                346032200 ns    349461494 ns            2         665.637k           132.934M        5.81005M        8.0268M    1.18912G              25.8512           2.88995       3.43651G           2.9357G                    63.8212                     2.46879           2.88995M     666.43k   45.9988M       126.774M/s   5.76537M   8.01881M   1.18904G         25.8494     2.8899/s 3.43621G/s      2.9357G               63.8212                2.46897      1000k        2.8899M/s [BEST: throughput=  0.13 GB/s doc_throughput=     2 docs/s instructions=  2935696252 cycles=  1189123097 branch_miss=  665637 cache_miss= 5810046 cache_ref=   8026797 items=   1000000 avg_time= 346032200 ns]
large_random<sajson>/manual_time                       796783051 ns    800078619 ns            1         1.67664M           57.7306M        9.15389M       12.3425M    2.93907G              63.8946           1.25505       3.68867G          7.02395G                    152.699                     2.38985           1.25505M    1.67664M   45.9988M       55.0562M/s   9.15389M   12.3425M   2.93907G         63.8946    1.25505/s 3.68867G/s     7.02395G               152.699                2.38985      1000k       1.25505M/s [BEST: throughput=  0.06 GB/s doc_throughput=     1 docs/s instructions=  7023953655 cycles=  2939072569 branch_miss= 1676642 cache_miss= 9153890 cache_ref=  12342508 items=   1000000 avg_time= 796783051 ns]
large_random<rapidjson>/manual_time                   1781592006 ns   1784856902 ns            1         6.36542M           25.8189M        7.13657M       11.0096M    6.51324G              141.596          0.561296       3.65586G          14.2771G                    310.381                     2.19201           561.296k    6.36542M   45.9988M       24.6228M/s   7.13657M   11.0096M   6.51324G         141.596   0.561296/s 3.65586G/s     14.2771G               310.381                2.19201      1000k       561.296k/s [BEST: throughput=  0.03 GB/s doc_throughput=     0 docs/s instructions= 14277128434 cycles=  6513244459 branch_miss= 6365421 cache_miss= 7136570 cache_ref=  11009558 items=   1000000 avg_time=1781592006 ns]
large_random<rapidjson_lossless>/manual_time          2164901148 ns   2168158285 ns            1         7.60781M           21.2475M         7.1639M       11.0856M     7.9269G              172.329          0.461915       3.66155G          17.2529G                    375.073                      2.1765           461.915k    7.60781M   45.9988M       20.2632M/s    7.1639M   11.0856M    7.9269G         172.329   0.461915/s 3.66155G/s     17.2529G               375.073                 2.1765      1000k       461.915k/s [BEST: throughput=  0.02 GB/s doc_throughput=     0 docs/s instructions= 17252881479 cycles=  7926903845 branch_miss= 7607809 cache_miss= 7163900 cache_ref=  11085556 items=   1000000 avg_time=2164901148 ns]
large_random<rapidjson_insitu>/manual_time            1709830037 ns   1713091156 ns            1         6.37911M           26.9025M        8.27381M       12.6101M    6.24797G              135.829          0.584853       3.65415G          13.5471G                    294.511                     2.16824           584.853k    6.37911M   45.9988M       25.6563M/s   8.27381M   12.6101M   6.24797G         135.829   0.584853/s 3.65415G/s     13.5471G               294.511                2.16824      1000k       584.853k/s [BEST: throughput=  0.03 GB/s doc_throughput=     0 docs/s instructions= 13547128016 cycles=  6247971900 branch_miss= 6379111 cache_miss= 8273813 cache_ref=  12610065 items=   1000000 avg_time=1709830037 ns]
large_random<nlohmann_json>/manual_time               9289108623 ns   9291779276 ns            1         36.7825M            4.9519M        47.8798M        63.382M    34.2543G              744.679          0.107653       3.68758G          63.4372G                   1.37911k                     1.85195           107.653k    36.7825M   45.9988M        4.7225M/s   47.8798M    63.382M   34.2543G         744.679   0.107653/s 3.68758G/s     63.4372G              1.37911k                1.85195      1000k       107.653k/s [BEST: throughput=  0.00 GB/s doc_throughput=     0 docs/s instructions= 63437174383 cycles= 34254302404 branch_miss=36782532 cache_miss=47879758 cache_ref=  63381964 items=   1000000 avg_time=9289108623 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                      4086721101 ns   4097018554 ns            1          3.6243M           33.5978M        16.9479M        392.18M    15.0753G              109.794          0.244695       3.68885G           17.133G                    124.781                      1.1365           128.291k     3.6243M   137.305M       32.0414M/s   16.9479M    392.18M   15.0753G         109.794   0.244695/s 3.68885G/s      17.133G               124.781                 1.1365   524.288k       128.291k/s [BEST: throughput=  0.03 GB/s doc_throughput=     0 docs/s instructions= 17133005617 cycles= 15075291869 branch_miss= 3624302 cache_miss=16947909 cache_ref= 392179813 items=    524288 avg_time=4086721101 ns]
kostya<simdjson_ondemand>/manual_time                 2911142994 ns   2921589509 ns            1         1.67904M           47.1653M        9.89614M       625.394M    10.7392G              78.2144          0.343508       3.68901G          12.3057G                    89.6227                     1.14586           180.097k    1.67904M   137.305M       44.9804M/s   9.89614M   625.394M   10.7392G         78.2144   0.343508/s 3.68901G/s     12.3057G               89.6227                1.14586   524.288k       180.097k/s [BEST: throughput=  0.05 GB/s doc_throughput=     0 docs/s instructions= 12305650226 cycles= 10739227060 branch_miss= 1679044 cache_miss= 9896137 cache_ref= 625393890 items=    524288 avg_time=2911142994 ns]
kostya<yyjson>/manual_time                             468481257 ns    479015660 ns            2         971.353k           293.216M        13.7006M        17.854M    1.52803G              11.1288           2.13551       3.26313G          3.23633G                    23.5704                     2.11797           1.11962M    971.264k   137.305M       279.508M/s    13.692M   17.8907M   1.52811G         11.1293    2.13456/s 3.26184G/s     3.23633G               23.5704                2.11787   524.288k       1.11912M/s [BEST: throughput=  0.29 GB/s doc_throughput=     2 docs/s instructions=  3236330732 cycles=  1528034308 branch_miss=  971353 cache_miss=13700636 cache_ref=  17853969 items=    524288 avg_time= 468481257 ns]
kostya<yyjson_insitu>/manual_time                      415359607 ns    425873904 ns            2         970.682k           330.613M        11.0603M       13.7637M    1.43408G              10.4445           2.40787       3.45307G          3.21806G                    23.4373                     2.24399           1.26242M    971.205k   137.305M       315.255M/s   11.0588M   13.7722M   1.43416G          10.445    2.40755/s 3.45281G/s     3.21806G               23.4373                2.24387   524.288k       1.26225M/s [BEST: throughput=  0.33 GB/s doc_throughput=     2 docs/s instructions=  3218060681 cycles=  1434077640 branch_miss=  970682 cache_miss=11060327 cache_ref=  13763732 items=    524288 avg_time= 415359606 ns]
kostya<sajson>/manual_time                            1124472865 ns   1135047985 ns            1         11.8126M           122.106M        14.9791M       17.8833M    4.14846G              30.2134          0.889306       3.68925G          8.77973G                    63.9433                     2.11638           466.252k    11.8126M   137.305M       116.449M/s   14.9791M   17.8833M   4.14846G         30.2134   0.889306/s 3.68925G/s     8.77973G               63.9433                2.11638   524.288k       466.252k/s [BEST: throughput=  0.12 GB/s doc_throughput=     0 docs/s instructions=  8779729951 cycles=  4148456798 branch_miss=11812572 cache_miss=14979082 cache_ref=  17883278 items=    524288 avg_time=1124472865 ns]
kostya<rapidjson>/manual_time                         2279937053 ns   2290272341 ns            1          16.368M           60.2232M        8.80759M       12.5776M    8.32687G              60.6451          0.438609       3.65224G          16.8303G                    122.576                     2.02121           229.957k     16.368M   137.305M       57.4333M/s   8.80759M   12.5776M   8.32687G         60.6451   0.438609/s 3.65224G/s     16.8303G               122.576                2.02121   524.288k       229.957k/s [BEST: throughput=  0.06 GB/s doc_throughput=     0 docs/s instructions= 16830320719 cycles=  8326873918 branch_miss=16368015 cache_miss= 8807589 cache_ref=  12577627 items=    524288 avg_time=2279937053 ns]
kostya<rapidjson_lossless>/manual_time                2497869819 ns   2508306958 ns            1         16.5757M           54.9688M        8.92353M       12.6438M     9.1298G              66.4928          0.400341       3.65503G          18.5552G                    135.138                     2.03237           209.894k    16.5757M   137.305M       52.4224M/s   8.92353M   12.6438M    9.1298G         66.4928   0.400341/s 3.65503G/s     18.5552G               135.138                2.03237   524.288k       209.894k/s [BEST: throughput=  0.05 GB/s doc_throughput=     0 docs/s instructions= 18555160072 cycles=  9129798208 branch_miss=16575706 cache_miss= 8923531 cache_ref=  12643771 items=    524288 avg_time=2497869819 ns]
kostya<rapidjson_insitu>/manual_time                  2104850837 ns   2115255372 ns            1          15.578M           65.2326M        12.8996M       16.5222M     7.6811G              55.9419          0.475093       3.64924G          15.3825G                    112.031                     2.00264           249.086k     15.578M   137.305M       62.2107M/s   12.8996M   16.5222M    7.6811G         55.9419   0.475093/s 3.64924G/s     15.3825G               112.031                2.00264   524.288k       249.086k/s [BEST: throughput=  0.07 GB/s doc_throughput=     0 docs/s instructions= 15382481816 cycles=  7681102346 branch_miss=15578043 cache_miss=12899590 cache_ref=  16522183 items=    524288 avg_time=2104850836 ns]
kostya<nlohmann_json>/manual_time                     14501801254 ns   14511294597 ns            1         57.6216M           9.46813M        72.0225M       92.8724M    53.4954G               389.61          0.068957       3.68888G          100.398G                    731.208                     1.87677           36.1533k    57.6216M   137.305M       9.02952M/s   72.0225M   92.8724M   53.4954G          389.61   0.068957/s 3.68888G/s     100.398G               731.208                1.87677   524.288k       36.1533k/s [BEST: throughput=  0.01 GB/s doc_throughput=     0 docs/s instructions=100398446611 cycles= 53495407165 branch_miss=57621612 cache_miss=72022501 cache_ref=  92872432 items=    524288 avg_time=14501801254 ns]
distinct_user_id<simdjson_dom>/manual_time              22226567 ns     22277277 ns           32          17.194k           28.4334M               0       7.51218M    81.9503M              129.768           45.0241       3.68974G          76.3623M                    120.919                    0.931812           5.17777k    17.1884k   631.515k       27.0964M/s   1.40334k   7.52799M   81.9733M         129.804    44.9912/s 3.68808G/s     76.3623M               120.919               0.931551        115       5.17399k/s [BEST: throughput=  0.03 GB/s doc_throughput=    45 docs/s instructions=    76362305 cycles=    81950306 branch_miss=   17194 cache_miss=       0 cache_ref=   7512176 items=       115 avg_time=  22226566 ns]
distinct_user_id<simdjson_ondemand>/manual_time         17189925 ns     17245669 ns           41           7.604k           36.7673M              10        8.2175M    63.3747M              100.354           58.2207       3.68972G          62.4741M                    98.9274                    0.985789           6.69538k    7.63305k   631.515k       35.0356M/s   1.30105k   8.21595M   63.4066M         100.404    58.1736/s 3.68859G/s     62.4741M               98.9274               0.985293        115       6.68997k/s [BEST: throughput=  0.04 GB/s doc_throughput=    58 docs/s instructions=    62474130 cycles=    63374741 branch_miss=    7604 cache_miss=      10 cache_ref=   8217497 items=       115 avg_time=  17189924 ns]
distinct_user_id<yyjson>/manual_time                     2052750 ns      2108373 ns          353          10.679k           320.473M          22.47k        81.343k    7.27447M              11.5191           507.466       3.69155G          10.3041M                    16.3164                     1.41647           58.3586k     10.891k   631.515k       293.392M/s   19.4095k   76.5614k   7.36344M           11.66    487.151/s 3.58711G/s     10.3044M               16.3169                 1.3994        115       56.0224k/s [BEST: throughput=  0.32 GB/s doc_throughput=   507 docs/s instructions=    10304060 cycles=     7274469 branch_miss=   10679 cache_miss=   22470 cache_ref=     81343 items=       115 avg_time=   2052750 ns]
distinct_user_id<yyjson_insitu>/manual_time              2061640 ns      2117262 ns          340          10.746k           325.639M             931        50.784k    7.15571M               11.331           515.648       3.68983G          10.3038M                     16.316                     1.43994           59.2995k    11.1594k   631.515k       292.127M/s      211.5   37.7764k   7.25453M         11.4875    485.051/s 3.51882G/s      10.304M               16.3164                1.42036        115       55.7808k/s [BEST: throughput=  0.33 GB/s doc_throughput=   515 docs/s instructions=    10303781 cycles=     7155714 branch_miss=   10746 cache_miss=     931 cache_ref=     50784 items=       115 avg_time=   2061639 ns]
distinct_user_id<sajson>/manual_time                     3196803 ns      3250626 ns          219          42.261k           197.865M               0        49.105k    11.7819M              18.6566           313.318       3.69149G          26.5515M                    42.0441                     2.25358           36.0315k    42.3469k   631.515k       188.394M/s    87.5205   49.2756k   11.7917M         18.6721    312.813/s 3.68859G/s     26.5515M               42.0441                2.25171        115       35.9734k/s [BEST: throughput=  0.20 GB/s doc_throughput=   313 docs/s instructions=    26551510 cycles=    11781948 branch_miss=   42261 cache_miss=       0 cache_ref=     49105 items=       115 avg_time=   3196802 ns]
distinct_user_id<rapidjson>/manual_time                 12616467 ns     12673428 ns           56          66.352k           51.6057M          1.371k        58.954k    45.1488M              71.4929           81.7172       3.68944G          104.007M                    164.695                     2.30366           9.39748k    66.3393k   631.515k        47.736M/s   3.35086k   42.3877k   46.0516M         72.9223    79.2615/s 3.65011G/s     104.008M               164.696                2.25851        115       9.11507k/s [BEST: throughput=  0.05 GB/s doc_throughput=    81 docs/s instructions=   104007439 cycles=    45148808 branch_miss=   66352 cache_miss=    1371 cache_ref=     58954 items=       115 avg_time=  12616467 ns]
distinct_user_id<rapidjson_insitu>/manual_time           9392532 ns      9446467 ns           75          51.665k            67.404M              41        48.741k    34.5702M              54.7417           106.734       3.68981G          75.7251M                     119.91                     2.19048           12.2744k    51.8198k   631.515k       64.1211M/s   13.1818k   49.8454k   34.6474M         54.8639    106.468/s 3.68882G/s     75.7251M                119.91                2.18559        115       12.2438k/s [BEST: throughput=  0.07 GB/s doc_throughput=   106 docs/s instructions=    75725125 cycles=    34570174 branch_miss=   51665 cache_miss=      41 cache_ref=     48741 items=       115 avg_time=   9392532 ns]
distinct_user_id<nlohmann_json>/manual_time             57482667 ns     57549729 ns           12         380.631k           11.0323M         12.744k        263.51k    211.194M              334.424           17.4695       3.68946G          407.823M                    645.785                     1.93104             2.009k    387.808k   631.515k       10.4772M/s   10.6445k   378.264k   212.054M         335.786    17.3965/s 3.68901G/s     406.471M               643.644                1.91683        115        2.0006k/s [BEST: throughput=  0.01 GB/s doc_throughput=    17 docs/s instructions=   407822850 cycles=   211193857 branch_miss=  380631 cache_miss=   12744 cache_ref=    263510 items=       115 avg_time=  57482666 ns]
find_tweet<simdjson_dom>/manual_time                    21935330 ns     21966045 ns           32          15.781k           28.8032M               2       7.43515M    80.8983M              128.102           45.6097       3.68974G          74.2435M                    117.564                    0.917739            45.6097    15.7973k   631.515k       27.4561M/s    419.031   7.42974M   80.9226M          128.14    45.5886/s 3.68914G/s     74.2435M               117.564               0.917463          1        45.5886/s [BEST: throughput=  0.03 GB/s doc_throughput=    45 docs/s instructions=    74243533 cycles=    80898287 branch_miss=   15781 cache_miss=       2 cache_ref=   7435154 items=         1 avg_time=  21935329 ns]
find_tweet<simdjson_ondemand>/manual_time               16079763 ns     16111299 ns           44            3.23k           39.2889M              14       8.60137M    59.3054M              93.9098           62.2137       3.68961G           54.934M                    86.9877                     0.92629            62.2137    3.26011k   631.515k       37.4545M/s    717.886   8.60483M   59.3202M         93.9332      62.19/s 3.68912G/s      54.934M               86.9877               0.926059          1          62.19/s [BEST: throughput=  0.04 GB/s doc_throughput=    62 docs/s instructions=    54934016 cycles=    59305430 branch_miss=    3230 cache_miss=      14 cache_ref=   8601372 items=         1 avg_time=  16079762 ns]
find_tweet<yyjson>/manual_time                           2234188 ns      2266561 ns          321          13.016k           321.844M             506         71.68k    7.24402M              11.4709           509.637       3.69182G          10.0177M                     15.863                      1.3829            509.637    11.2763k   631.515k       269.565M/s   1.26259k   45.7559k   7.41049M         11.7345     447.59/s 3.31686G/s     10.0182M               15.8638                 1.3519          1         447.59/s [BEST: throughput=  0.32 GB/s doc_throughput=   509 docs/s instructions=    10017742 cycles=     7244016 branch_miss=   13016 cache_miss=     506 cache_ref=     71680 items=         1 avg_time=   2234188 ns]
find_tweet<yyjson_insitu>/manual_time                    2023457 ns      2054906 ns          346          10.613k           331.859M          1.841k        40.621k    7.02127M              11.1181           525.497       3.68966G          10.0174M                    15.8624                     1.42672            525.497    10.9274k   631.515k       297.639M/s    61.7052   27.4091k     7.114M          11.265    494.204/s 3.51577G/s     10.0176M               15.8628                1.40816          1        494.204/s [BEST: throughput=  0.33 GB/s doc_throughput=   525 docs/s instructions=    10017365 cycles=     7021275 branch_miss=   10613 cache_miss=    1841 cache_ref=     40621 items=         1 avg_time=   2023456 ns]
find_tweet<sajson>/manual_time                           3139734 ns      3171041 ns          222          42.168k           201.413M               0        38.963k    11.5743M              18.3279           318.936       3.69147G          26.1128M                    41.3495                     2.25609            318.936    42.2107k   631.515k       191.819M/s    13.7207   38.8354k   11.5835M         18.3424    318.498/s 3.68932G/s     26.1128M               41.3495                2.25431          1        318.498/s [BEST: throughput=  0.20 GB/s doc_throughput=   318 docs/s instructions=    26112801 cycles=    11574336 branch_miss=   42168 cache_miss=       0 cache_ref=     38963 items=         1 avg_time=   3139734 ns]
find_tweet<rapidjson>/manual_time                       12228894 ns     12258997 ns           57          64.994k           52.3701M          1.411k        50.936k    44.4909M              70.4511           82.9277       3.68953G          102.589M                    162.449                     2.30584            82.9277    65.2062k   631.515k       49.2489M/s   2.54612k   34.7609k   44.6115M          70.642    81.7735/s 3.64804G/s      102.59M                162.45                2.29963          1        81.7735/s [BEST: throughput=  0.05 GB/s doc_throughput=    82 docs/s instructions=   102589142 cycles=    44490948 branch_miss=   64994 cache_miss=    1411 cache_ref=     50936 items=         1 avg_time=  12228894 ns]
find_tweet<rapidjson_insitu>/manual_time                 9218541 ns      9249580 ns           76          51.335k           68.5947M         12.759k        40.267k    33.9706M              53.7922           108.619       3.68986G          74.3363M                    117.711                     2.18826            108.619    51.3539k   631.515k       65.3313M/s   11.8046k   40.1367k   34.0091M         53.8532    108.477/s  3.6892G/s     74.3362M               117.711                2.18578          1        108.477/s [BEST: throughput=  0.07 GB/s doc_throughput=   108 docs/s instructions=    74336287 cycles=    33970567 branch_miss=   51335 cache_miss=   12759 cache_ref=     40267 items=         1 avg_time=   9218540 ns]
find_tweet<nlohmann_json>/manual_time                   49832868 ns     49855496 ns           14         287.787k           12.7193M          8.826k       192.611k    183.178M              290.061            20.141       3.68939G          357.654M                    566.343                      1.9525             20.141    295.079k   631.515k       12.0856M/s     1086.5   292.373k   183.775M         291.007    20.0671/s 3.68783G/s     356.313M                564.22                1.93886          1        20.0671/s [BEST: throughput=  0.01 GB/s doc_throughput=    20 docs/s instructions=   357654236 cycles=   183177979 branch_miss=  287787 cache_miss=    8826 cache_ref=    192611 items=         1 avg_time=  49832868 ns]
top_tweet<simdjson_dom>/manual_time                     22071337 ns     22102201 ns           32          16.105k           28.6341M              10       7.51522M    81.3693M              128.848           45.3419       3.68944G          75.0759M                    118.882                    0.922656            45.3419    16.1331k   631.515k        27.287M/s   2.66319k   7.52905M   81.4156M         128.921    45.3076/s 3.68875G/s     75.0759M               118.882               0.922132          1        45.3076/s [BEST: throughput=  0.03 GB/s doc_throughput=    45 docs/s instructions=    75075868 cycles=    81369325 branch_miss=   16105 cache_miss=      10 cache_ref=   7515221 items=         1 avg_time=  22071336 ns]
top_tweet<simdjson_ondemand>/manual_time                17081008 ns     17108070 ns           41           7.664k           36.9971M               2       7.33685M    62.9815M              99.7308           58.5847       3.68975G          62.2624M                    98.5921                    0.988582            58.5847    7.78522k   631.515k        35.259M/s    142.171   7.35142M    63.001M         99.7617    58.5446/s 3.68837G/s     62.2624M               98.5921               0.988276          1        58.5446/s [BEST: throughput=  0.04 GB/s doc_throughput=    58 docs/s instructions=    62262379 cycles=    62981475 branch_miss=    7664 cache_miss=       2 cache_ref=   7336852 items=         1 avg_time=  17081008 ns]
top_tweet<simdjson_ondemand_forward_only>/manual_time   17075130 ns     17106135 ns           41           7.757k           37.0038M               0       7.33406M    62.9696M               99.712           58.5952       3.68972G           63.043M                    99.8283                     1.00117            58.5952    7.77978k   631.515k       35.2712M/s    1063.56   7.32138M   62.9941M         99.7508    58.5647/s 3.68923G/s      63.043M               99.8283                1.00078          1        58.5647/s [BEST: throughput=  0.04 GB/s doc_throughput=    58 docs/s instructions=    63043038 cycles=    62969643 branch_miss=    7757 cache_miss=       0 cache_ref=   7334056 items=         1 avg_time=  17075129 ns]
top_tweet<yyjson>/manual_time                            2246735 ns      2278338 ns          320          12.883k           318.512M          5.577k        79.014k    7.31959M              11.5905           504.362       3.69172G          10.1204M                    16.0255                     1.38264            504.362    11.3711k   631.515k        268.06M/s   1.22314k   52.5027k   7.45334M         11.8023     445.09/s 3.31741G/s      10.121M               16.0266                1.35792          1         445.09/s [BEST: throughput=  0.32 GB/s doc_throughput=   504 docs/s instructions=    10120363 cycles=     7319591 branch_miss=   12883 cache_miss=    5577 cache_ref=     79014 items=         1 avg_time=   2246734 ns]
top_tweet<yyjson_insitu>/manual_time                     2039770 ns      2070437 ns          344          10.562k           329.385M             861        46.941k    7.07398M              11.2016           521.579       3.68964G          10.1202M                    16.0253                     1.43062            521.579     11.127k   631.515k       295.259M/s    186.311    34.025k   7.17293M         11.3583    490.251/s 3.51654G/s     10.1204M               16.0257                1.41092          1        490.251/s [BEST: throughput=  0.33 GB/s doc_throughput=   521 docs/s instructions=    10120193 cycles=     7073981 branch_miss=   10562 cache_miss=     861 cache_ref=     46941 items=         1 avg_time=   2039769 ns]
top_tweet<sajson>/manual_time                            3170978 ns      3201991 ns          221          42.067k           199.477M               0        44.784k    11.6867M              18.5057            315.87       3.69146G          26.3459M                    41.7185                     2.25436             315.87    42.2743k   631.515k       189.929M/s    14.8914   44.8686k   11.6986M         18.5246     315.36/s 3.68927G/s     26.3459M               41.7185                2.25205          1         315.36/s [BEST: throughput=  0.20 GB/s doc_throughput=   315 docs/s instructions=    26345859 cycles=    11686650 branch_miss=   42067 cache_miss=       0 cache_ref=     44784 items=         1 avg_time=   3170977 ns]
top_tweet<rapidjson>/manual_time                        12355699 ns     12388010 ns           57          66.735k           51.8285M         12.361k        55.224k    44.9579M              71.1905           82.0701        3.6897G          103.592M                    164.037                     2.30419            82.0701    66.7151k   631.515k       48.7435M/s   2.92828k   38.5361k    45.093M         71.4045    80.9343/s 3.64957G/s     103.592M               164.038                 2.2973          1        80.9343/s [BEST: throughput=  0.05 GB/s doc_throughput=    82 docs/s instructions=   103591691 cycles=    44957868 branch_miss=   66735 cache_miss=   12361 cache_ref=     55224 items=         1 avg_time=  12355699 ns]
top_tweet<rapidjson_insitu>/manual_time                  9336250 ns      9364677 ns           75          51.895k           67.7756M              23        44.419k    34.3814M              54.4427           107.322       3.68988G          75.3139M                    119.259                     2.19054            107.322    51.9585k   631.515k       64.5077M/s   12.4471k   45.5448k   34.4343M         54.5265    107.109/s 3.68824G/s     75.3141M               119.259                2.18718          1        107.109/s [BEST: throughput=  0.07 GB/s doc_throughput=   107 docs/s instructions=    75313901 cycles=    34381362 branch_miss=   51895 cache_miss=      23 cache_ref=     44419 items=         1 avg_time=   9336249 ns]
top_tweet<nlohmann_json>/manual_time                    63561848 ns     63597215 ns           11         482.105k           9.95019M             885       456.329k    234.139M              370.758           15.7561       3.68911G          449.131M                    711.196                     1.91822            15.7561    481.426k   631.515k       9.47518M/s   12.6691k   465.625k   234.458M         371.262    15.7327/s 3.68865G/s     449.143M               711.215                1.91567          1        15.7327/s [BEST: throughput=  0.01 GB/s doc_throughput=    15 docs/s instructions=   449131187 cycles=   234139073 branch_miss=  482105 cache_miss=     885 cache_ref=    456329 items=         1 avg_time=  63561848 ns]
