run_benchmark: v0.8.0 /home/jkeiser/simdjson_benchmark_results/v0.8.0/skylake-gcc10.2-native.json -DCMAKE_CXX_FLAGS=-march=native
git reset --hard v0.8.0
HEAD is now at c96ff018 Version 0.8.
cmake -DCMAKE_CXX_FLAGS=-march=native ..
-- The CXX compiler identification is GNU 10.2.0
-- The C compiler identification is GNU 10.2.0
-- Check for working CXX compiler: /usr/bin/g++-10
-- Check for working CXX compiler: /usr/bin/g++-10 -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Check for working C compiler: /usr/bin/gcc-10
-- Check for working C compiler: /usr/bin/gcc-10 -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- No build type selected, default to Release
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed
-- Check if compiler accepts -pthread
-- Check if compiler accepts -pthread - yes
-- Found Threads: TRUE  
-- Looking for fork
-- Looking for fork - found
-- Looking for wait
-- Looking for wait - found
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- Found Git: /usr/bin/git (found version "2.27.0") 
-- git Version: v0.2.1-c96ff018
-- Version: 0.2.1
-- Performing Test HAVE_CXX_FLAG_STD_CXX11
-- Performing Test HAVE_CXX_FLAG_STD_CXX11 - Success
-- Performing Test HAVE_CXX_FLAG_WALL
-- Performing Test HAVE_CXX_FLAG_WALL - Success
-- Performing Test HAVE_CXX_FLAG_WEXTRA
-- Performing Test HAVE_CXX_FLAG_WEXTRA - Success
-- Performing Test HAVE_CXX_FLAG_WSHADOW
-- Performing Test HAVE_CXX_FLAG_WSHADOW - Success
-- Performing Test HAVE_CXX_FLAG_WERROR
-- Performing Test HAVE_CXX_FLAG_WERROR - Success
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32 - Failed
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED - Success
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WD654
-- Performing Test HAVE_CXX_FLAG_WD654 - Failed
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY - Failed
-- Performing Test HAVE_CXX_FLAG_COVERAGE
-- Performing Test HAVE_CXX_FLAG_COVERAGE - Success
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Performing Test USE_BOOST_JSON
-- Performing Test USE_BOOST_JSON - Failed
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Found Python3: /usr/bin/python3.8 (found version "3.8.6") found components: Interpreter 
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
make[1]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[2]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
Scanning dependencies of target benchmark
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[  0%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/benchmark.cc.o
[ 10%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o
[ 10%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/benchmark_name.cc.o
[ 10%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/benchmark_register.cc.o
[ 20%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/benchmark_runner.cc.o
[ 20%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/colorprint.cc.o
[ 30%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/commandlineflags.cc.o
[ 30%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/complexity.cc.o
[ 30%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/console_reporter.cc.o
[ 40%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/counter.cc.o
[ 40%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/csv_reporter.cc.o
[ 50%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/json_reporter.cc.o
[ 50%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/reporter.cc.o
[ 60%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/sleep.cc.o
[ 60%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/statistics.cc.o
[ 60%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/string_util.cc.o
[ 70%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/sysinfo.cc.o
[ 70%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/timers.cc.o
[ 80%] Linking CXX static library libbenchmark.a
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 80%] Built target benchmark
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
Scanning dependencies of target generated-data
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 80%] Generating utf-8.json, escape.json, 0-structurals.json, 7-structurals.json, 15-structurals.json, 23-structurals.json
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-miss.json ...
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 80%] Built target generated-data
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
Scanning dependencies of target simdjson
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 80%] Building CXX object src/CMakeFiles/simdjson.dir/simdjson.cpp.o
[ 80%] Linking CXX shared library ../libsimdjson.so
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 80%] Built target simdjson
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
Scanning dependencies of target yyjson
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 80%] Building C object dependencies/CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o
[ 90%] Linking C static library libyyjson.a
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 90%] Built target yyjson
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
Scanning dependencies of target bench_ondemand
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[100%] Building CXX object benchmark/CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o
[100%] Linking CXX executable bench_ondemand
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[100%] Built target bench_ondemand
make[2]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[1]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.8.0/skylake-gcc10.2-native.json --benchmark_out_format=json
2021-01-23 04:19:01
Running benchmark/bench_ondemand
Run on (4 X 4000 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 256 KiB (x4)
  L3 Unified 8192 KiB (x1)
Load Average: 1.00, 0.93, 0.60
simdjson::dom implementation:      haswell
simdjson::ondemand implementation: haswell

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                  259174 ns       287422 ns         2626           3.676k           2.44964G               0        86.657k    951.945k               1.5074          3.87899k       3.69259G          2.91501M                     4.6159                     3.06217           387.899k    3.81865k   631.515k        2.2693G/s     1.4505   86.8766k    956.54k         1.51468   3.85841k/s 3.69072G/s     2.91501M                4.6159                3.04745        100       385.841k/s [BEST: throughput=  2.45 GB/s doc_throughput=  3878 docs/s instructions=     2915013 cycles=      951945 branch_miss=    3676 cache_miss=       0 cache_ref=     86657 items=       100 avg_time=    259174 ns]
partial_tweets<simdjson_ondemand>/manual_time             188503 ns       216548 ns         3712           1.662k           3.37645G               0        54.804k    690.732k              1.09377          5.34659k       3.69306G           2.1433M                     3.3939                     3.10294           534.659k    1.81106k   631.515k       3.12009G/s  0.0320582    54.773k   695.791k         1.10178   5.30497k/s 3.69115G/s      2.1433M                3.3939                3.08038        100       530.497k/s [BEST: throughput=  3.38 GB/s doc_throughput=  5346 docs/s instructions=     2143300 cycles=      690732 branch_miss=    1662 cache_miss=       0 cache_ref=     54804 items=       100 avg_time=    188502 ns]
partial_tweets<yyjson>/manual_time                        692195 ns       722466 ns         1015           9.848k           1.58883G             255        74.493k     1.4677M              2.32409           2.5159k       3.69258G          2.90845M                    4.60552                     1.98164            251.59k    7.72179k   631.515k       870.072M/s    885.259   49.1281k   1.69227M          2.6797   1.44468k/s 2.44479G/s     2.90915M               4.60661                1.71908        100       144.468k/s [BEST: throughput=  1.59 GB/s doc_throughput=  2515 docs/s instructions=     2908453 cycles=     1467699 branch_miss=    9848 cache_miss=     255 cache_ref=     74493 items=       100 avg_time=    692194 ns]
partial_tweets<yyjson_insitu>/manual_time                 479276 ns       508202 ns         1463           7.094k           1.76967G             728        45.464k    1.30972M              2.07394          2.80226k       3.67018G          2.90834M                    4.60535                     2.22058           280.226k    7.63338k   631.515k       1.22715G/s    148.358    31.876k   1.42465M         2.25592   2.08648k/s  2.9725G/s     2.90861M               4.60576                2.04163        100       208.648k/s [BEST: throughput=  1.77 GB/s doc_throughput=  2802 docs/s instructions=     2908345 cycles=     1309722 branch_miss=    7094 cache_miss=     728 cache_ref=     45464 items=       100 avg_time=    479275 ns]
partial_tweets<sajson>/manual_time                        555431 ns       583722 ns         1261          10.047k           1.14925G               0         45.72k    2.02873M              3.21249          1.81983k       3.69194G          6.04844M                    9.57767                     2.98139           181.983k    10.6568k   631.515k       1084.31M/s    1.37589   45.7749k   2.04958M          3.2455    1.8004k/s 3.69008G/s     6.04844M               9.57767                2.95106        100        180.04k/s [BEST: throughput=  1.15 GB/s doc_throughput=  1819 docs/s instructions=     6048442 cycles=     2028734 branch_miss=   10047 cache_miss=       0 cache_ref=     45720 items=       100 avg_time=    555430 ns]
partial_tweets<rapidjson>/manual_time                    1642705 ns      1671431 ns          427          28.621k           438.205M          1.294k        51.677k    5.32007M              8.42429           693.896       3.69157G          13.1236M                    20.7812                     2.46681           69.3896k    28.3509k   631.515k       366.627M/s    505.951   32.5743k   5.47694M          8.6727    608.752/s  3.3341G/s     13.1242M                20.782                2.39626        100       60.8752k/s [BEST: throughput=  0.44 GB/s doc_throughput=   693 docs/s instructions=    13123611 cycles=     5320067 branch_miss=   28621 cache_miss=    1294 cache_ref=     51677 items=       100 avg_time=   1642705 ns]
partial_tweets<rapidjson_insitu>/manual_time             1046557 ns      1075035 ns          672          26.282k           679.754M              70        43.279k    3.42973M              5.43095           1076.39       3.69171G          9.82425M                    15.5566                     2.86444           107.639k    25.9662k   631.515k       575.468M/s    214.158   33.5758k   3.51788M         5.57055    955.514/s 3.36139G/s     9.82462M               15.5572                2.79277        100       95.5514k/s [BEST: throughput=  0.68 GB/s doc_throughput=  1076 docs/s instructions=     9824253 cycles=     3429729 branch_miss=   26282 cache_miss=      70 cache_ref=     43279 items=       100 avg_time=   1046557 ns]
partial_tweets<nlohmann_json>/manual_time                7735647 ns      7770469 ns           91         135.584k           84.3586M               2       223.078k    27.6198M              43.7358           133.581       3.68949G          70.7671M                    112.059                     2.56218           13.3581k    148.231k   631.515k       77.8551M/s    70.2747   360.829k   28.5395M         45.1921    129.272/s 3.68935G/s     71.3836M               113.035                2.50122        100       12.9272k/s [BEST: throughput=  0.08 GB/s doc_throughput=   133 docs/s instructions=    70767076 cycles=    27619817 branch_miss=  135584 cache_miss=       2 cache_ref=    223078 items=       100 avg_time=   7735647 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                  97981139 ns    101364401 ns            7         960.476k           469.991M         10.916M       15.2035M     361.06M              7.84935           10.2175       3.68912G          981.675M                    21.3413                     2.71887           10.2175M    960.678k   45.9988M       447.717M/s   10.9683M   15.2105M   361.433M         7.85744     10.206/s  3.6888G/s     981.675M               21.3413                2.71607      1000k        10.206M/s [BEST: throughput=  0.47 GB/s doc_throughput=    10 docs/s instructions=   981674957 cycles=   361060412 branch_miss=  960476 cache_miss=10916024 cache_ref=  15203530 items=   1000000 avg_time=  97981139 ns]
large_random<simdjson_ondemand>/manual_time             60531412 ns     63878798 ns           12         881.285k           760.951M         5.7337M         7.893M    222.988M              4.84769           16.5429       3.68885G          644.053M                    14.0015                     2.88829           16.5429M    885.685k   45.9988M       724.712M/s   5.68829M   7.89202M   223.295M         4.85437    16.5203/s 3.68891G/s     644.053M               14.0015                2.88431      1000k       16.5203M/s [BEST: throughput=  0.76 GB/s doc_throughput=    16 docs/s instructions=   644052609 cycles=   222987845 branch_miss=  881285 cache_miss= 5733701 cache_ref=   7892998 items=   1000000 avg_time=  60531412 ns]
large_random<simdjson_ondemand_unordered>/manual_time   61946403 ns     65298141 ns           11         872.099k           742.937M        5.64185M       7.88656M     228.41M              4.96557           16.1512       3.68911G          644.053M                    14.0015                     2.81972           16.1512M     872.13k   45.9988M       708.158M/s   5.68511M   7.88945M   228.513M         4.96781     16.143/s 3.68888G/s     644.053M               14.0015                2.81845      1000k        16.143M/s [BEST: throughput=  0.74 GB/s doc_throughput=    16 docs/s instructions=   644052614 cycles=   228410299 branch_miss=  872099 cache_miss= 5641855 cache_ref=   7886561 items=   1000000 avg_time=  61946402 ns]
large_random<yyjson>/manual_time                       127467989 ns    130883711 ns            5         660.321k           361.463M         5.8317M       8.96073M    350.688M              7.62385           7.85811       2.75574G          942.149M                    20.4821                     2.68657           7.85811M     660.78k   45.9988M       344.148M/s   5.83273M   8.95629M   350.747M         7.62513    7.84511/s 2.75165G/s     942.149M               20.4821                2.68613      1000k       7.84511M/s [BEST: throughput=  0.36 GB/s doc_throughput=     7 docs/s instructions=   942149408 cycles=   350687933 branch_miss=  660321 cache_miss= 5831703 cache_ref=   8960727 items=   1000000 avg_time= 127467989 ns]
large_random<yyjson_insitu>/manual_time                109351040 ns    112765825 ns            6          658.36k           420.768M        4.97983M       7.62132M    318.114M              6.91571           9.14738       2.90991G          936.029M                     20.349                     2.94243           9.14738M    661.109k   45.9988M       401.165M/s   4.98546M   7.63059M   318.311M            6.92    9.14486/s 2.91091G/s     936.029M                20.349                2.94061      1000k       9.14486M/s [BEST: throughput=  0.42 GB/s doc_throughput=     9 docs/s instructions=   936028645 cycles=   318114102 branch_miss=  658360 cache_miss= 4979829 cache_ref=   7621322 items=   1000000 avg_time= 109351040 ns]
large_random<sajson>/manual_time                        90113742 ns     93510115 ns            8         581.603k            511.12M        8.38383M       12.0142M    331.999M              7.21756           11.1116       3.68904G          1066.99M                    23.1961                     3.21384           11.1116M    581.708k   45.9988M       486.805M/s   8.43035M    12.095M   332.435M         7.22703    11.0971/s 3.68905G/s     1066.99M               23.1961                3.20963      1000k       11.0971M/s [BEST: throughput=  0.51 GB/s doc_throughput=    11 docs/s instructions=  1066991822 cycles=   331999141 branch_miss=  581603 cache_miss= 8383826 cache_ref=  12014186 items=   1000000 avg_time=  90113742 ns]
large_random<rapidjson>/manual_time                    177759875 ns    181176216 ns            4         601.005k           269.752M        6.98711M       10.6829M    571.454M              12.4232           5.86434        3.3512G          1.67314G                    36.3736                     2.92786           5.86434M    601.572k   45.9988M       246.782M/s   6.42309M   9.94837M   577.231M         12.5488    5.62557/s 3.24725G/s     1.67315G               36.3738                2.89858      1000k       5.62557M/s [BEST: throughput=  0.27 GB/s doc_throughput=     5 docs/s instructions=  1673139670 cycles=   571454205 branch_miss=  601005 cache_miss= 6987109 cache_ref=  10682881 items=   1000000 avg_time= 177759875 ns]
large_random<rapidjson_lossless>/manual_time           204816404 ns    208228008 ns            4         589.995k             232.4M        6.98416M       10.6573M    672.571M              14.6215            5.0523       3.39803G           2.0601G                    44.7861                     3.06303            5.0523M    588.635k   45.9988M       214.181M/s   6.41757M    9.9487M   677.046M         14.7188    4.88242/s 3.30562G/s     2.06011G               44.7863                 3.0428      1000k       4.88242M/s [BEST: throughput=  0.23 GB/s doc_throughput=     5 docs/s instructions=  2060104885 cycles=   672570738 branch_miss=  589995 cache_miss= 6984161 cache_ref=  10657346 items=   1000000 avg_time= 204816404 ns]
large_random<rapidjson_insitu>/manual_time             156391539 ns    159802714 ns            5         602.504k           309.472M        8.05275M       12.2131M    490.754M              10.6688           6.72784       3.30171G          1.50514G                    32.7213                       3.067           6.72784M    604.946k   45.9988M         280.5M/s   7.47979M    11.447M   496.917M         10.8028    6.39421/s 3.17739G/s     1.50515G               32.7215                3.02898      1000k       6.39421M/s [BEST: throughput=  0.31 GB/s doc_throughput=     6 docs/s instructions=  1505139594 cycles=   490753787 branch_miss=  602504 cache_miss= 8052748 cache_ref=  12213085 items=   1000000 avg_time= 156391538 ns]
large_random<nlohmann_json>/manual_time               1223087552 ns   1226516514 ns            1         4.53367M           37.6087M        46.9353M       60.6256M    4.49985G              97.8253          0.817603       3.67909G          11.9464G                     259.71                     2.65484           817.603k    4.53367M   45.9988M       35.8665M/s   46.9353M   60.6256M   4.49985G         97.8253   0.817603/s 3.67909G/s     11.9464G                259.71                2.65484      1000k       817.603k/s [BEST: throughput=  0.04 GB/s doc_throughput=     0 docs/s instructions= 11946361225 cycles=  4499845734 branch_miss= 4533669 cache_miss=46935308 cache_ref=  60625571 items=   1000000 avg_time=1223087552 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                        89027440 ns     99179131 ns            8         440.503k           1.54375G          15.77M       22.1767M     328.12M              2.38972           11.2432       3.68913G          938.041M                     6.8318                     2.85883           5.89469M    440.532k   137.305M       1.43636G/s   15.8145M   22.1096M   328.416M         2.39187    11.2325/s 3.68893G/s     938.041M                6.8318                2.85626   524.288k       5.88906M/s [BEST: throughput=  1.54 GB/s doc_throughput=    11 docs/s instructions=   938040622 cycles=   328120195 branch_miss=  440503 cache_miss=15770019 cache_ref=  22176737 items=    524288 avg_time=  89027439 ns]
kostya<simdjson_ondemand>/manual_time                   61360222 ns     71451597 ns           11         532.288k           2.23978G        10.1096M       13.8053M    226.136M              1.64696           16.3124       3.68883G          676.617M                    4.92784                     2.99208           8.55242M    532.866k   137.305M       2.08401G/s   10.1357M    13.841M   226.352M         1.64853    16.2972/s 3.68891G/s     676.617M               4.92784                2.98922   524.288k       8.54443M/s [BEST: throughput=  2.24 GB/s doc_throughput=    16 docs/s instructions=   676617059 cycles=   226135704 branch_miss=  532288 cache_miss=10109629 cache_ref=  13805312 items=    524288 avg_time=  61360222 ns]
kostya<yyjson>/manual_time                             205210405 ns    215393067 ns            3         414.891k            669.34M        11.2829M       16.0604M    560.152M              4.07962           4.87484       2.73065G          984.045M                    7.16686                     1.75675           2.55582M     414.56k   137.305M       638.098M/s    11.282M   16.0865M   559.982M         4.07838    4.87305/s 2.72882G/s     984.045M               7.16686                1.75728   524.288k       2.55488M/s [BEST: throughput=  0.67 GB/s doc_throughput=     4 docs/s instructions=   984045268 cycles=   560151949 branch_miss=  414891 cache_miss=11282882 cache_ref=  16060407 items=    524288 avg_time= 205210405 ns]
kostya<yyjson_insitu>/manual_time                      151379721 ns    161565972 ns            5         415.188k           907.311M        8.77953M       12.2294M    463.765M              3.37763             6.608       3.06456G          965.775M                     7.0338                     2.08247           3.46449M    415.326k   137.305M       865.005M/s   8.77993M   12.2391M    463.77M         3.37766     6.6059/s 3.06362G/s     965.775M                7.0338                2.08245   524.288k        3.4634M/s [BEST: throughput=  0.91 GB/s doc_throughput=     6 docs/s instructions=   965775272 cycles=   463765322 branch_miss=  415188 cache_miss= 8779535 cache_ref=  12229407 items=    524288 avg_time= 151379720 ns]
kostya<sajson>/manual_time                             132038837 ns    142222005 ns            5         358.827k           1040.89M        12.3901M       17.1514M    486.645M              3.54426           7.58084       3.68918G          1.60304G                    11.6751                     3.29407           3.97454M    359.108k   137.305M        991.71M/s   12.4207M   17.1361M   487.085M         3.54747    7.57353/s 3.68895G/s     1.60304G               11.6751                3.29109   524.288k       3.97071M/s [BEST: throughput=  1.04 GB/s doc_throughput=     7 docs/s instructions=  1603042688 cycles=   486645088 branch_miss=  358827 cache_miss=12390095 cache_ref=  17151376 items=    524288 avg_time= 132038837 ns]
kostya<rapidjson>/manual_time                          253543457 ns    263747473 ns            3         1001.02k           549.204M        8.15822M       12.0252M    841.381M              6.12783           3.99988       3.36542G          2.29774G                    16.7346                     2.73091           2.09709M     1001.8k   137.305M       516.457M/s   7.84633M   11.6123M   844.922M         6.15361     3.9441/s 3.33245G/s     2.29774G               16.7346                2.71947   524.288k       2.06784M/s [BEST: throughput=  0.55 GB/s doc_throughput=     3 docs/s instructions=  2297738777 cycles=   841381032 branch_miss= 1001022 cache_miss= 8158216 cache_ref=  12025245 items=    524288 avg_time= 253543457 ns]
kostya<rapidjson_lossless>/manual_time                 265924291 ns    276138605 ns            3         946.145k           522.884M        8.16018M       12.0524M    887.943M              6.46694           3.80819       3.38146G          2.51583G                     18.323                     2.83333           1.99659M    946.265k   137.305M       492.412M/s   7.84707M   11.5868M   890.847M         6.48809    3.76047/s    3.35G/s     2.51584G                18.323                 2.8241   524.288k       1.97157M/s [BEST: throughput=  0.52 GB/s doc_throughput=     3 docs/s instructions=  2515833691 cycles=   887942839 branch_miss=  946145 cache_miss= 8160175 cache_ref=  12052438 items=    524288 avg_time= 265924291 ns]
kostya<rapidjson_insitu>/manual_time                   229621949 ns    239810655 ns            3         1067.03k           606.994M        11.1597M         15.56M    753.565M              5.48826           4.42077       3.33134G            2.048G                    14.9157                     2.71775           2.31776M    1061.59k   137.305M        570.26M/s   10.8531M   15.2133M   756.782M         5.51169    4.35498/s 3.29578G/s     2.04801G               14.9157                 2.7062   524.288k       2.28327M/s [BEST: throughput=  0.61 GB/s doc_throughput=     4 docs/s instructions=  2048003746 cycles=   753565497 branch_miss= 1067030 cache_miss=11159689 cache_ref=  15559952 items=    524288 avg_time= 229621949 ns]
kostya<nlohmann_json>/manual_time                     1600376341 ns   1610593129 ns            1         4.82341M           85.7954M        69.5048M       86.9066M    5.90431G              43.0015          0.624853       3.68933G          15.1309G                    110.199                     2.56268           327.603k    4.82341M   137.305M       81.8209M/s   69.5048M   86.9066M   5.90431G         43.0015   0.624853/s 3.68933G/s     15.1309G               110.199                2.56268   524.288k       327.603k/s [BEST: throughput=  0.09 GB/s doc_throughput=     0 docs/s instructions= 15130855565 cycles=  5904313899 branch_miss= 4823411 cache_miss=69504776 cache_ref=  86906644 items=    524288 avg_time=1600376341 ns]
distinct_user_id<simdjson_dom>/manual_time                262238 ns       292689 ns         2671           3.764k           2.42448G               0        88.723k    961.824k              1.52304          3.83915k       3.69259G          2.85594M                    4.52236                     2.96929           441.503k    3.95508k   631.515k       2.24279G/s   0.729315   88.6895k     967.8k          1.5325   3.81333k/s 3.69054G/s     2.85594M               4.52236                2.95096        115       438.533k/s [BEST: throughput=  2.42 GB/s doc_throughput=  3839 docs/s instructions=     2855937 cycles=      961824 branch_miss=    3764 cache_miss=       0 cache_ref=     88723 items=       115 avg_time=    262237 ns]
distinct_user_id<simdjson_ondemand>/manual_time           183755 ns       213278 ns         3810           1.739k           3.45878G               0        53.422k    674.329k               1.0678          5.47696k       3.69327G          2.10219M                    3.32881                     3.11746           629.851k    1.87717k   631.515k        3.2007G/s  0.0593176   53.4379k   678.244k           1.074   5.44203k/s 3.69102G/s     2.10219M               3.32881                3.09947        115       625.833k/s [BEST: throughput=  3.46 GB/s doc_throughput=  5476 docs/s instructions=     2102194 cycles=      674329 branch_miss=    1739 cache_miss=       0 cache_ref=     53422 items=       115 avg_time=    183755 ns]
distinct_user_id<yyjson>/manual_time                      599370 ns       632581 ns         1000           6.921k            1.6573G         21.754k        74.221k    1.40689M               2.2278          2.62432k       3.69213G          2.87509M                    4.55268                     2.04357           301.797k    7.61502k   631.515k       1004.82M/s   7.46172k    55.357k   1.61945M         2.56439   1.66842k/s 2.70192G/s     2.87528M               4.55299                1.77547        115       191.868k/s [BEST: throughput=  1.66 GB/s doc_throughput=  2624 docs/s instructions=     2875087 cycles=     1406891 branch_miss=    6921 cache_miss=   21754 cache_ref=     74221 items=       115 avg_time=    599370 ns]
distinct_user_id<yyjson_insitu>/manual_time               473209 ns       505755 ns         1477           7.156k           1.79226G             285        43.902k    1.29762M              2.05477          2.83804k        3.6827G          2.87457M                    4.55186                     2.21526           326.374k    7.69136k   631.515k       1.24289G/s    44.8944   30.3246k   1.41267M         2.23696   2.11323k/s 2.98531G/s     2.87483M               4.55228                2.03503        115       243.022k/s [BEST: throughput=  1.79 GB/s doc_throughput=  2838 docs/s instructions=     2874570 cycles=     1297621 branch_miss=    7156 cache_miss=     285 cache_ref=     43902 items=       115 avg_time=    473208 ns]
distinct_user_id<sajson>/manual_time                      551626 ns       582203 ns         1267          10.228k           1.15446G               0        45.292k    2.01955M              3.19794          1.82808k       3.69191G          5.98101M                    9.47089                     2.96155            210.23k    10.6934k   631.515k       1091.79M/s   0.625888    45.318k   2.03547M         3.22316   1.81282k/s 3.68995G/s     5.98101M               9.47089                2.93838        115       208.474k/s [BEST: throughput=  1.15 GB/s doc_throughput=  1828 docs/s instructions=     5981008 cycles=     2019550 branch_miss=   10228 cache_miss=       0 cache_ref=     45292 items=       115 avg_time=    551626 ns]
distinct_user_id<rapidjson>/manual_time                  1628626 ns      1659131 ns          433          28.529k           440.343M             215        51.913k    5.29438M              8.38362           697.281       3.69167G          13.0657M                    20.6895                     2.46784           80.1873k    28.2357k   631.515k       369.796M/s    950.187   33.6795k    5.4556M         8.63891    614.014/s 3.34982G/s     13.0666M               20.6909                2.39509        115       70.6116k/s [BEST: throughput=  0.44 GB/s doc_throughput=   697 docs/s instructions=    13065703 cycles=     5294379 branch_miss=   28529 cache_miss=     215 cache_ref=     51913 items=       115 avg_time=   1628626 ns]
distinct_user_id<rapidjson_insitu>/manual_time           1024459 ns      1054201 ns          688          25.919k            684.95M              62         42.95k    3.40366M              5.38968           1084.61       3.69166G          9.77665M                    15.4813                     2.87239           124.731k     25.992k   631.515k       587.881M/s   1.87293k   35.0106k   3.49108M          5.5281    976.125/s 3.40773G/s     9.77698M               15.4818                2.80056        115       112.254k/s [BEST: throughput=  0.68 GB/s doc_throughput=  1084 docs/s instructions=     9776646 cycles=     3403661 branch_miss=   25919 cache_miss=      62 cache_ref=     42950 items=       115 avg_time=   1024458 ns]
distinct_user_id<nlohmann_json>/manual_time              7028982 ns      7063128 ns          100         113.955k            91.464M              21        215.74k    25.4797M              40.3469           144.833       3.69029G          66.3074M                    104.997                     2.60237           16.6558k    126.451k   631.515k       85.6823M/s       32.5   330.272k   25.9332M          41.065    142.268/s 3.68946G/s     65.0416M               102.993                2.50805        115       16.3608k/s [BEST: throughput=  0.09 GB/s doc_throughput=   144 docs/s instructions=    66307427 cycles=    25479653 branch_miss=  113955 cache_miss=      21 cache_ref=    215740 items=       115 avg_time=   7028981 ns]
find_tweet<simdjson_dom>/manual_time                      250199 ns       278936 ns         2798           3.452k           2.54303G               0        78.492k    916.972k              1.45202          4.02687k       3.69252G           2.7749M                    4.39403                     3.02615           4.02687k    3.65584k   631.515k       2.35071G/s    0.15654   78.5202k   923.431k         1.46225   3.99682k/s 3.69079G/s      2.7749M               4.39403                3.00499          1       3.99682k/s [BEST: throughput=  2.54 GB/s doc_throughput=  4026 docs/s instructions=     2774898 cycles=      916972 branch_miss=    3452 cache_miss=       0 cache_ref=     78492 items=         1 avg_time=    250198 ns]
find_tweet<simdjson_ondemand>/manual_time                 118733 ns       146802 ns         5887              687           5.33974G               0        30.713k    436.831k             0.691719          8.45544k        3.6936G          1.47887M                    2.34178                     3.38545           8.45544k      734.81   631.515k        4.9535G/s  0.0293868   30.7941k   438.376k        0.694165   8.42225k/s 3.69211G/s     1.47887M               2.34178                3.37352          1       8.42225k/s [BEST: throughput=  5.34 GB/s doc_throughput=  8455 docs/s instructions=     1478869 cycles=      436831 branch_miss=     687 cache_miss=       0 cache_ref=     30713 items=         1 avg_time=    118733 ns]
find_tweet<yyjson>/manual_time                            663957 ns       694264 ns         1166           9.873k            1.6297G             206        64.431k    1.43083M              2.26571          2.58061k       3.69241G          2.82412M                    4.47198                     1.97377           2.58061k    7.61823k   631.515k       907.076M/s    1035.07    39.368k   1.64966M         2.61222   1.50612k/s 2.48458G/s     2.82482M               4.47308                1.71237          1       1.50612k/s [BEST: throughput=  1.63 GB/s doc_throughput=  2580 docs/s instructions=     2824125 cycles=     1430827 branch_miss=    9873 cache_miss=     206 cache_ref=     64431 items=         1 avg_time=    663957 ns]
find_tweet<yyjson_insitu>/manual_time                     463248 ns       493187 ns         1511           7.105k           1.83187G             458        35.878k    1.26947M               2.0102          2.90075k       3.68242G          2.82402M                    4.47181                     2.22456           2.90075k    7.42995k   631.515k       1.26961G/s    15.4434   21.9414k   1.37653M         2.17973   2.15867k/s 2.97148G/s     2.82428M               4.47223                2.05174          1       2.15867k/s [BEST: throughput=  1.83 GB/s doc_throughput=  2900 docs/s instructions=     2824016 cycles=     1269470 branch_miss=    7105 cache_miss=     458 cache_ref=     35878 items=         1 avg_time=    463247 ns]
find_tweet<sajson>/manual_time                            538435 ns       567975 ns         1300           9.906k           1.18302G               0        35.863k    1.97083M               3.1208          1.87331k       3.69197G          5.88886M                    9.32498                     2.98801           1.87331k    10.3674k   631.515k       1118.54M/s   0.876923   35.8969k    1.9869M         3.14625   1.85723k/s 3.69015G/s     5.88886M               9.32498                2.96384          1       1.85723k/s [BEST: throughput=  1.18 GB/s doc_throughput=  1873 docs/s instructions=     5888863 cycles=     1970831 branch_miss=    9906 cache_miss=       0 cache_ref=     35863 items=         1 avg_time=    538434 ns]
find_tweet<rapidjson>/manual_time                        1621035 ns      1649852 ns          435          28.358k           441.213M         14.797k        47.107k    5.28377M              8.36681           698.658       3.69154G          12.9978M                    20.5819                     2.45994            698.658    28.3437k   631.515k       371.528M/s    688.407   26.3651k   5.42982M         8.59809     616.89/s  3.3496G/s     12.9986M               20.5833                2.39394          1         616.89/s [BEST: throughput=  0.44 GB/s doc_throughput=   698 docs/s instructions=    12997765 cycles=     5283765 branch_miss=   28358 cache_miss=   14797 cache_ref=     47107 items=         1 avg_time=   1621034 ns]
find_tweet<rapidjson_insitu>/manual_time                 1015875 ns      1045233 ns          696          25.534k           691.532M          1.832k        34.512k    3.37121M              5.33829           1095.04        3.6916G          9.71911M                    15.3902                     2.88298            1095.04    25.8241k   631.515k       592.848M/s   1.71101k   26.1425k    3.4589M         5.47714    984.373/s 3.40485G/s     9.71944M               15.3907                2.80998          1        984.373/s [BEST: throughput=  0.69 GB/s doc_throughput=  1095 docs/s instructions=     9719112 cycles=     3371208 branch_miss=   25534 cache_miss=    1832 cache_ref=     34512 items=         1 avg_time=   1015874 ns]
find_tweet<nlohmann_json>/manual_time                    6012602 ns      6042815 ns          118          96.073k           108.062M             194       227.501k    21.5612M              34.1421           171.116       3.68946G          55.1683M                    87.3586                     2.55868            171.116    104.473k   631.515k       100.166M/s    33.5678   291.436k   22.1831M         35.1268    166.317/s 3.68944G/s     55.3396M                 87.63                2.49467          1        166.317/s [BEST: throughput=  0.11 GB/s doc_throughput=   171 docs/s instructions=    55168290 cycles=    21561233 branch_miss=   96073 cache_miss=     194 cache_ref=    227501 items=         1 avg_time=   6012602 ns]
top_tweet<simdjson_dom>/manual_time                       256554 ns       284703 ns         2726           3.601k           2.47768G               0        86.254k    941.148k               1.4903          3.92338k       3.69249G          2.80907M                    4.44814                     2.98472           3.92338k    3.76354k   631.515k       2.29247G/s   0.368305   86.2458k   946.826k         1.49929   3.89781k/s 3.69055G/s     2.80907M               4.44814                2.96682          1       3.89781k/s [BEST: throughput=  2.48 GB/s doc_throughput=  3923 docs/s instructions=     2809067 cycles=      941148 branch_miss=    3601 cache_miss=       0 cache_ref=     86254 items=         1 avg_time=    256554 ns]
top_tweet<simdjson_ondemand>/manual_time                  177182 ns       205043 ns         3952           1.516k           3.58954G               0        53.328k    649.672k              1.02875          5.68401k       3.69274G          2.10137M                     3.3275                      3.2345           5.68401k     1.6556k   631.515k       3.31943G/s  0.0156883   53.4097k   653.982k         1.03558   5.64391k/s 3.69102G/s     2.10137M                3.3275                3.21319          1       5.64391k/s [BEST: throughput=  3.59 GB/s doc_throughput=  5684 docs/s instructions=     2101367 cycles=      649672 branch_miss=    1516 cache_miss=       0 cache_ref=     53328 items=         1 avg_time=    177182 ns]
top_tweet<simdjson_ondemand_forward_only>/manual_time     174846 ns       202708 ns         4003           1.435k            3.6365G               0        54.163k    641.327k              1.01554          5.75838k         3.693G          2.12693M                    3.36799                     3.31646           5.75838k    1.59503k   631.515k       3.36379G/s  0.0149888   54.1746k   645.418k         1.02202   5.71933k/s 3.69136G/s     2.12693M               3.36799                3.29543          1       5.71933k/s [BEST: throughput=  3.64 GB/s doc_throughput=  5758 docs/s instructions=     2126934 cycles=      641327 branch_miss=    1435 cache_miss=       0 cache_ref=     54163 items=         1 avg_time=    174845 ns]
top_tweet<yyjson>/manual_time                             668664 ns       698291 ns         1173           9.622k           1.61858G             238        70.322k    1.44058M              2.28115          2.56301k       3.69223G          2.84502M                    4.50507                     1.97491           2.56301k    7.72687k   631.515k       900.691M/s     961.76   44.2445k   1.66688M          2.6395   1.49552k/s 2.49286G/s      2.8457M               4.50615                 1.7072          1       1.49552k/s [BEST: throughput=  1.62 GB/s doc_throughput=  2563 docs/s instructions=     2845019 cycles=     1440582 branch_miss=    9622 cache_miss=     238 cache_ref=     70322 items=         1 avg_time=    668664 ns]
top_tweet<yyjson_insitu>/manual_time                      468501 ns       497578 ns         1494           7.217k           1.80823G             615        40.599k     1.2861M              2.03653          2.86332k       3.68251G          2.84469M                    4.50455                     2.21188           2.86332k    7.57086k   631.515k       1.25538G/s    39.3373   26.8871k   1.39618M         2.21084   2.13447k/s  2.9801G/s     2.84496M               4.50497                2.03767          1       2.13447k/s [BEST: throughput=  1.81 GB/s doc_throughput=  2863 docs/s instructions=     2844694 cycles=     1286099 branch_miss=    7217 cache_miss=     615 cache_ref=     40599 items=         1 avg_time=    468500 ns]
top_tweet<sajson>/manual_time                             543346 ns       571779 ns         1287           9.935k           1.17387G               0          41.1k    1.98613M              3.14503          1.85881k       3.69184G          5.91603M                      9.368                     2.97867           1.85881k    10.4987k   631.515k       1108.43M/s    1.20435   41.1703k   2.00488M         3.17472   1.84045k/s 3.68988G/s     5.91604M                 9.368                2.95082          1       1.84045k/s [BEST: throughput=  1.17 GB/s doc_throughput=  1858 docs/s instructions=     5916035 cycles=     1986131 branch_miss=    9935 cache_miss=       0 cache_ref=     41100 items=         1 avg_time=    543346 ns]
top_tweet<rapidjson>/manual_time                         1626149 ns      1654471 ns          434          28.954k           439.549M             242        48.283k    5.30392M              8.39873           696.024       3.69166G           13.048M                    20.6614                     2.46006            696.024    28.3639k   631.515k       370.359M/s    813.942   30.3155k    5.4465M          8.6245     614.95/s 3.34932G/s     13.0488M               20.6627                2.39581          1         614.95/s [BEST: throughput=  0.44 GB/s doc_throughput=   696 docs/s instructions=    13047953 cycles=     5303924 branch_miss=   28954 cache_miss=     242 cache_ref=     48283 items=         1 avg_time=   1626149 ns]
top_tweet<rapidjson_insitu>/manual_time                  1021310 ns      1049835 ns          692           25.73k           686.672M          2.653k        39.732k    3.39518M              5.37625           1087.34       3.69172G          9.76103M                    15.4565                     2.87497            1087.34    25.9356k   631.515k       589.693M/s   1.81728k   31.5569k   3.48004M         5.51062    979.135/s 3.40743G/s     9.76137M               15.4571                2.80496          1        979.135/s [BEST: throughput=  0.69 GB/s doc_throughput=  1087 docs/s instructions=     9761035 cycles=     3395181 branch_miss=   25730 cache_miss=    2653 cache_ref=     39732 items=         1 avg_time=   1021310 ns]
top_tweet<nlohmann_json>/manual_time                     8624792 ns      8654399 ns           81         180.008k           73.8845M              13       386.872k    31.5364M              49.9377           116.996       3.68962G          77.9754M                    123.474                     2.47255            116.996    185.024k   631.515k       69.8289M/s    49.9012   392.929k   31.8188M         50.3849    115.945/s 3.68923G/s     78.4896M               124.288                2.46677          1        115.945/s [BEST: throughput=  0.07 GB/s doc_throughput=   116 docs/s instructions=    77975437 cycles=    31536384 branch_miss=  180008 cache_miss=      13 cache_ref=    386872 items=         1 avg_time=   8624792 ns]
