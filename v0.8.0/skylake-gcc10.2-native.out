run_benchmark: v0.8.0 /home/jkeiser/simdjson_benchmark_results/v0.8.0/skylake-gcc10.2-native.json -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native
git reset --hard v0.8.0
HEAD is now at c96ff018 Version 0.8.
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The CXX compiler identification is GNU 10.2.0
-- The C compiler identification is GNU 10.2.0
-- Check for working CXX compiler: /usr/bin/g++-10
-- Check for working CXX compiler: /usr/bin/g++-10 -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Check for working C compiler: /usr/bin/gcc-10
-- Check for working C compiler: /usr/bin/gcc-10 -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed
-- Check if compiler accepts -pthread
-- Check if compiler accepts -pthread - yes
-- Found Threads: TRUE  
-- Looking for fork
-- Looking for fork - found
-- Looking for wait
-- Looking for wait - found
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- Found Git: /usr/bin/git (found version "2.27.0") 
-- git Version: v0.2.1-c96ff018
-- Version: 0.2.1
-- Performing Test HAVE_CXX_FLAG_STD_CXX11
-- Performing Test HAVE_CXX_FLAG_STD_CXX11 - Success
-- Performing Test HAVE_CXX_FLAG_WALL
-- Performing Test HAVE_CXX_FLAG_WALL - Success
-- Performing Test HAVE_CXX_FLAG_WEXTRA
-- Performing Test HAVE_CXX_FLAG_WEXTRA - Success
-- Performing Test HAVE_CXX_FLAG_WSHADOW
-- Performing Test HAVE_CXX_FLAG_WSHADOW - Success
-- Performing Test HAVE_CXX_FLAG_WERROR
-- Performing Test HAVE_CXX_FLAG_WERROR - Success
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32 - Failed
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED - Success
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WD654
-- Performing Test HAVE_CXX_FLAG_WD654 - Failed
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY - Failed
-- Performing Test HAVE_CXX_FLAG_COVERAGE
-- Performing Test HAVE_CXX_FLAG_COVERAGE - Success
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Performing Test USE_BOOST_JSON
-- Performing Test USE_BOOST_JSON - Failed
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Found Python3: /usr/bin/python3.8 (found version "3.8.6") found components: Interpreter 
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 10
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
Scanning dependencies of target benchmark
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_api_internal.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_name.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_name.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_register.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_register.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_runner.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_runner.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/colorprint.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/colorprint.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/commandlineflags.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/commandlineflags.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/complexity.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/complexity.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/console_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/console_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/counter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/counter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/csv_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/csv_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/json_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/json_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/sleep.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sleep.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/statistics.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/statistics.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/string_util.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/string_util.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/sysinfo.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sysinfo.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/timers.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/timers.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -P CMakeFiles/benchmark.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/benchmark.dir/link.txt --verbose=1
/usr/bin/ar qc libbenchmark.a  CMakeFiles/benchmark.dir/benchmark.cc.o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o CMakeFiles/benchmark.dir/benchmark_name.cc.o CMakeFiles/benchmark.dir/benchmark_register.cc.o CMakeFiles/benchmark.dir/benchmark_runner.cc.o CMakeFiles/benchmark.dir/colorprint.cc.o CMakeFiles/benchmark.dir/commandlineflags.cc.o CMakeFiles/benchmark.dir/complexity.cc.o CMakeFiles/benchmark.dir/console_reporter.cc.o CMakeFiles/benchmark.dir/counter.cc.o CMakeFiles/benchmark.dir/csv_reporter.cc.o CMakeFiles/benchmark.dir/json_reporter.cc.o CMakeFiles/benchmark.dir/reporter.cc.o CMakeFiles/benchmark.dir/sleep.cc.o CMakeFiles/benchmark.dir/statistics.cc.o CMakeFiles/benchmark.dir/string_util.cc.o CMakeFiles/benchmark.dir/sysinfo.cc.o CMakeFiles/benchmark.dir/timers.cc.o
/usr/bin/ranlib libbenchmark.a
[ 80%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
Scanning dependencies of target generated-data
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated && /usr/bin/ruby genfeaturejson.rb /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-miss.json ...
[ 80%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/g++-10  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/include  -march=native -O3 -DNDEBUG -fPIC   -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -pthread -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/g++-10 -fPIC -march=native -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.7 -o ../libsimdjson.so.7.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.7.0.0 ../libsimdjson.so.7 ../libsimdjson.so
[ 80%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
Scanning dependencies of target yyjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/gcc-10  -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src  -O3 -DNDEBUG   -o CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o   -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src/yyjson.c
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -P CMakeFiles/yyjson.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -E cmake_link_script CMakeFiles/yyjson.dir/link.txt --verbose=1
/usr/bin/ar qc libyyjson.a  CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o
/usr/bin/ranlib libyyjson.a
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/g++-10  -DRAPIDJSON_HAS_STDSTRING -DSAJSON_UNSORTED_OBJECT_KEYS -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_COMPETITION_NLOHMANN_JSON -DSIMDJSON_COMPETITION_RAPIDJSON -DSIMDJSON_COMPETITION_SAJSON -DSIMDJSON_COMPETITION_YYJSON -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/rapidjson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/sajson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/json  -march=native -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/g++-10  -march=native -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.7.0.0 ../_deps/google_benchmarks/src/libbenchmark.a ../dependencies/libyyjson.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.8.0/skylake-gcc10.2-native.json --benchmark_out_format=json
2021-01-24 20:48:42
Running benchmark/bench_ondemand
Run on (4 X 4000 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 256 KiB (x4)
  L3 Unified 8192 KiB (x1)
Load Average: 1.00, 0.98, 0.74
simdjson::dom implementation:      haswell
simdjson::ondemand implementation: haswell

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                  257746 ns       285910 ns         2651           3.745k            2.4656G               0        87.014k    945.817k               1.4977          3.90427k       3.69272G          2.91501M                     4.6159                     3.08201           390.427k    3.87877k   631.515k       2.28187G/s   0.457563    87.069k   951.316k          1.5064   3.87978k/s  3.6909G/s     2.91501M                4.6159                3.06419        100       387.978k/s [BEST: throughput=  2.47 GB/s doc_throughput=  3904 docs/s instructions=     2915013 cycles=      945817 branch_miss=    3745 cache_miss=       0 cache_ref=     87014 items=       100 avg_time=    257746 ns]
partial_tweets<simdjson_ondemand>/manual_time             187486 ns       215593 ns         3731           1.644k           3.39886G               0        54.603k    686.114k              1.08646          5.38207k       3.69272G           2.1433M                     3.3939                     3.12382           538.207k    1.82322k   631.515k       3.13701G/s  0.0356473   54.7811k    692.03k         1.09582   5.33374k/s 3.69111G/s      2.1433M                3.3939                3.09712        100       533.374k/s [BEST: throughput=  3.40 GB/s doc_throughput=  5382 docs/s instructions=     2143300 cycles=      686114 branch_miss=    1644 cache_miss=       0 cache_ref=     54603 items=       100 avg_time=    187485 ns]
partial_tweets<yyjson>/manual_time                        684993 ns       715248 ns         1019           9.969k           1.57976G             858        74.899k    1.47625M              2.33763          2.50154k        3.6929G          2.90845M                    4.60552                     1.97017           250.154k    7.61628k   631.515k        879.22M/s    1038.04   49.0872k   1.68802M         2.67297   1.45987k/s 2.46429G/s     2.90894M               4.60629                1.72328        100       145.987k/s [BEST: throughput=  1.58 GB/s doc_throughput=  2501 docs/s instructions=     2908453 cycles=     1476248 branch_miss=    9969 cache_miss=     858 cache_ref=     74899 items=       100 avg_time=    684993 ns]
partial_tweets<yyjson_insitu>/manual_time                 477341 ns       506199 ns         1466           6.866k           1.77952G          1.433k        45.675k     1.3043M              2.06535          2.81786k       3.67534G          2.90814M                    4.60502                     2.22965           281.786k    7.44153k   631.515k       1.23213G/s    135.183   31.7589k   1.41749M         2.24458   2.09494k/s 2.96955G/s      2.9084M               4.60543                 2.0518        100       209.494k/s [BEST: throughput=  1.78 GB/s doc_throughput=  2817 docs/s instructions=     2908138 cycles=     1304302 branch_miss=    6866 cache_miss=    1433 cache_ref=     45675 items=       100 avg_time=    477340 ns]
partial_tweets<sajson>/manual_time                        557854 ns       586090 ns         1253          10.485k           1.14099G               0        45.745k    2.04341M              3.23572          1.80675k       3.69193G          6.04844M                    9.57767                     2.95998           180.675k    10.9067k   631.515k        1079.6M/s    1.45411   45.7539k   2.05849M         3.25961   1.79258k/s 3.69002G/s     6.04844M               9.57767                2.93828        100       179.258k/s [BEST: throughput=  1.14 GB/s doc_throughput=  1806 docs/s instructions=     6048442 cycles=     2043407 branch_miss=   10485 cache_miss=       0 cache_ref=     45745 items=       100 avg_time=    557854 ns]
partial_tweets<rapidjson>/manual_time                    1633374 ns      1662054 ns          429          26.659k           440.293M             362         51.73k     5.2949M              8.38445           697.201       3.69161G          13.1235M                     20.781                     2.47851           69.7201k    26.7206k   631.515k       368.721M/s    521.375   32.5789k   5.44347M         8.61971     612.23/s 3.33266G/s     13.1243M               20.7823                2.41102        100        61.223k/s [BEST: throughput=  0.44 GB/s doc_throughput=   697 docs/s instructions=    13123491 cycles=     5294904 branch_miss=   26659 cache_miss=     362 cache_ref=     51730 items=       100 avg_time=   1633373 ns]
partial_tweets<rapidjson_insitu>/manual_time             1038495 ns      1066995 ns          676          24.817k           688.393M             211        43.508k    3.38673M              5.36286           1090.07       3.69175G          9.82481M                    15.5575                     2.90098           109.007k    24.9034k   631.515k       579.935M/s    221.873    33.489k   3.48929M         5.52527    962.932/s 3.35995G/s     9.82542M               15.5585                2.81588        100       96.2932k/s [BEST: throughput=  0.69 GB/s doc_throughput=  1090 docs/s instructions=     9824811 cycles=     3386726 branch_miss=   24817 cache_miss=     211 cache_ref=     43508 items=       100 avg_time=   1038495 ns]
partial_tweets<nlohmann_json>/manual_time                7716178 ns      7751170 ns           91         134.549k           84.4841M              35       223.619k    27.5861M              43.6824            133.78       3.69047G          70.7757M                    112.073                     2.56563            13.378k    148.378k   631.515k       78.0515M/s    92.1209   353.095k   28.4681M         45.0791    129.598/s 3.68941G/s     71.1803M               112.714                2.50035        100       12.9598k/s [BEST: throughput=  0.08 GB/s doc_throughput=   133 docs/s instructions=    70775703 cycles=    27586102 branch_miss=  134549 cache_miss=      35 cache_ref=    223619 items=       100 avg_time=   7716177 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                  96909807 ns    100300486 ns            7         857.548k           476.073M        10.9841M       15.2617M     356.45M              7.74912           10.3497       3.68915G          981.675M                    21.3413                     2.75403           10.3497M    857.517k   45.9988M       452.667M/s   11.0231M   15.2689M   357.489M         7.77171    10.3189/s 3.68889G/s     981.675M               21.3413                2.74603      1000k       10.3189M/s [BEST: throughput=  0.48 GB/s doc_throughput=    10 docs/s instructions=   981674957 cycles=   356450050 branch_miss=  857548 cache_miss=10984130 cache_ref=  15261723 items=   1000000 avg_time=  96909807 ns]
large_random<simdjson_ondemand>/manual_time             60342806 ns     63682932 ns           12         878.561k           762.984M        5.70225M       7.91375M    222.413M              4.83519            16.587       3.68917G          644.053M                    14.0015                     2.89575            16.587M    880.769k   45.9988M       726.977M/s   5.70881M    7.9112M     222.6M         4.83926     16.572/s 3.68893G/s     644.053M               14.0015                2.89332      1000k        16.572M/s [BEST: throughput=  0.76 GB/s doc_throughput=    16 docs/s instructions=   644052609 cycles=   222412954 branch_miss=  878561 cache_miss= 5702249 cache_ref=   7913752 items=   1000000 avg_time=  60342806 ns]
large_random<simdjson_ondemand_unordered>/manual_time   61530536 ns     64877642 ns           11         874.018k            747.96M        5.68708M       7.90935M    226.884M              4.93239           16.2604       3.68923G          644.053M                    14.0015                     2.83869           16.2604M    874.323k   45.9988M       712.944M/s   5.71529M   7.91438M   226.984M         4.93456    16.2521/s 3.68896G/s     644.053M               14.0015                2.83744      1000k       16.2521M/s [BEST: throughput=  0.75 GB/s doc_throughput=    16 docs/s instructions=   644052616 cycles=   226884060 branch_miss=  874018 cache_miss= 5687085 cache_ref=   7909345 items=   1000000 avg_time=  61530536 ns]
large_random<yyjson>/manual_time                       126457160 ns    129874532 ns            6         664.832k           363.971M        5.94363M       9.11367M    347.161M              7.54718           7.91263       2.74696G           942.15M                    20.4821                     2.71387           7.91263M    664.275k   45.9988M       346.899M/s   5.94181M   9.10309M   347.069M         7.54517    7.90782/s 2.74456G/s     942.149M               20.4821                2.71459      1000k       7.90782M/s [BEST: throughput=  0.36 GB/s doc_throughput=     7 docs/s instructions=   942149625 cycles=   347161046 branch_miss=  664832 cache_miss= 5943626 cache_ref=   9113666 items=   1000000 avg_time= 126457160 ns]
large_random<yyjson_insitu>/manual_time                108550538 ns    111959819 ns            6         664.462k           423.913M         5.0617M       7.74424M    315.254M              6.85352           9.21574        2.9053G          936.029M                     20.349                     2.96913           9.21574M    663.848k   45.9988M       404.124M/s   5.06818M   7.75788M   315.196M         6.85227     9.2123/s 2.90368G/s     936.029M                20.349                2.96967      1000k        9.2123M/s [BEST: throughput=  0.42 GB/s doc_throughput=     9 docs/s instructions=   936028642 cycles=   315253571 branch_miss=  664462 cache_miss= 5061696 cache_ref=   7744241 items=   1000000 avg_time= 108550537 ns]
large_random<sajson>/manual_time                        90426212 ns     93810073 ns            8          582.01k           509.409M        8.44815M       12.2869M     333.13M              7.24214           11.0744       3.68921G          1066.99M                    23.1961                     3.20293           11.0744M    583.904k   45.9988M       485.123M/s   8.47485M   12.2156M   333.599M         7.25234    11.0587/s 3.68918G/s     1066.99M               23.1961                3.19843      1000k       11.0587M/s [BEST: throughput=  0.51 GB/s doc_throughput=    11 docs/s instructions=  1066991821 cycles=   333129523 branch_miss=  582010 cache_miss= 8448154 cache_ref=  12286909 items=   1000000 avg_time=  90426211 ns]
large_random<rapidjson>/manual_time                    178109362 ns    181515758 ns            4          659.34k           269.108M        7.04038M       10.6901M    572.848M              12.4536           5.85034       3.35135G          1.67314G                    36.3736                     2.92074           5.85034M    660.188k   45.9988M       246.297M/s   6.46969M   9.94653M   578.453M         12.5754    5.61453/s 3.24774G/s     1.67315G               36.3738                2.89246      1000k       5.61453M/s [BEST: throughput=  0.27 GB/s doc_throughput=     5 docs/s instructions=  1673140200 cycles=   572848175 branch_miss=  659340 cache_miss= 7040382 cache_ref=  10690084 items=   1000000 avg_time= 178109362 ns]
large_random<rapidjson_lossless>/manual_time           204276189 ns    207690434 ns            4           606.9k           233.206M        7.02711M       10.6902M    670.048M              14.5666           5.06983       3.39703G          2.06011G                    44.7861                     3.07457           5.06983M    608.451k   45.9988M       214.748M/s   6.46657M   9.97956M   674.961M         14.6735    4.89533/s 3.30416G/s     2.06012G               44.7863                 3.0522      1000k       4.89533M/s [BEST: throughput=  0.23 GB/s doc_throughput=     5 docs/s instructions=  2060105056 cycles=   670047530 branch_miss=  606900 cache_miss= 7027112 cache_ref=  10690162 items=   1000000 avg_time= 204276189 ns]
large_random<rapidjson_insitu>/manual_time             156291005 ns    159698147 ns            5         607.904k           309.789M        8.11504M       12.2245M    490.085M              10.6543           6.73473       3.30059G          1.50514G                    32.7213                     3.07118           6.73473M    607.615k   45.9988M       280.681M/s   7.53719M   11.4405M   496.521M         10.7942    6.39832/s  3.1769G/s     1.50515G               32.7215                 3.0314      1000k       6.39832M/s [BEST: throughput=  0.31 GB/s doc_throughput=     6 docs/s instructions=  1505139778 cycles=   490084761 branch_miss=  607904 cache_miss= 8115037 cache_ref=  12224483 items=   1000000 avg_time= 156291004 ns]
large_random<nlohmann_json>/manual_time               1222272359 ns   1225672595 ns            1         4.56105M           37.6338M        47.5497M       61.4277M    4.49666G              97.7561          0.818148       3.67893G          11.9464G                     259.71                     2.65672           818.148k    4.56105M   45.9988M       35.8904M/s   47.5497M   61.4277M   4.49666G         97.7561   0.818148/s 3.67893G/s     11.9464G                259.71                2.65672      1000k       818.148k/s [BEST: throughput=  0.04 GB/s doc_throughput=     0 docs/s instructions= 11946359278 cycles=  4496659502 branch_miss= 4561051 cache_miss=47549745 cache_ref=  61427699 items=   1000000 avg_time=1222272359 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                        88670367 ns     98814378 ns            8         439.606k           1.55024G        15.9282M       22.3242M    326.752M              2.37975           11.2905       3.68919G          938.041M                     6.8318                     2.87081           5.91948M    439.892k   137.305M       1.44214G/s   15.9563M   22.2138M   327.102M          2.3823    11.2777/s 3.68896G/s     938.041M                6.8318                2.86773   524.288k       5.91278M/s [BEST: throughput=  1.55 GB/s doc_throughput=    11 docs/s instructions=   938040622 cycles=   326751545 branch_miss=  439606 cache_miss=15928151 cache_ref=  22324190 items=    524288 avg_time=  88670367 ns]
kostya<simdjson_ondemand>/manual_time                   60607996 ns     70713930 ns           12         488.874k           2.26742G        10.2159M       14.0295M    223.389M              1.62696           16.5138         3.689G          676.617M                    4.92784                     3.02887           8.65797M     489.91k   137.305M       2.10987G/s   10.2296M   13.9896M    223.57M         1.62827    16.4995/s 3.68878G/s     676.617M               4.92784                3.02643   524.288k       8.65048M/s [BEST: throughput=  2.27 GB/s doc_throughput=    16 docs/s instructions=   676617059 cycles=   223389386 branch_miss=  488874 cache_miss=10215858 cache_ref=  14029504 items=    524288 avg_time=  60607996 ns]
kostya<yyjson>/manual_time                             204012521 ns    214196034 ns            3         412.664k           673.909M        11.5691M       16.4327M    556.218M              4.05096           4.90812       2.72998G          984.045M                    7.16685                     1.76917           2.57327M    413.269k   137.305M       641.844M/s   11.5689M   16.4508M   556.193M         4.05079    4.90166/s 2.72627G/s     984.045M               7.16686                1.76925   524.288k       2.56988M/s [BEST: throughput=  0.67 GB/s doc_throughput=     4 docs/s instructions=   984044938 cycles=   556217672 branch_miss=  412664 cache_miss=11569117 cache_ref=  16432742 items=    524288 avg_time= 204012520 ns]
kostya<yyjson_insitu>/manual_time                      151267777 ns    161468581 ns            5          411.09k           908.274M        8.90628M        12.353M    463.551M              3.37607           6.61501       3.06639G          965.776M                     7.0338                     2.08343           3.46817M    411.263k   137.305M       865.645M/s   8.90769M   12.3715M    463.82M         3.37803    6.61079/s 3.06622G/s     965.776M                7.0338                2.08222   524.288k       3.46596M/s [BEST: throughput=  0.91 GB/s doc_throughput=     6 docs/s instructions=   965775576 cycles=   463550592 branch_miss=  411090 cache_miss= 8906283 cache_ref=  12352990 items=    524288 avg_time= 151267777 ns]
kostya<sajson>/manual_time                             132260512 ns    142438834 ns            5         357.911k           1039.55M        12.5579M       17.2122M    487.242M              3.54861           7.57112       3.68896G          1.60304G                    11.6751                     3.29004           3.96945M    358.853k   137.305M       990.048M/s   12.5655M   17.2207M   487.889M         3.55332    7.56084/s 3.68885G/s     1.60304G               11.6751                3.28567   524.288k       3.96406M/s [BEST: throughput=  1.04 GB/s doc_throughput=     7 docs/s instructions=  1603042692 cycles=   487241514 branch_miss=  357911 cache_miss=12557882 cache_ref=  17212240 items=    524288 avg_time= 132260511 ns]
kostya<rapidjson>/manual_time                          252906916 ns    263117160 ns            3         964.287k           550.072M        8.24495M         11.97M    839.832M              6.11655           4.00621       3.36454G          2.29774G                    16.7346                     2.73595           2.10041M    966.551k   137.305M       517.757M/s   7.94675M   11.7171M   842.678M         6.13727    3.95402/s 3.33197G/s     2.29774G               16.7346                2.72671   524.288k       2.07305M/s [BEST: throughput=  0.55 GB/s doc_throughput=     4 docs/s instructions=  2297738777 cycles=   839832479 branch_miss=  964287 cache_miss= 8244946 cache_ref=  11969988 items=    524288 avg_time= 252906916 ns]
kostya<rapidjson_lossless>/manual_time                 265331879 ns    275544511 ns            3         945.191k            523.88M         8.2472M       11.9948M    886.206M              6.45429           3.81545       3.38127G          2.51583G                     18.323                     2.83888           2.00039M    945.149k   137.305M       493.511M/s   7.95279M   11.6886M   888.846M         6.47352    3.76886/s 3.34994G/s     2.51584G                18.323                2.83045   524.288k       1.97597M/s [BEST: throughput=  0.52 GB/s doc_throughput=     3 docs/s instructions=  2515833685 cycles=   886206215 branch_miss=  945191 cache_miss= 8247204 cache_ref=  11994829 items=    524288 avg_time= 265331878 ns]
kostya<rapidjson_insitu>/manual_time                   229474339 ns    239669138 ns            3         1048.51k           607.285M        11.3071M       15.6886M    753.368M              5.48682           4.42289       3.33207G            2.048G                    14.9157                     2.71846           2.31887M     1044.7k   137.305M       570.627M/s    11.017M   15.3453M   756.465M         5.50938    4.35779/s 3.29651G/s     2.04801G               14.9157                2.70734   524.288k       2.28473M/s [BEST: throughput=  0.61 GB/s doc_throughput=     4 docs/s instructions=  2048003739 cycles=   753367962 branch_miss= 1048506 cache_miss=11307064 cache_ref=  15688569 items=    524288 avg_time= 229474339 ns]
kostya<nlohmann_json>/manual_time                     1599224489 ns   1609445630 ns            1         4.68716M           85.8572M        70.7225M       88.6421M    5.90004G              42.9703          0.625303       3.68931G          15.1309G                    110.199                     2.56453           327.839k    4.68716M   137.305M       81.8798M/s   70.7225M   88.6421M   5.90004G         42.9703   0.625303/s 3.68931G/s     15.1309G               110.199                2.56453   524.288k       327.839k/s [BEST: throughput=  0.09 GB/s doc_throughput=     0 docs/s instructions= 15130854248 cycles=  5900039315 branch_miss= 4687158 cache_miss=70722458 cache_ref=  88642129 items=    524288 avg_time=1599224489 ns]
distinct_user_id<simdjson_dom>/manual_time                259529 ns       290115 ns         2696           3.823k           2.45036G               0        88.715k     951.66k              1.50695          3.88013k       3.69257G          2.85594M                    4.52236                     3.00101           446.216k    3.99433k   631.515k        2.2662G/s     2.7181   88.8329k   957.771k         1.51662   3.85314k/s 3.69043G/s     2.85594M               4.52236                2.98186        115       443.111k/s [BEST: throughput=  2.45 GB/s doc_throughput=  3880 docs/s instructions=     2855937 cycles=      951660 branch_miss=    3823 cache_miss=       0 cache_ref=     88715 items=       115 avg_time=    259528 ns]
distinct_user_id<simdjson_ondemand>/manual_time           182106 ns       211607 ns         3841            1.76k           3.49258G               0        53.435k     667.73k              1.05735          5.53048k       3.69287G          2.10219M                    3.32881                     3.14827           636.006k    1.90597k   631.515k       3.22969G/s  0.0296798   53.5014k   672.157k         1.06436   5.49132k/s 3.69103G/s     2.10219M               3.32881                3.12753        115       631.501k/s [BEST: throughput=  3.49 GB/s doc_throughput=  5530 docs/s instructions=     2102194 cycles=      667730 branch_miss=    1760 cache_miss=       0 cache_ref=     53435 items=       115 avg_time=    182105 ns]
distinct_user_id<yyjson>/manual_time                      597346 ns       630586 ns         1000           6.784k           1.66195G         21.985k        74.203k    1.40303M              2.22169          2.63168k       3.69234G          2.87509M                    4.55268                      2.0492           302.644k    7.46293k   631.515k       1008.23M/s    7.4499k   55.2467k    1.6142M         2.55608   1.67407k/s 2.70229G/s     2.87528M               4.55299                1.78124        115       192.518k/s [BEST: throughput=  1.66 GB/s doc_throughput=  2631 docs/s instructions=     2875087 cycles=     1403032 branch_miss=    6784 cache_miss=   21985 cache_ref=     74203 items=       115 avg_time=    597346 ns]
distinct_user_id<yyjson_insitu>/manual_time               471443 ns       504074 ns         1485            7.23k           1.78784G             327        44.016k     1.3007M              2.05965          2.83104k       3.68233G          2.87457M                    4.55186                     2.21002            325.57k    7.59403k   631.515k       1.24754G/s    39.7778   30.2907k   1.40816M         2.22982   2.12115k/s 2.98693G/s     2.87483M               4.55228                2.04155        115       243.932k/s [BEST: throughput=  1.79 GB/s doc_throughput=  2831 docs/s instructions=     2874570 cycles=     1300700 branch_miss=    7230 cache_miss=     327 cache_ref=     44016 items=       115 avg_time=    471442 ns]
distinct_user_id<sajson>/manual_time                      553827 ns       584191 ns         1260          10.408k           1.15098G               0        45.272k    2.02561M              3.20754          1.82257k       3.69182G          5.98101M                    9.47089                     2.95269           209.596k    10.9195k   631.515k       1087.45M/s    1.09206   45.3096k   2.04348M         3.23583   1.80562k/s 3.68973G/s     5.98101M               9.47089                2.92688        115       207.646k/s [BEST: throughput=  1.15 GB/s doc_throughput=  1822 docs/s instructions=     5981008 cycles=     2025612 branch_miss=   10408 cache_miss=       0 cache_ref=     45272 items=       115 avg_time=    553827 ns]
distinct_user_id<rapidjson>/manual_time                  1620259 ns      1650897 ns          435           26.81k           442.355M          9.231k        53.113k    5.27017M              8.34528           700.467       3.69158G          13.0657M                    20.6894                     2.47917           80.5537k    26.6781k   631.515k       371.706M/s    951.924   33.5943k   5.42468M         8.58995    617.185/s 3.34803G/s     13.0664M               20.6905                2.40869        115       70.9763k/s [BEST: throughput=  0.44 GB/s doc_throughput=   700 docs/s instructions=    13065659 cycles=     5270170 branch_miss=   26810 cache_miss=    9231 cache_ref=     53113 items=       115 avg_time=   1620258 ns]
distinct_user_id<rapidjson_insitu>/manual_time           1017496 ns      1047237 ns          695          24.786k           691.289M              82        43.247k    3.37246M              5.34027           1094.65       3.69167G          9.77668M                    15.4813                     2.89898           125.885k    24.9171k   631.515k       591.903M/s   1.85177k   34.8454k   3.46572M         5.48795    982.804/s 3.40613G/s     9.77701M               15.4818                2.82106        115       113.023k/s [BEST: throughput=  0.69 GB/s doc_throughput=  1094 docs/s instructions=     9776681 cycles=     3372461 branch_miss=   24786 cache_miss=      82 cache_ref=     43247 items=       115 avg_time=   1017496 ns]
distinct_user_id<nlohmann_json>/manual_time              7127698 ns      7161693 ns          100         119.807k           91.5485M               3       286.982k    25.4449M              40.2918           144.967       3.68866G          64.7491M                     102.53                     2.54468           16.6711k    129.044k   631.515k       84.4957M/s      49.25   408.028k   26.2975M         41.6419    140.298/s 3.68948G/s     64.9018M               102.772                2.46799        115       16.1342k/s [BEST: throughput=  0.09 GB/s doc_throughput=   144 docs/s instructions=    64749053 cycles=    25444903 branch_miss=  119807 cache_miss=       3 cache_ref=    286982 items=       115 avg_time=   7127698 ns]
find_tweet<simdjson_dom>/manual_time                      248224 ns       276988 ns         2820           3.561k           2.56012G               0        78.601k      910.8k              1.44225          4.05393k       3.69232G           2.7749M                    4.39403                     3.04666           4.05393k    3.69502k   631.515k       2.36941G/s    6.36348   78.5536k   916.068k         1.45059   4.02862k/s 3.69049G/s      2.7749M               4.39403                3.02914          1       4.02862k/s [BEST: throughput=  2.56 GB/s doc_throughput=  4053 docs/s instructions=     2774898 cycles=      910800 branch_miss=    3561 cache_miss=       0 cache_ref=     78601 items=         1 avg_time=    248223 ns]
find_tweet<simdjson_ondemand>/manual_time                 117027 ns       145041 ns         5968              678           5.42287G               0        30.882k    430.167k             0.681167          8.58708k       3.69388G          1.47887M                    2.34178                      3.4379           8.58708k     731.565   631.515k       5.02571G/s   0.124162   30.8113k   432.064k        0.684171   8.54503k/s   3.692G/s     1.47887M               2.34178                 3.4228          1       8.54503k/s [BEST: throughput=  5.42 GB/s doc_throughput=  8587 docs/s instructions=     1478869 cycles=      430167 branch_miss=     678 cache_miss=       0 cache_ref=     30882 items=         1 avg_time=    117027 ns]
find_tweet<yyjson>/manual_time                            662107 ns       692593 ns         1181           9.715k            1.6311G             178        65.401k    1.42957M              2.26371          2.58284k       3.69234G          2.82413M                      4.472                     1.97552           2.58284k    7.48708k   631.515k       909.611M/s     1045.2     39.26k   1.64511M         2.60502   1.51033k/s 2.48466G/s     2.82461M               4.47275                1.71698          1       1.51033k/s [BEST: throughput=  1.63 GB/s doc_throughput=  2582 docs/s instructions=     2824134 cycles=     1429567 branch_miss=    9715 cache_miss=     178 cache_ref=     65401 items=         1 avg_time=    662106 ns]
find_tweet<yyjson_insitu>/manual_time                     462076 ns       491973 ns         1517           7.215k           1.83189G              25        35.751k    1.27282M               2.0155          2.90079k       3.69217G          2.82401M                    4.47181                     2.21871           2.90079k    7.36323k   631.515k       1.27283G/s    13.4298   21.9081k     1.374M         2.17571   2.16415k/s 2.97353G/s     2.82428M               4.47223                2.05552          1       2.16415k/s [BEST: throughput=  1.83 GB/s doc_throughput=  2900 docs/s instructions=     2824015 cycles=     1272817 branch_miss=    7215 cache_miss=      25 cache_ref=     35751 items=         1 avg_time=    462075 ns]
find_tweet<sajson>/manual_time                            541360 ns       570775 ns         1292          10.148k           1.17725G               0        35.962k    1.98044M              3.13602          1.86417k       3.69189G          5.88886M                    9.32498                     2.97351           1.86417k    10.6628k   631.515k       1112.49M/s    1.11842    35.967k   1.99762M         3.16322    1.8472k/s    3.69G/s     5.88886M               9.32498                2.94794          1        1.8472k/s [BEST: throughput=  1.18 GB/s doc_throughput=  1864 docs/s instructions=     5888863 cycles=     1980442 branch_miss=   10148 cache_miss=       0 cache_ref=     35962 items=         1 avg_time=    541360 ns]
find_tweet<rapidjson>/manual_time                        1611381 ns      1640132 ns          438          26.158k           445.408M         21.427k        47.884k      5.234M                8.288           705.301       3.69154G          12.9979M                    20.5821                     2.48336            705.301     26.607k   631.515k       373.754M/s    690.783   26.4428k   5.39367M         8.54084    620.586/s 3.34723G/s     12.9987M               20.5834                   2.41          1        620.586/s [BEST: throughput=  0.45 GB/s doc_throughput=   705 docs/s instructions=    12997876 cycles=     5233997 branch_miss=   26158 cache_miss=   21427 cache_ref=     47884 items=         1 avg_time=   1611380 ns]
find_tweet<rapidjson_insitu>/manual_time                 1009770 ns      1039265 ns          705          24.831k           696.178M              41        34.092k    3.34883M              5.30286          1.10239k       3.69173G          9.71891M                    15.3898                     2.90218           1.10239k     24.944k   631.515k       596.432M/s   1.69299k   26.0009k   3.43699M         5.44244    990.324/s 3.40373G/s     9.71945M               15.3907                 2.8279          1        990.324/s [BEST: throughput=  0.70 GB/s doc_throughput=  1102 docs/s instructions=     9718911 cycles=     3348834 branch_miss=   24831 cache_miss=      41 cache_ref=     34092 items=         1 avg_time=   1009770 ns]
find_tweet<nlohmann_json>/manual_time                    6069880 ns      6099795 ns          119          95.709k           108.183M             209       225.968k    21.5366M              34.1031           171.307       3.68936G          55.1694M                    87.3603                     2.56166            171.307    105.566k   631.515k        99.221M/s    29.6723   335.704k   22.3939M         35.4605    164.748/s 3.68934G/s     55.2765M               87.5299                2.46838          1        164.748/s [BEST: throughput=  0.11 GB/s doc_throughput=   171 docs/s instructions=    55169356 cycles=    21536595 branch_miss=   95709 cache_miss=     209 cache_ref=    225968 items=         1 avg_time=   6069880 ns]
top_tweet<simdjson_dom>/manual_time                       254165 ns       282252 ns         2751           3.642k           2.50073G               0        86.323k    932.478k              1.47657          3.95989k       3.69251G          2.80907M                    4.44814                     3.01248           3.95989k    3.78009k   631.515k       2.31402G/s   0.417666   86.2683k   937.983k         1.48529   3.93444k/s 3.69044G/s     2.80907M               4.44814                 2.9948          1       3.93444k/s [BEST: throughput=  2.50 GB/s doc_throughput=  3959 docs/s instructions=     2809067 cycles=      932478 branch_miss=    3642 cache_miss=       0 cache_ref=     86323 items=         1 avg_time=    254165 ns]
top_tweet<simdjson_ondemand>/manual_time                  175578 ns       203472 ns         3986           1.528k           3.62099G               0        53.611k    644.104k              1.01993          5.73381k       3.69317G          2.10137M                     3.3275                     3.26247           5.73381k    1.69215k   631.515k       3.34976G/s  0.0647265   53.5372k   648.053k         1.02619   5.69547k/s 3.69097G/s     2.10137M                3.3275                3.24258          1       5.69547k/s [BEST: throughput=  3.62 GB/s doc_throughput=  5733 docs/s instructions=     2101367 cycles=      644104 branch_miss=    1528 cache_miss=       0 cache_ref=     53611 items=         1 avg_time=    175578 ns]
top_tweet<simdjson_ondemand_forward_only>/manual_time     173384 ns       201294 ns         4038           1.519k           3.66387G               0        54.198k    636.591k              1.00804          5.80171k       3.69332G          2.12693M                    3.36799                     3.34113           5.80171k     1.6499k   631.515k       3.39216G/s   0.267459   54.2253k   640.061k         1.01353   5.76756k/s 3.69159G/s     2.12693M               3.36799                3.32302          1       5.76756k/s [BEST: throughput=  3.66 GB/s doc_throughput=  5801 docs/s instructions=     2126934 cycles=      636591 branch_miss=    1519 cache_miss=       0 cache_ref=     54198 items=         1 avg_time=    173383 ns]
top_tweet<yyjson>/manual_time                             666660 ns       696482 ns         1192           9.662k           1.61715G             344         70.27k    1.44188M              2.28321          2.56074k       3.69229G          2.84502M                    4.50507                     1.97313           2.56074k    7.60868k   631.515k       903.398M/s    949.362    44.346k   1.66222M         2.63211   1.50001k/s 2.49335G/s      2.8457M               4.50615                1.71199          1       1.50001k/s [BEST: throughput=  1.62 GB/s doc_throughput=  2560 docs/s instructions=     2845019 cycles=     1441882 branch_miss=    9662 cache_miss=     344 cache_ref=     70270 items=         1 avg_time=    666660 ns]
top_tweet<yyjson_insitu>/manual_time                      467053 ns       496119 ns         1499           7.006k            1.8142G             356        40.311k     1.2819M              2.02987          2.87277k       3.68259G           2.8449M                    4.50488                     2.21929           2.87277k    7.47517k   631.515k       1.25927G/s    42.5364   26.9777k   1.39244M         2.20493   2.14109k/s 2.98134G/s     2.84516M                4.5053                2.04329          1       2.14109k/s [BEST: throughput=  1.81 GB/s doc_throughput=  2872 docs/s instructions=     2844901 cycles=     1281895 branch_miss=    7006 cache_miss=     356 cache_ref=     40311 items=         1 avg_time=    467052 ns]
top_tweet<sajson>/manual_time                             545613 ns       573994 ns         1280          10.119k           1.16909G               0        41.352k    1.99431M              3.15798          1.85124k       3.69195G          5.91603M                      9.368                     2.96646           1.85124k    10.7092k   631.515k       1103.82M/s   0.717187   41.3729k   2.01324M         3.18796    1.8328k/s 3.68988G/s     5.91604M                 9.368                2.93856          1        1.8328k/s [BEST: throughput=  1.17 GB/s doc_throughput=  1851 docs/s instructions=     5916035 cycles=     1994310 branch_miss=   10119 cache_miss=       0 cache_ref=     41352 items=         1 avg_time=    545612 ns]
top_tweet<rapidjson>/manual_time                         1617123 ns      1645817 ns          436          26.708k           444.306M              58        48.157k    5.24708M              8.30871           703.556       3.69162G          13.0476M                    20.6608                     2.48664            703.556    26.6844k   631.515k       372.427M/s    820.037   30.2512k    5.4145M         8.57383    618.382/s 3.34823G/s     13.0485M               20.6623                2.40992          1        618.382/s [BEST: throughput=  0.44 GB/s doc_throughput=   703 docs/s instructions=    13047605 cycles=     5247077 branch_miss=   26708 cache_miss=      58 cache_ref=     48157 items=         1 avg_time=   1617123 ns]
top_tweet<rapidjson_insitu>/manual_time                  1015901 ns      1044481 ns          699          24.858k           692.495M              61        39.458k     3.3666M                5.331           1096.56       3.69169G          9.76067M                     15.456                     2.89926            1096.56    24.9266k   631.515k       592.833M/s   1.82229k   31.3695k   3.46045M          5.4796    984.348/s 3.40629G/s     9.76121M               15.4568                2.82079          1        984.348/s [BEST: throughput=  0.69 GB/s doc_throughput=  1096 docs/s instructions=     9760667 cycles=     3366605 branch_miss=   24858 cache_miss=      61 cache_ref=     39458 items=         1 avg_time=   1015900 ns]
top_tweet<nlohmann_json>/manual_time                     8649635 ns      8679465 ns           81         182.988k           73.5232M              53       386.622k    31.6926M               50.185           116.423       3.68976G          78.3578M                    124.079                     2.47243            116.423    186.727k   631.515k       69.6283M/s    79.0123   391.388k   31.9096M         50.5287    115.612/s 3.68913G/s     78.5735M               124.421                2.46238          1        115.612/s [BEST: throughput=  0.07 GB/s doc_throughput=   116 docs/s instructions=    78357828 cycles=    31692598 branch_miss=  182988 cache_miss=      53 cache_ref=    386622 items=         1 avg_time=   8649635 ns]
