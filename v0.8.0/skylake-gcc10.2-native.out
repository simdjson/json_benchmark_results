run_benchmark: v0.8.0 /home/jkeiser/simdjson_benchmark_results/v0.8.0/skylake-gcc10.2-native.json -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native
git reset --hard v0.8.0
HEAD is now at c96ff018 Version 0.8.
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The CXX compiler identification is GNU 10.2.0
-- The C compiler identification is GNU 10.2.0
-- Check for working CXX compiler: /usr/bin/g++-10
-- Check for working CXX compiler: /usr/bin/g++-10 -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Check for working C compiler: /usr/bin/gcc-10
-- Check for working C compiler: /usr/bin/gcc-10 -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed
-- Check if compiler accepts -pthread
-- Check if compiler accepts -pthread - yes
-- Found Threads: TRUE  
-- Looking for fork
-- Looking for fork - found
-- Looking for wait
-- Looking for wait - found
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- Found Git: /usr/bin/git (found version "2.27.0") 
-- git Version: v0.2.1-c96ff018
-- Version: 0.2.1
-- Performing Test HAVE_CXX_FLAG_STD_CXX11
-- Performing Test HAVE_CXX_FLAG_STD_CXX11 - Success
-- Performing Test HAVE_CXX_FLAG_WALL
-- Performing Test HAVE_CXX_FLAG_WALL - Success
-- Performing Test HAVE_CXX_FLAG_WEXTRA
-- Performing Test HAVE_CXX_FLAG_WEXTRA - Success
-- Performing Test HAVE_CXX_FLAG_WSHADOW
-- Performing Test HAVE_CXX_FLAG_WSHADOW - Success
-- Performing Test HAVE_CXX_FLAG_WERROR
-- Performing Test HAVE_CXX_FLAG_WERROR - Success
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32 - Failed
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED - Success
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WD654
-- Performing Test HAVE_CXX_FLAG_WD654 - Failed
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY - Failed
-- Performing Test HAVE_CXX_FLAG_COVERAGE
-- Performing Test HAVE_CXX_FLAG_COVERAGE - Success
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Performing Test USE_BOOST_JSON
-- Performing Test USE_BOOST_JSON - Failed
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Found Python3: /usr/bin/python3.8 (found version "3.8.6") found components: Interpreter 
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 10
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
Scanning dependencies of target benchmark
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_api_internal.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_name.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_name.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_register.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_register.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_runner.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_runner.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/colorprint.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/colorprint.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/commandlineflags.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/commandlineflags.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/complexity.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/complexity.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/console_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/console_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/counter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/counter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/csv_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/csv_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/json_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/json_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/sleep.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sleep.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/statistics.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/statistics.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/string_util.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/string_util.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/sysinfo.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sysinfo.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/timers.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/timers.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -P CMakeFiles/benchmark.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/benchmark.dir/link.txt --verbose=1
/usr/bin/ar qc libbenchmark.a  CMakeFiles/benchmark.dir/benchmark.cc.o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o CMakeFiles/benchmark.dir/benchmark_name.cc.o CMakeFiles/benchmark.dir/benchmark_register.cc.o CMakeFiles/benchmark.dir/benchmark_runner.cc.o CMakeFiles/benchmark.dir/colorprint.cc.o CMakeFiles/benchmark.dir/commandlineflags.cc.o CMakeFiles/benchmark.dir/complexity.cc.o CMakeFiles/benchmark.dir/console_reporter.cc.o CMakeFiles/benchmark.dir/counter.cc.o CMakeFiles/benchmark.dir/csv_reporter.cc.o CMakeFiles/benchmark.dir/json_reporter.cc.o CMakeFiles/benchmark.dir/reporter.cc.o CMakeFiles/benchmark.dir/sleep.cc.o CMakeFiles/benchmark.dir/statistics.cc.o CMakeFiles/benchmark.dir/string_util.cc.o CMakeFiles/benchmark.dir/sysinfo.cc.o CMakeFiles/benchmark.dir/timers.cc.o
/usr/bin/ranlib libbenchmark.a
[ 80%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
Scanning dependencies of target generated-data
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated && /usr/bin/ruby genfeaturejson.rb /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-miss.json ...
[ 80%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/g++-10  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/include  -march=native -O3 -DNDEBUG -fPIC   -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -pthread -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/g++-10 -fPIC -march=native -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.7 -o ../libsimdjson.so.7.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.7.0.0 ../libsimdjson.so.7 ../libsimdjson.so
[ 80%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
Scanning dependencies of target yyjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/gcc-10  -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src  -O3 -DNDEBUG   -o CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o   -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src/yyjson.c
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -P CMakeFiles/yyjson.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -E cmake_link_script CMakeFiles/yyjson.dir/link.txt --verbose=1
/usr/bin/ar qc libyyjson.a  CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o
/usr/bin/ranlib libyyjson.a
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/g++-10  -DRAPIDJSON_HAS_STDSTRING -DSAJSON_UNSORTED_OBJECT_KEYS -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_COMPETITION_NLOHMANN_JSON -DSIMDJSON_COMPETITION_RAPIDJSON -DSIMDJSON_COMPETITION_SAJSON -DSIMDJSON_COMPETITION_YYJSON -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/rapidjson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/sajson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/json  -march=native -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/g++-10  -march=native -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.7.0.0 ../_deps/google_benchmarks/src/libbenchmark.a ../dependencies/libyyjson.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.8.0/skylake-gcc10.2-native.json --benchmark_out_format=json
2021-01-25 03:00:40
Running benchmark/bench_ondemand
Run on (4 X 4000 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 256 KiB (x4)
  L3 Unified 8192 KiB (x1)
Load Average: 1.00, 1.00, 0.90
simdjson::dom implementation:      haswell
simdjson::ondemand implementation: haswell

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                  259964 ns       288631 ns         2620           3.664k           2.44343G               0        92.636k    954.378k              1.51125          3.86916k       3.69264G          2.91501M                     4.6159                     3.05436           386.916k    3.81338k   631.515k        2.2624G/s    12.9118    92.378k   959.127k         1.51877   3.84668k/s 3.68946G/s     2.91501M                4.6159                3.03923        100       384.668k/s [BEST: throughput=  2.44 GB/s doc_throughput=  3869 docs/s instructions=     2915013 cycles=      954378 branch_miss=    3664 cache_miss=       0 cache_ref=     92636 items=       100 avg_time=    259964 ns]
partial_tweets<simdjson_ondemand>/manual_time             188293 ns       216844 ns         3712           1.585k           3.37996G               0        57.426k    689.969k              1.09256          5.35214k       3.69281G           2.1433M                     3.3939                     3.10637           535.214k    1.74647k   631.515k       3.12356G/s   0.130927   57.7606k   694.935k         1.10042   5.31087k/s 3.69071G/s      2.1433M                3.3939                3.08417        100       531.087k/s [BEST: throughput=  3.38 GB/s doc_throughput=  5352 docs/s instructions=     2143300 cycles=      689969 branch_miss=    1585 cache_miss=       0 cache_ref=     57426 items=       100 avg_time=    188292 ns]
partial_tweets<yyjson>/manual_time                        689738 ns       720959 ns         1015           9.849k           1.58302G             257        78.653k    1.47294M              2.33238          2.50671k       3.69222G          2.90845M                    4.60552                      1.9746           250.671k    7.67692k   631.515k       873.172M/s    983.534   51.3503k   1.69338M         2.68145   1.44983k/s  2.4551G/s     2.90915M               4.60661                1.71795        100       144.983k/s [BEST: throughput=  1.58 GB/s doc_throughput=  2506 docs/s instructions=     2908453 cycles=     1472936 branch_miss=    9849 cache_miss=     257 cache_ref=     78653 items=       100 avg_time=    689738 ns]
partial_tweets<yyjson_insitu>/manual_time                 479634 ns       509176 ns         1460           7.029k           1.76791G             686        48.137k     1.3107M              2.07549          2.79948k       3.66928G          2.90834M                    4.60535                     2.21892           279.948k    7.57972k   631.515k       1.22624G/s    138.888   33.5617k   1.42348M         2.25407   2.08492k/s 2.96784G/s     2.90861M               4.60576                2.04331        100       208.492k/s [BEST: throughput=  1.77 GB/s doc_throughput=  2799 docs/s instructions=     2908345 cycles=     1310701 branch_miss=    7029 cache_miss=     686 cache_ref=     48137 items=       100 avg_time=    479633 ns]
partial_tweets<sajson>/manual_time                        558146 ns       586972 ns         1251          10.311k           1.14342G               0        48.163k    2.03903M              3.22879           1.8106k       3.69186G          6.04844M                    9.57767                     2.96633            181.06k    10.9112k   631.515k       1079.04M/s    8.66027   48.1551k   2.05894M         3.26032   1.79164k/s 3.68889G/s     6.04844M               9.57767                2.93765        100       179.164k/s [BEST: throughput=  1.14 GB/s doc_throughput=  1810 docs/s instructions=     6048442 cycles=     2039030 branch_miss=   10311 cache_miss=       0 cache_ref=     48163 items=       100 avg_time=    558146 ns]
partial_tweets<rapidjson>/manual_time                    1639290 ns      1668583 ns          427          27.414k           440.205M          9.712k        54.493k    5.29593M              8.38607           697.062       3.69159G          13.1234M                    20.7809                     2.47802           69.7062k    27.4823k   631.515k       367.391M/s    500.857   34.2861k   5.45954M         8.64514     610.02/s 3.33043G/s     13.1242M                20.782                 2.4039        100        61.002k/s [BEST: throughput=  0.44 GB/s doc_throughput=   697 docs/s instructions=    13123425 cycles=     5295926 branch_miss=   27414 cache_miss=    9712 cache_ref=     54493 items=       100 avg_time=   1639289 ns]
partial_tweets<rapidjson_insitu>/manual_time             1032358 ns      1061377 ns          681          24.253k           691.428M              28        45.944k    3.37185M              5.33931           1094.87       3.69175G          9.82401M                    15.5563                     2.91353           109.487k    24.2959k   631.515k       583.383M/s     219.57   35.1949k   3.46214M         5.48227    968.657/s 3.35362G/s     9.82462M               15.5572                2.83773        100       96.8657k/s [BEST: throughput=  0.69 GB/s doc_throughput=  1094 docs/s instructions=     9824009 cycles=     3371853 branch_miss=   24253 cache_miss=      28 cache_ref=     45944 items=       100 avg_time=   1032357 ns]
partial_tweets<nlohmann_json>/manual_time                7739061 ns      7774732 ns           91         135.362k           84.2545M              30       232.669k    27.6505M              43.7843           133.416       3.68903G           70.778M                    112.077                     2.55974           13.3416k    147.916k   631.515k       77.8208M/s    67.7582   369.807k   28.5505M         45.2095    129.215/s 3.68914G/s     71.3836M               113.035                2.50026        100       12.9215k/s [BEST: throughput=  0.08 GB/s doc_throughput=   133 docs/s instructions=    70778002 cycles=    27650466 branch_miss=  135362 cache_miss=      30 cache_ref=    232669 items=       100 avg_time=   7739061 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                  97388330 ns    100781730 ns            7         881.063k           472.623M        10.9179M       15.4036M    358.948M              7.80343           10.2747       3.68808G          981.675M                    21.3413                     2.73487           10.2747M    881.862k   45.9988M       450.443M/s    10.933M   15.4031M   359.206M         7.80904    10.2682/s 3.68839G/s     981.675M               21.3413                 2.7329      1000k       10.2682M/s [BEST: throughput=  0.47 GB/s doc_throughput=    10 docs/s instructions=   981674958 cycles=   358948204 branch_miss=  881063 cache_miss=10917869 cache_ref=  15403646 items=   1000000 avg_time=  97388330 ns]
large_random<simdjson_ondemand>/manual_time             60538490 ns     63910939 ns           12         883.959k           761.058M        5.65031M       8.02166M     222.97M               4.8473           16.5452       3.68908G          644.053M                    14.0015                     2.88852           16.5452M    888.093k   45.9988M       724.627M/s   5.68482M   8.02331M   223.309M         4.85468    16.5184/s 3.68872G/s     644.053M               14.0015                2.88413      1000k       16.5184M/s [BEST: throughput=  0.76 GB/s doc_throughput=    16 docs/s instructions=   644052609 cycles=   222970085 branch_miss=  883959 cache_miss= 5650315 cache_ref=   8021664 items=   1000000 avg_time=  60538490 ns]
large_random<simdjson_ondemand_unordered>/manual_time   62045211 ns     65420004 ns           11         878.748k           742.194M         5.6921M       8.02383M    228.627M              4.97029           16.1351       3.68892G          644.053M                    14.0015                     2.81704           16.1351M    879.254k   45.9988M        707.03M/s   5.69271M   8.02461M   228.795M         4.97393    16.1173/s 3.68755G/s     644.053M               14.0015                2.81498      1000k       16.1173M/s [BEST: throughput=  0.74 GB/s doc_throughput=    16 docs/s instructions=   644052614 cycles=   228627484 branch_miss=  878748 cache_miss= 5692099 cache_ref=   8023830 items=   1000000 avg_time=  62045211 ns]
large_random<yyjson>/manual_time                       127347644 ns    130773094 ns            5         662.662k           361.385M        5.82871M       9.03876M    349.758M              7.60363           7.85641       2.74784G           942.15M                    20.4821                     2.69372           7.85641M    660.667k   45.9988M       344.473M/s   5.82407M   9.03311M   349.682M         7.60199    7.85252/s 2.74589G/s     942.149M               20.4821                 2.6943      1000k       7.85252M/s [BEST: throughput=  0.36 GB/s doc_throughput=     7 docs/s instructions=   942149626 cycles=   349757720 branch_miss=  662662 cache_miss= 5828707 cache_ref=   9038763 items=   1000000 avg_time= 127347644 ns]
large_random<yyjson_insitu>/manual_time                109516316 ns    112925272 ns            6          657.05k           420.145M        4.94613M       7.67477M    318.029M              6.91385           9.13382       2.90482G          936.029M                     20.349                     2.94322           9.13382M     660.58k   45.9988M        400.56M/s   4.94895M   7.68082M   318.257M         6.91882    9.13106/s 2.90603G/s     936.029M                20.349                2.94111      1000k       9.13106M/s [BEST: throughput=  0.42 GB/s doc_throughput=     9 docs/s instructions=   936028648 cycles=   318028782 branch_miss=  657050 cache_miss= 4946133 cache_ref=   7674768 items=   1000000 avg_time= 109516315 ns]
large_random<sajson>/manual_time                        90398718 ns     93788050 ns            8         590.406k           511.373M        8.31479M       12.1335M    331.836M              7.21403           11.1171       3.68906G          1066.99M                    23.1961                     3.21542           11.1171M    590.636k   45.9988M       485.271M/s   8.36025M   12.1856M   333.389M         7.24778    11.0621/s 3.68798G/s     1066.99M               23.1961                3.20044      1000k       11.0621M/s [BEST: throughput=  0.51 GB/s doc_throughput=    11 docs/s instructions=  1066991821 cycles=   331836355 branch_miss=  590406 cache_miss= 8314792 cache_ref=  12133470 items=   1000000 avg_time=  90398717 ns]
large_random<rapidjson>/manual_time                    177958751 ns    181343760 ns            4         604.026k           269.356M        6.99639M       10.8527M    571.885M              12.4326           5.85571       3.34879G          1.67314G                    36.3736                     2.92566           5.85571M    606.985k   45.9988M       246.506M/s   6.41469M   10.1168M   577.322M         12.5508    5.61928/s 3.24413G/s     1.67315G               36.3738                2.89812      1000k       5.61928M/s [BEST: throughput=  0.27 GB/s doc_throughput=     5 docs/s instructions=  1673139674 cycles=   571885045 branch_miss=  604026 cache_miss= 6996388 cache_ref=  10852672 items=   1000000 avg_time= 177958750 ns]
large_random<rapidjson_lossless>/manual_time           204986106 ns    208379786 ns            4         597.235k           232.398M        7.01808M       10.8262M    671.973M              14.6085           5.05226       3.39498G           2.0601G                    44.7861                     3.06575           5.05226M    592.992k   45.9988M       214.004M/s    6.4178M   10.0939M   677.011M          14.718    4.87838/s 3.30271G/s     2.06011G               44.7863                3.04296      1000k       4.87838M/s [BEST: throughput=  0.23 GB/s doc_throughput=     5 docs/s instructions=  2060104882 cycles=   671973341 branch_miss=  597235 cache_miss= 7018084 cache_ref=  10826201 items=   1000000 avg_time= 204986106 ns]
large_random<rapidjson_insitu>/manual_time             156463881 ns    159887393 ns            5         599.454k            309.61M        8.03579M       12.3565M    490.072M               10.654           6.73083       3.29859G          1.50514G                    32.7213                     3.07126           6.73083M    599.852k   45.9988M        280.37M/s   7.46654M    11.562M   496.714M         10.7984    6.39125/s 3.17462G/s     1.50515G               32.7215                3.03021      1000k       6.39125M/s [BEST: throughput=  0.31 GB/s doc_throughput=     6 docs/s instructions=  1505139597 cycles=   490072071 branch_miss=  599454 cache_miss= 8035785 cache_ref=  12356547 items=   1000000 avg_time= 156463881 ns]
large_random<nlohmann_json>/manual_time               1223933646 ns   1227247698 ns            1          4.5535M           37.5827M        46.7433M       60.3638M    4.50183G              97.8685          0.817038       3.67817G          11.9464G                     259.71                     2.65367           817.038k     4.5535M   45.9988M       35.8417M/s   46.7433M   60.3638M   4.50183G         97.8685   0.817038/s 3.67817G/s     11.9464G                259.71                2.65367      1000k       817.038k/s [BEST: throughput=  0.04 GB/s doc_throughput=     0 docs/s instructions= 11946361216 cycles=  4501829909 branch_miss= 4553497 cache_miss=46743331 cache_ref=  60363806 items=   1000000 avg_time=1223933646 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                        89030112 ns     99429145 ns            8          445.09k           1.54478G        15.7364M        22.351M    327.867M              2.38787           11.2507       3.68874G          938.041M                     6.8318                     2.86104           5.89862M     445.13k   137.305M       1.43631G/s    15.704M   22.2883M   328.373M         2.39156    11.2322/s 3.68833G/s     938.041M                6.8318                2.85663   524.288k       5.88888M/s [BEST: throughput=  1.54 GB/s doc_throughput=    11 docs/s instructions=   938040622 cycles=   327866907 branch_miss=  445090 cache_miss=15736387 cache_ref=  22351045 items=    524288 avg_time=  89030112 ns]
kostya<simdjson_ondemand>/manual_time                   61131758 ns     71494398 ns           11         515.753k           2.24748G        10.0695M        13.924M     225.37M              1.64138           16.3685       3.68897G          676.617M                    4.92784                     3.00225           8.58181M    516.842k   137.305M        2.0918G/s   10.0754M   13.9801M   225.497M         1.64231    16.3581/s  3.6887G/s     676.617M               4.92784                3.00056   524.288k       8.57636M/s [BEST: throughput=  2.25 GB/s doc_throughput=    16 docs/s instructions=   676617059 cycles=   225370282 branch_miss=  515753 cache_miss=10069549 cache_ref=  13924014 items=    524288 avg_time=  61131758 ns]
kostya<yyjson>/manual_time                             205478635 ns    215931580 ns            3         414.286k           668.875M        11.2541M       16.0971M    560.085M              4.07913           4.87146       2.72843G          984.045M                    7.16686                     1.75696           2.55405M    414.151k   137.305M       637.265M/s   11.2517M   16.1171M   559.972M         4.07831    4.86669/s 2.72521G/s     984.045M               7.16686                1.75731   524.288k       2.55155M/s [BEST: throughput=  0.67 GB/s doc_throughput=     4 docs/s instructions=   984045267 cycles=   560085117 branch_miss=  414286 cache_miss=11254099 cache_ref=  16097093 items=    524288 avg_time= 205478634 ns]
kostya<yyjson_insitu>/manual_time                      151436046 ns    161833593 ns            5         412.974k           907.615M         8.7191M       12.1651M    463.236M              3.37377           6.61021       3.06209G          965.775M                     7.0338                     2.08484           3.46565M    413.197k   137.305M       864.683M/s   8.71894M   12.2052M   463.485M         3.37559    6.60345/s  3.0606G/s     965.775M                7.0338                2.08372   524.288k       3.46211M/s [BEST: throughput=  0.91 GB/s doc_throughput=     6 docs/s instructions=   965775264 cycles=   463236076 branch_miss=  412974 cache_miss= 8719099 cache_ref=  12165087 items=    524288 avg_time= 151436046 ns]
kostya<sajson>/manual_time                             132131882 ns    142530515 ns            5         358.164k           1040.86M        12.3315M       17.1387M    486.632M              3.54417           7.58067         3.689G          1.60304G                    11.6751                     3.29416           3.97445M    358.568k   137.305M       991.012M/s   12.3617M   17.1196M   487.218M         3.54843     7.5682/s 3.68736G/s     1.60304G               11.6751                 3.2902   524.288k       3.96791M/s [BEST: throughput=  1.04 GB/s doc_throughput=     7 docs/s instructions=  1603042688 cycles=   486631959 branch_miss=  358164 cache_miss=12331518 cache_ref=  17138690 items=    524288 avg_time= 132131882 ns]
kostya<rapidjson>/manual_time                          253280206 ns    263694153 ns            3         982.139k           549.596M        8.11557M       11.9889M    840.296M              6.11992           4.00274       3.36348G          2.29774G                    16.7346                     2.73444           2.09859M    984.074k   137.305M       516.994M/s    7.8058M   11.6124M   843.382M          6.1424     3.9482/s 3.32984G/s     2.29774G               16.7346                2.72444   524.288k       2.06999M/s [BEST: throughput=  0.55 GB/s doc_throughput=     4 docs/s instructions=  2297738775 cycles=   840295515 branch_miss=  982139 cache_miss= 8115568 cache_ref=  11988892 items=    524288 avg_time= 253280206 ns]
kostya<rapidjson_lossless>/manual_time                 266027305 ns    276425824 ns            3         946.179k            522.86M        8.11925M       12.1047M    887.564M              6.46418           3.80802       3.37986G          2.51583G                     18.323                     2.83454            1.9965M    946.178k   137.305M       492.221M/s   7.81679M   11.6997M   890.441M         6.48513    3.75901/s 3.34718G/s     2.51584G                18.323                2.82538   524.288k       1.97081M/s [BEST: throughput=  0.52 GB/s doc_throughput=     3 docs/s instructions=  2515833694 cycles=   887563874 branch_miss=  946179 cache_miss= 8119246 cache_ref=  12104658 items=    524288 avg_time= 266027305 ns]
kostya<rapidjson_insitu>/manual_time                   229590181 ns    239974198 ns            3         1057.72k           606.636M        11.0716M       15.6311M    753.162M              5.48532           4.41816       3.32759G            2.048G                    14.9157                     2.71921           2.31639M    1053.27k   137.305M       570.339M/s   10.7796M   15.2666M   756.162M         5.50717    4.35559/s 3.29353G/s     2.04801G               14.9157                2.70842   524.288k       2.28358M/s [BEST: throughput=  0.61 GB/s doc_throughput=     4 docs/s instructions=  2048003749 cycles=   753162373 branch_miss= 1057723 cache_miss=11071608 cache_ref=  15631105 items=    524288 avg_time= 229590181 ns]
kostya<nlohmann_json>/manual_time                     1603020932 ns   1613252815 ns            1          5.1118M           85.6539M        69.5985M        86.944M    5.91246G              43.0608          0.623822       3.68832G          15.1309G                    110.199                     2.55915           327.062k     5.1118M   137.305M       81.6859M/s   69.5985M    86.944M   5.91246G         43.0608   0.623822/s 3.68832G/s     15.1309G               110.199                2.55915   524.288k       327.062k/s [BEST: throughput=  0.09 GB/s doc_throughput=     0 docs/s instructions= 15130855582 cycles=  5912456457 branch_miss= 5111798 cache_miss=69598541 cache_ref=  86944042 items=    524288 avg_time=1603020932 ns]
distinct_user_id<simdjson_dom>/manual_time                262866 ns       293962 ns         2663           3.844k           2.41958G               0        94.706k    963.758k               1.5261          3.83139k       3.69253G          2.85594M                    4.52236                     2.96333            440.61k    3.98267k   631.515k       2.23743G/s    0.32332    94.751k   969.984k         1.53596   3.80422k/s 3.69003G/s     2.85594M               4.52236                2.94432        115       437.486k/s [BEST: throughput=  2.42 GB/s doc_throughput=  3831 docs/s instructions=     2855937 cycles=      963758 branch_miss=    3844 cache_miss=       0 cache_ref=     94706 items=       115 avg_time=    262865 ns]
distinct_user_id<simdjson_ondemand>/manual_time           184253 ns       214419 ns         3796           1.762k           3.44919G               0        57.205k    676.162k               1.0707          5.46176k       3.69304G          2.10219M                    3.32881                     3.10901           628.103k    1.90263k   631.515k       3.19205G/s     1.0137   57.2981k   679.861k         1.07656   5.42732k/s 3.68983G/s     2.10219M               3.32881                3.09209        115       624.142k/s [BEST: throughput=  3.45 GB/s doc_throughput=  5461 docs/s instructions=     2102194 cycles=      676162 branch_miss=    1762 cache_miss=       0 cache_ref=     57205 items=       115 avg_time=    184252 ns]
distinct_user_id<yyjson>/manual_time                      600682 ns       634924 ns         1000           6.922k           1.65519G         22.168k        77.179k    1.40871M              2.23069          2.62098k       3.69222G          2.87509M                    4.55268                     2.04093           301.413k    7.63645k   631.515k       1002.63M/s     7.488k   57.6571k    1.6225M         2.56922   1.66477k/s  2.7011G/s     2.87528M               4.55299                1.77213        115       191.449k/s [BEST: throughput=  1.66 GB/s doc_throughput=  2620 docs/s instructions=     2875087 cycles=     1408715 branch_miss=    6922 cache_miss=   22168 cache_ref=     77179 items=       115 avg_time=    600681 ns]
distinct_user_id<yyjson_insitu>/manual_time               473308 ns       506259 ns         1479           7.123k           1.79035G             914        46.692k    1.29892M              2.05683          2.83501k       3.68245G          2.87457M                    4.55186                     2.21304           326.026k     7.6878k   631.515k       1.24262G/s    100.429   32.1078k   1.41354M         2.23834   2.11279k/s 2.98652G/s     2.87483M               4.55228                2.03378        115       242.971k/s [BEST: throughput=  1.79 GB/s doc_throughput=  2835 docs/s instructions=     2874570 cycles=     1298921 branch_miss=    7123 cache_miss=     914 cache_ref=     46692 items=       115 avg_time=    473308 ns]
distinct_user_id<sajson>/manual_time                      554072 ns       585231 ns         1262          10.462k           1.14923G               0        47.787k     2.0288M              3.21259           1.8198k       3.69201G          5.98101M                    9.47089                     2.94805           209.277k    10.9256k   631.515k       1086.97M/s    1.97781   47.7398k   2.04427M         3.23708   1.80482k/s 3.68953G/s     5.98101M               9.47089                2.92575        115       207.554k/s [BEST: throughput=  1.15 GB/s doc_throughput=  1819 docs/s instructions=     5981008 cycles=     2028799 branch_miss=   10462 cache_miss=       0 cache_ref=     47787 items=       115 avg_time=    554072 ns]
distinct_user_id<rapidjson>/manual_time                  1626202 ns      1657559 ns          433          27.697k           440.723M             266        54.983k    5.28963M              8.37609           697.882       3.69154G          13.0657M                    20.6895                     2.47006           80.2564k    27.4878k   631.515k       370.347M/s    952.725   35.4257k   5.44532M         8.62262     614.93/s 3.34849G/s     13.0666M               20.6909                2.39961        115       70.7169k/s [BEST: throughput=  0.44 GB/s doc_throughput=   697 docs/s instructions=    13065703 cycles=     5289627 branch_miss=   27697 cache_miss=     266 cache_ref=     54983 items=       115 avg_time=   1626202 ns]
distinct_user_id<rapidjson_insitu>/manual_time           1010869 ns      1041256 ns          696          23.855k           693.896M             144        45.585k    3.34764M              5.30097           1098.78       3.67832G          9.77665M                    15.4813                     2.92046            126.36k    24.2363k   631.515k       595.784M/s   1.91038k    36.502k   3.43961M          5.4466    989.248/s 3.40263G/s     9.77698M               15.4818                2.84247        115       113.764k/s [BEST: throughput=  0.69 GB/s doc_throughput=  1098 docs/s instructions=     9776647 cycles=     3347641 branch_miss=   23855 cache_miss=     144 cache_ref=     45585 items=       115 avg_time=   1010868 ns]
distinct_user_id<nlohmann_json>/manual_time              7031901 ns      7067030 ns          100         120.183k           91.5387M              26       292.484k    25.4589M               40.314           144.951       3.69029G          64.7592M                    102.546                     2.54367           16.6694k     125.89k   631.515k       85.6468M/s   1.21014k   338.863k   25.9363M         41.0699    142.209/s 3.68837G/s      65.071M                103.04                2.50888        115        16.354k/s [BEST: throughput=  0.09 GB/s doc_throughput=   144 docs/s instructions=    64759177 cycles=    25458906 branch_miss=  120183 cache_miss=      26 cache_ref=    292484 items=       115 avg_time=   7031900 ns]
find_tweet<simdjson_dom>/manual_time                      253323 ns       282524 ns         2792           3.444k           2.50902G               0         84.07k    929.408k              1.47171          3.97302k       3.69255G           2.7749M                    4.39403                     2.98566           3.97302k    3.61851k   631.515k       2.32171G/s   0.612822   83.9529k   934.642k            1.48   3.94753k/s 3.68952G/s      2.7749M               4.39403                2.96894          1       3.94753k/s [BEST: throughput=  2.51 GB/s doc_throughput=  3973 docs/s instructions=     2774898 cycles=      929408 branch_miss=    3444 cache_miss=       0 cache_ref=     84070 items=         1 avg_time=    253323 ns]
find_tweet<simdjson_ondemand>/manual_time                 119205 ns       147780 ns         5873              720           5.31851G               0        32.905k    438.669k              0.69463          8.42183k        3.6944G          1.47887M                    2.34178                     3.37126           8.42183k     758.611   631.515k       4.93387G/s   0.548783   33.0461k   440.047k        0.696812   8.38888k/s  3.6915G/s     1.47887M               2.34178                3.36071          1       8.38888k/s [BEST: throughput=  5.32 GB/s doc_throughput=  8421 docs/s instructions=     1478869 cycles=      438669 branch_miss=     720 cache_miss=       0 cache_ref=     32905 items=         1 avg_time=    119205 ns]
find_tweet<yyjson>/manual_time                            663975 ns       695375 ns         1181           9.513k            1.6391G             139        68.513k    1.42253M              2.25257           2.5955k       3.69219G          2.82412M                    4.47198                     1.98528            2.5955k     7.5921k   631.515k       907.052M/s     1017.5   41.2914k   1.64944M         2.61187   1.50608k/s 2.48419G/s     2.82461M               4.47275                1.71247          1       1.50608k/s [BEST: throughput=  1.64 GB/s doc_throughput=  2595 docs/s instructions=     2824125 cycles=     1422533 branch_miss=    9513 cache_miss=     139 cache_ref=     68513 items=         1 avg_time=    663974 ns]
find_tweet<yyjson_insitu>/manual_time                     462645 ns       493024 ns         1513           7.015k           1.83409G             556         38.37k    1.26785M              2.00764          2.90427k       3.68218G          2.82381M                    4.47148                     2.22724           2.90427k    7.43179k   631.515k       1.27126G/s    16.5373   23.3852k   1.37543M         2.17798   2.16148k/s 2.97296G/s     2.82407M                4.4719                2.05323          1       2.16148k/s [BEST: throughput=  1.83 GB/s doc_throughput=  2904 docs/s instructions=     2823809 cycles=     1267852 branch_miss=    7015 cache_miss=     556 cache_ref=     38370 items=         1 avg_time=    462645 ns]
find_tweet<sajson>/manual_time                            542091 ns       572143 ns         1289          10.213k           1.17646G               0        38.244k    1.98175M              3.13808          1.86292k       3.69183G          5.88886M                    9.32498                     2.97155           1.86292k    10.7557k   631.515k       1110.99M/s    6.07758   38.2831k   1.99994M         3.16689   1.84471k/s 3.68931G/s     5.88886M               9.32498                2.94452          1       1.84471k/s [BEST: throughput=  1.18 GB/s doc_throughput=  1862 docs/s instructions=     5888863 cycles=     1981746 branch_miss=   10213 cache_miss=       0 cache_ref=     38244 items=         1 avg_time=    542091 ns]
find_tweet<rapidjson>/manual_time                        1618409 ns      1647729 ns          437          27.603k            443.13M         14.647k        49.068k    5.26102M              8.33079           701.693       3.69162G          12.9976M                    20.5816                     2.47054            701.693    27.4684k   631.515k       372.131M/s    713.481   28.3442k   5.41547M         8.57536    617.891/s 3.34617G/s     12.9984M               20.5829                2.40024          1        617.891/s [BEST: throughput=  0.44 GB/s doc_throughput=   701 docs/s instructions=    12997559 cycles=     5261019 branch_miss=   27603 cache_miss=   14647 cache_ref=     49068 items=         1 avg_time=   1618408 ns]
find_tweet<rapidjson_insitu>/manual_time                 1002237 ns      1031959 ns          710          23.836k           700.226M          5.305k        36.758k    3.32942M              5.27211           1.1088k       3.69167G          9.71896M                    15.3899                     2.91912            1.1088k    24.1782k   631.515k       600.916M/s   1.72172k   27.5781k   3.40761M         5.39592    997.768/s     3.4G/s      9.7193M               15.3904                2.85224          1        997.768/s [BEST: throughput=  0.70 GB/s doc_throughput=  1108 docs/s instructions=     9718962 cycles=     3329418 branch_miss=   23836 cache_miss=    5305 cache_ref=     36758 items=         1 avg_time=   1002236 ns]
find_tweet<nlohmann_json>/manual_time                    5980033 ns      6010478 ns          119          95.003k            108.28M              11       232.631k    21.5222M              34.0802            171.46       3.69019G          55.1709M                    87.3627                     2.56344             171.46    102.533k   631.515k       100.712M/s    141.252   287.929k   22.0587M         34.9298    167.223/s 3.68873G/s     55.3324M               87.6186                2.50842          1        167.223/s [BEST: throughput=  0.11 GB/s doc_throughput=   171 docs/s instructions=    55170865 cycles=    21522158 branch_miss=   95003 cache_miss=      11 cache_ref=    232631 items=         1 avg_time=   5980032 ns]
top_tweet<simdjson_dom>/manual_time                       257035 ns       285673 ns         2724           3.524k           2.47461G               0        91.991k    942.313k              1.49215          3.91853k       3.69248G          2.80907M                    4.44814                     2.98103           3.91853k    3.71858k   631.515k       2.28819G/s    2.86527   91.9739k   948.341k         1.50169   3.89052k/s 3.68954G/s     2.80907M               4.44814                2.96209          1       3.89052k/s [BEST: throughput=  2.47 GB/s doc_throughput=  3918 docs/s instructions=     2809067 cycles=      942313 branch_miss=    3524 cache_miss=       0 cache_ref=     91991 items=         1 avg_time=    257035 ns]
top_tweet<simdjson_ondemand>/manual_time                  177410 ns       205862 ns         3944           1.516k           3.58026G               0        57.232k    651.406k               1.0315          5.66932k       3.69303G          2.10137M                     3.3275                     3.22589           5.66932k    1.62997k   631.515k       3.31517G/s   0.580375   57.2422k   654.714k         1.03674   5.63666k/s  3.6904G/s     2.10137M                3.3275                3.20959          1       5.63666k/s [BEST: throughput=  3.58 GB/s doc_throughput=  5669 docs/s instructions=     2101367 cycles=      651406 branch_miss=    1516 cache_miss=       0 cache_ref=     57232 items=         1 avg_time=    177410 ns]
top_tweet<simdjson_ondemand_forward_only>/manual_time     175385 ns       203837 ns         3989           1.457k           3.62563G               0        57.984k    643.286k              1.01864          5.74115k        3.6932G          2.12693M                    3.36799                     3.30636           5.74115k    1.60276k   631.515k       3.35344G/s   0.740286   57.9182k    647.19k         1.02482   5.70173k/s  3.6901G/s     2.12693M               3.36799                3.28641          1       5.70173k/s [BEST: throughput=  3.63 GB/s doc_throughput=  5741 docs/s instructions=     2126934 cycles=      643286 branch_miss=    1457 cache_miss=       0 cache_ref=     57984 items=         1 avg_time=    175385 ns]
top_tweet<yyjson>/manual_time                             669095 ns       699671 ns         1198          10.195k           1.59952G             181        72.743k    1.45785M              2.30849          2.53283k       3.69248G          2.84504M                     4.5051                     1.95154           2.53283k    7.71364k   631.515k       900.111M/s    1012.03    46.534k   1.66839M         2.64189   1.49456k/s 2.49351G/s      2.8455M               4.50583                1.70553          1       1.49456k/s [BEST: throughput=  1.60 GB/s doc_throughput=  2532 docs/s instructions=     2845040 cycles=     1457846 branch_miss=   10195 cache_miss=     181 cache_ref=     72743 items=         1 avg_time=    669094 ns]
top_tweet<yyjson_insitu>/manual_time                      468230 ns       497868 ns         1495           7.243k           1.80256G             503        42.883k       1.29M               2.0427          2.85434k       3.68208G          2.84469M                    4.50455                      2.2052           2.85434k    7.58244k   631.515k        1.2561G/s    47.2134   28.5979k   1.39588M         2.21037    2.1357k/s 2.98119G/s     2.84496M               4.50497                2.03811          1        2.1357k/s [BEST: throughput=  1.80 GB/s doc_throughput=  2854 docs/s instructions=     2844694 cycles=     1289996 branch_miss=    7243 cache_miss=     503 cache_ref=     42883 items=         1 avg_time=    468229 ns]
top_tweet<sajson>/manual_time                             546635 ns       575634 ns         1277          10.323k           1.16611G               0        43.756k    1.99938M              3.16601          1.84653k       3.69192G          5.91603M                      9.368                     2.95893           1.84653k    10.8101k   631.515k       1101.76M/s    0.97964   43.5932k    2.0166M         3.19328   1.82937k/s 3.68912G/s     5.91604M                 9.368                2.93366          1       1.82937k/s [BEST: throughput=  1.17 GB/s doc_throughput=  1846 docs/s instructions=     5916035 cycles=     1999381 branch_miss=   10323 cache_miss=       0 cache_ref=     43756 items=         1 avg_time=    546634 ns]
top_tweet<rapidjson>/manual_time                         1623087 ns      1651896 ns          435          27.402k           442.344M             517        51.297k    5.27036M              8.34558           700.449       3.69161G          13.0482M                    20.6618                     2.47577            700.449    27.5686k   631.515k       371.058M/s    815.972   31.8511k   5.43288M         8.60294     616.11/s 3.34725G/s      13.049M               20.6631                2.40186          1         616.11/s [BEST: throughput=  0.44 GB/s doc_throughput=   700 docs/s instructions=    13048215 cycles=     5270356 branch_miss=   27402 cache_miss=     517 cache_ref=     51297 items=         1 avg_time=   1623086 ns]
top_tweet<rapidjson_insitu>/manual_time                  1008058 ns      1037006 ns          702           23.69k           697.293M          4.331k          41.9k     3.3434M              5.29426          1.10416k       3.69165G          9.76079M                    15.4561                     2.91942           1.10416k    24.2102k   631.515k       597.445M/s   1.79318k   33.0333k   3.42894M          5.4297    992.007/s 3.40153G/s     9.76112M               15.4567                2.84669          1        992.007/s [BEST: throughput=  0.70 GB/s doc_throughput=  1104 docs/s instructions=     9760788 cycles=     3343404 branch_miss=   23690 cache_miss=    4331 cache_ref=     41900 items=         1 avg_time=   1008057 ns]
top_tweet<nlohmann_json>/manual_time                     8626934 ns      8656526 ns           81         179.188k           73.7818M              97       435.046k    31.5735M              49.9964           116.833       3.68883G          77.9751M                    123.473                     2.46964            116.833    183.998k   631.515k       69.8116M/s    1.8023k    406.12k   31.8151M          50.379    115.916/s 3.68788G/s     78.4128M               124.166                2.46464          1        115.916/s [BEST: throughput=  0.07 GB/s doc_throughput=   116 docs/s instructions=    77975128 cycles=    31573489 branch_miss=  179188 cache_miss=      97 cache_ref=    435046 items=         1 avg_time=   8626933 ns]
