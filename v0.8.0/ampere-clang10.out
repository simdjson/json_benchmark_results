run_benchmark: v0.8.0 /home/jkeiser/simdjson_benchmark_results/v0.8.0/skylake-clang10.json 
git reset --hard v0.8.0
HEAD is now at c96ff018 Version 0.8.
cmake ..
-- The CXX compiler identification is Clang 10.0.1
-- The C compiler identification is Clang 10.0.1
-- Check for working CXX compiler: /usr/bin/clang++-10
-- Check for working CXX compiler: /usr/bin/clang++-10 -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Check for working C compiler: /usr/bin/clang-10
-- Check for working C compiler: /usr/bin/clang-10 -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- No build type selected, default to Release
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed
-- Check if compiler accepts -pthread
-- Check if compiler accepts -pthread - yes
-- Found Threads: TRUE  
-- Looking for fork
-- Looking for fork - found
-- Looking for wait
-- Looking for wait - found
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Found Git: /usr/bin/git (found version "2.27.0") 
-- git Version: v0.2.1-c96ff018
-- Version: 0.2.1
-- Performing Test HAVE_CXX_FLAG_STD_CXX11
-- Performing Test HAVE_CXX_FLAG_STD_CXX11 - Success
-- Performing Test HAVE_CXX_FLAG_WALL
-- Performing Test HAVE_CXX_FLAG_WALL - Success
-- Performing Test HAVE_CXX_FLAG_WEXTRA
-- Performing Test HAVE_CXX_FLAG_WEXTRA - Success
-- Performing Test HAVE_CXX_FLAG_WSHADOW
-- Performing Test HAVE_CXX_FLAG_WSHADOW - Success
-- Performing Test HAVE_CXX_FLAG_WERROR
-- Performing Test HAVE_CXX_FLAG_WERROR - Success
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32 - Success
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED - Success
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WD654
-- Performing Test HAVE_CXX_FLAG_WD654 - Failed
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY - Success
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES -- failed to compile
-- Performing Test HAVE_CXX_FLAG_COVERAGE
-- Performing Test HAVE_CXX_FLAG_COVERAGE - Success
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Performing Test USE_BOOST_JSON
-- Performing Test USE_BOOST_JSON - Failed
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Found Python3: /usr/bin/python3.8 (found version "3.8.6") found components: Interpreter 
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
make[1]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[2]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
Scanning dependencies of target benchmark
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[  0%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/benchmark.cc.o
[ 10%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o
[ 10%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/benchmark_name.cc.o
[ 10%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/benchmark_register.cc.o
[ 20%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/benchmark_runner.cc.o
[ 20%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/colorprint.cc.o
[ 30%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/commandlineflags.cc.o
[ 30%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/complexity.cc.o
[ 30%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/console_reporter.cc.o
[ 40%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/counter.cc.o
[ 40%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/csv_reporter.cc.o
[ 50%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/json_reporter.cc.o
[ 50%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/reporter.cc.o
[ 60%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/sleep.cc.o
[ 60%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/statistics.cc.o
[ 60%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/string_util.cc.o
[ 70%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/sysinfo.cc.o
[ 70%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/timers.cc.o
[ 80%] Linking CXX static library libbenchmark.a
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 80%] Built target benchmark
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
Scanning dependencies of target generated-data
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 80%] Generating utf-8.json, escape.json, 0-structurals.json, 7-structurals.json, 15-structurals.json, 23-structurals.json
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-miss.json ...
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 80%] Built target generated-data
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
Scanning dependencies of target simdjson
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 80%] Building CXX object src/CMakeFiles/simdjson.dir/simdjson.cpp.o
[ 80%] Linking CXX shared library ../libsimdjson.so
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 80%] Built target simdjson
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
Scanning dependencies of target yyjson
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 80%] Building C object dependencies/CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o
[ 90%] Linking C static library libyyjson.a
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 90%] Built target yyjson
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
Scanning dependencies of target bench_ondemand
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[100%] Building CXX object benchmark/CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o
[100%] Linking CXX executable bench_ondemand
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[100%] Built target bench_ondemand
make[2]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[1]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.8.0/skylake-clang10.json --benchmark_out_format=json
2021-01-23 06:03:46
Running benchmark/bench_ondemand
Run on (32 X 3300 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x32)
  L1 Instruction 32 KiB (x32)
  L2 Unified 256 KiB (x16)
Load Average: 1.04, 0.79, 0.82
simdjson::dom implementation:      arm64
simdjson::ondemand implementation: arm64

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
partial_tweets<simdjson_dom>/manual_time                 1633290 ns      1702082 ns          428          13.424k           395.025M         25.942k       961.004k    5.11783M              8.10405            625.52        3.2013G          3.97372M                    6.29235                    0.776446            62.552k    13.5284k   631.515k        368.74M/s   25.9608k   962.931k   5.22275M         8.27019    612.261/s 3.19769G/s     3.97371M               6.29235               0.760847        100       61.2261k/s [BEST: throughput=  0.40 GB/s doc_throughput=   625 docs/s instructions=     3973716 cycles=     5117826 branch_miss=   13424 cache_miss=   25942 cache_ref=    961004 items=       100 avg_time=   1633290 ns]
partial_tweets<simdjson_ondemand>/manual_time            1097074 ns      1166338 ns          637           8.308k           577.518M         22.897k       447.548k    3.50135M              5.54437           914.496       3.20197G          2.73599M                    4.33242                    0.781409           91.4496k    8.60457k   631.515k       548.969M/s    22.906k   447.628k   3.50885M         5.55624    911.515/s 3.19837G/s     2.73599M               4.33242               0.779739        100       91.1515k/s [BEST: throughput=  0.58 GB/s doc_throughput=   914 docs/s instructions=     2735987 cycles=     3501350 branch_miss=    8308 cache_miss=   22897 cache_ref=    447548 items=       100 avg_time=   1097074 ns]
partial_tweets<yyjson>/manual_time                       1194050 ns      1266031 ns          588          46.013k           598.133M         24.287k       1.43026M    3.38101M              5.35381            947.14       3.20229G          3.30073M                    5.22668                    0.976255            94.714k    45.7987k   631.515k       504.384M/s   24.2704k   1.43105M   3.59408M         5.69121    837.486/s 3.00999G/s     3.30081M                5.2268                 0.9184        100       83.7486k/s [BEST: throughput=  0.60 GB/s doc_throughput=   947 docs/s instructions=     3300729 cycles=     3381012 branch_miss=   46013 cache_miss=   24287 cache_ref=   1430256 items=       100 avg_time=   1194050 ns]
partial_tweets<yyjson_insitu>/manual_time                1115027 ns      1188642 ns          629          45.752k           624.871M         14.451k       1.27179M     3.2361M              5.12434           989.479       3.20205G          3.20189M                    5.07017                    0.989428           98.9479k    45.8012k   631.515k        540.13M/s   14.4368k   1.27211M   3.45333M         5.46833     896.84/s 3.09708G/s     3.20204M               5.07041               0.927232        100        89.684k/s [BEST: throughput=  0.62 GB/s doc_throughput=   989 docs/s instructions=     3201887 cycles=     3236099 branch_miss=   45752 cache_miss=   14451 cache_ref=   1271789 items=       100 avg_time=   1115026 ns]
partial_tweets<sajson>/manual_time                       1451797 ns      1523815 ns          482          57.287k            435.98M         12.748k       1.86874M    4.63734M               7.3432           690.372       3.20149G          5.55211M                    8.79173                     1.19726           69.0372k    57.4418k   631.515k       414.837M/s   12.7562k   1.86936M   4.64269M         7.35167    688.802/s 3.19789G/s     5.55211M               8.79173                1.19588        100       68.8802k/s [BEST: throughput=  0.44 GB/s doc_throughput=   690 docs/s instructions=     5552109 cycles=     4637338 branch_miss=   57287 cache_miss=   12748 cache_ref=   1868744 items=       100 avg_time=   1451797 ns]
partial_tweets<rapidjson>/manual_time                    4604641 ns      4678306 ns          152          80.039k           139.786M         13.269k       13.3941M    14.4591M              22.8959            221.35       3.20053G          20.6856M                    32.7555                     1.43063            22.135k    79.8859k   631.515k       130.794M/s   13.5428k   13.3946M   14.5145M         22.9837    217.172/s 3.15215G/s     20.6861M               32.7564                 1.4252        100       21.7172k/s [BEST: throughput=  0.14 GB/s doc_throughput=   221 docs/s instructions=    20685602 cycles=    14459106 branch_miss=   80039 cache_miss=   13269 cache_ref=  13394107 items=       100 avg_time=   4604641 ns]
partial_tweets<rapidjson_insitu>/manual_time             2962483 ns      3036922 ns          236           61.44k           219.167M         14.171k       5.85677M    9.22279M              14.6042            347.05       3.20076G           12.847M                    20.3431                     1.39296            34.705k    61.4501k   631.515k       203.296M/s   14.3395k   5.85926M   9.31786M         14.7548    337.555/s 3.14529G/s     12.8475M                20.344                1.37881        100       33.7555k/s [BEST: throughput=  0.22 GB/s doc_throughput=   347 docs/s instructions=    12846991 cycles=     9222786 branch_miss=   61440 cache_miss=   14171 cache_ref=   5856774 items=       100 avg_time=   2962482 ns]
partial_tweets<nlohmann_json>/manual_time               21541666 ns     21637831 ns           32          428.41k           31.0879M        200.071k        49.176M    64.9352M              102.825           49.2274        3.1966G          78.4387M                    124.207                     1.20795           4.92274k     443.45k   631.515k       27.9579M/s   254.506k   49.2785M   68.8592M         109.038    46.4217/s 3.19656G/s      78.516M                124.33                1.14024        100       4.64217k/s [BEST: throughput=  0.03 GB/s doc_throughput=    49 docs/s instructions=    78438728 cycles=    64935238 branch_miss=  428410 cache_miss=  200071 cache_ref=  49175954 items=       100 avg_time=  21541665 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                 315955042 ns    319560724 ns            2         1.91429M           145.596M         3.9824M       231.719M    1010.03M              21.9577           3.16521       3.19694G          1042.63M                    22.6666                     1.03229           3.16521M    1.91544M   45.9988M       138.842M/s   3.98242M   231.723M    1010.1M         21.9593    3.16501/s 3.19698G/s     1042.63M               22.6666                1.03221      1000k       3.16501M/s [BEST: throughput=  0.15 GB/s doc_throughput=     3 docs/s instructions=  1042634420 cycles=  1010025317 branch_miss= 1914290 cache_miss= 3982400 cache_ref= 231719354 items=   1000000 avg_time= 315955042 ns]
large_random<simdjson_ondemand>/manual_time            211546595 ns    215143697 ns            3         1.19832M           217.468M        2.31697M       141.264M    676.232M              14.7011            4.7277       3.19702G          658.493M                    14.3154                    0.973767            4.7277M    1.19833M   45.9988M       207.367M/s     2.317M   141.264M   676.246M         14.7014    4.72709/s 3.19668G/s     658.493M               14.3154               0.973747      1000k       4.72709M/s [BEST: throughput=  0.22 GB/s doc_throughput=     4 docs/s instructions=   658492682 cycles=   676232398 branch_miss= 1198321 cache_miss= 2316974 cache_ref= 141263790 items=   1000000 avg_time= 211546595 ns]
large_random<simdjson_ondemand_unordered>/manual_time  193883047 ns    193733534 ns            4         1.19736M           242.013M          2.317M       141.291M     607.65M              13.2101            5.2613       3.19703G          670.493M                    14.5763                     1.10342            5.2613M    1.19782M   45.9988M       226.259M/s    2.3174M   141.292M   607.751M         13.2123    5.15775/s 3.13463G/s     670.493M               14.5763                1.10324      1000k       5.15775M/s [BEST: throughput=  0.24 GB/s doc_throughput=     5 docs/s instructions=   670492677 cycles=   607650224 branch_miss= 1197357 cache_miss= 2317000 cache_ref= 141291167 items=   1000000 avg_time= 193883046 ns]
large_random<yyjson>/manual_time                       204621282 ns    208218816 ns            3         1.52148M           224.835M        4.91258M       212.654M    629.186M              13.6783           4.88785       3.07537G          823.384M                    17.9001                     1.30865           4.88785M    1.52943M   45.9988M       214.386M/s   4.91269M   212.649M    629.24M         13.6795    4.88708/s 3.07514G/s     823.384M               17.9001                1.30854      1000k       4.88708M/s [BEST: throughput=  0.22 GB/s doc_throughput=     4 docs/s instructions=   823383988 cycles=   629185903 branch_miss= 1521480 cache_miss= 4912580 cache_ref= 212654180 items=   1000000 avg_time= 204621282 ns]
large_random<yyjson_insitu>/manual_time                198636936 ns    202258062 ns            4         1.52344M           231.666M        4.19566M       201.141M    616.735M              13.4076           5.03636        3.1061G          816.196M                    17.7439                     1.32341           5.03636M    1.53509M   45.9988M       220.844M/s    4.1957M   201.141M   616.999M         13.4134    5.03431/s 3.10616G/s     816.196M               17.7439                1.32285      1000k       5.03431M/s [BEST: throughput=  0.23 GB/s doc_throughput=     5 docs/s instructions=   816196471 cycles=   616735398 branch_miss= 1523443 cache_miss= 4195660 cache_ref= 201140684 items=   1000000 avg_time= 198636936 ns]
large_random<sajson>/manual_time                       213167799 ns    216771001 ns            3         1.57135M           227.987M         3.4436M       213.271M    644.793M              14.0176           4.95636       3.19583G          963.995M                     20.957                     1.49505           4.95636M    1.57256M   45.9988M        205.79M/s   3.44363M   213.274M   681.361M         14.8126    4.69114/s 3.19636G/s     963.995M                20.957                1.41481      1000k       4.69114M/s [BEST: throughput=  0.23 GB/s doc_throughput=     4 docs/s instructions=   963995037 cycles=   644792982 branch_miss= 1571353 cache_miss= 3443603 cache_ref= 213270797 items=   1000000 avg_time= 213167798 ns]
large_random<rapidjson>/manual_time                    368226696 ns    371851091 ns            2          2.3418M           125.113M         4.9559M       781.703M    1.14863G               24.971           2.71992       3.12419G          1.64651G                    35.7947                     1.43345           2.71992M    2.33475M   45.9988M       119.133M/s   4.95697M   781.647M   1.14815G         24.9605    2.71572/s 3.11806G/s     1.64652G               35.7948                1.43405      1000k       2.71572M/s [BEST: throughput=  0.13 GB/s doc_throughput=     2 docs/s instructions=  1646510161 cycles=  1148633867 branch_miss= 2341803 cache_miss= 4955898 cache_ref= 781703385 items=   1000000 avg_time= 368226696 ns]
large_random<rapidjson_lossless>/manual_time           542322160 ns    418376868 ns            1         1.56562M           84.8182M        4.95697M       1021.74M     1.2981G              28.2203           1.84392       2.39359G          2.06348G                    44.8595                     1.58962           1.84392M    1.56562M   45.9988M       80.8889M/s   4.95697M   1021.74M    1.2981G         28.2203    1.84392/s 2.39359G/s     2.06348G               44.8595                1.58962      1000k       1.84392M/s [BEST: throughput=  0.08 GB/s doc_throughput=     1 docs/s instructions=  2063483505 cycles=  1298097521 branch_miss= 1565617 cache_miss= 4956966 cache_ref=1021735398 items=   1000000 avg_time= 542322160 ns]
large_random<rapidjson_insitu>/manual_time             358545796 ns    362174624 ns            2         2.34322M           128.517M        5.67766M       696.429M    1.11722G               24.288           2.79393       3.12143G          1.39851G                    30.4032                     1.25178           2.79393M    2.33689M   45.9988M       122.349M/s    5.6789M   696.435M    1.1169G         24.2811    2.78904/s 3.11508G/s     1.39852G               30.4033                1.25214      1000k       2.78904M/s [BEST: throughput=  0.13 GB/s doc_throughput=     2 docs/s instructions=  1398510021 cycles=  1117216211 branch_miss= 2343215 cache_miss= 5677658 cache_ref= 696429232 items=   1000000 avg_time= 358545796 ns]
large_random<nlohmann_json>/manual_time               3035983731 ns   3039585659 ns            1         22.0512M           15.1512M        27.6408M       6.62555G    9.70251G               210.93          0.329383       3.19584G           12.447G                    270.594                     1.28286           329.383k    22.0512M   45.9988M       14.4493M/s   27.6408M   6.62555G   9.70251G          210.93   0.329383/s 3.19584G/s      12.447G               270.594                1.28286      1000k       329.383k/s [BEST: throughput=  0.02 GB/s doc_throughput=     0 docs/s instructions= 12446975689 cycles=  9702508935 branch_miss=22051159 cache_miss=27640797 cache_ref=6625549708 items=   1000000 avg_time=3035983731 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                       389467863 ns    400133146 ns            2         884.478k            352.57M        6.95229M       248.806M    1.24497G              9.06718           2.56779       3.19682G          1.13407G                    8.25949                    0.910921           1.34626M    884.567k   137.305M       336.213M/s   6.95232M   248.806M   1.24506G         9.06784    2.56761/s 3.19682G/s     1.13407G               8.25949               0.910855   524.288k       1.34616M/s [BEST: throughput=  0.35 GB/s doc_throughput=     2 docs/s instructions=  1134068867 cycles=  1244969070 branch_miss=  884478 cache_miss= 6952291 cache_ref= 248806320 items=    524288 avg_time= 389467863 ns]
kostya<simdjson_ondemand>/manual_time                  272650789 ns    283332779 ns            3         889.286k           503.608M        5.28491M       144.407M    871.667M               6.3484           3.66781       3.19711G          792.158M                    5.76933                    0.908785           1.92299M     889.36k   137.305M       480.264M/s   5.28492M   144.408M   871.682M         6.34851     3.6677/s 3.19706G/s     792.158M               5.76933               0.908769   524.288k       1.92293M/s [BEST: throughput=  0.50 GB/s doc_throughput=     3 docs/s instructions=   792157547 cycles=   871666728 branch_miss=  889286 cache_miss= 5284908 cache_ref= 144407366 items=    524288 avg_time= 272650788 ns]
kostya<yyjson>/manual_time                             298064604 ns    308725935 ns            2         1.78173M           461.746M        7.97262M       337.288M    907.218M              6.60732           3.36292        3.0509G          970.289M                    7.06667                     1.06952           1.76314M    1.78533M   137.305M       439.315M/s   7.97299M   337.268M   909.396M         6.62319    3.35498/s   3.051G/s     970.289M               7.06667                1.06696   524.288k       1.75897M/s [BEST: throughput=  0.46 GB/s doc_throughput=     3 docs/s instructions=   970289233 cycles=   907217759 branch_miss= 1781730 cache_miss= 7972620 cache_ref= 337288319 items=    524288 avg_time= 298064603 ns]
kostya<yyjson_insitu>/manual_time                      280688170 ns    291364790 ns            2         1.78468M           489.745M        5.83298M       302.965M    873.365M              6.36076           3.56684       3.11515G          948.835M                    6.91042                     1.08641           1.87005M    1.78779M   137.305M       466.511M/s   5.83323M   302.952M   874.446M         6.36864    3.56267/s 3.11537G/s     948.835M               6.91042                1.08507   524.288k       1.86787M/s [BEST: throughput=  0.49 GB/s doc_throughput=     3 docs/s instructions=   948834983 cycles=   873364638 branch_miss= 1784685 cache_miss= 5832979 cache_ref= 302964502 items=    524288 avg_time= 280688170 ns]
kostya<sajson>/manual_time                             410898338 ns    421588579 ns            2         6.80797M           338.364M        4.63059M       417.266M    1.29738G              9.44888           2.46432       3.19716G          1.41335G                    10.2935                     1.08939           1.29201M    7.43531M   137.305M       318.678M/s   4.63065M   419.458M   1.31369G         9.56769    2.43369/s 3.19712G/s     1.41335G               10.2935                1.07586   524.288k       1.27596M/s [BEST: throughput=  0.34 GB/s doc_throughput=     2 docs/s instructions=  1413353473 cycles=  1297378697 branch_miss= 6807969 cache_miss= 4630591 cache_ref= 417266298 items=    524288 avg_time= 410898338 ns]
kostya<rapidjson>/manual_time                          590534294 ns    601224091 ns            1         5.09054M            232.51M        5.39022M       1.20927G    1.85318G              13.4968           1.69338       3.13815G          2.47806G                    18.0479                     1.33719            887.82k    5.09054M   137.305M       221.739M/s   5.39022M   1.20927G   1.85318G         13.4968    1.69338/s 3.13815G/s     2.47806G               18.0479                1.33719   524.288k        887.82k/s [BEST: throughput=  0.23 GB/s doc_throughput=     1 docs/s instructions=  2478063717 cycles=  1853182896 branch_miss= 5090542 cache_miss= 5390217 cache_ref=1209273654 items=    524288 avg_time= 590534294 ns]
kostya<rapidjson_lossless>/manual_time                 630846096 ns    641534181 ns            1         6.38819M           217.652M        5.39231M       1.34788G    1.98184G              14.4338           1.58517       3.14156G          2.71975G                    19.8081                     1.37234           831.087k    6.38819M   137.305M       207.569M/s   5.39231M   1.34788G   1.98184G         14.4338    1.58517/s 3.14156G/s     2.71975G               19.8081                1.37234   524.288k       831.087k/s [BEST: throughput=  0.22 GB/s doc_throughput=     1 docs/s instructions=  2719752242 cycles=  1981838447 branch_miss= 6388188 cache_miss= 5392305 cache_ref=1347881719 items=    524288 avg_time= 630846096 ns]
kostya<rapidjson_insitu>/manual_time                   529064956 ns    539755025 ns            1         4.62997M           259.524M        6.36384M       906.603M    1.65653G              12.0646           1.89013       3.13104G          2.00528G                    14.6045                     1.21053           990.971k    4.62997M   137.305M       247.501M/s   6.36384M   906.603M   1.65653G         12.0646    1.89013/s 3.13104G/s     2.00528G               14.6045                1.21053   524.288k       990.971k/s [BEST: throughput=  0.26 GB/s doc_throughput=     1 docs/s instructions=  2005275484 cycles=  1656525792 branch_miss= 4629972 cache_miss= 6363838 cache_ref= 906603206 items=    524288 avg_time= 529064956 ns]
kostya<nlohmann_json>/manual_time                     5320238512 ns   5330970803 ns            1         48.0891M           25.8081M        39.1873M       10.5795G    17.0084G              123.873          0.187961       3.19693G          17.4035G                    126.751                     1.02323            98.546k    48.0891M   137.305M       24.6125M/s   39.1873M   10.5795G   17.0084G         123.873   0.187961/s 3.19693G/s     17.4035G               126.751                1.02323   524.288k        98.546k/s [BEST: throughput=  0.03 GB/s doc_throughput=     0 docs/s instructions= 17403524186 cycles= 17008426737 branch_miss=48089128 cache_miss=39187307 cache_ref=10579454127 items=    524288 avg_time=5320238512 ns]
distinct_user_id<simdjson_dom>/manual_time               1620242 ns      1704453 ns          431          13.292k           397.784M         26.507k       946.775k    5.08228M              8.04776           629.889       3.20127G          3.90274M                    6.17996                    0.767911           72.4372k     13.359k   631.515k        371.71M/s   26.5082k   948.727k   5.18142M         8.20475    617.192/s 3.19793G/s     3.90274M               6.17996               0.753217        115       70.9771k/s [BEST: throughput=  0.40 GB/s doc_throughput=   629 docs/s instructions=     3902738 cycles=     5082282 branch_miss=   13292 cache_miss=   26507 cache_ref=    946775 items=       115 avg_time=   1620241 ns]
distinct_user_id<simdjson_ondemand>/manual_time          1088202 ns      1172639 ns          643           9.715k           582.526M         22.705k       429.342k    3.47109M              5.49645           922.426       3.20182G          2.68006M                    4.24386                     0.77211           106.079k    10.0982k   631.515k       553.445M/s   22.6895k   430.211k   3.48074M         5.51172    918.947/s 3.19861G/s     2.68006M               4.24386               0.769969        115       105.679k/s [BEST: throughput=  0.58 GB/s doc_throughput=   922 docs/s instructions=     2680062 cycles=     3471089 branch_miss=    9715 cache_miss=   22705 cache_ref=    429342 items=       115 avg_time=   1088202 ns]
distinct_user_id<yyjson>/manual_time                     1145056 ns      1233115 ns          635          46.277k           609.159M         24.249k       1.41721M     3.3197M              5.25673             964.6       3.20219G          3.26356M                    5.16783                    0.983088           110.929k    45.7614k   631.515k       525.965M/s   24.2667k   1.41798M   3.53022M         5.59008     873.32/s 3.08301G/s     3.26345M               5.16764               0.924431        115       100.432k/s [BEST: throughput=  0.61 GB/s doc_throughput=   964 docs/s instructions=     3263562 cycles=     3319705 branch_miss=   46277 cache_miss=   24249 cache_ref=   1417209 items=       115 avg_time=   1145056 ns]
distinct_user_id<yyjson_insitu>/manual_time              1093802 ns      1182905 ns          638          46.133k           635.249M         14.332k       1.25924M    3.18339M              5.04087           1005.91       3.20221G          3.16442M                    5.01084                    0.994043            115.68k    45.7651k   631.515k       550.611M/s   14.3609k   1.25883M   3.38512M         5.36031    914.243/s 3.09482G/s     3.16443M               5.01085               0.934805        115       105.138k/s [BEST: throughput=  0.64 GB/s doc_throughput=  1005 docs/s instructions=     3164422 cycles=     3183386 branch_miss=   46133 cache_miss=   14332 cache_ref=   1259238 items=       115 avg_time=   1093801 ns]
distinct_user_id<sajson>/manual_time                     1436508 ns      1524268 ns          487          57.142k           440.597M         12.796k       1.85456M     4.5887M              7.26617           697.682       3.20145G          5.49513M                     8.7015                     1.19753           80.2335k     57.475k   631.515k       419.253M/s   12.8162k   1.85511M   4.59391M         7.27443    696.133/s 3.19797G/s     5.49513M                8.7015                1.19618        115       80.0552k/s [BEST: throughput=  0.44 GB/s doc_throughput=   697 docs/s instructions=     5495126 cycles=     4588698 branch_miss=   57142 cache_miss=   12796 cache_ref=   1854560 items=       115 avg_time=   1436508 ns]
distinct_user_id<rapidjson>/manual_time                  4594891 ns      4685106 ns          152          79.694k           139.673M         14.248k        13.391M    14.4703M              22.9137           221.172       3.20043G          20.6368M                    32.6783                     1.42615           25.4348k    79.8671k   631.515k       131.072M/s   14.5049k   13.3922M   14.5157M         22.9856    217.633/s  3.1591G/s     20.6374M               32.6792                1.42173        115       25.0278k/s [BEST: throughput=  0.14 GB/s doc_throughput=   221 docs/s instructions=    20636825 cycles=    14470330 branch_miss=   79694 cache_miss=   14248 cache_ref=  13391033 items=       115 avg_time=   4594890 ns]
distinct_user_id<rapidjson_insitu>/manual_time           2950119 ns      3041929 ns          238          61.282k           221.433M         14.497k       5.84686M    9.12836M              14.4547           350.638       3.20075G          12.7984M                    20.2662                     1.40205           40.3234k    61.3666k   631.515k       204.148M/s   14.6343k   5.85225M   9.27544M         14.6876    338.969/s 3.14409G/s     12.7988M               20.2669                1.37986        115       38.9815k/s [BEST: throughput=  0.22 GB/s doc_throughput=   350 docs/s instructions=    12798440 cycles=     9128359 branch_miss=   61282 cache_miss=   14497 cache_ref=   5846864 items=       115 avg_time=   2950118 ns]
distinct_user_id<nlohmann_json>/manual_time             20333268 ns     20428552 ns           35         376.214k           33.2121M        163.674k        46.705M    60.7708M              96.2302           52.5911         3.196G          73.7871M                    116.841                     1.21419           6.04798k    387.601k   631.515k       29.6194M/s   220.878k   46.1544M   64.9978M         102.924    49.1805/s 3.19663G/s      72.242M               114.395                1.11145        115       5.65576k/s [BEST: throughput=  0.03 GB/s doc_throughput=    52 docs/s instructions=    73787071 cycles=    60770836 branch_miss=  376214 cache_miss=  163674 cache_ref=  46704956 items=       115 avg_time=  20333267 ns]
find_tweet<simdjson_dom>/manual_time                     1582411 ns      1686292 ns          444          13.141k            405.59M         23.528k       931.703k    4.95029M              7.83875            642.25       3.17932G          3.81232M                    6.03679                    0.770121             642.25    13.2196k   631.515k       380.596M/s   23.6607k   934.638k   5.06155M         8.01493    631.947/s 3.19863G/s     3.81233M               6.03679               0.753193          1        631.947/s [BEST: throughput=  0.41 GB/s doc_throughput=   642 docs/s instructions=     3812323 cycles=     4950288 branch_miss=   13141 cache_miss=   23528 cache_ref=    931703 items=         1 avg_time=   1582410 ns]
find_tweet<simdjson_ondemand>/manual_time                 949935 ns      1039244 ns          737           4.163k           666.163M         11.561k       234.149k    3.03533M              4.80643           1054.86       3.20186G          2.12616M                    3.36676                    0.700471            1054.86     4.2355k   631.515k       634.001M/s   11.5667k   234.289k   3.03869M         4.81175     1052.7/s 3.19884G/s     2.12616M               3.36676               0.699695          1         1052.7/s [BEST: throughput=  0.67 GB/s doc_throughput=  1054 docs/s instructions=     2126162 cycles=     3035331 branch_miss=    4163 cache_miss=   11561 cache_ref=    234149 items=         1 avg_time=    949935 ns]
find_tweet<yyjson>/manual_time                           1127597 ns      1220533 ns          624          46.056k           637.801M          21.75k       1.40189M    3.17091M              5.02112           1009.95       3.20248G          3.20653M                    5.07751                     1.01123            1009.95    45.8532k   631.515k       534.109M/s   21.7613k   1.40344M    3.3817M          5.3549    886.841/s 2.99903G/s     3.20675M               5.07786               0.948265          1        886.841/s [BEST: throughput=  0.64 GB/s doc_throughput=  1009 docs/s instructions=     3206526 cycles=     3170912 branch_miss=   46056 cache_miss=   21750 cache_ref=   1401895 items=         1 avg_time=   1127597 ns]
find_tweet<yyjson_insitu>/manual_time                    1048729 ns      1143632 ns          670          45.729k            666.35M         11.846k       1.24352M    3.03497M              4.80586           1055.16       3.20239G          3.10754M                    4.92076                     1.02391            1055.16    45.7255k   631.515k       574.276M/s   11.8603k   1.24352M   3.23994M         5.13042    953.535/s 3.08939G/s     3.10768M                 4.921               0.959181          1        953.535/s [BEST: throughput=  0.67 GB/s doc_throughput=  1055 docs/s instructions=     3107536 cycles=     3034971 branch_miss=   45729 cache_miss=   11846 cache_ref=   1243523 items=         1 avg_time=   1048728 ns]
find_tweet<sajson>/manual_time                           1391863 ns      1486219 ns          503          57.008k            454.74M          10.25k       1.83566M    4.44601M              7.04023           720.078       3.20147G           5.4077M                    8.56306                      1.2163            720.078    57.2081k   631.515k         432.7M/s    10.253k   1.83619M   4.45137M         7.04871    718.462/s 3.19814G/s      5.4077M               8.56306                1.21484          1        718.462/s [BEST: throughput=  0.45 GB/s doc_throughput=   720 docs/s instructions=     5407701 cycles=     4446013 branch_miss=   57008 cache_miss=   10250 cache_ref=   1835665 items=         1 avg_time=   1391862 ns]
find_tweet<rapidjson>/manual_time                        4559819 ns      4656300 ns          153          79.603k           140.733M         11.461k       13.3766M    14.3614M              22.7412            222.85       3.20044G          20.5764M                    32.5826                     1.43275             222.85    79.7664k   631.515k        132.08M/s   11.7308k   13.3814M   14.4045M         22.8095    219.307/s 3.15902G/s     20.5769M               32.5833                 1.4285          1        219.307/s [BEST: throughput=  0.14 GB/s doc_throughput=   222 docs/s instructions=    20576370 cycles=    14361417 branch_miss=   79603 cache_miss=   11461 cache_ref=  13376589 items=         1 avg_time=   4559819 ns]
find_tweet<rapidjson_insitu>/manual_time                 2918559 ns      3018122 ns          241          61.485k           223.553M         11.261k       5.82679M    8.99392M              14.2418           353.995        3.1838G          12.7377M                    20.1701                     1.41626            353.995    61.2948k   631.515k       206.355M/s   11.3702k   5.83645M   9.17452M         14.5278    342.635/s 3.14351G/s     12.7383M                20.171                1.38844          1        342.635/s [BEST: throughput=  0.22 GB/s doc_throughput=   353 docs/s instructions=    12737737 cycles=     8993924 branch_miss=   61485 cache_miss=   11261 cache_ref=   5826792 items=         1 avg_time=   2918558 ns]
find_tweet<nlohmann_json>/manual_time                   17090116 ns     17192817 ns           42         282.061k           39.6384M         90.137k       40.8183M    50.9518M              80.6818           62.7671        3.1981G          63.5296M                    100.599                     1.24686            62.7671    295.184k   631.515k       35.2402M/s   141.417k   40.2808M   54.6312M         86.5081    58.5134/s 3.19665G/s     61.9924M               98.1645                1.13474          1        58.5134/s [BEST: throughput=  0.04 GB/s doc_throughput=    62 docs/s instructions=    63529630 cycles=    50951786 branch_miss=  282061 cache_miss=   90137 cache_ref=  40818310 items=         1 avg_time=  17090115 ns]
top_tweet<simdjson_dom>/manual_time                      1574581 ns      1676284 ns          444          13.222k           402.101M         25.663k       937.616k    5.02789M              7.96163           636.724       3.20138G           3.8516M                    6.09898                    0.766047            636.724    13.3936k   631.515k       382.489M/s   25.6648k   938.153k   5.03543M         7.97357     635.09/s 3.19795G/s      3.8516M               6.09898               0.764901          1         635.09/s [BEST: throughput=  0.40 GB/s doc_throughput=   636 docs/s instructions=     3851599 cycles=     5027887 branch_miss=   13222 cache_miss=   25663 cache_ref=    937616 items=         1 avg_time=   1574580 ns]
top_tweet<simdjson_ondemand>/manual_time                 1083673 ns      1188389 ns          645           9.129k           584.947M         22.535k       427.728k    3.45692M                5.474            926.26         3.202G          2.67996M                    4.24369                    0.775245             926.26    9.62102k   631.515k       555.758M/s   22.5555k    428.89k   3.46623M         5.48876    922.788/s  3.1986G/s     2.67996M                4.2437               0.773162          1        922.788/s [BEST: throughput=  0.58 GB/s doc_throughput=   926 docs/s instructions=     2679957 cycles=     3456916 branch_miss=    9129 cache_miss=   22535 cache_ref=    427728 items=         1 avg_time=   1083672 ns]
top_tweet<simdjson_ondemand_forward_only>/manual_time    1092710 ns      1198825 ns          640           8.393k           580.657M         22.861k       435.456k     3.4823M               5.5142           919.467       3.20186G            2.701M                    4.27701                    0.775636            919.467    8.82419k   631.515k       551.161M/s   22.8566k   436.224k   3.49485M         5.53407    915.156/s 3.19833G/s       2.701M               4.27702               0.772853          1        915.156/s [BEST: throughput=  0.58 GB/s doc_throughput=   919 docs/s instructions=     2700999 cycles=     3482301 branch_miss=    8393 cache_miss=   22861 cache_ref=    435456 items=         1 avg_time=   1092710 ns]
top_tweet<yyjson>/manual_time                            1157356 ns      1270241 ns          609          46.331k           607.752M         23.295k       1.40895M    3.27742M              5.18977           962.372        3.1541G          3.23138M                    5.11686                    0.985952            962.372    45.8732k   631.515k       520.375M/s   23.2842k   1.40954M   3.47878M         5.50862    864.038/s 3.00579G/s     3.23189M               5.11767                0.92903          1        864.038/s [BEST: throughput=  0.61 GB/s doc_throughput=   962 docs/s instructions=     3231376 cycles=     3277417 branch_miss=   46331 cache_miss=   23295 cache_ref=   1408949 items=         1 avg_time=   1157356 ns]
top_tweet<yyjson_insitu>/manual_time                     1078225 ns      1192877 ns          651          45.974k           645.494M         13.424k       1.24991M    3.13292M              4.96096           1022.14       3.20227G          3.13247M                    4.96024                    0.999856            1022.14    45.8425k   631.515k       558.566M/s   13.3937k   1.24977M   3.33469M         5.28046     927.45/s 3.09276G/s     3.13253M               4.96034               0.939376          1         927.45/s [BEST: throughput=  0.65 GB/s doc_throughput=  1022 docs/s instructions=     3132467 cycles=     3132918 branch_miss=   45974 cache_miss=   13424 cache_ref=   1249909 items=         1 avg_time=   1078225 ns]
top_tweet<sajson>/manual_time                            1412137 ns      1526917 ns          495          57.196k           448.234M         11.867k       1.84405M    4.51055M              7.14243           709.776       3.20148G          5.43458M                    8.60562                     1.20486            709.776    57.3494k   631.515k       426.488M/s   11.8613k    1.8443M   4.51591M         7.15092    708.147/s 3.19793G/s     5.43458M               8.60562                1.20343          1        708.147/s [BEST: throughput=  0.45 GB/s doc_throughput=   709 docs/s instructions=     5434579 cycles=     4510550 branch_miss=   57196 cache_miss=   11867 cache_ref=   1844051 items=         1 avg_time=   1412136 ns]
top_tweet<rapidjson>/manual_time                         4578530 ns      4698002 ns          153          79.647k           140.147M         13.269k       13.3772M    14.4216M              22.8365           221.921       3.20045G          20.6206M                    32.6526                     1.42984            221.921    79.8818k   631.515k        131.54M/s   13.5397k   13.3795M   14.4649M         22.9051    218.411/s  3.1593G/s     20.6212M               32.6535                 1.4256          1        218.411/s [BEST: throughput=  0.14 GB/s doc_throughput=   221 docs/s instructions=    20620591 cycles=    14421561 branch_miss=   79647 cache_miss=   13269 cache_ref=  13377226 items=         1 avg_time=   4578530 ns]
top_tweet<rapidjson_insitu>/manual_time                  2968151 ns      3089975 ns          237          61.529k           218.064M         13.415k       5.84824M    9.26946M              14.6781           345.303       3.20077G          12.7813M                    20.2391                     1.37886            345.303    61.3972k   631.515k       202.907M/s   13.5867k   5.84934M   9.33326M         14.7792     336.91/s 3.14447G/s      12.782M               20.2402                1.36951          1         336.91/s [BEST: throughput=  0.22 GB/s doc_throughput=   345 docs/s instructions=    12781275 cycles=     9269459 branch_miss=   61529 cache_miss=   13415 cache_ref=   5848242 items=         1 avg_time=   2968150 ns]
top_tweet<nlohmann_json>/manual_time                    23057910 ns     23183433 ns           30         481.067k           27.4311M        348.261k       52.9525M    73.6061M              116.555           43.4369       3.19722G          85.9607M                    136.118                     1.16785            43.4369    483.297k   631.515k       26.1194M/s   343.941k   53.0979M   73.7081M         116.716    43.3691/s 3.19665G/s     86.3172M               136.683                1.17107          1        43.3691/s [BEST: throughput=  0.03 GB/s doc_throughput=    43 docs/s instructions=    85960673 cycles=    73606116 branch_miss=  481067 cache_miss=  348261 cache_ref=  52952479 items=         1 avg_time=  23057909 ns]
