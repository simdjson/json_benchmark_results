run_benchmark: v0.8.0 /home/jkeiser/simdjson_benchmark_results/v0.8.0/skylake-x-clang10-westmere.json -DCMAKE_BUILD_TYPE=Release -DSIMDJSON_EXCLUDE_IMPLEMENTATION=haswell
git reset --hard v0.8.0
HEAD is now at c96ff018 Version 0.8.
cmake -DCMAKE_BUILD_TYPE=Release -DSIMDJSON_EXCLUDE_IMPLEMENTATION=haswell -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The CXX compiler identification is Clang 10.0.1
-- The C compiler identification is Clang 10.0.1
-- Check for working CXX compiler: /usr/bin/clang++-10
-- Check for working CXX compiler: /usr/bin/clang++-10 -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Check for working C compiler: /usr/bin/clang-10
-- Check for working C compiler: /usr/bin/clang-10 -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Excluding implementation haswell due to SIMDJSON_EXCLUDE_IMPLEMENTATION=haswell
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed
-- Check if compiler accepts -pthread
-- Check if compiler accepts -pthread - yes
-- Found Threads: TRUE  
-- Looking for fork
-- Looking for fork - found
-- Looking for wait
-- Looking for wait - found
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- Found Git: /usr/bin/git (found version "2.27.0") 
-- git Version: v0.2.1-c96ff018
-- Version: 0.2.1
-- Performing Test HAVE_CXX_FLAG_STD_CXX11
-- Performing Test HAVE_CXX_FLAG_STD_CXX11 - Success
-- Performing Test HAVE_CXX_FLAG_WALL
-- Performing Test HAVE_CXX_FLAG_WALL - Success
-- Performing Test HAVE_CXX_FLAG_WEXTRA
-- Performing Test HAVE_CXX_FLAG_WEXTRA - Success
-- Performing Test HAVE_CXX_FLAG_WSHADOW
-- Performing Test HAVE_CXX_FLAG_WSHADOW - Success
-- Performing Test HAVE_CXX_FLAG_WERROR
-- Performing Test HAVE_CXX_FLAG_WERROR - Success
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32 - Success
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED - Success
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WD654
-- Performing Test HAVE_CXX_FLAG_WD654 - Failed
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY - Success
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES -- failed to compile
-- Performing Test HAVE_CXX_FLAG_COVERAGE
-- Performing Test HAVE_CXX_FLAG_COVERAGE - Success
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Performing Test USE_BOOST_JSON
-- Performing Test USE_BOOST_JSON - Failed
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Found Python3: /usr/bin/python3.8 (found version "3.8.6") found components: Interpreter 
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 10
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
Scanning dependencies of target benchmark
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_api_internal.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_name.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_name.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_register.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_register.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_runner.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_runner.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/colorprint.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/colorprint.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/commandlineflags.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/commandlineflags.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/complexity.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/complexity.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/console_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/console_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/counter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/counter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/csv_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/csv_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/json_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/json_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/sleep.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sleep.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/statistics.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/statistics.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/string_util.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/string_util.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/sysinfo.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sysinfo.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/timers.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/timers.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -P CMakeFiles/benchmark.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/benchmark.dir/link.txt --verbose=1
/usr/bin/ar qc libbenchmark.a  CMakeFiles/benchmark.dir/benchmark.cc.o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o CMakeFiles/benchmark.dir/benchmark_name.cc.o CMakeFiles/benchmark.dir/benchmark_register.cc.o CMakeFiles/benchmark.dir/benchmark_runner.cc.o CMakeFiles/benchmark.dir/colorprint.cc.o CMakeFiles/benchmark.dir/commandlineflags.cc.o CMakeFiles/benchmark.dir/complexity.cc.o CMakeFiles/benchmark.dir/console_reporter.cc.o CMakeFiles/benchmark.dir/counter.cc.o CMakeFiles/benchmark.dir/csv_reporter.cc.o CMakeFiles/benchmark.dir/json_reporter.cc.o CMakeFiles/benchmark.dir/reporter.cc.o CMakeFiles/benchmark.dir/sleep.cc.o CMakeFiles/benchmark.dir/statistics.cc.o CMakeFiles/benchmark.dir/string_util.cc.o CMakeFiles/benchmark.dir/sysinfo.cc.o CMakeFiles/benchmark.dir/timers.cc.o
/usr/bin/ranlib libbenchmark.a
[ 80%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
Scanning dependencies of target generated-data
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated && /usr/bin/ruby genfeaturejson.rb /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-miss.json ...
[ 80%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/clang++-10  -DSIMDJSON_IMPLEMENTATION_HASWELL=0 -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/include  -O3 -DNDEBUG -fPIC   -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -pthread -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/clang++-10 -fPIC -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.7 -o ../libsimdjson.so.7.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.7.0.0 ../libsimdjson.so.7 ../libsimdjson.so
[ 80%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
Scanning dependencies of target yyjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/clang-10  -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src  -O3 -DNDEBUG   -o CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o   -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src/yyjson.c
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -P CMakeFiles/yyjson.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -E cmake_link_script CMakeFiles/yyjson.dir/link.txt --verbose=1
/usr/bin/ar qc libyyjson.a  CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o
/usr/bin/ranlib libyyjson.a
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/clang++-10  -DRAPIDJSON_HAS_STDSTRING -DSAJSON_UNSORTED_OBJECT_KEYS -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_COMPETITION_NLOHMANN_JSON -DSIMDJSON_COMPETITION_RAPIDJSON -DSIMDJSON_COMPETITION_SAJSON -DSIMDJSON_COMPETITION_YYJSON -DSIMDJSON_IMPLEMENTATION_HASWELL=0 -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/rapidjson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/sajson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/json  -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/clang++-10  -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.7.0.0 ../_deps/google_benchmarks/src/libbenchmark.a ../dependencies/libyyjson.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.8.0/skylake-x-clang10-westmere.json --benchmark_out_format=json
2021-01-24 21:43:28
Running benchmark/bench_ondemand
Run on (4 X 3200 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 1024 KiB (x4)
  L3 Unified 8448 KiB (x1)
Load Average: 0.65, 0.47, 0.68
***WARNING*** CPU scaling is enabled, the benchmark real time measurements may be noisy and will incur extra overhead.
simdjson::dom implementation:      westmere
simdjson::ondemand implementation: fallback

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                  420984 ns       491293 ns         1661           3.696k            1.5101G               2        34.401k    1.33552M              2.11479          2.39123k       3.19353G          4.37538M                    6.92839                     3.27617           239.123k    3.86916k   631.515k       1.39707G/s    3.60867   34.3407k   1.34326M         2.12704   2.37539k/s 3.19075G/s     4.37538M               6.92839                 3.2573        100       237.539k/s [BEST: throughput=  1.51 GB/s doc_throughput=  2391 docs/s instructions=     4375384 cycles=     1335520 branch_miss=    3696 cache_miss=       2 cache_ref=     34401 items=       100 avg_time=    420983 ns]
partial_tweets<simdjson_ondemand>/manual_time             277854 ns       332099 ns         2520           2.337k           2.28862G               0        10.897k    881.379k              1.39566          3.62402k       3.19413G           3.3138M                    5.24737                     3.75978           362.402k    2.46948k   631.515k       2.11673G/s  0.0638889   11.0016k   886.693k         1.40407   3.59901k/s 3.19121G/s      3.3138M               5.24737                3.73725        100       359.901k/s [BEST: throughput=  2.29 GB/s doc_throughput=  3624 docs/s instructions=     3313795 cycles=      881379 branch_miss=    2337 cache_miss=       0 cache_ref=     10897 items=       100 avg_time=    277854 ns]
partial_tweets<yyjson>/manual_time                        785561 ns       864046 ns          893            9.81k            1.4389G             260        28.854k    1.40215M               2.2203          2.27849k       3.19478G          2.90334M                    4.59742                     2.07063           227.849k    7.63219k   631.515k       766.662M/s    593.588   23.5336k   1.55228M         2.45803   1.27298k/s 1.97602G/s     2.90403M               4.59852                1.87082        100       127.298k/s [BEST: throughput=  1.44 GB/s doc_throughput=  2278 docs/s instructions=     2903341 cycles=     1402152 branch_miss=    9810 cache_miss=     260 cache_ref=     28854 items=       100 avg_time=    785560 ns]
partial_tweets<yyjson_insitu>/manual_time                 511716 ns       571829 ns         1381           7.328k           1.78434G             109        14.836k    1.13072M              1.79049          2.82549k       3.19484G          2.90324M                    4.59725                     2.56759           282.549k    7.37328k   631.515k       1.14936G/s    68.0014   8.70975k   1.23952M         1.96278   1.95421k/s 2.42229G/s      2.9035M               4.59767                2.34243        100       195.421k/s [BEST: throughput=  1.78 GB/s doc_throughput=  2825 docs/s instructions=     2903235 cycles=     1130722 branch_miss=    7328 cache_miss=     109 cache_ref=     14836 items=       100 avg_time=    511716 ns]
partial_tweets<sajson>/manual_time                        681074 ns       743166 ns         1031          10.498k           935.042M               0        13.626k    2.15659M              3.41495          1.48063k       3.19312G          5.87179M                    9.29794                     2.72272           148.063k    10.8477k   631.515k        884.28M/s    1.68768   13.7146k    2.1729M         3.44077   1.46827k/s  3.1904G/s     5.87179M               9.29794                2.70229        100       146.827k/s [BEST: throughput=  0.94 GB/s doc_throughput=  1480 docs/s instructions=     5871791 cycles=     2156593 branch_miss=   10498 cache_miss=       0 cache_ref=     13626 items=       100 avg_time=    681073 ns]
partial_tweets<rapidjson>/manual_time                    2835425 ns      2898187 ns          247          30.658k           245.973M             895        23.177k    8.18375M              12.9589           389.497       3.18754G          21.9153M                    34.7027                      2.6779           38.9497k    31.3073k   631.515k       212.405M/s    426.453    11.867k   8.36701M         13.2491    352.681/s 2.95088G/s     21.9163M               34.7044                2.61937        100       35.2681k/s [BEST: throughput=  0.25 GB/s doc_throughput=   389 docs/s instructions=    21915285 cycles=     8183745 branch_miss=   30658 cache_miss=     895 cache_ref=     23177 items=       100 avg_time=   2835425 ns]
partial_tweets<rapidjson_insitu>/manual_time             1774688 ns      1835138 ns          396          26.057k           387.106M          4.515k        14.446k    5.20866M              8.24788           612.979        3.1928G          13.3443M                    21.1306                     2.56194           61.2979k    26.2148k   631.515k       339.361M/s    226.672   9.79981k   5.26953M         8.34427    563.479/s 2.96927G/s     13.3447M               21.1312                2.53242        100       56.3479k/s [BEST: throughput=  0.39 GB/s doc_throughput=   612 docs/s instructions=    13344293 cycles=     5208660 branch_miss=   26057 cache_miss=    4515 cache_ref=     14446 items=       100 avg_time=   1774688 ns]
partial_tweets<nlohmann_json>/manual_time                9481650 ns      9569029 ns           74          153.06k           69.2666M               4        97.926k    29.0849M              46.0557           109.683       3.19013G          78.2196M                     123.86                     2.68935           10.9683k    164.478k   631.515k       63.5184M/s    99.4054   135.805k   30.2434M         47.8902    105.467/s 3.18967G/s     78.7247M                124.66                2.60304        100       10.5467k/s [BEST: throughput=  0.07 GB/s doc_throughput=   109 docs/s instructions=    78219580 cycles=    29084895 branch_miss=  153060 cache_miss=       4 cache_ref=     97926 items=       100 avg_time=   9481650 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                 115432952 ns    121310166 ns            6         937.429k           398.914M        6.78045M       6.89547M    367.688M              7.99344           8.67228        3.1887G          1.16406G                    25.3062                     3.16588           8.67228M    944.616k   45.9988M       380.029M/s   6.81542M   6.89547M   368.068M         8.00169    8.66304/s 3.18859G/s     1.16406G               25.3062                3.16261      1000k       8.66304M/s [BEST: throughput=  0.40 GB/s doc_throughput=     8 docs/s instructions=  1164056370 cycles=   367688360 branch_miss=  937429 cache_miss= 6780450 cache_ref=   6895472 items=   1000000 avg_time= 115432951 ns]
large_random<simdjson_ondemand>/manual_time             78413502 ns     84256768 ns            9         910.274k           586.913M        3.49618M       3.57285M    249.931M              5.43342           12.7593       3.18895G          752.513M                    16.3594                     3.01089           12.7593M    910.495k   45.9988M       559.443M/s   3.51991M   3.57293M   249.974M         5.43437    12.7529/s  3.1879G/s     752.513M               16.3594                3.01036      1000k       12.7529M/s [BEST: throughput=  0.59 GB/s doc_throughput=    12 docs/s instructions=   752512841 cycles=   249930566 branch_miss=  910274 cache_miss= 3496178 cache_ref=   3572852 items=   1000000 avg_time=  78413502 ns]
large_random<simdjson_ondemand_unordered>/manual_time   79017852 ns     84849818 ns            9         945.298k           582.238M        3.48676M       3.57335M    251.936M              5.47701           12.6577       3.18893G          751.513M                    16.3377                     2.98295           12.6577M    945.494k   45.9988M       555.164M/s   3.51436M   3.57323M   251.958M          5.4775    12.6554/s 3.18862G/s     751.513M               16.3377                2.98269      1000k       12.6554M/s [BEST: throughput=  0.58 GB/s doc_throughput=    12 docs/s instructions=   751512840 cycles=   251935743 branch_miss=  945298 cache_miss= 3486763 cache_ref=   3573354 items=   1000000 avg_time=  79017851 ns]
large_random<yyjson>/manual_time                       151172284 ns    157094380 ns            5         663.631k           304.395M         4.2002M         4.319M    343.631M              7.47044           6.61746       2.27397G           866.68M                    18.8414                     2.52212           6.61746M    664.151k   45.9988M       290.184M/s   4.19952M   4.32349M   343.818M         7.47451    6.61497/s 2.27435G/s      866.68M               18.8414                2.52075      1000k       6.61497M/s [BEST: throughput=  0.30 GB/s doc_throughput=     6 docs/s instructions=   866679894 cycles=   343631303 branch_miss=  663631 cache_miss= 4200196 cache_ref=   4319001 items=   1000000 avg_time= 151172284 ns]
large_random<yyjson_insitu>/manual_time                125226736 ns    131122649 ns            6         665.591k           367.634M        3.48276M       3.60185M    300.761M              6.53845           7.99225       2.40376G          860.559M                    18.7083                     2.86127           7.99225M    662.993k   45.9988M       350.307M/s   3.48365M   3.60413M    301.01M         6.54386    7.98552/s 2.40372G/s     860.559M               18.7083                2.85891      1000k       7.98552M/s [BEST: throughput=  0.37 GB/s doc_throughput=     7 docs/s instructions=   860559128 cycles=   300760893 branch_miss=  665591 cache_miss= 3482763 cache_ref=   3601848 items=   1000000 avg_time= 125226736 ns]
large_random<sajson>/manual_time                       107924121 ns    113878938 ns            6         581.997k           426.815M        5.42741M       5.57748M    343.694M              7.47181           9.27884       3.18908G          1.13399G                    24.6526                     3.29941           9.27884M    582.289k   45.9988M       406.469M/s   5.47099M   5.57749M   344.152M         7.48176    9.26577/s 3.18883G/s     1.13399G               24.6526                3.29503      1000k       9.26577M/s [BEST: throughput=  0.43 GB/s doc_throughput=     9 docs/s instructions=  1133989156 cycles=   343694187 branch_miss=  581997 cache_miss= 5427413 cache_ref=   5577481 items=   1000000 avg_time= 107924120 ns]
large_random<rapidjson>/manual_time                    249053948 ns    254958418 ns            3         598.414k           190.785M        4.36757M       4.88679M    701.081M              15.2413           4.14761       2.90781G          2.02013G                     43.917                     2.88144           4.14761M    599.405k   45.9988M       176.138M/s    4.1066M   4.67918M    704.51M         15.3158    4.01519/s 2.82874G/s     2.02013G               43.9171                2.86743      1000k       4.01519M/s [BEST: throughput=  0.19 GB/s doc_throughput=     4 docs/s instructions=  2020126144 cycles=   701081063 branch_miss=  598414 cache_miss= 4367571 cache_ref=   4886792 items=   1000000 avg_time= 249053948 ns]
large_random<rapidjson_lossless>/manual_time           287545606 ns    293473114 ns            3          590.72k           164.534M        4.36659M       4.88914M    824.272M              17.9194           3.57691       2.94835G          2.48209G                      53.96                     3.01125           3.57691M    593.021k   45.9988M        152.56M/s   4.10777M   4.68474M   828.174M         18.0043    3.47771/s 2.88015G/s      2.4821G               53.9602                2.99708      1000k       3.47771M/s [BEST: throughput=  0.16 GB/s doc_throughput=     3 docs/s instructions=  2482092982 cycles=   824272490 branch_miss=  590720 cache_miss= 4366588 cache_ref=   4889138 items=   1000000 avg_time= 287545605 ns]
large_random<rapidjson_insitu>/manual_time             275550924 ns    281473556 ns            3         584.974k           171.597M        5.05793M       5.62063M    787.567M              17.1215           3.73047         2.938G          1.75113G                     38.069                     2.22346           3.73047M    584.142k   45.9988M       159.201M/s   4.81483M   5.41665M   789.831M         17.1707    3.62909/s 2.86637G/s     1.75113G               38.0692                 2.2171      1000k       3.62909M/s [BEST: throughput=  0.17 GB/s doc_throughput=     3 docs/s instructions=  1751125722 cycles=   787567496 branch_miss=  584974 cache_miss= 5057928 cache_ref=   5620633 items=   1000000 avg_time= 275550924 ns]
large_random<nlohmann_json>/manual_time               1452645640 ns   1458452202 ns            1         4.11302M           31.6655M        30.3676M       30.9037M    4.61827G                100.4          0.688399       3.17921G          12.3806G                     269.15                     2.68078           688.399k    4.11302M   45.9988M       30.1986M/s   30.3676M   30.9037M   4.61827G           100.4   0.688399/s 3.17921G/s     12.3806G                269.15                2.68078      1000k       688.399k/s [BEST: throughput=  0.03 GB/s doc_throughput=     0 docs/s instructions= 12380553553 cycles=  4618272364 branch_miss= 4113025 cache_miss=30367605 cache_ref=  30903656 items=   1000000 avg_time=1452645640 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                       125614639 ns    143723703 ns            6          1079.7k           1094.04M        10.2121M       10.3179M    400.182M              2.91455           7.96794       3.18863G          1.23813G                    9.01737                     3.09392            4.1775M    1081.92k   137.305M       1042.43M/s   10.2483M   10.3182M   400.528M         2.91707    7.96086/s 3.18855G/s     1.23813G               9.01737                3.09124   524.288k       4.17378M/s [BEST: throughput=  1.09 GB/s doc_throughput=     7 docs/s instructions=  1238129994 cycles=   400181892 branch_miss= 1079704 cache_miss=10212114 cache_ref=  10317928 items=    524288 avg_time= 125614638 ns]
kostya<simdjson_ondemand>/manual_time                   83701047 ns    101735718 ns            8         518.423k           1.64239G        6.43505M       6.47163M    266.595M              1.94162           11.9616        3.1889G          846.724M                    6.16674                     3.17607           6.27134M    519.176k   137.305M       1.52776G/s   6.43907M   6.47148M    266.88M          1.9437    11.9473/s 3.18849G/s     846.724M               6.16674                3.17268   524.288k       6.26382M/s [BEST: throughput=  1.64 GB/s doc_throughput=    11 docs/s instructions=   846723949 cycles=   266594615 branch_miss=  518423 cache_miss= 6435052 cache_ref=   6471625 items=    524288 avg_time=  83701047 ns]
kostya<yyjson>/manual_time                             229618147 ns    247685123 ns            3         421.883k           598.187M        8.49675M       8.67736M     502.07M               3.6566           4.35663       2.18733G          978.903M                    7.12941                     1.94973           2.28413M    418.536k   137.305M        570.27M/s   8.49702M   8.65106M   502.023M         3.65626    4.35506/s 2.18634G/s     978.903M                7.1294                1.94992   524.288k        2.2833M/s [BEST: throughput=  0.60 GB/s doc_throughput=     4 docs/s instructions=   978902920 cycles=   502070023 branch_miss=  421883 cache_miss= 8496749 cache_ref=   8677363 items=    524288 avg_time= 229618146 ns]
kostya<yyjson_insitu>/manual_time                      152203678 ns    170305675 ns            5         412.341k           902.362M        6.35465M       6.51479M    374.376M               2.7266           6.57196       2.46038G          960.633M                    6.99634                     2.56596            3.4456M    412.583k   137.305M       860.322M/s   6.35581M   6.50842M    374.45M         2.72714    6.57014/s 2.46019G/s     960.633M               6.99634                2.56545   524.288k       3.44465M/s [BEST: throughput=  0.90 GB/s doc_throughput=     6 docs/s instructions=   960632929 cycles=   374376244 branch_miss=  412341 cache_miss= 6354652 cache_ref=   6514789 items=    524288 avg_time= 152203678 ns]
kostya<sajson>/manual_time                             163422232 ns    181470183 ns            4         354.824k            840.65M        8.49637M       8.53999M    520.872M              3.79354            6.1225       3.18904G          1.54442G                    11.2481                     2.96508           3.20995M    354.923k   137.305M       801.263M/s   8.48822M   8.54008M   521.145M         3.79553    6.11912/s 3.18895G/s     1.54442G               11.2481                2.96352   524.288k       3.20818M/s [BEST: throughput=  0.84 GB/s doc_throughput=     6 docs/s instructions=  1544424225 cycles=   520871855 branch_miss=  354824 cache_miss= 8496374 cache_ref=   8539990 items=    524288 avg_time= 163422231 ns]
kostya<rapidjson>/manual_time                          327642793 ns    345784641 ns            2         1.11047M           423.202M        5.24596M       5.76203M    937.383M              6.82701            3.0822        2.8892G          2.74288G                    19.9766                     2.92611           1.61596M    1.10884M   137.305M       399.656M/s   5.12393M   5.65515M   939.105M         6.83956     3.0521/s 2.86625G/s     2.74288G               19.9766                2.92074   524.288k       1.60018M/s [BEST: throughput=  0.42 GB/s doc_throughput=     3 docs/s instructions=  2742881493 cycles=   937382570 branch_miss= 1110468 cache_miss= 5245960 cache_ref=   5762030 items=    524288 avg_time= 327642793 ns]
kostya<rapidjson_lossless>/manual_time                 353402474 ns    371504140 ns            2         969.252k           392.455M        5.24993M        5.7694M    1019.36M              7.42406           2.85827       2.91361G          3.00973G                    21.9201                     2.95257           1.49856M    967.209k   137.305M       370.524M/s   5.12612M    5.6635M   1022.28M         7.44534    2.82963/s 2.89269G/s     3.00974G               21.9201                2.94413   524.288k       1.48354M/s [BEST: throughput=  0.39 GB/s doc_throughput=     2 docs/s instructions=  3009734781 cycles=  1019360427 branch_miss=  969252 cache_miss= 5249930 cache_ref=   5769403 items=    524288 avg_time= 353402473 ns]
kostya<rapidjson_insitu>/manual_time                   316006974 ns    334108615 ns            2         1005.65k           438.966M        7.37896M       7.97103M    901.633M              6.56664           3.19702       2.88254G          2.22722G                     16.221                     2.47021           1.67616M    1005.57k   137.305M       414.371M/s   7.25657M   7.86915M    903.59M          6.5809    3.16449/s  2.8594G/s     2.22722G                16.221                2.46486   524.288k        1.6591M/s [BEST: throughput=  0.44 GB/s doc_throughput=     3 docs/s instructions=  2227218930 cycles=   901633047 branch_miss= 1005651 cache_miss= 7378963 cache_ref=   7971027 items=    524288 avg_time= 316006974 ns]
kostya<nlohmann_json>/manual_time                     2205945013 ns   2224049442 ns            1         14.7713M           62.2432M        44.4402M       45.0511M    7.03644G              51.2468           0.45332       3.18976G          17.2831G                    125.874                     2.45622            237.67k    14.7713M   137.305M       59.3597M/s   44.4402M   45.0511M   7.03644G         51.2468    0.45332/s 3.18976G/s     17.2831G               125.874                2.45622   524.288k        237.67k/s [BEST: throughput=  0.06 GB/s doc_throughput=     0 docs/s instructions= 17283077381 cycles=  7036444806 branch_miss=14771295 cache_miss=44440156 cache_ref=  45051056 items=    524288 avg_time=2205945013 ns]
distinct_user_id<simdjson_dom>/manual_time                413758 ns       490878 ns         1692           3.819k           1.53479G               0        33.756k    1.31413M              2.08091          2.43033k       3.19377G          4.30951M                    6.82408                     3.27937           279.488k     3.9572k   631.515k       1.42147G/s   0.449764   33.8841k   1.32022M         2.09056   2.41687k/s 3.19081G/s     4.30951M               6.82408                3.26423        115        277.94k/s [BEST: throughput=  1.53 GB/s doc_throughput=  2430 docs/s instructions=     4309506 cycles=     1314126 branch_miss=    3819 cache_miss=       0 cache_ref=     33756 items=       115 avg_time=    413757 ns]
distinct_user_id<simdjson_ondemand>/manual_time           263604 ns       322760 ns         2656           1.799k           2.40885G               0         8.044k    837.372k              1.32597          3.81441k       3.19408G          2.93274M                    4.64398                     3.50232           438.657k    1.91541k   631.515k       2.23116G/s  0.0673946   8.06882k    841.35k         1.33227   3.79356k/s 3.19171G/s     2.93274M               4.64398                3.48576        115        436.26k/s [BEST: throughput=  2.41 GB/s doc_throughput=  3814 docs/s instructions=     2932744 cycles=      837372 branch_miss=    1799 cache_miss=       0 cache_ref=      8044 items=       115 avg_time=    263604 ns]
distinct_user_id<yyjson>/manual_time                      680830 ns       768837 ns         1000           6.456k           1.57472G          7.002k        27.362k    1.28063M              2.02787          2.49356k       3.19333G           2.8612M                    4.53069                     2.23421           286.759k    7.37582k   631.515k       884.596M/s   2.23727k   24.5526k   1.47305M         2.33256    1.4688k/s  2.1636G/s     2.86168M               4.53146                 1.9427        115       168.911k/s [BEST: throughput=  1.57 GB/s doc_throughput=  2493 docs/s instructions=     2861196 cycles=     1280632 branch_miss=    6456 cache_miss=    7002 cache_ref=     27362 items=       115 avg_time=    680830 ns]
distinct_user_id<yyjson_insitu>/manual_time               507696 ns       576747 ns         1392           6.734k           1.82611G          1.135k        13.493k       1099k              1.74026          2.89163k        3.1779G          2.86097M                    4.53033                     2.60325           332.537k    7.42287k   631.515k       1.15846G/s    71.9576   8.78199k    1.2262M         1.94169   1.96968k/s 2.41523G/s     2.86124M               4.53075                2.33341        115       226.514k/s [BEST: throughput=  1.83 GB/s doc_throughput=  2891 docs/s instructions=     2860973 cycles=     1099001 branch_miss=    6734 cache_miss=    1135 cache_ref=     13493 items=       115 avg_time=    507695 ns]
distinct_user_id<sajson>/manual_time                      674379 ns       743811 ns         1038          10.186k           945.716M               0        13.743k    2.13234M              3.37654          1.49754k       3.19325G          5.81023M                    9.20046                     2.72482           172.217k    10.6435k   631.515k       893.058M/s    1.92967   13.7585k   2.15154M         3.40695   1.48284k/s  3.1904G/s     5.81023M               9.20046                 2.7005        115       170.527k/s [BEST: throughput=  0.95 GB/s doc_throughput=  1497 docs/s instructions=     5810227 cycles=     2132336 branch_miss=   10186 cache_miss=       0 cache_ref=     13743 items=       115 avg_time=    674379 ns]
distinct_user_id<rapidjson>/manual_time                  2824062 ns      2895112 ns          249          30.732k           246.496M          9.722k        22.825k     8.1797M              12.9525           390.324       3.19274G          21.8424M                    34.5873                     2.67032           44.8873k    31.5112k   631.515k        213.26M/s    846.277   12.8304k   8.35165M         13.2248      354.1/s 2.95732G/s     21.8433M               34.5887                2.61544        115       40.7215k/s [BEST: throughput=  0.25 GB/s doc_throughput=   390 docs/s instructions=    21842395 cycles=     8179702 branch_miss=   30732 cache_miss=    9722 cache_ref=     22825 items=       115 avg_time=   2824061 ns]
distinct_user_id<rapidjson_insitu>/manual_time           1735455 ns      1804175 ns          427          26.192k           389.229M             110        14.891k    5.18041M              8.20314           616.341        3.1929G          13.2773M                    21.0246                     2.56299           70.8792k    26.9362k   631.515k       347.033M/s   2.37674k   12.3029k   5.26334M         8.33446    576.218/s 3.03283G/s     13.2778M               21.0253                 2.5227        115        66.265k/s [BEST: throughput=  0.39 GB/s doc_throughput=   616 docs/s instructions=    13277338 cycles=     5180409 branch_miss=   26192 cache_miss=     110 cache_ref=     14891 items=       115 avg_time=   1735455 ns]
distinct_user_id<nlohmann_json>/manual_time              9431372 ns      9521824 ns           82         128.135k           75.5137M             817        99.414k    26.6706M              42.2328           119.575       3.18915G          73.6309M                    116.594                     2.76075           13.7512k    202.772k   631.515k       63.8571M/s    131.451   105.212k   30.0839M         47.6377    106.029/s 3.18977G/s      72.281M               114.456                2.40264        115       12.1933k/s [BEST: throughput=  0.08 GB/s doc_throughput=   119 docs/s instructions=    73630939 cycles=    26670633 branch_miss=  128135 cache_miss=     817 cache_ref=     99414 items=       115 avg_time=   9431371 ns]
find_tweet<simdjson_dom>/manual_time                      398830 ns       471564 ns         1751           3.572k           1.59281G               1        29.189k    1.26627M              2.00512           2.5222k       3.19378G          4.22419M                    6.68897                     3.33594            2.5222k    3.71891k   631.515k       1.47468G/s     1.8578   29.2325k   1.27267M         2.01527   2.50734k/s 3.19102G/s     4.22419M               6.68897                3.31915          1       2.50734k/s [BEST: throughput=  1.59 GB/s doc_throughput=  2522 docs/s instructions=     4224186 cycles=     1266265 branch_miss=    3572 cache_miss=       1 cache_ref=     29189 items=         1 avg_time=    398829 ns]
find_tweet<simdjson_ondemand>/manual_time                 202267 ns       265134 ns         3456             1037           3.13248G               1          7.34k    644.125k              1.01997          4.96027k       3.19503G          2.42698M                     3.8431                     3.76786           4.96027k     1088.67   631.515k       2.90776G/s   0.605903   7.29348k   645.613k         1.02232   4.94396k/s 3.19188G/s     2.42698M                3.8431                3.75918          1       4.94396k/s [BEST: throughput=  3.13 GB/s doc_throughput=  4960 docs/s instructions=     2426975 cycles=      644125 branch_miss=    1037 cache_miss=       1 cache_ref=      7340 items=         1 avg_time=    202267 ns]
find_tweet<yyjson>/manual_time                            763435 ns       847085 ns         1086           9.602k           1.48837G             176        27.245k     1.3554M              2.14627          2.35683k       3.19445G           2.8006M                    4.43473                     2.06625           2.35683k    7.41976k   631.515k       788.881M/s    334.563   19.5114k   1.48547M         2.35224   1.30987k/s 1.94577G/s     2.80128M               4.43581                1.88579          1       1.30987k/s [BEST: throughput=  1.49 GB/s doc_throughput=  2356 docs/s instructions=     2800598 cycles=     1355404 branch_miss=    9602 cache_miss=     176 cache_ref=     27245 items=         1 avg_time=    763435 ns]
find_tweet<yyjson_insitu>/manual_time                     493764 ns       555042 ns         1418           6.767k           1.86363G             993        12.787k    1077.55k              1.70629          2.95105k        3.1799G          2.80028M                    4.43422                     2.59875           2.95105k    7.21711k   631.515k       1.19115G/s    7.26234   4.65984k   1.18247M         1.87243   2.02526k/s  2.3948G/s     2.80054M               4.43464                2.36839          1       2.02526k/s [BEST: throughput=  1.86 GB/s doc_throughput=  2951 docs/s instructions=     2800277 cycles=     1077547 branch_miss=    6767 cache_miss=     993 cache_ref=     12787 items=         1 avg_time=    493763 ns]
find_tweet<sajson>/manual_time                            662660 ns       730384 ns         1056           9.765k           962.794M              10        13.192k    2.09456M              3.31672          1.52458k       3.19332G          5.71503M                    9.04972                     2.72851           1.52458k    10.4911k   631.515k       908.851M/s    3.50947   12.9714k   2.11425M          3.3479   1.50907k/s 3.19055G/s     5.71503M               9.04972                 2.7031          1       1.50907k/s [BEST: throughput=  0.96 GB/s doc_throughput=  1524 docs/s instructions=     5715034 cycles=     2094561 branch_miss=    9765 cache_miss=      10 cache_ref=     13192 items=         1 avg_time=    662660 ns]
find_tweet<rapidjson>/manual_time                        2802595 ns      2869320 ns          250          30.454k           247.912M         11.906k         21.34k     8.1329M              12.8784           392.567       3.19271G          21.7589M                    34.4551                     2.67542            392.567    30.9088k   631.515k       214.894M/s    662.276   9.93052k   8.28426M         13.1181    356.812/s 2.95592G/s     21.7596M               34.4562                2.62662          1        356.812/s [BEST: throughput=  0.25 GB/s doc_throughput=   392 docs/s instructions=    21758910 cycles=     8132898 branch_miss=   30454 cache_miss=   11906 cache_ref=     21340 items=         1 avg_time=   2802595 ns]
find_tweet<rapidjson_insitu>/manual_time                 1698148 ns      1763196 ns          437          25.817k           396.293M          2.083k        13.753k    5.08798M              8.05678           627.528       3.19285G          13.1992M                    20.9009                      2.5942            627.528    26.0129k   631.515k       354.657M/s   2.15847k   9.54601k   5.14404M         8.14555    588.877/s  3.0292G/s     13.1995M               20.9013                2.56598          1        588.877/s [BEST: throughput=  0.40 GB/s doc_throughput=   627 docs/s instructions=    13199235 cycles=     5087977 branch_miss=   25817 cache_miss=    2083 cache_ref=     13753 items=         1 avg_time=   1698147 ns]
find_tweet<nlohmann_json>/manual_time                    7648116 ns      7736127 ns           87          102.62k           89.4353M             373        76.299k    22.5315M              35.6785            141.62       3.19091G          63.6916M                    100.855                     2.82678             141.62    130.997k   631.515k       78.7461M/s    152.966   81.9583k   24.3946M         38.6287    130.751/s 3.18962G/s     62.3063M               98.6616                 2.5541          1        130.751/s [BEST: throughput=  0.09 GB/s doc_throughput=   141 docs/s instructions=    63691560 cycles=    22531494 branch_miss=  102620 cache_miss=     373 cache_ref=     76299 items=         1 avg_time=   7648116 ns]
top_tweet<simdjson_dom>/manual_time                       406563 ns       485194 ns         1725           3.593k           1.56251G               1        32.052k    1.29073M              2.04386          2.47422k       3.19356G          4.26107M                    6.74738                     3.30129           2.47422k    3.77197k   631.515k       1.44663G/s    2.32464   32.1364k   1.29731M         2.05428   2.45965k/s 3.19092G/s     4.26107M               6.74738                3.28455          1       2.45965k/s [BEST: throughput=  1.56 GB/s doc_throughput=  2474 docs/s instructions=     4261074 cycles=     1290731 branch_miss=    3593 cache_miss=       1 cache_ref=     32052 items=         1 avg_time=    406562 ns]
top_tweet<simdjson_ondemand>/manual_time                  260751 ns       324344 ns         2681            1.81k           2.43852G               5          8.45k     827.25k              1.30995          3.86138k       3.19432G          2.95277M                     4.6757                     3.56939           3.86138k    1.94232k   631.515k       2.25558G/s    5.33793   8.52087k   832.262k         1.31788   3.83508k/s 3.19179G/s     2.95278M                4.6757                3.54789          1       3.83508k/s [BEST: throughput=  2.44 GB/s doc_throughput=  3861 docs/s instructions=     2952775 cycles=      827250 branch_miss=    1810 cache_miss=       5 cache_ref=      8450 items=         1 avg_time=    260750 ns]
top_tweet<simdjson_ondemand_forward_only>/manual_time     271567 ns       335875 ns         2578           2.055k           2.34233G               1         9.504k    861.228k              1.36375          3.70906k       3.19435G          3.17845M                    5.03306                     3.69061           3.70906k    2.22174k   631.515k       2.16575G/s   0.451901   9.61539k   866.718k         1.37244   3.68234k/s 3.19155G/s     3.17845M               5.03306                3.66723          1       3.68234k/s [BEST: throughput=  2.34 GB/s doc_throughput=  3709 docs/s instructions=     3178453 cycles=      861228 branch_miss=    2055 cache_miss=       1 cache_ref=      9504 items=         1 avg_time=    271566 ns]
top_tweet<yyjson>/manual_time                             773844 ns       862672 ns         1094           9.632k           1.47702G             254        27.586k    1.36582M              2.16276          2.33885k       3.19444G          2.82787M                    4.47791                     2.07046           2.33885k    7.48268k   631.515k       778.271M/s    391.207   22.3834k   1.51841M          2.4044   1.29225k/s 1.96217G/s     2.82835M               4.47867                 1.8627          1       1.29225k/s [BEST: throughput=  1.48 GB/s doc_throughput=  2338 docs/s instructions=     2827869 cycles=     1365818 branch_miss=    9632 cache_miss=     254 cache_ref=     27586 items=         1 avg_time=    773843 ns]
top_tweet<yyjson_insitu>/manual_time                      501635 ns       570049 ns         1000           6.852k           1.84141G          2.091k        13.992k    1090.68k              1.72709          2.91586k       3.18028G          2.82755M                     4.4774                     2.59245           2.91586k    7.26127k   631.515k       1.17245G/s     52.329   7.66798k   1.20796M          1.9128   1.99348k/s 2.40805G/s     2.82781M               4.47782                2.34097          1       1.99348k/s [BEST: throughput=  1.84 GB/s doc_throughput=  2915 docs/s instructions=     2827548 cycles=     1090685 branch_miss=    6852 cache_miss=    2091 cache_ref=     13992 items=         1 avg_time=    501635 ns]
top_tweet<sajson>/manual_time                             671849 ns       743900 ns         1051          10.183k           953.795M              59        12.922k    2.11427M              3.34793          1.51033k       3.19324G          5.74503M                    9.09721                     2.71726           1.51033k    11.1149k   631.515k       896.421M/s     58.844   13.0005k   2.14356M         3.39431   1.48843k/s 3.19054G/s     5.74503M               9.09721                2.68013          1       1.48843k/s [BEST: throughput=  0.95 GB/s doc_throughput=  1510 docs/s instructions=     5745026 cycles=     2114268 branch_miss=   10183 cache_miss=      59 cache_ref=     12922 items=         1 avg_time=    671849 ns]
top_tweet<rapidjson>/manual_time                         2813915 ns      2884759 ns          250          30.296k           247.478M         12.292k        22.361k    8.13601M              12.8833            391.88       3.18833G          21.8182M                     34.549                     2.68168             391.88    31.4457k   631.515k       214.029M/s     762.62   10.4665k   8.32099M         13.1762    355.377/s 2.95708G/s      21.819M               34.5503                2.62217          1        355.377/s [BEST: throughput=  0.25 GB/s doc_throughput=   391 docs/s instructions=    21818188 cycles=     8136006 branch_miss=   30296 cache_miss=   12292 cache_ref=     22361 items=         1 avg_time=   2813915 ns]
top_tweet<rapidjson_insitu>/manual_time                  1706097 ns      1776334 ns          435          26.068k           394.292M             164        14.389k    5.11387M              8.09778           624.358       3.19289G          13.2536M                     20.987                      2.5917            624.358    26.1933k   631.515k       353.004M/s   2.27677k    10.855k   5.16969M         8.18617    586.133/s 3.03012G/s     13.2541M               20.9877                2.56381          1        586.133/s [BEST: throughput=  0.39 GB/s doc_throughput=   624 docs/s instructions=    13253615 cycles=     5113871 branch_miss=   26068 cache_miss=     164 cache_ref=     14389 items=         1 avg_time=   1706096 ns]
top_tweet<nlohmann_json>/manual_time                    10470625 ns     10561427 ns           67         192.098k           60.7433M             164       165.525k    33.1557M              52.5018           96.1866       3.18913G          85.8309M                    135.913                     2.58872            96.1866    197.065k   631.515k        57.519M/s    264.045   164.619k   33.3974M         52.8846    95.5053/s 3.18963G/s       86.11M               136.355                2.57834          1        95.5053/s [BEST: throughput=  0.06 GB/s doc_throughput=    96 docs/s instructions=    85830900 cycles=    33155701 branch_miss=  192098 cache_miss=     164 cache_ref=    165525 items=         1 avg_time=  10470625 ns]
