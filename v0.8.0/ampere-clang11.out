run_benchmark: v0.8.0 /home/jkeiser/simdjson_benchmark_results/v0.8.0/skylake-clang11.json 
git reset --hard v0.8.0
HEAD is now at c96ff018 Version 0.8.
cmake ..
-- The CXX compiler identification is Clang 11.0.0
-- The C compiler identification is Clang 11.0.0
-- Check for working CXX compiler: /usr/bin/clang++-11
-- Check for working CXX compiler: /usr/bin/clang++-11 -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Check for working C compiler: /usr/bin/clang-11
-- Check for working C compiler: /usr/bin/clang-11 -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- No build type selected, default to Release
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed
-- Check if compiler accepts -pthread
-- Check if compiler accepts -pthread - yes
-- Found Threads: TRUE  
-- Looking for fork
-- Looking for fork - found
-- Looking for wait
-- Looking for wait - found
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Found Git: /usr/bin/git (found version "2.27.0") 
-- git Version: v0.2.1-c96ff018
-- Version: 0.2.1
-- Performing Test HAVE_CXX_FLAG_STD_CXX11
-- Performing Test HAVE_CXX_FLAG_STD_CXX11 - Success
-- Performing Test HAVE_CXX_FLAG_WALL
-- Performing Test HAVE_CXX_FLAG_WALL - Success
-- Performing Test HAVE_CXX_FLAG_WEXTRA
-- Performing Test HAVE_CXX_FLAG_WEXTRA - Success
-- Performing Test HAVE_CXX_FLAG_WSHADOW
-- Performing Test HAVE_CXX_FLAG_WSHADOW - Success
-- Performing Test HAVE_CXX_FLAG_WERROR
-- Performing Test HAVE_CXX_FLAG_WERROR - Success
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32 - Success
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED - Success
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WD654
-- Performing Test HAVE_CXX_FLAG_WD654 - Failed
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY - Success
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES -- failed to compile
-- Performing Test HAVE_CXX_FLAG_COVERAGE
-- Performing Test HAVE_CXX_FLAG_COVERAGE - Success
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Performing Test USE_BOOST_JSON
-- Performing Test USE_BOOST_JSON - Failed
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Found Python3: /usr/bin/python3.8 (found version "3.8.6") found components: Interpreter 
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
make[1]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[2]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
Scanning dependencies of target benchmark
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[  0%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/benchmark.cc.o
[ 10%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o
[ 10%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/benchmark_name.cc.o
[ 10%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/benchmark_register.cc.o
[ 20%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/benchmark_runner.cc.o
[ 20%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/colorprint.cc.o
[ 30%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/commandlineflags.cc.o
[ 30%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/complexity.cc.o
[ 30%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/console_reporter.cc.o
[ 40%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/counter.cc.o
[ 40%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/csv_reporter.cc.o
[ 50%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/json_reporter.cc.o
[ 50%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/reporter.cc.o
[ 60%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/sleep.cc.o
[ 60%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/statistics.cc.o
[ 60%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/string_util.cc.o
[ 70%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/sysinfo.cc.o
[ 70%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/timers.cc.o
[ 80%] Linking CXX static library libbenchmark.a
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 80%] Built target benchmark
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
Scanning dependencies of target generated-data
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 80%] Generating utf-8.json, escape.json, 0-structurals.json, 7-structurals.json, 15-structurals.json, 23-structurals.json
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-miss.json ...
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 80%] Built target generated-data
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
Scanning dependencies of target simdjson
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 80%] Building CXX object src/CMakeFiles/simdjson.dir/simdjson.cpp.o
[ 80%] Linking CXX shared library ../libsimdjson.so
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 80%] Built target simdjson
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
Scanning dependencies of target yyjson
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 80%] Building C object dependencies/CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o
[ 90%] Linking C static library libyyjson.a
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 90%] Built target yyjson
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
Scanning dependencies of target bench_ondemand
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[100%] Building CXX object benchmark/CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o
[100%] Linking CXX executable bench_ondemand
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[100%] Built target bench_ondemand
make[2]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[1]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.8.0/skylake-clang11.json --benchmark_out_format=json
2021-01-23 06:07:45
Running benchmark/bench_ondemand
Run on (32 X 3300 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x32)
  L1 Instruction 32 KiB (x32)
  L2 Unified 256 KiB (x16)
Load Average: 1.08, 0.95, 0.88
simdjson::dom implementation:      arm64
simdjson::ondemand implementation: arm64

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                 1551736 ns      1621795 ns          451          14.013k           407.866M         25.972k       960.628k    4.95652M              7.84861           645.854       3.20119G          3.94988M                    6.25461                    0.796907           64.5854k    14.1893k   631.515k        388.12M/s   25.9867k   960.999k   4.96219M          7.8576    644.439/s 3.19783G/s     3.94988M               6.25461               0.795995        100       64.4439k/s [BEST: throughput=  0.41 GB/s doc_throughput=   645 docs/s instructions=     3949882 cycles=     4956518 branch_miss=   14013 cache_miss=   25972 cache_ref=    960628 items=       100 avg_time=   1551736 ns]
partial_tweets<simdjson_ondemand>/manual_time            1052383 ns      1122810 ns          664           8.814k           602.636M         22.855k        446.22k    3.35567M              5.31368            954.27       3.20222G          2.72661M                    4.31757                    0.812539            95.427k     8.9884k   631.515k       572.282M/s   22.9038k   447.363k   3.36611M         5.33022    950.224/s 3.19856G/s     2.72662M               4.31758               0.810019        100       95.0224k/s [BEST: throughput=  0.60 GB/s doc_throughput=   954 docs/s instructions=     2726613 cycles=     3355671 branch_miss=    8814 cache_miss=   22855 cache_ref=    446220 items=       100 avg_time=   1052383 ns]
partial_tweets<yyjson>/manual_time                       1199579 ns      1271951 ns          586          46.811k           594.218M         24.463k       1.41115M    3.40253M              5.38789           940.941       3.20158G          3.27051M                    5.17884                    0.961199           94.0941k    46.2824k   631.515k       502.059M/s   24.3034k   1.41051M   3.61135M         5.71855    833.625/s 3.01051G/s     3.27059M               5.17895               0.905641        100       83.3625k/s [BEST: throughput=  0.59 GB/s doc_throughput=   940 docs/s instructions=     3270512 cycles=     3402532 branch_miss=   46811 cache_miss=   24463 cache_ref=   1411155 items=       100 avg_time=   1199579 ns]
partial_tweets<yyjson_insitu>/manual_time                1116735 ns      1189686 ns          627          46.257k           620.654M          14.36k        1.2516M    3.25806M              5.15912           982.801       3.20202G          3.17138M                    5.02185                    0.973394           98.2801k    46.2551k   631.515k       539.304M/s    14.402k   1.25133M   3.46095M         5.48039    895.467/s 3.09917G/s     3.17152M               5.02209               0.916374        100       89.5467k/s [BEST: throughput=  0.62 GB/s doc_throughput=   982 docs/s instructions=     3171376 cycles=     3258060 branch_miss=   46257 cache_miss=   14360 cache_ref=   1251602 items=       100 avg_time=   1116735 ns]
partial_tweets<sajson>/manual_time                       1469637 ns      1541866 ns          476          58.231k           430.864M          12.77k       1.86871M    4.69213M              7.42995           682.271        3.2013G           5.5518M                    8.79125                     1.18322           68.2271k    58.4633k   631.515k       409.802M/s   12.7837k   1.86926M   4.69937M         7.44143     680.44/s 3.19764G/s     5.55181M               8.79125                1.18139        100        68.044k/s [BEST: throughput=  0.43 GB/s doc_throughput=   682 docs/s instructions=     5551804 cycles=     4692127 branch_miss=   58231 cache_miss=   12770 cache_ref=   1868706 items=       100 avg_time=   1469637 ns]
partial_tweets<rapidjson>/manual_time                    4613018 ns      4686682 ns          152           83.96k            138.89M         13.092k       13.3893M    14.4925M              22.9487           219.931       3.18734G          20.6791M                    32.7452                     1.42688           21.9931k     83.702k   631.515k       130.557M/s   13.2919k   13.3876M   14.5314M         23.0104    216.778/s 3.15009G/s     20.6797M               32.7461                 1.4231        100       21.6778k/s [BEST: throughput=  0.14 GB/s doc_throughput=   219 docs/s instructions=    20679098 cycles=    14492478 branch_miss=   83960 cache_miss=   13092 cache_ref=  13389330 items=       100 avg_time=   4613018 ns]
partial_tweets<rapidjson_insitu>/manual_time             2931978 ns      3006325 ns          238          60.705k           219.094M         13.882k        5.8588M      9.226M              14.6093           346.934       3.20082G          12.8211M                    20.3021                     1.38967           34.6934k    60.6534k   631.515k       205.411M/s   14.0031k   5.85837M   9.21837M         14.5972    341.067/s 3.14408G/s     12.8217M               20.3031                1.39089        100       34.1067k/s [BEST: throughput=  0.22 GB/s doc_throughput=   346 docs/s instructions=    12821097 cycles=     9225999 branch_miss=   60705 cache_miss=   13882 cache_ref=   5858803 items=       100 avg_time=   2931978 ns]
partial_tweets<nlohmann_json>/manual_time               22842713 ns     22940004 ns           31         417.814k           29.4589M        199.067k       50.9548M    68.5338M              108.523           46.6479       3.19696G          81.5414M                     129.12                      1.1898           4.66479k     453.83k   631.515k       26.3655M/s   256.619k   51.1733M   73.0172M         115.622    43.7776/s 3.19652G/s      81.892M               129.675                1.12154        100       4.37776k/s [BEST: throughput=  0.03 GB/s doc_throughput=    46 docs/s instructions=    81541402 cycles=    68533800 branch_miss=  417814 cache_miss=  199067 cache_ref=  50954777 items=       100 avg_time=  22842713 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                 311024940 ns    314631057 ns            2         1.92085M           147.939M        3.98137M       231.764M    994.059M              21.6106           3.21614       3.19704G          1040.92M                    22.6292                     1.04714           3.21614M    1.92104M   45.9988M       141.043M/s   3.98135M   231.761M   994.324M         21.6163    3.21518/s 3.19693G/s     1040.92M               22.6292                1.04686      1000k       3.21518M/s [BEST: throughput=  0.15 GB/s doc_throughput=     3 docs/s instructions=  1040915692 cycles=   994059185 branch_miss= 1920848 cache_miss= 3981370 cache_ref= 231763787 items=   1000000 avg_time= 311024940 ns]
large_random<simdjson_ondemand>/manual_time            198044783 ns    201667212 ns            4         1.20433M           232.297M        2.31771M       143.314M    633.159M              13.7647           5.05006       3.19749G          662.774M                    14.4085                     1.04677           5.05006M    1.20435M   45.9988M       221.505M/s   2.31775M   143.315M   633.168M         13.7649    5.04936/s 3.19709G/s     662.774M               14.4085                1.04676      1000k       5.04936M/s [BEST: throughput=  0.23 GB/s doc_throughput=     5 docs/s instructions=   662773945 cycles=   633159024 branch_miss= 1204330 cache_miss= 2317713 cache_ref= 143314350 items=   1000000 avg_time= 198044783 ns]
large_random<simdjson_ondemand_unordered>/manual_time  188154076 ns    191775245 ns            4         1.20521M           244.502M        2.31774M       141.233M    601.525M               13.077           5.31541       3.19735G          674.774M                    14.6694                     1.12177           5.31541M    1.20487M   45.9988M       233.149M/s   2.31775M   141.233M   601.521M         13.0769    5.31479/s 3.19696G/s     674.774M               14.6694                1.12178      1000k       5.31479M/s [BEST: throughput=  0.24 GB/s doc_throughput=     5 docs/s instructions=   674773942 cycles=   601525176 branch_miss= 1205207 cache_miss= 2317737 cache_ref= 141232582 items=   1000000 avg_time= 188154075 ns]
large_random<yyjson>/manual_time                       204594430 ns    208219757 ns            3         1.57864M           224.878M        4.91195M       205.562M    628.763M              13.6691           4.88878       3.07388G          816.384M                     17.748                      1.2984           4.88878M    1.57661M   45.9988M       214.414M/s   4.91201M   205.573M   628.814M         13.6702    4.88772/s 3.07347G/s     816.384M                17.748                1.29829      1000k       4.88772M/s [BEST: throughput=  0.22 GB/s doc_throughput=     4 docs/s instructions=   816384374 cycles=   628762515 branch_miss= 1578640 cache_miss= 4911951 cache_ref= 205562474 items=   1000000 avg_time= 204594429 ns]
large_random<yyjson_insitu>/manual_time                198603893 ns    202210012 ns            4         1.57521M           231.694M        4.19489M       194.061M    616.588M              13.4044           5.03695       3.10572G          809.197M                    17.5917                     1.31238           5.03695M     1.5759M   45.9988M       220.881M/s   4.19496M   194.061M   616.739M         13.4077    5.03515/s 3.10537G/s     809.197M               17.5917                1.31206      1000k       5.03515M/s [BEST: throughput=  0.23 GB/s doc_throughput=     5 docs/s instructions=   809197130 cycles=   616587504 branch_miss= 1575211 cache_miss= 4194891 cache_ref= 194060929 items=   1000000 avg_time= 198603893 ns]
large_random<sajson>/manual_time                       214949724 ns    218556386 ns            3         2.60457M           216.192M        3.44565M       213.424M    680.149M              14.7862           4.69995       3.19666G          963.995M                     20.957                     1.41733           4.69995M    2.00137M   45.9988M       204.084M/s   3.44582M   213.418M   687.094M         14.9372    4.65225/s 3.19653G/s     963.995M                20.957                  1.403      1000k       4.65225M/s [BEST: throughput=  0.22 GB/s doc_throughput=     4 docs/s instructions=   963995037 cycles=   680148701 branch_miss= 2604575 cache_miss= 3445650 cache_ref= 213423965 items=   1000000 avg_time= 214949724 ns]
large_random<rapidjson>/manual_time                    360626688 ns    364244202 ns            2         2.17619M           127.733M        4.95418M       779.945M    1.12406G              24.4368           2.77687       3.12138G          1.63051G                    35.4468                     1.45055           2.77687M    2.14821M   45.9988M       121.643M/s    4.9546M   779.601M   1.12337G         24.4216    2.77295/s 3.11504G/s     1.63052G               35.4469                1.45146      1000k       2.77295M/s [BEST: throughput=  0.13 GB/s doc_throughput=     2 docs/s instructions=  1630509984 cycles=  1124062264 branch_miss= 2176187 cache_miss= 4954180 cache_ref= 779945150 items=   1000000 avg_time= 360626688 ns]
large_random<rapidjson_lossless>/manual_time           562326217 ns    428265003 ns            1         2.08409M           81.8009M        4.95263M       1024.02M    1.32887G              28.8893           1.77833       2.36317G          2.05348G                    44.6421                     1.54528           1.77833M    2.08409M   45.9988M       78.0114M/s   4.95263M   1024.02M   1.32887G         28.8893    1.77833/s 2.36317G/s     2.05348G               44.6421                1.54528      1000k       1.77833M/s [BEST: throughput=  0.08 GB/s doc_throughput=     1 docs/s instructions=  2053483324 cycles=  1328871236 branch_miss= 2084094 cache_miss= 4952635 cache_ref=1024016396 items=   1000000 avg_time= 562326217 ns]
large_random<rapidjson_insitu>/manual_time             356083051 ns    359698236 ns            2         1.98955M           129.463M        5.67104M       696.071M    1.10859G              24.1005           2.81448       3.12012G          1.37951G                    29.9901                     1.24438           2.81448M    1.99203M   45.9988M       123.196M/s   5.67183M   696.083M   1.10875G         24.1039    2.80833/s 3.11374G/s     1.37951G               29.9903                1.24421      1000k       2.80833M/s [BEST: throughput=  0.13 GB/s doc_throughput=     2 docs/s instructions=  1379509844 cycles=  1108594511 branch_miss= 1989555 cache_miss= 5671043 cache_ref= 696071493 items=   1000000 avg_time= 356083051 ns]
large_random<nlohmann_json>/manual_time               3232147370 ns   3235722971 ns            1         17.8838M           14.2316M        27.6602M       6.93316G    10.3293G              224.557          0.309392       3.19581G           12.884G                    280.094                     1.24732           309.392k    17.8838M   45.9988M       13.5724M/s   27.6602M   6.93316G   10.3293G         224.557   0.309392/s 3.19581G/s      12.884G               280.094                1.24732      1000k       309.392k/s [BEST: throughput=  0.01 GB/s doc_throughput=     0 docs/s instructions= 12883980764 cycles= 10329330271 branch_miss=17883843 cache_miss=27660178 cache_ref=6933164882 items=   1000000 avg_time=3232147370 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                       377015254 ns    387639469 ns            2         884.271k            364.19M        6.95224M       248.828M     1.2053G              8.77828           2.65242       3.19696G           1.1314G                    8.24004                    0.938686           1.39063M     884.49k   137.305M       347.318M/s   6.95227M    248.83M   1.20535G         8.77866    2.65241/s  3.1971G/s      1.1314G               8.24004               0.938645   524.288k       1.39063M/s [BEST: throughput=  0.36 GB/s doc_throughput=     2 docs/s instructions=  1131399189 cycles=  1205301348 branch_miss=  884271 cache_miss= 6952241 cache_ref= 248827662 items=    524288 avg_time= 377015253 ns]
kostya<simdjson_ondemand>/manual_time                  255851902 ns    266442460 ns            3         890.305k           536.699M        5.28391M       145.544M    817.864M              5.95655           3.90881       3.19687G          791.585M                    5.76516                    0.967869           2.04934M    890.384k   137.305M       511.797M/s   5.28393M   145.544M   817.871M          5.9566    3.90851/s 3.19666G/s     791.585M               5.76516                0.96786   524.288k       2.04919M/s [BEST: throughput=  0.54 GB/s doc_throughput=     3 docs/s instructions=   791585018 cycles=   817863823 branch_miss=  890305 cache_miss= 5283912 cache_ref= 145544161 items=    524288 avg_time= 255851902 ns]
kostya<yyjson>/manual_time                             288876920 ns    299477268 ns            2         2.78169M           475.603M        7.97117M       328.233M    879.557M              6.40586           3.46384       3.04665G          948.794M                    6.91012                     1.07872           1.81605M    2.76543M   137.305M       453.287M/s   7.97099M   328.187M   880.109M         6.40989    3.46168/s 3.04666G/s     948.794M               6.91012                1.07804   524.288k       1.81492M/s [BEST: throughput=  0.48 GB/s doc_throughput=     3 docs/s instructions=   948793700 cycles=   879556925 branch_miss= 2781691 cache_miss= 7971173 cache_ref= 328233119 items=    524288 avg_time= 288876919 ns]
kostya<yyjson_insitu>/manual_time                      271189932 ns    281795453 ns            3         2.79698M           506.715M        5.83054M       293.981M    843.444M              6.14285           3.69044       3.11268G          927.339M                    6.75387                     1.09947           1.93485M    2.78764M   137.305M       482.851M/s   5.83076M   293.963M   844.108M         6.14768    3.68745/s 3.11261G/s     927.339M               6.75387                 1.0986   524.288k       1.93329M/s [BEST: throughput=  0.51 GB/s doc_throughput=     3 docs/s instructions=   927339470 cycles=   843444371 branch_miss= 2796978 cache_miss= 5830540 cache_ref= 293980890 items=    524288 avg_time= 271189931 ns]
kostya<sajson>/manual_time                             412353644 ns    422949780 ns            2         7.08896M           333.124M        4.63222M       417.833M    1.31757G              9.59597           2.42616       3.19665G          1.41335G                    10.2935                     1.07269           1.27201M    7.12176M   137.305M       317.553M/s   4.63224M   417.868M   1.31819G         9.60043     2.4251/s 3.19674G/s     1.41335G               10.2935                1.07219   524.288k       1.27145M/s [BEST: throughput=  0.33 GB/s doc_throughput=     2 docs/s instructions=  1413353471 cycles=  1317574676 branch_miss= 7088955 cache_miss= 4632219 cache_ref= 417832727 items=    524288 avg_time= 412353644 ns]
kostya<rapidjson>/manual_time                          593329614 ns    603952003 ns            1         6.80206M           231.414M         5.3385M       1.20711G    1.86162G              13.5583            1.6854       3.13759G          2.46967G                    17.9868                     1.32662           883.637k    6.80206M   137.305M       220.694M/s    5.3385M   1.20711G   1.86162G         13.5583     1.6854/s 3.13759G/s     2.46967G               17.9868                1.32662   524.288k       883.637k/s [BEST: throughput=  0.23 GB/s doc_throughput=     1 docs/s instructions=  2469674886 cycles=  1861623766 branch_miss= 6802055 cache_miss= 5338496 cache_ref=1207105807 items=    524288 avg_time= 593329614 ns]
kostya<rapidjson_lossless>/manual_time                 696572418 ns    691535826 ns            1         9.61071M           197.115M         5.3404M       1.35384G    2.07849G              15.1378            1.4356       2.98388G          2.71451G                    19.7699                       1.306           752.668k    9.61071M   137.305M       187.984M/s    5.3404M   1.35384G   2.07849G         15.1378     1.4356/s 2.98388G/s     2.71451G               19.7699                  1.306   524.288k       752.668k/s [BEST: throughput=  0.20 GB/s doc_throughput=     1 docs/s instructions=  2714509139 cycles=  2078490438 branch_miss= 9610707 cache_miss= 5340396 cache_ref=1353840184 items=    524288 avg_time= 696572418 ns]
kostya<rapidjson_insitu>/manual_time                   539416861 ns    550038492 ns            1          5.9606M           254.543M        6.32835M       916.045M    1.68943G              12.3042           1.85385       3.13195G          1.99322G                    14.5167                     1.17982           971.953k     5.9606M   137.305M       242.751M/s   6.32835M   916.045M   1.68943G         12.3042    1.85385/s 3.13195G/s     1.99322G               14.5167                1.17982   524.288k       971.953k/s [BEST: throughput=  0.25 GB/s doc_throughput=     1 docs/s instructions=  1993216636 cycles=  1689425679 branch_miss= 5960605 cache_miss= 6328345 cache_ref= 916044782 items=    524288 avg_time= 539416861 ns]
kostya<nlohmann_json>/manual_time                     5619514730 ns   5630131827 ns            1          47.914M           24.4336M        37.9325M       11.0888G    17.9646G              130.837          0.177951       3.19683G           18.087G                    131.729                     1.00681           93.2977k     47.914M   137.305M       23.3017M/s   37.9325M   11.0888G   17.9646G         130.837   0.177951/s 3.19683G/s      18.087G               131.729                1.00681   524.288k       93.2977k/s [BEST: throughput=  0.02 GB/s doc_throughput=     0 docs/s instructions= 18087020918 cycles= 17964634624 branch_miss=47913994 cache_miss=37932487 cache_ref=11088770470 items=    524288 avg_time=5619514730 ns]
distinct_user_id<simdjson_dom>/manual_time               1561214 ns      1646539 ns          448          13.962k           406.472M         26.581k        949.47k    4.97396M              7.87624           643.646       3.20147G          3.87901M                    6.14239                    0.779863           74.0193k    13.8755k   631.515k       385.764M/s    26.578k    949.72k   4.99246M         7.90552    640.527/s  3.1978G/s     3.87901M               6.14239               0.776975        115       73.6606k/s [BEST: throughput=  0.41 GB/s doc_throughput=   643 docs/s instructions=     3879010 cycles=     4973962 branch_miss=   13962 cache_miss=   26581 cache_ref=    949470 items=       115 avg_time=   1561214 ns]
distinct_user_id<simdjson_ondemand>/manual_time          1046627 ns      1131131 ns          668          10.069k           605.112M         22.683k       431.677k    3.34144M              5.29115           958.191       3.20174G          2.67029M                    4.22838                    0.799142           110.192k    10.3048k   631.515k       575.429M/s   22.6626k   432.436k   3.34747M          5.3007     955.45/s 3.19834G/s     2.67029M               4.22839               0.797703        115       109.877k/s [BEST: throughput=  0.61 GB/s doc_throughput=   958 docs/s instructions=     2670288 cycles=     3341442 branch_miss=   10069 cache_miss=   22683 cache_ref=    431677 items=       115 avg_time=   1046627 ns]
distinct_user_id<yyjson>/manual_time                     1148971 ns      1236900 ns          632          46.805k           606.209M         24.253k       1.39683M    3.33539M              5.28157           959.929       3.20174G          3.23395M                    5.12094                    0.969588           110.392k    46.3415k   631.515k       524.173M/s   24.2837k   1.39748M   3.54467M         5.61297    870.344/s 3.08508G/s     3.23383M               5.12075               0.912307        115        100.09k/s [BEST: throughput=  0.61 GB/s doc_throughput=   959 docs/s instructions=     3233953 cycles=     3335389 branch_miss=   46805 cache_miss=   24253 cache_ref=   1396833 items=       115 avg_time=   1148970 ns]
distinct_user_id<yyjson_insitu>/manual_time              1096304 ns      1184749 ns          638           46.36k           632.323M          14.39k       1.23872M    3.19779M              5.06368           1001.28       3.20188G          3.13466M                    4.96371                    0.980258           115.147k    46.2013k   631.515k       549.354M/s   14.3677k   1.23822M   3.39456M         5.37526    912.155/s 3.09636G/s     3.13481M               4.96395               0.923481        115       104.898k/s [BEST: throughput=  0.63 GB/s doc_throughput=  1001 docs/s instructions=     3134660 cycles=     3197790 branch_miss=   46360 cache_miss=   14390 cache_ref=   1238718 items=       115 avg_time=   1096304 ns]
distinct_user_id<sajson>/manual_time                     1455204 ns      1542897 ns          481          58.012k           435.186M         12.833k       1.85526M    4.64591M              7.35677           689.114       3.20156G          5.49513M                     8.7015                     1.18279           79.2481k    58.4718k   631.515k       413.866M/s   12.8302k   1.85558M   4.65361M         7.36896    687.189/s 3.19791G/s     5.49513M                8.7015                1.18083        115       79.0267k/s [BEST: throughput=  0.44 GB/s doc_throughput=   689 docs/s instructions=     5495126 cycles=     4645910 branch_miss=   58012 cache_miss=   12833 cache_ref=   1855262 items=       115 avg_time=   1455204 ns]
distinct_user_id<rapidjson>/manual_time                  4604133 ns      4693991 ns          152          83.812k           139.434M         14.439k       13.3919M    14.4955M              22.9536           220.792        3.2005G          20.6347M                    32.6749                     1.42352           25.3911k    83.7117k   631.515k       130.808M/s   14.6649k   13.3871M    14.538M         23.0208    217.196/s  3.1576G/s     20.6353M               32.6758                 1.4194        115       24.9776k/s [BEST: throughput=  0.14 GB/s doc_throughput=   220 docs/s instructions=    20634687 cycles=    14495538 branch_miss=   83812 cache_miss=   14439 cache_ref=  13391860 items=       115 avg_time=   4604132 ns]
distinct_user_id<rapidjson_insitu>/manual_time           2933327 ns      3025100 ns          239          60.757k           218.458M          14.59k        5.8509M    9.25213M              14.6507           345.926       3.20056G           12.777M                    20.2323                     1.38098           39.7815k    60.7852k   631.515k       205.316M/s   14.7407k   5.85013M   9.21978M         14.5995     340.91/s 3.14311G/s     12.7775M                20.233                1.38587        115       39.2046k/s [BEST: throughput=  0.22 GB/s doc_throughput=   345 docs/s instructions=    12776982 cycles=     9252133 branch_miss=   60757 cache_miss=   14590 cache_ref=   5850903 items=       115 avg_time=   2933327 ns]
distinct_user_id<nlohmann_json>/manual_time             21846457 ns     21941982 ns           30         405.676k           30.7722M        165.666k       48.4969M     65.592M              103.865           48.7276       3.19614G          76.8374M                    121.671                     1.17144           5.60367k     412.95k   631.515k       27.5678M/s   224.425k   47.9176M   69.8372M         110.587     45.774/s 3.19673G/s     75.2373M               119.138                1.07733        115       5.26401k/s [BEST: throughput=  0.03 GB/s doc_throughput=    48 docs/s instructions=    76837364 cycles=    65592040 branch_miss=  405676 cache_miss=  165666 cache_ref=  48496909 items=       115 avg_time=  21846457 ns]
find_tweet<simdjson_dom>/manual_time                     1528599 ns      1617078 ns          458           13.53k           419.368M         23.542k        933.05k    4.82049M              7.63322           664.067       3.20113G           3.7886M                    5.99922                    0.785936            664.067    13.6619k   631.515k       393.995M/s   23.5443k   934.834k   4.88821M         7.74045    654.194/s 3.19784G/s      3.7886M               5.99923               0.775049          1        654.194/s [BEST: throughput=  0.42 GB/s doc_throughput=   664 docs/s instructions=     3788599 cycles=     4820490 branch_miss=   13530 cache_miss=   23542 cache_ref=    933050 items=         1 avg_time=   1528599 ns]
find_tweet<simdjson_ondemand>/manual_time                 905983 ns       994071 ns          772           4.618k           699.274M         11.574k       235.226k    2.89136M              4.57846           1.1073k        3.2016G          2.11629M                    3.35113                    0.731934            1.1073k    4.81356k   631.515k       664.758M/s   11.5782k   235.868k   2.89765M         4.58841   1.10377k/s 3.19835G/s     2.11629M               3.35113               0.730348          1       1.10377k/s [BEST: throughput=  0.70 GB/s doc_throughput=  1107 docs/s instructions=     2116288 cycles=     2891364 branch_miss=    4618 cache_miss=   11574 cache_ref=    235226 items=         1 avg_time=    905983 ns]
find_tweet<yyjson>/manual_time                           1132523 ns      1225192 ns          622          46.521k           632.661M         21.798k       1.38196M    3.19634M              5.06138           1001.82       3.20214G          3.17693M                    5.03064                    0.993927            1001.82    46.1852k   631.515k       531.786M/s   21.7876k   1.38207M   3.39681M         5.37883    882.984/s 2.99933G/s     3.17713M               5.03096               0.935326          1        882.984/s [BEST: throughput=  0.63 GB/s doc_throughput=  1001 docs/s instructions=     3176926 cycles=     3196336 branch_miss=   46521 cache_miss=   21798 cache_ref=   1381960 items=         1 avg_time=   1132523 ns]
find_tweet<yyjson_insitu>/manual_time                    1052684 ns      1146450 ns          667          46.237k            661.68M         11.882k       1.22286M    3.05601M              4.83917           1047.77       3.20198G          3.07821M                    4.87433                     1.00727            1047.77     46.166k   631.515k       572.118M/s   11.8991k   1.22306M   3.25556M         5.15516    949.953/s 3.09263G/s     3.07836M               4.87457               0.945571          1        949.953/s [BEST: throughput=  0.66 GB/s doc_throughput=  1047 docs/s instructions=     3078214 cycles=     3056007 branch_miss=   46237 cache_miss=   11882 cache_ref=   1222860 items=         1 avg_time=   1052683 ns]
find_tweet<sajson>/manual_time                           1409736 ns      1503203 ns          496          57.848k           449.177M         10.218k       1.83583M    4.50085M              7.12706           711.268       3.20131G           5.4077M                    8.56306                     1.20148            711.268    58.2419k   631.515k       427.214M/s   10.2246k   1.83612M   4.50789M         7.13821    709.353/s 3.19768G/s      5.4077M               8.56306                1.19961          1        709.353/s [BEST: throughput=  0.45 GB/s doc_throughput=   711 docs/s instructions=     5407701 cycles=     4500848 branch_miss=   57848 cache_miss=   10218 cache_ref=   1835830 items=         1 avg_time=   1409736 ns]
find_tweet<rapidjson>/manual_time                        4573382 ns      4670514 ns          153          83.624k           140.306M         11.601k       13.3712M    14.4055M               22.811           222.174       3.20053G          20.5763M                    32.5824                     1.42836            222.174    83.6608k   631.515k       131.688M/s    11.821k   13.3708M   14.4411M         22.8673    218.657/s 3.15763G/s     20.5768M               32.5832                1.42488          1        218.657/s [BEST: throughput=  0.14 GB/s doc_throughput=   222 docs/s instructions=    20576278 cycles=    14405504 branch_miss=   83624 cache_miss=   11601 cache_ref=  13371168 items=         1 avg_time=   4573382 ns]
find_tweet<rapidjson_insitu>/manual_time                 2897361 ns      2996990 ns          242          60.663k           220.822M         11.269k       5.83433M    9.15344M              14.4944           349.671       3.20069G          12.7184M                    20.1395                     1.38947            349.671    60.6836k   631.515k       207.865M/s   11.3985k   5.83275M   9.10616M         14.4196    345.142/s 3.14292G/s     12.7189M               20.1403                1.39673          1        345.142/s [BEST: throughput=  0.22 GB/s doc_throughput=   349 docs/s instructions=    12718402 cycles=     9153442 branch_miss=   60663 cache_miss=   11269 cache_ref=   5834334 items=         1 avg_time=   2897361 ns]
find_tweet<nlohmann_json>/manual_time                   18682913 ns     18786675 ns           38         320.588k           35.9529M         90.877k       42.7503M     56.135M              88.8894           56.9312       3.19583G          66.7074M                    105.631                     1.18834            56.9312     320.75k   631.515k       32.2359M/s   144.077k   42.1525M   59.7228M         94.5707    53.5248/s 3.19666G/s     65.0752M               103.046                1.08962          1        53.5248/s [BEST: throughput=  0.04 GB/s doc_throughput=    56 docs/s instructions=    66707427 cycles=    56134997 branch_miss=  320588 cache_miss=   90877 cache_ref=  42750318 items=         1 avg_time=  18682912 ns]
top_tweet<simdjson_dom>/manual_time                      1558086 ns      1661733 ns          449          13.897k           410.619M          25.67k       939.806k      4.923M              7.79554           650.212       3.20099G          3.82788M                    6.06142                    0.777549            650.212    13.9409k   631.515k       386.538M/s   25.6687k   941.555k   4.98213M         7.88917    641.813/s 3.19759G/s     3.82788M               6.06142               0.768322          1        641.813/s [BEST: throughput=  0.41 GB/s doc_throughput=   650 docs/s instructions=     3827875 cycles=     4922999 branch_miss=   13897 cache_miss=   25670 cache_ref=    939806 items=         1 avg_time=   1558085 ns]
top_tweet<simdjson_ondemand>/manual_time                 1047324 ns      1154990 ns          668           9.542k           608.234M         22.637k       428.751k    3.32428M              5.26398           963.134       3.20173G          2.67404M                    4.23433                    0.804397            963.134    10.6822k   631.515k       575.046M/s    22.609k   430.966k    3.3486M         5.30248    954.815/s 3.19729G/s     2.67404M               4.23433               0.798556          1        954.815/s [BEST: throughput=  0.61 GB/s doc_throughput=   963 docs/s instructions=     2674043 cycles=     3324284 branch_miss=    9542 cache_miss=   22637 cache_ref=    428751 items=         1 avg_time=   1047323 ns]
top_tweet<simdjson_ondemand_forward_only>/manual_time    1048732 ns      1156488 ns          666           8.525k           604.829M         22.797k       435.043k    3.34302M              5.29366           957.743       3.20176G           2.6954M                    4.26815                    0.806275            957.743    8.83199k   631.515k       574.274M/s   22.7965k   435.982k   3.35419M         5.31133    953.533/s 3.19833G/s      2.6954M               4.26815               0.803593          1        953.533/s [BEST: throughput=  0.60 GB/s doc_throughput=   957 docs/s instructions=     2695398 cycles=     3343024 branch_miss=    8525 cache_miss=   22797 cache_ref=    435043 items=         1 avg_time=   1048731 ns]
top_tweet<yyjson>/manual_time                            1164630 ns      1276820 ns          607           46.79k           604.263M         23.326k        1.3881M    3.29458M              5.21694           956.847       3.15241G          3.20176M                    5.06997                    0.971827            956.847    46.3905k   631.515k       517.126M/s   23.2937k   1.38861M   3.50034M         5.54277    858.642/s 3.00554G/s     3.20197M                5.0703                0.91476          1        858.642/s [BEST: throughput=  0.60 GB/s doc_throughput=   956 docs/s instructions=     3201759 cycles=     3294577 branch_miss=   46790 cache_miss=   23326 cache_ref=   1388099 items=         1 avg_time=   1164629 ns]
top_tweet<yyjson_insitu>/manual_time                     1082180 ns      1197081 ns          645          46.069k           644.849M         13.442k       1.22919M    3.13547M                4.965           1021.11       3.20168G          3.10306M                    4.91367                    0.989662            1021.11    46.2858k   631.515k       556.524M/s   13.4352k   1.22942M    3.3493M          5.3036     924.06/s 3.09496G/s     3.10321M               4.91391               0.926524          1         924.06/s [BEST: throughput=  0.64 GB/s doc_throughput=  1021 docs/s instructions=     3103059 cycles=     3135472 branch_miss=   46069 cache_miss=   13442 cache_ref=   1229191 items=         1 avg_time=   1082180 ns]
top_tweet<sajson>/manual_time                            1430368 ns      1545626 ns          489          57.847k           442.904M         11.818k       1.84396M    4.56486M              7.22843           701.336        3.2015G          5.43458M                    8.60563                     1.19053            701.336    58.3506k   631.515k       421.052M/s   11.8236k   1.84412M   4.57405M         7.24297    699.121/s 3.19781G/s     5.43458M               8.60563                1.18813          1        699.121/s [BEST: throughput=  0.44 GB/s doc_throughput=   701 docs/s instructions=     5434583 cycles=     4564861 branch_miss=   57847 cache_miss=   11818 cache_ref=   1843958 items=         1 avg_time=   1430368 ns]
top_tweet<rapidjson>/manual_time                         4599213 ns      4719977 ns          152          84.421k            139.56M         13.637k       13.3976M    14.4822M              22.9325           220.992       3.20044G          20.6219M                    32.6546                     1.42395            220.992    84.2323k   631.515k       130.948M/s   13.8283k   13.3902M   14.5216M         22.9949    217.429/s 3.15742G/s     20.6224M               32.6555                1.42012          1        217.429/s [BEST: throughput=  0.14 GB/s doc_throughput=   220 docs/s instructions=    20621889 cycles=    14482199 branch_miss=   84421 cache_miss=   13637 cache_ref=  13397599 items=         1 avg_time=   4599212 ns]
top_tweet<rapidjson_insitu>/manual_time                  2914421 ns      3036526 ns          240          60.912k           218.867M         13.594k       5.84228M    9.06521M              14.3547           346.574       3.14176G          12.7642M                    20.2121                     1.40804            346.574    60.8525k   631.515k       206.648M/s   13.5984k   5.84504M   9.15793M         14.5015    343.121/s 3.14228G/s     12.7641M               20.2119                1.39378          1        343.121/s [BEST: throughput=  0.22 GB/s doc_throughput=   346 docs/s instructions=    12764219 cycles=     9065209 branch_miss=   60912 cache_miss=   13594 cache_ref=   5842280 items=         1 avg_time=   2914420 ns]
top_tweet<nlohmann_json>/manual_time                    24322778 ns     24450399 ns           29         469.627k           26.1596M        354.024k       54.6364M    77.1811M              122.216           41.4235       3.19711G          88.8112M                    140.632                     1.15069            41.4235    489.659k   631.515k       24.7611M/s   354.181k   54.6179M   77.7497M         123.116    41.1137/s 3.19658G/s     88.7659M                140.56                1.14169          1        41.1137/s [BEST: throughput=  0.03 GB/s doc_throughput=    41 docs/s instructions=    88811205 cycles=    77181086 branch_miss=  469627 cache_miss=  354024 cache_ref=  54636395 items=         1 avg_time=  24322777 ns]
