run_benchmark: v0.8.0 /home/jkeiser/simdjson_benchmark_results/v0.8.0/skylake-x-gcc10.2-westmere.json -DCMAKE_BUILD_TYPE=Release -DSIMDJSON_EXCLUDE_IMPLEMENTATION=haswell
git reset --hard v0.8.0
HEAD is now at c96ff018 Version 0.8.
cmake -DCMAKE_BUILD_TYPE=Release -DSIMDJSON_EXCLUDE_IMPLEMENTATION=haswell -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The CXX compiler identification is GNU 10.2.0
-- The C compiler identification is GNU 10.2.0
-- Check for working CXX compiler: /usr/bin/g++-10
-- Check for working CXX compiler: /usr/bin/g++-10 -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Check for working C compiler: /usr/bin/gcc-10
-- Check for working C compiler: /usr/bin/gcc-10 -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Excluding implementation haswell due to SIMDJSON_EXCLUDE_IMPLEMENTATION=haswell
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed
-- Check if compiler accepts -pthread
-- Check if compiler accepts -pthread - yes
-- Found Threads: TRUE  
-- Looking for fork
-- Looking for fork - found
-- Looking for wait
-- Looking for wait - found
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- Found Git: /usr/bin/git (found version "2.27.0") 
-- git Version: v0.2.1-c96ff018
-- Version: 0.2.1
-- Performing Test HAVE_CXX_FLAG_STD_CXX11
-- Performing Test HAVE_CXX_FLAG_STD_CXX11 - Success
-- Performing Test HAVE_CXX_FLAG_WALL
-- Performing Test HAVE_CXX_FLAG_WALL - Success
-- Performing Test HAVE_CXX_FLAG_WEXTRA
-- Performing Test HAVE_CXX_FLAG_WEXTRA - Success
-- Performing Test HAVE_CXX_FLAG_WSHADOW
-- Performing Test HAVE_CXX_FLAG_WSHADOW - Success
-- Performing Test HAVE_CXX_FLAG_WERROR
-- Performing Test HAVE_CXX_FLAG_WERROR - Success
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32 - Failed
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED - Success
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WD654
-- Performing Test HAVE_CXX_FLAG_WD654 - Failed
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY - Failed
-- Performing Test HAVE_CXX_FLAG_COVERAGE
-- Performing Test HAVE_CXX_FLAG_COVERAGE - Success
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Performing Test USE_BOOST_JSON
-- Performing Test USE_BOOST_JSON - Failed
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Found Python3: /usr/bin/python3.8 (found version "3.8.6") found components: Interpreter 
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 10
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
Scanning dependencies of target benchmark
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_api_internal.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_name.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_name.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_register.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_register.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_runner.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_runner.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/colorprint.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/colorprint.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/commandlineflags.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/commandlineflags.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/complexity.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/complexity.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/console_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/console_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/counter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/counter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/csv_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/csv_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/json_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/json_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/sleep.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sleep.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/statistics.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/statistics.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/string_util.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/string_util.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/sysinfo.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sysinfo.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/timers.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/timers.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -P CMakeFiles/benchmark.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/benchmark.dir/link.txt --verbose=1
/usr/bin/ar qc libbenchmark.a  CMakeFiles/benchmark.dir/benchmark.cc.o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o CMakeFiles/benchmark.dir/benchmark_name.cc.o CMakeFiles/benchmark.dir/benchmark_register.cc.o CMakeFiles/benchmark.dir/benchmark_runner.cc.o CMakeFiles/benchmark.dir/colorprint.cc.o CMakeFiles/benchmark.dir/commandlineflags.cc.o CMakeFiles/benchmark.dir/complexity.cc.o CMakeFiles/benchmark.dir/console_reporter.cc.o CMakeFiles/benchmark.dir/counter.cc.o CMakeFiles/benchmark.dir/csv_reporter.cc.o CMakeFiles/benchmark.dir/json_reporter.cc.o CMakeFiles/benchmark.dir/reporter.cc.o CMakeFiles/benchmark.dir/sleep.cc.o CMakeFiles/benchmark.dir/statistics.cc.o CMakeFiles/benchmark.dir/string_util.cc.o CMakeFiles/benchmark.dir/sysinfo.cc.o CMakeFiles/benchmark.dir/timers.cc.o
/usr/bin/ranlib libbenchmark.a
[ 80%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
Scanning dependencies of target generated-data
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated && /usr/bin/ruby genfeaturejson.rb /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-miss.json ...
[ 80%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/g++-10  -DSIMDJSON_IMPLEMENTATION_HASWELL=0 -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/include  -O3 -DNDEBUG -fPIC   -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -pthread -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/g++-10 -fPIC -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.7 -o ../libsimdjson.so.7.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.7.0.0 ../libsimdjson.so.7 ../libsimdjson.so
[ 80%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
Scanning dependencies of target yyjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/gcc-10  -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src  -O3 -DNDEBUG   -o CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o   -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src/yyjson.c
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -P CMakeFiles/yyjson.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -E cmake_link_script CMakeFiles/yyjson.dir/link.txt --verbose=1
/usr/bin/ar qc libyyjson.a  CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o
/usr/bin/ranlib libyyjson.a
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/g++-10  -DRAPIDJSON_HAS_STDSTRING -DSAJSON_UNSORTED_OBJECT_KEYS -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_COMPETITION_NLOHMANN_JSON -DSIMDJSON_COMPETITION_RAPIDJSON -DSIMDJSON_COMPETITION_SAJSON -DSIMDJSON_COMPETITION_YYJSON -DSIMDJSON_IMPLEMENTATION_HASWELL=0 -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/rapidjson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/sajson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/json  -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/g++-10  -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.7.0.0 ../_deps/google_benchmarks/src/libbenchmark.a ../dependencies/libyyjson.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.8.0/skylake-x-gcc10.2-westmere.json --benchmark_out_format=json
2021-01-24 21:48:13
Running benchmark/bench_ondemand
Run on (4 X 3200 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 1024 KiB (x4)
  L3 Unified 8448 KiB (x1)
Load Average: 1.00, 0.82, 0.78
***WARNING*** CPU scaling is enabled, the benchmark real time measurements may be noisy and will incur extra overhead.
simdjson::dom implementation:      westmere
simdjson::ondemand implementation: fallback

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                  412136 ns       479618 ns         1697           3.373k           1.53979G               1        33.444k    1.30984M              2.07412          2.43825k       3.19372G          4.41983M                    6.99877                     3.37433           243.825k    3.50306k   631.515k       1.42706G/s    1.62463   33.3801k   1.31501M         2.08231   2.42638k/s 3.19072G/s     4.41983M               6.99877                3.36106        100       242.638k/s [BEST: throughput=  1.54 GB/s doc_throughput=  2438 docs/s instructions=     4419829 cycles=     1309840 branch_miss=    3373 cache_miss=       1 cache_ref=     33444 items=       100 avg_time=    412136 ns]
partial_tweets<simdjson_ondemand>/manual_time             295887 ns       348758 ns         2365           1.984k           2.14635G               0         8.662k    939.664k              1.48795          3.39872k       3.19366G          3.51376M                    5.56402                     3.73938           339.872k    2.07062k   631.515k       1.98773G/s  0.0756871   8.78137k   944.079k         1.49494   3.37966k/s 3.19067G/s     3.51376M               5.56402                3.72189        100       337.966k/s [BEST: throughput=  2.15 GB/s doc_throughput=  3398 docs/s instructions=     3513762 cycles=      939664 branch_miss=    1984 cache_miss=       0 cache_ref=      8662 items=       100 avg_time=    295887 ns]
partial_tweets<yyjson>/manual_time                        826664 ns       902766 ns          848          10.009k            1.3454G             224         27.94k    1.49948M              2.37442          2.13043k       3.19454G          2.90846M                    4.60553                     1.93965           213.043k    7.72102k   631.515k       728.542M/s    607.221   23.4988k   1.68019M         2.66057   1.20968k/s  2.0325G/s     2.90895M                4.6063                1.73132        100       120.968k/s [BEST: throughput=  1.35 GB/s doc_throughput=  2130 docs/s instructions=     2908461 cycles=     1499480 branch_miss=   10009 cache_miss=     224 cache_ref=     27940 items=       100 avg_time=    826663 ns]
partial_tweets<yyjson_insitu>/manual_time                 554352 ns       613044 ns         1276           6.891k           1.64006G          1.643k        13.825k    1.22127M              1.93387          2.59703k       3.17166G          2.90835M                    4.60536                     2.38143           259.703k     7.5124k   631.515k       1086.42M/s    63.4232   8.92281k   1.37311M         2.17431   1.80391k/s 2.47696G/s     2.90861M               4.60577                2.11827        100       180.391k/s [BEST: throughput=  1.64 GB/s doc_throughput=  2597 docs/s instructions=     2908353 cycles=     1221265 branch_miss=    6891 cache_miss=    1643 cache_ref=     13825 items=       100 avg_time=    554352 ns]
partial_tweets<sajson>/manual_time                        679435 ns       740950 ns         1027          10.007k           938.011M               0         13.38k    2.14975M              3.40412          1.48533k        3.1931G          6.05185M                    9.58306                     2.81514           148.533k    10.5048k   631.515k       886.413M/s    2.08958   13.4252k   2.16758M         3.43234   1.47181k/s 3.19026G/s     6.05185M               9.58306                2.79199        100       147.181k/s [BEST: throughput=  0.94 GB/s doc_throughput=  1485 docs/s instructions=     6051847 cycles=     2149753 branch_miss=   10007 cache_miss=       0 cache_ref=     13380 items=       100 avg_time=    679434 ns]
partial_tweets<rapidjson>/manual_time                    1899258 ns      1960414 ns          369          26.788k           385.641M             766            23k    5.21072M              8.25113           610.661       3.18198G          13.4089M                    21.2329                     2.57333           61.0661k    27.0383k   631.515k       317.103M/s    322.358   11.3037k   5.38777M         8.53149    526.521/s 2.83677G/s     13.4097M               21.2342                2.48892        100       52.6521k/s [BEST: throughput=  0.39 GB/s doc_throughput=   610 docs/s instructions=    13408886 cycles=     5210715 branch_miss=   26788 cache_miss=     766 cache_ref=     23000 items=       100 avg_time=   1899257 ns]
partial_tweets<rapidjson_insitu>/manual_time             1323323 ns      1382320 ns          531          24.233k           537.567M          4.809k         14.47k    3.75111M              5.93986           851.233       3.19307G          9.75504M                     15.447                     2.60057           85.1233k    24.5176k   631.515k       455.112M/s    164.301   9.44644k   3.82583M         6.05817    755.674/s 2.89108G/s     9.75543M               15.4477                2.54989        100       75.5674k/s [BEST: throughput=  0.54 GB/s doc_throughput=   851 docs/s instructions=     9755042 cycles=     3751113 branch_miss=   24233 cache_miss=    4809 cache_ref=     14470 items=       100 avg_time=   1323322 ns]
partial_tweets<nlohmann_json>/manual_time                8795851 ns      8881542 ns           80         136.744k             75.23M               9        98.746k    26.7752M              42.3984           119.126       3.18963G          71.1895M                    112.728                     2.65878           11.9126k    149.639k   631.515k       68.4709M/s      26.25   139.643k    28.052M         44.4202     113.69/s 3.18923G/s     71.9097M               113.869                2.56344        100        11.369k/s [BEST: throughput=  0.08 GB/s doc_throughput=   119 docs/s instructions=    71189548 cycles=    26775242 branch_miss=  136744 cache_miss=       9 cache_ref=     98746 items=       100 avg_time=   8795851 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                 112832624 ns    118764080 ns            6         960.535k           409.752M        6.77727M       6.89526M    357.971M              7.78218           8.90789       3.18876G          1.11536G                    24.2476                     3.11579           8.90789M    960.984k   45.9988M       388.787M/s   6.81259M   6.89543M   359.768M         7.82125    8.86268/s 3.18851G/s     1.11536G               24.2476                3.10022      1000k       8.86268M/s [BEST: throughput=  0.41 GB/s doc_throughput=     8 docs/s instructions=  1115360617 cycles=   357970555 branch_miss=  960535 cache_miss= 6777273 cache_ref=   6895261 items=   1000000 avg_time= 112832624 ns]
large_random<simdjson_ondemand>/manual_time             72828918 ns     78732627 ns           10         875.819k           632.892M        3.55709M       3.57274M    231.672M              5.03648           13.7589       3.18755G          719.738M                    15.6469                     3.10671           13.7589M    875.584k   45.9988M       602.341M/s   3.51005M   3.57272M   232.203M         5.04802    13.7308/s 3.18833G/s     719.738M               15.6469                3.09961      1000k       13.7308M/s [BEST: throughput=  0.63 GB/s doc_throughput=    13 docs/s instructions=   719737991 cycles=   231671965 branch_miss=  875819 cache_miss= 3557093 cache_ref=   3572735 items=   1000000 avg_time=  72828918 ns]
large_random<simdjson_ondemand_unordered>/manual_time   76546448 ns     82461137 ns            9         867.709k           601.221M        3.50956M       3.57283M    243.992M              5.30432           13.0704       3.18907G          723.738M                    15.7339                     2.96623           13.0704M     867.78k   45.9988M       573.088M/s   3.51123M   3.57286M   244.078M         5.30619     13.064/s 3.18863G/s     723.738M               15.7339                2.96519      1000k        13.064M/s [BEST: throughput=  0.60 GB/s doc_throughput=    13 docs/s instructions=   723737996 cycles=   243992255 branch_miss=  867709 cache_miss= 3509559 cache_ref=   3572829 items=   1000000 avg_time=  76546447 ns]
large_random<yyjson>/manual_time                       156513164 ns    162482071 ns            4         664.819k           293.978M        4.20001M       4.32985M    359.633M              7.81832             6.391       2.29842G           944.15M                    20.5255                     2.62531             6.391M    664.337k   45.9988M       280.282M/s   4.19983M   4.32735M   359.758M         7.82103    6.38924/s 2.29858G/s      944.15M               20.5255                 2.6244      1000k       6.38924M/s [BEST: throughput=  0.29 GB/s doc_throughput=     6 docs/s instructions=   944149626 cycles=   359633253 branch_miss=  664819 cache_miss= 4200011 cache_ref=   4329852 items=   1000000 avg_time= 156513163 ns]
large_random<yyjson_insitu>/manual_time                130519696 ns    136527063 ns            5         660.594k           352.702M        3.48287M       3.61045M    316.748M                6.886           7.66765       2.42871G          938.029M                    20.3925                     2.96144           7.66765M    663.027k   45.9988M       336.101M/s   3.48333M   3.61365M   317.081M         6.89326    7.66168/s 2.42938G/s     938.029M               20.3925                2.95832      1000k       7.66168M/s [BEST: throughput=  0.35 GB/s doc_throughput=     7 docs/s instructions=   938028862 cycles=   316747773 branch_miss=  660594 cache_miss= 3482870 cache_ref=   3610451 items=   1000000 avg_time= 130519696 ns]
large_random<sajson>/manual_time                       112113578 ns    118093380 ns            6         602.539k           411.044M        5.43441M       5.57693M     356.91M              7.75911           8.93597       3.18934G          1099.99M                    23.9134                     3.08198           8.93597M    602.973k   45.9988M        391.28M/s   5.47548M   5.57702M   357.514M         7.77226    8.91953/s 3.18886G/s     1099.99M               23.9134                3.07676      1000k       8.91953M/s [BEST: throughput=  0.41 GB/s doc_throughput=     8 docs/s instructions=  1099987400 cycles=   356909786 branch_miss=  602539 cache_miss= 5434415 cache_ref=   5576931 items=   1000000 avg_time= 112113577 ns]
large_random<rapidjson>/manual_time                    208795922 ns    214716684 ns            4         600.188k           230.784M        4.35664M       4.89286M    568.191M              12.3523           5.01718       2.85071G          1.65913G                    36.0689                     2.92001           5.01718M    598.039k   45.9988M       210.099M/s   4.06402M   4.66371M   573.991M         12.4784    4.78937/s 2.74905G/s     1.65914G               36.0691                2.89052      1000k       4.78937M/s [BEST: throughput=  0.23 GB/s doc_throughput=     5 docs/s instructions=  1659125136 cycles=   568190807 branch_miss=  600188 cache_miss= 4356639 cache_ref=   4892857 items=   1000000 avg_time= 208795922 ns]
large_random<rapidjson_lossless>/manual_time           250218534 ns    256210212 ns            3         705.609k           190.318M        4.36045M       4.89736M    703.182M               15.287           4.13745       2.90938G          2.02209G                    43.9597                     2.87563           4.13745M    692.667k   45.9988M       175.318M/s     4.097M   4.69184M   708.544M         15.4035    3.99651/s  2.8317G/s      2.0221G               43.9599                2.85388      1000k       3.99651M/s [BEST: throughput=  0.19 GB/s doc_throughput=     4 docs/s instructions=  2022092053 cycles=   703182126 branch_miss=  705609 cache_miss= 4360450 cache_ref=   4897360 items=   1000000 avg_time= 250218534 ns]
large_random<rapidjson_insitu>/manual_time             186366136 ns    192327651 ns            4         589.643k           260.082M         5.0524M       5.61115M    496.437M              10.7924           5.65411       2.80691G          1.49112G                    32.4166                     3.00365           5.65411M     587.83k   45.9988M       235.385M/s   4.77177M   5.37977M   502.407M         10.9222    5.36578/s 2.69581G/s     1.49113G               32.4168                2.96798      1000k       5.36578M/s [BEST: throughput=  0.26 GB/s doc_throughput=     5 docs/s instructions=  1491122606 cycles=   496437395 branch_miss=  589643 cache_miss= 5052398 cache_ref=   5611146 items=   1000000 avg_time= 186366136 ns]
large_random<nlohmann_json>/manual_time               1439165142 ns   1445053957 ns            1         4.51343M           31.9621M         30.398M       30.8838M    4.57531G              99.4659          0.694847       3.17914G          11.9494G                    259.776                      2.6117           694.847k    4.51343M   45.9988M       30.4815M/s    30.398M   30.8838M   4.57531G         99.4659   0.694847/s 3.17914G/s     11.9494G               259.776                 2.6117      1000k       694.847k/s [BEST: throughput=  0.03 GB/s doc_throughput=     0 docs/s instructions= 11949358881 cycles=  4575310640 branch_miss= 4513429 cache_miss=30398005 cache_ref=  30883836 items=   1000000 avg_time=1439165142 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                       115162547 ns    133723924 ns            6         442.304k            1.1934G        10.2093M       10.3166M    366.842M              2.67173           8.69157       3.18843G          1.20656G                    8.78745                     3.28905           4.55689M    441.704k   137.305M       1.11039G/s   10.2468M   10.3163M   367.171M         2.67413    8.68338/s 3.18829G/s     1.20656G               8.78745                3.28609   524.288k       4.55259M/s [BEST: throughput=  1.19 GB/s doc_throughput=     8 docs/s instructions=  1206560130 cycles=   366841899 branch_miss=  442304 cache_miss=10209282 cache_ref=  10316598 items=    524288 avg_time= 115162546 ns]
kostya<simdjson_ondemand>/manual_time                   78641961 ns     97225522 ns            9         452.219k           1.74801G        6.44461M       6.47075M    250.484M              1.82429           12.7308       3.18886G          870.688M                    6.34127                     3.47602           6.67462M    452.068k   137.305M       1.62604G/s   6.44094M   6.47077M   250.743M         1.82618    12.7159/s 3.18841G/s     870.688M               6.34127                3.47243   524.288k       6.66677M/s [BEST: throughput=  1.75 GB/s doc_throughput=    12 docs/s instructions=   870687556 cycles=   250483756 branch_miss=  452219 cache_miss= 6444612 cache_ref=   6470746 items=    524288 avg_time=  78641961 ns]
kostya<yyjson>/manual_time                             257748708 ns    276378873 ns            3          413.05k           532.896M         8.4868M       8.67943M    590.439M               4.3002           3.88111       2.29156G          984.045M                    7.16685                     1.66663           2.03482M    413.326k   137.305M       508.031M/s   8.48646M   8.67824M   590.806M         4.30287    3.87975/s 2.29218G/s     984.045M               7.16686                 1.6656   524.288k       2.03411M/s [BEST: throughput=  0.53 GB/s doc_throughput=     3 docs/s instructions=   984044956 cycles=   590439487 branch_miss=  413050 cache_miss= 8486800 cache_ref=   8679427 items=    524288 avg_time= 257748707 ns]
kostya<yyjson_insitu>/manual_time                      179720308 ns    198292327 ns            4          411.11k           764.113M        6.34762M       6.53274M    461.635M              3.36211           5.56508       2.56903G          965.775M                     7.0338                     2.09208            2.9177M    411.426k   137.305M         728.6M/s   6.34679M   6.55737M   461.701M         3.36259     5.5642/s   2.569G/s     965.776M                7.0338                2.09178   524.288k       2.91724M/s [BEST: throughput=  0.76 GB/s doc_throughput=     5 docs/s instructions=   965775491 cycles=   461634935 branch_miss=  411110 cache_miss= 6347625 cache_ref=   6532738 items=    524288 avg_time= 179720308 ns]
kostya<sajson>/manual_time                             176535252 ns    195067594 ns            4         380.558k           778.583M        8.47541M       8.54724M    562.207M              4.09459           5.67047       3.18798G          1.62034G                     11.801                     2.88211           2.97296M     380.41k   137.305M       741.746M/s   8.48914M   8.54718M   562.841M          4.0992    5.66459/s 3.18826G/s     1.62034G                11.801                2.87886   524.288k       2.96988M/s [BEST: throughput=  0.78 GB/s doc_throughput=     5 docs/s instructions=  1620343069 cycles=   562207117 branch_miss=  380558 cache_miss= 8475406 cache_ref=   8547243 items=    524288 avg_time= 176535252 ns]
kostya<rapidjson>/manual_time                          286964076 ns    305569510 ns            2         1.15021M            483.84M        5.23554M       5.75256M    808.514M              5.88845           3.52383       2.84907G           2.2966G                    16.7263                     2.84052            1.8475M    1.11217M   137.305M       456.309M/s   5.11525M   5.64699M   810.023M         5.89944    3.48476/s 2.82273G/s      2.2966G               16.7263                2.83523   524.288k       1.82702M/s [BEST: throughput=  0.48 GB/s doc_throughput=     3 docs/s instructions=  2296598248 cycles=   808513632 branch_miss= 1150214 cache_miss= 5235536 cache_ref=   5752565 items=    524288 avg_time= 286964076 ns]
kostya<rapidjson_lossless>/manual_time                 308610018 ns    327253548 ns            2          985.13k           450.208M        5.24258M       5.74516M     875.64M              6.37733           3.27889       2.87113G          2.50316G                    18.2306                     2.85866           1.71908M    982.433k   137.305M       424.303M/s   5.12383M   5.63668M   878.651M         6.39926    3.24034/s 2.84712G/s     2.50316G               18.2307                2.84887   524.288k       1.69887M/s [BEST: throughput=  0.45 GB/s doc_throughput=     3 docs/s instructions=  2503159189 cycles=   875639745 branch_miss=  985130 cache_miss= 5242578 cache_ref=   5745161 items=    524288 avg_time= 308610018 ns]
kostya<rapidjson_insitu>/manual_time                   263258001 ns    281855466 ns            3         1007.69k           530.404M        7.36934M       7.88461M    729.136M              5.31034           3.86297       2.81663G          2.03014G                    14.7857                     2.78432           2.02531M    1008.08k   137.305M       497.399M/s   7.20818M   7.74024M   731.962M         5.33092    3.79856/s  2.7804G/s     2.03015G               14.7857                2.77357   524.288k       1.99154M/s [BEST: throughput=  0.53 GB/s doc_throughput=     3 docs/s instructions=  2030143785 cycles=   729135531 branch_miss= 1007686 cache_miss= 7369344 cache_ref=   7884611 items=    524288 avg_time= 263258001 ns]
kostya<nlohmann_json>/manual_time                     1861165885 ns   1879692960 ns            1         3.92582M           73.7736M        44.8861M       45.4513M    5.93581G              43.2308          0.537298        3.1893G          15.1471G                    110.317                     2.55181           281.699k    3.92582M   137.305M        70.356M/s   44.8861M   45.4513M   5.93581G         43.2308   0.537298/s  3.1893G/s     15.1471G               110.317                2.55181   524.288k       281.699k/s [BEST: throughput=  0.07 GB/s doc_throughput=     0 docs/s instructions= 15147051603 cycles=  5935809689 branch_miss= 3925822 cache_miss=44886082 cache_ref=  45451319 items=    524288 avg_time=1861165885 ns]
distinct_user_id<simdjson_dom>/manual_time                406495 ns       482577 ns         1721           3.388k           1.56326G               0        33.807k    1.29022M              2.04305          2.47541k       3.19382G          4.36075M                    6.90523                     3.37986           284.672k    3.53824k   631.515k       1.44687G/s  0.0976177   33.9129k   1.29702M         2.05382   2.46005k/s 3.19074G/s     4.36075M               6.90523                3.36213        115       282.906k/s [BEST: throughput=  1.56 GB/s doc_throughput=  2475 docs/s instructions=     4360754 cycles=     1290219 branch_miss=    3388 cache_miss=       0 cache_ref=     33807 items=       115 avg_time=    406494 ns]
distinct_user_id<simdjson_ondemand>/manual_time           288022 ns       348913 ns         2430           1.697k           2.20418G               7         9.982k    915.214k              1.44924           3.4903k       3.19438G          3.20751M                    5.07907                     3.50465           401.385k    1.82118k   631.515k       2.04201G/s    7.05761   9.96148k   919.194k         1.45554   3.47196k/s 3.19141G/s     3.20751M               5.07907                3.48948        115       399.275k/s [BEST: throughput=  2.20 GB/s doc_throughput=  3490 docs/s instructions=     3207508 cycles=      915214 branch_miss=    1697 cache_miss=       7 cache_ref=      9982 items=       115 avg_time=    288021 ns]
distinct_user_id<yyjson>/manual_time                      722246 ns       808245 ns         1000           6.757k           1.45536G          7.108k        26.161k    1.38573M               2.1943          2.30456k        3.1935G           2.8751M                     4.5527                     2.07478           265.024k    7.65678k   631.515k        833.87M/s   2.23758k   24.5218k    1.6023M         2.53724   1.38457k/s  2.2185G/s     2.87529M               4.55301                1.79447        115       159.225k/s [BEST: throughput=  1.46 GB/s doc_throughput=  2304 docs/s instructions=     2875096 cycles=     1385735 branch_miss=    6757 cache_miss=    7108 cache_ref=     26161 items=       115 avg_time=    722246 ns]
distinct_user_id<yyjson_insitu>/manual_time               551615 ns       619941 ns         1281           7.039k           1.65526G            1095        13.306k     1.2133M              1.92125           2.6211k       3.18017G          2.87458M                    4.55188                     2.36923           301.427k    7.61849k   631.515k       1091.81M/s    66.4653   9.01339k   1.36423M         2.16025   1.81286k/s 2.47316G/s     2.87484M               4.55229                 2.1073        115       208.479k/s [BEST: throughput=  1.66 GB/s doc_throughput=  2621 docs/s instructions=     2874579 cycles=     1213297 branch_miss=    7039 cache_miss=    1095 cache_ref=     13306 items=       115 avg_time=    551615 ns]
distinct_user_id<sajson>/manual_time                     1033139 ns      1103085 ns         1039          10.198k           943.553M               6        13.349k    2.13719M              3.38422          1.49411k       3.19319G          5.98431M                    9.47612                     2.80009           171.823k    46.2966k   631.515k       582.942M/s    4.28393   13.3277k   3.29578M         5.21884    967.924/s 3.19006G/s     5.98431M               9.47612                1.81575        115       111.311k/s [BEST: throughput=  0.94 GB/s doc_throughput=  1494 docs/s instructions=     5984313 cycles=     2137188 branch_miss=   10198 cache_miss=       6 cache_ref=     13349 items=       115 avg_time=   1033138 ns]
distinct_user_id<rapidjson>/manual_time                  1904857 ns      1974304 ns          370          26.764k           384.318M             690        22.882k    5.24652M              8.30784           608.565       3.19285G          13.3501M                    21.1398                     2.54456           69.9849k    27.0522k   631.515k        316.17M/s    612.349    12.173k   5.42054M         8.58338    524.974/s 2.84564G/s     13.3509M               21.1411                2.46302        115        60.372k/s [BEST: throughput=  0.38 GB/s doc_throughput=   608 docs/s instructions=    13350104 cycles=     5246525 branch_miss=   26764 cache_miss=     690 cache_ref=     22882 items=       115 avg_time=   1904857 ns]
distinct_user_id<rapidjson_insitu>/manual_time           1298747 ns      1366569 ns          565          24.351k           541.461M             565        14.586k    3.72401M              5.89695           857.401       3.19297G          9.70605M                    15.3695                     2.60634           98.6011k    24.5486k   631.515k       463.724M/s   1.28667k   11.1361k   3.80908M         6.03165    769.973/s 2.93289G/s     9.70637M                 15.37                2.54822        115       88.5469k/s [BEST: throughput=  0.54 GB/s doc_throughput=   857 docs/s instructions=     9706047 cycles=     3724010 branch_miss=   24351 cache_miss=     565 cache_ref=     14586 items=       115 avg_time=   1298746 ns]
distinct_user_id<nlohmann_json>/manual_time              9507042 ns      9595713 ns           89         112.511k           82.1912M             970        99.071k    24.4965M              38.7901           130.149        3.1882G          66.6302M                    105.508                     2.71999           14.9672k    260.539k   631.515k       63.3488M/s    32.3034   105.656k   30.3176M         48.0077    105.185/s 3.18896G/s     65.3183M               103.431                2.15447        115       12.0963k/s [BEST: throughput=  0.08 GB/s doc_throughput=   130 docs/s instructions=    66630161 cycles=    24496503 branch_miss=  112511 cache_miss=     970 cache_ref=     99071 items=       115 avg_time=   9507042 ns]
find_tweet<simdjson_dom>/manual_time                      392048 ns       464864 ns         1785           3.186k           1.61918G               1        29.971k    1.24562M              1.97243          2.56396k       3.19372G          4.27971M                     6.7769                     3.43582           2.56396k    3.34091k   631.515k       1.50018G/s    1.04874   30.0337k   1.25094M         1.98085    2.5507k/s 3.19077G/s     4.27971M                6.7769                3.42121          1        2.5507k/s [BEST: throughput=  1.62 GB/s doc_throughput=  2563 docs/s instructions=     4279714 cycles=     1245617 branch_miss=    3186 cache_miss=       1 cache_ref=     29971 items=         1 avg_time=    392048 ns]
find_tweet<simdjson_ondemand>/manual_time                 206647 ns       269383 ns         3386              679            3.0673G               0         7.587k    657.663k              1.04141          4.85706k       3.19431G          2.56045M                    4.05446                     3.89326           4.85706k     712.161   631.515k       2.84613G/s   0.505611   7.66158k   659.528k         1.04436   4.83917k/s 3.19157G/s     2.56045M               4.05446                3.88225          1       4.83917k/s [BEST: throughput=  3.07 GB/s doc_throughput=  4857 docs/s instructions=     2560454 cycles=      657663 branch_miss=     679 cache_miss=       0 cache_ref=      7587 items=         1 avg_time=    206647 ns]
find_tweet<yyjson>/manual_time                            808241 ns       891050 ns         1008           9.528k           1.38641G             219         27.27k    1.45492M              2.30386          2.19537k       3.19408G          2.82414M                      4.472                     1.94109           2.19537k    7.63162k   631.515k       745.148M/s    325.936   19.5573k   1.62526M         2.57359   1.23725k/s 2.01086G/s     2.82483M                4.4731                1.73808          1       1.23725k/s [BEST: throughput=  1.39 GB/s doc_throughput=  2195 docs/s instructions=     2824135 cycles=     1454921 branch_miss=    9528 cache_miss=     219 cache_ref=     27270 items=         1 avg_time=    808241 ns]
find_tweet<yyjson_insitu>/manual_time                     538293 ns       599761 ns         1312             6.8k           1.69787G          1.402k        12.786k    1.18294M              1.87318          2.68857k       3.18041G          2.82382M                     4.4715                     2.38712           2.68857k    7.44358k   631.515k       1118.83M/s    7.11128   5.09776k    1.3226M         2.09433   1.85772k/s 2.45703G/s     2.82408M               4.47192                2.13524          1       1.85772k/s [BEST: throughput=  1.70 GB/s doc_throughput=  2688 docs/s instructions=     2823819 cycles=     1182939 branch_miss=    6800 cache_miss=    1402 cache_ref=     12786 items=         1 avg_time=    538293 ns]
find_tweet<sajson>/manual_time                            661386 ns       728252 ns         1054           9.705k           964.756M               0        12.802k     2.0903M              3.30997          1.52769k       3.19331G          5.89219M                    9.33025                     2.81883           1.52769k     10.282k   631.515k       910.602M/s    2.72391    12.572k   2.11013M         3.34138   1.51198k/s 3.19047G/s     5.89219M               9.33025                2.79234          1       1.51198k/s [BEST: throughput=  0.96 GB/s doc_throughput=  1527 docs/s instructions=     5892194 cycles=     2090296 branch_miss=    9705 cache_miss=       0 cache_ref=     12802 items=         1 avg_time=    661386 ns]
find_tweet<rapidjson>/manual_time                        1875436 ns      1940487 ns          376           26.28k           390.302M         11.903k        21.233k    5.16598M               8.1803            618.04       3.19278G          13.2816M                    21.0314                     2.57098             618.04    26.9624k   631.515k        321.13M/s    455.146   8.80801k   5.32584M         8.43344    533.209/s 2.83979G/s     13.2822M               21.0323                2.49392          1        533.209/s [BEST: throughput=  0.39 GB/s doc_throughput=   618 docs/s instructions=    13281614 cycles=     5165980 branch_miss=   26280 cache_miss=   11903 cache_ref=     21233 items=         1 avg_time=   1875436 ns]
find_tweet<rapidjson_insitu>/manual_time                 1286468 ns      1350034 ns          577          24.134k           546.138M               6        13.591k    3.69224M              5.84664           864.806       3.19307G          9.64748M                    15.2767                      2.6129            864.806    24.3806k   631.515k        468.15M/s   1.13706k   7.85362k    3.7692M          5.9685    777.322/s 2.92988G/s     9.64801M               15.2776                 2.5597          1        777.322/s [BEST: throughput=  0.55 GB/s doc_throughput=   864 docs/s instructions=     9647480 cycles=     3692244 branch_miss=   24134 cache_miss=       6 cache_ref=     13591 items=         1 avg_time=   1286468 ns]
find_tweet<nlohmann_json>/manual_time                    7213371 ns      7299637 ns          105          88.883k           97.7771M               7        75.998k    20.6025M               32.624           154.829       3.18988G          57.0735M                    90.3755                     2.77022            154.829    131.932k   631.515k       83.4921M/s    22.5143   81.5133k   23.0049M         36.4282    138.631/s 3.18921G/s     55.6846M               88.1762                2.42055          1        138.631/s [BEST: throughput=  0.10 GB/s doc_throughput=   154 docs/s instructions=    57073474 cycles=    20602525 branch_miss=   88883 cache_miss=       7 cache_ref=     75998 items=         1 avg_time=   7213370 ns]
top_tweet<simdjson_dom>/manual_time                       398989 ns       476498 ns         1754            3.32k           1.59109G               0        31.998k    1.26766M              2.00734          2.51948k       3.19385G          4.31378M                    6.83085                     3.40294           2.51948k    3.43943k   631.515k       1.47409G/s    0.13455   32.2444k   1.27302M         2.01582   2.50634k/s 3.19062G/s     4.31378M               6.83085                3.38862          1       2.50634k/s [BEST: throughput=  1.59 GB/s doc_throughput=  2519 docs/s instructions=     4313782 cycles=     1267663 branch_miss=    3320 cache_miss=       0 cache_ref=     31998 items=         1 avg_time=    398988 ns]
top_tweet<simdjson_ondemand>/manual_time                  267639 ns       331319 ns         2615           1.611k           2.37267G               2        10.275k    850.306k              1.34645          3.75711k       3.19469G          3.18193M                    5.03856                      3.7421           3.75711k    1.70743k   631.515k       2.19752G/s    1.57553   10.2755k   854.266k         1.35273   3.73637k/s 3.19186G/s     3.18193M               5.03856                3.72475          1       3.73637k/s [BEST: throughput=  2.37 GB/s doc_throughput=  3757 docs/s instructions=     3181928 cycles=      850306 branch_miss=    1611 cache_miss=       2 cache_ref=     10275 items=         1 avg_time=    267639 ns]
top_tweet<simdjson_ondemand_forward_only>/manual_time     293162 ns       357990 ns         2387           1.623k           2.16349G               0        10.823k    932.347k              1.47637          3.42588k       3.19411G          3.40283M                    5.38835                     3.64974           3.42588k    1.71097k   631.515k       2.00621G/s  0.0557185   10.8865k    935.68k         1.48164   3.41108k/s 3.19168G/s     3.40283M               5.38836                3.63674          1       3.41108k/s [BEST: throughput=  2.16 GB/s doc_throughput=  3425 docs/s instructions=     3402827 cycles=      932347 branch_miss=    1623 cache_miss=       0 cache_ref=     10823 items=         1 avg_time=    293162 ns]
top_tweet<yyjson>/manual_time                             817709 ns       904706 ns         1022           9.987k           1.36448G             206         27.34k    1.47803M              2.34045          2.16064k       3.19349G          2.84503M                    4.50508                     1.92488           2.16064k    7.74106k   631.515k       736.521M/s    393.237   22.3657k   1.65514M          2.6209   1.22293k/s 2.02412G/s      2.8455M               4.50584                1.71919          1       1.22293k/s [BEST: throughput=  1.36 GB/s doc_throughput=  2160 docs/s instructions=     2845027 cycles=     1478028 branch_miss=    9987 cache_miss=     206 cache_ref=     27340 items=         1 avg_time=    817708 ns]
top_tweet<yyjson_insitu>/manual_time                      546539 ns       614725 ns         1294           6.992k           1.66856G          1.423k        13.328k    1.20093M              1.90166          2.64215k       3.17302G          2.84491M                     4.5049                     2.36893           2.64215k    7.53161k   631.515k       1101.95M/s    47.7048   7.83465k   1.34848M         2.13531    1.8297k/s 2.46731G/s     2.84517M               4.50531                2.10991          1        1.8297k/s [BEST: throughput=  1.67 GB/s doc_throughput=  2642 docs/s instructions=     2844909 cycles=     1200925 branch_miss=    6992 cache_miss=    1423 cache_ref=     13328 items=         1 avg_time=    546538 ns]
top_tweet<sajson>/manual_time                             665443 ns       736868 ns         1051           9.972k           956.874M               0        12.826k    2.10733M              3.33695           1.5152k       3.19304G          5.91934M                    9.37324                     2.80893            1.5152k    10.3855k   631.515k        905.05M/s    1.97241   12.9697k    2.1231M         3.36191   1.50276k/s  3.1905G/s     5.91934M               9.37324                2.78807          1       1.50276k/s [BEST: throughput=  0.96 GB/s doc_throughput=  1515 docs/s instructions=     5919339 cycles=     2107331 branch_miss=    9972 cache_miss=       0 cache_ref=     12826 items=         1 avg_time=    665443 ns]
top_tweet<rapidjson>/manual_time                         1884857 ns      1954786 ns          375          26.019k           388.328M         12.383k        22.125k    5.19228M              8.22194           614.914        3.1928G          13.3312M                    21.1099                      2.5675            614.914    26.9754k   631.515k       319.525M/s    540.981   10.3356k   5.35623M         8.48155    530.544/s 2.84172G/s     13.3321M               21.1113                2.48908          1        530.544/s [BEST: throughput=  0.39 GB/s doc_throughput=   614 docs/s instructions=    13331194 cycles=     5192276 branch_miss=   26019 cache_miss=   12383 cache_ref=     22125 items=         1 avg_time=   1884856 ns]
top_tweet<rapidjson_insitu>/manual_time                  1293724 ns      1362658 ns          572          24.288k           542.892M             122        14.371k     3.7143M              5.88157           859.666       3.19306G          9.68903M                    15.3425                     2.60858            859.666    24.4153k   631.515k       465.524M/s   1.21727k   9.57385k   3.79356M         6.00708    772.962/s 2.93228G/s     9.68955M               15.3433                2.55421          1        772.962/s [BEST: throughput=  0.54 GB/s doc_throughput=   859 docs/s instructions=     9689026 cycles=     3714297 branch_miss=   24288 cache_miss=     122 cache_ref=     14371 items=         1 avg_time=   1293724 ns]
top_tweet<nlohmann_json>/manual_time                     9812178 ns      9900912 ns           71         178.414k            64.933M               8       164.205k    31.0252M              49.1282           102.821       3.19005G          78.4854M                    124.281                     2.52973            102.821    183.573k   631.515k       61.3788M/s    28.0845   164.239k   31.2926M         49.5516    101.914/s 3.18915G/s     78.8808M               124.907                2.52075          1        101.914/s [BEST: throughput=  0.06 GB/s doc_throughput=   102 docs/s instructions=    78485430 cycles=    31025224 branch_miss=  178414 cache_miss=       8 cache_ref=    164205 items=         1 avg_time=   9812178 ns]
