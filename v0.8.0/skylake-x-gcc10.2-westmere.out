run_benchmark: v0.8.0 /home/jkeiser/simdjson_benchmark_results/v0.8.0/skylake-x-gcc10.2-westmere.json -DCMAKE_BUILD_TYPE=Release -DSIMDJSON_EXCLUDE_IMPLEMENTATION=haswell
git reset --hard v0.8.0
HEAD is now at c96ff018 Version 0.8.
cmake -DCMAKE_BUILD_TYPE=Release -DSIMDJSON_EXCLUDE_IMPLEMENTATION=haswell -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The CXX compiler identification is GNU 10.2.0
-- The C compiler identification is GNU 10.2.0
-- Check for working CXX compiler: /usr/bin/g++-10
-- Check for working CXX compiler: /usr/bin/g++-10 -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Check for working C compiler: /usr/bin/gcc-10
-- Check for working C compiler: /usr/bin/gcc-10 -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Excluding implementation haswell due to SIMDJSON_EXCLUDE_IMPLEMENTATION=haswell
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed
-- Check if compiler accepts -pthread
-- Check if compiler accepts -pthread - yes
-- Found Threads: TRUE  
-- Looking for fork
-- Looking for fork - found
-- Looking for wait
-- Looking for wait - found
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- Found Git: /usr/bin/git (found version "2.27.0") 
-- git Version: v0.2.1-c96ff018
-- Version: 0.2.1
-- Performing Test HAVE_CXX_FLAG_STD_CXX11
-- Performing Test HAVE_CXX_FLAG_STD_CXX11 - Success
-- Performing Test HAVE_CXX_FLAG_WALL
-- Performing Test HAVE_CXX_FLAG_WALL - Success
-- Performing Test HAVE_CXX_FLAG_WEXTRA
-- Performing Test HAVE_CXX_FLAG_WEXTRA - Success
-- Performing Test HAVE_CXX_FLAG_WSHADOW
-- Performing Test HAVE_CXX_FLAG_WSHADOW - Success
-- Performing Test HAVE_CXX_FLAG_WERROR
-- Performing Test HAVE_CXX_FLAG_WERROR - Success
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32 - Failed
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED - Success
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WD654
-- Performing Test HAVE_CXX_FLAG_WD654 - Failed
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY - Failed
-- Performing Test HAVE_CXX_FLAG_COVERAGE
-- Performing Test HAVE_CXX_FLAG_COVERAGE - Success
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Performing Test USE_BOOST_JSON
-- Performing Test USE_BOOST_JSON - Failed
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Found Python3: /usr/bin/python3.8 (found version "3.8.6") found components: Interpreter 
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 10
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
Scanning dependencies of target benchmark
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_api_internal.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_name.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_name.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_register.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_register.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_runner.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_runner.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/colorprint.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/colorprint.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/commandlineflags.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/commandlineflags.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/complexity.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/complexity.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/console_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/console_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/counter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/counter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/csv_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/csv_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/json_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/json_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/sleep.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sleep.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/statistics.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/statistics.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/string_util.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/string_util.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/sysinfo.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sysinfo.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/timers.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/timers.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -P CMakeFiles/benchmark.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/benchmark.dir/link.txt --verbose=1
/usr/bin/ar qc libbenchmark.a  CMakeFiles/benchmark.dir/benchmark.cc.o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o CMakeFiles/benchmark.dir/benchmark_name.cc.o CMakeFiles/benchmark.dir/benchmark_register.cc.o CMakeFiles/benchmark.dir/benchmark_runner.cc.o CMakeFiles/benchmark.dir/colorprint.cc.o CMakeFiles/benchmark.dir/commandlineflags.cc.o CMakeFiles/benchmark.dir/complexity.cc.o CMakeFiles/benchmark.dir/console_reporter.cc.o CMakeFiles/benchmark.dir/counter.cc.o CMakeFiles/benchmark.dir/csv_reporter.cc.o CMakeFiles/benchmark.dir/json_reporter.cc.o CMakeFiles/benchmark.dir/reporter.cc.o CMakeFiles/benchmark.dir/sleep.cc.o CMakeFiles/benchmark.dir/statistics.cc.o CMakeFiles/benchmark.dir/string_util.cc.o CMakeFiles/benchmark.dir/sysinfo.cc.o CMakeFiles/benchmark.dir/timers.cc.o
/usr/bin/ranlib libbenchmark.a
[ 80%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
Scanning dependencies of target generated-data
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated && /usr/bin/ruby genfeaturejson.rb /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-miss.json ...
[ 80%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/g++-10  -DSIMDJSON_IMPLEMENTATION_HASWELL=0 -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/include  -O3 -DNDEBUG -fPIC   -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -pthread -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/g++-10 -fPIC -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.7 -o ../libsimdjson.so.7.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.7.0.0 ../libsimdjson.so.7 ../libsimdjson.so
[ 80%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
Scanning dependencies of target yyjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/gcc-10  -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src  -O3 -DNDEBUG   -o CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o   -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src/yyjson.c
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -P CMakeFiles/yyjson.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -E cmake_link_script CMakeFiles/yyjson.dir/link.txt --verbose=1
/usr/bin/ar qc libyyjson.a  CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o
/usr/bin/ranlib libyyjson.a
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/g++-10  -DRAPIDJSON_HAS_STDSTRING -DSAJSON_UNSORTED_OBJECT_KEYS -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_COMPETITION_NLOHMANN_JSON -DSIMDJSON_COMPETITION_RAPIDJSON -DSIMDJSON_COMPETITION_SAJSON -DSIMDJSON_COMPETITION_YYJSON -DSIMDJSON_IMPLEMENTATION_HASWELL=0 -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/rapidjson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/sajson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/json  -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/g++-10  -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.7.0.0 ../_deps/google_benchmarks/src/libbenchmark.a ../dependencies/libyyjson.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.8.0/skylake-x-gcc10.2-westmere.json --benchmark_out_format=json
2021-01-25 01:16:54
Running benchmark/bench_ondemand
Run on (4 X 3200 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 1024 KiB (x4)
  L3 Unified 8448 KiB (x1)
Load Average: 1.01, 1.01, 0.91
***WARNING*** CPU scaling is enabled, the benchmark real time measurements may be noisy and will incur extra overhead.
simdjson::dom implementation:      westmere
simdjson::ondemand implementation: fallback

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                  413272 ns       483738 ns         1693            3.45k           1.53598G               0        33.862k    1.31307M              2.07924          2.43221k       3.19367G          4.41983M                    6.99877                     3.36602           243.221k    3.55244k   631.515k       1.42314G/s    1.68222    33.939k   1.31852M         2.08787   2.41972k/s 3.19044G/s     4.41983M               6.99877                3.35211        100       241.972k/s [BEST: throughput=  1.54 GB/s doc_throughput=  2432 docs/s instructions=     4419829 cycles=     1313073 branch_miss=    3450 cache_miss=       0 cache_ref=     33862 items=       100 avg_time=    413271 ns]
partial_tweets<simdjson_ondemand>/manual_time             295916 ns       352975 ns         2367            1.94k           2.14724G               0         11.88k    939.394k              1.48752          3.40013k       3.19407G          3.51376M                    5.56402                     3.74046           340.013k    2.05372k   631.515k       1.98754G/s  0.0654837   11.9841k   944.132k         1.49503   3.37934k/s 3.19054G/s     3.51376M               5.56402                3.72169        100       337.934k/s [BEST: throughput=  2.15 GB/s doc_throughput=  3400 docs/s instructions=     3513762 cycles=      939394 branch_miss=    1940 cache_miss=       0 cache_ref=     11880 items=       100 avg_time=    295915 ns]
partial_tweets<yyjson>/manual_time                        827207 ns       907141 ns          845           9.737k            1.3486G             255        27.772k    1.49572M              2.36847           2.1355k       3.19411G          2.90846M                    4.60553                     1.94452            213.55k    7.70719k   631.515k       728.064M/s    651.127   25.7776k   1.67435M         2.65132   1.20889k/s  2.0241G/s     2.90895M                4.6063                1.73736        100       120.889k/s [BEST: throughput=  1.35 GB/s doc_throughput=  2135 docs/s instructions=     2908461 cycles=     1495724 branch_miss=    9737 cache_miss=     255 cache_ref=     27772 items=       100 avg_time=    827206 ns]
partial_tweets<yyjson_insitu>/manual_time                 547426 ns       613355 ns         1291            7.31k           1.63653G             140        14.783k    1.23231M              1.95136          2.59143k       3.19345G          2.90814M                    4.60503                     2.35991           259.143k    7.45028k   631.515k       1100.17M/s    130.771   11.8112k    1.3488M         2.13581   1.82673k/s 2.46389G/s     2.90841M               4.60544                 2.1563        100       182.673k/s [BEST: throughput=  1.64 GB/s doc_throughput=  2591 docs/s instructions=     2908144 cycles=     1232311 branch_miss=    7310 cache_miss=     140 cache_ref=     14783 items=       100 avg_time=    547426 ns]
partial_tweets<sajson>/manual_time                        679527 ns       745177 ns         1028          10.044k            937.76M               0        13.181k    2.15029M              3.40497          1.48494k       3.19304G          6.05185M                    9.58306                     2.81443           148.494k    10.5183k   631.515k       886.293M/s    3.09436   13.2836k   2.16781M         3.43272   1.47161k/s 3.19018G/s     6.05185M               9.58306                2.79169        100       147.161k/s [BEST: throughput=  0.94 GB/s doc_throughput=  1484 docs/s instructions=     6051847 cycles=     2150289 branch_miss=   10044 cache_miss=       0 cache_ref=     13181 items=       100 avg_time=    679526 ns]
partial_tweets<rapidjson>/manual_time                    1902900 ns      1971554 ns          366          26.864k           386.979M             796        22.335k    5.21047M              8.25075           612.779       3.19287G          13.4092M                    21.2334                     2.57351           61.2779k    27.4525k   631.515k       316.496M/s     425.38   15.4324k   5.39375M         8.54097    525.514/s 2.83449G/s     13.4101M               21.2348                2.48623        100       52.5514k/s [BEST: throughput=  0.39 GB/s doc_throughput=   612 docs/s instructions=    13409183 cycles=     5210474 branch_miss=   26864 cache_miss=     796 cache_ref=     22335 items=       100 avg_time=   1902899 ns]
partial_tweets<rapidjson_insitu>/manual_time             1328479 ns      1391779 ns          529          25.007k           536.272M              77        14.489k    3.76001M              5.95394           849.183       3.19293G          9.75495M                    15.4469                      2.5944           84.9183k    24.8008k   631.515k       453.345M/s    211.735    9.9201k   3.83873M         6.07861    752.741/s 2.88957G/s     9.75555M               15.4478                2.54135        100       75.2741k/s [BEST: throughput=  0.54 GB/s doc_throughput=   849 docs/s instructions=     9754946 cycles=     3760005 branch_miss=   25007 cache_miss=      77 cache_ref=     14489 items=       100 avg_time=   1328478 ns]
partial_tweets<nlohmann_json>/manual_time                8813654 ns      8902974 ns           79          136.17k           75.1309M              12        98.675k    26.8081M              42.4504           118.969       3.18933G          71.2167M                    112.771                     2.65654           11.8969k    147.247k   631.515k       68.3326M/s    50.9747   143.267k   28.1062M         44.5059     113.46/s 3.18893G/s     72.0444M               114.082                2.56329        100        11.346k/s [BEST: throughput=  0.08 GB/s doc_throughput=   118 docs/s instructions=    71216657 cycles=    26808053 branch_miss=  136170 cache_miss=      12 cache_ref=     98675 items=       100 avg_time=   8813654 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                 111763420 ns    117844658 ns            6         897.773k           412.484M        6.78458M       6.89593M    355.588M              7.73037           8.96728       3.18865G          1.11536G                    24.2476                     3.13667           8.96728M    897.492k   45.9988M       392.506M/s   6.81744M   6.89594M   356.342M         7.74678    8.94747/s 3.18836G/s     1.11536G               24.2476                3.13003      1000k       8.94747M/s [BEST: throughput=  0.41 GB/s doc_throughput=     8 docs/s instructions=  1115360617 cycles=   355587514 branch_miss=  897773 cache_miss= 6784576 cache_ref=   6895933 items=   1000000 avg_time= 111763420 ns]
large_random<simdjson_ondemand>/manual_time             72998343 ns     79078998 ns           10         875.183k           630.854M        3.51276M        3.5728M    232.491M              5.05429           13.7146       3.18852G          719.738M                    15.6469                     3.09577           13.7146M    875.825k   45.9988M       600.943M/s   3.52073M    3.5728M   232.763M          5.0602    13.6989/s  3.1886G/s     719.738M               15.6469                3.09215      1000k       13.6989M/s [BEST: throughput=  0.63 GB/s doc_throughput=    13 docs/s instructions=   719737992 cycles=   232491125 branch_miss=  875183 cache_miss= 3512765 cache_ref=   3572804 items=   1000000 avg_time=  72998342 ns]
large_random<simdjson_ondemand_unordered>/manual_time   76569253 ns     82641625 ns            9          867.61k           601.074M        3.50867M       3.57344M    244.027M              5.30507           13.0672       3.18874G          723.738M                    15.7339                     2.96582           13.0672M    867.695k   45.9988M       572.917M/s   3.52714M    3.5733M    244.14M         5.30754    13.0601/s 3.18849G/s     723.738M               15.7339                2.96443      1000k       13.0601M/s [BEST: throughput=  0.60 GB/s doc_throughput=    13 docs/s instructions=   723737996 cycles=   244026568 branch_miss=  867610 cache_miss= 3508671 cache_ref=   3573440 items=   1000000 avg_time=  76569253 ns]
large_random<yyjson>/manual_time                       156137064 ns    162258679 ns            4         660.861k           294.786M        4.20899M       5.36848M    357.942M              7.78156           6.40855       2.29389G           944.15M                    20.5255                     2.63772           6.40855M    661.308k   45.9988M       280.957M/s   4.20967M   5.35361M   358.213M         7.78745    6.40463/s 2.29422G/s     944.149M               20.5255                2.63572      1000k       6.40463M/s [BEST: throughput=  0.29 GB/s doc_throughput=     6 docs/s instructions=   944149631 cycles=   357942113 branch_miss=  660861 cache_miss= 4208994 cache_ref=   5368475 items=   1000000 avg_time= 156137063 ns]
large_random<yyjson_insitu>/manual_time                129915314 ns    136042395 ns            5         657.696k           354.565M        3.49247M       4.63615M    314.725M              6.84203           7.70814       2.42595G          938.029M                    20.3925                     2.98047           7.70814M    659.509k   45.9988M       337.665M/s   3.49306M   4.62883M   315.197M         6.85228    7.69732/s 2.42617G/s     938.029M               20.3925                2.97601      1000k       7.69732M/s [BEST: throughput=  0.35 GB/s doc_throughput=     7 docs/s instructions=   938028868 cycles=   314725172 branch_miss=  657696 cache_miss= 3492470 cache_ref=   4636151 items=   1000000 avg_time= 129915313 ns]
large_random<sajson>/manual_time                       111670053 ns    117824513 ns            6         602.889k           412.751M         5.4289M       5.57755M     355.39M              7.72607           8.97309       3.18894G          1099.99M                    23.9134                     3.09516           8.97309M    603.158k   45.9988M       392.835M/s    5.4739M   5.57754M   356.073M         7.74091    8.95495/s 3.18861G/s     1099.99M               23.9134                3.08922      1000k       8.95495M/s [BEST: throughput=  0.41 GB/s doc_throughput=     8 docs/s instructions=  1099987400 cycles=   355389690 branch_miss=  602889 cache_miss= 5428901 cache_ref=   5577547 items=   1000000 avg_time= 111670052 ns]
large_random<rapidjson>/manual_time                    209242552 ns    215339813 ns            4         614.627k            230.25M        4.34453M       5.19248M    569.176M              12.3737           5.00557       2.84905G          1.65913G                    36.0689                     2.91496           5.00557M    621.053k   45.9988M       209.651M/s   4.04415M   5.10833M   574.882M         12.4978    4.77914/s 2.74744G/s     1.65914G               36.0691                2.88604      1000k       4.77914M/s [BEST: throughput=  0.23 GB/s doc_throughput=     5 docs/s instructions=  1659125578 cycles=   569176290 branch_miss=  614627 cache_miss= 4344534 cache_ref=   5192480 items=   1000000 avg_time= 209242552 ns]
large_random<rapidjson_lossless>/manual_time           250524324 ns    256636854 ns            3         701.621k           189.914M         4.3441M       5.19531M    704.265M              15.3105           4.12868       2.90769G          2.02209G                    43.9597                     2.87121           4.12868M    689.503k   45.9988M       175.104M/s   4.07245M   5.11855M   709.056M         15.4147    3.99163/s 2.83029G/s      2.0221G               43.9599                2.85182      1000k       3.99163M/s [BEST: throughput=  0.19 GB/s doc_throughput=     4 docs/s instructions=  2022092440 cycles=   704265110 branch_miss=  701621 cache_miss= 4344100 cache_ref=   5195308 items=   1000000 avg_time= 250524324 ns]
large_random<rapidjson_insitu>/manual_time             186697260 ns    192824832 ns            4         585.638k           259.328M        5.03408M       5.91741M    497.566M              10.8169           5.63771       2.80514G          1.49112G                    32.4166                     2.99683           5.63771M    585.614k   45.9988M       234.968M/s   4.73646M   5.83786M     502.9M         10.9329    5.35627/s 2.69367G/s     1.49113G               32.4168                2.96507      1000k       5.35627M/s [BEST: throughput=  0.26 GB/s doc_throughput=     5 docs/s instructions=  1491122993 cycles=   497566232 branch_miss=  585638 cache_miss= 5034076 cache_ref=   5917406 items=   1000000 avg_time= 186697259 ns]
large_random<nlohmann_json>/manual_time               1439867433 ns   1446004609 ns            1         4.51041M           31.9465M        30.2716M       30.9815M    4.57734G                99.51          0.694508         3.179G          11.9494G                    259.776                     2.61055           694.508k    4.51041M   45.9988M       30.4666M/s   30.2716M   30.9815M   4.57734G           99.51   0.694508/s   3.179G/s     11.9494G               259.776                2.61055      1000k       694.508k/s [BEST: throughput=  0.03 GB/s doc_throughput=     0 docs/s instructions= 11949359152 cycles=  4577338303 branch_miss= 4510407 cache_miss=30271571 cache_ref=  30981457 items=   1000000 avg_time=1439867433 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                       114370155 ns    133405461 ns            6          442.55k            1.2021G        10.2514M       10.3147M    364.165M              2.65223           8.75496       3.18825G          1.20656G                    8.78745                     3.31322           4.59012M    442.922k   137.305M       1.11808G/s   10.2619M   10.3148M   364.666M         2.65588    8.74354/s 3.18847G/s     1.20656G               8.78745                3.30867   524.288k       4.58413M/s [BEST: throughput=  1.20 GB/s doc_throughput=     8 docs/s instructions=  1206560129 cycles=   364164949 branch_miss=  442550 cache_miss=10251393 cache_ref=  10314740 items=    524288 avg_time= 114370154 ns]
kostya<simdjson_ondemand>/manual_time                   78035159 ns     96988767 ns            9          452.34k           1.76065G        6.43798M       6.47103M    248.664M              1.81103           12.8229        3.1886G          870.688M                    6.34127                     3.50146            6.7229M    451.878k   137.305M       1.63869G/s   6.43847M   6.47116M   248.811M         1.81211    12.8147/s 3.18845G/s     870.688M               6.34127                3.49939   524.288k       6.71861M/s [BEST: throughput=  1.76 GB/s doc_throughput=    12 docs/s instructions=   870687555 cycles=   248664079 branch_miss=  452340 cache_miss= 6437983 cache_ref=   6471030 items=    524288 avg_time=  78035158 ns]
kostya<yyjson>/manual_time                             256456161 ns    275457231 ns            3         410.053k           535.476M         8.4898M       9.93184M    585.545M              4.26455            3.8999       2.28356G          984.045M                    7.16685                     1.68056           2.04467M    410.541k   137.305M       510.591M/s   8.49034M   9.92619M   585.918M         4.26727     3.8993/s 2.28467G/s     984.045M               7.16686                1.67949   524.288k       2.04436M/s [BEST: throughput=  0.54 GB/s doc_throughput=     3 docs/s instructions=   984044950 cycles=   585544538 branch_miss=  410053 cache_miss= 8489804 cache_ref=   9931843 items=    524288 avg_time= 256456160 ns]
kostya<yyjson_insitu>/manual_time                      178629695 ns    197628257 ns            4         410.472k            768.77M         6.3534M        7.7879M    458.366M               3.3383           5.59899       2.56639G          965.775M                     7.0338                       2.107           2.93548M    411.714k   137.305M       733.049M/s   6.35588M   7.78219M   458.406M          3.3386    5.59817/s 2.56624G/s     965.775M                7.0338                2.10681   524.288k       2.93506M/s [BEST: throughput=  0.77 GB/s doc_throughput=     5 docs/s instructions=   965775280 cycles=   458365821 branch_miss=  410472 cache_miss= 6353397 cache_ref=   7787900 items=    524288 avg_time= 178629694 ns]
kostya<sajson>/manual_time                             175729872 ns    194773601 ns            4         380.531k           781.801M        8.47322M        8.5463M    560.083M              4.07912            5.6939       3.18906G          1.62034G                     11.801                     2.89304           2.98524M    380.612k   137.305M       745.145M/s    8.4976M   8.54624M   560.387M         4.08133    5.69055/s 3.18891G/s     1.62034G                11.801                2.89147   524.288k       2.98349M/s [BEST: throughput=  0.78 GB/s doc_throughput=     5 docs/s instructions=  1620343063 cycles=   560083357 branch_miss=  380531 cache_miss= 8473221 cache_ref=   8546302 items=    524288 avg_time= 175729872 ns]
kostya<rapidjson>/manual_time                          285686530 ns    304736407 ns            2         1003.44k           486.609M        5.19429M       6.39771M    802.979M              5.84814             3.544       2.84576G           2.2966G                    16.7263                      2.8601           1.85808M    1008.49k   137.305M       458.349M/s   5.06917M   6.36624M   805.717M         5.86808    3.50034/s 2.82028G/s      2.2966G               16.7263                2.85038   524.288k       1.83519M/s [BEST: throughput=  0.49 GB/s doc_throughput=     3 docs/s instructions=  2296598375 cycles=   802978567 branch_miss= 1003436 cache_miss= 5194294 cache_ref=   6397708 items=    524288 avg_time= 285686530 ns]
kostya<rapidjson_lossless>/manual_time                 307996283 ns    327004945 ns            2         978.293k           450.854M        5.19858M       6.40828M    874.225M              6.36703            3.2836        2.8706G          2.50316G                    18.2306                     2.86329           1.72155M    976.192k   137.305M       425.149M/s   5.07191M   6.36935M   876.641M         6.38463    3.24679/s 2.84627G/s     2.50316G               18.2307                 2.8554   524.288k       1.70225M/s [BEST: throughput=  0.45 GB/s doc_throughput=     3 docs/s instructions=  2503159306 cycles=   874224537 branch_miss=  978293 cache_miss= 5198577 cache_ref=   6408276 items=    524288 avg_time= 307996283 ns]
kostya<rapidjson_insitu>/manual_time                   262382125 ns    281434921 ns            3         1005.73k            532.17M        7.32782M       8.55557M    725.946M              5.28711           3.87583       2.81364G          2.03014G                    14.7857                     2.79655           2.03205M    1001.65k   137.305M       499.059M/s   7.16512M   8.50375M   728.587M         5.30634    3.81124/s 2.77682G/s     2.03015G               14.7857                2.78642   524.288k       1.99818M/s [BEST: throughput=  0.53 GB/s doc_throughput=     3 docs/s instructions=  2030143919 cycles=   725946345 branch_miss= 1005731 cache_miss= 7327823 cache_ref=   8555569 items=    524288 avg_time= 262382125 ns]
kostya<nlohmann_json>/manual_time                     1866513699 ns   1885466460 ns            1         3.91699M           73.5623M        44.2078M       44.8032M    5.95285G               43.355          0.535758       3.18929G          15.1471G                    110.317                      2.5445           280.892k    3.91699M   137.305M       70.1545M/s   44.2078M   44.8032M   5.95285G          43.355   0.535758/s 3.18929G/s     15.1471G               110.317                 2.5445   524.288k       280.892k/s [BEST: throughput=  0.07 GB/s doc_throughput=     0 docs/s instructions= 15147050693 cycles=  5952854920 branch_miss= 3916990 cache_miss=44207814 cache_ref=  44803176 items=    524288 avg_time=1866513699 ns]
distinct_user_id<simdjson_dom>/manual_time                407390 ns       487689 ns         1717           3.464k           1.55757G               0        33.827k    1.29489M              2.05044           2.4664k        3.1937G          4.36075M                    6.90523                     3.36767           283.635k    3.59857k   631.515k       1.44369G/s  0.0768783   33.8786k   1.29974M         2.05813   2.45465k/s 3.19041G/s     4.36075M               6.90523                3.35509        115       282.285k/s [BEST: throughput=  1.56 GB/s doc_throughput=  2466 docs/s instructions=     4360754 cycles=     1294886 branch_miss=    3464 cache_miss=       0 cache_ref=     33827 items=       115 avg_time=    407389 ns]
distinct_user_id<simdjson_ondemand>/manual_time           287343 ns       351275 ns         2436           1.688k           2.20872G               0         8.257k    913.199k              1.44604          3.49749k       3.19391G          3.20751M                    5.07907                     3.51239           402.212k    1.79739k   631.515k       2.04683G/s  0.0554187   8.14716k   916.818k         1.45178   3.48016k/s 3.19067G/s     3.20751M               5.07907                3.49852        115       400.218k/s [BEST: throughput=  2.21 GB/s doc_throughput=  3497 docs/s instructions=     3207508 cycles=      913199 branch_miss=    1688 cache_miss=       0 cache_ref=      8257 items=       115 avg_time=    287343 ns]
distinct_user_id<yyjson>/manual_time                      721864 ns       811679 ns         1000           6.624k           1.44299G           7.11k        27.214k    1.39763M              2.21314          2.28497k       3.19356G           2.8751M                     4.5527                     2.05712           262.772k    7.59035k   631.515k       834.311M/s   2.25907k   26.0719k   1.59717M         2.52911    1.3853k/s 2.21256G/s     2.87529M               4.55301                1.80024        115        159.31k/s [BEST: throughput=  1.44 GB/s doc_throughput=  2284 docs/s instructions=     2875096 cycles=     1397634 branch_miss=    6624 cache_miss=    7110 cache_ref=     27214 items=       115 avg_time=    721864 ns]
distinct_user_id<yyjson_insitu>/manual_time               545071 ns       620719 ns         1296           7.272k           1.64556G          1.643k        14.071k    1.22036M              1.93242          2.60573k       3.17992G          2.87458M                    4.55188                     2.35553           299.659k    7.61337k   631.515k       1104.92M/s    124.869   11.7235k   1.34196M         2.12498   1.83462k/s 2.46198G/s     2.87484M               4.55229                2.14227        115       210.982k/s [BEST: throughput=  1.65 GB/s doc_throughput=  2605 docs/s instructions=     2874579 cycles=     1220355 branch_miss=    7272 cache_miss=    1643 cache_ref=     14071 items=       115 avg_time=    545071 ns]
distinct_user_id<sajson>/manual_time                      673818 ns       747250 ns         1036           9.989k           946.009M               0        12.944k    2.13163M              3.37542            1.498k       3.19317G          5.98431M                    9.47612                     2.80739            172.27k    10.5065k   631.515k       893.802M/s    1.81274   13.0091k   2.14946M         3.40366   1.48408k/s 3.18997G/s     5.98431M               9.47612                 2.7841        115       170.669k/s [BEST: throughput=  0.95 GB/s doc_throughput=  1497 docs/s instructions=     5984313 cycles=     2131626 branch_miss=    9989 cache_miss=       0 cache_ref=     12944 items=       115 avg_time=    673817 ns]
distinct_user_id<rapidjson>/manual_time                  1896571 ns      1973522 ns          372          26.749k           385.378M         12.492k        22.691k    5.21915M              8.26449           610.244       3.18495G          13.3503M                    21.1401                     2.55794            70.178k    27.5711k   631.515k       317.552M/s    705.124   16.0539k   5.38858M         8.53278    527.267/s 2.84122G/s     13.3511M               21.1414                2.47767        115       60.6358k/s [BEST: throughput=  0.39 GB/s doc_throughput=   610 docs/s instructions=    13350283 cycles=     5219152 branch_miss=   26749 cache_miss=   12492 cache_ref=     22691 items=       115 avg_time=   1896570 ns]
distinct_user_id<rapidjson_insitu>/manual_time           1304093 ns      1376537 ns          565          24.861k           537.795M             793         14.49k    3.74925M              5.93691           851.595       3.19284G          9.70625M                    15.3698                     2.58885           97.9334k    24.8308k   631.515k       461.822M/s   1.33122k   11.5306k   3.82485M         6.05663    766.816/s 2.93296G/s     9.70657M               15.3703                2.53776        115       88.1839k/s [BEST: throughput=  0.54 GB/s doc_throughput=   851 docs/s instructions=     9706254 cycles=     3749247 branch_miss=   24861 cache_miss=     793 cache_ref=     14490 items=       115 avg_time=   1304093 ns]
distinct_user_id<nlohmann_json>/manual_time              8232297 ns      8325032 ns           88         113.608k           81.9609M              19        97.567k    24.5737M              38.9123           129.785       3.18929G           66.651M                    105.541                     2.71229           14.9252k    134.836k   631.515k       73.1582M/s    49.7727   106.664k   26.2555M         41.5754    121.473/s 3.18933G/s     65.3036M               103.408                2.48724        115       13.9694k/s [BEST: throughput=  0.08 GB/s doc_throughput=   129 docs/s instructions=    66651007 cycles=    24573727 branch_miss=  113608 cache_miss=      19 cache_ref=     97567 items=       115 avg_time=   8232296 ns]
find_tweet<simdjson_dom>/manual_time                      391710 ns       468084 ns         1786           3.297k           1.61969G               2        29.942k    1.24524M              1.97183          2.56477k       3.19376G          4.27971M                     6.7769                     3.43686           2.56477k    3.42348k   631.515k       1.50148G/s    2.28163   29.9118k   1.24971M         1.97892   2.55291k/s  3.1904G/s     4.27971M                6.7769                3.42455          1       2.55291k/s [BEST: throughput=  1.62 GB/s doc_throughput=  2564 docs/s instructions=     4279714 cycles=     1245241 branch_miss=    3297 cache_miss=       2 cache_ref=     29942 items=         1 avg_time=    391710 ns]
find_tweet<simdjson_ondemand>/manual_time                 206212 ns       272038 ns         3394              679           3.07283G               1         7.183k    656.561k              1.03966           4.8658k        3.1947G          2.56045M                    4.05446                      3.8998            4.8658k     714.292   631.515k       2.85213G/s    1.19063   7.21487k    658.07k         1.04205   4.84937k/s 3.19123G/s     2.56045M               4.05446                3.89086          1       4.84937k/s [BEST: throughput=  3.07 GB/s doc_throughput=  4865 docs/s instructions=     2560454 cycles=      656561 branch_miss=     679 cache_miss=       1 cache_ref=      7183 items=         1 avg_time=    206212 ns]
find_tweet<yyjson>/manual_time                            811665 ns       899904 ns         1004            9.39k           1.37941G             226        27.289k    1.46213M              2.31528          2.18429k       3.19372G          2.82417M                    4.47206                     1.93154           2.18429k    7.53085k   631.515k       742.006M/s    433.343    24.693k   1.62995M         2.58102   1.23204k/s 2.00816G/s     2.82483M                4.4731                1.73308          1       1.23204k/s [BEST: throughput=  1.38 GB/s doc_throughput=  2184 docs/s instructions=     2824171 cycles=     1462132 branch_miss=    9390 cache_miss=     226 cache_ref=     27289 items=         1 avg_time=    811664 ns]
find_tweet<yyjson_insitu>/manual_time                     533645 ns       604700 ns         1325           7.432k           1.67582G             124        13.512k    1.20349M              1.90571          2.65365k       3.19363G          2.82382M                     4.4715                     2.34636           2.65365k    7.37375k   631.515k       1.10213G/s    8.14868   9.94349k   1.30579M         2.06771    1.8739k/s 2.44693G/s     2.82408M               4.47192                2.16273          1        1.8739k/s [BEST: throughput=  1.68 GB/s doc_throughput=  2653 docs/s instructions=     2823818 cycles=     1203487 branch_miss=    7432 cache_miss=     124 cache_ref=     13512 items=         1 avg_time=    533645 ns]
find_tweet<sajson>/manual_time                            661837 ns       733238 ns         1057           9.767k           963.685M               0        12.515k    2.09236M              3.31324          1.52599k       3.19292G          5.89219M                    9.33025                     2.81605           1.52599k    10.3289k   631.515k       909.982M/s    2.60927   12.6402k   2.11136M         3.34332   1.51095k/s 3.19015G/s     5.89219M               9.33025                2.79071          1       1.51095k/s [BEST: throughput=  0.96 GB/s doc_throughput=  1525 docs/s instructions=     5892194 cycles=     2092360 branch_miss=    9767 cache_miss=       0 cache_ref=     12515 items=         1 avg_time=    661837 ns]
find_tweet<rapidjson>/manual_time                        1879041 ns      1952302 ns          375          26.431k           390.126M         11.966k        20.821k    5.16835M              8.18404           617.763       3.19281G          13.2816M                    21.0314                      2.5698            617.763    27.3106k   631.515k       320.514M/s      451.4   13.0279k   5.33362M         8.44576    532.186/s 2.83848G/s     13.2825M               21.0327                2.49033          1        532.186/s [BEST: throughput=  0.39 GB/s doc_throughput=   617 docs/s instructions=    13281624 cycles=     5168347 branch_miss=   26431 cache_miss=   11966 cache_ref=     20821 items=         1 avg_time=   1879040 ns]
find_tweet<rapidjson_insitu>/manual_time                 1291910 ns      1360542 ns          573          24.177k           541.662M          6.905k        13.011k     3.7224M               5.8944           857.718       3.19277G          9.64812M                    15.2777                     2.59191            857.718    24.7359k   631.515k       466.178M/s   1.14442k   8.90421k   3.78514M         5.99375    774.048/s 2.92988G/s     9.64844M               15.2782                2.54903          1        774.048/s [BEST: throughput=  0.54 GB/s doc_throughput=   857 docs/s instructions=     9648116 cycles=     3722399 branch_miss=   24177 cache_miss=    6905 cache_ref=     13011 items=         1 avg_time=   1291910 ns]
find_tweet<nlohmann_json>/manual_time                   10292973 ns     10382566 ns           74          91.191k           68.0868M          1.553k        77.193k    29.5611M              46.8098           107.815       3.18713G          57.0493M                    90.3373                     1.92988            107.815    169.645k   631.515k       58.5117M/s    44.8919   82.4832k   32.8266M         51.9808    97.1537/s 3.18923G/s     55.6999M               88.2004                1.69679          1        97.1537/s [BEST: throughput=  0.07 GB/s doc_throughput=   107 docs/s instructions=    57049329 cycles=    29561062 branch_miss=   91191 cache_miss=    1553 cache_ref=     77193 items=         1 avg_time=  10292973 ns]
top_tweet<simdjson_dom>/manual_time                       399268 ns       480975 ns         1753           3.351k           1.58975G               0        32.441k    1.26847M              2.00862          2.51736k       3.19321G          4.31378M                    6.83085                     3.40077           2.51736k    3.49345k   631.515k       1.47306G/s  0.0678836   32.4293k   1.27377M         2.01701   2.50458k/s 3.19027G/s     4.31378M               6.83085                3.38662          1       2.50458k/s [BEST: throughput=  1.59 GB/s doc_throughput=  2517 docs/s instructions=     4313782 cycles=     1268474 branch_miss=    3351 cache_miss=       0 cache_ref=     32441 items=         1 avg_time=    399267 ns]
top_tweet<simdjson_ondemand>/manual_time                  267662 ns       334733 ns         2616           1.634k           2.37188G               6          8.73k    850.369k              1.34655          3.75585k       3.19386G          3.18193M                    5.03856                     3.74182           3.75585k    1.75303k   631.515k       2.19734G/s    5.90979   8.67259k   854.075k         1.35242   3.73606k/s 3.19087G/s     3.18193M               5.03856                3.72559          1       3.73606k/s [BEST: throughput=  2.37 GB/s doc_throughput=  3755 docs/s instructions=     3181928 cycles=      850369 branch_miss=    1634 cache_miss=       6 cache_ref=      8730 items=         1 avg_time=    267661 ns]
top_tweet<simdjson_ondemand_forward_only>/manual_time     293024 ns       361299 ns         2388           1.618k           2.16576G               0         9.489k     931.31k              1.47472          3.42946k       3.19389G          3.40283M                    5.38835                     3.65381           3.42946k    1.72804k   631.515k       2.00715G/s  0.0494137    9.4779k   935.011k         1.48058   3.41269k/s  3.1909G/s     3.40283M               5.38836                3.63935          1       3.41269k/s [BEST: throughput=  2.17 GB/s doc_throughput=  3429 docs/s instructions=     3402827 cycles=      931310 branch_miss=    1618 cache_miss=       0 cache_ref=      9489 items=         1 avg_time=    293023 ns]
top_tweet<yyjson>/manual_time                             817155 ns       908214 ns         1009           9.539k           1.33724G             234        27.487k    1.47824M              2.34079          2.11751k        3.1302G          2.84503M                    4.50508                      1.9246           2.11751k    7.64794k   631.515k        737.02M/s    468.026    25.337k   1.64728M         2.60846   1.22376k/s 2.01588G/s     2.84581M               4.50633                1.72758          1       1.22376k/s [BEST: throughput=  1.34 GB/s doc_throughput=  2117 docs/s instructions=     2845028 cycles=     1478241 branch_miss=    9539 cache_miss=     234 cache_ref=     27487 items=         1 avg_time=    817154 ns]
top_tweet<yyjson_insitu>/manual_time                      539887 ns       616059 ns         1308           6.884k           1.66987G          1.448k        13.565k    1.20059M              1.90113          2.64422k       3.17463G          2.84491M                     4.5049                     2.36959           2.64422k      7.458k   631.515k       1115.53M/s    87.2852   11.1994k   1.32577M         2.09934   1.85224k/s 2.45564G/s     2.84517M               4.50531                2.14606          1       1.85224k/s [BEST: throughput=  1.67 GB/s doc_throughput=  2644 docs/s instructions=     2844909 cycles=     1200591 branch_miss=    6884 cache_miss=    1448 cache_ref=     13565 items=         1 avg_time=    539887 ns]
top_tweet<sajson>/manual_time                             665714 ns       740998 ns         1050           9.946k           957.186M               0        12.649k    2.10668M              3.33591           1.5157k       3.19309G          5.91934M                    9.37324                      2.8098            1.5157k    10.4114k   631.515k       904.682M/s    1.86667   12.7381k   2.12358M         3.36268   1.50215k/s 3.18993G/s     5.91934M               9.37324                2.78743          1       1.50215k/s [BEST: throughput=  0.96 GB/s doc_throughput=  1515 docs/s instructions=     5919339 cycles=     2106677 branch_miss=    9946 cache_miss=       0 cache_ref=     12649 items=         1 avg_time=    665714 ns]
top_tweet<rapidjson>/manual_time                         1888238 ns      1966230 ns          374          26.951k           388.091M          7.546k        21.751k    5.19545M              8.22696           614.539        3.1928G           13.332M                    21.1111                     2.56609            614.539    27.3582k   631.515k       318.953M/s    612.783   14.7874k   5.36259M         8.49162    529.594/s    2.84G/s     13.3326M               21.1121                2.48623          1        529.594/s [BEST: throughput=  0.39 GB/s doc_throughput=   614 docs/s instructions=    13331975 cycles=     5195447 branch_miss=   26951 cache_miss=    7546 cache_ref=     21751 items=         1 avg_time=   1888237 ns]
top_tweet<rapidjson_insitu>/manual_time                  1300144 ns      1373549 ns          569          24.704k           538.735M             206        13.963k    3.74269M              5.92653           853.083       3.19283G          9.68905M                    15.3425                     2.58879            853.083    24.8268k   631.515k       463.225M/s    1.2583k   10.2702k   3.81156M         6.03559    769.146/s 2.93165G/s     9.68957M               15.3434                2.54215          1        769.146/s [BEST: throughput=  0.54 GB/s doc_throughput=   853 docs/s instructions=     9689046 cycles=     3742692 branch_miss=   24704 cache_miss=     206 cache_ref=     13963 items=         1 avg_time=   1300143 ns]
top_tweet<nlohmann_json>/manual_time                     9803325 ns      9895662 ns           71         178.694k           64.8995M              24       163.805k    31.0387M              49.1496           102.768       3.18978G          78.5426M                    124.372                     2.53047            102.768    183.005k   631.515k       61.4342M/s    45.7042   164.258k   31.2632M         49.5051    102.006/s 3.18904G/s     78.8411M               124.844                2.52185          1        102.006/s [BEST: throughput=  0.06 GB/s doc_throughput=   102 docs/s instructions=    78542598 cycles=    31038722 branch_miss=  178694 cache_miss=      24 cache_ref=    163805 items=         1 avg_time=   9803325 ns]
