run_benchmark: v0.8.0 /home/jkeiser/simdjson_benchmark_results/v0.8.0/skylake-x-clang11-westmere.json -DCMAKE_BUILD_TYPE=Release -DSIMDJSON_EXCLUDE_IMPLEMENTATION=haswell
git reset --hard v0.8.0
HEAD is now at c96ff018 Version 0.8.
cmake -DCMAKE_BUILD_TYPE=Release -DSIMDJSON_EXCLUDE_IMPLEMENTATION=haswell -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The CXX compiler identification is Clang 11.0.0
-- The C compiler identification is Clang 11.0.0
-- Check for working CXX compiler: /usr/bin/clang++-11
-- Check for working CXX compiler: /usr/bin/clang++-11 -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Check for working C compiler: /usr/bin/clang-11
-- Check for working C compiler: /usr/bin/clang-11 -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Excluding implementation haswell due to SIMDJSON_EXCLUDE_IMPLEMENTATION=haswell
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed
-- Check if compiler accepts -pthread
-- Check if compiler accepts -pthread - yes
-- Found Threads: TRUE  
-- Looking for fork
-- Looking for fork - found
-- Looking for wait
-- Looking for wait - found
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- Found Git: /usr/bin/git (found version "2.27.0") 
-- git Version: v0.2.1-c96ff018
-- Version: 0.2.1
-- Performing Test HAVE_CXX_FLAG_STD_CXX11
-- Performing Test HAVE_CXX_FLAG_STD_CXX11 - Success
-- Performing Test HAVE_CXX_FLAG_WALL
-- Performing Test HAVE_CXX_FLAG_WALL - Success
-- Performing Test HAVE_CXX_FLAG_WEXTRA
-- Performing Test HAVE_CXX_FLAG_WEXTRA - Success
-- Performing Test HAVE_CXX_FLAG_WSHADOW
-- Performing Test HAVE_CXX_FLAG_WSHADOW - Success
-- Performing Test HAVE_CXX_FLAG_WERROR
-- Performing Test HAVE_CXX_FLAG_WERROR - Success
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32 - Success
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED - Success
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WD654
-- Performing Test HAVE_CXX_FLAG_WD654 - Failed
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY - Success
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES -- failed to compile
-- Performing Test HAVE_CXX_FLAG_COVERAGE
-- Performing Test HAVE_CXX_FLAG_COVERAGE - Success
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Performing Test USE_BOOST_JSON
-- Performing Test USE_BOOST_JSON - Failed
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Found Python3: /usr/bin/python3.8 (found version "3.8.6") found components: Interpreter 
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 10
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
Scanning dependencies of target benchmark
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_api_internal.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_name.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_name.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_register.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_register.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_runner.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_runner.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/colorprint.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/colorprint.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/commandlineflags.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/commandlineflags.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/complexity.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/complexity.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/console_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/console_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/counter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/counter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/csv_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/csv_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/json_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/json_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/sleep.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sleep.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/statistics.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/statistics.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/string_util.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/string_util.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/sysinfo.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sysinfo.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/timers.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/timers.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -P CMakeFiles/benchmark.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/benchmark.dir/link.txt --verbose=1
/usr/bin/ar qc libbenchmark.a  CMakeFiles/benchmark.dir/benchmark.cc.o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o CMakeFiles/benchmark.dir/benchmark_name.cc.o CMakeFiles/benchmark.dir/benchmark_register.cc.o CMakeFiles/benchmark.dir/benchmark_runner.cc.o CMakeFiles/benchmark.dir/colorprint.cc.o CMakeFiles/benchmark.dir/commandlineflags.cc.o CMakeFiles/benchmark.dir/complexity.cc.o CMakeFiles/benchmark.dir/console_reporter.cc.o CMakeFiles/benchmark.dir/counter.cc.o CMakeFiles/benchmark.dir/csv_reporter.cc.o CMakeFiles/benchmark.dir/json_reporter.cc.o CMakeFiles/benchmark.dir/reporter.cc.o CMakeFiles/benchmark.dir/sleep.cc.o CMakeFiles/benchmark.dir/statistics.cc.o CMakeFiles/benchmark.dir/string_util.cc.o CMakeFiles/benchmark.dir/sysinfo.cc.o CMakeFiles/benchmark.dir/timers.cc.o
/usr/bin/ranlib libbenchmark.a
[ 80%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
Scanning dependencies of target generated-data
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated && /usr/bin/ruby genfeaturejson.rb /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-miss.json ...
[ 80%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/clang++-11  -DSIMDJSON_IMPLEMENTATION_HASWELL=0 -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/include  -O3 -DNDEBUG -fPIC   -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -pthread -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/clang++-11 -fPIC -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.7 -o ../libsimdjson.so.7.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.7.0.0 ../libsimdjson.so.7 ../libsimdjson.so
[ 80%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
Scanning dependencies of target yyjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/clang-11  -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src  -O3 -DNDEBUG   -o CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o   -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src/yyjson.c
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -P CMakeFiles/yyjson.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -E cmake_link_script CMakeFiles/yyjson.dir/link.txt --verbose=1
/usr/bin/ar qc libyyjson.a  CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o
/usr/bin/ranlib libyyjson.a
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/clang++-11  -DRAPIDJSON_HAS_STDSTRING -DSAJSON_UNSORTED_OBJECT_KEYS -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_COMPETITION_NLOHMANN_JSON -DSIMDJSON_COMPETITION_RAPIDJSON -DSIMDJSON_COMPETITION_SAJSON -DSIMDJSON_COMPETITION_YYJSON -DSIMDJSON_IMPLEMENTATION_HASWELL=0 -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/rapidjson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/sajson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/json  -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/clang++-11  -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.7.0.0 ../_deps/google_benchmarks/src/libbenchmark.a ../dependencies/libyyjson.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.8.0/skylake-x-clang11-westmere.json --benchmark_out_format=json
2021-01-25 01:04:37
Running benchmark/bench_ondemand
Run on (4 X 3200 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 1024 KiB (x4)
  L3 Unified 8448 KiB (x1)
Load Average: 1.08, 1.02, 0.74
***WARNING*** CPU scaling is enabled, the benchmark real time measurements may be noisy and will incur extra overhead.
simdjson::dom implementation:      westmere
simdjson::ondemand implementation: fallback

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                  409016 ns       476867 ns         1711           3.908k           1.55149G               3        33.031k    1.29984M              2.05829          2.45677k       3.19342G          4.34398M                    6.87866                     3.34192           245.677k    3.98954k   631.515k       1.43795G/s    6.76505   33.0671k   1.30485M         2.06623   2.44489k/s 3.19023G/s     4.34398M               6.87866                3.32909        100       244.489k/s [BEST: throughput=  1.55 GB/s doc_throughput=  2456 docs/s instructions=     4343977 cycles=     1299844 branch_miss=    3908 cache_miss=       3 cache_ref=     33031 items=       100 avg_time=    409015 ns]
partial_tweets<simdjson_ondemand>/manual_time             300633 ns       355904 ns         2331           2.582k           2.11245G               0        12.804k     954.79k               1.5119          3.34505k       3.19382G          3.27684M                    5.18886                       3.432           334.505k    2.71323k   631.515k       1.95635G/s   0.147147   12.8212k   959.249k         1.51896   3.32632k/s 3.19077G/s     3.27684M               5.18886                3.41605        100       332.632k/s [BEST: throughput=  2.11 GB/s doc_throughput=  3345 docs/s instructions=     3276842 cycles=      954790 branch_miss=    2582 cache_miss=       0 cache_ref=     12804 items=       100 avg_time=    300632 ns]
partial_tweets<yyjson>/manual_time                        791717 ns       868711 ns          882           9.752k           1.41958G             215        28.488k    1.42105M              2.25022          2.24789k       3.19436G          2.91991M                    4.62366                     2.05476           224.789k    7.52852k   631.515k       760.701M/s      640.7   25.8305k    1.5675M         2.48213   1.26308k/s 1.97987G/s      2.9204M               4.62443                1.86309        100       126.308k/s [BEST: throughput=  1.42 GB/s doc_throughput=  2247 docs/s instructions=     2919910 cycles=     1421045 branch_miss=    9752 cache_miss=     215 cache_ref=     28488 items=       100 avg_time=    791717 ns]
partial_tweets<yyjson_insitu>/manual_time                 519175 ns       581207 ns         1361           7.298k           1.74352G             132         15.02k    1.15691M              1.83195          2.76086k       3.19406G           2.9198M                    4.62349                      2.5238           276.086k    7.41558k   631.515k       1.13284G/s    136.552   12.2673k   1.26141M         1.99744   1.92613k/s 2.42965G/s     2.92006M                4.6239                2.31491        100       192.613k/s [BEST: throughput=  1.74 GB/s doc_throughput=  2760 docs/s instructions=     2919801 cycles=     1156907 branch_miss=    7298 cache_miss=     132 cache_ref=     15020 items=       100 avg_time=    519175 ns]
partial_tweets<sajson>/manual_time                        689864 ns       750739 ns         1014          10.299k           920.889M               0        13.556k    2.18974M              3.46744          1.45822k       3.19312G          5.87949M                    9.31014                     2.68502           145.822k    10.5973k   631.515k       873.012M/s    1.59172   13.7841k   2.20067M         3.48475   1.44956k/s 3.19001G/s      5.8795M               9.31014                2.67168        100       144.956k/s [BEST: throughput=  0.92 GB/s doc_throughput=  1458 docs/s instructions=     5879495 cycles=     2189739 branch_miss=   10299 cache_miss=       0 cache_ref=     13556 items=       100 avg_time=    689863 ns]
partial_tweets<rapidjson>/manual_time                    2803726 ns      2868748 ns          250          30.422k           249.221M             733        23.149k     8.0901M              12.8106            394.64       3.19268G          21.8952M                    34.6709                     2.70642            39.464k    31.3428k   631.515k       214.807M/s    499.428   15.9066k   8.26274M          13.084    356.668/s 2.94706G/s      21.896M               34.6722                2.64997        100       35.6668k/s [BEST: throughput=  0.25 GB/s doc_throughput=   394 docs/s instructions=    21895212 cycles=     8090105 branch_miss=   30422 cache_miss=     733 cache_ref=     23149 items=       100 avg_time=   2803725 ns]
partial_tweets<rapidjson_insitu>/manual_time             1776414 ns      1835461 ns          395          25.558k           372.341M          1.524k        12.281k    5.23133M              8.28378             589.6       3.08439G          13.3568M                    21.1505                     2.55324             58.96k    26.1821k   631.515k       339.031M/s    236.258   10.1422k   5.26951M         8.34423    562.932/s 2.96637G/s     13.3572M                21.151                2.53481        100       56.2932k/s [BEST: throughput=  0.37 GB/s doc_throughput=   589 docs/s instructions=    13356840 cycles=     5231329 branch_miss=   25558 cache_miss=    1524 cache_ref=     12281 items=       100 avg_time=   1776413 ns]
partial_tweets<nlohmann_json>/manual_time               10031634 ns     10117180 ns           70           149.9k           65.5979M              58        98.109k    30.7113M              48.6311           103.874        3.1901G          80.2795M                    127.122                     2.61401           10.3874k    162.636k   631.515k        60.036M/s    110.329   138.056k   31.9931M         50.6609    99.6847/s 3.18922G/s     80.8924M               128.093                2.52843        100       9.96847k/s [BEST: throughput=  0.07 GB/s doc_throughput=   103 docs/s instructions=    80279466 cycles=    30711283 branch_miss=  149900 cache_miss=      58 cache_ref=     98109 items=       100 avg_time=  10031634 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                 112572564 ns    118463909 ns            6         905.656k           409.225M        6.78715M       6.89585M    358.374M              7.79094           8.89642       3.18825G          1.16046G                    25.2281                     3.23813           8.89642M    910.323k   45.9988M       389.685M/s   6.81834M   6.89596M   358.906M         7.80251    8.88316/s 3.18822G/s     1.16046G               25.2281                3.23334      1000k       8.88316M/s [BEST: throughput=  0.41 GB/s doc_throughput=     8 docs/s instructions=  1160462608 cycles=   358373837 branch_miss=  905656 cache_miss= 6787148 cache_ref=   6895846 items=   1000000 avg_time= 112572563 ns]
large_random<simdjson_ondemand>/manual_time             78615035 ns     84523977 ns            9         921.321k           585.697M        3.50901M       3.57314M    250.444M              5.44459           12.7329       3.18888G          744.919M                    16.1943                     2.97439           12.7329M    926.511k   45.9988M       558.008M/s   3.52275M   3.57314M   250.662M         5.44932    12.7202/s 3.18848G/s     744.919M               16.1943                2.97181      1000k       12.7202M/s [BEST: throughput=  0.59 GB/s doc_throughput=    12 docs/s instructions=   744919074 cycles=   250444428 branch_miss=  921321 cache_miss= 3509005 cache_ref=   3573137 items=   1000000 avg_time=  78615035 ns]
large_random<simdjson_ondemand_unordered>/manual_time   78710200 ns     84585260 ns            9         995.742k           584.657M        3.51032M       3.57284M    250.909M              5.45469           12.7103       3.18912G          741.919M                    16.1291                     2.95693           12.7103M    997.656k   45.9988M       557.334M/s   3.52668M   3.57295M   250.964M         5.45589    12.7048/s 3.18846G/s     741.919M               16.1291                2.95628      1000k       12.7048M/s [BEST: throughput=  0.58 GB/s doc_throughput=    12 docs/s instructions=   741919086 cycles=   250908881 branch_miss=  995742 cache_miss= 3510318 cache_ref=   3572836 items=   1000000 avg_time=  78710200 ns]
large_random<yyjson>/manual_time                       154176969 ns    160128111 ns            5         734.702k           298.552M        4.20848M       5.36563M    352.891M              7.67174           6.49044       2.29042G          855.681M                    18.6023                     2.42478           6.49044M    735.724k   45.9988M       284.529M/s   4.20816M   5.36255M   353.197M         7.67841    6.48605/s 2.29086G/s     855.681M               18.6023                2.42267      1000k       6.48605M/s [BEST: throughput=  0.30 GB/s doc_throughput=     6 docs/s instructions=   855680958 cycles=   352890730 branch_miss=  734702 cache_miss= 4208476 cache_ref=   5365626 items=   1000000 avg_time= 154176969 ns]
large_random<yyjson_insitu>/manual_time                128354946 ns    134331008 ns            5         734.666k           358.437M        3.50004M       4.60382M    310.703M               6.7546           7.79231        2.4211G           849.56M                    18.4692                     2.73431           7.79231M    736.876k   45.9988M        341.77M/s   3.49397M     4.621M   310.917M         6.75924     7.7909/s 2.42232G/s      849.56M               18.4692                2.73244      1000k        7.7909M/s [BEST: throughput=  0.36 GB/s doc_throughput=     7 docs/s instructions=   849559993 cycles=   310703300 branch_miss=  734666 cache_miss= 3500038 cache_ref=   4603822 items=   1000000 avg_time= 128354945 ns]
large_random<sajson>/manual_time                       109482743 ns    115412398 ns            6         591.127k           420.622M         5.4327M       5.57726M    348.738M              7.58146            9.1442       3.18893G          1.12599G                    24.4787                     3.22876            9.1442M    591.423k   45.9988M       400.683M/s   5.47394M    5.5774M   349.071M         7.58871    9.13386/s 3.18837G/s     1.12599G               24.4787                3.22567      1000k       9.13386M/s [BEST: throughput=  0.42 GB/s doc_throughput=     9 docs/s instructions=  1125990578 cycles=   348737719 branch_miss=  591127 cache_miss= 5432703 cache_ref=   5577261 items=   1000000 avg_time= 109482743 ns]
large_random<rapidjson>/manual_time                    254371559 ns    260293867 ns            3         603.126k           187.248M        4.35066M       5.20074M    715.075M              15.5455           4.07072       2.91087G          2.01413G                    43.7865                     2.81666           4.07072M    656.379k   45.9988M       172.456M/s   4.07714M   5.12671M   721.115M         15.6768    3.93126/s 2.83489G/s     2.01414G               43.7867                2.79309      1000k       3.93126M/s [BEST: throughput=  0.19 GB/s doc_throughput=     4 docs/s instructions=  2014126233 cycles=   715075026 branch_miss=  603126 cache_miss= 4350658 cache_ref=   5200736 items=   1000000 avg_time= 254371559 ns]
large_random<rapidjson_lossless>/manual_time           286212477 ns    292108330 ns            2         633.585k           164.175M        4.34727M       5.20127M      825.7M              17.9505           3.56911       2.94702G          2.47909G                    53.8948                     3.00241           3.56911M    634.125k   45.9988M        153.27M/s   4.14173M   5.14113M   828.729M         18.0163    3.49391/s  2.8955G/s      2.4791G               53.8949                2.99145      1000k       3.49391M/s [BEST: throughput=  0.16 GB/s doc_throughput=     3 docs/s instructions=  2479093364 cycles=   825699785 branch_miss=  633585 cache_miss= 4347268 cache_ref=   5201268 items=   1000000 avg_time= 286212476 ns]
large_random<rapidjson_insitu>/manual_time             270066015 ns    275997881 ns            3         583.348k           175.418M        5.02312M       5.92105M    768.554M              16.7081           3.81355       2.93092G          1.73613G                    37.7429                     2.25895           3.81355M    582.892k   45.9988M       162.434M/s   4.76524M   5.84625M    772.07M         16.7846     3.7028/s 2.85882G/s     1.73613G               37.7431                2.24868      1000k        3.7028M/s [BEST: throughput=  0.18 GB/s doc_throughput=     3 docs/s instructions=  1736126086 cycles=   768554057 branch_miss=  583348 cache_miss= 5023123 cache_ref=   5921052 items=   1000000 avg_time= 270066014 ns]
large_random<nlohmann_json>/manual_time               1471599892 ns   1477470954 ns            1          4.1106M           31.2577M        30.2826M       31.0219M    4.67837G              101.706          0.679533       3.17911G          12.7486G                     277.15                       2.725           679.533k     4.1106M   45.9988M       29.8096M/s   30.2826M   31.0219M   4.67837G         101.706   0.679533/s 3.17911G/s     12.7486G                277.15                  2.725      1000k       679.533k/s [BEST: throughput=  0.03 GB/s doc_throughput=     0 docs/s instructions= 12748550148 cycles=  4678371198 branch_miss= 4110601 cache_miss=30282597 cache_ref=  31021893 items=   1000000 avg_time=1471599892 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                       121789635 ns    140212352 ns            6         1097.27k            1.1282G        10.2479M       10.3179M     387.99M              2.82575           8.21674       3.18801G           1.2306G                    8.96251                     3.17172           4.30794M    1097.52k   137.305M       1075.17M/s   10.2445M    10.318M   388.298M           2.828    8.21088/s 3.18827G/s      1.2306G               8.96251                3.16921   524.288k       4.30487M/s [BEST: throughput=  1.13 GB/s doc_throughput=     8 docs/s instructions=  1230597014 cycles=   387989833 branch_miss= 1097265 cache_miss=10247921 cache_ref=  10317907 items=    524288 avg_time= 121789634 ns]
kostya<simdjson_ondemand>/manual_time                   77248162 ns     95680442 ns            9         508.204k           1.78296G         6.4336M       6.47204M    245.556M               1.7884           12.9854       3.18864G          837.618M                    6.10042                     3.41111            6.8081M    507.842k   137.305M       1.65538G/s   6.44096M   6.47182M   246.279M         1.79366    12.9453/s 3.18816G/s     837.618M               6.10042                3.40109   524.288k       6.78706M/s [BEST: throughput=  1.78 GB/s doc_throughput=    12 docs/s instructions=   837618101 cycles=   245555629 branch_miss=  508204 cache_miss= 6433595 cache_ref=   6472043 items=    524288 avg_time=  77248162 ns]
kostya<yyjson>/manual_time                             229218116 ns    247718070 ns            3         413.925k            599.28M        8.50142M        9.9334M    500.391M              3.64437           4.36459         2.184G          974.184M                    7.09504                     1.94685            2.2883M    414.199k   137.305M       571.265M/s   8.50103M   9.93108M   500.796M         3.64733    4.36266/s  2.1848G/s     974.185M               7.09504                1.94527   524.288k       2.28729M/s [BEST: throughput=  0.60 GB/s doc_throughput=     4 docs/s instructions=   974184493 cycles=   500390759 branch_miss=  413925 cache_miss= 8501423 cache_ref=   9933395 items=    524288 avg_time= 229218115 ns]
kostya<yyjson_insitu>/manual_time                      152095609 ns    170581790 ns            5         417.345k           902.926M        6.36498M       7.80367M    374.193M              2.72527           6.57606       2.46072G          955.915M                    6.96198                      2.5546           3.44775M    417.044k   137.305M       860.934M/s    6.3653M   7.79651M   374.194M         2.72528    6.57481/s 2.46026G/s     955.915M               6.96198                2.55459   524.288k       3.44709M/s [BEST: throughput=  0.90 GB/s doc_throughput=     6 docs/s instructions=   955914831 cycles=   374193467 branch_miss=  417345 cache_miss= 6364985 cache_ref=   7803674 items=    524288 avg_time= 152095609 ns]
kostya<sajson>/manual_time                             174201678 ns    192639226 ns            4         396.887k           790.437M        8.52041M       8.54134M    553.959M              4.03451            5.7568       3.18903G          1.53761G                    11.1985                     2.77567           3.01822M    398.905k   137.305M       751.682M/s   8.48623M    8.5411M   555.497M         4.04572    5.74047/s 3.18882G/s     1.53761G               11.1985                2.76799   524.288k       3.00966M/s [BEST: throughput=  0.79 GB/s doc_throughput=     5 docs/s instructions=  1537609244 cycles=   553958965 branch_miss=  396887 cache_miss= 8520407 cache_ref=   8541344 items=    524288 avg_time= 174201678 ns]
kostya<rapidjson>/manual_time                          331348036 ns    349824212 ns            2         1041.41k           418.605M        5.19763M       6.43837M    948.471M              6.90777           3.04872       2.89162G          2.73711G                    19.9346                     2.88582           1.59841M    1048.27k   137.305M       395.186M/s   5.07479M   6.40536M   950.743M         6.92431    3.01797/s 2.86932G/s     2.73712G               19.9346                2.87892   524.288k       1.58229M/s [BEST: throughput=  0.42 GB/s doc_throughput=     3 docs/s instructions=  2737114543 cycles=   948471495 branch_miss= 1041410 cache_miss= 5197625 cache_ref=   6438373 items=    524288 avg_time= 331348035 ns]
kostya<rapidjson_lossless>/manual_time                 346387605 ns    364941429 ns            2         965.769k           400.284M        5.19775M       6.41716M    997.446M              7.26446           2.91529       2.90785G          3.00606G                    21.8933                     3.01376           1.52845M    965.587k   137.305M       378.028M/s   5.07523M   6.38241M   999.467M         7.27918    2.88694/s  2.8854G/s     3.00607G               21.8934                3.00767   524.288k       1.51359M/s [BEST: throughput=  0.40 GB/s doc_throughput=     2 docs/s instructions=  3006064974 cycles=   997446174 branch_miss=  965769 cache_miss= 5197750 cache_ref=   6417159 items=    524288 avg_time= 346387605 ns]
kostya<rapidjson_insitu>/manual_time                   311107576 ns    329562505 ns            2         979.448k           446.617M        7.33954M        8.5857M    884.072M              6.43875           3.25274       2.87565G          2.21988G                    16.1675                     2.51097           1.70537M    1081.24k   137.305M       420.897M/s   7.21319M   8.55369M   887.594M         6.46439    3.21432/s 2.85301G/s     2.21988G               16.1675                2.50101   524.288k       1.68523M/s [BEST: throughput=  0.45 GB/s doc_throughput=     3 docs/s instructions=  2219879140 cycles=   884071856 branch_miss=  979448 cache_miss= 7339544 cache_ref=   8585697 items=    524288 avg_time= 311107576 ns]
kostya<nlohmann_json>/manual_time                     2326786223 ns   2345264435 ns            1         14.2515M           59.0106M        44.4766M       45.1232M    7.42135G              54.0501          0.429777       3.18953G          17.7632G                     129.37                     2.39353           225.327k    14.2515M   137.305M       56.2769M/s   44.4766M   45.1232M   7.42135G         54.0501   0.429777/s 3.18953G/s     17.7632G                129.37                2.39353   524.288k       225.327k/s [BEST: throughput=  0.06 GB/s doc_throughput=     0 docs/s instructions= 17763206237 cycles=  7421353307 branch_miss=14251507 cache_miss=44476621 cache_ref=  45123212 items=    524288 avg_time=2326786223 ns]
distinct_user_id<simdjson_dom>/manual_time                402065 ns       478127 ns         1741           3.982k           1.58064G               0        33.868k    1.27608M              2.02066          2.50294k       3.19395G            4.279M                    6.77577                     3.35325           287.838k    4.09533k   631.515k       1.46281G/s   0.085583   34.0287k   1.28289M         2.03144   2.48716k/s 3.19075G/s       4.279M               6.77577                3.33545        115       286.024k/s [BEST: throughput=  1.58 GB/s doc_throughput=  2502 docs/s instructions=     4279000 cycles=     1276077 branch_miss=    3982 cache_miss=       0 cache_ref=     33868 items=       115 avg_time=    402064 ns]
distinct_user_id<simdjson_ondemand>/manual_time           252874 ns       312528 ns         2769           2.109k           2.51376G               4         7.925k    802.443k              1.27066          3.98053k       3.19415G          2.89509M                    4.58436                     3.60785           457.761k    2.22047k   631.515k       2.32584G/s    2.54207   7.94727k   807.004k         1.27789   3.95453k/s 3.19132G/s      2.8951M               4.58436                3.58746        115       454.771k/s [BEST: throughput=  2.51 GB/s doc_throughput=  3980 docs/s instructions=     2895095 cycles=      802443 branch_miss=    2109 cache_miss=       4 cache_ref=      7925 items=       115 avg_time=    252874 ns]
distinct_user_id<yyjson>/manual_time                      687118 ns       773703 ns         1000           6.527k           1.54134G           7.06k        27.324k    1.30848M              2.07198           2.4407k       3.19362G          2.87805M                    4.55738                     2.19953           280.681k    7.41156k   631.515k       876.501M/s   2.27032k   26.0922k   1.49161M         2.36195   1.45535k/s 2.17082G/s     2.87825M               4.55769                1.92963        115       167.366k/s [BEST: throughput=  1.54 GB/s doc_throughput=  2440 docs/s instructions=     2878054 cycles=     1308484 branch_miss=    6527 cache_miss=    7060 cache_ref=     27324 items=       115 avg_time=    687117 ns]
distinct_user_id<yyjson_insitu>/manual_time               513507 ns       584872 ns         1377           6.951k           1.77512G          1.691k         14.25k    1.13114M              1.79115          2.81089k       3.17951G          2.87754M                    4.55656                     2.54393           323.253k    7.40814k   631.515k       1.14535G/s    131.874   12.1094k   1.24375M         1.96947   1.94739k/s 2.42207G/s      2.8778M               4.55698                2.31381        115        223.95k/s [BEST: throughput=  1.78 GB/s doc_throughput=  2810 docs/s instructions=     2877538 cycles=     1131140 branch_miss=    6951 cache_miss=    1691 cache_ref=     14250 items=       115 avg_time=    513506 ns]
distinct_user_id<sajson>/manual_time                      684963 ns       752813 ns         1020          10.174k           927.873M               0        13.497k    2.17318M              3.44122          1.46928k       3.19301G          5.81793M                    9.21266                     2.67715           168.967k    10.5457k   631.515k       879.259M/s    1.73824   13.5176k   2.18505M         3.46002   1.45993k/s 3.19003G/s     5.81793M               9.21266                 2.6626        115       167.892k/s [BEST: throughput=  0.93 GB/s doc_throughput=  1469 docs/s instructions=     5817932 cycles=     2173179 branch_miss=   10174 cache_miss=       0 cache_ref=     13497 items=       115 avg_time=    684962 ns]
distinct_user_id<rapidjson>/manual_time                  2787681 ns      2860379 ns          252            31.5k           249.117M             733        23.236k    8.09393M              12.8167           394.475       3.19285G          21.8229M                    34.5564                      2.6962           45.3646k    31.3759k   631.515k       216.043M/s    937.175   16.6744k   8.23369M          13.038    358.721/s  2.9536G/s     21.8237M               34.5576                2.65053        115       41.2529k/s [BEST: throughput=  0.25 GB/s doc_throughput=   394 docs/s instructions=    21822877 cycles=     8093927 branch_miss=   31500 cache_miss=     733 cache_ref=     23236 items=       115 avg_time=   2787680 ns]
distinct_user_id<rapidjson_insitu>/manual_time           1828168 ns      1896559 ns          371          25.287k           383.334M          7.138k         14.57k    5.25998M              8.32914           607.008       3.19285G          13.2897M                    21.0441                     2.52657           69.8059k    37.1825k   631.515k       329.433M/s   2.82956k   12.6767k     5.583M         8.84065    546.996/s 3.05388G/s     13.2901M               21.0448                2.38046        115       62.9045k/s [BEST: throughput=  0.38 GB/s doc_throughput=   607 docs/s instructions=    13289674 cycles=     5259976 branch_miss=   25287 cache_miss=    7138 cache_ref=     14570 items=       115 avg_time=   1828167 ns]
distinct_user_id<nlohmann_json>/manual_time              9364713 ns      9452864 ns           76         126.407k            70.598M              54        97.271k    28.5362M              45.1868           111.791        3.1901G           75.738M                    119.931                     2.65411            12.856k    140.201k   631.515k       64.3116M/s    71.9868   106.313k   29.8681M         47.2959    106.784/s 3.18943G/s     74.4009M               117.813                2.49098        115       12.2801k/s [BEST: throughput=  0.07 GB/s doc_throughput=   111 docs/s instructions=    75738008 cycles=    28536166 branch_miss=  126407 cache_miss=      54 cache_ref=     97271 items=       115 avg_time=   9364713 ns]
find_tweet<simdjson_dom>/manual_time                      388367 ns       460094 ns         1802           3.774k           1.63475G               0        30.215k    1.23386M              1.95381          2.58862k       3.19399G          4.19368M                    6.64067                     3.39884           2.58862k    3.86362k   631.515k        1.5144G/s   0.563263   30.1297k   1.23909M         1.96209   2.57488k/s 3.19051G/s     4.19368M               6.64067                3.38449          1       2.57488k/s [BEST: throughput=  1.63 GB/s doc_throughput=  2588 docs/s instructions=     4193680 cycles=     1233858 branch_miss=    3774 cache_miss=       0 cache_ref=     30215 items=         1 avg_time=    388367 ns]
find_tweet<simdjson_ondemand>/manual_time                 200773 ns       262539 ns         3486           1.286k           3.15952G               0         7.304k    638.377k              1.01087          5.00308k       3.19385G          2.38923M                    3.78332                     3.74266           5.00308k    1.32053k   631.515k        2.9294G/s   8.89271m   7.36135k   640.745k         1.01462   4.98074k/s 3.19138G/s     2.38923M               3.78332                3.72883          1       4.98074k/s [BEST: throughput=  3.16 GB/s doc_throughput=  5003 docs/s instructions=     2389226 cycles=      638377 branch_miss=    1286 cache_miss=       0 cache_ref=      7304 items=         1 avg_time=    200773 ns]
find_tweet<yyjson>/manual_time                            775949 ns       860360 ns          964           9.599k           1.46524G             184        27.191k    1.37653M              2.17973           2.3202k       3.19383G          2.81716M                    4.46096                     2.04657            2.3202k    7.41472k   631.515k       776.159M/s    453.327   24.7436k   1.52211M         2.41025   1.28875k/s 1.96161G/s     2.81764M               4.46171                1.85114          1       1.28875k/s [BEST: throughput=  1.47 GB/s doc_throughput=  2320 docs/s instructions=     2817163 cycles=     1376530 branch_miss=    9599 cache_miss=     184 cache_ref=     27191 items=         1 avg_time=    775948 ns]
find_tweet<yyjson_insitu>/manual_time                     502256 ns       568303 ns         1000           7.216k           1.80357G             169        14.124k    1.11843M              1.77102          2.85594k       3.19415G          2.81705M                    4.46077                     2.51876           2.85594k    7.19619k   631.515k       1.17101G/s      9.238    10.477k   1.20859M          1.9138   1.99102k/s 2.40633G/s     2.81731M               4.46119                2.33106          1       1.99102k/s [BEST: throughput=  1.80 GB/s doc_throughput=  2855 docs/s instructions=     2817045 cycles=     1118426 branch_miss=    7216 cache_miss=     169 cache_ref=     14124 items=         1 avg_time=    502255 ns]
find_tweet<sajson>/manual_time                            674363 ns       739649 ns         1038          10.049k           942.646M               0        13.265k    2.13911M              3.38727          1.49267k       3.19299G          5.72274M                    9.06192                     2.67529           1.49267k    10.4618k   631.515k       893.079M/s    2.71676   13.1666k   2.15146M         3.40682   1.48288k/s 3.19035G/s     5.72274M               9.06192                2.65994          1       1.48288k/s [BEST: throughput=  0.94 GB/s doc_throughput=  1492 docs/s instructions=     5722739 cycles=     2139110 branch_miss=   10049 cache_miss=       0 cache_ref=     13265 items=         1 avg_time=    674362 ns]
find_tweet<rapidjson>/manual_time                        2775576 ns      2844263 ns          253          30.976k           250.492M         11.933k        21.527k    8.04918M              12.7458           396.652       3.19273G          21.7389M                    34.4234                     2.70076            396.652    31.4748k   631.515k       216.985M/s    661.609   14.0379k   8.19615M         12.9785    360.286/s 2.95295G/s     21.7398M               34.4248                2.65244          1        360.286/s [BEST: throughput=  0.25 GB/s doc_throughput=   396 docs/s instructions=    21738896 cycles=     8049183 branch_miss=   30976 cache_miss=   11933 cache_ref=     21527 items=         1 avg_time=   2775575 ns]
find_tweet<rapidjson_insitu>/manual_time                 1789907 ns      1853571 ns          395          24.849k           360.046M               8         8.247k    5.19585M               8.2276            570.13       2.96231G          13.2117M                    20.9207                     2.54275             570.13    33.2837k   631.515k       336.475M/s   1.66196k    9.5343k   5.40523M         8.55914    558.688/s 3.01984G/s     13.2116M               20.9205                2.44423          1        558.688/s [BEST: throughput=  0.36 GB/s doc_throughput=   570 docs/s instructions=    13211746 cycles=     5195855 branch_miss=   24849 cache_miss=       8 cache_ref=      8247 items=         1 avg_time=   1789907 ns]
find_tweet<nlohmann_json>/manual_time                    8195753 ns      8281333 ns           89          99.135k           82.1481M              99        75.915k    24.5321M              38.8464           130.081       3.19116G           65.868M                    104.302                     2.68497            130.081    117.688k   631.515k       73.4844M/s    70.4382   81.9372k   26.1374M         41.3883    122.014/s 3.18913G/s     64.4863M               102.114                2.46721          1        122.014/s [BEST: throughput=  0.08 GB/s doc_throughput=   130 docs/s instructions=    65868033 cycles=    24532102 branch_miss=   99135 cache_miss=      99 cache_ref=     75915 items=         1 avg_time=   8195753 ns]
top_tweet<simdjson_dom>/manual_time                       395380 ns       472180 ns         1769           3.814k           1.60558G               0        32.527k    1.25602M              1.98889          2.54243k       3.19333G          4.23057M                    6.69908                     3.36824           2.54243k    3.92848k   631.515k       1.48754G/s  0.0520068   32.5737k    1.2616M         1.99774   2.52921k/s 3.19086G/s     4.23057M               6.69908                3.35333          1       2.52921k/s [BEST: throughput=  1.61 GB/s doc_throughput=  2542 docs/s instructions=     4230567 cycles=     1256016 branch_miss=    3814 cache_miss=       0 cache_ref=     32527 items=         1 avg_time=    395379 ns]
top_tweet<simdjson_ondemand>/manual_time                  248548 ns       310646 ns         2816           1.954k           2.55497G               0         8.232k    789.523k               1.2502          4.04578k       3.19424G          2.91582M                    4.61719                     3.69314           4.04578k    2.05341k   631.515k       2.36632G/s   0.212358   8.28851k    793.24k         1.25609   4.02337k/s  3.1915G/s     2.91582M               4.61719                3.67584          1       4.02337k/s [BEST: throughput=  2.55 GB/s doc_throughput=  4045 docs/s instructions=     2915822 cycles=      789523 branch_miss=    1954 cache_miss=       0 cache_ref=      8232 items=         1 avg_time=    248547 ns]
top_tweet<simdjson_ondemand_forward_only>/manual_time     269444 ns       332661 ns         2598           2.215k           2.35812G               0         9.455k    855.374k              1.35448          3.73407k       3.19403G          3.14128M                     4.9742                     3.67241           3.73407k    2.32117k   631.515k       2.18281G/s   8.08314m   9.47947k   859.864k         1.36159   3.71135k/s 3.19125G/s     3.14128M                4.9742                3.65323          1       3.71135k/s [BEST: throughput=  2.36 GB/s doc_throughput=  3734 docs/s instructions=     3141280 cycles=      855374 branch_miss=    2215 cache_miss=       0 cache_ref=      9455 items=         1 avg_time=    269444 ns]
top_tweet<yyjson>/manual_time                             781007 ns       868411 ns          999           9.673k           1.45216G             221        27.437k    1.38902M              2.19951          2.29948k       3.19403G          2.84444M                    4.50415                      2.0478           2.29948k    7.50161k   631.515k       771.132M/s    471.413   25.3536k   1.53845M         2.43613    1.2804k/s 1.96983G/s     2.84512M               4.50523                1.84934          1        1.2804k/s [BEST: throughput=  1.45 GB/s doc_throughput=  2299 docs/s instructions=     2844438 cycles=     1389021 branch_miss=    9673 cache_miss=     221 cache_ref=     27437 items=         1 avg_time=    781006 ns]
top_tweet<yyjson_insitu>/manual_time                      509668 ns       581010 ns         1388            7.37k           1.77784G             112        14.712k    1.13455M              1.79656           2.8152k         3.194G          2.84432M                    4.50396                     2.50699            2.8152k    7.34526k   631.515k       1.15398G/s    97.8927   11.6438k   1.23154M         1.95013   1.96206k/s 2.41635G/s     2.84458M               4.50438                2.30979          1       1.96206k/s [BEST: throughput=  1.78 GB/s doc_throughput=  2815 docs/s instructions=     2844320 cycles=     1134555 branch_miss=    7370 cache_miss=     112 cache_ref=     14712 items=         1 avg_time=    509667 ns]
top_tweet<sajson>/manual_time                             677574 ns       747566 ns         1032          10.076k            938.06M               8        13.267k    2.14968M              3.40401          1.48541k       3.19316G          5.75273M                    9.10941                     2.67608           1.48541k    10.4812k   631.515k       888.847M/s    2.13178   13.2481k   2.16162M         3.42292   1.47585k/s 3.19024G/s     5.75273M               9.10941                 2.6613          1       1.47585k/s [BEST: throughput=  0.94 GB/s doc_throughput=  1485 docs/s instructions=     5752730 cycles=     2149683 branch_miss=   10076 cache_miss=       8 cache_ref=     13267 items=         1 avg_time=    677573 ns]
top_tweet<rapidjson>/manual_time                         2782878 ns      2856443 ns          253          30.687k           249.892M             545        22.595k    8.06838M              12.7762           395.703       3.19268G           21.798M                    34.5169                     2.70165            395.703    31.2914k   631.515k       216.416M/s    811.668   15.1663k    8.2181M         13.0133     359.34/s  2.9531G/s     21.7989M               34.5184                2.65254          1         359.34/s [BEST: throughput=  0.25 GB/s doc_throughput=   395 docs/s instructions=    21797953 cycles=     8068376 branch_miss=   30687 cache_miss=     545 cache_ref=     22595 items=         1 avg_time=   2782878 ns]
top_tweet<rapidjson_insitu>/manual_time                  1790835 ns      1860865 ns          391          25.365k           392.089M          7.025k        14.383k    5.14272M              8.14347            620.87       3.19296G          13.2661M                    21.0069                     2.57959             620.87    36.5172k   631.515k       336.301M/s   2.63164k   11.3835k   5.46047M         8.64662    558.399/s 3.04912G/s     13.2664M               21.0072                2.42953          1        558.399/s [BEST: throughput=  0.39 GB/s doc_throughput=   620 docs/s instructions=    13266143 cycles=     5142724 branch_miss=   25365 cache_miss=    7025 cache_ref=     14383 items=         1 avg_time=   1790834 ns]
top_tweet<nlohmann_json>/manual_time                    11042399 ns     11132889 ns           64         191.944k            57.529M              25       163.886k    35.0102M              55.4384           91.0968       3.18932G          87.9675M                    139.296                     2.51263            91.0968    196.352k   631.515k       54.5407M/s    90.9375   164.472k   35.2203M         55.7711      90.56/s 3.18955G/s     88.2516M               139.746                 2.5057          1          90.56/s [BEST: throughput=  0.06 GB/s doc_throughput=    91 docs/s instructions=    87967508 cycles=    35010194 branch_miss=  191944 cache_miss=      25 cache_ref=    163886 items=         1 avg_time=  11042399 ns]
