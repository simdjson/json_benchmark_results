run_benchmark: v0.8.0 /home/jkeiser/simdjson_benchmark_results/v0.8.0/skylake-x-clang11-westmere.json -DCMAKE_BUILD_TYPE=Release -DSIMDJSON_EXCLUDE_IMPLEMENTATION=haswell
git reset --hard v0.8.0
HEAD is now at c96ff018 Version 0.8.
cmake -DCMAKE_BUILD_TYPE=Release -DSIMDJSON_EXCLUDE_IMPLEMENTATION=haswell -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The CXX compiler identification is Clang 11.0.0
-- The C compiler identification is Clang 11.0.0
-- Check for working CXX compiler: /usr/bin/clang++-11
-- Check for working CXX compiler: /usr/bin/clang++-11 -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Check for working C compiler: /usr/bin/clang-11
-- Check for working C compiler: /usr/bin/clang-11 -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Excluding implementation haswell due to SIMDJSON_EXCLUDE_IMPLEMENTATION=haswell
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed
-- Check if compiler accepts -pthread
-- Check if compiler accepts -pthread - yes
-- Found Threads: TRUE  
-- Looking for fork
-- Looking for fork - found
-- Looking for wait
-- Looking for wait - found
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- Found Git: /usr/bin/git (found version "2.27.0") 
-- git Version: v0.2.1-c96ff018
-- Version: 0.2.1
-- Performing Test HAVE_CXX_FLAG_STD_CXX11
-- Performing Test HAVE_CXX_FLAG_STD_CXX11 - Success
-- Performing Test HAVE_CXX_FLAG_WALL
-- Performing Test HAVE_CXX_FLAG_WALL - Success
-- Performing Test HAVE_CXX_FLAG_WEXTRA
-- Performing Test HAVE_CXX_FLAG_WEXTRA - Success
-- Performing Test HAVE_CXX_FLAG_WSHADOW
-- Performing Test HAVE_CXX_FLAG_WSHADOW - Success
-- Performing Test HAVE_CXX_FLAG_WERROR
-- Performing Test HAVE_CXX_FLAG_WERROR - Success
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32 - Success
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED - Success
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WD654
-- Performing Test HAVE_CXX_FLAG_WD654 - Failed
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY - Success
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES -- failed to compile
-- Performing Test HAVE_CXX_FLAG_COVERAGE
-- Performing Test HAVE_CXX_FLAG_COVERAGE - Success
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Performing Test USE_BOOST_JSON
-- Performing Test USE_BOOST_JSON - Failed
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Found Python3: /usr/bin/python3.8 (found version "3.8.6") found components: Interpreter 
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 10
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
Scanning dependencies of target benchmark
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_api_internal.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_name.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_name.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_register.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_register.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_runner.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_runner.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/colorprint.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/colorprint.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/commandlineflags.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/commandlineflags.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/complexity.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/complexity.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/console_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/console_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/counter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/counter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/csv_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/csv_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/json_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/json_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/sleep.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sleep.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/statistics.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/statistics.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/string_util.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/string_util.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/sysinfo.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sysinfo.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/timers.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/timers.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -P CMakeFiles/benchmark.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/benchmark.dir/link.txt --verbose=1
/usr/bin/ar qc libbenchmark.a  CMakeFiles/benchmark.dir/benchmark.cc.o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o CMakeFiles/benchmark.dir/benchmark_name.cc.o CMakeFiles/benchmark.dir/benchmark_register.cc.o CMakeFiles/benchmark.dir/benchmark_runner.cc.o CMakeFiles/benchmark.dir/colorprint.cc.o CMakeFiles/benchmark.dir/commandlineflags.cc.o CMakeFiles/benchmark.dir/complexity.cc.o CMakeFiles/benchmark.dir/console_reporter.cc.o CMakeFiles/benchmark.dir/counter.cc.o CMakeFiles/benchmark.dir/csv_reporter.cc.o CMakeFiles/benchmark.dir/json_reporter.cc.o CMakeFiles/benchmark.dir/reporter.cc.o CMakeFiles/benchmark.dir/sleep.cc.o CMakeFiles/benchmark.dir/statistics.cc.o CMakeFiles/benchmark.dir/string_util.cc.o CMakeFiles/benchmark.dir/sysinfo.cc.o CMakeFiles/benchmark.dir/timers.cc.o
/usr/bin/ranlib libbenchmark.a
[ 80%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
Scanning dependencies of target generated-data
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated && /usr/bin/ruby genfeaturejson.rb /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-miss.json ...
[ 80%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/clang++-11  -DSIMDJSON_IMPLEMENTATION_HASWELL=0 -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/include  -O3 -DNDEBUG -fPIC   -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -pthread -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/clang++-11 -fPIC -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.7 -o ../libsimdjson.so.7.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.7.0.0 ../libsimdjson.so.7 ../libsimdjson.so
[ 80%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
Scanning dependencies of target yyjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/clang-11  -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src  -O3 -DNDEBUG   -o CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o   -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src/yyjson.c
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -P CMakeFiles/yyjson.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -E cmake_link_script CMakeFiles/yyjson.dir/link.txt --verbose=1
/usr/bin/ar qc libyyjson.a  CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o
/usr/bin/ranlib libyyjson.a
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/clang++-11  -DRAPIDJSON_HAS_STDSTRING -DSAJSON_UNSORTED_OBJECT_KEYS -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_COMPETITION_NLOHMANN_JSON -DSIMDJSON_COMPETITION_RAPIDJSON -DSIMDJSON_COMPETITION_SAJSON -DSIMDJSON_COMPETITION_YYJSON -DSIMDJSON_IMPLEMENTATION_HASWELL=0 -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/rapidjson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/sajson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/json  -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/clang++-11  -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.7.0.0 ../_deps/google_benchmarks/src/libbenchmark.a ../dependencies/libyyjson.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.8.0/skylake-x-clang11-westmere.json --benchmark_out_format=json
2021-01-24 21:45:45
Running benchmark/bench_ondemand
Run on (4 X 3200 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 1024 KiB (x4)
  L3 Unified 8448 KiB (x1)
Load Average: 1.05, 0.71, 0.74
***WARNING*** CPU scaling is enabled, the benchmark real time measurements may be noisy and will incur extra overhead.
simdjson::dom implementation:      westmere
simdjson::ondemand implementation: fallback
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                  407260 ns       475308 ns         1722           3.787k           1.55875G               2        34.237k    1.29396M              2.04897          2.46827k       3.19384G          4.34398M                    6.87866                     3.35712           246.827k    3.91975k   631.515k       1.44415G/s    1.82114   34.1364k   1.29921M         2.05729   2.45544k/s 3.19013G/s     4.34398M               6.87866                3.34355        100       245.544k/s [BEST: throughput=  1.56 GB/s doc_throughput=  2468 docs/s instructions=     4343977 cycles=     1293958 branch_miss=    3787 cache_miss=       2 cache_ref=     34237 items=       100 avg_time=    407259 ns]
partial_tweets<simdjson_ondemand>/manual_time             300483 ns       353921 ns         2330           2.542k           2.11502G               0        10.148k    953.629k              1.51007          3.34912k       3.19382G          3.27684M                    5.18886                     3.43618           334.912k    2.71594k   631.515k       1.95733G/s   0.612017   10.2044k   958.723k         1.51813   3.32798k/s 3.19061G/s     3.27684M               5.18886                3.41792        100       332.798k/s [BEST: throughput=  2.12 GB/s doc_throughput=  3349 docs/s instructions=     3276842 cycles=      953629 branch_miss=    2542 cache_miss=       0 cache_ref=     10148 items=       100 avg_time=    300482 ns]
partial_tweets<yyjson>/manual_time                        793235 ns       870102 ns          883           9.575k           1.42555G             327         28.51k    1.41496M              2.24058          2.25736k       3.19406G          2.91991M                    4.62366                      2.0636           225.736k    7.56294k   631.515k       759.245M/s    601.737   23.5499k    1.5727M         2.49036   1.26066k/s 1.98264G/s      2.9206M               4.62476                1.85706        100       126.066k/s [BEST: throughput=  1.43 GB/s doc_throughput=  2257 docs/s instructions=     2919910 cycles=     1414958 branch_miss=    9575 cache_miss=     327 cache_ref=     28510 items=       100 avg_time=    793234 ns]
partial_tweets<yyjson_insitu>/manual_time                 520830 ns       580647 ns         1357           7.005k           1.73639G          1.385k        13.893k    1.15359M              1.82671          2.74956k       3.17187G           2.9198M                    4.62349                     2.53105           274.956k    7.36309k   631.515k       1.12924G/s    67.6514   9.20223k   1.26612M         2.00489   1.92001k/s 2.43097G/s     2.92006M                4.6239                2.30631        100       192.001k/s [BEST: throughput=  1.74 GB/s doc_throughput=  2749 docs/s instructions=     2919803 cycles=     1153594 branch_miss=    7005 cache_miss=    1385 cache_ref=     13893 items=       100 avg_time=    520829 ns]
partial_tweets<sajson>/manual_time                        690956 ns       752667 ns         1012          10.194k           920.338M               2        13.979k    2.19089M              3.46926          1.45735k       3.19289G          5.87949M                    9.31014                     2.68361           145.735k    10.6429k   631.515k       871.632M/s    4.24802   13.9528k   2.20421M         3.49035   1.44727k/s 3.19009G/s      5.8795M               9.31014                2.66739        100       144.727k/s [BEST: throughput=  0.92 GB/s doc_throughput=  1457 docs/s instructions=     5879495 cycles=     2190889 branch_miss=   10194 cache_miss=       2 cache_ref=     13979 items=       100 avg_time=    690956 ns]
partial_tweets<rapidjson>/manual_time                    2806046 ns      2867906 ns          249          30.289k           249.538M          9.782k        22.676k    8.07987M              12.7944           395.142        3.1927G          21.8959M                     34.672                     2.70993           39.5142k    31.7488k   631.515k       214.629M/s    407.651   11.8472k   8.26818M         13.0926    356.373/s 2.94656G/s     21.8967M               34.6733                2.64831        100       35.6373k/s [BEST: throughput=  0.25 GB/s doc_throughput=   395 docs/s instructions=    21895876 cycles=     8079872 branch_miss=   30289 cache_miss=    9782 cache_ref=     22676 items=       100 avg_time=   2806045 ns]
partial_tweets<rapidjson_insitu>/manual_time             1777154 ns      1836815 ns          395          27.645k           384.932M             699          17.6k    5.23822M              8.29469           609.537       3.19289G          13.3569M                    21.1506                     2.54989           60.9537k    26.7167k   631.515k        338.89M/s    201.527   9.80949k   5.27238M         8.34878    562.697/s 2.96676G/s     13.3572M                21.151                2.53343        100       56.2697k/s [BEST: throughput=  0.38 GB/s doc_throughput=   609 docs/s instructions=    13356912 cycles=     5238222 branch_miss=   27645 cache_miss=     699 cache_ref=     17600 items=       100 avg_time=   1777153 ns]
partial_tweets<nlohmann_json>/manual_time                9983677 ns     10069259 ns           71         150.075k           65.6982M              16        98.985k    30.6502M              48.5343           104.033       3.18862G          80.2503M                    127.076                     2.61826           10.4033k    160.795k   631.515k       60.3244M/s    62.7465    138.01k   31.8423M         50.4222    100.163/s 3.18944G/s     80.7895M                127.93                2.53717        100       10.0163k/s [BEST: throughput=  0.07 GB/s doc_throughput=   104 docs/s instructions=    80250255 cycles=    30650166 branch_miss=  150075 cache_miss=      16 cache_ref=     98985 items=       100 avg_time=   9983676 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                 112473718 ns    118347347 ns            6         914.425k           409.598M         6.7683M       6.89656M     358.13M              7.78563           8.90454       3.18898G          1.16046G                    25.2281                     3.24034           8.90454M    915.093k   45.9988M       390.028M/s   6.81612M   6.89641M   358.616M          7.7962    8.89097/s 3.18844G/s     1.16046G               25.2281                3.23595      1000k       8.89097M/s [BEST: throughput=  0.41 GB/s doc_throughput=     8 docs/s instructions=  1160462606 cycles=   358129675 branch_miss=  914425 cache_miss= 6768296 cache_ref=   6896561 items=   1000000 avg_time= 112473718 ns]
large_random<simdjson_ondemand>/manual_time             78577822 ns     84465567 ns            9         925.835k           585.668M        3.49664M       3.57327M    250.454M               5.4448           12.7322       3.18884G          744.919M                    16.1943                     2.97428           12.7322M    926.379k   45.9988M       558.273M/s   3.51768M   3.57317M   250.537M          5.4466    12.7262/s 3.18839G/s     744.919M               16.1943                2.97329      1000k       12.7262M/s [BEST: throughput=  0.59 GB/s doc_throughput=    12 docs/s instructions=   744919074 cycles=   250453951 branch_miss=  925835 cache_miss= 3496635 cache_ref=   3573270 items=   1000000 avg_time=  78577821 ns]
large_random<simdjson_ondemand_unordered>/manual_time   78672750 ns     84556258 ns            9         996.686k           584.908M        3.49648M       3.57296M    250.769M              5.45164           12.7157       3.18871G          741.919M                    16.1291                     2.95858           12.7157M    997.441k   45.9988M       557.599M/s   3.51004M   3.57291M   250.828M         5.45292    12.7109/s 3.18824G/s     741.919M               16.1291                2.95788      1000k       12.7109M/s [BEST: throughput=  0.58 GB/s doc_throughput=    12 docs/s instructions=   741919088 cycles=   250768742 branch_miss=  996686 cache_miss= 3496476 cache_ref=   3572956 items=   1000000 avg_time=  78672750 ns]
large_random<yyjson>/manual_time                       154342984 ns    160281257 ns            5         724.737k           298.161M        4.20014M       4.32403M    352.905M              7.67205           6.48194       2.28751G          855.681M                    18.6023                     2.42468           6.48194M    725.253k   45.9988M       284.223M/s   4.20108M   4.32417M   353.125M         7.67682    6.47908/s 2.28792G/s     855.681M               18.6023                2.42317      1000k       6.47908M/s [BEST: throughput=  0.30 GB/s doc_throughput=     6 docs/s instructions=   855680758 cycles=   352904710 branch_miss=  724737 cache_miss= 4200139 cache_ref=   4324031 items=   1000000 avg_time= 154342984 ns]
large_random<yyjson_insitu>/manual_time                128491205 ns    134441005 ns            5         724.704k           358.195M        3.48269M       3.66191M    310.627M              6.75294           7.78705       2.41887G           849.56M                    18.4692                     2.73498           7.78705M    726.058k   45.9988M       341.407M/s   3.48329M   3.65303M   310.848M         6.75775    7.78263/s 2.41922G/s      849.56M               18.4692                2.73304      1000k       7.78263M/s [BEST: throughput=  0.36 GB/s doc_throughput=     7 docs/s instructions=   849559987 cycles=   310627097 branch_miss=  724704 cache_miss= 3482689 cache_ref=   3661906 items=   1000000 avg_time= 128491204 ns]
large_random<sajson>/manual_time                       109472008 ns    115417306 ns            6         590.191k           420.702M        5.51062M        5.5769M    348.702M              7.58069           9.14594       3.18921G          1.12599G                    24.4787                     3.22909           9.14594M     590.55k   45.9988M       400.722M/s   5.47754M   5.57703M   348.981M         7.58674    9.13476/s 3.18785G/s     1.12599G               24.4787                3.22651      1000k       9.13476M/s [BEST: throughput=  0.42 GB/s doc_throughput=     9 docs/s instructions=  1125990577 cycles=   348702403 branch_miss=  590191 cache_miss= 5510622 cache_ref=   5576904 items=   1000000 avg_time= 109472008 ns]
large_random<rapidjson>/manual_time                    252786463 ns    258736915 ns            3         594.716k            188.09M        4.35866M       4.88827M    711.521M              15.4683           4.08902       2.90943G          2.01413G                    43.7865                     2.83073           4.08902M    613.065k   45.9988M       173.537M/s   4.08956M   4.68072M   715.812M         15.5615    3.95591/s 2.83169G/s     2.01414G               43.7867                2.81378      1000k       3.95591M/s [BEST: throughput=  0.19 GB/s doc_throughput=     4 docs/s instructions=  2014126276 cycles=   711520703 branch_miss=  594716 cache_miss= 4358663 cache_ref=   4888271 items=   1000000 avg_time= 252786462 ns]
large_random<rapidjson_lossless>/manual_time           286064166 ns    291964031 ns            3         586.209k           165.264M        4.36085M       4.88844M    819.765M              17.8215           3.59279       2.94524G          2.47909G                    53.8948                     3.02415           3.59279M    587.472k   45.9988M        153.35M/s   4.08889M   4.68581M    822.64M         17.8839    3.49572/s 2.87572G/s      2.4791G                53.895                3.01359      1000k       3.49572M/s [BEST: throughput=  0.17 GB/s doc_throughput=     3 docs/s instructions=  2479093550 cycles=   819764894 branch_miss=  586209 cache_miss= 4360848 cache_ref=   4888437 items=   1000000 avg_time= 286064166 ns]
large_random<rapidjson_insitu>/manual_time             274866700 ns    280847919 ns            3          586.62k           172.074M        5.04492M       5.61397M    784.971M               17.065           3.74084       2.93645G          1.73613G                    37.7429                     2.21171           3.74084M    586.216k   45.9988M       159.597M/s   4.79333M   5.40657M   787.383M         17.1175    3.63813/s  2.8646G/s     1.73613G               37.7431                2.20494      1000k       3.63813M/s [BEST: throughput=  0.17 GB/s doc_throughput=     3 docs/s instructions=  1736126274 cycles=   784970638 branch_miss=  586620 cache_miss= 5044917 cache_ref=   5613972 items=   1000000 avg_time= 274866700 ns]
large_random<nlohmann_json>/manual_time               1468492592 ns   1474388239 ns            1         4.11139M           31.3238M        30.4091M       30.9013M    4.66838G              101.489           0.68097       3.17903G          12.7486G                     277.15                     2.73083            680.97k    4.11139M   45.9988M       29.8727M/s   30.4091M   30.9013M   4.66838G         101.489    0.68097/s 3.17903G/s     12.7486G                277.15                2.73083      1000k        680.97k/s [BEST: throughput=  0.03 GB/s doc_throughput=     0 docs/s instructions= 12748551153 cycles=  4668382511 branch_miss= 4111389 cache_miss=30409102 cache_ref=  30901289 items=   1000000 avg_time=1468492592 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                       122308642 ns    140616774 ns            6            1096k            1.1239G        10.2418M       10.3187M    389.355M              2.83569           8.18546       3.18705G           1.2306G                    8.96251                      3.1606           4.29154M    1096.38k   137.305M       1070.61M/s   10.2427M   10.3187M   389.881M         2.83952    8.17604/s 3.18768G/s      1.2306G               8.96251                3.15634   524.288k        4.2866M/s [BEST: throughput=  1.12 GB/s doc_throughput=     8 docs/s instructions=  1230597017 cycles=   389354898 branch_miss= 1095996 cache_miss=10241812 cache_ref=  10318654 items=    524288 avg_time= 122308642 ns]
kostya<simdjson_ondemand>/manual_time                   78286707 ns     96582433 ns            9          506.38k           1.75754G        6.43425M       6.47196M    249.107M              1.81426           12.8003       3.18865G          837.618M                    6.10042                     3.36248           6.71104M    507.074k   137.305M       1.63342G/s   6.43047M   6.47182M   249.587M         1.81776    12.7736/s 3.18812G/s     837.618M               6.10042                3.35601   524.288k       6.69702M/s [BEST: throughput=  1.76 GB/s doc_throughput=    12 docs/s instructions=   837618102 cycles=   249107397 branch_miss=  506380 cache_miss= 6434248 cache_ref=   6471962 items=    524288 avg_time=  78286706 ns]
kostya<yyjson>/manual_time                             229744700 ns    248119810 ns            3         419.749k           597.817M        8.49674M       8.68108M    501.147M              3.64988           4.35394       2.18196G          974.185M                    7.09504                     1.94391           2.28272M     420.33k   137.305M       569.955M/s   8.49823M   8.67156M    501.35M         3.65136    4.35266/s  2.1822G/s     974.185M               7.09504                1.94312   524.288k       2.28205M/s [BEST: throughput=  0.60 GB/s doc_throughput=     4 docs/s instructions=   974184704 cycles=   501146559 branch_miss=  419749 cache_miss= 8496737 cache_ref=   8681077 items=    524288 avg_time= 229744700 ns]
kostya<yyjson_insitu>/manual_time                      152379262 ns    170693868 ns            5         414.501k           901.307M        6.35651M       6.52458M    374.312M              2.72613           6.56427       2.45708G          955.915M                    6.96198                      2.5538           3.44157M    413.209k   137.305M       859.331M/s   6.35818M   6.52749M   374.339M         2.72633    6.56257/s 2.45663G/s     955.915M               6.96198                2.55361   524.288k       3.44068M/s [BEST: throughput=  0.90 GB/s doc_throughput=     6 docs/s instructions=   955915246 cycles=   374311573 branch_miss=  414501 cache_miss= 6356508 cache_ref=   6524577 items=    524288 avg_time= 152379262 ns]
kostya<sajson>/manual_time                             174415905 ns    192690667 ns            4         399.694k           788.014M        8.46306M       8.54081M    555.579M              4.04631           5.73915       3.18855G          1.53761G                    11.1985                     2.76758           3.00897M    400.446k   137.305M       750.759M/s   8.49037M   8.54093M   556.111M         4.05018    5.73342/s 3.18842G/s     1.53761G               11.1985                2.76493   524.288k       3.00596M/s [BEST: throughput=  0.79 GB/s doc_throughput=     5 docs/s instructions=  1537609245 cycles=   555578523 branch_miss=  399694 cache_miss= 8463055 cache_ref=   8540812 items=    524288 avg_time= 174415905 ns]
kostya<rapidjson>/manual_time                          332987149 ns    351360394 ns            2         1065.65k           417.775M        5.24546M       5.76593M    950.133M              6.91987           3.04268       2.89095G          2.73711G                    19.9346                     2.88077           1.59524M    1.14689M   137.305M       393.241M/s   5.12106M   5.65942M   955.618M         6.95982    3.00312/s 2.86983G/s     2.73712G               19.9346                2.86424   524.288k        1.5745M/s [BEST: throughput=  0.42 GB/s doc_throughput=     3 docs/s instructions=  2737114590 cycles=   950133244 branch_miss= 1065647 cache_miss= 5245457 cache_ref=   5765926 items=    524288 avg_time= 332987149 ns]
kostya<rapidjson_lossless>/manual_time                 346793120 ns    365155162 ns            2         1017.16k           399.495M        5.25418M       5.76063M    998.958M              7.27546           2.90954       2.90651G          3.00607G                    21.8933                      3.0092           1.52544M    1005.33k   137.305M       377.586M/s   5.12686M   5.65152M    1000.3M         7.28526    2.88356/s 2.88444G/s     3.00607G               21.8934                3.00516   524.288k       1.51182M/s [BEST: throughput=  0.40 GB/s doc_throughput=     2 docs/s instructions=  3006065029 cycles=   998957665 branch_miss= 1017160 cache_miss= 5254177 cache_ref=   5760628 items=    524288 avg_time= 346793120 ns]
kostya<rapidjson_insitu>/manual_time                   319238265 ns    337599368 ns            2         972.152k           434.353M        7.39672M       7.90312M     911.44M              6.63807           3.16342       2.88326G          2.21988G                    16.1675                     2.43557           1.65854M    982.458k   137.305M       410.177M/s   7.26698M   7.79422M   913.159M         6.65059    3.13246/s 2.86043G/s     2.21988G               16.1675                2.43099   524.288k       1.64231M/s [BEST: throughput=  0.43 GB/s doc_throughput=     3 docs/s instructions=  2219879187 cycles=   911440246 branch_miss=  972152 cache_miss= 7396720 cache_ref=   7903118 items=    524288 avg_time= 319238264 ns]
kostya<nlohmann_json>/manual_time                     2320779516 ns   2339074831 ns            1         14.1496M           59.1633M         44.481M       45.1766M    7.40216G              53.9103           0.43089       3.18951G          17.7632G                     129.37                     2.39973            225.91k    14.1496M   137.305M       56.4225M/s    44.481M   45.1766M   7.40216G         53.9103    0.43089/s 3.18951G/s     17.7632G                129.37                2.39973   524.288k        225.91k/s [BEST: throughput=  0.06 GB/s doc_throughput=     0 docs/s instructions= 17763210484 cycles=  7402157415 branch_miss=14149625 cache_miss=44480992 cache_ref=  45176620 items=    524288 avg_time=2320779516 ns]
distinct_user_id<simdjson_dom>/manual_time                400089 ns       476307 ns         1749           3.866k           1.58688G               2        34.301k    1.27107M              2.01274          2.51282k       3.19398G            4.279M                    6.77577                     3.36645           288.974k    4.02134k   631.515k       1.47003G/s    2.12579   34.2964k   1.27667M          2.0216   2.49945k/s 3.19097G/s       4.279M               6.77577                3.35169        115       287.436k/s [BEST: throughput=  1.59 GB/s doc_throughput=  2512 docs/s instructions=     4279000 cycles=     1271073 branch_miss=    3866 cache_miss=       2 cache_ref=     34301 items=       115 avg_time=    400088 ns]
distinct_user_id<simdjson_ondemand>/manual_time           252331 ns       312529 ns         2776            2.09k            2.5176G               7         9.721k    801.187k              1.26867          3.98661k       3.19402G          2.89509M                    4.58436                     3.61351            458.46k    2.22636k   631.515k       2.33084G/s    4.15238    9.5188k   805.207k         1.27504   3.96305k/s 3.19107G/s      2.8951M               4.58436                3.59547        115       455.751k/s [BEST: throughput=  2.52 GB/s doc_throughput=  3986 docs/s instructions=     2895095 cycles=      801187 branch_miss=    2090 cache_miss=       7 cache_ref=      9721 items=       115 avg_time=    252331 ns]
distinct_user_id<yyjson>/manual_time                      689134 ns       775269 ns         1000            6.52k           1.54411G          7.061k        27.331k    1.30605M              2.06811          2.44509k        3.1934G          2.87805M                    4.55738                     2.20364           281.185k    7.42627k   631.515k       873.937M/s   2.23425k   24.6016k    1.4954M         2.36796    1.4511k/s 2.16997G/s     2.87825M               4.55769                1.92473        115       166.876k/s [BEST: throughput=  1.54 GB/s doc_throughput=  2445 docs/s instructions=     2878054 cycles=     1306045 branch_miss=    6520 cache_miss=    7061 cache_ref=     27331 items=       115 avg_time=    689134 ns]
distinct_user_id<yyjson_insitu>/manual_time               516704 ns       585547 ns         1365           6.963k           1.76583G          1.124k        13.717k    1.13419M              1.79599          2.79619k       3.17142G          2.87754M                    4.55656                     2.53708           321.561k     7.4862k   631.515k       1.13826G/s    68.3758    9.2501k    1.2533M          1.9846   1.93534k/s 2.42557G/s      2.8778M               4.55698                2.29617        115       222.564k/s [BEST: throughput=  1.77 GB/s doc_throughput=  2796 docs/s instructions=     2877538 cycles=     1134194 branch_miss=    6963 cache_miss=    1124 cache_ref=     13717 items=       115 avg_time=    516704 ns]
distinct_user_id<sajson>/manual_time                      685498 ns       754101 ns         1020          10.114k            928.36M              16        13.698k    2.17205M              3.43943          1.47005k       3.19303G          5.81793M                    9.21266                     2.67854           169.056k    10.5729k   631.515k       878.572M/s    4.74412    13.747k   2.18678M         3.46276   1.45879k/s 3.19006G/s     5.81793M               9.21266                 2.6605        115       167.761k/s [BEST: throughput=  0.93 GB/s doc_throughput=  1470 docs/s instructions=     5817932 cycles=     2172050 branch_miss=   10114 cache_miss=      16 cache_ref=     13698 items=       115 avg_time=    685498 ns]
distinct_user_id<rapidjson>/manual_time                  2789034 ns      2859136 ns          252          30.825k           250.012M          7.263k        22.974k    8.06455M              12.7702           395.893        3.1927G           21.823M                    34.5566                     2.70604           45.5276k     31.692k   631.515k       215.938M/s    830.369   12.6818k   8.23656M         13.0425    358.547/s 2.95319G/s     21.8237M               34.5578                2.64962        115       41.2329k/s [BEST: throughput=  0.25 GB/s doc_throughput=   395 docs/s instructions=    21823031 cycles=     8064551 branch_miss=   30825 cache_miss=    7263 cache_ref=     22974 items=       115 avg_time=   2789034 ns]
distinct_user_id<rapidjson_insitu>/manual_time           1795019 ns      1863970 ns          378           25.74k           390.324M          7.101k        14.847k    5.16564M              8.17976           618.075       3.19276G          13.2898M                    21.0444                     2.57274           71.0787k    36.3932k   631.515k       335.517M/s   2.74148k   12.5058k   5.47387M         8.66785    557.097/s 3.04948G/s     13.2903M               21.0451                2.42795        115       64.0662k/s [BEST: throughput=  0.39 GB/s doc_throughput=   618 docs/s instructions=    13289835 cycles=     5165642 branch_miss=   25740 cache_miss=    7101 cache_ref=     14847 items=       115 avg_time=   1795018 ns]
distinct_user_id<nlohmann_json>/manual_time              9401427 ns      9489539 ns           77         125.964k            70.795M              14        97.249k     28.455M              45.0583           112.103        3.1899G          75.7389M                    119.932                     2.66171           12.8919k    139.102k   631.515k       64.0605M/s    40.1558    105.41k   29.9858M         47.4823    106.367/s 3.18949G/s     74.3684M               117.762                2.48012        115       12.2322k/s [BEST: throughput=  0.07 GB/s doc_throughput=   112 docs/s instructions=    75738941 cycles=    28454965 branch_miss=  125964 cache_miss=      14 cache_ref=     97249 items=       115 avg_time=   9401426 ns]
find_tweet<simdjson_dom>/manual_time                      385489 ns       457621 ns         1815           3.627k            1.6464G               5        30.757k    1.22504M              1.93985          2.60706k       3.19376G          4.19368M                    6.64067                     3.42329           2.60706k    3.73915k   631.515k       1.52571G/s    3.80716   30.8506k   1.23003M         1.94775   2.59411k/s 3.19084G/s     4.19368M               6.64067                 3.4094          1       2.59411k/s [BEST: throughput=  1.65 GB/s doc_throughput=  2607 docs/s instructions=     4193680 cycles=     1225042 branch_miss=    3627 cache_miss=       5 cache_ref=     30757 items=         1 avg_time=    385489 ns]
find_tweet<simdjson_ondemand>/manual_time                 200446 ns       263046 ns         3492           1.278k           3.16351G               0         8.057k    637.598k              1.00963          5.00939k       3.19398G          2.38923M                    3.78332                     3.74723           5.00939k    1.34435k   631.515k       2.93418G/s   0.189576    8.0536k   639.652k         1.01289   4.98888k/s 3.19115G/s     2.38923M               3.78332                3.73519          1       4.98888k/s [BEST: throughput=  3.16 GB/s doc_throughput=  5009 docs/s instructions=     2389226 cycles=      637598 branch_miss=    1278 cache_miss=       0 cache_ref=      8057 items=         1 avg_time=    200445 ns]
find_tweet<yyjson>/manual_time                            772422 ns       855490 ns          978           9.608k           1.46543G             229         27.33k     1.3764M              2.17953           2.3205k       3.19394G          2.81716M                    4.46096                     2.04675            2.3205k    7.40865k   631.515k       779.703M/s    317.319   19.7057k   1.50964M         2.39051   1.29463k/s 1.95443G/s     2.81764M               4.46172                1.86643          1       1.29463k/s [BEST: throughput=  1.47 GB/s doc_throughput=  2320 docs/s instructions=     2817163 cycles=     1376405 branch_miss=    9608 cache_miss=     229 cache_ref=     27330 items=         1 avg_time=    772422 ns]
find_tweet<yyjson_insitu>/manual_time                     502333 ns       564069 ns         1000           6.647k           1.82585G             801        12.894k    1099.84k              1.74159          2.89123k       3.17988G          2.81684M                    4.46045                     2.56114           2.89123k    7.21171k   631.515k       1.17082G/s      7.574   5.29366k   1.20809M           1.913   1.99071k/s 2.40495G/s      2.8171M               4.46086                2.33187          1       1.99071k/s [BEST: throughput=  1.83 GB/s doc_throughput=  2891 docs/s instructions=     2816839 cycles=     1099838 branch_miss=    6647 cache_miss=     801 cache_ref=     12894 items=         1 avg_time=    502333 ns]
find_tweet<sajson>/manual_time                            674374 ns       741926 ns         1038          10.143k           942.332M              61        13.554k    2.13988M              3.38848          1.49218k       3.19307G          5.72274M                    9.06192                     2.67433           1.49218k      10.45k   631.515k       893.065M/s    30.9663   13.4191k   2.15125M          3.4065   1.48286k/s    3.19G/s     5.72274M               9.06192                2.66019          1       1.48286k/s [BEST: throughput=  0.94 GB/s doc_throughput=  1492 docs/s instructions=     5722739 cycles=     2139876 branch_miss=   10143 cache_miss=      61 cache_ref=     13554 items=         1 avg_time=    674374 ns]
find_tweet<rapidjson>/manual_time                        2771817 ns      2837966 ns          253          30.265k           251.559M         11.905k         21.38k    8.01496M              12.6916           398.342        3.1927G            21.74M                    34.4252                     2.71243            398.342     31.458k   631.515k        217.28M/s    662.676   9.19813k   8.18222M         12.9565    360.774/s 2.95194G/s     21.7407M               34.4262                2.65706          1        360.774/s [BEST: throughput=  0.25 GB/s doc_throughput=   398 docs/s instructions=    21740019 cycles=     8014964 branch_miss=   30265 cache_miss=   11905 cache_ref=     21380 items=         1 avg_time=   2771816 ns]
find_tweet<rapidjson_insitu>/manual_time                 1788592 ns      1854059 ns          380          26.041k           392.035M          6.888k        13.691k    5.14316M              8.14415           620.786        3.1928G          13.2121M                    20.9212                     2.56886            620.786     37.381k   631.515k       336.723M/s   2.58002k   9.72769k   5.45714M         8.64134    559.099/s 3.05108G/s     13.2123M               20.9216                 2.4211          1        559.099/s [BEST: throughput=  0.39 GB/s doc_throughput=   620 docs/s instructions=    13212068 cycles=     5143155 branch_miss=   26041 cache_miss=    6888 cache_ref=     13691 items=         1 avg_time=   1788592 ns]
find_tweet<nlohmann_json>/manual_time                    8294963 ns      8381360 ns           89         100.442k           82.1525M              25        76.122k    24.5197M              38.8268           130.088       3.18972G          65.8686M                    104.302                     2.68635            130.088    130.816k   631.515k       72.6055M/s    41.5281   82.0549k   26.4561M          41.893    120.555/s 3.18941G/s     64.4861M               102.113                2.43748          1        120.555/s [BEST: throughput=  0.08 GB/s doc_throughput=   130 docs/s instructions=    65868558 cycles=    24519697 branch_miss=  100442 cache_miss=      25 cache_ref=     76122 items=         1 avg_time=   8294963 ns]
top_tweet<simdjson_dom>/manual_time                       393197 ns       471162 ns         1664           3.682k           1.61548G              12        33.219k    1.24843M              1.97688          2.55811k       3.19361G          4.23057M                    6.69908                     3.38872           2.55811k    3.87778k   631.515k        1.4958G/s    12.2885   33.2198k   1.25455M         1.98657   2.54325k/s 3.19063G/s     4.23057M               6.69908                3.37219          1       2.54325k/s [BEST: throughput=  1.62 GB/s doc_throughput=  2558 docs/s instructions=     4230567 cycles=     1248427 branch_miss=    3682 cache_miss=      12 cache_ref=     33219 items=         1 avg_time=    393197 ns]
top_tweet<simdjson_ondemand>/manual_time                  248580 ns       312779 ns         2816           1.941k            2.5539G              10        10.187k    789.807k              1.25065          4.04408k       3.19404G          2.91582M                    4.61719                     3.69182           4.04408k    2.08219k   631.515k       2.36601G/s     8.9652   10.1933k   793.296k         1.25618   4.02284k/s 3.19131G/s     2.91582M               4.61719                3.67558          1       4.02284k/s [BEST: throughput=  2.55 GB/s doc_throughput=  4044 docs/s instructions=     2915822 cycles=      789807 branch_miss=    1941 cache_miss=      10 cache_ref=     10187 items=         1 avg_time=    248580 ns]
top_tweet<simdjson_ondemand_forward_only>/manual_time     268829 ns       333843 ns         2602           2.158k           2.36266G               0        11.193k    853.767k              1.35193          3.74125k       3.19416G          3.14128M                     4.9742                     3.67932           3.74125k    2.29947k   631.515k        2.1878G/s   0.396234   11.2634k   857.959k         1.35857   3.71984k/s 3.19147G/s     3.14128M                4.9742                3.66134          1       3.71984k/s [BEST: throughput=  2.36 GB/s doc_throughput=  3741 docs/s instructions=     3141280 cycles=      853767 branch_miss=    2158 cache_miss=       0 cache_ref=     11193 items=         1 avg_time=    268829 ns]
top_tweet<yyjson>/manual_time                             782085 ns       869897 ns          969           9.595k           1.45586G             202        27.477k    1.38564M              2.19416          2.30534k       3.19438G          2.84444M                    4.50415                     2.05279           2.30534k    7.49183k   631.515k       770.069M/s    383.765   22.4447k   1.54058M          2.4395   1.27863k/s 1.96984G/s     2.84512M               4.50523                1.84678          1       1.27863k/s [BEST: throughput=  1.46 GB/s doc_throughput=  2305 docs/s instructions=     2844438 cycles=     1385644 branch_miss=    9595 cache_miss=     202 cache_ref=     27477 items=         1 avg_time=    782085 ns]
top_tweet<yyjson_insitu>/manual_time                      511420 ns       580691 ns         1382           6.964k            1.7873G          1.542k        13.674k    1.12368M              1.77934          2.83018k       3.18023G          2.84432M                    4.50396                     2.53125           2.83018k    7.33406k   631.515k       1.15002G/s    52.2663   8.15258k   1.23642M         1.95787   1.95534k/s 2.41763G/s     2.84458M               4.50438                2.30066          1       1.95534k/s [BEST: throughput=  1.79 GB/s doc_throughput=  2830 docs/s instructions=     2844321 cycles=     1123683 branch_miss=    6964 cache_miss=    1542 cache_ref=     13674 items=         1 avg_time=    511419 ns]
top_tweet<sajson>/manual_time                             678439 ns       750146 ns         1031          10.045k           938.121M               1        13.366k    2.14942M              3.40359          1.48551k       3.19298G          5.75273M                    9.10941                     2.67641           1.48551k    10.5564k   631.515k       887.714M/s    3.02231   13.4391k   2.16431M         3.42718   1.47397k/s 3.19014G/s     5.75273M               9.10941                2.65799          1       1.47397k/s [BEST: throughput=  0.94 GB/s doc_throughput=  1485 docs/s instructions=     5752730 cycles=     2149418 branch_miss=   10045 cache_miss=       1 cache_ref=     13366 items=         1 avg_time=    678438 ns]
top_tweet<rapidjson>/manual_time                         2784303 ns      2855520 ns          253          30.696k           250.297M             158        22.404k    8.05564M              12.7561           396.344       3.19281G          21.7987M                    34.5181                     2.70601            396.344    31.6514k   631.515k       216.305M/s    748.431   10.8722k   8.22313M         13.0213    359.156/s 2.95339G/s     21.7996M               34.5195                2.65101          1        359.156/s [BEST: throughput=  0.25 GB/s doc_throughput=   396 docs/s instructions=    21798678 cycles=     8055641 branch_miss=   30696 cache_miss=     158 cache_ref=     22404 items=         1 avg_time=   2784303 ns]
top_tweet<rapidjson_insitu>/manual_time                  1793384 ns      1863990 ns          377          25.389k           390.614M              7k        14.374k    5.16177M              8.17363           618.535       3.19273G          13.2665M                    21.0074                     2.57014            618.535    36.6895k   631.515k       335.823M/s   2.70462k   11.3414k   5.47462M         8.66903    557.605/s 3.05268G/s     13.2667M               21.0077                2.42331          1        557.605/s [BEST: throughput=  0.39 GB/s doc_throughput=   618 docs/s instructions=    13266482 cycles=     5161771 branch_miss=   25389 cache_miss=    7000 cache_ref=     14374 items=         1 avg_time=   1793383 ns]
top_tweet<nlohmann_json>/manual_time                    11011249 ns     11100615 ns           63         189.638k           57.7707M              62       165.077k    34.8655M              55.2093           91.4795       3.18948G          87.6531M                    138.798                     2.51403            91.4795    194.422k   631.515k       54.6949M/s    64.3016   164.549k   35.1207M         55.6135    90.8162/s 3.18953G/s     88.0696M               139.458                2.50762          1        90.8162/s [BEST: throughput=  0.06 GB/s doc_throughput=    91 docs/s instructions=    87653073 cycles=    34865524 branch_miss=  189638 cache_miss=      62 cache_ref=    165077 items=         1 avg_time=  11011248 ns]
