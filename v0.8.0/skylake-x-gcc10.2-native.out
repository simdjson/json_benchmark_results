run_benchmark: v0.8.0 /home/jkeiser/simdjson_benchmark_results/v0.8.0/skylake-x-gcc10.2-native.json -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native
git reset --hard v0.8.0
HEAD is now at c96ff018 Version 0.8.
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The CXX compiler identification is GNU 10.2.0
-- The C compiler identification is GNU 10.2.0
-- Check for working CXX compiler: /usr/bin/g++-10
-- Check for working CXX compiler: /usr/bin/g++-10 -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Check for working C compiler: /usr/bin/gcc-10
-- Check for working C compiler: /usr/bin/gcc-10 -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed
-- Check if compiler accepts -pthread
-- Check if compiler accepts -pthread - yes
-- Found Threads: TRUE  
-- Looking for fork
-- Looking for fork - found
-- Looking for wait
-- Looking for wait - found
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- Found Git: /usr/bin/git (found version "2.27.0") 
-- git Version: v0.2.1-c96ff018
-- Version: 0.2.1
-- Performing Test HAVE_CXX_FLAG_STD_CXX11
-- Performing Test HAVE_CXX_FLAG_STD_CXX11 - Success
-- Performing Test HAVE_CXX_FLAG_WALL
-- Performing Test HAVE_CXX_FLAG_WALL - Success
-- Performing Test HAVE_CXX_FLAG_WEXTRA
-- Performing Test HAVE_CXX_FLAG_WEXTRA - Success
-- Performing Test HAVE_CXX_FLAG_WSHADOW
-- Performing Test HAVE_CXX_FLAG_WSHADOW - Success
-- Performing Test HAVE_CXX_FLAG_WERROR
-- Performing Test HAVE_CXX_FLAG_WERROR - Success
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32 - Failed
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED - Success
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WD654
-- Performing Test HAVE_CXX_FLAG_WD654 - Failed
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY - Failed
-- Performing Test HAVE_CXX_FLAG_COVERAGE
-- Performing Test HAVE_CXX_FLAG_COVERAGE - Success
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Performing Test USE_BOOST_JSON
-- Performing Test USE_BOOST_JSON - Failed
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Found Python3: /usr/bin/python3.8 (found version "3.8.6") found components: Interpreter 
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 10
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
Scanning dependencies of target benchmark
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_api_internal.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_name.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_name.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_register.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_register.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_runner.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_runner.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/colorprint.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/colorprint.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/commandlineflags.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/commandlineflags.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/complexity.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/complexity.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/console_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/console_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/counter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/counter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/csv_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/csv_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/json_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/json_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/sleep.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sleep.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/statistics.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/statistics.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/string_util.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/string_util.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/sysinfo.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sysinfo.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/timers.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/timers.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -P CMakeFiles/benchmark.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/benchmark.dir/link.txt --verbose=1
/usr/bin/ar qc libbenchmark.a  CMakeFiles/benchmark.dir/benchmark.cc.o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o CMakeFiles/benchmark.dir/benchmark_name.cc.o CMakeFiles/benchmark.dir/benchmark_register.cc.o CMakeFiles/benchmark.dir/benchmark_runner.cc.o CMakeFiles/benchmark.dir/colorprint.cc.o CMakeFiles/benchmark.dir/commandlineflags.cc.o CMakeFiles/benchmark.dir/complexity.cc.o CMakeFiles/benchmark.dir/console_reporter.cc.o CMakeFiles/benchmark.dir/counter.cc.o CMakeFiles/benchmark.dir/csv_reporter.cc.o CMakeFiles/benchmark.dir/json_reporter.cc.o CMakeFiles/benchmark.dir/reporter.cc.o CMakeFiles/benchmark.dir/sleep.cc.o CMakeFiles/benchmark.dir/statistics.cc.o CMakeFiles/benchmark.dir/string_util.cc.o CMakeFiles/benchmark.dir/sysinfo.cc.o CMakeFiles/benchmark.dir/timers.cc.o
/usr/bin/ranlib libbenchmark.a
[ 80%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
Scanning dependencies of target generated-data
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated && /usr/bin/ruby genfeaturejson.rb /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-miss.json ...
[ 80%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/g++-10  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/include  -march=native -O3 -DNDEBUG -fPIC   -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -pthread -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/g++-10 -fPIC -march=native -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.7 -o ../libsimdjson.so.7.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.7.0.0 ../libsimdjson.so.7 ../libsimdjson.so
[ 80%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
Scanning dependencies of target yyjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/gcc-10  -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src  -O3 -DNDEBUG   -o CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o   -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src/yyjson.c
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -P CMakeFiles/yyjson.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -E cmake_link_script CMakeFiles/yyjson.dir/link.txt --verbose=1
/usr/bin/ar qc libyyjson.a  CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o
/usr/bin/ranlib libyyjson.a
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/g++-10  -DRAPIDJSON_HAS_STDSTRING -DSAJSON_UNSORTED_OBJECT_KEYS -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_COMPETITION_NLOHMANN_JSON -DSIMDJSON_COMPETITION_RAPIDJSON -DSIMDJSON_COMPETITION_SAJSON -DSIMDJSON_COMPETITION_YYJSON -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/rapidjson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/sajson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/json  -march=native -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/g++-10  -march=native -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.7.0.0 ../_deps/google_benchmarks/src/libbenchmark.a ../dependencies/libyyjson.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.8.0/skylake-x-gcc10.2-native.json --benchmark_out_format=json
2021-01-24 20:54:23
Running benchmark/bench_ondemand
Run on (4 X 3200 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 1024 KiB (x4)
  L3 Unified 8448 KiB (x1)
Load Average: 1.01, 0.99, 0.70
***WARNING*** CPU scaling is enabled, the benchmark real time measurements may be noisy and will incur extra overhead.
simdjson::dom implementation:      haswell
simdjson::ondemand implementation: haswell
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                  327998 ns       398124 ns         2133           4.332k           1.94079G               0        32.182k    1039.34k              1.64579          3.07324k       3.19414G          3.07044M                    4.86202                     2.95422           307.324k    4.51773k   631.515k       1.79313G/s   0.499766   32.3832k   1046.62k         1.65732    3.0488k/s 3.19094G/s     3.07044M               4.86202                2.93367        100        304.88k/s [BEST: throughput=  1.94 GB/s doc_throughput=  3073 docs/s instructions=     3070441 cycles=     1039342 branch_miss=    4332 cache_miss=       0 cache_ref=     32182 items=       100 avg_time=    327997 ns]
partial_tweets<simdjson_ondemand>/manual_time             241438 ns       299206 ns         2898           2.356k           2.63305G               1        10.096k    766.038k              1.21302          4.16941k       3.19393G          2.23641M                    3.54133                     2.91944           416.941k    2.48155k   631.515k       2.43601G/s   0.975155   10.2326k   770.439k         1.21999   4.14185k/s 3.19105G/s     2.23641M               3.54133                2.90277        100       414.185k/s [BEST: throughput=  2.63 GB/s doc_throughput=  4169 docs/s instructions=     2236405 cycles=      766038 branch_miss=    2356 cache_miss=       1 cache_ref=     10096 items=       100 avg_time=    241437 ns]
partial_tweets<yyjson>/manual_time                        867708 ns       947186 ns          809           9.574k           1.24296G             251        28.586k    1.62278M              2.56966          1.96822k         3.194G          2.90846M                    4.60553                     1.79227           196.822k    7.54234k   631.515k       694.081M/s    587.911   23.4291k   1.79647M          2.8447   1.15246k/s 2.07036G/s     2.90915M               4.60663                1.61937        100       115.246k/s [BEST: throughput=  1.24 GB/s doc_throughput=  1968 docs/s instructions=     2908461 cycles=     1622781 branch_miss=    9574 cache_miss=     251 cache_ref=     28586 items=       100 avg_time=    867708 ns]
partial_tweets<yyjson_insitu>/manual_time                 587757 ns       649717 ns         1199           7.329k           1.48647G              68        14.535k    1.35697M              2.14876          2.35382k       3.19407G          2.90836M                    4.60536                     2.14327           235.382k    7.26919k   631.515k       1024.67M/s    62.5596   8.68843k   1.47396M           2.334   1.70138k/s 2.50776G/s     2.90861M               4.60577                1.97334        100       170.138k/s [BEST: throughput=  1.49 GB/s doc_throughput=  2353 docs/s instructions=     2908357 cycles=     1356972 branch_miss=    7329 cache_miss=      68 cache_ref=     14535 items=       100 avg_time=    587757 ns]
partial_tweets<sajson>/manual_time                        609961 ns       674634 ns         1144          10.081k           1044.35M              46        13.609k    1.93094M              3.05763          1.65372k       3.19324G          6.04845M                    9.57768                     3.13238           165.372k    10.5096k   631.515k       987.374M/s    23.6066     13.47k   1.94601M          3.0815   1.63945k/s 3.19039G/s     6.04845M               9.57768                3.10813        100       163.945k/s [BEST: throughput=  1.04 GB/s doc_throughput=  1653 docs/s instructions=     6048450 cycles=     1930942 branch_miss=   10081 cache_miss=      46 cache_ref=     13609 items=       100 avg_time=    609960 ns]
partial_tweets<rapidjson>/manual_time                    1904048 ns      1968632 ns          368          26.328k           386.205M            1033         23.11k    5.22094M              8.26732           611.554       3.19288G          13.1153M                     20.768                     2.51206           61.1554k    26.2137k   631.515k       316.305M/s    333.639   11.5597k   5.38877M         8.53309    525.197/s 2.83017G/s     13.1164M               20.7697                2.43402        100       52.5197k/s [BEST: throughput=  0.39 GB/s doc_throughput=   611 docs/s instructions=    13115325 cycles=     5220936 branch_miss=   26328 cache_miss=    1033 cache_ref=     23110 items=       100 avg_time=   1904048 ns]
partial_tweets<rapidjson_insitu>/manual_time             1437112 ns      1499371 ns          489          25.878k           494.862M             245        14.805k    4.07461M              6.45211           783.611       3.19291G          9.82283M                    15.5544                     2.41074           78.3611k    25.7438k   631.515k       419.076M/s    175.773   9.34885k    4.1839M         6.62518     695.84/s 2.91132G/s     9.82323M                15.555                2.34786        100        69.584k/s [BEST: throughput=  0.49 GB/s doc_throughput=   783 docs/s instructions=     9822835 cycles=     4074606 branch_miss=   25878 cache_miss=     245 cache_ref=     14805 items=       100 avg_time=   1437111 ns]
partial_tweets<nlohmann_json>/manual_time                9123286 ns      9211116 ns           73          137.55k           72.3164M               9         98.03k    27.8547M              44.1077           114.513       3.18971G          70.6952M                    111.945                       2.538           11.4513k    148.693k   631.515k       66.0135M/s    33.0411   136.273k   29.0932M         46.0689     109.61/s  3.1889G/s     71.1979M               112.741                2.44723        100        10.961k/s [BEST: throughput=  0.07 GB/s doc_throughput=   114 docs/s instructions=    70695217 cycles=    27854691 branch_miss=  137550 cache_miss=       9 cache_ref=     98030 items=       100 avg_time=   9123285 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                 104584990 ns    110817613 ns            7         847.484k           440.543M        6.79697M       6.89477M    332.872M              7.23653           9.57728         3.188G          998.581M                    21.7089                      2.9999           9.57728M    847.265k   45.9988M       419.447M/s   6.80834M   6.89484M   333.457M         7.24926     9.5616/s 3.18838G/s     998.581M               21.7089                2.99463      1000k        9.5616M/s [BEST: throughput=  0.44 GB/s doc_throughput=     9 docs/s instructions=   998581028 cycles=   332871650 branch_miss=  847484 cache_miss= 6796968 cache_ref=   6894771 items=   1000000 avg_time= 104584990 ns]
large_random<simdjson_ondemand>/manual_time             66076923 ns     72283546 ns           11         870.333k             696.7M        3.50931M       3.57243M    210.433M              4.57474           15.1461       3.18723G          651.959M                    14.1734                     3.09818           15.1461M    869.594k   45.9988M       663.891M/s   3.51361M   3.57237M   210.663M         4.57974    15.1339/s 3.18814G/s     651.959M               14.1734                 3.0948      1000k       15.1339M/s [BEST: throughput=  0.70 GB/s doc_throughput=    15 docs/s instructions=   651958684 cycles=   210432635 branch_miss=  870333 cache_miss= 3509308 cache_ref=   3572431 items=   1000000 avg_time=  66076923 ns]
large_random<simdjson_ondemand_unordered>/manual_time   70748161 ns     76962323 ns           10         864.476k           650.703M         3.4956M       3.57226M    225.428M              4.90075           14.1461       3.18893G          651.959M                    14.1734                     2.89209           14.1461M    864.194k   45.9988M       620.056M/s   3.51493M   3.57235M   225.591M         4.90428    14.1346/s 3.18864G/s     651.959M               14.1734                2.89001      1000k       14.1346M/s [BEST: throughput=  0.65 GB/s doc_throughput=    14 docs/s instructions=   651958685 cycles=   225428336 branch_miss=  864476 cache_miss= 3495605 cache_ref=   3572255 items=   1000000 avg_time=  70748160 ns]
large_random<yyjson>/manual_time                       158474642 ns    164711004 ns            4         664.295k           290.407M        4.20082M       4.32185M    363.895M              7.91097           6.31336        2.2974G           942.15M                    20.4821                     2.58907           6.31336M    664.504k   45.9988M       276.813M/s   4.19995M   4.32705M   364.068M         7.91473    6.31016/s 2.29733G/s     942.149M               20.4821                2.58784      1000k       6.31016M/s [BEST: throughput=  0.29 GB/s doc_throughput=     6 docs/s instructions=   942149628 cycles=   363894863 branch_miss=  664295 cache_miss= 4200819 cache_ref=   4321854 items=   1000000 avg_time= 158474642 ns]
large_random<yyjson_insitu>/manual_time                131966891 ns    138236960 ns            5         664.857k           348.771M        3.48274M       3.62965M    320.159M              6.96016           7.58219        2.4275G          936.029M                     20.349                     2.92364           7.58219M    663.205k   45.9988M       332.416M/s    3.4833M   3.62374M   320.411M         6.96565    7.57766/s 2.42797G/s     936.029M                20.349                2.92134      1000k       7.57766M/s [BEST: throughput=  0.35 GB/s doc_throughput=     7 docs/s instructions=   936028648 cycles=   320158648 branch_miss=  664857 cache_miss= 3482736 cache_ref=   3629645 items=   1000000 avg_time= 131966890 ns]
large_random<sajson>/manual_time                       104612966 ns    110885003 ns            7         603.767k           439.829M        5.43861M       5.57622M    333.521M              7.25064           9.56175       3.18904G          1066.99M                    23.1961                     3.19918           9.56175M    603.933k   45.9988M       419.335M/s   5.46189M   5.57638M   333.586M         7.25206    9.55904/s 3.18876G/s     1066.99M               23.1961                3.19855      1000k       9.55904M/s [BEST: throughput=  0.44 GB/s doc_throughput=     9 docs/s instructions=  1066991832 cycles=   333520583 branch_miss=  603767 cache_miss= 5438613 cache_ref=   5576223 items=   1000000 avg_time= 104612966 ns]
large_random<rapidjson>/manual_time                    209429953 ns    215710257 ns            4         664.582k           229.763M        4.36925M        4.9026M    569.693M               12.385           4.99499       2.84561G          1.66512G                    36.1993                     2.92284           4.99499M    669.905k   45.9988M       209.463M/s   4.07639M   4.66049M   574.361M         12.4864    4.77487/s  2.7425G/s     1.66513G               36.1995                 2.8991      1000k       4.77487M/s [BEST: throughput=  0.23 GB/s doc_throughput=     4 docs/s instructions=  1665122063 cycles=   569692772 branch_miss=  664582 cache_miss= 4369245 cache_ref=   4902599 items=   1000000 avg_time= 209429953 ns]
large_random<rapidjson_lossless>/manual_time           241945109 ns    248229808 ns            3         597.583k             196.5M        4.36703M       4.91023M    677.773M              14.7346           4.27184       2.89534G          2.04909G                    44.5466                     3.02327           4.27184M    600.541k   45.9988M       181.313M/s   4.10548M   4.69289M   680.809M         14.8006    4.13317/s  2.8139G/s      2.0491G               44.5468                3.00979      1000k       4.13317M/s [BEST: throughput=  0.20 GB/s doc_throughput=     4 docs/s instructions=  2049087459 cycles=   677772950 branch_miss=  597583 cache_miss= 4367030 cache_ref=   4910235 items=   1000000 avg_time= 241945109 ns]
large_random<rapidjson_insitu>/manual_time             189944364 ns    196232861 ns            4         619.117k           254.973M        5.05723M       5.61392M    506.652M              11.0145           5.54303       2.80839G          1.49712G                     32.547                     2.95493           5.54303M    620.637k   45.9988M       230.951M/s   4.77803M   5.36823M   512.337M         11.1381     5.2647/s  2.6973G/s     1.49713G               32.5472                2.92216      1000k        5.2647M/s [BEST: throughput=  0.25 GB/s doc_throughput=     5 docs/s instructions=  1497121885 cycles=   506651950 branch_miss=  619117 cache_miss= 5057235 cache_ref=   5613920 items=   1000000 avg_time= 189944364 ns]
large_random<nlohmann_json>/manual_time               1433909771 ns   1440112821 ns            1         4.50386M           32.0793M        30.3931M       30.8891M    4.55797G              99.0889          0.697394        3.1787G          11.9244G                    259.232                     2.61616           697.394k    4.50386M   45.9988M       30.5932M/s   30.3931M   30.8891M   4.55797G         99.0889   0.697394/s  3.1787G/s     11.9244G               259.232                2.61616      1000k       697.394k/s [BEST: throughput=  0.03 GB/s doc_throughput=     0 docs/s instructions= 11924359094 cycles=  4557967659 branch_miss= 4503861 cache_miss=30393051 cache_ref=  30889146 items=   1000000 avg_time=1433909771 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                       100901923 ns    119979588 ns            7         448.733k           1.36372G        10.2073M       10.3147M    321.053M              2.33825           9.93205       3.18872G           972.65M                    7.08386                     3.02956           5.20726M    449.074k   137.305M       1.26732G/s    10.243M    10.315M    321.74M         2.34325    9.91061/s 3.18865G/s      972.65M               7.08386                3.02309   524.288k       5.19602M/s [BEST: throughput=  1.36 GB/s doc_throughput=     9 docs/s instructions=   972650011 cycles=   321053166 branch_miss=  448733 cache_miss=10207284 cache_ref=  10314732 items=    524288 avg_time= 100901922 ns]
kostya<simdjson_ondemand>/manual_time                   69743574 ns     88775548 ns           10          472.31k           1.97099G        6.43492M       6.47087M    222.152M              1.61794           14.3548       3.18895G          700.216M                    5.09972                     3.15198           7.52607M    468.937k   137.305M       1.83351G/s   6.43306M   6.47089M   222.387M         1.61966    14.3382/s 3.18864G/s     700.216M               5.09972                3.14864   524.288k       7.51737M/s [BEST: throughput=  1.97 GB/s doc_throughput=    14 docs/s instructions=   700216390 cycles=   222151556 branch_miss=  472310 cache_miss= 6434918 cache_ref=   6470872 items=    524288 avg_time=  69743574 ns]
kostya<yyjson>/manual_time                             267268389 ns    286378076 ns            3         416.686k           514.018M        8.48823M       8.71028M    617.514M              4.49739           3.74362       2.31174G          983.521M                    7.16304                     1.59271           1.96274M    416.249k   137.305M       489.935M/s    8.4977M   8.65564M    617.63M         4.49823    3.74156/s  2.3109G/s     983.521M               7.16304                1.59241   524.288k       1.96165M/s [BEST: throughput=  0.51 GB/s doc_throughput=     3 docs/s instructions=   983520983 cycles=   617513525 branch_miss=  416686 cache_miss= 8488231 cache_ref=   8710281 items=    524288 avg_time= 267268388 ns]
kostya<yyjson_insitu>/manual_time                      188121604 ns    207223822 ns            4         412.922k           730.039M        6.35084M       6.49079M    486.785M              3.54529           5.31691        2.5882G          965.251M                    7.02998                     1.98291           2.78759M    412.964k   137.305M       696.062M/s   6.34858M   6.51928M   486.884M           3.546    5.31571/s 2.58813G/s     965.251M               7.02998                1.98251   524.288k       2.78696M/s [BEST: throughput=  0.73 GB/s doc_throughput=     5 docs/s instructions=   965251189 cycles=   486785447 branch_miss=  412922 cache_miss= 6350839 cache_ref=   6490791 items=    524288 avg_time= 188121603 ns]
kostya<sajson>/manual_time                             156509742 ns    175641756 ns            4         370.726k           877.629M        8.45687M        8.5452M     498.92M              3.63366           6.39182       3.18901G          1.60357G                    11.6789                     3.21408           3.35116M     370.19k   137.305M       836.652M/s   8.49146M   8.54514M   499.081M         3.63483    6.38938/s 3.18881G/s     1.60357G               11.6789                3.21304   524.288k       3.34987M/s [BEST: throughput=  0.88 GB/s doc_throughput=     6 docs/s instructions=  1603566988 cycles=   498919577 branch_miss=  370726 cache_miss= 8456871 cache_ref=   8545200 items=    524288 avg_time= 156509742 ns]
kostya<rapidjson>/manual_time                          293962779 ns    313093284 ns            2         1009.67k           472.615M        5.25132M       5.75097M    828.225M              6.03201           3.44208       2.85082G          2.29089G                    16.6847                     2.76602           1.80464M    1014.84k   137.305M       445.445M/s   5.12692M   5.64267M   830.444M         6.04817    3.40179/s   2.825G/s     2.29089G               16.6847                2.75863   524.288k       1.78352M/s [BEST: throughput=  0.47 GB/s doc_throughput=     3 docs/s instructions=  2290888283 cycles=   828225201 branch_miss= 1009672 cache_miss= 5251317 cache_ref=   5750970 items=    524288 avg_time= 293962779 ns]
kostya<rapidjson_lossless>/manual_time                 319665724 ns    338817530 ns            2          1046.9k           433.769M        5.25546M       5.75185M    911.482M              6.63837           3.15916       2.87952G          2.50793G                    18.2654                     2.75149           1.65631M    1006.49k   137.305M       409.629M/s   5.12695M   5.64276M   912.886M          6.6486    3.12827/s 2.85575G/s     2.50794G               18.2654                2.74726   524.288k       1.64011M/s [BEST: throughput=  0.43 GB/s doc_throughput=     3 docs/s instructions=  2507934780 cycles=   911481591 branch_miss= 1046898 cache_miss= 5255456 cache_ref=   5751849 items=    524288 avg_time= 319665723 ns]
kostya<rapidjson_insitu>/manual_time                   285022062 ns    304204505 ns            2         1020.29k           487.289M        7.38477M       7.92525M     800.59M              5.83074           3.54895       2.84125G          2.04115G                    14.8658                     2.54956           1.86067M    1015.19k   137.305M       459.418M/s   7.25865M   7.81787M   802.537M         5.84492     3.5085/s  2.8157G/s     2.04115G               14.8658                2.54338   524.288k       1.83946M/s [BEST: throughput=  0.49 GB/s doc_throughput=     3 docs/s instructions=  2041153268 cycles=   800589646 branch_miss= 1020287 cache_miss= 7384767 cache_ref=   7925252 items=    524288 avg_time= 285022061 ns]
kostya<nlohmann_json>/manual_time                     1934250057 ns   1953296549 ns            1         4.12475M           70.9862M        44.6368M       45.2325M    6.16883G              44.9279          0.516996       3.18926G          15.1099G                    110.046                     2.44939           271.055k    4.12475M   137.305M       67.6977M/s   44.6368M   45.2325M   6.16883G         44.9279   0.516996/s 3.18926G/s     15.1099G               110.046                2.44939   524.288k       271.055k/s [BEST: throughput=  0.07 GB/s doc_throughput=     0 docs/s instructions= 15109883704 cycles=  6168827195 branch_miss= 4124753 cache_miss=44636798 cache_ref=  45232496 items=    524288 avg_time=1934250057 ns]
distinct_user_id<simdjson_dom>/manual_time                326243 ns       405014 ns         2146           4.345k           1.95401G               0        33.956k     1032.3k              1.63464          3.09416k        3.1941G          3.01136M                    4.76848                     2.91714           355.828k    4.46908k   631.515k       1.80278G/s   0.411463   33.9629k   1041.02k         1.64845    3.0652k/s 3.19093G/s     3.01137M               4.76848                2.89271        115       352.498k/s [BEST: throughput=  1.95 GB/s doc_throughput=  3094 docs/s instructions=     3011365 cycles=     1032301 branch_miss=    4345 cache_miss=       0 cache_ref=     33956 items=       115 avg_time=    326243 ns]
distinct_user_id<simdjson_ondemand>/manual_time           225179 ns       288703 ns         3109           2.125k            2.8248G               0         8.162k    714.178k               1.1309          4.47305k       3.19456G          2.19251M                    3.47183                     3.06998           514.401k    2.26334k   631.515k       2.61189G/s   0.720167   8.25959k   718.705k         1.13806   4.44091k/s  3.1917G/s     2.19251M               3.47183                3.05064        115       510.704k/s [BEST: throughput=  2.82 GB/s doc_throughput=  4473 docs/s instructions=     2192511 cycles=      714178 branch_miss=    2125 cache_miss=       0 cache_ref=      8162 items=       115 avg_time=    225179 ns]
distinct_user_id<yyjson>/manual_time                      763839 ns       853087 ns         1000           6.552k            1.3228G          7.112k        27.294k    1.52465M              2.41427          2.09465k       3.19361G          2.87509M                    4.55269                     1.88574           240.885k     7.4317k   631.515k       788.464M/s   2.24084k   24.5224k   1.72319M         2.72865   1.30918k/s 2.25595G/s     2.87529M               4.55301                1.66859        115       150.555k/s [BEST: throughput=  1.32 GB/s doc_throughput=  2094 docs/s instructions=     2875095 cycles=     1524650 branch_miss=    6552 cache_miss=    7112 cache_ref=     27294 items=       115 avg_time=    763839 ns]
distinct_user_id<yyjson_insitu>/manual_time               586235 ns       657863 ns         1204           7.161k           1.49338G          1.401k         13.72k    1.34542M              2.13047          2.36475k       3.18159G          2.87458M                    4.55188                     2.13656           271.947k    7.42079k   631.515k       1027.34M/s    64.0772   8.83221k   1.46928M          2.3266    1.7058k/s 2.50631G/s     2.87484M               4.55229                1.95663        115       196.167k/s [BEST: throughput=  1.49 GB/s doc_throughput=  2364 docs/s instructions=     2874578 cycles=     1345422 branch_miss=    7161 cache_miss=    1401 cache_ref=     13720 items=       115 avg_time=    586234 ns]
distinct_user_id<sajson>/manual_time                      605100 ns       677675 ns         1154          10.125k            1051.6M               0        13.365k    1.91777M              3.03678          1.66521k       3.19349G          5.98102M                     9.4709                     3.11873           191.499k    10.5052k   631.515k       995.306M/s    1.58146   13.4048k    1.9303M         3.05661   1.65262k/s 3.19005G/s     5.98102M                9.4709                 3.0985        115       190.051k/s [BEST: throughput=  1.05 GB/s doc_throughput=  1665 docs/s instructions=     5981016 cycles=     1917771 branch_miss=   10125 cache_miss=       0 cache_ref=     13365 items=       115 avg_time=    605099 ns]
distinct_user_id<rapidjson>/manual_time                  1894267 ns      1967293 ns          373          26.148k           388.363M             285        23.216k    5.19201M              8.22152            614.97       3.19293G          13.0566M                     20.675                     2.51474           70.7215k    26.1785k   631.515k       317.938M/s    613.306   12.0779k    5.3741M         8.50986    527.909/s 2.83704G/s     13.0574M               20.6763                2.42969        115       60.7095k/s [BEST: throughput=  0.39 GB/s doc_throughput=   614 docs/s instructions=    13056582 cycles=     5192014 branch_miss=   26148 cache_miss=     285 cache_ref=     23216 items=       115 avg_time=   1894266 ns]
distinct_user_id<rapidjson_insitu>/manual_time           1410193 ns      1481085 ns          523          25.562k           496.852M             793        14.819k    4.05845M              6.42653           786.762       3.19303G          9.77497M                    15.4786                     2.40855           90.4776k    25.7869k   631.515k       427.076M/s   1.38662k   11.2352k   4.16706M         6.59852    709.123/s 2.95496G/s     9.77529M               15.4791                2.34584        115       81.5491k/s [BEST: throughput=  0.50 GB/s doc_throughput=   786 docs/s instructions=     9774972 cycles=     4058452 branch_miss=   25562 cache_miss=     793 cache_ref=     14819 items=       115 avg_time=   1410192 ns]
distinct_user_id<nlohmann_json>/manual_time              9054555 ns      9146364 ns           84         114.408k           78.3554M              20        97.832k    25.7055M              40.7045           124.075       3.18942G          66.1456M                    104.741                      2.5732           14.2687k    180.459k   631.515k       66.5145M/s    22.6071    106.29k   28.8785M         45.7289    110.442/s 3.18939G/s     64.7998M                102.61                2.24388        115       12.7008k/s [BEST: throughput=  0.08 GB/s doc_throughput=   124 docs/s instructions=    66145589 cycles=    25705531 branch_miss=  114408 cache_miss=      20 cache_ref=     97832 items=       115 avg_time=   9054555 ns]
find_tweet<simdjson_dom>/manual_time                      311750 ns       387705 ns         2245            4.19k           2.04283G              86         30.55k    987.382k              1.56351           3.2348k       3.19398G          2.93033M                    4.64015                     2.96777            3.2348k    4.31579k   631.515k       1.88659G/s    91.7479   30.5834k   994.806k         1.57527    3.2077k/s 3.19104G/s     2.93033M               4.64015                2.94563          1        3.2077k/s [BEST: throughput=  2.04 GB/s doc_throughput=  3234 docs/s instructions=     2930326 cycles=      987382 branch_miss=    4190 cache_miss=      86 cache_ref=     30550 items=         1 avg_time=    311749 ns]
find_tweet<simdjson_ondemand>/manual_time                 152275 ns       218272 ns         4598           1.328k           4.18324G               0         7.616k    482.344k             0.763789          6.62414k       3.19511G          1.56921M                    2.48484                      3.2533           6.62414k    1.38315k   631.515k       3.86238G/s  0.0173989   7.65928k    486.17k        0.769848   6.56707k/s 3.19271G/s     1.56921M               2.48484                 3.2277          1       6.56707k/s [BEST: throughput=  4.18 GB/s doc_throughput=  6624 docs/s instructions=     1569211 cycles=      482344 branch_miss=    1328 cache_miss=       0 cache_ref=      7616 items=         1 avg_time=    152274 ns]
find_tweet<yyjson>/manual_time                            847721 ns       933467 ns          885           9.409k           1.27241G             183        27.269k    1.58536M               2.5104          2.01485k       3.19426G          2.82414M                    4.47201                     1.78139           2.01485k     7.3491k   631.515k       710.446M/s    328.955   19.6294k   1.73607M         2.74906   1.17963k/s 2.04793G/s     2.82462M               4.47277                1.62702          1       1.17963k/s [BEST: throughput=  1.27 GB/s doc_throughput=  2014 docs/s instructions=     2824142 cycles=     1585358 branch_miss=    9409 cache_miss=     183 cache_ref=     27269 items=         1 avg_time=    847720 ns]
find_tweet<yyjson_insitu>/manual_time                     570627 ns       634970 ns         1237           7.043k           1.52922G             146        14.051k    1.31899M              2.08861          2.42151k       3.19393G          2.82402M                    4.47182                     2.14106           2.42151k    7.10405k   631.515k       1055.44M/s    6.10509    4.9798k   1.42004M         2.24862   1.75246k/s 2.48856G/s     2.82429M               4.47224                1.98888          1       1.75246k/s [BEST: throughput=  1.53 GB/s doc_throughput=  2421 docs/s instructions=     2824023 cycles=     1318986 branch_miss=    7043 cache_miss=     146 cache_ref=     14051 items=         1 avg_time=    570626 ns]
find_tweet<sajson>/manual_time                            593060 ns       663788 ns         1180           9.871k            1074.4M               0        12.792k    1.87685M              2.97198          1.70131k        3.1931G          5.88887M                    9.32499                     3.13764           1.70131k    10.3263k   631.515k       1015.51M/s    3.20169   12.8107k   1.89188M         2.99578   1.68617k/s 3.19003G/s     5.88887M               9.32499                3.11271          1       1.68617k/s [BEST: throughput=  1.07 GB/s doc_throughput=  1701 docs/s instructions=     5888871 cycles=     1876849 branch_miss=    9871 cache_miss=       0 cache_ref=     12792 items=         1 avg_time=    593060 ns]
find_tweet<rapidjson>/manual_time                        1875628 ns      1943584 ns          376          26.007k           391.107M         11.949k        21.221k    5.15544M              8.16361           619.315       3.19284G          12.9892M                    20.5683                     2.51951            619.315    26.0563k   631.515k       321.098M/s    454.638   8.44804k   5.31503M         8.41631    533.155/s 2.83373G/s     12.9898M               20.5693                2.44398          1        533.155/s [BEST: throughput=  0.39 GB/s doc_throughput=   619 docs/s instructions=    12989184 cycles=     5155441 branch_miss=   26007 cache_miss=   11949 cache_ref=     21221 items=         1 avg_time=   1875627 ns]
find_tweet<rapidjson_insitu>/manual_time                 1396134 ns      1462825 ns          531          25.743k           500.066M             218        14.648k    4.03223M              6.38501           791.852       3.19293G          9.71751M                    15.3876                     2.40996            791.852    25.6453k   631.515k       431.377M/s   1.23412k   8.02147k   4.12109M         6.52572    716.263/s 2.95179G/s     9.71783M               15.3881                2.35807          1        716.263/s [BEST: throughput=  0.50 GB/s doc_throughput=   791 docs/s instructions=     9717513 cycles=     4032228 branch_miss=   25743 cache_miss=     218 cache_ref=     14648 items=         1 avg_time=   1396134 ns]
find_tweet<nlohmann_json>/manual_time                    8142098 ns      8231559 ns          100          90.677k           92.4404M             586        77.053k    21.7932M              34.5094           146.379       3.19006G          56.5325M                    89.5189                     2.59405            146.379    193.921k   631.515k       73.9686M/s      16.36   82.1576k   25.9686M         41.1211    122.818/s 3.18942G/s     55.2016M               87.4114                 2.1257          1        122.818/s [BEST: throughput=  0.09 GB/s doc_throughput=   146 docs/s instructions=    56532532 cycles=    21793183 branch_miss=   90677 cache_miss=     586 cache_ref=     77053 items=         1 avg_time=   8142097 ns]
top_tweet<simdjson_dom>/manual_time                       319203 ns       399935 ns         2193           4.251k           1.99541G               9        32.594k    1010.86k               1.6007          3.15972k       3.19404G          2.96449M                    4.69426                     2.93263           3.15972k    4.41397k   631.515k       1.84254G/s    8.55084   32.7771k   1018.23k         1.61236    3.1328k/s  3.1899G/s      2.9645M               4.69426                2.91143          1        3.1328k/s [BEST: throughput=  2.00 GB/s doc_throughput=  3159 docs/s instructions=     2964495 cycles=     1010864 branch_miss=    4251 cache_miss=       9 cache_ref=     32594 items=         1 avg_time=    319203 ns]
top_tweet<simdjson_ondemand>/manual_time                  224940 ns       291410 ns         3116           2.305k           2.82776G               0         8.807k    713.366k              1.12961          4.47774k       3.19427G          2.19171M                    3.47056                     3.07235           4.47774k    2.39066k   631.515k       2.61467G/s  0.0102696    8.8562k   717.912k         1.13681   4.44563k/s 3.19157G/s     2.19171M               3.47056                 3.0529          1       4.44563k/s [BEST: throughput=  2.83 GB/s doc_throughput=  4477 docs/s instructions=     2191712 cycles=      713366 branch_miss=    2305 cache_miss=       0 cache_ref=      8807 items=         1 avg_time=    224939 ns]
top_tweet<simdjson_ondemand_forward_only>/manual_time     217673 ns       285419 ns         3214           2.241k           2.92573G               0         9.315k    689.543k              1.09189          4.63287k       3.19456G          2.21895M                    3.51369                       3.218           4.63287k    2.35644k   631.515k       2.70197G/s  0.0164904   9.33904k    694.69k         1.10004   4.59406k/s 3.19144G/s     2.21895M               3.51369                3.19415          1       4.59406k/s [BEST: throughput=  2.93 GB/s doc_throughput=  4632 docs/s instructions=     2218946 cycles=      689543 branch_miss=    2241 cache_miss=       0 cache_ref=      9315 items=         1 avg_time=    217672 ns]
top_tweet<yyjson>/manual_time                             858585 ns       948664 ns          888           9.805k           1.25309G             226        27.367k    1.60957M              2.54874          1.98426k       3.19381G          2.84505M                    4.50512                     1.76759           1.98426k    7.47966k   631.515k       701.456M/s    392.452   22.4362k   1.76968M         2.80227   1.16471k/s 2.06116G/s      2.8455M               4.50584                1.60792          1       1.16471k/s [BEST: throughput=  1.25 GB/s doc_throughput=  1984 docs/s instructions=     2845054 cycles=     1609568 branch_miss=    9805 cache_miss=     226 cache_ref=     27367 items=         1 avg_time=    858584 ns]
top_tweet<yyjson_insitu>/manual_time                      580480 ns       651723 ns         1217           6.825k           1.50984G          1.453k        13.399k    1.32753M              2.10214          2.39082k       3.17389G           2.8447M                    4.50457                     2.14285           2.39082k     7.3041k   631.515k       1037.52M/s    46.6023   7.77599k   1.45102M         2.29768   1.72271k/s 2.49969G/s     2.84496M               4.50498                1.96067          1       1.72271k/s [BEST: throughput=  1.51 GB/s doc_throughput=  2390 docs/s instructions=     2844702 cycles=     1327534 branch_miss=    6825 cache_miss=    1453 cache_ref=     13399 items=         1 avg_time=    580479 ns]
top_tweet<sajson>/manual_time                             596267 ns       670631 ns         1172           9.895k           1068.94M               0        13.178k    1.88663M              2.98747          1.69266k       3.19343G          5.91604M                    9.36802                     3.13577           1.69266k    10.3728k   631.515k       1010.05M/s    1.99744   13.1728k   1.90238M         3.01241    1.6771k/s 3.19049G/s     5.91604M               9.36802                 3.1098          1        1.6771k/s [BEST: throughput=  1.07 GB/s doc_throughput=  1692 docs/s instructions=     5916043 cycles=     1886634 branch_miss=    9895 cache_miss=       0 cache_ref=     13178 items=         1 avg_time=    596266 ns]
top_tweet<rapidjson>/manual_time                         1890793 ns      1964142 ns          373          26.136k           386.989M             649        22.438k    5.21032M              8.25051           612.795       3.19286G          13.0388M                    20.6469                     2.50249            612.795      26.01k   631.515k       318.522M/s    553.284   10.3496k   5.36168M         8.49019    528.879/s 2.83568G/s     13.0397M               20.6483                2.43202          1        528.879/s [BEST: throughput=  0.39 GB/s doc_throughput=   612 docs/s instructions=    13038798 cycles=     5210322 branch_miss=   26136 cache_miss=     649 cache_ref=     22438 items=         1 avg_time=   1890793 ns]
top_tweet<rapidjson_insitu>/manual_time                  1404496 ns      1476710 ns          524          25.459k           498.492M          3.146k        14.205k    4.04493M              6.40513           789.359        3.1929G          9.75923M                    15.4537                      2.4127            789.359     25.711k   631.515k       428.808M/s   1.33248k   9.83099k   4.14891M         6.56977    711.999/s 2.95402G/s     9.75954M               15.4542                2.35231          1        711.999/s [BEST: throughput=  0.50 GB/s doc_throughput=   789 docs/s instructions=     9759227 cycles=     4044934 branch_miss=   25459 cache_miss=    3146 cache_ref=     14205 items=         1 avg_time=   1404495 ns]
top_tweet<nlohmann_json>/manual_time                    10165295 ns     10256637 ns           69         182.045k           62.4386M              16       164.378k    32.2639M              51.0897           98.8711       3.18997G          78.2581M                    123.921                     2.42556            98.8711    185.964k   631.515k       59.2466M/s    31.6232   164.025k   32.4142M         51.3277    98.3739/s 3.18871G/s     78.4229M               124.182                 2.4194          1        98.3739/s [BEST: throughput=  0.06 GB/s doc_throughput=    98 docs/s instructions=    78258113 cycles=    32263936 branch_miss=  182045 cache_miss=      16 cache_ref=    164378 items=         1 avg_time=  10165294 ns]
