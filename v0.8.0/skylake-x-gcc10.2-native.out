run_benchmark: v0.8.0 /home/jkeiser/simdjson_benchmark_results/v0.8.0/skylake-x-gcc10.2-native.json -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native
git reset --hard v0.8.0
HEAD is now at c96ff018 Version 0.8.
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The CXX compiler identification is GNU 10.2.0
-- The C compiler identification is GNU 10.2.0
-- Check for working CXX compiler: /usr/bin/g++-10
-- Check for working CXX compiler: /usr/bin/g++-10 -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Check for working C compiler: /usr/bin/gcc-10
-- Check for working C compiler: /usr/bin/gcc-10 -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed
-- Check if compiler accepts -pthread
-- Check if compiler accepts -pthread - yes
-- Found Threads: TRUE  
-- Looking for fork
-- Looking for fork - found
-- Looking for wait
-- Looking for wait - found
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- Found Git: /usr/bin/git (found version "2.27.0") 
-- git Version: v0.2.1-c96ff018
-- Version: 0.2.1
-- Performing Test HAVE_CXX_FLAG_STD_CXX11
-- Performing Test HAVE_CXX_FLAG_STD_CXX11 - Success
-- Performing Test HAVE_CXX_FLAG_WALL
-- Performing Test HAVE_CXX_FLAG_WALL - Success
-- Performing Test HAVE_CXX_FLAG_WEXTRA
-- Performing Test HAVE_CXX_FLAG_WEXTRA - Success
-- Performing Test HAVE_CXX_FLAG_WSHADOW
-- Performing Test HAVE_CXX_FLAG_WSHADOW - Success
-- Performing Test HAVE_CXX_FLAG_WERROR
-- Performing Test HAVE_CXX_FLAG_WERROR - Success
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32 - Failed
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED - Success
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WD654
-- Performing Test HAVE_CXX_FLAG_WD654 - Failed
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY - Failed
-- Performing Test HAVE_CXX_FLAG_COVERAGE
-- Performing Test HAVE_CXX_FLAG_COVERAGE - Success
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Performing Test USE_BOOST_JSON
-- Performing Test USE_BOOST_JSON - Failed
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Found Python3: /usr/bin/python3.8 (found version "3.8.6") found components: Interpreter 
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 10
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
Scanning dependencies of target benchmark
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_api_internal.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_name.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_name.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_register.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_register.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_runner.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_runner.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/colorprint.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/colorprint.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/commandlineflags.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/commandlineflags.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/complexity.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/complexity.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/console_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/console_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/counter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/counter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/csv_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/csv_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/json_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/json_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/sleep.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sleep.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/statistics.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/statistics.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/string_util.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/string_util.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/sysinfo.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sysinfo.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/timers.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/timers.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -P CMakeFiles/benchmark.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/benchmark.dir/link.txt --verbose=1
/usr/bin/ar qc libbenchmark.a  CMakeFiles/benchmark.dir/benchmark.cc.o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o CMakeFiles/benchmark.dir/benchmark_name.cc.o CMakeFiles/benchmark.dir/benchmark_register.cc.o CMakeFiles/benchmark.dir/benchmark_runner.cc.o CMakeFiles/benchmark.dir/colorprint.cc.o CMakeFiles/benchmark.dir/commandlineflags.cc.o CMakeFiles/benchmark.dir/complexity.cc.o CMakeFiles/benchmark.dir/console_reporter.cc.o CMakeFiles/benchmark.dir/counter.cc.o CMakeFiles/benchmark.dir/csv_reporter.cc.o CMakeFiles/benchmark.dir/json_reporter.cc.o CMakeFiles/benchmark.dir/reporter.cc.o CMakeFiles/benchmark.dir/sleep.cc.o CMakeFiles/benchmark.dir/statistics.cc.o CMakeFiles/benchmark.dir/string_util.cc.o CMakeFiles/benchmark.dir/sysinfo.cc.o CMakeFiles/benchmark.dir/timers.cc.o
/usr/bin/ranlib libbenchmark.a
[ 80%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
Scanning dependencies of target generated-data
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated && /usr/bin/ruby genfeaturejson.rb /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-miss.json ...
[ 80%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/g++-10  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/include  -march=native -O3 -DNDEBUG -fPIC   -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -pthread -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/g++-10 -fPIC -march=native -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.7 -o ../libsimdjson.so.7.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.7.0.0 ../libsimdjson.so.7 ../libsimdjson.so
[ 80%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
Scanning dependencies of target yyjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/gcc-10  -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src  -O3 -DNDEBUG   -o CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o   -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src/yyjson.c
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -P CMakeFiles/yyjson.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -E cmake_link_script CMakeFiles/yyjson.dir/link.txt --verbose=1
/usr/bin/ar qc libyyjson.a  CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o
/usr/bin/ranlib libyyjson.a
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/g++-10  -DRAPIDJSON_HAS_STDSTRING -DSAJSON_UNSORTED_OBJECT_KEYS -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_COMPETITION_NLOHMANN_JSON -DSIMDJSON_COMPETITION_RAPIDJSON -DSIMDJSON_COMPETITION_SAJSON -DSIMDJSON_COMPETITION_YYJSON -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/rapidjson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/sajson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/json  -march=native -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/g++-10  -march=native -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.7.0.0 ../_deps/google_benchmarks/src/libbenchmark.a ../dependencies/libyyjson.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.8.0/skylake-x-gcc10.2-native.json --benchmark_out_format=json
2021-01-25 01:14:29
Running benchmark/bench_ondemand
Run on (4 X 3200 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 1024 KiB (x4)
  L3 Unified 8448 KiB (x1)
Load Average: 1.10, 1.03, 0.89
***WARNING*** CPU scaling is enabled, the benchmark real time measurements may be noisy and will incur extra overhead.
simdjson::dom implementation:      haswell
simdjson::ondemand implementation: haswell

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                  325289 ns       393328 ns         2156           4.259k            1.9535G               0        32.722k    1032.48k              1.63492          3.09336k       3.19382G          3.07044M                    4.86202                     2.97386           309.336k    4.42337k   631.515k       1.80807G/s   0.606215   32.7575k   1038.06k         1.64376   3.07419k/s 3.19119G/s     3.07044M               4.86202                2.95787        100       307.419k/s [BEST: throughput=  1.95 GB/s doc_throughput=  3093 docs/s instructions=     3070441 cycles=     1032476 branch_miss=    4259 cache_miss=       0 cache_ref=     32722 items=       100 avg_time=    325288 ns]
partial_tweets<simdjson_ondemand>/manual_time             241146 ns       296013 ns         2906           2.339k           2.63626G               0        12.431k     765.31k              1.21186          4.17449k       3.19478G          2.23641M                    3.54133                     2.92222           417.449k    2.47688k   631.515k       2.43896G/s  0.0640055   12.4642k   769.696k         1.21881   4.14687k/s 3.19183G/s     2.23641M               3.54133                2.90557        100       414.687k/s [BEST: throughput=  2.64 GB/s doc_throughput=  4174 docs/s instructions=     2236405 cycles=      765310 branch_miss=    2339 cache_miss=       0 cache_ref=     12431 items=       100 avg_time=    241145 ns]
partial_tweets<yyjson>/manual_time                        854637 ns       933490 ns          818           9.466k           1.24636G             183        28.008k    1.61828M              2.56253          1.97361k       3.19384G          2.90846M                    4.60553                     1.79726           197.361k    7.51023k   631.515k       704.696M/s     641.48   25.7323k   1.77447M         2.80987   1.17009k/s 2.07629G/s     2.90915M               4.60663                1.63945        100       117.009k/s [BEST: throughput=  1.25 GB/s doc_throughput=  1973 docs/s instructions=     2908461 cycles=     1618278 branch_miss=    9466 cache_miss=     183 cache_ref=     28008 items=       100 avg_time=    854637 ns]
partial_tweets<yyjson_insitu>/manual_time                 581123 ns       644985 ns         1214           6.866k            1.4859G          2.194k        14.263k    1.34768M              2.13404          2.35292k       3.17097G          2.90835M                    4.60536                     2.15805           235.292k    7.30147k   631.515k       1036.37M/s    97.7932   11.8168k   1.46237M         2.31566   1.72081k/s 2.51646G/s     2.90861M               4.60577                1.98897        100       172.081k/s [BEST: throughput=  1.49 GB/s doc_throughput=  2352 docs/s instructions=     2908352 cycles=     1347677 branch_miss=    6866 cache_miss=    2194 cache_ref=     14263 items=       100 avg_time=    581123 ns]
partial_tweets<sajson>/manual_time                        612670 ns       675853 ns         1139          10.249k           1039.21M               0        13.265k    1.94043M              3.07266          1.64559k       3.19315G          6.04845M                    9.57768                     3.11707           164.559k     10.723k   631.515k       983.008M/s    1.51097   13.4117k   1.95465M         3.09518    1.6322k/s 3.19039G/s     6.04845M               9.57768                3.09438        100        163.22k/s [BEST: throughput=  1.04 GB/s doc_throughput=  1645 docs/s instructions=     6048450 cycles=     1940429 branch_miss=   10249 cache_miss=       0 cache_ref=     13265 items=       100 avg_time=    612670 ns]
partial_tweets<rapidjson>/manual_time                    1900261 ns      1967003 ns          369          26.227k           385.097M          9.563k         22.95k    5.23583M              8.29091           609.799        3.1928G          13.1153M                     20.768                     2.50492           60.9799k    26.6526k   631.515k       316.935M/s     425.68   15.8393k   5.39366M         8.54083    526.244/s 2.83838G/s     13.1162M               20.7695                2.43179        100       52.6244k/s [BEST: throughput=  0.39 GB/s doc_throughput=   609 docs/s instructions=    13115327 cycles=     5235831 branch_miss=   26227 cache_miss=    9563 cache_ref=     22950 items=       100 avg_time=   1900260 ns]
partial_tweets<rapidjson_insitu>/manual_time             1433003 ns      1493777 ns          490          25.734k           496.183M             198        14.626k    4.06385M              6.43508           785.703       3.19298G          9.82284M                    15.5544                     2.41713           78.5703k    25.7885k   631.515k       420.278M/s    219.902   10.0819k   4.18015M         6.61924    697.835/s 2.91705G/s     9.82324M                15.555                2.34997        100       69.7835k/s [BEST: throughput=  0.50 GB/s doc_throughput=   785 docs/s instructions=     9822845 cycles=     4063850 branch_miss=   25734 cache_miss=     198 cache_ref=     14626 items=       100 avg_time=   1433002 ns]
partial_tweets<nlohmann_json>/manual_time                9059465 ns      9147225 ns           78          134.27k           72.7245M              31        97.913k    27.7002M              43.8631           115.159       3.18992G          70.7036M                    111.959                     2.55245           11.5159k    145.171k   631.515k       66.4785M/s    34.3205   141.189k   28.8953M         45.7555    110.382/s 3.18951G/s     71.3466M               112.977                2.46914        100       11.0382k/s [BEST: throughput=  0.07 GB/s doc_throughput=   115 docs/s instructions=    70703551 cycles=    27700225 branch_miss=  134270 cache_miss=      31 cache_ref=     97913 items=       100 avg_time=   9059465 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                 104285965 ns    110129522 ns            7         855.814k           442.266M        6.80389M       6.89502M    331.653M              7.21005           9.61474       3.18876G          998.581M                    21.7089                     3.01092           9.61474M    856.088k   45.9988M        420.65M/s   6.81257M   6.89503M   332.484M         7.22811    9.58902/s  3.1882G/s     998.581M               21.7089                3.00339      1000k       9.58902M/s [BEST: throughput=  0.44 GB/s doc_throughput=     9 docs/s instructions=   998581028 cycles=   331653433 branch_miss=  855814 cache_miss= 6803888 cache_ref=   6895023 items=   1000000 avg_time= 104285964 ns]
large_random<simdjson_ondemand>/manual_time             66022188 ns     71844843 ns           11         869.559k           697.117M        3.49818M        3.5725M    210.418M              4.57443           15.1551       3.18892G          651.959M                    14.1734                     3.09839           15.1551M    869.618k   45.9988M       664.441M/s   3.51826M   3.57247M   210.529M         4.57683    15.1464/s 3.18876G/s     651.959M               14.1734                3.09677      1000k       15.1464M/s [BEST: throughput=  0.70 GB/s doc_throughput=    15 docs/s instructions=   651958680 cycles=   210418381 branch_miss=  869559 cache_miss= 3498185 cache_ref=   3572499 items=   1000000 avg_time=  66022187 ns]
large_random<simdjson_ondemand_unordered>/manual_time   70626235 ns     76442936 ns           10         860.461k           651.604M        3.50007M        3.5728M    225.131M              4.89429           14.1657       3.18914G          651.959M                    14.1734                      2.8959           14.1657M    860.572k   45.9988M       621.127M/s   3.52077M   3.57268M   225.208M         4.89595     14.159/s 3.18873G/s     651.959M               14.1734                2.89492      1000k        14.159M/s [BEST: throughput=  0.65 GB/s doc_throughput=    14 docs/s instructions=   651958684 cycles=   225131352 branch_miss=  860461 cache_miss= 3500067 cache_ref=   3572797 items=   1000000 avg_time=  70626234 ns]
large_random<yyjson>/manual_time                       155836684 ns    161704558 ns            4         657.275k            295.48M        4.21003M       5.36915M    358.591M              7.79566           6.42366       2.30347G          942.149M                    20.4821                     2.62736           6.42366M    660.612k   45.9988M       281.499M/s   4.20972M   5.37107M   359.048M         7.80559    6.41697/s   2.304G/s     942.149M               20.4821                2.62402      1000k       6.41697M/s [BEST: throughput=  0.30 GB/s doc_throughput=     6 docs/s instructions=   942149414 cycles=   358591026 branch_miss=  657275 cache_miss= 4210026 cache_ref=   5369154 items=   1000000 avg_time= 155836683 ns]
large_random<yyjson_insitu>/manual_time                129862177 ns    135726656 ns            5         656.405k           354.632M        3.49342M       4.65321M    315.754M               6.8644            7.7096       2.43434G          936.029M                     20.349                     2.96442            7.7096M    659.762k   45.9988M       337.803M/s   3.49339M   4.63296M   316.161M         6.87326    7.70047/s 2.43459G/s     936.029M                20.349                 2.9606      1000k       7.70047M/s [BEST: throughput=  0.35 GB/s doc_throughput=     7 docs/s instructions=   936028650 cycles=   315753951 branch_miss=  656405 cache_miss= 3493419 cache_ref=   4653212 items=   1000000 avg_time= 129862176 ns]
large_random<sajson>/manual_time                       103593336 ns    109481436 ns            7         594.963k           445.056M        5.42634M       5.57862M    329.617M              7.16577           9.67539       3.18917G          1066.99M                    23.1961                     3.23707           9.67539M    595.185k   45.9988M       423.462M/s   5.46044M   5.57849M   330.347M         7.18164    9.65313/s 3.18888G/s     1066.99M               23.1961                3.22991      1000k       9.65313M/s [BEST: throughput=  0.45 GB/s doc_throughput=     9 docs/s instructions=  1066991832 cycles=   329616703 branch_miss=  594963 cache_miss= 5426337 cache_ref=   5578619 items=   1000000 avg_time= 103593335 ns]
large_random<rapidjson>/manual_time                    208007711 ns    213858853 ns            4         603.527k           231.873M        4.34672M       5.18525M    565.374M              12.2911           5.04085       2.84996G          1.66512G                    36.1993                     2.94517           5.04085M    604.336k   45.9988M       210.895M/s   4.05072M   5.09242M   571.888M         12.4327    4.80751/s 2.74936G/s     1.66513G               36.1995                2.91164      1000k       4.80751M/s [BEST: throughput=  0.23 GB/s doc_throughput=     5 docs/s instructions=  1665122241 cycles=   565373704 branch_miss=  603527 cache_miss= 4346722 cache_ref=   5185248 items=   1000000 avg_time= 208007711 ns]
large_random<rapidjson_lossless>/manual_time           241972781 ns    247796106 ns            3         604.746k           196.823M         4.3451M       5.18446M    678.058M              14.7408           4.27887       2.90132G          2.04909G                    44.5466                     3.02199           4.27887M    605.053k   45.9988M       181.293M/s   4.08058M   5.10922M   682.682M         14.8413     4.1327/s 2.82132G/s      2.0491G               44.5468                3.00154      1000k        4.1327M/s [BEST: throughput=  0.20 GB/s doc_throughput=     4 docs/s instructions=  2049087644 cycles=   678058354 branch_miss=  604746 cache_miss= 4345095 cache_ref=   5184459 items=   1000000 avg_time= 241972781 ns]
large_random<rapidjson_insitu>/manual_time             189144426 ns    195041943 ns            4         614.872k           256.488M        5.02919M       5.91831M    504.645M              10.9708           5.57597       2.81389G          1.49712G                     32.547                     2.96668           5.57597M    621.835k   45.9988M       231.928M/s   4.74012M   5.84208M   511.789M         11.1261    5.28697/s 2.70581G/s     1.49713G               32.5472                2.92529      1000k       5.28697M/s [BEST: throughput=  0.26 GB/s doc_throughput=     5 docs/s instructions=  1497122067 cycles=   504645266 branch_miss=  614872 cache_miss= 5029192 cache_ref=   5918315 items=   1000000 avg_time= 189144425 ns]
large_random<nlohmann_json>/manual_time               1435203042 ns   1441060214 ns            1         4.49743M           32.0504M        30.3192M       31.0004M    4.56311G              99.2007          0.696766       3.17942G          11.9244G                    259.232                     2.61321           696.766k    4.49743M   45.9988M       30.5656M/s   30.3192M   31.0004M   4.56311G         99.2007   0.696766/s 3.17942G/s     11.9244G               259.232                2.61321      1000k       696.766k/s [BEST: throughput=  0.03 GB/s doc_throughput=     0 docs/s instructions= 11924361666 cycles=  4563108484 branch_miss= 4497427 cache_miss=30319240 cache_ref=  31000408 items=   1000000 avg_time=1435203042 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                        99116593 ns    117298162 ns            7         449.957k           1.38734G        10.2243M       10.3146M    315.582M               2.2984           10.1041       3.18866G           972.65M                    7.08386                     3.08208           5.29744M    450.397k   137.305M       1.29015G/s    10.244M   10.3148M    316.04M         2.30174    10.0891/s 3.18857G/s      972.65M               7.08386                3.07762   524.288k       5.28961M/s [BEST: throughput=  1.39 GB/s doc_throughput=    10 docs/s instructions=   972650011 cycles=   315581941 branch_miss=  449957 cache_miss=10224252 cache_ref=  10314552 items=    524288 avg_time=  99116592 ns]
kostya<simdjson_ondemand>/manual_time                   68944202 ns     87089194 ns           10         471.267k           1.99464G        6.42548M       6.47036M    219.506M              1.59867           14.5271       3.18879G          700.216M                    5.09972                     3.18996           7.61639M    468.041k   137.305M       1.85476G/s   6.43598M   6.47053M   219.833M         1.60105    14.5045/s 3.18856G/s     700.216M               5.09972                3.18523   524.288k       7.60453M/s [BEST: throughput=  1.99 GB/s doc_throughput=    14 docs/s instructions=   700216390 cycles=   219506002 branch_miss=  471267 cache_miss= 6425477 cache_ref=   6470357 items=    524288 avg_time=  68944202 ns]
kostya<yyjson>/manual_time                             262655194 ns    280920005 ns            3         416.807k           522.939M        8.49621M       9.90542M     607.96M               4.4278           3.80859       2.31547G          983.521M                    7.16304                     1.61774            1.9968M     417.39k   137.305M        498.54M/s    8.4952M   9.90776M   608.372M         4.43081    3.80727/s 2.31624G/s     983.521M               7.16304                1.61664   524.288k       1.99611M/s [BEST: throughput=  0.52 GB/s doc_throughput=     3 docs/s instructions=   983520664 cycles=   607959611 branch_miss=  416807 cache_miss= 8496211 cache_ref=   9905424 items=    524288 avg_time= 262655194 ns]
kostya<yyjson_insitu>/manual_time                      185393511 ns    203581689 ns            4         415.441k           740.842M        6.35593M       7.77809M    480.846M              3.50203            5.3956       2.59445G          965.251M                    7.02998                      2.0074           2.82885M    415.409k   137.305M       706.304M/s   6.36168M   7.77277M   481.067M         3.50364    5.39393/s 2.59484G/s     965.251M               7.02998                2.00648   524.288k       2.82797M/s [BEST: throughput=  0.74 GB/s doc_throughput=     5 docs/s instructions=   965251193 cycles=   480846320 branch_miss=  415441 cache_miss= 6355930 cache_ref=   7778088 items=    524288 avg_time= 185393511 ns]
kostya<sajson>/manual_time                             154611539 ns    172744755 ns            5         369.853k           888.639M        8.50436M       8.54438M    492.738M              3.58864           6.47201         3.189G          1.60357G                    11.6789                      3.2544            3.3932M    370.189k   137.305M       846.924M/s   8.49061M    8.5446M   493.036M         3.59081    6.46782/s 3.18887G/s     1.60357G               11.6789                3.25244   524.288k         3.391M/s [BEST: throughput=  0.89 GB/s doc_throughput=     6 docs/s instructions=  1603566987 cycles=   492738045 branch_miss=  369853 cache_miss= 8504364 cache_ref=   8544376 items=    524288 avg_time= 154611539 ns]
kostya<rapidjson>/manual_time                          293282082 ns    311544299 ns            2         1096.24k           473.939M        5.19806M       6.40937M    828.021M              6.03053           3.45173        2.8581G          2.29089G                    16.6847                      2.7667            1.8097M    1.12381M   137.305M       446.479M/s   5.07348M   6.37348M   831.026M         6.05241    3.40969/s 2.83354G/s     2.29089G               16.6847                 2.7567   524.288k       1.78766M/s [BEST: throughput=  0.47 GB/s doc_throughput=     3 docs/s instructions=  2290888637 cycles=   828021375 branch_miss= 1096244 cache_miss= 5198059 cache_ref=   6409370 items=    524288 avg_time= 293282082 ns]
kostya<rapidjson_lossless>/manual_time                 317932138 ns    336156227 ns            2         984.217k           436.336M        5.19325M       6.42091M    907.878M              6.61212           3.17786       2.88511G          2.50794G                    18.2654                     2.76242           1.66612M    973.136k   137.305M       411.862M/s   5.07179M   6.38215M   909.896M         6.62682    3.14533/s 2.86192G/s     2.50794G               18.2654                2.75629   524.288k       1.64906M/s [BEST: throughput=  0.44 GB/s doc_throughput=     3 docs/s instructions=  2507935133 cycles=   907877670 branch_miss=  984217 cache_miss= 5193248 cache_ref=   6420915 items=    524288 avg_time= 317932138 ns]
kostya<rapidjson_insitu>/manual_time                   283528224 ns    301678969 ns            3         1005.77k           492.013M        7.32906M       8.55461M    794.264M              5.78467           3.58336       2.84613G          2.04115G                    14.8658                     2.56987           1.87871M    1004.97k   137.305M       461.838M/s   7.16482M   8.51034M   797.386M         5.80741    3.52699/s 2.81237G/s     2.04116G               14.8659                2.55981   524.288k       1.84916M/s [BEST: throughput=  0.49 GB/s doc_throughput=     3 docs/s instructions=  2041153611 cycles=   794264196 branch_miss= 1005769 cache_miss= 7329058 cache_ref=   8554612 items=    524288 avg_time= 283528223 ns]
kostya<nlohmann_json>/manual_time                     1907909208 ns   1926012126 ns            1         3.77629M           71.9662M        46.0177M       46.5828M    6.08561G              44.3218          0.524134       3.18967G          15.1099G                    110.046                     2.48289           274.797k    3.77629M   137.305M       68.6323M/s   46.0177M   46.5828M   6.08561G         44.3218   0.524134/s 3.18967G/s     15.1099G               110.046                2.48289   524.288k       274.797k/s [BEST: throughput=  0.07 GB/s doc_throughput=     0 docs/s instructions= 15109884450 cycles=  6085608688 branch_miss= 3776290 cache_miss=46017732 cache_ref=  46582800 items=    524288 avg_time=1907909208 ns]
distinct_user_id<simdjson_dom>/manual_time                324217 ns       401971 ns         2159           4.276k           1.96209G              37        34.352k    1027.95k              1.62775          3.10696k       3.19379G          3.01136M                    4.76848                     2.92949             357.3k     4.4215k   631.515k       1.81404G/s    37.8124   34.1409k   1034.57k         1.63824   3.08435k/s 3.19099G/s     3.01137M               4.76848                2.91073        115         354.7k/s [BEST: throughput=  1.96 GB/s doc_throughput=  3106 docs/s instructions=     3011365 cycles=     1027947 branch_miss=    4276 cache_miss=      37 cache_ref=     34352 items=       115 avg_time=    324217 ns]
distinct_user_id<simdjson_ondemand>/manual_time           224984 ns       284825 ns         3111           2.175k           2.82684G               1         7.465k    713.606k              1.12999          4.47628k        3.1943G          2.19251M                    3.47183                     3.07244           514.772k    2.27836k   631.515k       2.61416G/s    1.03086   7.47596k   718.013k         1.13697   4.44475k/s 3.19139G/s     2.19251M               3.47183                3.05358        115       511.147k/s [BEST: throughput=  2.83 GB/s doc_throughput=  4476 docs/s instructions=     2192511 cycles=      713606 branch_miss=    2175 cache_miss=       1 cache_ref=      7465 items=       115 avg_time=    224984 ns]
distinct_user_id<yyjson>/manual_time                      752611 ns       841015 ns         1000           6.616k           1.32514G          7.144k        27.302k     1.5218M              2.40977          2.09835k       3.19327G           2.8748M                    4.55224                     1.88908            241.31k    7.43332k   631.515k       800.227M/s   2.26257k   26.0609k   1.70428M         2.69872   1.32871k/s 2.26449G/s     2.87529M               4.55301                 1.6871        115       152.801k/s [BEST: throughput=  1.33 GB/s doc_throughput=  2098 docs/s instructions=     2874805 cycles=     1521803 branch_miss=    6616 cache_miss=    7144 cache_ref=     27302 items=       115 avg_time=    752611 ns]
distinct_user_id<yyjson_insitu>/manual_time               579068 ns       652603 ns         1218           7.356k           1.49602G             132        14.625k    1.34805M              2.13463          2.36894k       3.19346G          2.87478M                     4.5522                     2.13255           272.429k    7.42958k   631.515k       1040.05M/s    93.7775   11.7528k   1.45603M         2.30562   1.72691k/s 2.51444G/s     2.87505M               4.55262                1.97458        115       198.595k/s [BEST: throughput=  1.50 GB/s doc_throughput=  2368 docs/s instructions=     2874784 cycles=     1348050 branch_miss=    7356 cache_miss=     132 cache_ref=     14625 items=       115 avg_time=    579068 ns]
distinct_user_id<sajson>/manual_time                      606652 ns       677453 ns         1152          10.274k           1050.31M               2         13.16k    1.91997M              3.04026          1.66317k       3.19323G          5.98102M                     9.4709                     3.11516           191.264k    10.7424k   631.515k        992.76M/s    1.73611    13.146k   1.93553M         3.06489   1.64839k/s  3.1905G/s     5.98102M                9.4709                3.09013        115       189.565k/s [BEST: throughput=  1.05 GB/s doc_throughput=  1663 docs/s instructions=     5981016 cycles=     1919970 branch_miss=   10274 cache_miss=       2 cache_ref=     13160 items=       115 avg_time=    606651 ns]
distinct_user_id<rapidjson>/manual_time                  1889845 ns      1964730 ns          374          26.289k           387.227M          7.362k        23.002k    5.20704M              8.24532           613.172       3.19281G          13.0569M                    20.6755                     2.50755           70.5148k    26.5866k   631.515k       318.682M/s    713.896   16.2743k   5.37465M         8.51072    529.144/s 2.84396G/s     13.0576M               20.6767                2.42948        115       60.8515k/s [BEST: throughput=  0.39 GB/s doc_throughput=   613 docs/s instructions=    13056912 cycles=     5207044 branch_miss=   26289 cache_miss=    7362 cache_ref=     23002 items=       115 avg_time=   1889845 ns]
distinct_user_id<rapidjson_insitu>/manual_time           1404997 ns      1474582 ns          525          26.144k           497.153M             226        15.015k    4.05601M              6.42267           787.238       3.19305G          9.77523M                     15.479                     2.41006           90.5324k    26.0491k   631.515k       428.655M/s   1.41254k   11.5612k   4.15842M         6.58484    711.745/s 2.95974G/s     9.77575M               15.4798                2.35083        115       81.8507k/s [BEST: throughput=  0.50 GB/s doc_throughput=   787 docs/s instructions=     9775226 cycles=     4056013 branch_miss=   26144 cache_miss=     226 cache_ref=     15015 items=       115 avg_time=   1404997 ns]
distinct_user_id<nlohmann_json>/manual_time              9293672 ns      9384549 ns           85          111.89k           78.6783M             710         99.54k    25.5924M              40.5255           124.587       3.18847G          66.1574M                     104.76                     2.58504           14.3275k    190.035k   631.515k       64.8032M/s    20.0353   106.304k   29.6432M         46.9398      107.6/s 3.18961G/s     64.7377M               102.512                 2.1839        115        12.374k/s [BEST: throughput=  0.08 GB/s doc_throughput=   124 docs/s instructions=    66157410 cycles=    25592433 branch_miss=  111890 cache_miss=     710 cache_ref=     99540 items=       115 avg_time=   9293671 ns]
find_tweet<simdjson_dom>/manual_time                      309948 ns       383947 ns         2258           4.083k           2.05274G               0        30.133k    982.509k               1.5558           3.2505k       3.19365G          2.93033M                    4.64015                     2.98249            3.2505k    4.20205k   631.515k       1.89756G/s  0.0301151   30.1416k   989.042k         1.56614   3.22635k/s 3.19099G/s     2.93033M               4.64015                2.96279          1       3.22635k/s [BEST: throughput=  2.05 GB/s doc_throughput=  3250 docs/s instructions=     2930326 cycles=      982509 branch_miss=    4083 cache_miss=       0 cache_ref=     30133 items=         1 avg_time=    309948 ns]
find_tweet<simdjson_ondemand>/manual_time                 152306 ns       215559 ns         4597           1.348k           4.17876G               0          7.45k    482.875k              0.76463          6.61704k        3.1952G          1.56921M                    2.48484                     3.24973           6.61704k    1.40245k   631.515k       3.86159G/s   0.421362   7.24319k   486.152k        0.769818   6.56571k/s 3.19193G/s     1.56921M               2.48484                3.22782          1       6.56571k/s [BEST: throughput=  4.18 GB/s doc_throughput=  6617 docs/s instructions=     1569211 cycles=      482875 branch_miss=    1348 cache_miss=       0 cache_ref=      7450 items=         1 avg_time=    152306 ns]
find_tweet<yyjson>/manual_time                            840073 ns       926822 ns          897            9.68k           1.26184G             239        27.211k     1.5982M              2.53074          1.99811k       3.19338G          2.82413M                      4.472                     1.76707           1.99811k    7.33011k   631.515k       716.914M/s    428.369   24.6333k   1.73335M         2.74475   1.19037k/s 2.06333G/s     2.82483M               4.47309                1.62969          1       1.19037k/s [BEST: throughput=  1.26 GB/s doc_throughput=  1998 docs/s instructions=     2824133 cycles=     1598198 branch_miss=    9680 cache_miss=     239 cache_ref=     27211 items=         1 avg_time=    840072 ns]
find_tweet<yyjson_insitu>/manual_time                     567358 ns       635611 ns         1241           6.675k           1.53468G          2.814k        13.141k    1.30945M               2.0735          2.43016k       3.18217G          2.82382M                     4.4715                     2.15649           2.43016k    7.09415k   631.515k       1061.52M/s    8.60516   10.0658k   1.41897M         2.24692   1.76255k/s   2.501G/s     2.82408M               4.47191                1.99024          1       1.76255k/s [BEST: throughput=  1.53 GB/s doc_throughput=  2430 docs/s instructions=     2823817 cycles=     1309448 branch_miss=    6675 cache_miss=    2814 cache_ref=     13141 items=         1 avg_time=    567358 ns]
find_tweet<sajson>/manual_time                            595412 ns       663497 ns         1172          10.107k           1070.73M              42        12.613k    1.88341M              2.98237           1.6955k       3.19332G          5.88887M                    9.32499                     3.12671            1.6955k     10.553k   631.515k        1011.5M/s    47.4753   12.6916k   1.89964M         3.00806   1.67951k/s 3.19045G/s     5.88887M               9.32499                    3.1          1       1.67951k/s [BEST: throughput=  1.07 GB/s doc_throughput=  1695 docs/s instructions=     5888871 cycles=     1883409 branch_miss=   10107 cache_miss=      42 cache_ref=     12613 items=         1 avg_time=    595412 ns]
find_tweet<rapidjson>/manual_time                        1874613 ns      1945333 ns          376          26.145k           389.671M         11.928k        21.294k    5.17436M              8.19357           617.041        3.1928G          12.9891M                    20.5682                     2.51029            617.041    26.4947k   631.515k       321.271M/s    456.715   13.3836k   5.32648M         8.43444    533.443/s 2.84137G/s     12.9898M               20.5693                2.43873          1        533.443/s [BEST: throughput=  0.39 GB/s doc_throughput=   617 docs/s instructions=    12989149 cycles=     5174363 branch_miss=   26145 cache_miss=   11928 cache_ref=     21294 items=         1 avg_time=   1874613 ns]
find_tweet<rapidjson_insitu>/manual_time                 1391876 ns      1456672 ns          532          25.701k           501.153M             391        13.336k    4.02347M              6.37115           793.573       3.19292G           9.7175M                    15.3876                      2.4152            793.573    25.8089k   631.515k       432.696M/s   1.23802k   8.70182k   4.11558M         6.51699    718.455/s 2.95686G/s     9.71781M               15.3881                2.36123          1        718.455/s [BEST: throughput=  0.50 GB/s doc_throughput=   793 docs/s instructions=     9717498 cycles=     4023475 branch_miss=   25701 cache_miss=     391 cache_ref=     13336 items=         1 avg_time=   1391875 ns]
find_tweet<nlohmann_json>/manual_time                    7409442 ns      7497752 ns          100          90.524k           92.6648M             489        77.422k    21.7438M              34.4311           146.734       3.19055G           56.562M                    89.5656                      2.6013            146.734    106.378k   631.515k       81.2827M/s      15.71   83.5593k   23.6335M         37.4236    134.963/s 3.18965G/s     55.1531M               87.3346                2.33368          1        134.963/s [BEST: throughput=  0.09 GB/s doc_throughput=   146 docs/s instructions=    56562018 cycles=    21743753 branch_miss=   90524 cache_miss=     489 cache_ref=     77422 items=         1 avg_time=   7409441 ns]
top_tweet<simdjson_dom>/manual_time                       316844 ns       396151 ns         2210           4.244k           2.00689G              15        32.159k    1004.99k              1.59139           3.1779k       3.19375G          2.96449M                    4.69426                     2.94979            3.1779k    4.31368k   631.515k       1.85626G/s    14.9109   32.3365k   1011.01k         1.60093   3.15613k/s 3.19089G/s      2.9645M               4.69426                2.93221          1       3.15613k/s [BEST: throughput=  2.01 GB/s doc_throughput=  3177 docs/s instructions=     2964495 cycles=     1004986 branch_miss=    4244 cache_miss=      15 cache_ref=     32159 items=         1 avg_time=    316843 ns]
top_tweet<simdjson_ondemand>/manual_time                  224700 ns       287531 ns         3114           2.257k              2.83G               0         8.091k    712.763k              1.12866          4.48129k        3.1941G          2.19171M                    3.47056                     3.07495           4.48129k    2.39053k   631.515k       2.61746G/s  0.0205523   8.21704k   717.098k         1.13552   4.45038k/s 3.19136G/s     2.19171M               3.47056                3.05636          1       4.45038k/s [BEST: throughput=  2.83 GB/s doc_throughput=  4481 docs/s instructions=     2191712 cycles=      712763 branch_miss=    2257 cache_miss=       0 cache_ref=      8091 items=         1 avg_time=    224699 ns]
top_tweet<simdjson_ondemand_forward_only>/manual_time     216982 ns       281379 ns         3225           2.184k           2.93275G               1         8.955k    687.798k              1.08912          4.64399k       3.19413G          2.21895M                    3.51369                     3.22616           4.64399k    2.32651k   631.515k       2.71057G/s    0.91845   8.97632k   692.532k         1.09662   4.60868k/s 3.19166G/s     2.21895M               3.51369                3.20411          1       4.60868k/s [BEST: throughput=  2.93 GB/s doc_throughput=  4643 docs/s instructions=     2218946 cycles=      687798 branch_miss=    2184 cache_miss=       1 cache_ref=      8955 items=         1 avg_time=    216981 ns]
top_tweet<yyjson>/manual_time                             845887 ns       935517 ns          901           9.333k           1.26704G             264         27.39k    1.59183M              2.52065          2.00634k       3.19376G          2.84503M                    4.50508                     1.78727           2.00634k    7.48384k   631.515k       711.986M/s    449.361   25.2961k   1.75128M         2.77314   1.18219k/s 2.07035G/s     2.84571M               4.50616                1.62493          1       1.18219k/s [BEST: throughput=  1.27 GB/s doc_throughput=  2006 docs/s instructions=     2845027 cycles=     1591829 branch_miss=    9333 cache_miss=     264 cache_ref=     27390 items=         1 avg_time=    845887 ns]
top_tweet<yyjson_insitu>/manual_time                      573868 ns       647735 ns         1230           6.862k           1.51911G          1.933k        13.852k    1.32282M              2.09468          2.40549k       3.18204G          2.84491M                     4.5049                     2.15064           2.40549k    7.25017k   631.515k       1049.47M/s    67.5276   11.4017k   1.43932M         2.27916   1.74256k/s 2.50811G/s     2.84517M               4.50531                1.97675          1       1.74256k/s [BEST: throughput=  1.52 GB/s doc_throughput=  2405 docs/s instructions=     2844909 cycles=     1322821 branch_miss=    6862 cache_miss=    1933 cache_ref=     13852 items=         1 avg_time=    573868 ns]
top_tweet<sajson>/manual_time                             598359 ns       671109 ns         1168           10.09k           1065.45M               0        13.021k    1.89271M              2.99709          1.68714k       3.19326G          5.91604M                    9.36802                      3.1257           1.68714k    10.5579k   631.515k       1006.52M/s    1.74315    13.162k   1.90913M         3.02309   1.67124k/s 3.19061G/s     5.91604M               9.36802                3.09882          1       1.67124k/s [BEST: throughput=  1.07 GB/s doc_throughput=  1687 docs/s instructions=     5916043 cycles=     1892708 branch_miss=   10090 cache_miss=       0 cache_ref=     13021 items=         1 avg_time=    598358 ns]
top_tweet<rapidjson>/manual_time                         1884485 ns      1960388 ns          374          26.293k           387.283M          9.424k        22.108k    5.20635M              8.24421            613.26       3.19284G          13.0391M                    20.6473                     2.50446             613.26    26.5213k   631.515k       319.588M/s    599.864   14.9381k   5.35788M         8.48417    530.649/s 2.84315G/s       13.04M               20.6487                2.43379          1        530.649/s [BEST: throughput=  0.39 GB/s doc_throughput=   613 docs/s instructions=    13039064 cycles=     5206345 branch_miss=   26293 cache_miss=    9424 cache_ref=     22108 items=         1 avg_time=   1884485 ns]
top_tweet<rapidjson_insitu>/manual_time                  1399923 ns      1470689 ns          527          25.326k           500.643M             708        13.852k    4.02755M               6.3776           792.764        3.1929G          9.75917M                    15.4536                      2.4231            792.764    25.7614k   631.515k       430.209M/s   1.34031k   10.3342k   4.14295M         6.56034    714.325/s 2.95941G/s     9.75948M               15.4541                2.35568          1        714.325/s [BEST: throughput=  0.50 GB/s doc_throughput=   792 docs/s instructions=     9759167 cycles=     4027549 branch_miss=   25326 cache_miss=     708 cache_ref=     13852 items=         1 avg_time=   1399923 ns]
top_tweet<nlohmann_json>/manual_time                    10013436 ns     10104215 ns           70         175.818k           63.2092M              41       165.643k    31.8631M              50.4551           100.091       3.18922G          77.8126M                    123.216                     2.44209            100.091    177.797k   631.515k       60.1452M/s       28.7   164.869k   31.9381M         50.5738    99.8658/s 3.18953G/s     77.8104M               123.212                2.43629          1        99.8658/s [BEST: throughput=  0.06 GB/s doc_throughput=   100 docs/s instructions=    77812588 cycles=    31863131 branch_miss=  175818 cache_miss=      41 cache_ref=    165643 items=         1 avg_time=  10013435 ns]
