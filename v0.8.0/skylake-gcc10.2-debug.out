run_benchmark: v0.8.0 /home/jkeiser/simdjson_benchmark_results/v0.8.0/skylake-gcc10.2-debug.json -DCMAKE_BUILD_TYPE=Debug
git reset --hard v0.8.0
HEAD is now at c96ff018 Version 0.8.
cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The CXX compiler identification is GNU 10.2.0
-- The C compiler identification is GNU 10.2.0
-- Check for working CXX compiler: /usr/bin/g++-10
-- Check for working CXX compiler: /usr/bin/g++-10 -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Check for working C compiler: /usr/bin/gcc-10
-- Check for working C compiler: /usr/bin/gcc-10 -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed
-- Check if compiler accepts -pthread
-- Check if compiler accepts -pthread - yes
-- Found Threads: TRUE  
-- Looking for fork
-- Looking for fork - found
-- Looking for wait
-- Looking for wait - found
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- Found Git: /usr/bin/git (found version "2.27.0") 
-- git Version: v0.2.1-c96ff018
-- Version: 0.2.1
-- Performing Test HAVE_CXX_FLAG_STD_CXX11
-- Performing Test HAVE_CXX_FLAG_STD_CXX11 - Success
-- Performing Test HAVE_CXX_FLAG_WALL
-- Performing Test HAVE_CXX_FLAG_WALL - Success
-- Performing Test HAVE_CXX_FLAG_WEXTRA
-- Performing Test HAVE_CXX_FLAG_WEXTRA - Success
-- Performing Test HAVE_CXX_FLAG_WSHADOW
-- Performing Test HAVE_CXX_FLAG_WSHADOW - Success
-- Performing Test HAVE_CXX_FLAG_WERROR
-- Performing Test HAVE_CXX_FLAG_WERROR - Success
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32 - Failed
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED - Success
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WD654
-- Performing Test HAVE_CXX_FLAG_WD654 - Failed
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY - Failed
-- Performing Test HAVE_CXX_FLAG_COVERAGE
-- Performing Test HAVE_CXX_FLAG_COVERAGE - Success
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Performing Test USE_BOOST_JSON
-- Performing Test USE_BOOST_JSON - Failed
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Found Python3: /usr/bin/python3.8 (found version "3.8.6") found components: Interpreter 
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 10
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
Scanning dependencies of target benchmark
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -g   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -g   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_api_internal.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -g   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_name.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_name.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -g   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_register.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_register.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -g   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_runner.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_runner.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -g   -std=c++17 -o CMakeFiles/benchmark.dir/colorprint.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/colorprint.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -g   -std=c++17 -o CMakeFiles/benchmark.dir/commandlineflags.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/commandlineflags.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -g   -std=c++17 -o CMakeFiles/benchmark.dir/complexity.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/complexity.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -g   -std=c++17 -o CMakeFiles/benchmark.dir/console_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/console_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -g   -std=c++17 -o CMakeFiles/benchmark.dir/counter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/counter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -g   -std=c++17 -o CMakeFiles/benchmark.dir/csv_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/csv_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -g   -std=c++17 -o CMakeFiles/benchmark.dir/json_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/json_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -g   -std=c++17 -o CMakeFiles/benchmark.dir/reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -g   -std=c++17 -o CMakeFiles/benchmark.dir/sleep.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sleep.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -g   -std=c++17 -o CMakeFiles/benchmark.dir/statistics.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/statistics.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -g   -std=c++17 -o CMakeFiles/benchmark.dir/string_util.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/string_util.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -g   -std=c++17 -o CMakeFiles/benchmark.dir/sysinfo.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sysinfo.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -g   -std=c++17 -o CMakeFiles/benchmark.dir/timers.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/timers.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -P CMakeFiles/benchmark.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/benchmark.dir/link.txt --verbose=1
/usr/bin/ar qc libbenchmarkd.a  CMakeFiles/benchmark.dir/benchmark.cc.o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o CMakeFiles/benchmark.dir/benchmark_name.cc.o CMakeFiles/benchmark.dir/benchmark_register.cc.o CMakeFiles/benchmark.dir/benchmark_runner.cc.o CMakeFiles/benchmark.dir/colorprint.cc.o CMakeFiles/benchmark.dir/commandlineflags.cc.o CMakeFiles/benchmark.dir/complexity.cc.o CMakeFiles/benchmark.dir/console_reporter.cc.o CMakeFiles/benchmark.dir/counter.cc.o CMakeFiles/benchmark.dir/csv_reporter.cc.o CMakeFiles/benchmark.dir/json_reporter.cc.o CMakeFiles/benchmark.dir/reporter.cc.o CMakeFiles/benchmark.dir/sleep.cc.o CMakeFiles/benchmark.dir/statistics.cc.o CMakeFiles/benchmark.dir/string_util.cc.o CMakeFiles/benchmark.dir/sysinfo.cc.o CMakeFiles/benchmark.dir/timers.cc.o
/usr/bin/ranlib libbenchmarkd.a
[ 80%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
Scanning dependencies of target generated-data
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated && /usr/bin/ruby genfeaturejson.rb /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-miss.json ...
[ 80%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/g++-10  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/include  -g -fPIC   -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -pthread -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/g++-10 -fPIC -g  -shared -Wl,-soname,libsimdjson.so.7 -o ../libsimdjson.so.7.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.7.0.0 ../libsimdjson.so.7 ../libsimdjson.so
[ 80%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
Scanning dependencies of target yyjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/gcc-10  -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src  -g   -o CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o   -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src/yyjson.c
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -P CMakeFiles/yyjson.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -E cmake_link_script CMakeFiles/yyjson.dir/link.txt --verbose=1
/usr/bin/ar qc libyyjson.a  CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o
/usr/bin/ranlib libyyjson.a
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/g++-10  -DRAPIDJSON_HAS_STDSTRING -DSAJSON_UNSORTED_OBJECT_KEYS -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_COMPETITION_NLOHMANN_JSON -DSIMDJSON_COMPETITION_RAPIDJSON -DSIMDJSON_COMPETITION_SAJSON -DSIMDJSON_COMPETITION_YYJSON -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/rapidjson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/sajson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/json  -g   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/g++-10  -g   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.7.0.0 ../_deps/google_benchmarks/src/libbenchmarkd.a ../dependencies/libyyjson.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.8.0/skylake-gcc10.2-debug.json --benchmark_out_format=json
2021-01-24 20:50:56
Running benchmark/bench_ondemand
Run on (4 X 4000 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 256 KiB (x4)
  L3 Unified 8192 KiB (x1)
Load Average: 1.00, 1.00, 0.78
***WARNING*** Library was built as DEBUG. Timings may be affected.
simdjson::dom implementation:      haswell
simdjson::ondemand implementation: fallback

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                13275376 ns     13305733 ns           53           17.82k           47.5972M               5       1.50615M    48.9554M              77.5206           75.3698       3.68976G          82.4036M                    130.486                     1.68324           7.53698k    17.8373k   631.515k       45.3667M/s    504.906   1.50962M   48.9794M         77.5586    75.3274/s 3.68949G/s     82.4036M               130.486                1.68241        100       7.53274k/s [BEST: throughput=  0.05 GB/s doc_throughput=    75 docs/s instructions=    82403554 cycles=    48955399 branch_miss=   17820 cache_miss=       5 cache_ref=   1506153 items=       100 avg_time=  13275376 ns]
partial_tweets<simdjson_ondemand>/manual_time            9707638 ns      9737921 ns           72           5.298k           65.0871M              18       2.60254M    35.7992M              56.6878           103.065       3.68964G          65.0157M                    102.952                     1.81612           10.3065k    5.35676k   631.515k       62.0398M/s     43.125   2.59672M   35.8163M         56.7149    103.012/s  3.6895G/s     65.0157M               102.952                1.81525        100       10.3012k/s [BEST: throughput=  0.07 GB/s doc_throughput=   103 docs/s instructions=    65015683 cycles=    35799194 branch_miss=    5298 cache_miss=      18 cache_ref=   2602536 items=       100 avg_time=   9707637 ns]
partial_tweets<yyjson>/manual_time                       1627203 ns      1659283 ns          430          10.015k           473.816M             872         77.58k    4.92051M              7.79159           750.285       3.69178G          12.8843M                    20.4022                     2.61849           75.0285k    8.66806k   631.515k        370.12M/s     1077.9   52.5876k   5.14495M         8.14699    614.552/s 3.16183G/s     12.8848M               20.4029                2.50435        100       61.4552k/s [BEST: throughput=  0.47 GB/s doc_throughput=   750 docs/s instructions=    12884274 cycles=     4920507 branch_miss=   10015 cache_miss=     872 cache_ref=     77580 items=       100 avg_time=   1627202 ns]
partial_tweets<yyjson_insitu>/manual_time                1415571 ns      1445819 ns          495           8.172k           489.496M              46        48.583k    4.76273M              7.54175           775.113       3.69165G          12.8839M                    20.4016                     2.70515           77.5113k    8.42154k   631.515k       425.454M/s    178.693   35.5488k   4.86829M          7.7089    706.429/s  3.4391G/s     12.8842M                20.402                2.64655        100       70.6429k/s [BEST: throughput=  0.49 GB/s doc_throughput=   775 docs/s instructions=    12883908 cycles=     4762729 branch_miss=    8172 cache_miss=      46 cache_ref=     48583 items=       100 avg_time=   1415570 ns]
partial_tweets<sajson>/manual_time                       3019103 ns      3048578 ns          232          41.006k           209.475M               0        45.886k    11.1288M              17.6224           331.702       3.69145G          27.8592M                    44.1149                     2.50334           33.1702k    41.0449k   631.515k       199.483M/s    10.0474   46.1436k   11.1395M         17.6393    331.224/s 3.68966G/s     27.8592M               44.1149                2.50095        100       33.1224k/s [BEST: throughput=  0.21 GB/s doc_throughput=   331 docs/s instructions=    27859206 cycles=    11128824 branch_miss=   41006 cache_miss=       0 cache_ref=     45886 items=       100 avg_time=   3019102 ns]
partial_tweets<rapidjson>/manual_time                   13833929 ns     13864825 ns           51          65.361k           46.2886M             229        54.469k     50.327M              79.6924           73.2977       3.68885G          104.822M                    165.985                     2.08283           7.32977k    65.2787k   631.515k        43.535M/s    404.647   35.8188k    50.472M         79.9221     72.286/s 3.64842G/s     104.823M               165.987                2.07686        100        7.2286k/s [BEST: throughput=  0.05 GB/s doc_throughput=    73 docs/s instructions=   104822290 cycles=    50326970 branch_miss=   65361 cache_miss=     229 cache_ref=     54469 items=       100 avg_time=  13833929 ns]
partial_tweets<rapidjson_insitu>/manual_time             9484387 ns      9514589 ns           74          49.979k           67.3646M             150        45.418k    34.5907M              54.7742           106.671       3.68984G          75.1829M                    119.052                      2.1735           10.6671k    49.9233k   631.515k       63.5001M/s    219.851   36.0964k   34.6687M         54.8977    105.436/s 3.65535G/s     75.1835M               119.053                2.16863        100       10.5436k/s [BEST: throughput=  0.07 GB/s doc_throughput=   106 docs/s instructions=    75182942 cycles=    34590703 branch_miss=   49979 cache_miss=     150 cache_ref=     45418 items=       100 avg_time=   9484386 ns]
partial_tweets<nlohmann_json>/manual_time               77816314 ns     77858756 ns            9         401.896k           8.14347M          2.509k       268.276k    286.114M               453.06           12.8951       3.68948G          492.706M                    780.198                     1.72206           1.28951k    411.758k   631.515k        7.7395M/s   2.00789k   409.134k   287.102M         454.624    12.8508/s 3.68948G/s     493.211M               780.996                1.71789        100       1.28508k/s [BEST: throughput=  0.01 GB/s doc_throughput=    12 docs/s instructions=   492706482 cycles=   286114489 branch_miss=  401896 cache_miss=    2509 cache_ref=    268276 items=       100 avg_time=  77816313 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                2507890796 ns   2511312673 ns            1         3.99915M           18.3416M        11.4112M       15.7241M    9.25355G               201.17          0.398741       3.68978G          15.4891G                    336.728                     1.67385           398.741k    3.99915M   45.9988M       17.4919M/s   11.4112M   15.7241M   9.25355G          201.17   0.398741/s 3.68978G/s     15.4891G               336.728                1.67385      1000k       398.741k/s [BEST: throughput=  0.02 GB/s doc_throughput=     0 docs/s instructions= 15489081763 cycles=  9253553170 branch_miss= 3999149 cache_miss=11411230 cache_ref=  15724097 items=   1000000 avg_time=2507890796 ns]
large_random<simdjson_ondemand>/manual_time           1201033702 ns   1204474195 ns            1         918.502k           38.2993M        5.86034M       8.29866M    4.43151G              96.3397          0.832616       3.68974G          8.58735G                    186.686                     1.93779           832.616k    918.502k   45.9988M       36.5251M/s   5.86034M   8.29866M   4.43151G         96.3397   0.832616/s 3.68974G/s     8.58735G               186.686                1.93779      1000k       832.616k/s [BEST: throughput=  0.04 GB/s doc_throughput=     0 docs/s instructions=  8587347268 cycles=  4431506103 branch_miss=  918502 cache_miss= 5860337 cache_ref=   8298664 items=   1000000 avg_time=1201033702 ns]
large_random<simdjson_ondemand_unordered>/manual_time 1209687117 ns   1213115793 ns            1         918.102k           38.0253M        5.88049M       8.25795M    4.46338G              97.0326           0.82666        3.6897G          8.64335G                    187.904                      1.9365            826.66k    918.102k   45.9988M       36.2638M/s   5.88049M   8.25795M   4.46338G         97.0326    0.82666/s  3.6897G/s     8.64335G               187.904                 1.9365      1000k        826.66k/s [BEST: throughput=  0.04 GB/s doc_throughput=     0 docs/s instructions=  8643347285 cycles=  4463380085 branch_miss=  918102 cache_miss= 5880486 cache_ref=   8257955 items=   1000000 avg_time=1209687117 ns]
large_random<yyjson>/manual_time                       362296460 ns    365715573 ns            2         882.573k           126.969M        6.55254M       9.23443M    1.21454G              26.4038           2.76027       3.35246G          3.23149G                    70.2517                     2.66066           2.76027M    883.098k   45.9988M       121.083M/s      6.55M   9.23375M   1.21454G         26.4038    2.76017/s 3.35234G/s     3.23149G               70.2517                2.66067      1000k       2.76017M/s [BEST: throughput=  0.13 GB/s doc_throughput=     2 docs/s instructions=  3231490138 cycles=  1214542667 branch_miss=  882573 cache_miss= 6552539 cache_ref=   9234430 items=   1000000 avg_time= 362296460 ns]
large_random<yyjson_insitu>/manual_time                343954560 ns    347372977 ns            2         882.941k           133.738M        5.71473M       7.92301M    1.18229G              25.7026           2.90743       3.43742G          3.22537G                    70.1186                     2.72807           2.90743M    884.268k   45.9988M        127.54M/s   5.71156M   7.88877M   1.18231G         25.7031    2.90736/s 3.43741G/s     3.22537G               70.1186                2.72802      1000k       2.90736M/s [BEST: throughput=  0.13 GB/s doc_throughput=     2 docs/s instructions=  3225369333 cycles=  1182289101 branch_miss=  882941 cache_miss= 5714732 cache_ref=   7923013 items=   1000000 avg_time= 343954560 ns]
large_random<sajson>/manual_time                       773557503 ns    776981977 ns            1         1.66713M           59.4639M        9.15476M       12.3089M    2.85429G              62.0515           1.29273       3.68983G          7.02397G                    152.699                     2.46084           1.29273M    1.66713M   45.9988M       56.7092M/s   9.15476M   12.3089M   2.85429G         62.0515    1.29273/s 3.68983G/s     7.02397G               152.699                2.46084      1000k       1.29273M/s [BEST: throughput=  0.06 GB/s doc_throughput=     1 docs/s instructions=  7023969383 cycles=  2854293748 branch_miss= 1667127 cache_miss= 9154760 cache_ref=  12308866 items=   1000000 avg_time= 773557503 ns]
large_random<rapidjson>/manual_time                   1956453043 ns   1959907684 ns            1         3.64908M           23.5113M        7.13915M        10.875M    7.16069G              155.671          0.511129       3.66004G          14.3775G                    312.562                     2.00783           511.129k    3.64908M   45.9988M       22.4221M/s   7.13915M    10.875M   7.16069G         155.671   0.511129/s 3.66004G/s     14.3775G               312.562                2.00783      1000k       511.129k/s [BEST: throughput=  0.02 GB/s doc_throughput=     0 docs/s instructions= 14377466462 cycles=  7160687174 branch_miss= 3649084 cache_miss= 7139152 cache_ref=  10874982 items=   1000000 avg_time=1956453043 ns]
large_random<rapidjson_lossless>/manual_time          2354867620 ns   2358313217 ns            1         6.46169M           19.5335M        7.13563M        10.892M    8.63024G              187.619          0.424652       3.66485G          17.5242G                    380.971                     2.03056           424.652k    6.46169M   45.9988M       18.6286M/s   7.13563M    10.892M   8.63024G         187.619   0.424652/s 3.66485G/s     17.5242G               380.971                2.03056      1000k       424.652k/s [BEST: throughput=  0.02 GB/s doc_throughput=     0 docs/s instructions= 17524200163 cycles=  8630236996 branch_miss= 6461685 cache_miss= 7135628 cache_ref=  10891954 items=   1000000 avg_time=2354867620 ns]
large_random<rapidjson_insitu>/manual_time            1800160637 ns   1803581263 ns            1          3.5989M           25.5526M        8.24321M       12.4549M    6.58404G              143.135          0.555506       3.65747G          13.6805G                    297.409                     2.07782           555.506k     3.5989M   45.9988M       24.3689M/s   8.24321M   12.4549M   6.58404G         143.135   0.555506/s 3.65747G/s     13.6805G               297.409                2.07782      1000k       555.506k/s [BEST: throughput=  0.03 GB/s doc_throughput=     0 docs/s instructions= 13680466464 cycles=  6584036097 branch_miss= 3598901 cache_miss= 8243209 cache_ref=  12454913 items=   1000000 avg_time=1800160637 ns]
large_random<nlohmann_json>/manual_time               11689681584 ns   11693168576 ns            1         35.0187M           3.93499M        48.0504M       63.2112M    43.1197G               937.41         0.0855455        3.6887G          72.0459G                   1.56626k                     1.67083           85.5455k    35.0187M   45.9988M        3.7527M/s   48.0504M   63.2112M   43.1197G          937.41  0.0855455/s  3.6887G/s     72.0459G              1.56626k                1.67083      1000k       85.5455k/s [BEST: throughput=  0.00 GB/s doc_throughput=     0 docs/s instructions= 72045857601 cycles= 43119719937 branch_miss=35018677 cache_miss=48050432 cache_ref=  63211186 items=   1000000 avg_time=11689681584 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                      2874175485 ns   2884672418 ns            1         3.53361M            47.772M        17.4227M       23.2434M    10.6049G              77.2359          0.347926       3.68971G          17.9583G                    130.791                      1.6934           182.413k    3.53361M   137.305M       45.5589M/s   17.4227M   23.2434M   10.6049G         77.2359   0.347926/s 3.68971G/s     17.9583G               130.791                 1.6934   524.288k       182.413k/s [BEST: throughput=  0.05 GB/s doc_throughput=     0 docs/s instructions= 17958267128 cycles= 10604876866 branch_miss= 3533606 cache_miss=17422668 cache_ref=  23243436 items=    524288 avg_time=2874175485 ns]
kostya<simdjson_ondemand>/manual_time                 1828005101 ns   1838490164 ns            1         598.146k           75.1119M        10.5641M       14.9019M    6.74471G              49.1221          0.547044       3.68965G          12.3957G                    90.2786                     1.83784           286.809k    598.146k   137.305M       71.6323M/s   10.5641M   14.9019M   6.74471G         49.1221   0.547044/s 3.68965G/s     12.3957G               90.2786                1.83784   524.288k       286.809k/s [BEST: throughput=  0.08 GB/s doc_throughput=     0 docs/s instructions= 12395706350 cycles=  6744705241 branch_miss=  598146 cache_miss=10564065 cache_ref=  14901890 items=    524288 avg_time=1828005101 ns]
kostya<yyjson>/manual_time                             438038973 ns    448516712 ns            2         422.006k           313.559M        13.7946M       17.4217M    1.41842G              10.3304           2.28367       3.23919G          3.60689G                    26.2692                      2.5429            1.1973M    421.824k   137.305M       298.933M/s   13.7921M    17.425M   1.41837G         10.3301     2.2829/s 3.23799G/s     3.60689G               26.2692                2.54299   524.288k        1.1969M/s [BEST: throughput=  0.31 GB/s doc_throughput=     2 docs/s instructions=  3606894361 cycles=  1418415268 branch_miss=  422006 cache_miss=13794589 cache_ref=  17421712 items=    524288 avg_time= 438038973 ns]
kostya<yyjson_insitu>/manual_time                      384691353 ns    395194774 ns            2         423.438k           356.987M        11.2465M       13.4646M     1.3229G              9.63472           2.59996       3.43947G          3.58862G                    26.1362                      2.7127           1.36313M    423.665k   137.305M       340.388M/s   11.2432M   13.4561M   1.32297G         9.63527    2.59949/s 3.43904G/s     3.58862G               26.1362                2.71255   524.288k       1.36288M/s [BEST: throughput=  0.36 GB/s doc_throughput=     2 docs/s instructions=  3588624637 cycles=  1322895624 branch_miss=  423438 cache_miss=11246492 cache_ref=  13464587 items=    524288 avg_time= 384691353 ns]
kostya<sajson>/manual_time                             914760224 ns    925248431 ns            1          4.4486M           150.099M        15.0284M       17.8721M    3.37529G              24.5824           1.09318        3.6898G           8.7463G                    63.6998                     2.59128           573.143k     4.4486M   137.305M       143.146M/s   15.0284M   17.8721M   3.37529G         24.5824    1.09318/s  3.6898G/s      8.7463G               63.6998                2.59128   524.288k       573.143k/s [BEST: throughput=  0.15 GB/s doc_throughput=     1 docs/s instructions=  8746297061 cycles=  3375285662 branch_miss= 4448600 cache_miss=15028417 cache_ref=  17872088 items=    524288 avg_time= 914760224 ns]
kostya<rapidjson>/manual_time                         2353329426 ns   2363842451 ns            1         13.1761M            58.345M        8.91825M       12.2747M    8.60032G              62.6366           0.42493       3.65453G          16.7075G                    121.682                     1.94266           222.786k    13.1761M   137.305M       55.6421M/s   8.91825M   12.2747M   8.60032G         62.6366    0.42493/s 3.65453G/s     16.7075G               121.682                1.94266   524.288k       222.786k/s [BEST: throughput=  0.06 GB/s doc_throughput=     0 docs/s instructions= 16707519685 cycles=  8600315053 branch_miss=13176103 cache_miss= 8918251 cache_ref=  12274668 items=    524288 avg_time=2353329426 ns]
kostya<rapidjson_lossless>/manual_time                2564141435 ns   2574645358 ns            1         14.7631M           53.5481M        8.93582M       12.3815M    9.37753G              68.2971          0.389994       3.65718G          18.5272G                    134.935                     1.97571           204.469k    14.7631M   137.305M       51.0675M/s   8.93582M   12.3815M   9.37753G         68.2971   0.389994/s 3.65718G/s     18.5272G               134.935                1.97571   524.288k       204.469k/s [BEST: throughput=  0.05 GB/s doc_throughput=     0 docs/s instructions= 18527249494 cycles=  9377528434 branch_miss=14763051 cache_miss= 8935823 cache_ref=  12381513 items=    524288 avg_time=2564141435 ns]
kostya<rapidjson_insitu>/manual_time                  2090737257 ns   2101216513 ns            1         12.0892M            65.673M        12.9993M       16.4242M    7.63117G              55.5782            0.4783       3.64999G          15.2583G                    111.127                     1.99948           250.767k    12.0892M   137.305M       62.6307M/s   12.9993M   16.4242M   7.63117G         55.5782     0.4783/s 3.64999G/s     15.2583G               111.127                1.99948   524.288k       250.767k/s [BEST: throughput=  0.07 GB/s doc_throughput=     0 docs/s instructions= 15258341684 cycles=  7631166154 branch_miss=12089190 cache_miss=12999263 cache_ref=  16424164 items=    524288 avg_time=2090737256 ns]
kostya<nlohmann_json>/manual_time                     18808558945 ns   18819113038 ns            1         58.4177M           7.30013M        71.9269M       91.4023M     69.399G              505.437         0.0531673       3.68976G          115.835G                    843.631                     1.66911            27.875k    58.4177M   137.305M       6.96195M/s   71.9269M   91.4023M    69.399G         505.437  0.0531673/s 3.68976G/s     115.835G               843.631                1.66911   524.288k        27.875k/s [BEST: throughput=  0.01 GB/s doc_throughput=     0 docs/s instructions=115834698834 cycles= 69399014008 branch_miss=58417712 cache_miss=71926948 cache_ref=  91402311 items=    524288 avg_time=18808558945 ns]
distinct_user_id<simdjson_dom>/manual_time              12900856 ns     12956215 ns           54          15.047k           48.9765M               0       1.59215M    47.5772M              75.3382            77.554        3.6898G           80.487M                    127.451                     1.69171           8.91871k    15.1776k   631.515k       46.6837M/s    58.3889   1.58638M   47.5993M         75.3732    77.5142/s 3.68963G/s      80.487M               127.451                1.69093        115       8.91414k/s [BEST: throughput=  0.05 GB/s doc_throughput=    77 docs/s instructions=    80486965 cycles=    47577188 branch_miss=   15047 cache_miss=       0 cache_ref=   1592147 items=       115 avg_time=  12900855 ns]
distinct_user_id<simdjson_ondemand>/manual_time          9553656 ns      9608793 ns           73           4.842k           66.1499M               0       2.29192M    35.2262M              55.7805           104.748       3.68987G          63.8644M                    101.129                     1.81298            12.046k    4.97636k   631.515k       63.0397M/s    6.53425   2.29688M   35.2478M         55.8146    104.672/s 3.68945G/s     63.8644M               101.129                1.81187        115       12.0373k/s [BEST: throughput=  0.07 GB/s doc_throughput=   104 docs/s instructions=    63864399 cycles=    35226223 branch_miss=    4842 cache_miss=       0 cache_ref=   2291922 items=       115 avg_time=   9553656 ns]
distinct_user_id<yyjson>/manual_time                     1443419 ns      1500669 ns          542            7.38k           493.741M         22.026k        77.032k    4.72169M              7.47676           781.835       3.69158G          12.6247M                    19.9911                     2.67376            89.911k    8.08948k   631.515k       417.245M/s   12.5609k   65.1015k   4.90288M         7.76367    692.799/s 3.39671G/s     12.6251M               19.9917                2.57504        115       79.6719k/s [BEST: throughput=  0.49 GB/s doc_throughput=   781 docs/s instructions=    12624673 cycles=     4721689 branch_miss=    7380 cache_miss=   22026 cache_ref=     77032 items=       115 avg_time=   1443419 ns]
distinct_user_id<yyjson_insitu>/manual_time              1385804 ns      1442289 ns          507           8.325k           501.081M             126        47.791k    4.65276M              7.36761           793.458       3.69177G          12.6246M                     19.991                     2.71336           91.2477k     8.4075k   631.515k       434.592M/s     172.97   34.2231k   4.76508M         7.54547    721.603/s 3.43849G/s     12.6249M               19.9914                2.64946        115       82.9843k/s [BEST: throughput=  0.50 GB/s doc_throughput=   793 docs/s instructions=    12624603 cycles=     4652759 branch_miss=    8325 cache_miss=     126 cache_ref=     47791 items=       115 avg_time=   1385803 ns]
distinct_user_id<sajson>/manual_time                     2971458 ns      3026162 ns          235          40.901k           212.853M               0        46.974k    10.9522M              17.3428           337.051       3.69146G          27.4249M                    43.4272                     2.50405           38.7609k    41.0607k   631.515k       202.681M/s    21.7787   47.0803k   10.9634M         17.3605    336.535/s 3.68958G/s     27.4249M               43.4272                2.50149        115       38.7015k/s [BEST: throughput=  0.21 GB/s doc_throughput=   337 docs/s instructions=    27424933 cycles=    10952238 branch_miss=   40901 cache_miss=       0 cache_ref=     46974 items=       115 avg_time=   2971458 ns]
distinct_user_id<rapidjson>/manual_time                 13661494 ns     13716526 ns           51          63.498k           46.8152M         11.516k        57.045k    49.7758M              78.8196           74.1316       3.68996G          103.663M                    164.149                     2.08259           8.52513k     63.494k   631.515k       44.0845M/s   3.07186k   40.4382k   49.9264M         79.0582    73.1984/s 3.65454G/s     103.663M                164.15                2.07632        115       8.41782k/s [BEST: throughput=  0.05 GB/s doc_throughput=    74 docs/s instructions=   103662577 cycles=    49775758 branch_miss=   63498 cache_miss=   11516 cache_ref=     57045 items=       115 avg_time=  13661493 ns]
distinct_user_id<rapidjson_insitu>/manual_time           9255725 ns      9310404 ns           76          49.136k            68.342M          4.702k        46.649k    34.0966M              53.9917           108.219        3.6899G          74.0554M                    117.266                     2.17193           12.4452k    49.2381k   631.515k       65.0689M/s   13.0582k   47.7105k     34.15M         54.0763    108.041/s 3.68961G/s     74.0554M               117.266                2.16853        115       12.4247k/s [BEST: throughput=  0.07 GB/s doc_throughput=   108 docs/s instructions=    74055427 cycles=    34096559 branch_miss=   49136 cache_miss=    4702 cache_ref=     46649 items=       115 avg_time=   9255724 ns]
distinct_user_id<nlohmann_json>/manual_time             74423638 ns     74485052 ns            9         358.825k           8.49737M         10.263k       261.576k    274.199M              434.192           13.4555       3.68949G          473.266M                    749.414                       1.726           1.54739k    364.896k   631.515k       8.09232M/s   1.38233k   351.032k   274.588M         434.809    13.4366/s 3.68953G/s     472.014M               747.431                1.71899        115       1.54521k/s [BEST: throughput=  0.01 GB/s doc_throughput=    13 docs/s instructions=   473265903 cycles=   274198520 branch_miss=  358825 cache_miss=   10263 cache_ref=    261576 items=       115 avg_time=  74423637 ns]
find_tweet<simdjson_dom>/manual_time                    12492051 ns     12522605 ns           56          13.119k           50.5741M               2       1.61185M    46.0715M              72.9539           80.0837       3.68958G          78.3146M                    124.011                     1.69985            80.0837    13.2742k   631.515k       48.2114M/s    453.286   1.60871M   46.0902M         72.9835    80.0509/s 3.68956G/s     78.3146M               124.011                1.69916          1        80.0509/s [BEST: throughput=  0.05 GB/s doc_throughput=    80 docs/s instructions=    78314616 cycles=    46071489 branch_miss=   13119 cache_miss=       2 cache_ref=   1611847 items=         1 avg_time=  12492050 ns]
find_tweet<simdjson_ondemand>/manual_time                8694447 ns      8724286 ns           80           2.911k           72.6693M               9       1.86285M    32.0652M              50.7751           115.071       3.68979G          56.1003M                    88.8345                     1.74957            115.071    2.97726k   631.515k       69.2695M/s    22.3375   1.86602M   32.0793M         50.7974    115.016/s 3.68963G/s     56.1003M               88.8345                 1.7488          1        115.016/s [BEST: throughput=  0.07 GB/s doc_throughput=   115 docs/s instructions=    56100310 cycles=    32065226 branch_miss=    2911 cache_miss=       9 cache_ref=   1862846 items=         1 avg_time=   8694447 ns]
find_tweet<yyjson>/manual_time                           1554099 ns      1586227 ns          465            9.77k           498.498M             251        66.536k    4.67691M              7.40586           789.368        3.6918G          12.3601M                    19.5721                     2.64278            789.368       8.31k   631.515k        387.53M/s    1.2133k    42.013k   4.90915M         7.77361     643.46/s 3.15884G/s     12.3605M               19.5728                2.51786          1         643.46/s [BEST: throughput=  0.50 GB/s doc_throughput=   789 docs/s instructions=    12360057 cycles=     4676911 branch_miss=    9770 cache_miss=     251 cache_ref=     66536 items=         1 avg_time=   1554098 ns]
find_tweet<yyjson_insitu>/manual_time                    1348386 ns      1379476 ns          520           7.585k           516.353M          1.401k        38.144k    4.51182M              7.14444           817.641       3.68905G          12.3597M                    19.5715                      2.7394            817.641    8.09847k   631.515k       446.652M/s    36.2712   24.5986k   4.62875M         7.32959    741.628/s 3.43281G/s     12.3599M               19.5719                2.67026          1        741.628/s [BEST: throughput=  0.52 GB/s doc_throughput=   817 docs/s instructions=    12359683 cycles=     4511819 branch_miss=    7585 cache_miss=    1401 cache_ref=     38144 items=         1 avg_time=   1348385 ns]
find_tweet<sajson>/manual_time                           2916689 ns      2947179 ns          240          40.845k            216.86M               0        36.658k    10.7499M              17.0223           343.397       3.69147G          26.9641M                    42.6974                     2.50832            343.397    40.8696k   631.515k       206.487M/s    11.3417   36.6376k   10.7616M         17.0409    342.855/s 3.68967G/s     26.9641M               42.6974                2.50558          1        342.855/s [BEST: throughput=  0.22 GB/s doc_throughput=   343 docs/s instructions=    26964077 cycles=    10749852 branch_miss=   40845 cache_miss=       0 cache_ref=     36658 items=         1 avg_time=   2916688 ns]
find_tweet<rapidjson>/manual_time                       13472618 ns     13503277 ns           52          62.323k           47.4639M          7.277k        48.343k    49.0954M              77.7423           75.1588       3.68995G           102.21M                     161.85                     2.08187            75.1588    62.3863k   631.515k       44.7025M/s   2.14742k   32.5495k   49.2295M         77.9546    74.2246/s 3.65404G/s     102.211M                161.85                2.07621          1        74.2246/s [BEST: throughput=  0.05 GB/s doc_throughput=    75 docs/s instructions=   102210403 cycles=    49095431 branch_miss=   62323 cache_miss=    7277 cache_ref=     48343 items=         1 avg_time=  13472618 ns]
find_tweet<rapidjson_insitu>/manual_time                 9072355 ns      9102782 ns           77          48.547k           69.6777M         12.772k        38.662k    33.4428M              52.9564           110.334       3.68988G           72.634M                    115.015                     2.17189            110.334    48.4275k   631.515k        66.384M/s   11.9243k   38.6441k   33.4723M         53.0031    110.225/s 3.68948G/s     72.6342M               115.016                2.16998          1        110.225/s [BEST: throughput=  0.07 GB/s doc_throughput=   110 docs/s instructions=    72633978 cycles=    33442761 branch_miss=   48547 cache_miss=   12772 cache_ref=     38662 items=         1 avg_time=   9072355 ns]
find_tweet<nlohmann_json>/manual_time                   65443054 ns     65478745 ns           11         281.914k           9.66054M          1.897k       250.371k    241.183M              381.912           15.2974       3.68948G          417.658M                    661.359                      1.7317            15.2974    285.403k   631.515k        9.2028M/s   1.25464k   272.848k   241.453M          382.34    15.2805/s 3.68952G/s     417.808M               661.596                1.73039          1        15.2805/s [BEST: throughput=  0.01 GB/s doc_throughput=    15 docs/s instructions=   417658031 cycles=   241183219 branch_miss=  281914 cache_miss=    1897 cache_ref=    250371 items=         1 avg_time=  65443054 ns]
top_tweet<simdjson_dom>/manual_time                     12661213 ns     12691149 ns           55          14.153k           49.8975M               2       1.61975M     46.698M               73.946           79.0124       3.68972G          79.1624M                    125.353                      1.6952            79.0124    14.2076k   631.515k       47.5673M/s    55.5091   1.62005M   46.7152M         73.9733    78.9814/s 3.68963G/s     79.1624M               125.353                1.69457          1        78.9814/s [BEST: throughput=  0.05 GB/s doc_throughput=    79 docs/s instructions=    79162434 cycles=    46698032 branch_miss=   14153 cache_miss=       2 cache_ref=   1619752 items=         1 avg_time=  12661213 ns]
top_tweet<simdjson_ondemand>/manual_time                 9534566 ns      9564381 ns           73            4.89k           66.2697M               0       2.25338M    35.1633M              55.6809           104.938       3.68996G          63.6572M                    100.801                     1.81033            104.938    5.02151k   631.515k       63.1659M/s    8.56164   2.24561M   35.1792M          55.706    104.882/s 3.68965G/s     63.6572M               100.801                1.80951          1        104.882/s [BEST: throughput=  0.07 GB/s doc_throughput=   104 docs/s instructions=    63657156 cycles=    35163340 branch_miss=    4890 cache_miss=       0 cache_ref=   2253381 items=         1 avg_time=   9534565 ns]
top_tweet<simdjson_ondemand_forward_only>/manual_time    9586664 ns      9616351 ns           73           5.265k           65.9094M               0       2.21663M     35.355M              55.9844           104.367        3.6899G          64.3436M                    101.888                     1.81993            104.367    5.26985k   631.515k       62.8226M/s    8.71233   2.22893M   35.3695M         56.0074    104.312/s 3.68945G/s     64.3436M               101.888                1.81918          1        104.312/s [BEST: throughput=  0.07 GB/s doc_throughput=   104 docs/s instructions=    64343560 cycles=    35355018 branch_miss=    5265 cache_miss=       0 cache_ref=   2216625 items=         1 avg_time=   9586664 ns]
top_tweet<yyjson>/manual_time                            1564115 ns      1595878 ns          462           9.652k           494.159M             606        72.553k    4.70542M                7.451           782.497       3.68198G          12.4505M                    19.7153                       2.646            782.497    8.41697k   631.515k       385.048M/s   1.10845k   47.8482k   4.95437M         7.84522    639.339/s 3.16752G/s      12.451M               19.7161                2.51313          1        639.339/s [BEST: throughput=  0.49 GB/s doc_throughput=   782 docs/s instructions=    12450511 cycles=     4705417 branch_miss=    9652 cache_miss=     606 cache_ref=     72553 items=         1 avg_time=   1564115 ns]
top_tweet<yyjson_insitu>/manual_time                     1361217 ns      1391539 ns          515           8.187k           510.615M              25        43.482k    4.56587M              7.23003           808.555       3.69176G          12.4501M                    19.7147                     2.72678            808.555    8.20135k   631.515k       442.442M/s    149.392   30.5874k   4.67873M         7.40874    734.637/s 3.43717G/s     12.4504M               19.7151                2.66106          1        734.637/s [BEST: throughput=  0.51 GB/s doc_throughput=   808 docs/s instructions=    12450135 cycles=     4565874 branch_miss=    8187 cache_miss=      25 cache_ref=     43482 items=         1 avg_time=   1361216 ns]
top_tweet<sajson>/manual_time                            2943975 ns      2973733 ns          238          40.802k           214.813M               0        42.095k    10.8524M              17.1847           340.155       3.69149G          27.2084M                    43.0843                     2.50713            340.155    40.9153k   631.515k       204.574M/s    9.11345   42.2407k   10.8623M         17.2005    339.677/s 3.68969G/s     27.2084M               43.0843                2.50484          1        339.677/s [BEST: throughput=  0.21 GB/s doc_throughput=   340 docs/s instructions=    27208378 cycles=    10852386 branch_miss=   40802 cache_miss=       0 cache_ref=     42095 items=         1 avg_time=   2943975 ns]
top_tweet<rapidjson>/manual_time                        13602527 ns     13632924 ns           52          63.571k           46.9917M         11.715k        52.588k    49.5879M              78.5222           74.4111       3.68989G          103.234M                     163.47                     2.08184            74.4111    63.5109k   631.515k       44.2756M/s   2.63831k   36.4869k   49.7151M         78.7236    73.5158/s 3.65484G/s     103.234M               163.471                2.07652          1        73.5158/s [BEST: throughput=  0.05 GB/s doc_throughput=    74 docs/s instructions=   103233921 cycles=    49587928 branch_miss=   63571 cache_miss=   11715 cache_ref=     52588 items=         1 avg_time=  13602526 ns]
top_tweet<rapidjson_insitu>/manual_time                  9196421 ns      9226457 ns           76          48.888k           68.7435M         13.087k        44.378k    33.8953M               53.673           108.855       3.68967G          73.6318M                    116.596                     2.17233            108.855    48.9452k   631.515k       65.4885M/s   12.4681k   43.9526k   33.9312M         53.7298    108.738/s 3.68961G/s     73.6317M               116.595                2.17003          1        108.738/s [BEST: throughput=  0.07 GB/s doc_throughput=   108 docs/s instructions=    73631809 cycles=    33895333 branch_miss=   48888 cache_miss=   13087 cache_ref=     44378 items=         1 avg_time=   9196421 ns]
top_tweet<nlohmann_json>/manual_time                    81711300 ns     81745942 ns            9         453.389k           7.73614M             228       451.767k    301.188M              476.929           12.2501       3.68959G          518.054M                    820.336                     1.72004            12.2501    456.241k   631.515k       7.37058M/s   1.10922k   459.467k   301.481M         477.393    12.2382/s 3.68959G/s     518.087M               820.387                1.71847          1        12.2382/s [BEST: throughput=  0.01 GB/s doc_throughput=    12 docs/s instructions=   518054250 cycles=   301187921 branch_miss=  453389 cache_miss=     228 cache_ref=    451767 items=         1 avg_time=  81711299 ns]
