run_benchmark: v0.8.0 /home/jkeiser/simdjson_benchmark_results/v0.8.0/skylake-gcc10.2-debug.json -DCMAKE_BUILD_TYPE=Debug
git reset --hard v0.8.0
HEAD is now at c96ff018 Version 0.8.
cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The CXX compiler identification is GNU 10.2.0
-- The C compiler identification is GNU 10.2.0
-- Check for working CXX compiler: /usr/bin/g++-10
-- Check for working CXX compiler: /usr/bin/g++-10 -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Check for working C compiler: /usr/bin/gcc-10
-- Check for working C compiler: /usr/bin/gcc-10 -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed
-- Check if compiler accepts -pthread
-- Check if compiler accepts -pthread - yes
-- Found Threads: TRUE  
-- Looking for fork
-- Looking for fork - found
-- Looking for wait
-- Looking for wait - found
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- Found Git: /usr/bin/git (found version "2.27.0") 
-- git Version: v0.2.1-c96ff018
-- Version: 0.2.1
-- Performing Test HAVE_CXX_FLAG_STD_CXX11
-- Performing Test HAVE_CXX_FLAG_STD_CXX11 - Success
-- Performing Test HAVE_CXX_FLAG_WALL
-- Performing Test HAVE_CXX_FLAG_WALL - Success
-- Performing Test HAVE_CXX_FLAG_WEXTRA
-- Performing Test HAVE_CXX_FLAG_WEXTRA - Success
-- Performing Test HAVE_CXX_FLAG_WSHADOW
-- Performing Test HAVE_CXX_FLAG_WSHADOW - Success
-- Performing Test HAVE_CXX_FLAG_WERROR
-- Performing Test HAVE_CXX_FLAG_WERROR - Success
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32 - Failed
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED - Success
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WD654
-- Performing Test HAVE_CXX_FLAG_WD654 - Failed
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY - Failed
-- Performing Test HAVE_CXX_FLAG_COVERAGE
-- Performing Test HAVE_CXX_FLAG_COVERAGE - Success
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Performing Test USE_BOOST_JSON
-- Performing Test USE_BOOST_JSON - Failed
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Found Python3: /usr/bin/python3.8 (found version "3.8.6") found components: Interpreter 
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 10
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
Scanning dependencies of target benchmark
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -g   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -g   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_api_internal.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -g   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_name.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_name.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -g   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_register.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_register.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -g   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_runner.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_runner.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -g   -std=c++17 -o CMakeFiles/benchmark.dir/colorprint.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/colorprint.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -g   -std=c++17 -o CMakeFiles/benchmark.dir/commandlineflags.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/commandlineflags.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -g   -std=c++17 -o CMakeFiles/benchmark.dir/complexity.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/complexity.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -g   -std=c++17 -o CMakeFiles/benchmark.dir/console_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/console_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -g   -std=c++17 -o CMakeFiles/benchmark.dir/counter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/counter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -g   -std=c++17 -o CMakeFiles/benchmark.dir/csv_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/csv_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -g   -std=c++17 -o CMakeFiles/benchmark.dir/json_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/json_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -g   -std=c++17 -o CMakeFiles/benchmark.dir/reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -g   -std=c++17 -o CMakeFiles/benchmark.dir/sleep.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sleep.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -g   -std=c++17 -o CMakeFiles/benchmark.dir/statistics.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/statistics.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -g   -std=c++17 -o CMakeFiles/benchmark.dir/string_util.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/string_util.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -g   -std=c++17 -o CMakeFiles/benchmark.dir/sysinfo.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sysinfo.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -g   -std=c++17 -o CMakeFiles/benchmark.dir/timers.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/timers.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -P CMakeFiles/benchmark.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/benchmark.dir/link.txt --verbose=1
/usr/bin/ar qc libbenchmarkd.a  CMakeFiles/benchmark.dir/benchmark.cc.o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o CMakeFiles/benchmark.dir/benchmark_name.cc.o CMakeFiles/benchmark.dir/benchmark_register.cc.o CMakeFiles/benchmark.dir/benchmark_runner.cc.o CMakeFiles/benchmark.dir/colorprint.cc.o CMakeFiles/benchmark.dir/commandlineflags.cc.o CMakeFiles/benchmark.dir/complexity.cc.o CMakeFiles/benchmark.dir/console_reporter.cc.o CMakeFiles/benchmark.dir/counter.cc.o CMakeFiles/benchmark.dir/csv_reporter.cc.o CMakeFiles/benchmark.dir/json_reporter.cc.o CMakeFiles/benchmark.dir/reporter.cc.o CMakeFiles/benchmark.dir/sleep.cc.o CMakeFiles/benchmark.dir/statistics.cc.o CMakeFiles/benchmark.dir/string_util.cc.o CMakeFiles/benchmark.dir/sysinfo.cc.o CMakeFiles/benchmark.dir/timers.cc.o
/usr/bin/ranlib libbenchmarkd.a
[ 80%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
Scanning dependencies of target generated-data
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated && /usr/bin/ruby genfeaturejson.rb /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-miss.json ...
[ 80%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/g++-10  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/include  -g -fPIC   -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -pthread -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/g++-10 -fPIC -g  -shared -Wl,-soname,libsimdjson.so.7 -o ../libsimdjson.so.7.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.7.0.0 ../libsimdjson.so.7 ../libsimdjson.so
[ 80%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
Scanning dependencies of target yyjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/gcc-10  -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src  -g   -o CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o   -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src/yyjson.c
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -P CMakeFiles/yyjson.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -E cmake_link_script CMakeFiles/yyjson.dir/link.txt --verbose=1
/usr/bin/ar qc libyyjson.a  CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o
/usr/bin/ranlib libyyjson.a
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/g++-10  -DRAPIDJSON_HAS_STDSTRING -DSAJSON_UNSORTED_OBJECT_KEYS -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_COMPETITION_NLOHMANN_JSON -DSIMDJSON_COMPETITION_RAPIDJSON -DSIMDJSON_COMPETITION_SAJSON -DSIMDJSON_COMPETITION_YYJSON -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/rapidjson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/sajson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/json  -g   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/g++-10  -g   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.7.0.0 ../_deps/google_benchmarks/src/libbenchmarkd.a ../dependencies/libyyjson.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.8.0/skylake-gcc10.2-debug.json --benchmark_out_format=json
2021-01-25 03:04:34
Running benchmark/bench_ondemand
Run on (4 X 4000 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 256 KiB (x4)
  L3 Unified 8192 KiB (x1)
Load Average: 1.00, 1.00, 0.93
***WARNING*** Library was built as DEBUG. Timings may be affected.
simdjson::dom implementation:      haswell
simdjson::ondemand implementation: fallback

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                13275353 ns     13306349 ns           53          17.678k           47.6073M               6       1.71345M    48.9444M              77.5032           75.3859       3.68972G          82.4036M                    130.486                     1.68362           7.53859k    18.0353k   631.515k       45.3668M/s   2.08519k   1.71094M   48.9771M         77.5549    75.3276/s 3.68933G/s     82.4036M               130.486                1.68249        100       7.53276k/s [BEST: throughput=  0.05 GB/s doc_throughput=    75 docs/s instructions=    82403554 cycles=    48944402 branch_miss=   17678 cache_miss=       6 cache_ref=   1713453 items=       100 avg_time=  13275353 ns]
partial_tweets<simdjson_ondemand>/manual_time            9696742 ns      9726894 ns           72           5.356k             65.17M              25       1.40515M    35.7552M              56.6181           103.196        3.6898G          65.0157M                    102.952                     1.81836           10.3196k    5.41658k   631.515k       62.1095M/s    17.8333   1.40222M   35.7741M          56.648    103.127/s 3.68929G/s     65.0157M               102.952                 1.8174        100       10.3127k/s [BEST: throughput=  0.07 GB/s doc_throughput=   103 docs/s instructions=    65015683 cycles=    35755169 branch_miss=    5356 cache_miss=      25 cache_ref=   1405148 items=       100 avg_time=   9696742 ns]
partial_tweets<yyjson>/manual_time                       1632523 ns      1664479 ns          430          10.128k           472.937M             706        77.788k    4.92965M              7.80607           748.893       3.69178G          12.8843M                    20.4022                     2.61363           74.8893k     8.6974k   631.515k       368.914M/s    1052.56   53.7316k   5.14811M           8.152    612.549/s 3.15347G/s     12.8848M               20.4029                2.50281        100       61.2549k/s [BEST: throughput=  0.47 GB/s doc_throughput=   748 docs/s instructions=    12884274 cycles=     4929651 branch_miss=   10128 cache_miss=     706 cache_ref=     77788 items=       100 avg_time=   1632522 ns]
partial_tweets<yyjson_insitu>/manual_time                1416798 ns      1446977 ns          495           8.342k           489.508M              38        48.223k    4.76253M              7.54143           775.133       3.69159G          12.8839M                    20.4016                     2.70527           77.5133k    8.47484k   631.515k       425.085M/s    172.586   36.3823k   4.87204M         7.71484    705.817/s 3.43877G/s     12.8842M                20.402                2.64451        100       70.5817k/s [BEST: throughput=  0.49 GB/s doc_throughput=   775 docs/s instructions=    12883908 cycles=     4762527 branch_miss=    8342 cache_miss=      38 cache_ref=     48223 items=       100 avg_time=   1416797 ns]
partial_tweets<sajson>/manual_time                       3025132 ns      3054929 ns          231          41.355k           209.145M               0        45.966k    11.1464M              17.6502            331.18       3.69146G          27.8592M                    44.1149                      2.4994            33.118k    41.3894k   631.515k       199.085M/s    183.593   46.0864k    11.161M         17.6734    330.564/s 3.68943G/s     27.8592M               44.1149                2.49612        100       33.0564k/s [BEST: throughput=  0.21 GB/s doc_throughput=   331 docs/s instructions=    27859206 cycles=    11146368 branch_miss=   41355 cache_miss=       0 cache_ref=     45966 items=       100 avg_time=   3025131 ns]
partial_tweets<rapidjson>/manual_time                   13841102 ns     13871869 ns           51          65.214k           46.2791M             143        54.476k     50.329M              79.6956           73.2827       3.68824G          104.822M                    165.985                     2.08274           7.32827k    65.2699k   631.515k       43.5124M/s    455.392   36.6646k    50.494M         79.9569    72.2486/s 3.64812G/s     104.823M               165.987                2.07595        100       7.22486k/s [BEST: throughput=  0.05 GB/s doc_throughput=    73 docs/s instructions=   104822268 cycles=    50328959 branch_miss=   65214 cache_miss=     143 cache_ref=     54476 items=       100 avg_time=  13841102 ns]
partial_tweets<rapidjson_insitu>/manual_time             9484372 ns      9515379 ns           74          49.711k           67.3869M              28         45.17k    34.5802M              54.7575           106.707       3.68994G          75.1835M                    119.053                     2.17418           10.6707k    49.8526k   631.515k       63.5002M/s    478.905   37.0641k   34.6652M         54.8922    105.437/s 3.65498G/s      75.184M               119.053                2.16886        100       10.5437k/s [BEST: throughput=  0.07 GB/s doc_throughput=   106 docs/s instructions=    75183462 cycles=    34580167 branch_miss=   49711 cache_miss=      28 cache_ref=     45170 items=       100 avg_time=   9484372 ns]
partial_tweets<nlohmann_json>/manual_time               77999203 ns     78039550 ns            9         405.864k           8.12331M             366       327.033k    286.827M              454.189           12.8632       3.68952G          492.711M                    780.205                      1.7178           1.28632k    414.811k   631.515k       7.72136M/s   1.90433k    453.95k   287.776M         455.691    12.8206/s 3.68947G/s     493.924M               782.125                1.71635        100       1.28206k/s [BEST: throughput=  0.01 GB/s doc_throughput=    12 docs/s instructions=   492710957 cycles=   286826865 branch_miss=  405864 cache_miss=     366 cache_ref=    327033 items=       100 avg_time=  77999202 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                2508326586 ns   2511744392 ns            1         4.00378M           18.3384M        11.4442M       23.2072M    9.25491G              201.199          0.398672       3.68968G          15.4891G                    336.728                     1.67361           398.672k    4.00378M   45.9988M       17.4889M/s   11.4442M   23.2072M   9.25491G         201.199   0.398672/s 3.68968G/s     15.4891G               336.728                1.67361      1000k       398.672k/s [BEST: throughput=  0.02 GB/s doc_throughput=     0 docs/s instructions= 15489081768 cycles=  9254914969 branch_miss= 4003777 cache_miss=11444191 cache_ref=  23207190 items=   1000000 avg_time=2508326586 ns]
large_random<simdjson_ondemand>/manual_time           1201359220 ns   1204768375 ns            1         925.358k           38.2889M        5.84793M       15.7546M    4.43257G              96.3627           0.83239       3.68963G          8.58735G                    186.686                     1.93733            832.39k    925.358k   45.9988M       36.5152M/s   5.84793M   15.7546M   4.43257G         96.3627    0.83239/s 3.68963G/s     8.58735G               186.686                1.93733      1000k        832.39k/s [BEST: throughput=  0.04 GB/s doc_throughput=     0 docs/s instructions=  8587347268 cycles=  4432568549 branch_miss=  925358 cache_miss= 5847932 cache_ref=  15754564 items=   1000000 avg_time=1201359220 ns]
large_random<simdjson_ondemand_unordered>/manual_time 1209905614 ns   1213304861 ns            1         924.661k           38.0185M        5.87999M       15.6297M    4.46394G              97.0447          0.826511       3.68949G          8.64335G                    187.904                     1.93626           826.511k    924.661k   45.9988M       36.2573M/s   5.87999M   15.6297M   4.46394G         97.0447   0.826511/s 3.68949G/s     8.64335G               187.904                1.93626      1000k       826.511k/s [BEST: throughput=  0.04 GB/s doc_throughput=     0 docs/s instructions=  8643347282 cycles=  4463939652 branch_miss=  924661 cache_miss= 5879994 cache_ref=  15629747 items=   1000000 avg_time=1209905614 ns]
large_random<yyjson>/manual_time                       362179769 ns    365593281 ns            2         883.986k           127.008M        6.55912M       9.16405M    1.21408G              26.3937           2.76111        3.3522G          3.23149G                    70.2517                     2.66169           2.76111M    884.966k   45.9988M       121.122M/s   6.55921M   9.18467M   1.21418G         26.3958    2.76106/s 3.35241G/s     3.23149G               70.2517                2.66147      1000k       2.76106M/s [BEST: throughput=  0.13 GB/s doc_throughput=     2 docs/s instructions=  3231490137 cycles=  1214076296 branch_miss=  883986 cache_miss= 6559117 cache_ref=   9164050 items=   1000000 avg_time= 362179769 ns]
large_random<yyjson_insitu>/manual_time                344079619 ns    347490186 ns            2           885.2k           133.701M        5.71309M       7.86098M    1.18191G              25.6943           2.90661       3.43534G          3.22537G                    70.1186                     2.72895           2.90661M    886.619k   45.9988M       127.493M/s   5.70978M   7.85601M   1.18203G         25.6971     2.9063/s 3.43535G/s     3.22537G               70.1186                2.72866      1000k        2.9063M/s [BEST: throughput=  0.13 GB/s doc_throughput=     2 docs/s instructions=  3225369315 cycles=  1181907010 branch_miss=  885200 cache_miss= 5713090 cache_ref=   7860977 items=   1000000 avg_time= 344079619 ns]
large_random<sajson>/manual_time                       773782344 ns    777188182 ns            1          1.6904M           59.4467M        9.16082M       12.3119M    2.85507G              62.0684           1.29235       3.68976G          7.02397G                    152.699                     2.46018           1.29235M     1.6904M   45.9988M       56.6928M/s   9.16082M   12.3119M   2.85507G         62.0684    1.29235/s 3.68976G/s     7.02397G               152.699                2.46018      1000k       1.29235M/s [BEST: throughput=  0.06 GB/s doc_throughput=     1 docs/s instructions=  7023969382 cycles=  2855068802 branch_miss= 1690403 cache_miss= 9160819 cache_ref=  12311895 items=   1000000 avg_time= 773782344 ns]
large_random<rapidjson>/manual_time                   1956263386 ns   1959673102 ns            1         3.61829M           23.5136M        7.24112M       10.8629M    7.15905G              155.636          0.511179       3.65955G          14.3775G                    312.562                     2.00829           511.179k    3.61829M   45.9988M       22.4243M/s   7.24112M   10.8629M   7.15905G         155.636   0.511179/s 3.65955G/s     14.3775G               312.562                2.00829      1000k       511.179k/s [BEST: throughput=  0.02 GB/s doc_throughput=     0 docs/s instructions= 14377466320 cycles=  7159048063 branch_miss= 3618293 cache_miss= 7241118 cache_ref=  10862946 items=   1000000 avg_time=1956263386 ns]
large_random<rapidjson_lossless>/manual_time          2355112147 ns   2358516152 ns            1         6.44014M           19.5315M        7.24557M       10.9005M    8.62976G              187.609          0.424608       3.66427G          17.5242G                    380.971                     2.03067           424.608k    6.44014M   45.9988M       18.6267M/s   7.24557M   10.9005M   8.62976G         187.609   0.424608/s 3.66427G/s     17.5242G               380.971                2.03067      1000k       424.608k/s [BEST: throughput=  0.02 GB/s doc_throughput=     0 docs/s instructions= 17524199739 cycles=  8629761582 branch_miss= 6440136 cache_miss= 7245572 cache_ref=  10900509 items=   1000000 avg_time=2355112147 ns]
large_random<rapidjson_insitu>/manual_time            1815878857 ns   1819280916 ns            1         4.57766M           25.3314M        8.41124M       12.4727M    6.64055G              144.364          0.550698       3.65694G          13.6805G                    297.409                     2.06014           550.698k    4.57766M   45.9988M       24.1579M/s   8.41124M   12.4727M   6.64055G         144.364   0.550698/s 3.65694G/s     13.6805G               297.409                2.06014      1000k       550.698k/s [BEST: throughput=  0.03 GB/s doc_throughput=     0 docs/s instructions= 13680465976 cycles=  6640553679 branch_miss= 4577656 cache_miss= 8411240 cache_ref=  12472708 items=   1000000 avg_time=1815878857 ns]
large_random<nlohmann_json>/manual_time               11739059398 ns   11742470085 ns            1         37.3891M           3.91844M        48.1115M        73.302M    43.2999G              941.328         0.0851857       3.68853G          72.0459G                   1.56626k                     1.66388           85.1857k    37.3891M   45.9988M       3.73691M/s   48.1115M    73.302M   43.2999G         941.328  0.0851857/s 3.68853G/s     72.0459G              1.56626k                1.66388      1000k       85.1857k/s [BEST: throughput=  0.00 GB/s doc_throughput=     0 docs/s instructions= 72045857349 cycles= 43299914337 branch_miss=37389088 cache_miss=48111502 cache_ref=  73301963 items=   1000000 avg_time=11739059398 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                      2869988911 ns   2880192104 ns            1          3.3171M           47.8416M        17.4785M       45.4681M    10.5891G              77.1209          0.348433       3.68959G          17.9583G                    130.791                     1.69592           182.679k     3.3171M   137.305M       45.6253M/s   17.4785M   45.4681M   10.5891G         77.1209   0.348433/s 3.68959G/s     17.9583G               130.791                1.69592   524.288k       182.679k/s [BEST: throughput=  0.05 GB/s doc_throughput=     0 docs/s instructions= 17958267131 cycles= 10589083667 branch_miss= 3317101 cache_miss=17478489 cache_ref=  45468069 items=    524288 avg_time=2869988911 ns]
kostya<simdjson_ondemand>/manual_time                 1778303403 ns   1788512750 ns            1         588.858k           77.2112M        10.5831M       36.6115M    6.56106G              47.7846          0.562334        3.6895G          12.3957G                    90.2786                     1.88928           294.825k    588.858k   137.305M       73.6344M/s   10.5831M   36.6115M   6.56106G         47.7846   0.562334/s  3.6895G/s     12.3957G               90.2786                1.88928   524.288k       294.825k/s [BEST: throughput=  0.08 GB/s doc_throughput=     0 docs/s instructions= 12395706337 cycles=  6561058303 branch_miss=  588858 cache_miss=10583112 cache_ref=  36611526 items=    524288 avg_time=1778303403 ns]
kostya<yyjson>/manual_time                             439102710 ns    449318676 ns            2         424.172k           312.782M        13.7967M       17.4564M    1.42076G              10.3475           2.27801        3.2365G          3.60689G                    26.2692                     2.53871           1.19433M     423.81k   137.305M       298.209M/s   13.7774M   17.4483M    1.4207G          10.347    2.27737/s 3.23546G/s     3.60689G               26.2692                2.53882   524.288k         1.194M/s [BEST: throughput=  0.31 GB/s doc_throughput=     2 docs/s instructions=  3606894348 cycles=  1420759721 branch_miss=  424172 cache_miss=13796674 cache_ref=  17456368 items=    524288 avg_time= 439102710 ns]
kostya<yyjson_insitu>/manual_time                      385101898 ns    395326944 ns            2         422.713k           356.636M        11.2373M       13.5597M    1.32297G              9.63523            2.5974       3.43627G          3.58862G                    26.1362                     2.71256           1.36179M    423.135k   137.305M       340.025M/s    11.252M   13.5637M   1.32333G         9.63789    2.59672/s 3.43631G/s     3.58862G               26.1362                2.71181   524.288k       1.36143M/s [BEST: throughput=  0.36 GB/s doc_throughput=     2 docs/s instructions=  3588624516 cycles=  1322965225 branch_miss=  422713 cache_miss=11237339 cache_ref=  13559708 items=    524288 avg_time= 385101898 ns]
kostya<sajson>/manual_time                             925049214 ns    935264939 ns            1          4.9523M            148.43M        15.0787M       17.9057M    3.41298G              24.8569           1.08102       3.68951G           8.7463G                    63.6998                     2.56266           566.768k     4.9523M   137.305M       141.554M/s   15.0787M   17.9057M   3.41298G         24.8569    1.08102/s 3.68951G/s      8.7463G               63.6998                2.56266   524.288k       566.768k/s [BEST: throughput=  0.15 GB/s doc_throughput=     1 docs/s instructions=  8746297068 cycles=  3412976395 branch_miss= 4952297 cache_miss=15078691 cache_ref=  17905671 items=    524288 avg_time= 925049214 ns]
kostya<rapidjson>/manual_time                         2352578184 ns   2362788499 ns            1         13.1897M           58.3636M        8.96403M       12.3559M    8.59695G              62.6121          0.425066       3.65427G          16.7075G                    121.682                     1.94342           222.857k    13.1897M   137.305M       55.6599M/s   8.96403M   12.3559M   8.59695G         62.6121   0.425066/s 3.65427G/s     16.7075G               121.682                1.94342   524.288k       222.857k/s [BEST: throughput=  0.06 GB/s doc_throughput=     0 docs/s instructions= 16707519441 cycles=  8596953292 branch_miss=13189668 cache_miss= 8964031 cache_ref=  12355904 items=    524288 avg_time=2352578184 ns]
kostya<rapidjson_lossless>/manual_time                2561441518 ns   2571673164 ns            1         14.5058M           53.6046M        8.94815M       12.4119M    9.36677G              68.2187          0.390405       3.65684G          18.5272G                    134.935                     1.97798           204.685k    14.5058M   137.305M       51.1213M/s   8.94815M   12.4119M   9.36677G         68.2187   0.390405/s 3.65684G/s     18.5272G               134.935                1.97798   524.288k       204.685k/s [BEST: throughput=  0.05 GB/s doc_throughput=     0 docs/s instructions= 18527249236 cycles=  9366773448 branch_miss=14505757 cache_miss= 8948146 cache_ref=  12411856 items=    524288 avg_time=2561441518 ns]
kostya<rapidjson_insitu>/manual_time                  2089883971 ns   2100113087 ns            1         12.0686M           65.6998M        12.9887M       16.4591M    7.62677G              55.5462          0.478495       3.64938G          15.2583G                    111.127                     2.00063           250.869k    12.0686M   137.305M       62.6562M/s   12.9887M   16.4591M   7.62677G         55.5462   0.478495/s 3.64938G/s     15.2583G               111.127                2.00063   524.288k       250.869k/s [BEST: throughput=  0.07 GB/s doc_throughput=     0 docs/s instructions= 15258341420 cycles=  7626770751 branch_miss=12068587 cache_miss=12988690 cache_ref=  16459110 items=    524288 avg_time=2089883971 ns]
kostya<nlohmann_json>/manual_time                     18917400881 ns   18927690014 ns            1         60.6654M           7.25813M        72.4227M       142.016M    69.7977G               508.34         0.0528614        3.6896G          115.835G                    843.631                     1.65958           27.7146k    60.6654M   137.305M       6.92189M/s   72.4227M   142.016M   69.7977G          508.34  0.0528614/s  3.6896G/s     115.835G               843.631                1.65958   524.288k       27.7146k/s [BEST: throughput=  0.01 GB/s doc_throughput=     0 docs/s instructions=115834696323 cycles= 69797659556 branch_miss=60665422 cache_miss=72422750 cache_ref= 142016363 items=    524288 avg_time=18917400881 ns]
distinct_user_id<simdjson_dom>/manual_time              12900172 ns     12955279 ns           54          15.034k           48.9859M               2       1.71732M    47.5669M              75.3218           77.5689       3.68971G           80.487M                    127.451                     1.69208           8.92042k    15.3979k   631.515k       46.6862M/s    180.574   1.70879M   47.5956M         75.3673    77.5183/s 3.68953G/s      80.487M               127.451                1.69106        115       8.91461k/s [BEST: throughput=  0.05 GB/s doc_throughput=    77 docs/s instructions=    80486965 cycles=    47566870 branch_miss=   15034 cache_miss=       2 cache_ref=   1717316 items=       115 avg_time=  12900172 ns]
distinct_user_id<simdjson_ondemand>/manual_time          9544218 ns      9599371 ns           73           4.873k           66.1967M               0       1.57171M    35.2002M              55.7393           104.822       3.68976G          63.8644M                    101.129                     1.81432           12.0545k    4.96729k   631.515k        63.102M/s    13.8356   1.58036M   35.2127M         55.7591    104.775/s 3.68943G/s     63.8644M               101.129                1.81367        115       12.0492k/s [BEST: throughput=  0.07 GB/s doc_throughput=   104 docs/s instructions=    63864396 cycles=    35200207 branch_miss=    4873 cache_miss=       0 cache_ref=   1571707 items=       115 avg_time=   9544218 ns]
distinct_user_id<yyjson>/manual_time                     1445454 ns      1502371 ns          541           7.482k           492.857M          22.31k        77.908k    4.73019M              7.49022           780.435        3.6916G           12.625M                    19.9915                     2.66902           89.7501k     8.0981k   631.515k       416.658M/s   13.0477k   66.2139k   4.90883M          7.7731    691.824/s 3.39605G/s     12.6251M               19.9917                2.57191        115       79.5598k/s [BEST: throughput=  0.49 GB/s doc_throughput=   780 docs/s instructions=    12624963 cycles=     4730186 branch_miss=    7482 cache_miss=   22310 cache_ref=     77908 items=       115 avg_time=   1445454 ns]
distinct_user_id<yyjson_insitu>/manual_time              1387401 ns      1443584 ns          506            7.88k           501.197M          1.405k        47.422k    4.64783M              7.35981           793.643       3.68872G          12.6244M                    19.9907                     2.71619           91.2689k     8.3877k   631.515k       434.092M/s    180.482   35.2538k   4.76929M         7.55213    720.772/s 3.43757G/s     12.6247M               19.9911                2.64707        115       82.8888k/s [BEST: throughput=  0.50 GB/s doc_throughput=   793 docs/s instructions=    12624397 cycles=     4647831 branch_miss=    7880 cache_miss=    1405 cache_ref=     47422 items=       115 avg_time=   1387401 ns]
distinct_user_id<sajson>/manual_time                     2974247 ns      3029170 ns          235           41.22k           212.634M               0        46.586k    10.9635M              17.3606           336.705       3.69146G          27.4249M                    43.4272                     2.50148           38.7211k    41.2441k   631.515k       202.491M/s    44.6468   46.8843k   10.9734M         17.3763     336.22/s 3.68946G/s     27.4249M               43.4272                2.49922        115       38.6652k/s [BEST: throughput=  0.21 GB/s doc_throughput=   336 docs/s instructions=    27424933 cycles=    10963495 branch_miss=   41220 cache_miss=       0 cache_ref=     46586 items=       115 avg_time=   2974247 ns]
distinct_user_id<rapidjson>/manual_time                 13663964 ns     13719312 ns           51          63.456k           46.8031M          16.05k         57.43k    49.7883M              78.8395           74.1124       3.68993G          103.662M                    164.149                     2.08206           8.52292k    63.6515k   631.515k       44.0765M/s   2.99327k   41.2753k   49.9317M         79.0665    73.1852/s 3.65426G/s     103.663M                164.15                 2.0761        115        8.4163k/s [BEST: throughput=  0.05 GB/s doc_throughput=    74 docs/s instructions=   103662306 cycles=    49788343 branch_miss=   63456 cache_miss=   16050 cache_ref=     57430 items=       115 avg_time=  13663963 ns]
distinct_user_id<rapidjson_insitu>/manual_time           9253498 ns      9308344 ns           76          49.146k           68.3221M          3.049k        46.627k     34.102M              54.0003           108.188       3.68942G          74.0551M                    117.266                     2.17158           12.4416k     48.974k   631.515k       65.0845M/s   13.9613k   48.1901k   34.1402M         54.0607    108.067/s 3.68943G/s     74.0553M               117.266                2.16916        115       12.4277k/s [BEST: throughput=  0.07 GB/s doc_throughput=   108 docs/s instructions=    74055132 cycles=    34102020 branch_miss=   49146 cache_miss=    3049 cache_ref=     46627 items=       115 avg_time=   9253498 ns]
distinct_user_id<nlohmann_json>/manual_time             74569149 ns     74629259 ns            9         361.844k           8.48408M         12.136k       284.342k    274.621M               434.86           13.4345       3.68939G          473.267M                    749.415                     1.72335           1.54497k    368.358k   631.515k       8.07653M/s   3.43189k   381.933k   275.102M         435.622    13.4104/s 3.68921G/s     472.012M               747.428                1.71577        115       1.54219k/s [BEST: throughput=  0.01 GB/s doc_throughput=    13 docs/s instructions=   473266941 cycles=   274620589 branch_miss=  361844 cache_miss=   12136 cache_ref=    284342 items=       115 avg_time=  74569149 ns]
find_tweet<simdjson_dom>/manual_time                    12500977 ns     12532345 ns           56          13.699k            50.542M               3       1.79118M    46.1019M               73.002            80.033       3.68967G          78.3146M                    124.011                     1.69873             80.033    13.7813k   631.515k        48.177M/s   2.38336k   1.79004M   46.1187M         73.0286    79.9937/s  3.6892G/s     78.3146M               124.011                1.69811          1        79.9937/s [BEST: throughput=  0.05 GB/s doc_throughput=    80 docs/s instructions=    78314616 cycles=    46101857 branch_miss=   13699 cache_miss=       3 cache_ref=   1791183 items=         1 avg_time=  12500976 ns]
find_tweet<simdjson_ondemand>/manual_time                8729817 ns      8759291 ns           80           2.953k           72.3756M               0       1.77429M    32.1951M              50.9807           114.606       3.68976G          56.1003M                    88.8345                     1.74251            114.606    2.97697k   631.515k       68.9888M/s       12.3   1.78589M   32.2078M         51.0009     114.55/s 3.68941G/s     56.1003M               88.8345                1.74182          1         114.55/s [BEST: throughput=  0.07 GB/s doc_throughput=   114 docs/s instructions=    56100310 cycles=    32195084 branch_miss=    2953 cache_miss=       0 cache_ref=   1774289 items=         1 avg_time=   8729816 ns]
find_tweet<yyjson>/manual_time                           1556766 ns      1588979 ns          464           9.727k           496.603M             472        66.753k    4.69451M              7.43373           786.368       3.69161G          12.3601M                    19.5721                     2.63287            786.368    8.37558k   631.515k       386.866M/s   1.23865k   43.0114k    4.9155M         7.78367    642.357/s 3.15751G/s     12.3607M               19.5731                2.51464          1        642.357/s [BEST: throughput=  0.50 GB/s doc_throughput=   786 docs/s instructions=    12360057 cycles=     4694510 branch_miss=    9727 cache_miss=     472 cache_ref=     66753 items=         1 avg_time=   1556766 ns]
find_tweet<yyjson_insitu>/manual_time                    1351562 ns      1382604 ns          519           7.729k           518.232M              37        37.591k    4.49867M              7.12362           820.617       3.69168G            12.36M                     19.572                     2.74748            820.617    8.22228k   631.515k       445.603M/s    34.9865   25.3703k   4.63791M          7.3441    739.885/s 3.43152G/s     12.3603M               19.5724                2.66505          1        739.885/s [BEST: throughput=  0.52 GB/s doc_throughput=   820 docs/s instructions=    12359991 cycles=     4498670 branch_miss=    7729 cache_miss=      37 cache_ref=     37591 items=         1 avg_time=   1351561 ns]
find_tweet<sajson>/manual_time                           2917968 ns      2948564 ns          240          40.995k           216.764M               0        36.636k    10.7546M              17.0298           343.245       3.69146G          26.9641M                    42.6974                     2.50721            343.245    41.0854k   631.515k       206.397M/s    164.633   36.6571k   10.7656M         17.0472    342.704/s 3.68941G/s     26.9641M               42.6974                2.50466          1        342.704/s [BEST: throughput=  0.22 GB/s doc_throughput=   343 docs/s instructions=    26964077 cycles=    10754604 branch_miss=   40995 cache_miss=       0 cache_ref=     36636 items=         1 avg_time=   2917967 ns]
find_tweet<rapidjson>/manual_time                       13472338 ns     13503025 ns           52          62.297k           47.4637M             543        48.692k    49.0937M              77.7396           75.1585       3.68981G           102.21M                    161.849                     2.08194            75.1585    62.4692k   631.515k       44.7034M/s   2.97062k   33.2176k   49.2217M         77.9422    74.2262/s 3.65354G/s     102.211M                161.85                2.07654          1        74.2262/s [BEST: throughput=  0.05 GB/s doc_throughput=    75 docs/s instructions=   102210142 cycles=    49093716 branch_miss=   62297 cache_miss=     543 cache_ref=     48692 items=         1 avg_time=  13472338 ns]
find_tweet<rapidjson_insitu>/manual_time                 9072391 ns      9103436 ns           77          48.283k           69.7062M             249        36.903k    33.4261M                52.93           110.379       3.68955G          72.6341M                    115.016                     2.17298            110.379    48.2177k   631.515k       66.3838M/s   12.0983k   38.7184k   33.4712M         53.0014    110.225/s 3.68934G/s      72.634M               115.015                2.17005          1        110.225/s [BEST: throughput=  0.07 GB/s doc_throughput=   110 docs/s instructions=    72634067 cycles=    33426094 branch_miss=   48283 cache_miss=     249 cache_ref=     36903 items=         1 avg_time=   9072390 ns]
find_tweet<nlohmann_json>/manual_time                   65592628 ns     65627233 ns           11         284.166k           9.64116M         10.226k         212.8k    241.673M              382.687           15.2667       3.68955G          419.124M                     663.68                     1.73426            15.2667    288.859k   631.515k       9.18182M/s   2.58145k   302.083k    241.99M          383.19    15.2456/s 3.68929G/s      417.81M               661.599                1.72656          1        15.2456/s [BEST: throughput=  0.01 GB/s doc_throughput=    15 docs/s instructions=   419123838 cycles=   241672728 branch_miss=  284166 cache_miss=   10226 cache_ref=    212800 items=         1 avg_time=  65592628 ns]
top_tweet<simdjson_dom>/manual_time                     12657658 ns     12688897 ns           55          14.624k           49.9308M               4       1.73308M    46.6667M              73.8964           79.0651       3.68971G          79.1624M                    125.353                     1.69634            79.0651     14.728k   631.515k       47.5807M/s   1.64947k   1.73697M   46.6997M         73.9488    79.0036/s 3.68945G/s     79.1624M               125.353                1.69514          1        79.0036/s [BEST: throughput=  0.05 GB/s doc_throughput=    79 docs/s instructions=    79162434 cycles=    46666706 branch_miss=   14624 cache_miss=       4 cache_ref=   1733076 items=         1 avg_time=  12657658 ns]
top_tweet<simdjson_ondemand>/manual_time                 9517662 ns      9547595 ns           74           4.901k           66.3997M               0       1.27929M    35.0935M              55.5704           105.144       3.68986G          63.6572M                    100.801                     1.81393            105.144    4.96904k   631.515k       63.2781M/s    16.5405   1.28091M   35.1156M         55.6053    105.068/s 3.68952G/s     63.6572M               100.801                1.81279          1        105.068/s [BEST: throughput=  0.07 GB/s doc_throughput=   105 docs/s instructions=    63657153 cycles=    35093547 branch_miss=    4901 cache_miss=       0 cache_ref=   1279288 items=         1 avg_time=   9517662 ns]
top_tweet<simdjson_ondemand_forward_only>/manual_time    9563965 ns      9594099 ns           73           5.059k           66.0621M               0       1.28253M    35.2725M              55.8538           104.609       3.68982G          64.3436M                    101.888                     1.82418            104.609    5.13456k   631.515k       62.9718M/s    12.2192   1.28225M   35.2856M         55.8745    104.559/s 3.68943G/s     64.3436M               101.888                1.82351          1        104.559/s [BEST: throughput=  0.07 GB/s doc_throughput=   104 docs/s instructions=    64343560 cycles=    35272516 branch_miss=    5059 cache_miss=       0 cache_ref=   1282527 items=         1 avg_time=   9563964 ns]
top_tweet<yyjson>/manual_time                            1568377 ns      1599795 ns          460          10.202k            488.23M             482        74.773k    4.75972M              7.53698           773.109       3.67978G          12.4505M                    19.7153                     2.61581            773.109    8.56455k   631.515k       384.002M/s   1.18164k   49.2652k   4.96436M         7.86104    637.602/s 3.16529G/s      12.451M               19.7161                2.50807          1        637.602/s [BEST: throughput=  0.49 GB/s doc_throughput=   773 docs/s instructions=    12450511 cycles=     4759718 branch_miss=   10202 cache_miss=     482 cache_ref=     74773 items=         1 avg_time=   1568377 ns]
top_tweet<yyjson_insitu>/manual_time                     1363577 ns      1393686 ns          514           7.885k           510.007M          1.132k        43.586k    4.56705M              7.23189           807.593       3.68832G          12.4501M                    19.7147                     2.72608            807.593     8.3009k   631.515k       441.676M/s    149.041   31.6277k    4.6859M          7.4201    733.365/s 3.43648G/s     12.4504M               19.7151                2.65699          1        733.365/s [BEST: throughput=  0.51 GB/s doc_throughput=   807 docs/s instructions=    12450136 cycles=     4567047 branch_miss=    7885 cache_miss=    1132 cache_ref=     43586 items=         1 avg_time=   1363577 ns]
top_tweet<sajson>/manual_time                            2946850 ns      2976515 ns          237          40.982k           214.627M               4        42.515k    10.8618M              17.1995            339.86       3.69148G          27.2084M                    43.0843                     2.50497             339.86    41.1494k   631.515k       204.374M/s    31.2954   42.5775k    10.873M         17.2173    339.345/s 3.68969G/s     27.2084M               43.0843                2.50239          1        339.345/s [BEST: throughput=  0.21 GB/s doc_throughput=   339 docs/s instructions=    27208378 cycles=    10861764 branch_miss=   40982 cache_miss=       4 cache_ref=     42515 items=         1 avg_time=   2946850 ns]
top_tweet<rapidjson>/manual_time                        13595869 ns     13625842 ns           52          63.013k           47.0282M            1069        52.547k    49.5435M              78.4518           74.4689       3.68945G          103.234M                     163.47                      2.0837            74.4689    63.2113k   631.515k       44.2973M/s   2.98637k   37.4455k   49.6839M         78.6741    73.5518/s 3.65434G/s     103.235M               163.472                2.07783          1        73.5518/s [BEST: throughput=  0.05 GB/s doc_throughput=    74 docs/s instructions=   103233924 cycles=    49543506 branch_miss=   63013 cache_miss=    1069 cache_ref=     52547 items=         1 avg_time=  13595869 ns]
top_tweet<rapidjson_insitu>/manual_time                  9191092 ns      9220702 ns           76           48.79k           68.7672M         13.375k        44.408k    33.8859M              53.6581           108.892       3.68991G          73.6316M                    116.595                     2.17293            108.892    48.8314k   631.515k       65.5265M/s   12.9082k   44.2024k   33.9101M         53.6965    108.801/s 3.68946G/s     73.6318M               116.595                2.17138          1        108.801/s [BEST: throughput=  0.07 GB/s doc_throughput=   108 docs/s instructions=    73631567 cycles=    33885868 branch_miss=   48790 cache_miss=   13375 cache_ref=     44408 items=         1 avg_time=   9191091 ns]
top_tweet<nlohmann_json>/manual_time                    81840602 ns     81874905 ns            9         457.523k           7.72416M          2.751k       455.404k    301.643M               477.65           12.2312       3.68945G          517.788M                    819.914                     1.71656            12.2312    462.576k   631.515k       7.35893M/s   8.84022k   468.579k   301.921M          478.09    12.2189/s 3.68914G/s     518.075M               820.368                1.71593          1        12.2189/s [BEST: throughput=  0.01 GB/s doc_throughput=    12 docs/s instructions=   517787874 cycles=   301643412 branch_miss=  457523 cache_miss=    2751 cache_ref=    455404 items=         1 avg_time=  81840602 ns]
