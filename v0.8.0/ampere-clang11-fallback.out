run_benchmark: v0.8.0 /home/jkeiser/simdjson_benchmark_results/v0.8.0/skylake-clang11-fallback.json -DSIMDJSON_IMPLEMENTATION=fallback
git reset --hard v0.8.0
HEAD is now at c96ff018 Version 0.8.
cmake -DSIMDJSON_IMPLEMENTATION=fallback ..
-- The CXX compiler identification is Clang 11.0.0
-- The C compiler identification is Clang 11.0.0
-- Check for working CXX compiler: /usr/bin/clang++-11
-- Check for working CXX compiler: /usr/bin/clang++-11 -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Check for working C compiler: /usr/bin/clang-11
-- Check for working C compiler: /usr/bin/clang-11 -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- No build type selected, default to Release
-- Including implementation fallback due to SIMDJSON_IMPLEMENTATION=fallback
-- Excluding implementation westmere due to SIMDJSON_IMPLEMENTATION=fallback
-- Excluding implementation haswell due to SIMDJSON_IMPLEMENTATION=fallback
-- Excluding implementation arm64 due to SIMDJSON_IMPLEMENTATION=fallback
-- Excluding implementation ppc64 due to SIMDJSON_IMPLEMENTATION=fallback
-- Selected implementation fallback as builtin implementation based on fallback.
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed
-- Check if compiler accepts -pthread
-- Check if compiler accepts -pthread - yes
-- Found Threads: TRUE  
-- Looking for fork
-- Looking for fork - found
-- Looking for wait
-- Looking for wait - found
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Found Git: /usr/bin/git (found version "2.27.0") 
-- git Version: v0.2.1-c96ff018
-- Version: 0.2.1
-- Performing Test HAVE_CXX_FLAG_STD_CXX11
-- Performing Test HAVE_CXX_FLAG_STD_CXX11 - Success
-- Performing Test HAVE_CXX_FLAG_WALL
-- Performing Test HAVE_CXX_FLAG_WALL - Success
-- Performing Test HAVE_CXX_FLAG_WEXTRA
-- Performing Test HAVE_CXX_FLAG_WEXTRA - Success
-- Performing Test HAVE_CXX_FLAG_WSHADOW
-- Performing Test HAVE_CXX_FLAG_WSHADOW - Success
-- Performing Test HAVE_CXX_FLAG_WERROR
-- Performing Test HAVE_CXX_FLAG_WERROR - Success
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32 - Success
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED - Success
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WD654
-- Performing Test HAVE_CXX_FLAG_WD654 - Failed
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY - Success
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES -- failed to compile
-- Performing Test HAVE_CXX_FLAG_COVERAGE
-- Performing Test HAVE_CXX_FLAG_COVERAGE - Success
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Performing Test USE_BOOST_JSON
-- Performing Test USE_BOOST_JSON - Failed
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Found Python3: /usr/bin/python3.8 (found version "3.8.6") found components: Interpreter 
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
make[1]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[2]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
Scanning dependencies of target benchmark
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[  0%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/benchmark.cc.o
[ 10%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o
[ 10%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/benchmark_name.cc.o
[ 10%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/benchmark_register.cc.o
[ 20%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/benchmark_runner.cc.o
[ 20%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/colorprint.cc.o
[ 30%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/commandlineflags.cc.o
[ 30%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/complexity.cc.o
[ 30%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/console_reporter.cc.o
[ 40%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/counter.cc.o
[ 40%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/csv_reporter.cc.o
[ 50%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/json_reporter.cc.o
[ 50%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/reporter.cc.o
[ 60%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/sleep.cc.o
[ 60%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/statistics.cc.o
[ 60%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/string_util.cc.o
[ 70%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/sysinfo.cc.o
[ 70%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/timers.cc.o
[ 80%] Linking CXX static library libbenchmark.a
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 80%] Built target benchmark
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
Scanning dependencies of target generated-data
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 80%] Generating utf-8.json, escape.json, 0-structurals.json, 7-structurals.json, 15-structurals.json, 23-structurals.json
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-miss.json ...
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 80%] Built target generated-data
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
Scanning dependencies of target simdjson
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 80%] Building CXX object src/CMakeFiles/simdjson.dir/simdjson.cpp.o
[ 80%] Linking CXX shared library ../libsimdjson.so
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 80%] Built target simdjson
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
Scanning dependencies of target yyjson
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 80%] Building C object dependencies/CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o
[ 90%] Linking C static library libyyjson.a
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 90%] Built target yyjson
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
Scanning dependencies of target bench_ondemand
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[100%] Building CXX object benchmark/CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o
[100%] Linking CXX executable bench_ondemand
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[100%] Built target bench_ondemand
make[2]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[1]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.8.0/skylake-clang11-fallback.json --benchmark_out_format=json
2021-01-23 05:40:35
Running benchmark/bench_ondemand
Run on (32 X 3300 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x32)
  L1 Instruction 32 KiB (x32)
  L2 Unified 256 KiB (x16)
Load Average: 1.03, 1.02, 1.00
simdjson::dom implementation:      fallback
simdjson::ondemand implementation: fallback

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                 2567010 ns      2636222 ns          273         104.303k           246.466M         25.994k       2.72048M     8.2015M               12.987           390.277       3.20086G          13.7641M                    21.7954                     1.67824           39.0277k    104.525k   631.515k       234.615M/s    26.009k   2.72095M   8.20752M         12.9966    389.558/s 3.19731G/s     13.7641M               21.7953                1.67701        100       38.9558k/s [BEST: throughput=  0.25 GB/s doc_throughput=   390 docs/s instructions=    13764092 cycles=     8201497 branch_miss=  104303 cache_miss=   25994 cache_ref=   2720483 items=       100 avg_time=   2567009 ns]
partial_tweets<simdjson_ondemand>/manual_time            1825866 ns      1895038 ns          383          78.753k           346.618M         22.867k       1.37009M    5.83255M               9.2358           548.867       3.20129G           8.9893M                    14.2345                     1.54123           54.8867k    78.9068k   631.515k       329.849M/s   22.8629k   1.37018M   5.83804M          9.2445    547.685/s 3.19741G/s      8.9893M               14.2345                1.53978        100       54.7685k/s [BEST: throughput=  0.35 GB/s doc_throughput=   548 docs/s instructions=     8989297 cycles=     5832547 branch_miss=   78753 cache_miss=   22867 cache_ref=   1370086 items=       100 avg_time=   1825866 ns]
partial_tweets<yyjson>/manual_time                       1188589 ns      1261032 ns          591          45.658k            604.52M         24.329k       1.40833M    3.34475M              5.29639           957.254       3.20177G          3.27051M                    5.17884                    0.977805           95.7254k    45.6849k   631.515k       506.701M/s   24.2658k   1.40966M   3.57083M         5.65439    841.334/s 3.00426G/s     3.27059M               5.17896               0.915918        100       84.1334k/s [BEST: throughput=  0.60 GB/s doc_throughput=   957 docs/s instructions=     3270512 cycles=     3344749 branch_miss=   45658 cache_miss=   24329 cache_ref=   1408327 items=       100 avg_time=   1188588 ns]
partial_tweets<yyjson_insitu>/manual_time                1112166 ns      1180285 ns          634          45.374k           630.443M         14.325k       1.24994M    3.20735M              5.07882           998.303       3.20191G          3.17137M                    5.02185                    0.988782           99.8303k    45.7766k   631.515k        541.52M/s   14.3569k   1.25074M   3.42353M         5.42114    899.147/s 3.07826G/s     3.17153M               5.02209                0.92639        100       89.9147k/s [BEST: throughput=  0.63 GB/s doc_throughput=   998 docs/s instructions=     3171372 cycles=     3207353 branch_miss=   45374 cache_miss=   14325 cache_ref=   1249935 items=       100 avg_time=   1112165 ns]
partial_tweets<sajson>/manual_time                       1460562 ns      1532007 ns          479          58.749k           433.387M         12.735k       1.87299M    4.66439M              7.38603           686.266       3.20101G          5.55181M                    8.79125                     1.19025           68.6266k    58.9708k   631.515k       412.348M/s   12.7308k   1.87381M      4.67M         7.39492    684.668/s  3.1974G/s     5.55181M               8.79125                1.18882        100       68.4668k/s [BEST: throughput=  0.43 GB/s doc_throughput=   686 docs/s instructions=     5551808 cycles=     4664386 branch_miss=   58749 cache_miss=   12735 cache_ref=   1872987 items=       100 avg_time=   1460561 ns]
partial_tweets<rapidjson>/manual_time                    4708497 ns      4782616 ns          151          80.268k           136.623M         13.081k       13.4484M    14.7937M              23.4257           216.342        3.2005G          20.6807M                    32.7477                     1.39794           21.6342k    80.3772k   631.515k       127.909M/s   13.3473k   13.4573M   14.8387M          23.497    212.382/s 3.15148G/s     20.6812M               32.7486                1.39373        100       21.2382k/s [BEST: throughput=  0.14 GB/s doc_throughput=   216 docs/s instructions=    20680684 cycles=    14793700 branch_miss=   80268 cache_miss=   13081 cache_ref=  13448381 items=       100 avg_time=   4708497 ns]
partial_tweets<rapidjson_insitu>/manual_time             2874172 ns      2948554 ns          244          61.075k            224.62M         13.778k       5.85003M    8.99871M              14.2494           355.685        3.2007G           12.822M                    20.3036                     1.42488           35.5685k    61.0751k   631.515k       209.542M/s   13.9478k   5.85106M   9.03403M         14.3053    347.926/s 3.14318G/s     12.8225M               20.3044                1.41936        100       34.7926k/s [BEST: throughput=  0.22 GB/s doc_throughput=   355 docs/s instructions=    12822036 cycles=     8998709 branch_miss=   61075 cache_miss=   13778 cache_ref=   5850030 items=       100 avg_time=   2874171 ns]
partial_tweets<nlohmann_json>/manual_time               22741185 ns     22838504 ns           31         429.145k           29.3646M        198.223k       50.8434M     68.755M              108.873           46.4987       3.19702G          81.5283M                      129.1                     1.18578           4.64987k    445.034k   631.515k       26.4832M/s    253.13k    50.992M   72.6908M         115.105    43.9731/s 3.19644G/s     81.6511M               129.294                1.12327        100       4.39731k/s [BEST: throughput=  0.03 GB/s doc_throughput=    46 docs/s instructions=    81528287 cycles=    68755027 branch_miss=  429145 cache_miss=  198223 cache_ref=  50843397 items=       100 avg_time=  22741185 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                 318114528 ns    321706290 ns            2         4.58337M           144.673M        3.98207M       274.872M    1016.53M              22.0991           3.14516       3.19715G          1.43712G                    31.2426                     1.41375           3.14516M    4.58379M   45.9988M         137.9M/s   3.98211M   274.888M   1016.94M          22.108    3.14352/s 3.19678G/s     1.43712G               31.2426                1.41318      1000k       3.14352M/s [BEST: throughput=  0.14 GB/s doc_throughput=     3 docs/s instructions=  1437120510 cycles=  1016530323 branch_miss= 4583372 cache_miss= 3982074 cache_ref= 274872422 items=   1000000 avg_time= 318114528 ns]
large_random<simdjson_ondemand>/manual_time            254962183 ns    258579720 ns            3         3.86272M           180.462M        2.31929M       208.856M    814.953M              17.7168           3.92319       3.19721G          1079.98M                    23.4784                      1.3252           3.92319M    3.86322M   45.9988M       172.056M/s   2.31935M   208.808M   815.133M         17.7208    3.92215/s 3.19707G/s     1079.98M               23.4784                1.32491      1000k       3.92215M/s [BEST: throughput=  0.18 GB/s doc_throughput=     3 docs/s instructions=  1079978761 cycles=   814952699 branch_miss= 3862716 cache_miss= 2319288 cache_ref= 208856099 items=   1000000 avg_time= 254962183 ns]
large_random<simdjson_ondemand_unordered>/manual_time  244454015 ns    248064660 ns            3         4.13786M           188.177M        2.31965M       205.605M    781.531M              16.9903           4.09091       3.19717G          1091.98M                    23.7393                     1.39723           4.09091M    4.13728M   45.9988M       179.452M/s   2.31991M   205.635M   781.508M         16.9898    4.09075/s 3.19695G/s     1091.98M               23.7393                1.39727      1000k       4.09075M/s [BEST: throughput=  0.19 GB/s doc_throughput=     4 docs/s instructions=  1091978758 cycles=   781530929 branch_miss= 4137856 cache_miss= 2319654 cache_ref= 205605271 items=   1000000 avg_time= 244454015 ns]
large_random<yyjson>/manual_time                       204844643 ns    208460912 ns            3         1.61545M           224.591M         4.9127M       204.954M    629.692M              13.6893           4.88254        3.0745G          816.384M                     17.748                     1.29648           4.88254M    1.61502M   45.9988M       214.152M/s   4.91282M   204.955M   629.794M         13.6915    4.88175/s 3.07449G/s     816.384M                17.748                1.29627      1000k       4.88175M/s [BEST: throughput=  0.22 GB/s doc_throughput=     4 docs/s instructions=   816384370 cycles=   629692203 branch_miss= 1615450 cache_miss= 4912696 cache_ref= 204953870 items=   1000000 avg_time= 204844642 ns]
large_random<yyjson_insitu>/manual_time                198938026 ns    202536979 ns            4         1.61369M           231.234M        4.19616M       193.443M    617.563M              13.4256           5.02696       3.10447G          809.197M                    17.5917                     1.31031           5.02696M    1.61336M   45.9988M        220.51M/s   4.19619M   193.442M   617.682M         13.4282    5.02669/s  3.1049G/s     809.197M               17.5917                1.31005      1000k       5.02669M/s [BEST: throughput=  0.23 GB/s doc_throughput=     5 docs/s instructions=   809196733 cycles=   617563116 branch_miss= 1613687 cache_miss= 4196161 cache_ref= 193442984 items=   1000000 avg_time= 198938025 ns]
large_random<sajson>/manual_time                       218262385 ns    221863105 ns            3         1.56419M           227.519M        3.44475M       213.405M    646.371M              14.0519           4.94619       3.19707G          963.995M                     20.957                      1.4914           4.94619M     1.5656M   45.9988M       200.987M/s   3.44527M   213.409M   697.692M         15.1676    4.58164/s 3.19658G/s     963.995M                20.957                1.38169      1000k       4.58164M/s [BEST: throughput=  0.23 GB/s doc_throughput=     4 docs/s instructions=   963995037 cycles=   646371062 branch_miss= 1564192 cache_miss= 3444754 cache_ref= 213405497 items=   1000000 avg_time= 218262384 ns]
large_random<rapidjson>/manual_time                    362433472 ns    366039680 ns            2         2.50611M           127.142M        4.95373M       781.669M    1.12909G              24.5461           2.76404       3.12085G          1.63051G                    35.4468                     1.44409           2.76404M    2.49716M   45.9988M       121.037M/s   4.95333M   781.613M   1.12884G         24.5407    2.75913/s 3.11461G/s     1.63052G               35.4469                1.44442      1000k       2.75913M/s [BEST: throughput=  0.13 GB/s doc_throughput=     2 docs/s instructions=  1630510250 cycles=  1129090872 branch_miss= 2506108 cache_miss= 4953731 cache_ref= 781668507 items=   1000000 avg_time= 362433472 ns]
large_random<rapidjson_lossless>/manual_time           415423816 ns    419010758 ns            2         1.71683M            110.93M        4.95687M       1022.44M    1.29798G              28.2177           2.41158       3.13018G          2.05348G                    44.6421                     1.58206           2.41158M    1.71884M   45.9988M       105.598M/s   4.95671M   1022.45M   1.29798G         28.2178    2.40718/s 3.12448G/s     2.05349G               44.6422                1.58206      1000k       2.40718M/s [BEST: throughput=  0.11 GB/s doc_throughput=     2 docs/s instructions=  2053483595 cycles=  1297977492 branch_miss= 1716833 cache_miss= 4956872 cache_ref=1022438181 items=   1000000 avg_time= 415423816 ns]
large_random<rapidjson_insitu>/manual_time             351713696 ns    355334346 ns            2         2.24289M           130.973M        5.67263M       696.765M       1096M              23.8267           2.84731       3.12065G          1.37951G                    29.9901                     1.25868           2.84731M     2.2407M   45.9988M       124.726M/s   5.67309M    696.77M   1095.11M         23.8074    2.84322/s 3.11365G/s     1.37952G               29.9903                 1.2597      1000k       2.84322M/s [BEST: throughput=  0.13 GB/s doc_throughput=     2 docs/s instructions=  1379510113 cycles=  1095999929 branch_miss= 2242885 cache_miss= 5672633 cache_ref= 696765095 items=   1000000 avg_time= 351713696 ns]
large_random<nlohmann_json>/manual_time               3266312232 ns   3269876015 ns            1         28.2147M           14.0828M        27.2114M       6.94058G    10.4381G              226.922          0.306156        3.1957G           12.884G                    280.094                     1.23432           306.156k    28.2147M   45.9988M       13.4304M/s   27.2114M   6.94058G   10.4381G         226.922   0.306156/s  3.1957G/s      12.884G               280.094                1.23432      1000k       306.156k/s [BEST: throughput=  0.01 GB/s doc_throughput=     0 docs/s instructions= 12883981695 cycles= 10438138489 branch_miss=28214657 cache_miss=27211403 cache_ref=6940579463 items=   1000000 avg_time=3266312232 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                       506891327 ns    517512136 ns            1         13.2171M           270.877M        6.95527M       492.519M    1.62037G              11.8013           1.97281       3.19669G          2.38517G                    17.3714                     1.47199           1034.32k    13.2171M   137.305M       258.328M/s   6.95527M   492.519M   1.62037G         11.8013    1.97281/s 3.19669G/s     2.38517G               17.3714                1.47199   524.288k       1034.32k/s [BEST: throughput=  0.27 GB/s doc_throughput=     1 docs/s instructions=  2385174121 cycles=  1620371984 branch_miss=13217136 cache_miss= 6955267 cache_ref= 492518662 items=    524288 avg_time= 506891326 ns]
kostya<simdjson_ondemand>/manual_time                  428306624 ns    438925058 ns            2         12.8249M           320.577M        5.29157M       391.918M     1.3694G              9.97344           2.33478       3.19726G          1.97109G                    14.3555                     1.43938            1.2241M    12.8247M   137.305M       305.725M/s   5.29165M    391.89M   1.36926G         9.97242    2.33478/s 3.19692G/s     1.97109G               14.3555                1.43952   524.288k        1.2241M/s [BEST: throughput=  0.32 GB/s doc_throughput=     2 docs/s instructions=  1971088149 cycles=  1369403180 branch_miss=12824889 cache_miss= 5291571 cache_ref= 391917892 items=    524288 avg_time= 428306623 ns]
kostya<yyjson>/manual_time                             287771956 ns    298392168 ns            2         2.21539M           477.311M        7.97227M       325.447M    876.406M              6.38291           3.47628       3.04663G          948.794M                    6.91012                      1.0826           1.82257M    2.20804M   137.305M       455.028M/s   7.97213M   325.444M   876.658M         6.38475    3.47497/s 3.04636G/s     948.794M               6.91012                1.08228   524.288k       1.82189M/s [BEST: throughput=  0.48 GB/s doc_throughput=     3 docs/s instructions=   948793700 cycles=   876405635 branch_miss= 2215388 cache_miss= 7972269 cache_ref= 325447298 items=    524288 avg_time= 287771956 ns]
kostya<yyjson_insitu>/manual_time                      270835636 ns    281474446 ns            3         2.24051M           507.128M        5.83096M       291.214M    843.185M              6.14096           3.69344       3.11425G          927.339M                    6.75386                     1.09981           1.93643M    2.22862M   137.305M       483.482M/s   5.83114M   291.197M   843.355M          6.1422    3.69228/s  3.1139G/s     927.339M               6.75386                1.09958   524.288k       1.93582M/s [BEST: throughput=  0.51 GB/s doc_throughput=     3 docs/s instructions=   927339172 cycles=   843185047 branch_miss= 2240513 cache_miss= 5830963 cache_ref= 291214009 items=    524288 avg_time= 270835636 ns]
kostya<sajson>/manual_time                             397720854 ns    408346313 ns            2         6.59746M           345.314M        4.63111M       418.555M    1.27131G              9.25903           2.51494       3.19727G          1.41335G                    10.2935                     1.11173           1.31855M    6.59174M   137.305M       329.237M/s   4.63112M   418.721M   1.27154G         9.26068    2.51433/s 3.19706G/s     1.41335G               10.2935                1.11153   524.288k       1.31823M/s [BEST: throughput=  0.35 GB/s doc_throughput=     2 docs/s instructions=  1413353471 cycles=  1271310434 branch_miss= 6597461 cache_miss= 4631109 cache_ref= 418555032 items=    524288 avg_time= 397720854 ns]
kostya<rapidjson>/manual_time                          609099525 ns    619738559 ns            1         6.43213M           225.423M         5.3426M       1.20889G     1.9114G              13.9209           1.64177       3.13808G          2.46968G                    17.9868                     1.29207           860.759k    6.43213M   137.305M        214.98M/s    5.3426M   1.20889G    1.9114G         13.9209    1.64177/s 3.13808G/s     2.46968G               17.9868                1.29207   524.288k       860.759k/s [BEST: throughput=  0.23 GB/s doc_throughput=     1 docs/s instructions=  2469675245 cycles=  1911402988 branch_miss= 6432125 cache_miss= 5342602 cache_ref=1208887428 items=    524288 avg_time= 609099525 ns]
kostya<rapidjson_lossless>/manual_time                 638380543 ns    649028470 ns            1         6.69103M           215.083M        5.34081M       1.35647G    2.00515G              14.6036           1.56646       3.14099G          2.71451G                    19.7699                     1.35377           821.278k    6.69103M   137.305M       205.119M/s   5.34081M   1.35647G   2.00515G         14.6036    1.56646/s 3.14099G/s     2.71451G               19.7699                1.35377   524.288k       821.278k/s [BEST: throughput=  0.22 GB/s doc_throughput=     1 docs/s instructions=  2714509496 cycles=  2005145091 branch_miss= 6691033 cache_miss= 5340805 cache_ref=1356473447 items=    524288 avg_time= 638380543 ns]
kostya<rapidjson_insitu>/manual_time                   524295860 ns    534946892 ns            1         4.66102M           261.885M        6.33914M        904.97M     1.6408G              11.9501           1.90732       3.12954G          1.99322G                    14.5167                     1.21478           999.985k    4.66102M   137.305M       249.753M/s   6.33914M    904.97M    1.6408G         11.9501    1.90732/s 3.12954G/s     1.99322G               14.5167                1.21478   524.288k       999.985k/s [BEST: throughput=  0.26 GB/s doc_throughput=     1 docs/s instructions=  1993216995 cycles=  1640803515 branch_miss= 4661019 cache_miss= 6339135 cache_ref= 904970031 items=    524288 avg_time= 524295859 ns]
kostya<nlohmann_json>/manual_time                     5666849035 ns   5677493428 ns            1         56.9644M           24.2295M        38.5907M       11.0924G    18.1166G              131.944          0.176465       3.19694G           18.087G                    131.729                    0.998369           92.5184k    56.9644M   137.305M       23.1071M/s   38.5907M   11.0924G   18.1166G         131.944   0.176465/s 3.19694G/s      18.087G               131.729               0.998369   524.288k       92.5184k/s [BEST: throughput=  0.02 GB/s doc_throughput=     0 docs/s instructions= 18087022721 cycles= 18116573792 branch_miss=56964406 cache_miss=38590676 cache_ref=11092371519 items=    524288 avg_time=5666849035 ns]
distinct_user_id<simdjson_dom>/manual_time               2554707 ns      2638706 ns          274         104.166k           247.705M         26.539k        2.7057M    8.16045M               12.922            392.24       3.20086G          13.6932M                    21.6831                       1.678           45.1076k    104.446k   631.515k       235.745M/s   26.5341k    2.7065M   8.16836M         12.9346    391.434/s 3.19738G/s     13.6932M               21.6831                1.67637        115       45.0149k/s [BEST: throughput=  0.25 GB/s doc_throughput=   392 docs/s instructions=    13693224 cycles=     8160452 branch_miss=  104166 cache_miss=   26539 cache_ref=   2705696 items=       115 avg_time=   2554707 ns]
distinct_user_id<simdjson_ondemand>/manual_time          1779411 ns      1863654 ns          393          78.378k           355.854M         22.541k       1.25884M    5.68033M              8.99477           563.492       3.20082G          8.54215M                    13.5264                     1.50381           64.8016k    78.7891k   631.515k        338.46M/s   22.5583k   1.25986M   5.68961M         9.00947    561.984/s 3.19747G/s     8.54215M               13.5264                1.50136        115       64.6281k/s [BEST: throughput=  0.36 GB/s doc_throughput=   563 docs/s instructions=     8542153 cycles=     5680331 branch_miss=   78378 cache_miss=   22541 cache_ref=   1258844 items=       115 avg_time=   1779410 ns]
distinct_user_id<yyjson>/manual_time                     1139554 ns      1227303 ns          637          46.294k            612.64M         24.251k       1.39683M    3.30041M              5.22617           970.111       3.20176G          3.23395M                    5.12094                    0.979865           111.563k    46.0821k   631.515k       528.505M/s   24.2549k    1.3974M   3.51142M         5.56031    877.537/s  3.0814G/s     3.23383M               5.12075               0.920947        115       100.917k/s [BEST: throughput=  0.61 GB/s doc_throughput=   970 docs/s instructions=     3233953 cycles=     3300406 branch_miss=   46294 cache_miss=   24251 cache_ref=   1396832 items=       115 avg_time=   1139553 ns]
distinct_user_id<yyjson_insitu>/manual_time              1089169 ns      1177656 ns          643           46.42k           639.841M         14.422k        1.2392M    3.16018M              5.00412           1013.18       3.20184G          3.13481M                    4.96396                    0.991974           116.516k    46.0493k   631.515k       552.953M/s   14.3921k   1.23846M   3.36748M         5.33238    918.131/s 3.09179G/s     3.13481M               4.96395               0.930907        115       105.585k/s [BEST: throughput=  0.64 GB/s doc_throughput=  1013 docs/s instructions=     3134813 cycles=     3160176 branch_miss=   46420 cache_miss=   14422 cache_ref=   1239203 items=       115 avg_time=   1089169 ns]
distinct_user_id<sajson>/manual_time                     1446211 ns      1534423 ns          482           58.83k           437.828M         12.754k       1.85936M    4.61724M              7.31137           693.297       3.20112G          5.49513M                     8.7015                     1.19013           79.7292k    59.1234k   631.515k        416.44M/s   12.7848k   1.86019M   4.62428M         7.32252    691.462/s 3.19751G/s     5.49513M                8.7015                1.18832        115       79.5181k/s [BEST: throughput=  0.44 GB/s doc_throughput=   693 docs/s instructions=     5495130 cycles=     4617237 branch_miss=   58830 cache_miss=   12754 cache_ref=   1859363 items=       115 avg_time=   1446211 ns]
distinct_user_id<rapidjson>/manual_time                  4650484 ns      4741553 ns          150          80.057k           138.559M         13.729k       13.3993M    14.5869M              23.0983           219.408       3.20048G          20.6346M                    32.6747                     1.41459           25.2319k    80.1203k   631.515k       129.505M/s   14.0017k   13.4014M    14.689M           23.26    215.031/s  3.1586G/s     20.6353M               32.6759                1.40481        115       24.7286k/s [BEST: throughput=  0.14 GB/s doc_throughput=   219 docs/s instructions=    20634565 cycles=    14586907 branch_miss=   80057 cache_miss=   13729 cache_ref=  13399298 items=       115 avg_time=   4650484 ns]
distinct_user_id<rapidjson_insitu>/manual_time           2861099 ns      2952631 ns          245          61.105k           225.392M         14.177k       5.83845M    8.96807M              14.2009           356.906       3.20076G          12.7767M                    20.2318                     1.42468           41.0442k    60.8024k   631.515k       210.499M/s   14.3716k   5.83835M   8.99098M         14.2372    349.516/s 3.14249G/s     12.7772M               20.2327                1.42112        115       40.1943k/s [BEST: throughput=  0.23 GB/s doc_throughput=   356 docs/s instructions=    12776660 cycles=     8968073 branch_miss=   61105 cache_miss=   14177 cache_ref=   5838448 items=       115 avg_time=   2861098 ns]
distinct_user_id<nlohmann_json>/manual_time             21790499 ns     21887126 ns           33         388.087k           31.0068M        163.885k        48.417M    65.1062M              103.095           49.0991       3.19665G          76.8572M                    121.703                     1.18049           5.64639k    405.961k   631.515k       27.6386M/s   225.053k    47.868M   69.6577M         110.303    45.8916/s  3.1967G/s     75.2325M                119.13                1.08003        115       5.27753k/s [BEST: throughput=  0.03 GB/s doc_throughput=    49 docs/s instructions=    76857164 cycles=    65106198 branch_miss=  388087 cache_miss=  163885 cache_ref=  48416963 items=       115 avg_time=  21790498 ns]
find_tweet<simdjson_dom>/manual_time                     2505263 ns      2595202 ns          279         104.124k           252.544M         23.538k       2.69029M    8.00405M              12.6744           399.901       3.20083G          13.6028M                      21.54                     1.69949            399.901    104.289k   631.515k       240.398M/s   23.5373k   2.69082M   8.01004M         12.6838     399.16/s 3.19728G/s     13.6028M                 21.54                1.69822          1         399.16/s [BEST: throughput=  0.25 GB/s doc_throughput=   399 docs/s instructions=    13602813 cycles=     8004048 branch_miss=  104124 cache_miss=   23538 cache_ref=   2690292 items=         1 avg_time=   2505263 ns]
find_tweet<simdjson_ondemand>/manual_time                1650322 ns      1739960 ns          424          74.323k           383.278M         11.556k       1067.97k    5.27456M              8.35224           606.918       3.20122G          7.99241M                    12.6559                     1.51527            606.918    74.4686k   631.515k       364.935M/s   11.5549k   1068.03k   5.27719M         8.35639    605.942/s 3.19767G/s      7.9924M               12.6559                1.51452          1        605.942/s [BEST: throughput=  0.38 GB/s doc_throughput=   606 docs/s instructions=     7992407 cycles=     5274562 branch_miss=   74323 cache_miss=   11556 cache_ref=   1067972 items=         1 avg_time=   1650322 ns]
find_tweet<yyjson>/manual_time                           1122320 ns      1216806 ns          628          46.217k           629.215M         21.723k       1.38097M    3.15784M              5.00041           996.358       3.14634G          3.17691M                    5.03061                     1.00604            996.358    46.1159k   631.515k        536.62M/s   21.7578k   1.38204M   3.36118M          5.3224    891.011/s 2.99485G/s     3.17713M               5.03096               0.945243          1        891.011/s [BEST: throughput=  0.63 GB/s doc_throughput=   996 docs/s instructions=     3176906 cycles=     3157837 branch_miss=   46217 cache_miss=   21723 cache_ref=   1380966 items=         1 avg_time=   1122320 ns]
find_tweet<yyjson_insitu>/manual_time                    1040730 ns      1136397 ns          674          46.203k            671.15M         11.837k       1.22359M    3.01277M              4.77071           1062.76       3.20186G          3.07792M                    4.87386                     1.02162            1062.76    46.0745k   631.515k        578.69M/s   11.8652k   1.22315M   3.21331M         5.08826    960.864/s 3.08756G/s     3.07806M                4.8741                0.95791          1        960.864/s [BEST: throughput=  0.67 GB/s doc_throughput=  1062 docs/s instructions=     3077916 cycles=     3012774 branch_miss=   46203 cache_miss=   11837 cache_ref=   1223592 items=         1 avg_time=   1040729 ns]
find_tweet<sajson>/manual_time                           1400998 ns      1495519 ns          500           58.51k           451.941M         10.184k        1.8399M    4.47323M              7.08334           715.645       3.20125G           5.4077M                    8.56306                      1.2089            715.645    58.7861k   631.515k       429.879M/s   10.1973k   1.84067M   4.47983M         7.09378    713.777/s  3.1976G/s      5.4077M               8.56306                1.20712          1        713.777/s [BEST: throughput=  0.45 GB/s doc_throughput=   715 docs/s instructions=     5407701 cycles=     4473234 branch_miss=   58510 cache_miss=   10184 cache_ref=   1839895 items=         1 avg_time=   1400997 ns]
find_tweet<rapidjson>/manual_time                        4599047 ns      4695536 ns          152          79.998k           139.429M          11.01k       13.3832M    14.4962M              22.9547           220.784       3.20054G          20.5762M                    32.5823                     1.41942            220.784    79.9987k   631.515k       130.953M/s   11.2537k   13.3899M   14.5269M         23.0033    217.436/s 3.15868G/s     20.5768M               32.5832                1.41646          1        217.436/s [BEST: throughput=  0.14 GB/s doc_throughput=   220 docs/s instructions=    20576222 cycles=    14496230 branch_miss=   79998 cache_miss=   11010 cache_ref=  13383176 items=         1 avg_time=   4599046 ns]
find_tweet<rapidjson_insitu>/manual_time                 2827678 ns      2927410 ns          248          60.958k           227.862M         10.919k       5.82173M    8.87069M              14.0467           360.818       3.20071G          12.7184M                    20.1395                     1.43376            360.818    60.7551k   631.515k       212.987M/s   11.0721k    5.8241M   8.88445M         14.0685    353.647/s 3.14196G/s     12.7189M               20.1403                1.43159          1        353.647/s [BEST: throughput=  0.23 GB/s doc_throughput=   360 docs/s instructions=    12718426 cycles=     8870691 branch_miss=   60958 cache_miss=   10919 cache_ref=   5821731 items=         1 avg_time=   2827678 ns]
find_tweet<nlohmann_json>/manual_time                   18610444 ns     18713685 ns           38         299.288k           36.2982M         90.172k       42.6735M    55.6057M              88.0512            57.478        3.1961G          66.7359M                    105.676                     1.20016             57.478    315.927k   631.515k       32.3614M/s   142.831k   42.0987M   59.4899M         94.2018    53.7333/s 3.19659G/s     65.0778M                103.05                1.09393          1        53.7333/s [BEST: throughput=  0.04 GB/s doc_throughput=    57 docs/s instructions=    66735929 cycles=    55605660 branch_miss=  299288 cache_miss=   90172 cache_ref=  42673497 items=         1 avg_time=  18610444 ns]
top_tweet<simdjson_dom>/manual_time                      2540397 ns      2641795 ns          276         104.258k           249.102M         25.621k       2.69701M    8.11484M              12.8498           394.451       3.20091G          13.6421M                    21.6022                     1.68113            394.451    104.453k   631.515k       237.073M/s   25.6243k   2.69752M   8.12233M         12.8617    393.639/s 3.19727G/s     13.6421M               21.6022                1.67958          1        393.639/s [BEST: throughput=  0.25 GB/s doc_throughput=   394 docs/s instructions=    13642085 cycles=     8114839 branch_miss=  104258 cache_miss=   25621 cache_ref=   2697005 items=         1 avg_time=   2540397 ns]
top_tweet<simdjson_ondemand>/manual_time                 1782739 ns      1887289 ns          393          78.673k           355.405M         22.648k       1.25998M    5.68849M              9.00768           562.781       3.20137G          8.55032M                    13.5394                     1.50309            562.781    79.0595k   631.515k       337.828M/s   22.6274k    1.2608M   5.70022M         9.02626    560.935/s 3.19745G/s     8.55032M               13.5394                    1.5          1        560.935/s [BEST: throughput=  0.36 GB/s doc_throughput=   562 docs/s instructions=     8550316 cycles=     5688487 branch_miss=   78673 cache_miss=   22648 cache_ref=   1259978 items=         1 avg_time=   1782738 ns]
top_tweet<simdjson_ondemand_forward_only>/manual_time    1813915 ns      1921736 ns          386           79.19k           349.019M         22.842k       1.33082M    5.79248M              9.17235           552.669       3.20132G          8.82613M                    13.9761                     1.52372            552.669    79.5336k   631.515k       332.022M/s   22.8321k   1.33178M   5.80078M         9.18549    551.294/s 3.19793G/s     8.82613M               13.9761                1.52154          1        551.294/s [BEST: throughput=  0.35 GB/s doc_throughput=   552 docs/s instructions=     8826132 cycles=     5792475 branch_miss=   79190 cache_miss=   22842 cache_ref=   1330821 items=         1 avg_time=   1813915 ns]
top_tweet<yyjson>/manual_time                            1151241 ns      1263025 ns          613          46.343k           624.816M         23.207k       1.38725M     3.2363M              5.12465           989.392       3.20196G          3.20176M                    5.06997                    0.989329            989.392    46.2538k   631.515k        523.14M/s   23.2738k   1.38858M    3.4552M         5.47129    868.628/s 3.00129G/s     3.20197M                5.0703               0.926711          1        868.628/s [BEST: throughput=  0.62 GB/s doc_throughput=   989 docs/s instructions=     3201759 cycles=     3236295 branch_miss=   46343 cache_miss=   23207 cache_ref=   1387254 items=         1 avg_time=   1151240 ns]
top_tweet<yyjson_insitu>/manual_time                     1071206 ns      1186372 ns          655          46.046k           651.666M         13.366k       1.22935M    3.10304M              4.91365           1031.91       3.20206G          3.10306M                    4.91367                     1.00001            1031.91    46.1801k   631.515k       562.226M/s   13.3674k   1.22972M   3.31073M         5.24252    933.527/s 3.09066G/s     3.10321M               4.91391               0.937318          1        933.527/s [BEST: throughput=  0.65 GB/s doc_throughput=  1031 docs/s instructions=     3103059 cycles=     3103042 branch_miss=   46046 cache_miss=   13366 cache_ref=   1229351 items=         1 avg_time=   1071206 ns]
top_tweet<sajson>/manual_time                            1420822 ns      1535094 ns          493          58.395k           445.829M         11.785k       1.84707M    4.53483M              7.18088           705.968       3.20145G          5.43458M                    8.60563                     1.19841            705.968    58.9259k   631.515k       423.881M/s   11.7829k   1.84849M   4.54364M         7.19483    703.818/s  3.1979G/s     5.43458M               8.60562                1.19608          1        703.818/s [BEST: throughput=  0.45 GB/s doc_throughput=   705 docs/s instructions=     5434583 cycles=     4534834 branch_miss=   58395 cache_miss=   11785 cache_ref=   1847070 items=         1 avg_time=   1420822 ns]
top_tweet<rapidjson>/manual_time                         4621050 ns      4740384 ns          151          79.841k           138.768M         12.888k        13.398M    14.5651M              23.0638           219.739       3.20052G          20.6218M                    32.6546                     1.41584            219.739    79.9563k   631.515k        130.33M/s   13.1352k   13.4073M   14.5961M         23.1128    216.401/s 3.15861G/s     20.6226M               32.6558                1.41288          1        216.401/s [BEST: throughput=  0.14 GB/s doc_throughput=   219 docs/s instructions=    20621841 cycles=    14565130 branch_miss=   79841 cache_miss=   12888 cache_ref=  13398047 items=         1 avg_time=   4621050 ns]
top_tweet<rapidjson_insitu>/manual_time                  2854604 ns      2975898 ns          246          60.886k           226.221M         13.065k       5.83441M    8.93501M              14.1485           358.219       3.20069G          12.7637M                    20.2113                     1.42851            358.219    60.9658k   631.515k       210.978M/s   13.2798k   5.83878M   8.96872M         14.2019    350.311/s 3.14184G/s     12.7643M               20.2122                 1.4232          1        350.311/s [BEST: throughput=  0.23 GB/s doc_throughput=   358 docs/s instructions=    12763726 cycles=     8935014 branch_miss=   60886 cache_miss=   13065 cache_ref=   5834415 items=         1 avg_time=   2854604 ns]
top_tweet<nlohmann_json>/manual_time                    24259426 ns     24385708 ns           28         484.623k           26.0642M        354.323k       54.4967M    77.4479M              122.638           41.2725       3.19647G          88.7713M                    140.569                     1.14621            41.2725    488.129k   631.515k       24.8258M/s   353.442k   54.5098M   77.5396M         122.783    41.2211/s 3.19627G/s     88.7645M               140.558                1.14476          1        41.2211/s [BEST: throughput=  0.03 GB/s doc_throughput=    41 docs/s instructions=    88771299 cycles=    77447918 branch_miss=  484623 cache_miss=  354323 cache_ref=  54496675 items=         1 avg_time=  24259426 ns]
