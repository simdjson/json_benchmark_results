run_benchmark: v0.8.0 /home/jkeiser/simdjson_benchmark_results/v0.8.0/skylake-gcc10.2.json -DCMAKE_BUILD_TYPE=Release
git reset --hard v0.8.0
HEAD is now at c96ff018 Version 0.8.
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The CXX compiler identification is GNU 10.2.0
-- The C compiler identification is GNU 10.2.0
-- Check for working CXX compiler: /usr/bin/g++-10
-- Check for working CXX compiler: /usr/bin/g++-10 -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Check for working C compiler: /usr/bin/gcc-10
-- Check for working C compiler: /usr/bin/gcc-10 -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed
-- Check if compiler accepts -pthread
-- Check if compiler accepts -pthread - yes
-- Found Threads: TRUE  
-- Looking for fork
-- Looking for fork - found
-- Looking for wait
-- Looking for wait - found
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- Found Git: /usr/bin/git (found version "2.27.0") 
-- git Version: v0.2.1-c96ff018
-- Version: 0.2.1
-- Performing Test HAVE_CXX_FLAG_STD_CXX11
-- Performing Test HAVE_CXX_FLAG_STD_CXX11 - Success
-- Performing Test HAVE_CXX_FLAG_WALL
-- Performing Test HAVE_CXX_FLAG_WALL - Success
-- Performing Test HAVE_CXX_FLAG_WEXTRA
-- Performing Test HAVE_CXX_FLAG_WEXTRA - Success
-- Performing Test HAVE_CXX_FLAG_WSHADOW
-- Performing Test HAVE_CXX_FLAG_WSHADOW - Success
-- Performing Test HAVE_CXX_FLAG_WERROR
-- Performing Test HAVE_CXX_FLAG_WERROR - Success
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32 - Failed
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED - Success
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WD654
-- Performing Test HAVE_CXX_FLAG_WD654 - Failed
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY - Failed
-- Performing Test HAVE_CXX_FLAG_COVERAGE
-- Performing Test HAVE_CXX_FLAG_COVERAGE - Success
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Performing Test USE_BOOST_JSON
-- Performing Test USE_BOOST_JSON - Failed
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Found Python3: /usr/bin/python3.8 (found version "3.8.6") found components: Interpreter 
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 10
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
Scanning dependencies of target benchmark
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_api_internal.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_name.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_name.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_register.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_register.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_runner.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_runner.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/colorprint.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/colorprint.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/commandlineflags.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/commandlineflags.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/complexity.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/complexity.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/console_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/console_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/counter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/counter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/csv_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/csv_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/json_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/json_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/sleep.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sleep.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/statistics.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/statistics.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/string_util.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/string_util.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/sysinfo.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sysinfo.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/g++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/timers.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/timers.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -P CMakeFiles/benchmark.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/benchmark.dir/link.txt --verbose=1
/usr/bin/ar qc libbenchmark.a  CMakeFiles/benchmark.dir/benchmark.cc.o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o CMakeFiles/benchmark.dir/benchmark_name.cc.o CMakeFiles/benchmark.dir/benchmark_register.cc.o CMakeFiles/benchmark.dir/benchmark_runner.cc.o CMakeFiles/benchmark.dir/colorprint.cc.o CMakeFiles/benchmark.dir/commandlineflags.cc.o CMakeFiles/benchmark.dir/complexity.cc.o CMakeFiles/benchmark.dir/console_reporter.cc.o CMakeFiles/benchmark.dir/counter.cc.o CMakeFiles/benchmark.dir/csv_reporter.cc.o CMakeFiles/benchmark.dir/json_reporter.cc.o CMakeFiles/benchmark.dir/reporter.cc.o CMakeFiles/benchmark.dir/sleep.cc.o CMakeFiles/benchmark.dir/statistics.cc.o CMakeFiles/benchmark.dir/string_util.cc.o CMakeFiles/benchmark.dir/sysinfo.cc.o CMakeFiles/benchmark.dir/timers.cc.o
/usr/bin/ranlib libbenchmark.a
[ 80%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
Scanning dependencies of target generated-data
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated && /usr/bin/ruby genfeaturejson.rb /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-miss.json ...
[ 80%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/g++-10  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/include  -O3 -DNDEBUG -fPIC   -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -pthread -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/g++-10 -fPIC -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.7 -o ../libsimdjson.so.7.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.7.0.0 ../libsimdjson.so.7 ../libsimdjson.so
[ 80%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
Scanning dependencies of target yyjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/gcc-10  -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src  -O3 -DNDEBUG   -o CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o   -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src/yyjson.c
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -P CMakeFiles/yyjson.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -E cmake_link_script CMakeFiles/yyjson.dir/link.txt --verbose=1
/usr/bin/ar qc libyyjson.a  CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o
/usr/bin/ranlib libyyjson.a
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/g++-10  -DRAPIDJSON_HAS_STDSTRING -DSAJSON_UNSORTED_OBJECT_KEYS -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_COMPETITION_NLOHMANN_JSON -DSIMDJSON_COMPETITION_RAPIDJSON -DSIMDJSON_COMPETITION_SAJSON -DSIMDJSON_COMPETITION_YYJSON -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/rapidjson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/sajson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/json  -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/g++-10  -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.7.0.0 ../_deps/google_benchmarks/src/libbenchmark.a ../dependencies/libyyjson.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.8.0/skylake-gcc10.2.json --benchmark_out_format=json
2021-01-25 02:58:34
Running benchmark/bench_ondemand
Run on (4 X 4000 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 256 KiB (x4)
  L3 Unified 8192 KiB (x1)
Load Average: 1.00, 1.00, 0.88
simdjson::dom implementation:      haswell
simdjson::ondemand implementation: fallback

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                  263225 ns       291874 ns         2663             3.8k           2.41529G               2        92.926k    965.412k              1.52872           3.8246k       3.69232G           2.9625M                     4.6911                     3.06864            382.46k    3.97182k   631.515k       2.23438G/s     7.8528   92.9885k   971.437k         1.53826   3.79903k/s 3.69051G/s      2.9625M                4.6911                3.04961        100       379.903k/s [BEST: throughput=  2.42 GB/s doc_throughput=  3824 docs/s instructions=     2962503 cycles=      965412 branch_miss=    3800 cache_miss=       2 cache_ref=     92926 items=       100 avg_time=    263225 ns]
partial_tweets<simdjson_ondemand>/manual_time             190471 ns       219015 ns         3675           2.205k           3.33519G               0        58.656k    699.243k              1.10725          5.28125k       3.69288G          2.46019M                    3.89569                     3.51836           528.125k    2.34447k   631.515k       3.08784G/s    0.10585    58.684k   703.067k          1.1133   5.25014k/s  3.6912G/s     2.46019M               3.89569                3.49922        100       525.014k/s [BEST: throughput=  3.34 GB/s doc_throughput=  5281 docs/s instructions=     2460189 cycles=      699243 branch_miss=    2205 cache_miss=       0 cache_ref=     58656 items=       100 avg_time=    190471 ns]
partial_tweets<yyjson>/manual_time                        701206 ns       731875 ns          998           9.621k           1.54223G             148         78.36k    1.51193M              2.39413           2.4421k       3.69229G          2.90845M                    4.60552                     1.92367            244.21k    7.49055k   631.515k       858.891M/s    970.916   51.2759k   1.73663M         2.74993   1.42611k/s 2.47663G/s     2.90894M               4.60629                1.67505        100       142.611k/s [BEST: throughput=  1.54 GB/s doc_throughput=  2442 docs/s instructions=     2908453 cycles=     1511928 branch_miss=    9621 cache_miss=     148 cache_ref=     78360 items=       100 avg_time=    701206 ns]
partial_tweets<yyjson_insitu>/manual_time                 490664 ns       520101 ns         1427           7.286k           1.70649G              25        48.726k    1.36642M              2.16372          2.70222k       3.69238G          2.90814M                    4.60501                     2.12828           270.222k    7.36043k   631.515k       1.19867G/s    126.863   33.5895k   1.46534M         2.32035   2.03805k/s 2.98644G/s      2.9084M               4.60543                 1.9848        100       203.805k/s [BEST: throughput=  1.71 GB/s doc_throughput=  2702 docs/s instructions=     2908136 cycles=     1366424 branch_miss=    7286 cache_miss=      25 cache_ref=     48726 items=       100 avg_time=    490664 ns]
partial_tweets<sajson>/manual_time                        542361 ns       571066 ns         1288          10.657k            1.1797G               0        48.869k    1.97626M               3.1294          1.86805k       3.69176G          6.05184M                    9.58305                     3.06227           186.805k    11.2768k   631.515k       1110.44M/s     12.045   48.7567k    2.0013M         3.16904   1.84379k/s 3.68997G/s     6.05184M               9.58305                3.02396        100       184.379k/s [BEST: throughput=  1.18 GB/s doc_throughput=  1868 docs/s instructions=     6051839 cycles=     1976262 branch_miss=   10657 cache_miss=       0 cache_ref=     48869 items=       100 avg_time=    542361 ns]
partial_tweets<rapidjson>/manual_time                    1472406 ns      1501742 ns          482          28.172k            496.86M          1.883k        54.051k    4.69213M              7.42995           786.775       3.69165G          13.4094M                    21.2337                     2.85785           78.6775k    28.1164k   631.515k       409.031M/s    468.606   34.4463k   4.84211M         7.66746    679.161/s 3.28857G/s     13.4102M                21.235                 2.7695        100       67.9161k/s [BEST: throughput=  0.50 GB/s doc_throughput=   786 docs/s instructions=    13409402 cycles=     4692128 branch_miss=   28172 cache_miss=    1883 cache_ref=     54051 items=       100 avg_time=   1472405 ns]
partial_tweets<rapidjson_insitu>/manual_time             1000496 ns      1029700 ns          705          25.905k           721.799M              50        45.519k    3.22996M              5.11463          1.14296k       3.69173G          9.75515M                    15.4472                      3.0202           114.296k    26.3482k   631.515k       601.961M/s        218   35.3337k   3.34371M         5.29475    999.504/s 3.34205G/s     9.75554M               15.4478                2.91758        100       99.9504k/s [BEST: throughput=  0.72 GB/s doc_throughput=  1142 docs/s instructions=     9755147 cycles=     3229963 branch_miss=   25905 cache_miss=      50 cache_ref=     45519 items=       100 avg_time=   1000496 ns]
partial_tweets<nlohmann_json>/manual_time                7814273 ns      7849626 ns           90         139.948k           83.7446M              30       233.164k    27.8272M              44.0642           132.609       3.69014G          71.1805M                    112.714                     2.55795           13.2609k    152.725k   631.515k       77.0717M/s    75.9667   372.073k   28.8296M         45.6514    127.971/s 3.68935G/s     71.8121M               113.714                2.49092        100       12.7971k/s [BEST: throughput=  0.08 GB/s doc_throughput=   132 docs/s instructions=    71180467 cycles=    27827191 branch_miss=  139948 cache_miss=      30 cache_ref=    233164 items=       100 avg_time=   7814272 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                  92605348 ns     96002354 ns            8         923.695k           499.773M        11.0441M       15.6078M    339.524M              7.38116           10.8649       3.68891G          983.113M                    21.3726                     2.89556           10.8649M    921.607k   45.9988M       473.708M/s   11.0673M   15.6118M   341.605M          7.4264    10.7985/s 3.68883G/s     983.113M               21.3726                2.87792      1000k       10.7985M/s [BEST: throughput=  0.50 GB/s doc_throughput=    10 docs/s instructions=   983112701 cycles=   339524491 branch_miss=  923695 cache_miss=11044073 cache_ref=  15607803 items=   1000000 avg_time=  92605348 ns]
large_random<simdjson_ondemand>/manual_time             59862511 ns     63242338 ns           12         888.144k           772.665M        5.70488M       8.08696M    219.611M              4.77428           16.7975       3.68891G           642.49M                    13.9675                     2.92558           16.7975M    897.592k   45.9988M        732.81M/s   5.73238M   8.08859M   220.827M         4.80071    16.7049/s  3.6889G/s      642.49M               13.9675                2.90948      1000k       16.7049M/s [BEST: throughput=  0.77 GB/s doc_throughput=    16 docs/s instructions=   642489790 cycles=   219610890 branch_miss=  888144 cache_miss= 5704884 cache_ref=   8086963 items=   1000000 avg_time=  59862511 ns]
large_random<simdjson_ondemand_unordered>/manual_time   63159066 ns     66547224 ns           11         898.066k            729.16M        5.71993M       8.10598M    232.712M               5.0591           15.8517       3.68889G           646.49M                    14.0545                     2.77806           15.8517M    899.793k   45.9988M       694.561M/s   5.75748M   8.10893M   232.972M         5.06473     15.833/s 3.68865G/s      646.49M               14.0545                2.77497      1000k        15.833M/s [BEST: throughput=  0.73 GB/s doc_throughput=    15 docs/s instructions=   646489795 cycles=   232712386 branch_miss=  898066 cache_miss= 5719931 cache_ref=   8105977 items=   1000000 avg_time=  63159066 ns]
large_random<yyjson>/manual_time                       127555756 ns    130982699 ns            5         662.399k           360.764M        6.03569M       9.24524M    350.801M              7.62631            7.8429        2.7513G           944.15M                    20.5255                     2.69141            7.8429M    661.834k   45.9988M       343.911M/s   6.03804M   9.26049M   350.717M         7.62449    7.83971/s 2.74952G/s     944.149M               20.5255                2.69205      1000k       7.83971M/s [BEST: throughput=  0.36 GB/s doc_throughput=     7 docs/s instructions=   944149642 cycles=   350800731 branch_miss=  662399 cache_miss= 6035694 cache_ref=   9245244 items=   1000000 avg_time= 127555755 ns]
large_random<yyjson_insitu>/manual_time                109816731 ns    113244349 ns            6         662.269k           419.027M        5.14056M       7.88774M     319.56M              6.94715           9.10953       2.91104G          938.029M                    20.3925                     2.93537           9.10953M    661.765k   45.9988M       399.464M/s   5.13286M   7.87499M    319.53M         6.94648    9.10608/s 2.90966G/s     938.029M               20.3925                2.93566      1000k       9.10608M/s [BEST: throughput=  0.42 GB/s doc_throughput=     9 docs/s instructions=   938028877 cycles=   319560270 branch_miss=  662269 cache_miss= 5140560 cache_ref=   7887738 items=   1000000 avg_time= 109816730 ns]
large_random<sajson>/manual_time                        93554272 ns     96963552 ns            7         583.009k           492.263M        8.49978M       12.2991M    344.725M              7.49423           10.7017       3.68913G          1099.99M                    23.9134                     3.19091           10.7017M     583.06k   45.9988M       468.903M/s   8.53966M   12.3274M   345.119M         7.50279     10.689/s 3.68897G/s     1099.99M               23.9134                3.18727      1000k        10.689M/s [BEST: throughput=  0.49 GB/s doc_throughput=    10 docs/s instructions=  1099987387 cycles=   344725482 branch_miss=  583009 cache_miss= 8499780 cache_ref=  12299133 items=   1000000 avg_time=  93554272 ns]
large_random<rapidjson>/manual_time                    173120298 ns    176547773 ns            4         600.136k           277.161M        7.09431M       10.9235M    554.188M              12.0479           6.02539        3.3392G          1.66014G                     36.091                     2.99563           6.02539M    600.462k   45.9988M       253.395M/s   6.53249M   10.1631M   559.667M          12.167    5.77633/s 3.23282G/s     1.66015G               36.0912                2.96632      1000k       5.77633M/s [BEST: throughput=  0.28 GB/s doc_throughput=     6 docs/s instructions=  1660143017 cycles=   554188099 branch_miss=  600136 cache_miss= 7094315 cache_ref=  10923519 items=   1000000 avg_time= 173120298 ns]
large_random<rapidjson_lossless>/manual_time           200660073 ns    204097639 ns            4         608.367k           237.561M        7.10284M       10.9055M    656.259M              14.2669           5.16451       3.38926G          2.02311G                    43.9818                     3.08279           5.16451M     607.22k   45.9988M       218.618M/s   6.53547M    10.166M   661.149M         14.3732    4.98355/s 3.29487G/s     2.02312G                43.982                3.06001      1000k       4.98355M/s [BEST: throughput=  0.24 GB/s doc_throughput=     5 docs/s instructions=  2023110056 cycles=   656258964 branch_miss=  608367 cache_miss= 7102844 cache_ref=  10905520 items=   1000000 avg_time= 200660072 ns]
large_random<rapidjson_insitu>/manual_time             161594310 ns    165019949 ns            5          591.41k           298.634M        8.19216M       12.5057M    510.144M              11.0904           6.49222       3.31196G          1.49214G                    32.4387                     2.92494           6.49222M    590.236k   45.9988M       271.469M/s   7.61561M    11.704M   515.595M         11.2089    6.18834/s 3.19068G/s     1.49215G               32.4389                2.89403      1000k       6.18834M/s [BEST: throughput=  0.30 GB/s doc_throughput=     6 docs/s instructions=  1492140617 cycles=   510143537 branch_miss=  591410 cache_miss= 8192164 cache_ref=  12505660 items=   1000000 avg_time= 161594309 ns]
large_random<nlohmann_json>/manual_time               1217746787 ns   1221199624 ns            1         4.56163M           37.7737M        48.1133M       62.1243M    4.48003G              97.3945          0.821189       3.67895G          11.9494G                    259.776                     2.66725           821.189k    4.56163M   45.9988M       36.0238M/s   48.1133M   62.1243M   4.48003G         97.3945   0.821189/s 3.67895G/s     11.9494G               259.776                2.66725      1000k       821.189k/s [BEST: throughput=  0.04 GB/s doc_throughput=     0 docs/s instructions= 11949360089 cycles=  4480025777 branch_miss= 4561631 cache_miss=48113350 cache_ref=  62124308 items=   1000000 avg_time=1217746787 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                        85362623 ns     95676729 ns            8         463.748k           1.61005G         15.937M       22.5776M    314.592M              2.29119           11.7261       3.68894G          945.501M                    6.88614                     3.00549           6.14786M    464.179k   137.305M       1.49802G/s   15.9696M    22.597M   314.895M          2.2934    11.7147/s 3.68891G/s     945.501M               6.88614                 3.0026   524.288k       6.14189M/s [BEST: throughput=  1.61 GB/s doc_throughput=    11 docs/s instructions=   945501401 cycles=   314591749 branch_miss=  463748 cache_miss=15936992 cache_ref=  22577590 items=    524288 avg_time=  85362623 ns]
kostya<simdjson_ondemand>/manual_time                   58345491 ns     68628399 ns           12         492.462k           2.35753G        10.2471M       14.2497M    214.838M              1.56468             17.17       3.68877G          676.213M                     4.9249                     3.14755           9.00203M    494.019k   137.305M       2.19169G/s   10.2642M   14.1593M   215.218M         1.56745    17.1393/s 3.68869G/s     676.213M                4.9249                3.14199   524.288k       8.98592M/s [BEST: throughput=  2.36 GB/s doc_throughput=    17 docs/s instructions=   676213307 cycles=   214837697 branch_miss=  492462 cache_miss=10247076 cache_ref=  14249660 items=    524288 avg_time=  58345490 ns]
kostya<yyjson>/manual_time                             206985133 ns    217335551 ns            3         417.374k           663.749M        11.7795M       16.6127M    565.713M              4.12012           4.83412       2.73472G          984.045M                    7.16686                     1.73948           2.53447M    416.536k   137.305M       632.626M/s   11.7777M   16.6432M    565.65M         4.11966    4.83126/s  2.7328G/s     984.045M               7.16686                1.73967   524.288k       2.53297M/s [BEST: throughput=  0.66 GB/s doc_throughput=     4 docs/s instructions=   984045291 cycles=   565712746 branch_miss=  417374 cache_miss=11779473 cache_ref=  16612748 items=    524288 avg_time= 206985133 ns]
kostya<yyjson_insitu>/manual_time                      153756270 ns    164106595 ns            5         411.839k           893.215M        9.07878M       12.4875M    472.495M              3.44121           6.50533       3.07374G          965.775M                     7.0338                     2.04399           3.41067M    412.198k   137.305M       851.635M/s    9.0806M   12.5176M   472.517M         3.44137     6.5038/s 3.07315G/s     965.775M                7.0338                 2.0439   524.288k       3.40986M/s [BEST: throughput=  0.89 GB/s doc_throughput=     6 docs/s instructions=   965775268 cycles=   472494688 branch_miss=  411839 cache_miss= 9078780 cache_ref=  12487471 items=    524288 avg_time= 153756270 ns]
kostya<sajson>/manual_time                             135507549 ns    145843408 ns            5         443.812k           1016.72M        12.6782M       17.6634M    498.164M              3.62816           7.40484       3.68882G          1.62034G                     11.801                     3.25263           3.88227M    444.333k   137.305M       966.324M/s   12.6817M   17.6658M   499.847M         3.64041    7.37966/s  3.6887G/s     1.62034G                11.801                3.24168   524.288k       3.86907M/s [BEST: throughput=  1.02 GB/s doc_throughput=     7 docs/s instructions=  1620343044 cycles=   498164058 branch_miss=  443812 cache_miss=12678205 cache_ref=  17663352 items=    524288 avg_time= 135507549 ns]
kostya<rapidjson>/manual_time                          238168916 ns    248517591 ns            3         1036.02k           584.498M        8.31237M       12.2041M    785.337M              5.71965           4.25693       3.34312G          2.29873G                    16.7418                     2.92706           2.23186M    1028.58k   137.305M       549.796M/s   8.02878M   11.8855M   787.822M         5.73775     4.1987/s 3.30783G/s     2.29873G               16.7418                2.91783   524.288k       2.20133M/s [BEST: throughput=  0.58 GB/s doc_throughput=     4 docs/s instructions=  2298729686 cycles=   785336919 branch_miss= 1036022 cache_miss= 8312371 cache_ref=  12204106 items=    524288 avg_time= 238168916 ns]
kostya<rapidjson_lossless>/manual_time                 253098435 ns    263460388 ns            3         966.197k           549.972M        8.31817M       12.2946M    839.443M              6.11371           4.00548       3.36237G          2.50529G                    18.2462                     2.98447           2.10002M    965.953k   137.305M       517.365M/s   8.04397M   11.9359M   842.613M          6.1368    3.95103/s 3.32919G/s     2.50529G               18.2462                2.97324   524.288k       2.07148M/s [BEST: throughput=  0.55 GB/s doc_throughput=     4 docs/s instructions=  2505290621 cycles=   839443337 branch_miss=  966197 cache_miss= 8318174 cache_ref=  12294585 items=    524288 avg_time= 253098434 ns]
kostya<rapidjson_insitu>/manual_time                   219184887 ns    229558889 ns            3         999.477k           636.211M        11.5132M        16.105M    715.172M              5.20864           4.63356       3.31379G          2.03228G                    14.8012                     2.84166           2.42932M    999.892k   137.305M       597.415M/s   11.2344M   15.7636M   718.098M         5.22995    4.56236/s 3.27622G/s     2.03228G               14.8012                2.83008   524.288k       2.39199M/s [BEST: throughput=  0.64 GB/s doc_throughput=     4 docs/s instructions=  2032275230 cycles=   715171984 branch_miss=  999477 cache_miss=11513219 cache_ref=  16105008 items=    524288 avg_time= 219184887 ns]
kostya<nlohmann_json>/manual_time                     1607819686 ns   1618229153 ns            1          3.7754M           85.3983M        71.1921M        89.066M    5.93191G              43.2024           0.62196       3.68941G           15.147G                    110.317                     2.55349           326.086k     3.7754M   137.305M       81.4421M/s   71.1921M    89.066M   5.93191G         43.2024    0.62196/s 3.68941G/s      15.147G               110.317                2.55349   524.288k       326.086k/s [BEST: throughput=  0.09 GB/s doc_throughput=     0 docs/s instructions= 15147049446 cycles=  5931911695 branch_miss= 3775399 cache_miss=71192093 cache_ref=  89066033 items=    524288 avg_time=1607819686 ns]
distinct_user_id<simdjson_dom>/manual_time                258606 ns       289470 ns         2707           3.955k           2.45775G               0        94.499k    948.765k              1.50236          3.89184k       3.69244G          2.90343M                    4.59756                     3.06022           447.561k    4.13856k   631.515k       2.27429G/s    3.32878   94.4276k   954.426k         1.51133   3.86689k/s 3.69066G/s     2.90343M               4.59756                3.04207        115       444.692k/s [BEST: throughput=  2.46 GB/s doc_throughput=  3891 docs/s instructions=     2903428 cycles=      948765 branch_miss=    3955 cache_miss=       0 cache_ref=     94499 items=       115 avg_time=    258605 ns]
distinct_user_id<simdjson_ondemand>/manual_time           183396 ns       213730 ns         3816           1.977k            3.4652G               0        57.415k    673.056k              1.06578          5.48712k       3.69314G          2.15107M                    3.40621                     3.19598           631.019k    2.10016k   631.515k       3.20697G/s   0.119235    57.418k   676.986k           1.072   5.45269k/s 3.69139G/s     2.15108M               3.40621                3.17743        115       627.059k/s [BEST: throughput=  3.47 GB/s doc_throughput=  5487 docs/s instructions=     2151075 cycles=      673056 branch_miss=    1977 cache_miss=       0 cache_ref=     57415 items=       115 avg_time=    183395 ns]
distinct_user_id<yyjson>/manual_time                      611535 ns       645222 ns         1000           6.684k           1.60515G         22.071k        76.666k    1.45267M              2.30029          2.54174k       3.69231G          2.87509M                    4.55268                     1.97917             292.3k    7.41998k   631.515k       984.833M/s   7.33856k     57.62k   1.66329M         2.63381   1.63523k/s 2.71986G/s     2.87528M               4.55299                1.72867        115       188.051k/s [BEST: throughput=  1.61 GB/s doc_throughput=  2541 docs/s instructions=     2875088 cycles=     1452670 branch_miss=    6684 cache_miss=   22071 cache_ref=     76666 items=       115 avg_time=    611534 ns]
distinct_user_id<yyjson_insitu>/manual_time               484695 ns       517666 ns         1444           7.101k           1.72275G             581        46.801k       1.35M              2.13772          2.72796k       3.68275G          2.87457M                    4.55186                     2.12931           313.716k    7.47436k   631.515k       1.21343G/s    92.6856   32.1994k   1.45644M         2.30627   2.06315k/s 3.00486G/s     2.87483M               4.55228                1.97387        115       237.263k/s [BEST: throughput=  1.72 GB/s doc_throughput=  2727 docs/s instructions=     2874571 cycles=     1350000 branch_miss=    7101 cache_miss=     581 cache_ref=     46801 items=       115 avg_time=    484694 ns]
distinct_user_id<sajson>/manual_time                      538206 ns       569187 ns         1302          10.798k           1.18811G               0        47.801k    1.96227M              3.10725          1.88136k       3.69174G           5.9843M                    9.47611                     3.04968           216.356k    11.3459k   631.515k       1119.01M/s    3.26114   47.7907k   1.98597M         3.14477   1.85803k/s 3.68998G/s     5.98431M               9.47611                3.01329        115       213.673k/s [BEST: throughput=  1.19 GB/s doc_throughput=  1881 docs/s instructions=     5984305 cycles=     1962274 branch_miss=   10798 cache_miss=       0 cache_ref=     47801 items=       115 avg_time=    538205 ns]
distinct_user_id<rapidjson>/manual_time                  1441982 ns      1472986 ns          490           27.88k           504.476M              78        55.131k    4.61012M              7.30009           798.835       3.68272G          13.3498M                    21.1394                     2.89577            91.866k    28.0279k   631.515k       417.661M/s    868.324   34.9674k   4.76307M         7.54229     693.49/s 3.30314G/s     13.3506M               21.1407                2.80295        115       79.7513k/s [BEST: throughput=  0.50 GB/s doc_throughput=   798 docs/s instructions=    13349832 cycles=     4610119 branch_miss=   27880 cache_miss=      78 cache_ref=     55131 items=       115 avg_time=   1441982 ns]
distinct_user_id<rapidjson_insitu>/manual_time            977667 ns      1008306 ns          795          25.715k           726.023M              24        45.466k    3.21124M              5.08497          1.14965k       3.69181G          9.70594M                    15.3693                     3.02249            132.21k    26.3009k   631.515k       616.017M/s   2.00792k   36.7481k   3.31928M         5.25606    1022.84/s  3.3951G/s     9.70627M               15.3698                2.92421        115       117.627k/s [BEST: throughput=  0.73 GB/s doc_throughput=  1149 docs/s instructions=     9705942 cycles=     3211237 branch_miss=   25715 cache_miss=      24 cache_ref=     45466 items=       115 avg_time=    977667 ns]
distinct_user_id<nlohmann_json>/manual_time              7239157 ns      7274015 ns           99         115.659k            90.925M             113       223.919k    25.6308M              40.5862           143.979        3.6903G          66.6516M                    105.542                     2.60045           16.5576k    133.096k   631.515k       83.1947M/s    111.354   427.235k   26.7076M         42.2913    138.138/s 3.68932G/s      65.293M               103.391                2.44474        115       15.8858k/s [BEST: throughput=  0.09 GB/s doc_throughput=   143 docs/s instructions=    66651602 cycles=    25630775 branch_miss=  115659 cache_miss=     113 cache_ref=    223919 items=       115 avg_time=   7239157 ns]
find_tweet<simdjson_dom>/manual_time                      246211 ns       275497 ns         2842           3.585k           2.58373G               0         83.97k    902.515k              1.42913          4.09132k       3.69248G          2.82239M                    4.46923                     3.12725           4.09132k    3.78139k   631.515k       2.38878G/s    10.1816   83.8684k   908.717k         1.43895   4.06156k/s 3.69081G/s     2.82239M               4.46923                 3.1059          1       4.06156k/s [BEST: throughput=  2.58 GB/s doc_throughput=  4091 docs/s instructions=     2822388 cycles=      902515 branch_miss=    3585 cache_miss=       0 cache_ref=     83970 items=         1 avg_time=    246210 ns]
find_tweet<simdjson_ondemand>/manual_time                 116303 ns       144799 ns         6008              879           5.45298G               0         32.99k    427.752k             0.677343          8.63476k       3.69354G          1.50672M                    2.38588                     3.52242           8.63476k     941.276   631.515k       5.05702G/s  0.0244674   32.9162k   429.393k        0.679941   8.59827k/s 3.69203G/s     1.50672M               2.38588                3.50896          1       8.59827k/s [BEST: throughput=  5.45 GB/s doc_throughput=  8634 docs/s instructions=     1506722 cycles=      427752 branch_miss=     879 cache_miss=       0 cache_ref=     32990 items=         1 avg_time=    116302 ns]
find_tweet<yyjson>/manual_time                            675081 ns       705926 ns         1078           9.508k           1.58555G             112         68.85k    1.47069M              2.32882          2.51071k       3.69247G          2.82413M                    4.47199                     1.92028           2.51071k    7.37039k   631.515k       892.129M/s    1022.36   41.3644k   1.69271M         2.68039    1.4813k/s 2.50741G/s     2.82461M               4.47276                 1.6687          1        1.4813k/s [BEST: throughput=  1.59 GB/s doc_throughput=  2510 docs/s instructions=     2824127 cycles=     1470685 branch_miss=    9508 cache_miss=     112 cache_ref=     68850 items=         1 avg_time=    675080 ns]
find_tweet<yyjson_insitu>/manual_time                     474420 ns       504797 ns         1476           6.834k           1.77207G             589        38.442k    1.31251M              2.07835          2.80606k       3.68297G          2.82402M                    4.47181                     2.15162           2.80606k    7.22585k   631.515k       1.23971G/s    14.5305   23.5369k   1.41934M         2.24751   2.10784k/s 2.99173G/s     2.82428M               4.47223                1.98986          1       2.10784k/s [BEST: throughput=  1.77 GB/s doc_throughput=  2806 docs/s instructions=     2824018 cycles=     1312508 branch_miss=    6834 cache_miss=     589 cache_ref=     38442 items=         1 avg_time=    474419 ns]
find_tweet<sajson>/manual_time                            525564 ns       555519 ns         1331          10.608k           1.21985G               0        38.391k    1.91145M              3.02677          1.93162k       3.69219G          5.89219M                    9.33024                     3.08257           1.93162k    11.0977k   631.515k       1.11907G/s    14.7956   38.3351k   1.93947M         3.07114   1.90272k/s 3.69026G/s     5.89219M               9.33024                3.03804          1       1.90272k/s [BEST: throughput=  1.22 GB/s doc_throughput=  1931 docs/s instructions=     5892186 cycles=     1911451 branch_miss=   10608 cache_miss=       0 cache_ref=     38391 items=         1 avg_time=    525564 ns]
find_tweet<rapidjson>/manual_time                        1432986 ns      1462260 ns          493          27.483k           509.259M         16.727k         48.25k    4.57786M              7.24901           806.408       3.69162G          13.2812M                    21.0307                     2.90119            806.408    27.9584k   631.515k       420.283M/s    636.759   27.6737k   4.73208M         7.49322    697.843/s 3.30225G/s     13.2821M               21.0321                2.80682          1        697.843/s [BEST: throughput=  0.51 GB/s doc_throughput=   806 docs/s instructions=    13281230 cycles=     4577859 branch_miss=   27483 cache_miss=   16727 cache_ref=     48250 items=         1 avg_time=   1432986 ns]
find_tweet<rapidjson_insitu>/manual_time                  966454 ns       996359 ns          804          25.744k           731.931M              57        36.149k    3.18532M              5.04393          1.15901k        3.6918G          9.64754M                    15.2768                     3.02876           1.15901k    26.1004k   631.515k       623.164M/s   1.87911k    27.844k   3.28043M         5.19454    1034.71/s 3.39429G/s     9.64808M               15.2777                 2.9411          1        1034.71/s [BEST: throughput=  0.73 GB/s doc_throughput=  1159 docs/s instructions=     9647544 cycles=     3185315 branch_miss=   25744 cache_miss=      57 cache_ref=     36149 items=         1 avg_time=    966454 ns]
find_tweet<nlohmann_json>/manual_time                    6143069 ns      6173741 ns          117          92.745k           106.741M           2.26k       169.011k    21.8275M              34.5637           169.024       3.68938G          57.0459M                    90.3319                     2.61349            169.024    107.941k   631.515k       98.0389M/s    38.5128   326.034k   22.6647M         35.8895    162.785/s 3.68948G/s     55.7053M                88.209                 2.4578          1        162.785/s [BEST: throughput=  0.11 GB/s doc_throughput=   169 docs/s instructions=    57045948 cycles=    21827493 branch_miss=   92745 cache_miss=    2260 cache_ref=    169011 items=         1 avg_time=   6143069 ns]
top_tweet<simdjson_dom>/manual_time                       252969 ns       281695 ns         2767           3.775k           2.51098G               0        91.748k    928.623k              1.47047          3.97613k       3.69232G          2.85646M                    4.52318                     3.07601           3.97613k    3.91397k   631.515k       2.32497G/s    10.0557   91.7371k   933.632k          1.4784   3.95306k/s  3.6907G/s     2.85646M               4.52318                3.05951          1       3.95306k/s [BEST: throughput=  2.51 GB/s doc_throughput=  3976 docs/s instructions=     2856456 cycles=      928623 branch_miss=    3775 cache_miss=       0 cache_ref=     91748 items=         1 avg_time=    252968 ns]
top_tweet<simdjson_ondemand>/manual_time                  169473 ns       197907 ns         4132           1.625k           3.75136G               0        57.179k    621.683k             0.984431          5.94025k       3.69295G           2.1282M                    3.36998                     3.42328           5.94025k    1.76536k   631.515k       3.47042G/s  0.0210552   57.0938k   625.581k        0.990604   5.90064k/s 3.69133G/s      2.1282M               3.36998                3.40195          1       5.90064k/s [BEST: throughput=  3.75 GB/s doc_throughput=  5940 docs/s instructions=     2128196 cycles=      621683 branch_miss=    1625 cache_miss=       0 cache_ref=     57179 items=         1 avg_time=    169473 ns]
top_tweet<simdjson_ondemand_forward_only>/manual_time     178588 ns       207065 ns         3920           1.843k           3.56422G               0        57.984k    654.273k              1.03604          5.64391k       3.69266G          2.34909M                    3.71978                     3.59039           5.64391k    1.99177k   631.515k        3.2933G/s   0.965816   57.9376k   659.183k         1.04381   5.59948k/s 3.69108G/s      2.3491M               3.71978                3.56364          1       5.59948k/s [BEST: throughput=  3.56 GB/s doc_throughput=  5643 docs/s instructions=     2349095 cycles=      654273 branch_miss=    1843 cache_miss=       0 cache_ref=     57984 items=         1 avg_time=    178588 ns]
top_tweet<yyjson>/manual_time                             680546 ns       710721 ns         1082           9.525k           1.57066G             154        72.368k    1.48463M              2.35091          2.48714k       3.69248G          2.84502M                    4.50507                     1.91631           2.48714k    7.50652k   631.515k       884.966M/s    984.997   46.5531k   1.71197M         2.71089   1.46941k/s 2.51558G/s      2.8457M               4.50615                1.66224          1       1.46941k/s [BEST: throughput=  1.57 GB/s doc_throughput=  2487 docs/s instructions=     2845019 cycles=     1484632 branch_miss=    9525 cache_miss=     154 cache_ref=     72368 items=         1 avg_time=    680545 ns]
top_tweet<yyjson_insitu>/manual_time                      479474 ns       509197 ns         1461           6.985k           1.74501G             445        42.969k     1.3329M              2.11064          2.76321k       3.68308G           2.8449M                    4.50488                     2.13437           2.76321k    7.31095k   631.515k       1.22664G/s    42.0315    28.618k   1.43788M         2.27687   2.08562k/s 2.99887G/s     2.84516M                4.5053                1.97872          1       2.08562k/s [BEST: throughput=  1.75 GB/s doc_throughput=  2763 docs/s instructions=     2844901 cycles=     1332899 branch_miss=    6985 cache_miss=     445 cache_ref=     42969 items=         1 avg_time=    479474 ns]
top_tweet<sajson>/manual_time                             531062 ns       560010 ns         1319            10.7k           1.20468G               0        43.746k    1.93538M              3.06466          1.90761k       3.69195G          5.91933M                    9.37322                     3.05848           1.90761k    11.2255k   631.515k       1.10749G/s    0.93025   43.6763k   1.95967M         3.10312   1.88302k/s 3.69009G/s     5.91933M               9.37322                3.02058          1       1.88302k/s [BEST: throughput=  1.20 GB/s doc_throughput=  1907 docs/s instructions=     5919331 cycles=     1935381 branch_miss=   10700 cache_miss=       0 cache_ref=     43746 items=         1 avg_time=    531061 ns]
top_tweet<rapidjson>/manual_time                         1438745 ns      1468003 ns          491          27.459k           508.026M          8.724k        51.757k    4.58898M              7.26661           804.457       3.69163G          13.3313M                      21.11                     2.90507            804.457     28.005k   631.515k       418.601M/s    762.029   31.8511k   4.75196M          7.5247     695.05/s 3.30285G/s      13.332M               21.1112                2.80558          1         695.05/s [BEST: throughput=  0.51 GB/s doc_throughput=   804 docs/s instructions=    13331297 cycles=     4588975 branch_miss=   27459 cache_miss=    8724 cache_ref=     51757 items=         1 avg_time=   1438745 ns]
top_tweet<rapidjson_insitu>/manual_time                   973590 ns      1002813 ns          799          25.733k           728.328M              44        41.755k    3.20105M              5.06883           1.1533k       3.69177G          9.68902M                    15.3425                     3.02683            1.1533k    26.2875k   631.515k       618.597M/s   1.92978k   33.3221k   3.30594M         5.23493    1027.13/s 3.39561G/s     9.68956M               15.3434                2.93096          1        1027.13/s [BEST: throughput=  0.73 GB/s doc_throughput=  1153 docs/s instructions=     9689018 cycles=     3201045 branch_miss=   25733 cache_miss=      44 cache_ref=     41755 items=         1 avg_time=    973589 ns]
top_tweet<nlohmann_json>/manual_time                     8696268 ns      8727119 ns           80          181.64k           73.3328M              36       405.201k    31.7738M              50.3136           116.122       3.68964G           78.267M                    123.935                     2.46325            116.122     188.27k   631.515k        69.255M/s    485.387   410.014k   32.0834M         50.8038    114.992/s 3.68933G/s     78.8254M                124.82                2.45689          1        114.992/s [BEST: throughput=  0.07 GB/s doc_throughput=   116 docs/s instructions=    78267006 cycles=    31773822 branch_miss=  181640 cache_miss=      36 cache_ref=    405201 items=         1 avg_time=   8696268 ns]
