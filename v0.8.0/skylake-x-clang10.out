run_benchmark: v0.8.0 /home/jkeiser/simdjson_benchmark_results/v0.8.0/skylake-clang10.json 
git reset --hard v0.8.0
HEAD is now at c96ff018 Version 0.8.
cmake ..
-- The CXX compiler identification is Clang 10.0.1
-- The C compiler identification is Clang 10.0.1
-- Check for working CXX compiler: /usr/bin/clang++-10
-- Check for working CXX compiler: /usr/bin/clang++-10 -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Check for working C compiler: /usr/bin/clang-10
-- Check for working C compiler: /usr/bin/clang-10 -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- No build type selected, default to Release
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed
-- Check if compiler accepts -pthread
-- Check if compiler accepts -pthread - yes
-- Found Threads: TRUE  
-- Looking for fork
-- Looking for fork - found
-- Looking for wait
-- Looking for wait - found
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- Found Git: /usr/bin/git (found version "2.27.0") 
-- git Version: v0.2.1-c96ff018
-- Version: 0.2.1
-- Performing Test HAVE_CXX_FLAG_STD_CXX11
-- Performing Test HAVE_CXX_FLAG_STD_CXX11 - Success
-- Performing Test HAVE_CXX_FLAG_WALL
-- Performing Test HAVE_CXX_FLAG_WALL - Success
-- Performing Test HAVE_CXX_FLAG_WEXTRA
-- Performing Test HAVE_CXX_FLAG_WEXTRA - Success
-- Performing Test HAVE_CXX_FLAG_WSHADOW
-- Performing Test HAVE_CXX_FLAG_WSHADOW - Success
-- Performing Test HAVE_CXX_FLAG_WERROR
-- Performing Test HAVE_CXX_FLAG_WERROR - Success
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32 - Success
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED - Success
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WD654
-- Performing Test HAVE_CXX_FLAG_WD654 - Failed
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY - Success
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES -- failed to compile
-- Performing Test HAVE_CXX_FLAG_COVERAGE
-- Performing Test HAVE_CXX_FLAG_COVERAGE - Success
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Performing Test USE_BOOST_JSON
-- Performing Test USE_BOOST_JSON - Failed
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Found Python3: /usr/bin/python3.8 (found version "3.8.6") found components: Interpreter 
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
make[1]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[2]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
Scanning dependencies of target benchmark
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[  0%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/benchmark.cc.o
[ 10%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o
[ 10%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/benchmark_name.cc.o
[ 10%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/benchmark_register.cc.o
[ 20%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/benchmark_runner.cc.o
[ 20%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/colorprint.cc.o
[ 30%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/commandlineflags.cc.o
[ 30%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/complexity.cc.o
[ 30%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/console_reporter.cc.o
[ 40%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/counter.cc.o
[ 40%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/csv_reporter.cc.o
[ 50%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/json_reporter.cc.o
[ 50%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/reporter.cc.o
[ 60%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/sleep.cc.o
[ 60%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/statistics.cc.o
[ 60%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/string_util.cc.o
[ 70%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/sysinfo.cc.o
[ 70%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/timers.cc.o
[ 80%] Linking CXX static library libbenchmark.a
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 80%] Built target benchmark
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
Scanning dependencies of target generated-data
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 80%] Generating utf-8.json, escape.json, 0-structurals.json, 7-structurals.json, 15-structurals.json, 23-structurals.json
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-miss.json ...
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 80%] Built target generated-data
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
Scanning dependencies of target simdjson
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 80%] Building CXX object src/CMakeFiles/simdjson.dir/simdjson.cpp.o
[ 80%] Linking CXX shared library ../libsimdjson.so
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 80%] Built target simdjson
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
Scanning dependencies of target yyjson
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 80%] Building C object dependencies/CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o
[ 90%] Linking C static library libyyjson.a
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 90%] Built target yyjson
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
Scanning dependencies of target bench_ondemand
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[100%] Building CXX object benchmark/CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o
[100%] Linking CXX executable bench_ondemand
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[100%] Built target bench_ondemand
make[2]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[1]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.8.0/skylake-clang10.json --benchmark_out_format=json
2021-01-23 04:21:47
Running benchmark/bench_ondemand
Run on (4 X 3200 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 1024 KiB (x4)
  L3 Unified 8448 KiB (x1)
Load Average: 0.87, 0.59, 0.27
***WARNING*** CPU scaling is enabled, the benchmark real time measurements may be noisy and will incur extra overhead.
simdjson::dom implementation:      haswell
simdjson::ondemand implementation: fallback

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                  324603 ns       392693 ns         2164           4.051k           1.96096G              18        34.202k     1028.5k              1.62862          3.10517k       3.19366G          3.01556M                    4.77511                     2.93199           310.517k    4.24841k   631.515k       1.81189G/s    18.8378   34.0965k   1035.72k         1.64006   3.08068k/s 3.19073G/s     3.01556M               4.77511                2.91155        100       308.068k/s [BEST: throughput=  1.96 GB/s doc_throughput=  3105 docs/s instructions=     3015556 cycles=     1028500 branch_miss=    4051 cache_miss=      18 cache_ref=     34202 items=       100 avg_time=    324603 ns]
partial_tweets<simdjson_ondemand>/manual_time             204479 ns       258182 ns         3428           2.759k           3.11464G               0         9.951k    647.773k              1.02574          4.93201k       3.19482G          2.29929M                     3.6409                     3.54952           493.201k    2.85875k   631.515k       2.87631G/s  0.0673862   10.0366k   652.698k         1.03354   4.89048k/s 3.19201G/s     2.29929M                3.6409                3.52274        100       489.048k/s [BEST: throughput=  3.11 GB/s doc_throughput=  4932 docs/s instructions=     2299286 cycles=      647773 branch_miss=    2759 cache_miss=       0 cache_ref=      9951 items=       100 avg_time=    204478 ns]
partial_tweets<yyjson>/manual_time                        785030 ns       861596 ns          895           9.635k           1.45922G             223        27.739k    1.38249M              2.18917          2.31066k       3.19447G          2.90334M                    4.59742                     2.10007           231.066k    7.63614k   631.515k        767.18M/s     527.85   23.5963k   1.54933M         2.45335   1.27384k/s 1.97359G/s     2.90403M               4.59852                1.87439        100       127.384k/s [BEST: throughput=  1.46 GB/s doc_throughput=  2310 docs/s instructions=     2903341 cycles=     1382494 branch_miss=    9635 cache_miss=     223 cache_ref=     27739 items=       100 avg_time=    785030 ns]
partial_tweets<yyjson_insitu>/manual_time                 512299 ns       571948 ns         1379           7.347k            1.7835G             129        14.986k    1.13125M              1.79132          2.82416k       3.19483G          2.90324M                    4.59725                      2.5664           282.416k    7.38054k   631.515k       1.14805G/s    70.3597   8.76534k   1.24009M         1.96367   1.95198k/s 2.42063G/s      2.9035M               4.59767                2.34137        100       195.198k/s [BEST: throughput=  1.78 GB/s doc_throughput=  2824 docs/s instructions=     2903235 cycles=     1131246 branch_miss=    7347 cache_miss=     129 cache_ref=     14986 items=       100 avg_time=    512299 ns]
partial_tweets<sajson>/manual_time                        677850 ns       738661 ns         1026          10.178k           941.019M               3        13.143k    2.14302M              3.39346           1.4901k       3.19331G          5.87179M                    9.29794                     2.73996            149.01k    10.6255k   631.515k       888.485M/s    2.42203   13.1156k   2.16251M         3.42432   1.47525k/s 3.19024G/s     5.87179M               9.29794                2.71527        100       147.525k/s [BEST: throughput=  0.94 GB/s doc_throughput=  1490 docs/s instructions=     5871791 cycles=     2143024 branch_miss=   10178 cache_miss=       3 cache_ref=     13143 items=       100 avg_time=    677849 ns]
partial_tweets<rapidjson>/manual_time                    2853120 ns      2915605 ns          245          29.898k           246.984M          9.537k        22.861k     8.1636M               12.927           391.097       3.19276G          21.9154M                    34.7029                     2.68453           39.1097k    33.1754k   631.515k       211.088M/s    416.408   11.9765k   8.41893M         13.3313    350.493/s 2.95078G/s     21.9163M               34.7043                2.60322        100       35.0493k/s [BEST: throughput=  0.25 GB/s doc_throughput=   391 docs/s instructions=    21915421 cycles=     8163596 branch_miss=   29898 cache_miss=    9537 cache_ref=     22861 items=       100 avg_time=   2853120 ns]
partial_tweets<rapidjson_insitu>/manual_time             1760377 ns      1820330 ns          398          26.472k           391.212M              99        15.033k      5.154M              8.16133           619.482       3.19281G          13.3441M                    21.1303                     2.58907           61.9482k    26.5561k   631.515k        342.12M/s    215.796   9.65415k   5.22044M         8.26654     568.06/s 2.96553G/s     13.3447M               21.1312                2.55624        100        56.806k/s [BEST: throughput=  0.39 GB/s doc_throughput=   619 docs/s instructions=    13344089 cycles=     5154004 branch_miss=   26472 cache_miss=      99 cache_ref=     15033 items=       100 avg_time=   1760376 ns]
partial_tweets<nlohmann_json>/manual_time               10213582 ns     10299070 ns           73         152.574k           69.7953M               4        98.311k    28.8635M              45.7051            110.52          3.19G          78.1951M                    123.821                     2.70914            11.052k    246.053k   631.515k       58.9665M/s    51.5205   137.146k   32.5733M         51.5796    97.9088/s 3.18921G/s     78.7104M               124.637                2.41641        100       9.79088k/s [BEST: throughput=  0.07 GB/s doc_throughput=   110 docs/s instructions=    78195076 cycles=    28863460 branch_miss=  152574 cache_miss=       4 cache_ref=     98311 items=       100 avg_time=  10213582 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                 101599174 ns    107530665 ns            7         891.365k           453.402M        6.79422M       6.89717M    323.509M                7.033           9.85682       3.18877G          1038.51M                     22.577                     3.21015           9.85682M     898.38k   45.9988M       431.774M/s   6.80626M   6.89724M   323.905M         7.04159     9.8426/s 3.18806G/s     1038.51M                22.577                3.20623      1000k        9.8426M/s [BEST: throughput=  0.45 GB/s doc_throughput=     9 docs/s instructions=  1038513495 cycles=   323509180 branch_miss=  891365 cache_miss= 6794223 cache_ref=   6897171 items=   1000000 avg_time= 101599173 ns]
large_random<simdjson_ondemand>/manual_time             71585124 ns     77427431 ns           10         903.751k           643.032M        3.49372M       3.57302M    228.128M              4.95944           13.9793       3.18908G          676.969M                    14.7171                      2.9675           13.9793M    905.257k   45.9988M       612.807M/s   3.50863M   3.57305M   228.263M         4.96238    13.9694/s  3.1887G/s     676.969M               14.7171                2.96574      1000k       13.9694M/s [BEST: throughput=  0.64 GB/s doc_throughput=    13 docs/s instructions=   676969400 cycles=   228128198 branch_miss=  903751 cache_miss= 3493722 cache_ref=   3573022 items=   1000000 avg_time=  71585123 ns]
large_random<simdjson_ondemand_unordered>/manual_time   72313348 ns     78166095 ns           10         945.333k           636.384M        3.48725M       3.57355M    230.508M              5.01119           13.8348       3.18904G          675.969M                    14.6954                     2.93251           13.8348M    940.974k   45.9988M       606.636M/s   3.51268M   3.57366M   230.579M         5.01273    13.8287/s 3.18861G/s     675.969M               14.6954                2.93161      1000k       13.8287M/s [BEST: throughput=  0.64 GB/s doc_throughput=    13 docs/s instructions=   675969399 cycles=   230508452 branch_miss=  945333 cache_miss= 3487250 cache_ref=   3573552 items=   1000000 avg_time=  72313347 ns]
large_random<yyjson>/manual_time                       151261412 ns    157266437 ns            5         661.658k           304.242M        4.20183M       4.31299M    343.036M               7.4575           6.61414       2.26889G           866.68M                    18.8414                      2.5265           6.61414M    664.555k   45.9988M       290.013M/s   4.20094M   4.31719M   343.289M           7.463    6.61107/s 2.26951G/s      866.68M               18.8414                2.52464      1000k       6.61107M/s [BEST: throughput=  0.30 GB/s doc_throughput=     6 docs/s instructions=   866679897 cycles=   343035918 branch_miss=  661658 cache_miss= 4201834 cache_ref=   4312995 items=   1000000 avg_time= 151261412 ns]
large_random<yyjson_insitu>/manual_time                125387084 ns    131354516 ns            6         661.642k           367.209M        3.48259M       3.59954M    300.564M              6.53417           7.98302       2.39941G          860.559M                    18.7083                     2.86315           7.98302M    663.931k   45.9988M       349.859M/s   3.48416M    3.6007M   300.957M         6.54272     7.9753/s 2.40023G/s     860.559M               18.7083                2.85941      1000k        7.9753M/s [BEST: throughput=  0.37 GB/s doc_throughput=     7 docs/s instructions=   860559133 cycles=   300564007 branch_miss=  661642 cache_miss= 3482587 cache_ref=   3599539 items=   1000000 avg_time= 125387083 ns]
large_random<sajson>/manual_time                       107874516 ns    113843700 ns            6         581.992k           426.808M        5.41942M       5.57744M    343.709M              7.47214           9.27869       3.18917G          1.13399G                    24.6526                     3.29927           9.27869M    582.116k   45.9988M       406.656M/s   5.47151M   5.57752M   343.962M         7.47764    9.27003/s 3.18854G/s     1.13399G               24.6526                3.29684      1000k       9.27003M/s [BEST: throughput=  0.43 GB/s doc_throughput=     9 docs/s instructions=  1133989156 cycles=   343709283 branch_miss=  581992 cache_miss= 5419421 cache_ref=   5577438 items=   1000000 avg_time= 107874516 ns]
large_random<rapidjson>/manual_time                    247932757 ns    253844198 ns            3         634.809k           191.658M        4.37372M       4.92727M    696.971M              15.1519           4.16659       2.90399G          2.02013G                     43.917                     2.89844           4.16659M    612.094k   45.9988M       176.934M/s   4.10498M   4.74244M   700.535M         15.2294    4.03335/s  2.8255G/s     2.02013G               43.9171                 2.8837      1000k       4.03335M/s [BEST: throughput=  0.19 GB/s doc_throughput=     4 docs/s instructions=  2020126164 cycles=   696970984 branch_miss=  634809 cache_miss= 4373717 cache_ref=   4927274 items=   1000000 avg_time= 247932756 ns]
large_random<rapidjson_lossless>/manual_time           287942831 ns    293892753 ns            3         588.798k            164.36M        4.36673M        4.9187M    824.894M               17.933           3.57313       2.94746G          2.48209G                      53.96                     3.00898           3.57313M    590.545k   45.9988M       152.349M/s   4.10319M   4.73567M   829.048M         18.0233    3.47291/s 2.87921G/s      2.4821G               53.9602                2.99392      1000k       3.47291M/s [BEST: throughput=  0.16 GB/s doc_throughput=     3 docs/s instructions=  2482093108 cycles=   824893899 branch_miss=  588798 cache_miss= 4366734 cache_ref=   4918699 items=   1000000 avg_time= 287942831 ns]
large_random<rapidjson_insitu>/manual_time             275067108 ns    281039248 ns            3          588.23k           172.065M        5.05507M       5.63832M    784.979M              17.0652           3.74063       2.93632G          1.75113G                     38.069                     2.23079           3.74063M    587.579k   45.9988M       159.481M/s   4.80464M   5.44273M   787.895M         17.1286    3.63548/s 2.86437G/s     1.75113G               38.0692                2.22255      1000k       3.63548M/s [BEST: throughput=  0.17 GB/s doc_throughput=     3 docs/s instructions=  1751125844 cycles=   784979288 branch_miss=  588230 cache_miss= 5055074 cache_ref=   5638323 items=   1000000 avg_time= 275067107 ns]
large_random<nlohmann_json>/manual_time               1449903623 ns   1455827954 ns            1         4.11331M           31.7254M        30.3737M       30.8998M     4.6094G              100.207          0.689701       3.17911G          12.3806G                     269.15                     2.68593           689.701k    4.11331M   45.9988M       30.2557M/s   30.3737M   30.8998M    4.6094G         100.207   0.689701/s 3.17911G/s     12.3806G                269.15                2.68593      1000k       689.701k/s [BEST: throughput=  0.03 GB/s doc_throughput=     0 docs/s instructions= 12380552612 cycles=  4609402343 branch_miss= 4113314 cache_miss=30373723 cache_ref=  30899794 items=   1000000 avg_time=1449903623 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                       107544743 ns    126110228 ns            7         1029.75k           1.27894G        10.2054M       10.3191M    342.339M              2.49328            9.3146       3.18875G          991.684M                    7.22249                     2.89679           4.88354M    1030.48k   137.305M       1.18904G/s   10.2399M   10.3194M   342.801M         2.49664    9.29846/s 3.18752G/s     991.684M               7.22249                2.89288   524.288k       4.87507M/s [BEST: throughput=  1.28 GB/s doc_throughput=     9 docs/s instructions=   991683895 cycles=   342339278 branch_miss= 1029750 cache_miss=10205374 cache_ref=  10319084 items=    524288 avg_time= 107544742 ns]
kostya<simdjson_ondemand>/manual_time                   72806177 ns     91335165 ns           10         477.121k           1.88792G        6.41512M        6.4706M    231.907M              1.68899           13.7499       3.18868G          660.046M                    4.80716                     2.84617           7.20888M    478.387k   137.305M       1.75638G/s   6.43012M   6.47086M   232.096M         1.69036    13.7351/s 3.18785G/s     660.046M               4.80716                2.84386   524.288k       7.20115M/s [BEST: throughput=  1.89 GB/s doc_throughput=    13 docs/s instructions=   660046431 cycles=   231906529 branch_miss=  477121 cache_miss= 6415115 cache_ref=   6470596 items=    524288 avg_time=  72806177 ns]
kostya<yyjson>/manual_time                             229595267 ns    248262518 ns            3         414.956k            598.08M        8.49848M       8.64158M    500.788M              3.64727           4.35585       2.18136G          978.903M                     7.1294                     1.95472           2.28372M     415.33k   137.305M       570.326M/s   8.50023M   8.64206M   500.911M         3.64817    4.35549/s 2.18171G/s     978.903M                7.1294                1.95424   524.288k       2.28353M/s [BEST: throughput=  0.60 GB/s doc_throughput=     4 docs/s instructions=   978902814 cycles=   500788205 branch_miss=  414956 cache_miss= 8498477 cache_ref=   8641579 items=    524288 avg_time= 229595267 ns]
kostya<yyjson_insitu>/manual_time                      152224021 ns    170850118 ns            5         418.498k           902.402M        6.35732M       6.49324M    373.961M              2.72358           6.57225       2.45776G          960.633M                    6.99634                     2.56881           3.44575M      418.6k   137.305M       860.208M/s   6.35813M   6.50293M   374.093M         2.72454    6.56927/s 2.45751G/s     960.633M               6.99634                 2.5679   524.288k       3.44419M/s [BEST: throughput=  0.90 GB/s doc_throughput=     6 docs/s instructions=   960632930 cycles=   373961014 branch_miss=  418498 cache_miss= 6357325 cache_ref=   6493244 items=    524288 avg_time= 152224021 ns]
kostya<sajson>/manual_time                             163403968 ns    182034571 ns            4         355.184k           840.449M        8.52154M       8.54018M     520.84M               3.7933           6.12103       3.18808G          1.54442G                    11.2481                     2.96526           3.20919M    354.914k   137.305M       801.353M/s   8.49055M    8.5396M   521.046M         3.79481     6.1198/s  3.1887G/s     1.54442G               11.2481                2.96408   524.288k       3.20854M/s [BEST: throughput=  0.84 GB/s doc_throughput=     6 docs/s instructions=  1544424227 cycles=   520839607 branch_miss=  355184 cache_miss= 8521536 cache_ref=   8540177 items=    524288 avg_time= 163403968 ns]
kostya<rapidjson>/manual_time                          328077700 ns    346702734 ns            2         1.14612M           423.138M        5.25342M       5.82335M    936.549M              6.82094           3.08174        2.8862G          2.74288G                    19.9766                     2.92871           1.61572M    1.16676M   137.305M       399.126M/s   5.12785M   5.72497M   939.676M         6.84371    3.04806/s 2.86419G/s     2.74288G               19.9766                2.91897   524.288k       1.59806M/s [BEST: throughput=  0.42 GB/s doc_throughput=     3 docs/s instructions=  2742881345 cycles=   936549015 branch_miss= 1146123 cache_miss= 5253418 cache_ref=   5823347 items=    524288 avg_time= 328077699 ns]
kostya<rapidjson_lossless>/manual_time                 352403338 ns    370988685 ns            2         968.322k           393.564M        5.25105M       5.83109M    1015.64M              7.39699           2.86635       2.91119G          3.00973G                    21.9201                     2.96338           1.50279M    972.994k   137.305M       371.575M/s   5.12752M   5.73822M   1018.37M         7.41682    2.83766/s 2.88977G/s     3.00974G               21.9201                2.95546   524.288k       1.48775M/s [BEST: throughput=  0.39 GB/s doc_throughput=     2 docs/s instructions=  3009734626 cycles=  1015643983 branch_miss=  968322 cache_miss= 5251046 cache_ref=   5831091 items=    524288 avg_time= 352403338 ns]
kostya<rapidjson_insitu>/manual_time                   315288252 ns    333916902 ns            2         1007.99k           439.868M        7.37487M       7.97579M    899.222M              6.54909           3.20358       2.88073G          2.22722G                     16.221                     2.47683            1.6796M    1007.16k   137.305M       415.316M/s   7.25435M   7.86406M   900.903M         6.56133     3.1717/s  2.8574G/s     2.22722G                16.221                2.47221   524.288k       1.66288M/s [BEST: throughput=  0.44 GB/s doc_throughput=     3 docs/s instructions=  2227218774 cycles=   899222255 branch_miss= 1007986 cache_miss= 7374869 cache_ref=   7975792 items=    524288 avg_time= 315288252 ns]
kostya<nlohmann_json>/manual_time                     2195282415 ns   2213884940 ns            1          15.639M           62.5455M        44.3303M       44.9787M    7.00141G              50.9917          0.455522        3.1893G          17.2831G                    125.874                     2.46851           238.825k     15.639M   137.305M        59.648M/s   44.3303M   44.9787M   7.00141G         50.9917   0.455522/s  3.1893G/s     17.2831G               125.874                2.46851   524.288k       238.825k/s [BEST: throughput=  0.06 GB/s doc_throughput=     0 docs/s instructions= 17283077294 cycles=  7001411204 branch_miss=15638990 cache_miss=44330318 cache_ref=  44978687 items=    524288 avg_time=2195282415 ns]
distinct_user_id<simdjson_dom>/manual_time                315734 ns       390415 ns         2219           4.227k           2.01607G               3        33.463k    1000.56k              1.58438          3.19243k       3.19422G          2.94968M                     4.6708                     2.94802           367.129k    4.30647k   631.515k       1.86278G/s     1.8959    33.542k   1007.49k         1.59536   3.16722k/s 3.19096G/s     2.94968M                4.6708                2.92774        115       364.231k/s [BEST: throughput=  2.02 GB/s doc_throughput=  3192 docs/s instructions=     2949678 cycles=     1000562 branch_miss=    4227 cache_miss=       3 cache_ref=     33463 items=       115 avg_time=    315733 ns]
distinct_user_id<simdjson_ondemand>/manual_time           192151 ns       252561 ns         3640           2.263k           3.31608G               1         8.895k    608.397k             0.963393            5.251k       3.19469G          1.91823M                    3.03751                     3.15293           603.865k    2.38965k   631.515k       3.06085G/s   0.942033   8.90489k   613.385k        0.971291   5.20425k/s 3.19221G/s     1.91824M               3.03751                3.12729        115       598.489k/s [BEST: throughput=  3.32 GB/s doc_throughput=  5250 docs/s instructions=     1918235 cycles=      608397 branch_miss=    2263 cache_miss=       1 cache_ref=      8895 items=       115 avg_time=    192150 ns]
distinct_user_id<yyjson>/manual_time                      680950 ns       767075 ns         1000           6.507k           1.57738G          7.093k        27.366k    1.27869M               2.0248          2.49776k       3.19387G          2.86159M                     4.5313                      2.2379           287.243k    7.41202k   631.515k       884.441M/s   2.24937k   24.5659k   1.47063M         2.32873   1.46854k/s 2.15967G/s     2.86187M               4.53175                1.94602        115       168.882k/s [BEST: throughput=  1.58 GB/s doc_throughput=  2497 docs/s instructions=     2861587 cycles=     1278692 branch_miss=    6507 cache_miss=    7093 cache_ref=     27366 items=       115 avg_time=    680949 ns]
distinct_user_id<yyjson_insitu>/manual_time               508473 ns       577192 ns         1389           7.034k           1.81107G          2.344k        13.869k    1.10853M              1.75535          2.86781k       3.17906G          2.86097M                    4.53033                     2.58086           329.798k    7.43865k   631.515k       1.15669G/s    76.2657   8.98944k   1.22664M         1.94237   1.96667k/s 2.41239G/s     2.86124M               4.53075                2.33259        115       226.168k/s [BEST: throughput=  1.81 GB/s doc_throughput=  2867 docs/s instructions=     2860973 cycles=     1108533 branch_miss=    7034 cache_miss=    2344 cache_ref=     13869 items=       115 avg_time=    508472 ns]
distinct_user_id<sajson>/manual_time                      675569 ns       744309 ns         1038          10.326k           941.954M               0         13.59k    2.14078M              3.38991          1.49158k       3.19314G          5.81023M                    9.20046                     2.71407           171.531k    10.7036k   631.515k       891.485M/s    1.89306   13.5759k   2.15484M         3.41217   1.48023k/s 3.18966G/s     5.81023M               9.20046                2.69636        115       170.227k/s [BEST: throughput=  0.94 GB/s doc_throughput=  1491 docs/s instructions=     5810227 cycles=     2140781 branch_miss=   10326 cache_miss=       0 cache_ref=     13590 items=       115 avg_time=    675569 ns]
distinct_user_id<rapidjson>/manual_time                  2843394 ns      2914258 ns          247          29.898k           247.903M             531        23.204k     8.1332M              12.8789           392.553       3.19271G          21.8424M                    34.5873                     2.68558           45.1436k    33.5253k   631.515k        211.81M/s    858.385   12.7482k   8.40658M         13.3118    351.692/s 2.95653G/s     21.8432M               34.5886                2.59834        115       40.4446k/s [BEST: throughput=  0.25 GB/s doc_throughput=   392 docs/s instructions=    21842388 cycles=     8133203 branch_miss=   29898 cache_miss=     531 cache_ref=     23204 items=       115 avg_time=   2843394 ns]
distinct_user_id<rapidjson_insitu>/manual_time           1716694 ns      1785139 ns          433          26.382k           392.882M             199        14.954k    5.13213M               8.1267           622.127       3.19284G          13.2774M                    21.0248                     2.58712           71.5446k    26.4707k   631.515k       350.825M/s   2.29059k   12.0662k   5.19675M         8.22903    582.515/s 3.02719G/s     13.2779M               21.0255                2.55504        115       66.9892k/s [BEST: throughput=  0.39 GB/s doc_throughput=   622 docs/s instructions=    13277446 cycles=     5132131 branch_miss=   26382 cache_miss=     199 cache_ref=     14954 items=       115 avg_time=   1716694 ns]
distinct_user_id<nlohmann_json>/manual_time              8971912 ns      9060431 ns           80         128.297k           75.6583M              34        97.718k    26.6246M                42.16           119.804       3.18975G          73.6532M                    116.629                     2.76635           13.7775k    156.378k   631.515k       67.1272M/s    59.0875   105.399k   28.6074M         45.2996    111.459/s 3.18855G/s     72.2808M               114.456                2.52665        115       12.8178k/s [BEST: throughput=  0.08 GB/s doc_throughput=   119 docs/s instructions=    73653189 cycles=    26624644 branch_miss=  128297 cache_miss=      34 cache_ref=     97718 items=       115 avg_time=   8971912 ns]
find_tweet<simdjson_dom>/manual_time                      297338 ns       369477 ns         2356           3.996k           2.14043G               0        30.089k    942.363k              1.49223          3.38936k       3.19401G          2.86436M                    4.53569                     3.03955           3.38936k    4.12726k   631.515k       1.97803G/s   0.524194   30.2233k   948.676k         1.50222   3.36317k/s 3.19056G/s     2.86436M               4.53569                3.01932          1       3.36317k/s [BEST: throughput=  2.14 GB/s doc_throughput=  3389 docs/s instructions=     2864358 cycles=      942363 branch_miss=    3996 cache_miss=       0 cache_ref=     30089 items=         1 avg_time=    297338 ns]
find_tweet<simdjson_ondemand>/manual_time                 131936 ns       194443 ns         5306           1.295k           4.81697G               0         7.565k    418.977k             0.663447          7.62765k       3.19581G          1.41247M                    2.23663                     3.37123           7.62765k    1.34065k   631.515k       4.45778G/s  0.0490011    7.5274k   421.199k        0.666967   7.57941k/s 3.19244G/s     1.41247M               2.23663                3.35344          1       7.57941k/s [BEST: throughput=  4.82 GB/s doc_throughput=  7627 docs/s instructions=     1412466 cycles=      418977 branch_miss=    1295 cache_miss=       0 cache_ref=      7565 items=         1 avg_time=    131936 ns]
find_tweet<yyjson>/manual_time                            764259 ns       845936 ns         1098           9.559k           1.49546G             231        27.282k     1.3491M              2.13629          2.36805k       3.19473G          2.80061M                    4.43475                     2.07591           2.36805k    7.41266k   631.515k       788.031M/s    351.046   19.4896k   1.48353M         2.34916   1.30846k/s 1.94113G/s     2.80108M               4.43548                1.88812          1       1.30846k/s [BEST: throughput=  1.50 GB/s doc_throughput=  2368 docs/s instructions=     2800613 cycles=     1349099 branch_miss=    9559 cache_miss=     231 cache_ref=     27282 items=         1 avg_time=    764258 ns]
find_tweet<yyjson_insitu>/manual_time                     494446 ns       556528 ns         1417            6.96k           1.86348G              84        14.019k    1082.49k              1.71411           2.9508k       3.19421G          2.80048M                    4.43455                     2.58708            2.9508k    7.21363k   631.515k        1.1895G/s    8.05011   4.99314k   1.18241M         1.87234   2.02247k/s 2.39138G/s     2.80075M               4.43496                2.36868          1       2.02247k/s [BEST: throughput=  1.86 GB/s doc_throughput=  2950 docs/s instructions=     2800483 cycles=     1082489 branch_miss=    6960 cache_miss=      84 cache_ref=     14019 items=         1 avg_time=    494445 ns]
find_tweet<sajson>/manual_time                            663183 ns       730195 ns         1056          10.141k           961.441M               0        12.965k    2.09736M              3.32115          1.52244k       3.19309G          5.71503M                    9.04972                     2.72487           1.52244k    10.5166k   631.515k       908.135M/s    2.85417   13.0528k   2.11541M         3.34974   1.50788k/s 3.18978G/s     5.71503M               9.04972                2.70162          1       1.50788k/s [BEST: throughput=  0.96 GB/s doc_throughput=  1522 docs/s instructions=     5715034 cycles=     2097357 branch_miss=   10141 cache_miss=       0 cache_ref=     12965 items=         1 avg_time=    663183 ns]
find_tweet<rapidjson>/manual_time                        2829157 ns      2895414 ns          249          29.183k           249.488M         11.907k        21.313k    8.08153M              12.7971           395.063       3.19271G          21.7594M                    34.4558                     2.69248            395.063    33.6945k   631.515k       212.876M/s    675.695   9.20403k   8.36189M          13.241    353.462/s 2.95561G/s       21.76M               34.4568                2.60228          1        353.462/s [BEST: throughput=  0.25 GB/s doc_throughput=   395 docs/s instructions=    21759377 cycles=     8081532 branch_miss=   29183 cache_miss=   11907 cache_ref=     21313 items=         1 avg_time=   2829157 ns]
find_tweet<rapidjson_insitu>/manual_time                 1728627 ns      1793581 ns          436          26.202k           395.653M             196        13.736k    5.09602M              8.06952           626.515       3.19273G          13.1991M                    20.9007                     2.59007            626.515    30.1709k   631.515k       348.403M/s   2.14494k   9.36043k   5.23746M         8.29348    578.494/s 3.02984G/s     13.1995M               20.9014                2.52022          1        578.494/s [BEST: throughput=  0.40 GB/s doc_throughput=   626 docs/s instructions=    13199076 cycles=     5096023 branch_miss=   26202 cache_miss=     196 cache_ref=     13736 items=         1 avg_time=   1728626 ns]
find_tweet<nlohmann_json>/manual_time                    7837085 ns      7922852 ns           97         101.609k           89.4485M             778        77.228k    22.5064M              35.6387           141.641       3.18783G          63.6622M                    100.809                     2.82863            141.641    152.624k   631.515k       76.8474M/s    27.8454   81.5422k    24.996M          39.581    127.598/s 3.18945G/s     62.3005M               98.6525                2.49242          1        127.598/s [BEST: throughput=  0.09 GB/s doc_throughput=   141 docs/s instructions=    63662186 cycles=    22506369 branch_miss=  101609 cache_miss=     778 cache_ref=     77228 items=         1 avg_time=   7837084 ns]
top_tweet<simdjson_dom>/manual_time                       303811 ns       380670 ns         2301           4.178k           2.09847G               0        32.444k    961.216k              1.52208          3.32291k       3.19403G          2.90125M                     4.5941                     3.01831           3.32291k    4.21773k   631.515k       1.93589G/s    13.7605   32.5956k   969.053k         1.53449   3.29152k/s 3.18966G/s     2.90125M                4.5941                 2.9939          1       3.29152k/s [BEST: throughput=  2.10 GB/s doc_throughput=  3322 docs/s instructions=     2901246 cycles=      961216 branch_miss=    4178 cache_miss=       0 cache_ref=     32444 items=         1 avg_time=    303810 ns]
top_tweet<simdjson_ondemand>/manual_time                  187818 ns       252230 ns         3728           2.138k           3.39857G               0         8.743k    593.638k             0.940022          5.38161k       3.19473G          1.93827M                    3.06923                     3.26506           5.38161k    2.30377k   631.515k       3.13145G/s  0.0464056   8.83005k   599.413k        0.949167    5.3243k/s 3.19145G/s     1.93827M               3.06923                3.23361          1        5.3243k/s [BEST: throughput=  3.40 GB/s doc_throughput=  5381 docs/s instructions=     1938266 cycles=      593638 branch_miss=    2138 cache_miss=       0 cache_ref=      8743 items=         1 avg_time=    187818 ns]
top_tweet<simdjson_ondemand_forward_only>/manual_time     198038 ns       263019 ns         3535           2.341k           3.22537G               9         9.693k    625.503k              0.99048          5.10736k       3.19467G          2.16394M                    3.42659                     3.45953           5.10736k    2.52528k   631.515k       2.96986G/s    3.88656   9.68847k   632.081k          1.0009   5.04955k/s 3.19172G/s     2.16394M               3.42659                3.42352          1       5.04955k/s [BEST: throughput=  3.23 GB/s doc_throughput=  5107 docs/s instructions=     2163944 cycles=      625503 branch_miss=    2341 cache_miss=       9 cache_ref=      9693 items=         1 avg_time=    198037 ns]
top_tweet<yyjson>/manual_time                             773783 ns       860264 ns         1090           9.588k           1.48459G             221         27.46k    1.35898M              2.15194          2.35083k       3.19474G          2.82787M                    4.47791                     2.08087           2.35083k    7.48828k   631.515k       778.332M/s     407.47   22.3763k   1.51468M         2.39849   1.29235k/s  1.9575G/s     2.82835M               4.47867                1.86729          1       1.29235k/s [BEST: throughput=  1.48 GB/s doc_throughput=  2350 docs/s instructions=     2827869 cycles=     1358983 branch_miss=    9588 cache_miss=     221 cache_ref=     27460 items=         1 avg_time=    773782 ns]
top_tweet<yyjson_insitu>/manual_time                      502765 ns       570996 ns         1000           7.031k           1.83341G            1034        13.271k    1095.26k              1.73434           2.9032k       3.17975G          2.82755M                     4.4774                     2.58162            2.9032k    7.30952k   631.515k       1.16982G/s     55.799   7.74608k   1.20936M         1.91502     1.989k/s 2.40542G/s     2.82781M               4.47782                2.33826          1         1.989k/s [BEST: throughput=  1.83 GB/s doc_throughput=  2903 docs/s instructions=     2827548 cycles=     1095259 branch_miss=    7031 cache_miss=    1034 cache_ref=     13271 items=         1 avg_time=    502765 ns]
top_tweet<sajson>/manual_time                             665837 ns       736606 ns         1050          10.274k           956.077M               0        12.955k    2.10919M              3.33989          1.51394k        3.1932G          5.74503M                    9.09721                      2.7238           1.51394k     10.508k   631.515k       904.516M/s    1.68476   13.1121k   2.12428M         3.36379   1.50187k/s 3.19039G/s     5.74503M               9.09721                2.70446          1       1.50187k/s [BEST: throughput=  0.96 GB/s doc_throughput=  1513 docs/s instructions=     5745026 cycles=     2109193 branch_miss=   10274 cache_miss=       0 cache_ref=     12955 items=         1 avg_time=    665836 ns]
top_tweet<rapidjson>/manual_time                         2848265 ns      2919138 ns          251          29.517k           248.644M             813        22.596k    8.10903M              12.8406           393.727       3.19274G          21.8183M                    34.5491                     2.69062            393.727    34.7725k   631.515k       211.448M/s    760.618   10.8257k   8.42366M         13.3388    351.091/s 2.95747G/s     21.8191M               34.5504                2.59021          1        351.091/s [BEST: throughput=  0.25 GB/s doc_throughput=   393 docs/s instructions=    21818288 cycles=     8109032 branch_miss=   29517 cache_miss=     813 cache_ref=     22596 items=         1 avg_time=   2848264 ns]
top_tweet<rapidjson_insitu>/manual_time                  1709416 ns      1779435 ns          434            26.5k           393.532M              74        14.475k    5.12378M              8.11347           623.155       3.19291G          13.2541M                    20.9877                     2.58678            623.155    26.4428k   631.515k       352.319M/s   2.31378k   10.9213k   5.18103M         8.20412    584.995/s 3.03088G/s     13.2543M               20.9881                2.55824          1        584.995/s [BEST: throughput=  0.39 GB/s doc_throughput=   623 docs/s instructions=    13254076 cycles=     5123780 branch_miss=   26500 cache_miss=      74 cache_ref=     14475 items=         1 avg_time=   1709415 ns]
top_tweet<nlohmann_json>/manual_time                    10525259 ns     10613787 ns           66         192.568k           60.3565M              43       165.283k     33.362M              52.8285           95.5741       3.18854G          85.6234M                    135.584                      2.5665            95.5741    196.215k   631.515k       57.2204M/s    73.5303   164.405k   33.5678M         53.1545    95.0095/s 3.18926G/s     85.9694M               136.132                2.56106          1        95.0095/s [BEST: throughput=  0.06 GB/s doc_throughput=    95 docs/s instructions=    85623438 cycles=    33362002 branch_miss=  192568 cache_miss=      43 cache_ref=    165283 items=         1 avg_time=  10525259 ns]
