run_benchmark: v0.8.0 /home/jkeiser/simdjson_benchmark_results/v0.8.0/skylake-x-clang10.json -DCMAKE_BUILD_TYPE=Release
git reset --hard v0.8.0
HEAD is now at c96ff018 Version 0.8.
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The CXX compiler identification is Clang 10.0.1
-- The C compiler identification is Clang 10.0.1
-- Check for working CXX compiler: /usr/bin/clang++-10
-- Check for working CXX compiler: /usr/bin/clang++-10 -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Check for working C compiler: /usr/bin/clang-10
-- Check for working C compiler: /usr/bin/clang-10 -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed
-- Check if compiler accepts -pthread
-- Check if compiler accepts -pthread - yes
-- Found Threads: TRUE  
-- Looking for fork
-- Looking for fork - found
-- Looking for wait
-- Looking for wait - found
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- Found Git: /usr/bin/git (found version "2.27.0") 
-- git Version: v0.2.1-c96ff018
-- Version: 0.2.1
-- Performing Test HAVE_CXX_FLAG_STD_CXX11
-- Performing Test HAVE_CXX_FLAG_STD_CXX11 - Success
-- Performing Test HAVE_CXX_FLAG_WALL
-- Performing Test HAVE_CXX_FLAG_WALL - Success
-- Performing Test HAVE_CXX_FLAG_WEXTRA
-- Performing Test HAVE_CXX_FLAG_WEXTRA - Success
-- Performing Test HAVE_CXX_FLAG_WSHADOW
-- Performing Test HAVE_CXX_FLAG_WSHADOW - Success
-- Performing Test HAVE_CXX_FLAG_WERROR
-- Performing Test HAVE_CXX_FLAG_WERROR - Success
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32 - Success
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED - Success
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WD654
-- Performing Test HAVE_CXX_FLAG_WD654 - Failed
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY - Success
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES -- failed to compile
-- Performing Test HAVE_CXX_FLAG_COVERAGE
-- Performing Test HAVE_CXX_FLAG_COVERAGE - Success
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Performing Test USE_BOOST_JSON
-- Performing Test USE_BOOST_JSON - Failed
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Found Python3: /usr/bin/python3.8 (found version "3.8.6") found components: Interpreter 
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 10
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
Scanning dependencies of target benchmark
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_api_internal.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_name.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_name.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_register.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_register.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_runner.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_runner.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/colorprint.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/colorprint.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/commandlineflags.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/commandlineflags.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/complexity.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/complexity.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/console_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/console_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/counter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/counter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/csv_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/csv_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/json_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/json_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/sleep.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sleep.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/statistics.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/statistics.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/string_util.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/string_util.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/sysinfo.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sysinfo.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/timers.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/timers.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -P CMakeFiles/benchmark.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/benchmark.dir/link.txt --verbose=1
/usr/bin/ar qc libbenchmark.a  CMakeFiles/benchmark.dir/benchmark.cc.o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o CMakeFiles/benchmark.dir/benchmark_name.cc.o CMakeFiles/benchmark.dir/benchmark_register.cc.o CMakeFiles/benchmark.dir/benchmark_runner.cc.o CMakeFiles/benchmark.dir/colorprint.cc.o CMakeFiles/benchmark.dir/commandlineflags.cc.o CMakeFiles/benchmark.dir/complexity.cc.o CMakeFiles/benchmark.dir/console_reporter.cc.o CMakeFiles/benchmark.dir/counter.cc.o CMakeFiles/benchmark.dir/csv_reporter.cc.o CMakeFiles/benchmark.dir/json_reporter.cc.o CMakeFiles/benchmark.dir/reporter.cc.o CMakeFiles/benchmark.dir/sleep.cc.o CMakeFiles/benchmark.dir/statistics.cc.o CMakeFiles/benchmark.dir/string_util.cc.o CMakeFiles/benchmark.dir/sysinfo.cc.o CMakeFiles/benchmark.dir/timers.cc.o
/usr/bin/ranlib libbenchmark.a
[ 80%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
Scanning dependencies of target generated-data
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated && /usr/bin/ruby genfeaturejson.rb /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-miss.json ...
[ 80%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/clang++-10  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/include  -O3 -DNDEBUG -fPIC   -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -pthread -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/clang++-10 -fPIC -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.7 -o ../libsimdjson.so.7.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.7.0.0 ../libsimdjson.so.7 ../libsimdjson.so
[ 80%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
Scanning dependencies of target yyjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/clang-10  -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src  -O3 -DNDEBUG   -o CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o   -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src/yyjson.c
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -P CMakeFiles/yyjson.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -E cmake_link_script CMakeFiles/yyjson.dir/link.txt --verbose=1
/usr/bin/ar qc libyyjson.a  CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o
/usr/bin/ranlib libyyjson.a
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/clang++-10  -DRAPIDJSON_HAS_STDSTRING -DSAJSON_UNSORTED_OBJECT_KEYS -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_COMPETITION_NLOHMANN_JSON -DSIMDJSON_COMPETITION_RAPIDJSON -DSIMDJSON_COMPETITION_SAJSON -DSIMDJSON_COMPETITION_YYJSON -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/rapidjson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/sajson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/json  -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/clang++-10  -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.7.0.0 ../_deps/google_benchmarks/src/libbenchmark.a ../dependencies/libyyjson.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.8.0/skylake-x-clang10.json --benchmark_out_format=json
2021-01-25 00:48:09
Running benchmark/bench_ondemand
Run on (4 X 3200 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 1024 KiB (x4)
  L3 Unified 8448 KiB (x1)
Load Average: 0.74, 0.24, 0.11
***WARNING*** CPU scaling is enabled, the benchmark real time measurements may be noisy and will incur extra overhead.
simdjson::dom implementation:      haswell
simdjson::ondemand implementation: fallback

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                  325934 ns       397011 ns         2150            4.01k           1.95154G               2        34.182k     1033.6k               1.6367          3.09024k       3.19408G          3.01556M                    4.77511                     2.91752           309.024k    4.13404k   631.515k       1.80449G/s    2.61814   34.4137k   1040.03k         1.64688   3.06811k/s 3.19091G/s     3.01556M               4.77511                 2.8995        100       306.811k/s [BEST: throughput=  1.95 GB/s doc_throughput=  3090 docs/s instructions=     3015556 cycles=     1033602 branch_miss=    4010 cache_miss=       2 cache_ref=     34182 items=       100 avg_time=    325934 ns]
partial_tweets<simdjson_ondemand>/manual_time             204446 ns       260434 ns         3419           2.768k            3.1128G               0          8.38k     647.98k              1.02607          4.92909k       3.19395G          2.29929M                     3.6409                     3.54839           492.909k     2.8792k   631.515k       2.87677G/s  0.0444574   8.27881k   652.475k         1.03319   4.89127k/s 3.19143G/s     2.29929M                3.6409                3.52394        100       489.127k/s [BEST: throughput=  3.11 GB/s doc_throughput=  4929 docs/s instructions=     2299286 cycles=      647980 branch_miss=    2768 cache_miss=       0 cache_ref=      8380 items=       100 avg_time=    204445 ns]
partial_tweets<yyjson>/manual_time                        793715 ns       873142 ns          880           9.783k           1.44336G             220        28.291k    1.39758M              2.21305          2.28555k       3.19423G          2.90334M                    4.59742                     2.07741           228.555k    7.61876k   631.515k       758.786M/s    637.352   26.1099k   1.55839M          2.4677    1.2599k/s 1.96341G/s     2.90383M               4.59819                1.86335        100        125.99k/s [BEST: throughput=  1.44 GB/s doc_throughput=  2285 docs/s instructions=     2903341 cycles=     1397577 branch_miss=    9783 cache_miss=     220 cache_ref=     28291 items=       100 avg_time=    793714 ns]
partial_tweets<yyjson_insitu>/manual_time                 512695 ns       577982 ns         1380           7.442k           1.77797G              76        14.828k    1.13451M              1.79649          2.81541k       3.19411G          2.90303M                    4.59693                     2.55884           281.541k    7.38056k   631.515k       1.14716G/s    127.285   12.5668k   1.23415M         1.95427   1.95048k/s 2.40718G/s     2.90329M               4.59734                2.35247        100       195.048k/s [BEST: throughput=  1.78 GB/s doc_throughput=  2815 docs/s instructions=     2903028 cycles=     1134508 branch_miss=    7442 cache_miss=      76 cache_ref=     14828 items=       100 avg_time=    512695 ns]
partial_tweets<sajson>/manual_time                        681268 ns       745287 ns         1028          10.496k           935.292M               0        13.536k    2.15591M              3.41387          1.48103k       3.19297G          5.87179M                    9.29794                     2.72358           148.103k    10.8509k   631.515k       884.028M/s     2.3463   13.6182k   2.17301M         3.44094   1.46785k/s 3.18965G/s     5.87179M               9.29794                2.70215        100       146.785k/s [BEST: throughput=  0.94 GB/s doc_throughput=  1481 docs/s instructions=     5871791 cycles=     2155910 branch_miss=   10496 cache_miss=       0 cache_ref=     13536 items=       100 avg_time=    681267 ns]
partial_tweets<rapidjson>/manual_time                    2839716 ns      2907799 ns          247          30.211k           246.466M          7.406k        22.687k    8.18071M              12.9541           390.277       3.19274G          21.9153M                    34.7027                     2.67889           39.0277k    31.6528k   631.515k       212.084M/s      509.3    16.317k   8.36412M         13.2445    352.148/s 2.94541G/s     21.9159M               34.7037                2.62023        100       35.2148k/s [BEST: throughput=  0.25 GB/s doc_throughput=   390 docs/s instructions=    21915251 cycles=     8180706 branch_miss=   30211 cache_miss=    7406 cache_ref=     22687 items=       100 avg_time=   2839716 ns]
partial_tweets<rapidjson_insitu>/manual_time             1759817 ns      1822429 ns          399          25.995k           391.871M             105        14.825k    5.14518M              8.14736           620.526       3.19272G          13.3446M                    21.1311                     2.59361           62.0526k    26.0811k   631.515k       342.229M/s    223.554   10.4916k   5.21022M         8.25035    568.241/s 2.96066G/s     13.3452M               21.1321                2.56135        100       56.8241k/s [BEST: throughput=  0.39 GB/s doc_throughput=   620 docs/s instructions=    13344614 cycles=     5145181 branch_miss=   25995 cache_miss=     105 cache_ref=     14825 items=       100 avg_time=   1759817 ns]
partial_tweets<nlohmann_json>/manual_time                9502348 ns      9590870 ns           74         153.163k           69.5629M               3        98.181k    28.9578M              45.8545           110.152       3.18977G          78.2474M                    123.904                     2.70212           11.0152k    162.379k   631.515k       63.3801M/s    63.1486   147.024k   30.3055M         47.9886    105.237/s 3.18927G/s     79.2948M               125.563                2.61651        100       10.5237k/s [BEST: throughput=  0.07 GB/s doc_throughput=   110 docs/s instructions=    78247377 cycles=    28957779 branch_miss=  153163 cache_miss=       3 cache_ref=     98181 items=       100 avg_time=   9502348 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                 100642520 ns    106847315 ns            7         916.036k           457.254M        6.77937M       6.89726M    320.771M              6.97346           9.94057       3.18865G          1038.51M                     22.577                     3.23756           9.94057M    916.228k   45.9988M       435.878M/s   6.82359M   6.89754M   320.847M         6.97513    9.93616/s 3.18799G/s     1038.51M                22.577                3.23678      1000k       9.93616M/s [BEST: throughput=  0.46 GB/s doc_throughput=     9 docs/s instructions=  1038513495 cycles=   320770803 branch_miss=  916036 cache_miss= 6779371 cache_ref=   6897257 items=   1000000 avg_time= 100642519 ns]
large_random<simdjson_ondemand>/manual_time             71607405 ns     77751950 ns           10         912.431k            642.79M        3.49389M        3.5731M    228.192M              4.96083           13.9741       3.18877G          676.969M                    14.7171                     2.96666           13.9741M    909.977k   45.9988M       612.616M/s   3.51846M   3.57297M   228.315M          4.9635     13.965/s 3.18843G/s     676.969M               14.7171                2.96507      1000k        13.965M/s [BEST: throughput=  0.64 GB/s doc_throughput=    13 docs/s instructions=   676969400 cycles=   228192084 branch_miss=  912431 cache_miss= 3493888 cache_ref=   3573100 items=   1000000 avg_time=  71607404 ns]
large_random<simdjson_ondemand_unordered>/manual_time   72232084 ns     78385657 ns           10         945.896k           637.105M        3.51477M       3.57273M    230.239M              5.00533           13.8505       3.18892G          675.969M                    14.6954                     2.93595           13.8505M    943.977k   45.9988M       607.318M/s   3.52416M   3.57281M   230.317M         5.00703    13.8443/s 3.18857G/s     675.969M               14.6954                2.93495      1000k       13.8443M/s [BEST: throughput=  0.64 GB/s doc_throughput=    13 docs/s instructions=   675969399 cycles=   230238983 branch_miss=  945896 cache_miss= 3514769 cache_ref=   3572726 items=   1000000 avg_time=  72232083 ns]
large_random<yyjson>/manual_time                       151965564 ns    158188034 ns            5         662.967k           302.876M        4.21132M       5.34059M    343.717M               7.4723           6.58443       2.26318G           866.68M                    18.8414                      2.5215           6.58443M    663.738k   45.9988M        288.67M/s   4.20928M   5.31474M   343.979M         7.47801    6.58044/s 2.26353G/s      866.68M               18.8414                2.51957      1000k       6.58044M/s [BEST: throughput=  0.30 GB/s doc_throughput=     6 docs/s instructions=   866680102 cycles=   343716532 branch_miss=  662967 cache_miss= 4211316 cache_ref=   5340591 items=   1000000 avg_time= 151965564 ns]
large_random<yyjson_insitu>/manual_time                125577970 ns    131793927 ns            6         661.347k           366.708M        3.49349M        4.6123M    300.239M               6.5271           7.97212       2.39354G          860.559M                    18.7083                     2.86625           7.97212M    663.632k   45.9988M       349.328M/s   3.49271M   4.59298M   300.619M         6.53538    7.96318/s 2.39389G/s     860.559M               18.7083                2.86262      1000k       7.96318M/s [BEST: throughput=  0.37 GB/s doc_throughput=     7 docs/s instructions=   860559334 cycles=   300238686 branch_miss=  661347 cache_miss= 3493493 cache_ref=   4612296 items=   1000000 avg_time= 125577970 ns]
large_random<sajson>/manual_time                       107829469 ns    114037926 ns            6         581.898k           427.824M         5.4747M        5.5776M    342.861M              7.45371           9.30078       3.18888G          1.13399G                    24.6526                     3.30743           9.30078M    581.923k   45.9988M       406.826M/s   5.47642M   5.57757M   343.848M         7.47516     9.2739/s 3.18881G/s     1.13399G               24.6526                3.29794      1000k        9.2739M/s [BEST: throughput=  0.43 GB/s doc_throughput=     9 docs/s instructions=  1133989156 cycles=   342861447 branch_miss=  581898 cache_miss= 5474697 cache_ref=   5577604 items=   1000000 avg_time= 107829469 ns]
large_random<rapidjson>/manual_time                    251005013 ns    257263946 ns            3         617.259k           189.397M        4.33202M        5.2165M    705.305M              15.3331           4.11745       2.90406G          2.02013G                     43.917                     2.86419           4.11745M    622.303k   45.9988M       174.769M/s   4.06741M   5.15054M    708.99M         15.4132    3.98398/s 2.82461G/s     2.02014G               43.9172                2.84931      1000k       3.98398M/s [BEST: throughput=  0.19 GB/s doc_throughput=     4 docs/s instructions=  2020126316 cycles=   705305415 branch_miss=  617259 cache_miss= 4332017 cache_ref=   5216497 items=   1000000 avg_time= 251005013 ns]
large_random<rapidjson_lossless>/manual_time           287193529 ns    293440786 ns            2         599.794k           163.733M        4.33757M       5.21444M    827.365M              17.9867           3.55951       2.94502G          2.48209G                      53.96                           3           3.55951M    602.303k   45.9988M       152.747M/s   4.13679M   5.16547M   830.832M         18.0621    3.48197/s 2.89294G/s      2.4821G               53.9601                2.98749      1000k       3.48197M/s [BEST: throughput=  0.16 GB/s doc_throughput=     3 docs/s instructions=  2482093422 cycles=   827364908 branch_miss=  599794 cache_miss= 4337574 cache_ref=   5214443 items=   1000000 avg_time= 287193529 ns]
large_random<rapidjson_insitu>/manual_time             277709991 ns    283964359 ns            3         586.153k           170.532M        5.02646M       5.93888M    791.611M              17.2094           3.70731       2.93474G          1.75113G                     38.069                     2.21211           3.70731M    585.256k   45.9988M       157.963M/s   4.76991M   5.87453M   794.941M         17.2818    3.60088/s 2.86249G/s     1.75113G               38.0692                2.20285      1000k       3.60088M/s [BEST: throughput=  0.17 GB/s doc_throughput=     3 docs/s instructions=  1751126165 cycles=   791610695 branch_miss=  586153 cache_miss= 5026463 cache_ref=   5938877 items=   1000000 avg_time= 277709991 ns]
large_random<nlohmann_json>/manual_time               1455502770 ns   1461641374 ns            1         4.11545M           31.6034M        30.2854M       31.0852M    4.62694G              100.588          0.687048       3.17893G          12.3805G                     269.15                     2.67575           687.048k    4.11545M   45.9988M       30.1393M/s   30.2854M   31.0852M   4.62694G         100.588   0.687048/s 3.17893G/s     12.3805G                269.15                2.67575      1000k       687.048k/s [BEST: throughput=  0.03 GB/s doc_throughput=     0 docs/s instructions= 12380549800 cycles=  4626943213 branch_miss= 4115454 cache_miss=30285426 cache_ref=  31085194 items=   1000000 avg_time=1455502770 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                       105980782 ns    125254933 ns            7         1032.78k           1.29713G        10.1981M       10.3185M     337.54M              2.45832           9.44709       3.18877G          991.684M                    7.22249                     2.93798             4.953M    1031.99k   137.305M       1.20659G/s   10.2366M   10.3188M   337.939M         2.46123    9.43567/s 3.18868G/s     991.684M               7.22249                 2.9345   524.288k       4.94701M/s [BEST: throughput=  1.30 GB/s doc_throughput=     9 docs/s instructions=   991683894 cycles=   337539892 branch_miss= 1032777 cache_miss=10198103 cache_ref=  10318523 items=    524288 avg_time= 105980782 ns]
kostya<simdjson_ondemand>/manual_time                   71568231 ns     90814311 ns           10         476.312k           1.92064G        6.43515M       6.47114M    227.975M              1.66035           13.9881       3.18894G          660.046M                    4.80716                     2.89526           7.33381M    477.085k   137.305M       1.78676G/s   6.43698M   6.47105M   228.201M           1.662    13.9727/s 3.18858G/s     660.046M               4.80716                2.89239   524.288k       7.32571M/s [BEST: throughput=  1.92 GB/s doc_throughput=    13 docs/s instructions=   660046430 cycles=   227974645 branch_miss=  476312 cache_miss= 6435150 cache_ref=   6471141 items=    524288 avg_time=  71568231 ns]
kostya<yyjson>/manual_time                             231270387 ns    250543124 ns            3         418.894k           593.929M        8.50154M       9.70157M    503.712M              3.66856           4.32562       2.17887G          978.903M                     7.1294                     1.94338           2.26787M    417.683k   137.305M       566.195M/s   8.50225M   9.71108M   503.731M          3.6687    4.32394/s  2.1781G/s     978.903M                7.1294                1.94331   524.288k       2.26699M/s [BEST: throughput=  0.59 GB/s doc_throughput=     4 docs/s instructions=   978902917 cycles=   503712296 branch_miss=  418894 cache_miss= 8501541 cache_ref=   9701573 items=    524288 avg_time= 231270387 ns]
kostya<yyjson_insitu>/manual_time                      152375322 ns    171635879 ns            5          413.19k           901.415M        6.36335M       7.61862M    373.112M               2.7174           6.56506        2.4495G          960.633M                    6.99635                     2.57465           3.44198M    412.668k   137.305M       859.353M/s   6.36357M   7.61903M   373.242M         2.71835    6.56274/s 2.44949G/s     960.633M               6.99634                2.57375   524.288k       3.44077M/s [BEST: throughput=  0.90 GB/s doc_throughput=     6 docs/s instructions=   960633252 cycles=   373111909 branch_miss=  413190 cache_miss= 6363348 cache_ref=   7618622 items=    524288 avg_time= 152375322 ns]
kostya<sajson>/manual_time                             163094579 ns    182410105 ns            4          354.84k           842.139M        8.46351M        8.5385M    519.749M              3.78536           6.13334        3.1878G          1.54442G                    11.2481                     2.97148           3.21564M    354.982k   137.305M       802.873M/s   8.49021M   8.53894M   520.017M         3.78731    6.13141/s 3.18844G/s     1.54442G               11.2481                2.96995   524.288k       3.21463M/s [BEST: throughput=  0.84 GB/s doc_throughput=     6 docs/s instructions=  1544424230 cycles=   519748793 branch_miss=  354840 cache_miss= 8463514 cache_ref=   8538503 items=    524288 avg_time= 163094578 ns]
kostya<rapidjson>/manual_time                          327553367 ns    346816538 ns            2         1064.55k           423.669M        5.18104M        6.4782M    934.016M              6.80249           3.08561       2.88201G          2.74288G                    19.9766                     2.93665           1.61775M    1075.95k   137.305M       399.765M/s   5.05855M   6.44609M    936.53M          6.8208    3.05294/s 2.85917G/s     2.74288G               19.9766                2.92877   524.288k       1.60062M/s [BEST: throughput=  0.42 GB/s doc_throughput=     3 docs/s instructions=  2742881683 cycles=   934015810 branch_miss= 1064546 cache_miss= 5181039 cache_ref=   6478202 items=    524288 avg_time= 327553367 ns]
kostya<rapidjson_lossless>/manual_time                 352637743 ns    371926668 ns            2         977.002k           393.227M        5.18291M       6.48616M    1015.33M              7.39473           2.86389       2.90781G          3.00973G                    21.9201                     2.96428            1.5015M    980.618k   137.305M       371.328M/s   5.06926M   6.45631M    1017.7M         7.41194    2.83577/s 2.88595G/s     3.00974G               21.9201                 2.9574   524.288k       1.48676M/s [BEST: throughput=  0.39 GB/s doc_throughput=     2 docs/s instructions=  3009734963 cycles=  1015333160 branch_miss=  977002 cache_miss= 5182909 cache_ref=   6486156 items=    524288 avg_time= 352637743 ns]
kostya<rapidjson_insitu>/manual_time                   315920514 ns    335200011 ns            2         1026.38k             439.1M        7.34002M       8.64482M    899.397M              6.55036           3.19799       2.87627G          2.22722G                     16.221                     2.47635           1.67667M    1021.82k   137.305M       414.485M/s   7.20467M    8.6115M   901.208M         6.56355    3.16535/s 2.85264G/s     2.22722G                16.221                2.47137   524.288k       1.65956M/s [BEST: throughput=  0.44 GB/s doc_throughput=     3 docs/s instructions=  2227219117 cycles=   899397288 branch_miss= 1026379 cache_miss= 7340023 cache_ref=   8644815 items=    524288 avg_time= 315920514 ns]
kostya<nlohmann_json>/manual_time                     2183115537 ns   2202294613 ns            1         14.8352M           62.8941M        44.4926M       45.1249M     6.9627G              50.7098          0.458061       3.18934G          17.2831G                    125.874                     2.48224           240.156k    14.8352M   137.305M       59.9804M/s   44.4926M   45.1249M    6.9627G         50.7098   0.458061/s 3.18934G/s     17.2831G               125.874                2.48224   524.288k       240.156k/s [BEST: throughput=  0.06 GB/s doc_throughput=     0 docs/s instructions= 17283074733 cycles=  6962703273 branch_miss=14835199 cache_miss=44492617 cache_ref=  45124889 items=    524288 avg_time=2183115537 ns]
distinct_user_id<simdjson_dom>/manual_time                314478 ns       392089 ns         2225           4.146k           2.02709G              57        34.036k    995.099k              1.57573          3.20988k       3.19415G          2.94968M                     4.6708                     2.96421           369.136k    4.20012k   631.515k       1.87022G/s    52.8607   34.1685k   1003.53k         1.58908   3.17987k/s 3.19108G/s     2.94968M                4.6708                2.93932        115       365.685k/s [BEST: throughput=  2.03 GB/s doc_throughput=  3209 docs/s instructions=     2949678 cycles=      995099 branch_miss=    4146 cache_miss=      57 cache_ref=     34036 items=       115 avg_time=    314478 ns]
distinct_user_id<simdjson_ondemand>/manual_time           194608 ns       256173 ns         3582           2.228k           3.27402G               0         9.664k    616.219k             0.975779          5.18438k       3.19472G          1.91823M                    3.03751                     3.11291           596.204k    2.34874k   631.515k       3.02219G/s   8.93356m   9.70691k   621.111k        0.983525   5.13852k/s 3.19159G/s     1.91824M               3.03751                3.08839        115        590.93k/s [BEST: throughput=  3.27 GB/s doc_throughput=  5184 docs/s instructions=     1918235 cycles=      616219 branch_miss=    2228 cache_miss=       0 cache_ref=      9664 items=       115 avg_time=    194608 ns]
distinct_user_id<yyjson>/manual_time                      687068 ns       776390 ns         1000           6.332k           1.57211G          7.136k        27.349k    1.28305M               2.0317          2.48943k       3.19406G          2.86149M                    4.53114                     2.23022           286.285k    7.40893k   631.515k       876.565M/s   2.27009k   26.3082k   1.47867M         2.34147   1.45546k/s 2.15215G/s     2.86168M               4.53146                1.93531        115       167.378k/s [BEST: throughput=  1.57 GB/s doc_throughput=  2489 docs/s instructions=     2861486 cycles=     1283049 branch_miss=    6332 cache_miss=    7136 cache_ref=     27349 items=       115 avg_time=    687067 ns]
distinct_user_id<yyjson_insitu>/manual_time               507977 ns       582752 ns         1392           7.016k           1.81115G          1.816k        14.388k    1.10851M              1.75532          2.86795k       3.17916G          2.86097M                    4.53033                     2.58091           329.814k    7.43525k   631.515k       1.15782G/s    121.439   12.3742k   1.21894M         1.93018   1.96859k/s 2.39959G/s     2.86124M               4.53075                2.34732        115       226.388k/s [BEST: throughput=  1.81 GB/s doc_throughput=  2867 docs/s instructions=     2860973 cycles=     1108514 branch_miss=    7016 cache_miss=    1816 cache_ref=     14388 items=       115 avg_time=    507976 ns]
distinct_user_id<sajson>/manual_time                      676834 ns       748723 ns         1034          10.407k           941.516M               0        13.306k    2.14179M              3.39151          1.49088k       3.19316G          5.81023M                    9.20046                     2.71279           171.452k    10.8858k   631.515k       889.819M/s     1.5087   13.5371k   2.15927M          3.4192   1.47747k/s 3.19025G/s     5.81023M               9.20046                2.69083        115       169.909k/s [BEST: throughput=  0.94 GB/s doc_throughput=  1490 docs/s instructions=     5810227 cycles=     2141789 branch_miss=   10407 cache_miss=       0 cache_ref=     13306 items=       115 avg_time=    676833 ns]
distinct_user_id<rapidjson>/manual_time                  2826931 ns      2903411 ns          248          30.101k           247.203M          9.554k        23.134k    8.15621M              12.9153           391.445       3.19271G          21.8425M                    34.5875                     2.67802           45.0162k    31.6401k   631.515k       213.044M/s    950.431   16.9281k   8.34662M         13.2168    353.741/s 2.95254G/s     21.8434M               34.5888                2.61703        115       40.6802k/s [BEST: throughput=  0.25 GB/s doc_throughput=   391 docs/s instructions=    21842516 cycles=     8156206 branch_miss=   30101 cache_miss=    9554 cache_ref=     23134 items=       115 avg_time=   2826930 ns]
distinct_user_id<rapidjson_insitu>/manual_time           1741217 ns      1812953 ns          417          25.742k           393.013M          4.332k        14.426k    5.13029M              8.12378           622.334       3.19275G          13.2776M                     21.025                     2.58808           71.5684k    30.1558k   631.515k       345.884M/s   2.38037k   12.5275k   5.27771M         8.35722    574.311/s 3.03105G/s      13.278M               21.0257                2.51587        115       66.0458k/s [BEST: throughput=  0.39 GB/s doc_throughput=   622 docs/s instructions=    13277574 cycles=     5130289 branch_miss=   25742 cache_miss=    4332 cache_ref=     14426 items=       115 avg_time=   1741217 ns]
distinct_user_id<nlohmann_json>/manual_time             10293532 ns     10383840 ns           71         144.662k           70.0816M              35       102.984k    28.7321M              45.4972           110.974       3.18851G          72.2522M                    114.411                     2.51468            12.762k    291.706k   631.515k       58.5085M/s    97.3239    105.58k   32.8257M         51.9792    97.1484/s 3.18896G/s     72.2842M               114.462                2.20206        115       11.1721k/s [BEST: throughput=  0.07 GB/s doc_throughput=   110 docs/s instructions=    72252226 cycles=    28732143 branch_miss=  144662 cache_miss=      35 cache_ref=    102984 items=       115 avg_time=  10293532 ns]
find_tweet<simdjson_dom>/manual_time                      299953 ns       374405 ns         2334           3.898k           2.12195G             102         29.68k    950.566k              1.50522           3.3601k         3.194G          2.86436M                    4.53569                     3.01332            3.3601k    4.02414k   631.515k       1.96079G/s     100.44   29.6751k   957.247k         1.51579   3.33385k/s 3.19132G/s     2.86436M               4.53569                2.99229          1       3.33385k/s [BEST: throughput=  2.12 GB/s doc_throughput=  3360 docs/s instructions=     2864358 cycles=      950566 branch_miss=    3898 cache_miss=     102 cache_ref=     29680 items=         1 avg_time=    299953 ns]
find_tweet<simdjson_ondemand>/manual_time                 132141 ns       197032 ns         5290           1.283k           4.81349G               0         7.544k    419.239k             0.663862          7.62213k       3.19549G          1.41247M                    2.23663                     3.36912           7.62213k    1.31651k   631.515k       4.45087G/s   3.96975m   7.67562k   421.827k        0.667961   7.56766k/s 3.19224G/s     1.41247M               2.23663                3.34845          1       7.56766k/s [BEST: throughput=  4.81 GB/s doc_throughput=  7622 docs/s instructions=     1412466 cycles=      419239 branch_miss=    1283 cache_miss=       0 cache_ref=      7544 items=         1 avg_time=    132141 ns]
find_tweet<yyjson>/manual_time                            777442 ns       864780 ns         1049           9.745k           1.48227G             172        27.295k    1.36091M                2.155          2.34716k       3.19428G           2.8006M                    4.43473                     2.05788           2.34716k    7.40805k   631.515k       774.668M/s    445.329   25.1342k   1.51089M         2.39249   1.28627k/s 1.94341G/s     2.80108M               4.43548                1.85392          1       1.28627k/s [BEST: throughput=  1.48 GB/s doc_throughput=  2347 docs/s instructions=     2800598 cycles=     1360915 branch_miss=    9745 cache_miss=     172 cache_ref=     27295 items=         1 avg_time=    777442 ns]
find_tweet<yyjson_insitu>/manual_time                     495943 ns       566085 ns         1411           7.157k           1.85662G              61        13.873k    1086.33k              1.72019          2.93994k       3.19374G          2.80028M                    4.43422                     2.57774           2.93994k    7.15836k   631.515k       1.18591G/s    8.46988   10.8764k   1.18104M         1.87017   2.01636k/s  2.3814G/s     2.80054M               4.43464                2.37125          1       2.01636k/s [BEST: throughput=  1.86 GB/s doc_throughput=  2939 docs/s instructions=     2800276 cycles=     1086328 branch_miss=    7157 cache_miss=      61 cache_ref=     13873 items=         1 avg_time=    495943 ns]
find_tweet<sajson>/manual_time                            664024 ns       733626 ns         1054          10.164k           961.607M               1        12.649k    2.09708M              3.32071           1.5227k       3.19322G          5.71503M                    9.04972                     2.72523            1.5227k     10.615k   631.515k       906.985M/s    3.29127   12.8234k   2.11827M         3.35427   1.50597k/s 3.19005G/s     5.71503M               9.04972                2.69797          1       1.50597k/s [BEST: throughput=  0.96 GB/s doc_throughput=  1522 docs/s instructions=     5715034 cycles=     2097081 branch_miss=   10164 cache_miss=       1 cache_ref=     12649 items=         1 avg_time=    664023 ns]
find_tweet<rapidjson>/manual_time                        2811280 ns      2883834 ns          250          30.038k           248.988M          9.446k        21.329k    8.09786M              12.8229            394.27       3.19275G          21.7589M                    34.4551                       2.687             394.27     31.921k   631.515k        214.23M/s     667.04   14.2556k   8.29744M         13.1389     355.71/s 2.95148G/s     21.7598M               34.4565                2.62247          1         355.71/s [BEST: throughput=  0.25 GB/s doc_throughput=   394 docs/s instructions=    21758939 cycles=     8097859 branch_miss=   30038 cache_miss=    9446 cache_ref=     21329 items=         1 avg_time=   2811280 ns]
find_tweet<rapidjson_insitu>/manual_time                 1744825 ns      1812577 ns          425          25.759k           395.561M          6.907k        13.464k    5.09721M               8.0714           626.368       3.19273G          13.1992M                    20.9008                     2.58949            626.368    32.9049k   631.515k       345.169M/s   2.22635k   10.0672k   5.28952M         8.37593    573.123/s 3.03155G/s     13.1994M               20.9012                2.49539          1        573.123/s [BEST: throughput=  0.40 GB/s doc_throughput=   626 docs/s instructions=    13199166 cycles=     5097213 branch_miss=   25759 cache_miss=    6907 cache_ref=     13464 items=         1 avg_time=   1744825 ns]
find_tweet<nlohmann_json>/manual_time                    8426267 ns      8515024 ns           96         101.848k           89.0331M            1075        76.726k    22.6109M              35.8043           140.983       3.18776G          63.6629M                     100.81                     2.81558            140.983    211.309k   631.515k       71.4741M/s    83.9167   82.0097k    26.875M         42.5564    118.677/s 3.18943G/s     62.3006M               98.6527                2.31816          1        118.677/s [BEST: throughput=  0.09 GB/s doc_throughput=   140 docs/s instructions=    63662880 cycles=    22610931 branch_miss=  101848 cache_miss=    1075 cache_ref=     76726 items=         1 avg_time=   8426266 ns]
top_tweet<simdjson_dom>/manual_time                       307574 ns       387380 ns         2277           4.086k           2.07189G              38        32.291k    973.583k              1.54166          3.28083k       3.19416G          2.90125M                     4.5941                     2.97997           3.28083k    4.14946k   631.515k        1.9122G/s    37.5292   32.3434k   981.495k         1.55419   3.25125k/s 3.19108G/s     2.90125M                4.5941                2.95595          1       3.25125k/s [BEST: throughput=  2.07 GB/s doc_throughput=  3280 docs/s instructions=     2901246 cycles=      973583 branch_miss=    4086 cache_miss=      38 cache_ref=     32291 items=         1 avg_time=    307574 ns]
top_tweet<simdjson_ondemand>/manual_time                  190427 ns       256398 ns         3676           2.128k           3.34714G               1         9.408k    602.735k             0.954427          5.30018k        3.1946G          1.93827M                    3.06923                     3.21578           5.30018k    2.25925k   631.515k       3.08856G/s   0.597388   9.49215k   607.788k        0.962428   5.25136k/s 3.19171G/s     1.93827M               3.06923                3.18905          1       5.25136k/s [BEST: throughput=  3.35 GB/s doc_throughput=  5300 docs/s instructions=     1938266 cycles=      602735 branch_miss=    2128 cache_miss=       1 cache_ref=      9408 items=         1 avg_time=    190426 ns]
top_tweet<simdjson_ondemand_forward_only>/manual_time     201409 ns       268712 ns         3477           2.245k           3.17472G               1        10.072k    635.568k              1.00642          5.02715k       3.19509G          2.16394M                    3.42659                     3.40474           5.02715k    2.47524k   631.515k       2.92016G/s    1.00604   10.2226k   642.791k         1.01786   4.96503k/s 3.19148G/s     2.16394M               3.42659                3.36648          1       4.96503k/s [BEST: throughput=  3.17 GB/s doc_throughput=  5027 docs/s instructions=     2163944 cycles=      635568 branch_miss=    2245 cache_miss=       1 cache_ref=     10072 items=         1 avg_time=    201408 ns]
top_tweet<yyjson>/manual_time                             783180 ns       873909 ns         1057           9.345k           1.48506G             227        27.429k    1.35839M                2.151          2.35159k       3.19437G           2.8279M                    4.47796                      2.0818           2.35159k    7.53239k   631.515k       768.992M/s    472.412   25.5629k   1.52913M         2.42136   1.27685k/s 1.95246G/s     2.82855M                 4.479                1.84978          1       1.27685k/s [BEST: throughput=  1.49 GB/s doc_throughput=  2351 docs/s instructions=     2827896 cycles=     1358390 branch_miss=    9345 cache_miss=     227 cache_ref=     27429 items=         1 avg_time=    783180 ns]
top_tweet<yyjson_insitu>/manual_time                      502477 ns       577610 ns         1000           7.235k           1.83893G             118        14.474k     1096.9k              1.73693          2.91194k       3.19409G          2.82755M                     4.4774                     2.57777           2.91194k    7.27976k   631.515k       1.17049G/s      80.71   11.7598k   1.20249M         1.90413   1.99014k/s 2.39312G/s     2.82781M               4.47782                2.35163          1       1.99014k/s [BEST: throughput=  1.84 GB/s doc_throughput=  2911 docs/s instructions=     2827547 cycles=     1096896 branch_miss=    7235 cache_miss=     118 cache_ref=     14474 items=         1 avg_time=    502476 ns]
top_tweet<sajson>/manual_time                             668944 ns       743269 ns         1046          10.338k           952.734M               1        13.442k    2.11648M              3.35143          1.50865k       3.19302G          5.74503M                    9.09721                     2.71443           1.50865k    10.7723k   631.515k       900.314M/s    2.23805   13.4855k   2.13402M         3.37921   1.49489k/s 3.19014G/s     5.74503M               9.09721                2.69211          1       1.49489k/s [BEST: throughput=  0.95 GB/s doc_throughput=  1508 docs/s instructions=     5745026 cycles=     2116479 branch_miss=   10338 cache_miss=       1 cache_ref=     13442 items=         1 avg_time=    668943 ns]
top_tweet<rapidjson>/manual_time                         2824332 ns      2900980 ns          249          29.997k             247.5M          7.108k        22.493k    8.14645M              12.8998           391.915       3.19271G          21.8185M                    34.5494                     2.67828            391.915    31.5429k   631.515k        213.24M/s    809.201    15.186k   8.33766M         13.2026    354.066/s 2.95208G/s     21.8192M               34.5506                2.61695          1        354.066/s [BEST: throughput=  0.25 GB/s doc_throughput=   391 docs/s instructions=    21818481 cycles=     8146446 branch_miss=   29997 cache_miss=    7108 cache_ref=     22493 items=         1 avg_time=   2824332 ns]
top_tweet<rapidjson_insitu>/manual_time                  1726727 ns      1799634 ns          416          25.821k           389.966M              81        14.484k    5.17045M              8.18737           617.508       3.19279G          13.2537M                    20.9872                     2.56336            617.508    26.3907k   631.515k       348.787M/s   2.34532k   11.3466k   5.23365M         8.28745     579.13/s 3.03097G/s     13.2542M               20.9879                2.53249          1         579.13/s [BEST: throughput=  0.39 GB/s doc_throughput=   617 docs/s instructions=    13253714 cycles=     5170448 branch_miss=   25821 cache_miss=      81 cache_ref=     14484 items=         1 avg_time=   1726727 ns]
top_tweet<nlohmann_json>/manual_time                    10528052 ns     10618761 ns           66         191.805k           60.5044M             106       165.094k     33.297M              52.7256           95.8084       3.19013G          85.7496M                    135.784                     2.57529            95.8084    197.499k   631.515k       57.2052M/s        136   164.395k    33.573M         53.1626    94.9843/s  3.1889G/s     86.1153M               136.363                2.56502          1        94.9843/s [BEST: throughput=  0.06 GB/s doc_throughput=    95 docs/s instructions=    85749615 cycles=    33297020 branch_miss=  191805 cache_miss=     106 cache_ref=    165094 items=         1 avg_time=  10528051 ns]
