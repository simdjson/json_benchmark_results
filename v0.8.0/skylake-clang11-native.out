run_benchmark: v0.8.0 /home/jkeiser/simdjson_benchmark_results/v0.8.0/skylake-clang11-native.json -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native
git reset --hard v0.8.0
HEAD is now at c96ff018 Version 0.8.
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The CXX compiler identification is Clang 11.0.0
-- The C compiler identification is Clang 11.0.0
-- Check for working CXX compiler: /usr/bin/clang++-11
-- Check for working CXX compiler: /usr/bin/clang++-11 -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Check for working C compiler: /usr/bin/clang-11
-- Check for working C compiler: /usr/bin/clang-11 -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed
-- Check if compiler accepts -pthread
-- Check if compiler accepts -pthread - yes
-- Found Threads: TRUE  
-- Looking for fork
-- Looking for fork - found
-- Looking for wait
-- Looking for wait - found
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- Found Git: /usr/bin/git (found version "2.27.0") 
-- git Version: v0.2.1-c96ff018
-- Version: 0.2.1
-- Performing Test HAVE_CXX_FLAG_STD_CXX11
-- Performing Test HAVE_CXX_FLAG_STD_CXX11 - Success
-- Performing Test HAVE_CXX_FLAG_WALL
-- Performing Test HAVE_CXX_FLAG_WALL - Success
-- Performing Test HAVE_CXX_FLAG_WEXTRA
-- Performing Test HAVE_CXX_FLAG_WEXTRA - Success
-- Performing Test HAVE_CXX_FLAG_WSHADOW
-- Performing Test HAVE_CXX_FLAG_WSHADOW - Success
-- Performing Test HAVE_CXX_FLAG_WERROR
-- Performing Test HAVE_CXX_FLAG_WERROR - Success
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32 - Success
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED - Success
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WD654
-- Performing Test HAVE_CXX_FLAG_WD654 - Failed
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY - Success
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES -- failed to compile
-- Performing Test HAVE_CXX_FLAG_COVERAGE
-- Performing Test HAVE_CXX_FLAG_COVERAGE - Success
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Performing Test USE_BOOST_JSON
-- Performing Test USE_BOOST_JSON - Failed
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Found Python3: /usr/bin/python3.8 (found version "3.8.6") found components: Interpreter 
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 10
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
Scanning dependencies of target benchmark
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_api_internal.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_name.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_name.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_register.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_register.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_runner.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_runner.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/colorprint.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/colorprint.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/commandlineflags.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/commandlineflags.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/complexity.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/complexity.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/console_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/console_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/counter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/counter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/csv_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/csv_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/json_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/json_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/sleep.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sleep.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/statistics.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/statistics.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/string_util.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/string_util.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/sysinfo.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sysinfo.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/timers.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/timers.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -P CMakeFiles/benchmark.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/benchmark.dir/link.txt --verbose=1
/usr/bin/ar qc libbenchmark.a  CMakeFiles/benchmark.dir/benchmark.cc.o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o CMakeFiles/benchmark.dir/benchmark_name.cc.o CMakeFiles/benchmark.dir/benchmark_register.cc.o CMakeFiles/benchmark.dir/benchmark_runner.cc.o CMakeFiles/benchmark.dir/colorprint.cc.o CMakeFiles/benchmark.dir/commandlineflags.cc.o CMakeFiles/benchmark.dir/complexity.cc.o CMakeFiles/benchmark.dir/console_reporter.cc.o CMakeFiles/benchmark.dir/counter.cc.o CMakeFiles/benchmark.dir/csv_reporter.cc.o CMakeFiles/benchmark.dir/json_reporter.cc.o CMakeFiles/benchmark.dir/reporter.cc.o CMakeFiles/benchmark.dir/sleep.cc.o CMakeFiles/benchmark.dir/statistics.cc.o CMakeFiles/benchmark.dir/string_util.cc.o CMakeFiles/benchmark.dir/sysinfo.cc.o CMakeFiles/benchmark.dir/timers.cc.o
/usr/bin/ranlib libbenchmark.a
[ 80%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
Scanning dependencies of target generated-data
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated && /usr/bin/ruby genfeaturejson.rb /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-miss.json ...
[ 80%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/clang++-11  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/include  -march=native -O3 -DNDEBUG -fPIC   -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -pthread -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/clang++-11 -fPIC -march=native -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.7 -o ../libsimdjson.so.7.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.7.0.0 ../libsimdjson.so.7 ../libsimdjson.so
[ 80%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
Scanning dependencies of target yyjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/clang-11  -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src  -O3 -DNDEBUG   -o CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o   -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src/yyjson.c
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -P CMakeFiles/yyjson.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -E cmake_link_script CMakeFiles/yyjson.dir/link.txt --verbose=1
/usr/bin/ar qc libyyjson.a  CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o
/usr/bin/ranlib libyyjson.a
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/clang++-11  -DRAPIDJSON_HAS_STDSTRING -DSAJSON_UNSORTED_OBJECT_KEYS -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_COMPETITION_NLOHMANN_JSON -DSIMDJSON_COMPETITION_RAPIDJSON -DSIMDJSON_COMPETITION_SAJSON -DSIMDJSON_COMPETITION_YYJSON -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/rapidjson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/sajson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/json  -march=native -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/clang++-11  -march=native -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.7.0.0 ../_deps/google_benchmarks/src/libbenchmark.a ../dependencies/libyyjson.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.8.0/skylake-clang11-native.json --benchmark_out_format=json
2021-01-24 20:41:51
Running benchmark/bench_ondemand
Run on (4 X 4000 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 256 KiB (x4)
  L3 Unified 8192 KiB (x1)
Load Average: 1.00, 0.88, 0.56
simdjson::dom implementation:      haswell
simdjson::ondemand implementation: haswell
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                  272251 ns       301109 ns         2514           3.541k           2.33049G               0         93.67k    1000.67k              1.58455          3.69031k       3.69277G          2.99337M                    4.73999                     2.99137           369.031k    3.63858k   631.515k        2.1603G/s   0.957836   93.5649k   1004.74k           1.591   3.67309k/s 3.69049G/s     2.99337M               4.73999                2.97925        100       367.309k/s [BEST: throughput=  2.33 GB/s doc_throughput=  3690 docs/s instructions=     2993372 cycles=     1000668 branch_miss=    3541 cache_miss=       0 cache_ref=     93670 items=       100 avg_time=    272250 ns]
partial_tweets<simdjson_ondemand>/manual_time             175797 ns       204394 ns         3981           1.868k           3.61796G               0        59.219k    644.641k              1.02078          5.72902k       3.69316G          1.94668M                    3.08256                     3.01979           572.902k    1.97405k   631.515k       3.34558G/s  0.0281336     59.21k   648.838k         1.02743   5.68836k/s 3.69083G/s     1.94668M               3.08256                3.00025        100       568.836k/s [BEST: throughput=  3.62 GB/s doc_throughput=  5729 docs/s instructions=     1946680 cycles=      644641 branch_miss=    1868 cache_miss=       0 cache_ref=     59219 items=       100 avg_time=    175797 ns]
partial_tweets<yyjson>/manual_time                        634261 ns       665491 ns         1097           9.691k           1.81107G             294        78.584k    1.28773M              2.03911          2.86782k       3.69297G           2.9196M                    4.62317                     2.26725           286.782k    7.41155k   631.515k       949.545M/s    1059.82   51.7697k    1.4979M         2.37191   1.57664k/s 2.36164G/s      2.9203M               4.62427                 1.9496        100       157.664k/s [BEST: throughput=  1.81 GB/s doc_throughput=  2867 docs/s instructions=     2919603 cycles=     1287727 branch_miss=    9691 cache_miss=     294 cache_ref=     78584 items=       100 avg_time=    634261 ns]
partial_tweets<yyjson_insitu>/manual_time                 425620 ns       455056 ns         1646           6.657k           2.06877G          1.195k        48.485k      1.119M              1.77193          3.27589k       3.66572G          2.91929M                    4.62268                     2.60884           327.589k    7.23609k   631.515k       1.38185G/s    158.522   33.8304k    1.2236M         1.93756   2.34951k/s 2.87486G/s     2.91955M               4.62309                2.38604        100       234.951k/s [BEST: throughput=  2.07 GB/s doc_throughput=  3275 docs/s instructions=     2919289 cycles=     1119001 branch_miss=    6657 cache_miss=    1195 cache_ref=     48485 items=       100 avg_time=    425620 ns]
partial_tweets<sajson>/manual_time                        597034 ns       626063 ns         1170          10.403k           1069.92M               0         48.18k    2.17918M              3.45071          1.69421k       3.69198G          5.87691M                    9.30604                     2.69685           169.421k    10.8191k   631.515k       1008.75M/s    2.10855   48.0828k   2.20292M         3.48831   1.67495k/s 3.68977G/s     5.87691M               9.30604                2.66778        100       167.495k/s [BEST: throughput=  1.07 GB/s doc_throughput=  1694 docs/s instructions=     5876906 cycles=     2179178 branch_miss=   10403 cache_miss=       0 cache_ref=     48180 items=       100 avg_time=    597034 ns]
partial_tweets<rapidjson>/manual_time                    2350074 ns      2379627 ns          298          29.785k           292.912M             410        55.078k    7.94911M              12.5874           463.824       3.68699G          21.8953M                    34.6711                     2.75444           46.3824k    29.8547k   631.515k       256.273M/s    646.299   34.5111k   8.08867M         12.8084    425.518/s 3.44188G/s     21.8961M               34.6724                2.70701        100       42.5518k/s [BEST: throughput=  0.29 GB/s doc_throughput=   463 docs/s instructions=    21895337 cycles=     7949108 branch_miss=   29785 cache_miss=     410 cache_ref=     55078 items=       100 avg_time=   2350074 ns]
partial_tweets<rapidjson_insitu>/manual_time             1549177 ns      1578468 ns          451           25.32k           439.399M             101        45.835k     5.3057M              8.40155           695.786       3.69163G          13.3202M                    21.0924                     2.51054           69.5786k     25.715k   631.515k       388.761M/s    292.557   35.5403k   5.37394M          8.5096    645.504/s  3.4689G/s     13.3205M                21.093                2.47873        100       64.5504k/s [BEST: throughput=  0.44 GB/s doc_throughput=   695 docs/s instructions=    13320159 cycles=     5305702 branch_miss=   25320 cache_miss=     101 cache_ref=     45835 items=       100 avg_time=   1549176 ns]
partial_tweets<nlohmann_json>/manual_time                8530853 ns      8566137 ns           82         151.248k           76.3156M               3       232.679k    30.5322M              48.3476           120.845       3.68968G          80.2978M                    127.151                     2.62994           12.0845k    162.723k   631.515k       70.5978M/s    109.317   368.496k   31.4701M         49.8328    117.222/s 3.68898G/s     80.8702M               128.057                2.56974        100       11.7222k/s [BEST: throughput=  0.08 GB/s doc_throughput=   120 docs/s instructions=    80297783 cycles=    30532218 branch_miss=  151248 cache_miss=       3 cache_ref=    232679 items=       100 avg_time=   8530852 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                  87610507 ns     90984044 ns            8         916.247k           526.038M        10.8853M       15.3768M    322.586M              7.01293           11.4359       3.68907G          1035.69M                    22.5155                     3.21057           11.4359M    919.716k   45.9988M       500.715M/s   10.9341M   15.3783M   323.075M         7.02356    11.4142/s 3.68763G/s     1035.69M               22.5155                3.20571      1000k       11.4142M/s [BEST: throughput=  0.53 GB/s doc_throughput=    11 docs/s instructions=  1035686042 cycles=   322586083 branch_miss=  916247 cache_miss=10885266 cache_ref=  15376756 items=   1000000 avg_time=  87610506 ns]
large_random<simdjson_ondemand>/manual_time             65688272 ns     69054802 ns           11         918.831k           700.875M        5.72005M       8.02941M    242.121M              5.26364           15.2368       3.68916G          670.142M                    14.5687                      2.7678           15.2368M    923.159k   45.9988M       667.819M/s   5.71028M   8.02902M   242.288M         5.26727    15.2234/s 3.68845G/s     670.142M               14.5687                2.76589      1000k       15.2234M/s [BEST: throughput=  0.70 GB/s doc_throughput=    15 docs/s instructions=   670141947 cycles=   242121113 branch_miss=  918831 cache_miss= 5720049 cache_ref=   8029405 items=   1000000 avg_time=  65688272 ns]
large_random<simdjson_ondemand_unordered>/manual_time   66467051 ns     69842410 ns           10         896.526k           692.693M        5.68649M       8.02753M    244.977M              5.32572           15.0589       3.68909G          674.142M                    14.6556                     2.75186           15.0589M    896.936k   45.9988M       659.994M/s   5.71457M   8.02744M   245.062M         5.32757     15.045/s 3.68697G/s     674.142M               14.6556                 2.7509      1000k        15.045M/s [BEST: throughput=  0.69 GB/s doc_throughput=    15 docs/s instructions=   674141947 cycles=   244976714 branch_miss=  896526 cache_miss= 5686489 cache_ref=   8027529 items=   1000000 avg_time=  66467050 ns]
large_random<yyjson>/manual_time                       115638395 ns    119046509 ns            6         676.874k           398.172M        5.72473M       9.00302M     306.73M              6.66823           8.65615        2.6551G          855.681M                    18.6023                     2.78968           8.65615M    676.803k   45.9988M       379.354M/s   5.71931M   9.00199M   306.687M         6.66728    8.64765/s 2.65212G/s     855.681M               18.6023                2.79008      1000k       8.64765M/s [BEST: throughput=  0.40 GB/s doc_throughput=     8 docs/s instructions=   855680953 cycles=   306730475 branch_miss=  676874 cache_miss= 5724732 cache_ref=   9003024 items=   1000000 avg_time= 115638395 ns]
large_random<yyjson_insitu>/manual_time                 97679991 ns    101116821 ns            7         674.746k           471.364M        4.83175M       7.63538M    275.014M              5.97873           10.2473       2.81815G           849.56M                    18.4692                     3.08915           10.2473M    675.904k   45.9988M       449.098M/s   4.84316M   7.65324M   275.054M          5.9796    10.2375/s 2.81587G/s      849.56M               18.4692                 3.0887      1000k       10.2375M/s [BEST: throughput=  0.47 GB/s doc_throughput=    10 docs/s instructions=   849559981 cycles=   275014108 branch_miss=  674746 cache_miss= 4831748 cache_ref=   7635376 items=   1000000 avg_time=  97679990 ns]
large_random<sajson>/manual_time                        88301115 ns     91707035 ns            8         577.754k           522.346M        8.22378M       12.1879M    324.743M              7.05982           11.3556       3.68767G             1087M                     23.631                     3.34724           11.3556M    577.657k   45.9988M       496.798M/s   8.24432M   12.1079M   325.708M          7.0808    11.3249/s 3.68861G/s        1087M                23.631                3.33733      1000k       11.3249M/s [BEST: throughput=  0.52 GB/s doc_throughput=    11 docs/s instructions=  1086995283 cycles=   324743277 branch_miss=  577754 cache_miss= 8223778 cache_ref=  12187902 items=   1000000 avg_time=  88301115 ns]
large_random<rapidjson>/manual_time                    212966953 ns    216394157 ns            3         586.895k           221.737M        7.02574M       10.8967M    707.041M              15.3709           4.82049       3.40828G          2.01014G                    43.6999                     2.84304           4.82049M    587.455k   45.9988M       205.984M/s   6.52014M    10.238M   708.554M         15.4038    4.69556/s 3.32706G/s     2.01015G               43.7001                2.83698      1000k       4.69556M/s [BEST: throughput=  0.22 GB/s doc_throughput=     4 docs/s instructions=  2010143639 cycles=   707040947 branch_miss=  586895 cache_miss= 7025737 cache_ref=  10896735 items=   1000000 avg_time= 212966952 ns]
large_random<rapidjson_lossless>/manual_time           246723394 ns    250153696 ns            3         581.575k            190.85M        7.02459M       10.9065M    830.893M              18.0634           4.14902       3.44739G          2.47511G                    53.8082                     2.97885           4.14902M    581.593k   45.9988M       177.802M/s   6.52093M   10.2447M   833.219M         18.1139    4.05312/s 3.37714G/s     2.47512G               53.8084                2.97055      1000k       4.05312M/s [BEST: throughput=  0.19 GB/s doc_throughput=     4 docs/s instructions=  2475110731 cycles=   830893378 branch_miss=  581575 cache_miss= 7024589 cache_ref=  10906533 items=   1000000 avg_time= 246723393 ns]
large_random<rapidjson_insitu>/manual_time             238169371 ns    241603719 ns            3         593.425k           197.684M        8.10767M       12.5085M    800.113M              17.3942            4.2976       3.43857G          1.72014G                    37.3954                     2.14988            4.2976M    587.785k   45.9988M       184.188M/s   7.62261M   11.8309M   801.788M         17.4306    4.19869/s 3.36646G/s     1.72015G               37.3956                 2.1454      1000k       4.19869M/s [BEST: throughput=  0.20 GB/s doc_throughput=     4 docs/s instructions=  1720143458 cycles=   800112845 branch_miss=  593425 cache_miss= 8107670 cache_ref=  12508540 items=   1000000 avg_time= 238169371 ns]
large_random<nlohmann_json>/manual_time               1280700628 ns   1284114127 ns            1         4.10484M           35.9169M        46.8345M       61.2923M    4.71184G              102.434          0.780823       3.67911G          12.7456G                    277.085                       2.705           780.823k    4.10484M   45.9988M        34.253M/s   46.8345M   61.2923M   4.71184G         102.434   0.780823/s 3.67911G/s     12.7456G               277.085                  2.705      1000k       780.823k/s [BEST: throughput=  0.04 GB/s doc_throughput=     0 docs/s instructions= 12745550008 cycles=  4711840356 branch_miss= 4104841 cache_miss=46834526 cache_ref=  61292317 items=   1000000 avg_time=1280700628 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                        93683665 ns    103994328 ns            7         1.11158M            1.4685G        15.8191M       22.4223M    344.905M              2.51196           10.6952       3.68883G          985.796M                    7.17961                     2.85817           5.60737M    1.11161M   137.305M       1.36497G/s   15.8084M    22.328M   345.387M         2.51547    10.6742/s 3.68673G/s     985.796M               7.17961                2.85418   524.288k       5.59637M/s [BEST: throughput=  1.47 GB/s doc_throughput=    10 docs/s instructions=   985795978 cycles=   344905037 branch_miss= 1111581 cache_miss=15819134 cache_ref=  22422267 items=    524288 avg_time=  93683665 ns]
kostya<simdjson_ondemand>/manual_time                   62682100 ns     72962669 ns           11         553.897k            2.1935G        10.0621M       13.9187M     230.93M              1.68188           15.9754        3.6892G          652.062M                      4.749                     2.82363           8.37572M     553.57k   137.305M       2.04006G/s   10.0895M   13.9301M   231.118M         1.68325    15.9535/s 3.68715G/s     652.062M                 4.749                2.82133   524.288k       8.36424M/s [BEST: throughput=  2.19 GB/s doc_throughput=    15 docs/s instructions=   652061659 cycles=   230929904 branch_miss=  553897 cache_miss=10062124 cache_ref=  13918655 items=    524288 avg_time=  62682099 ns]
kostya<yyjson>/manual_time                             173879968 ns    184223613 ns            4         419.363k           789.965M        11.1845M       16.2552M    445.157M              3.24211           5.75336       2.56115G          974.185M                    7.09504                      2.1884           3.01642M    419.576k   137.305M       753.073M/s   11.1867M   16.2777M   445.231M         3.24264    5.75109/s 2.56057G/s     974.185M               7.09504                2.18804   524.288k       3.01523M/s [BEST: throughput=  0.79 GB/s doc_throughput=     5 docs/s instructions=   974184691 cycles=   445157442 branch_miss=  419363 cache_miss=11184467 cache_ref=  16255223 items=    524288 avg_time= 173879967 ns]
kostya<yyjson_insitu>/manual_time                      119963476 ns    130329238 ns            6         421.276k           1.14538G        8.64944M         12.37M    348.524M              2.53832           8.34186       2.90733G          955.915M                    6.96198                     2.74276           4.37353M    420.679k   137.305M       1091.53M/s   8.64902M   12.3595M   348.593M         2.53882    8.33587/s 2.90583G/s     955.915M               6.96198                2.74221   524.288k        4.3704M/s [BEST: throughput=  1.15 GB/s doc_throughput=     8 docs/s instructions=   955914812 cycles=   348523564 branch_miss=  421276 cache_miss= 8649436 cache_ref=  12370028 items=    524288 avg_time= 119963476 ns]
kostya<sajson>/manual_time                             137095999 ns    147455760 ns            5         356.698k           1002.47M        12.2854M       17.1514M    505.288M              3.68004           7.30104       3.68913G          1.51716G                    11.0496                     3.00257           3.82785M    356.461k   137.305M       955.128M/s   12.2976M    17.181M   505.691M         3.68297    7.29416/s 3.68859G/s     1.51716G               11.0496                3.00018   524.288k       3.82424M/s [BEST: throughput=  1.00 GB/s doc_throughput=     7 docs/s instructions=  1517163295 cycles=   505288324 branch_miss=  356698 cache_miss=12285357 cache_ref=  17151378 items=    524288 avg_time= 137095999 ns]
kostya<rapidjson>/manual_time                          278433681 ns    288805132 ns            3         981.086k           499.035M        8.29057M       12.2884M    933.857M              6.80133            3.6345        3.3941G          2.73767G                    19.9386                     2.93158           1.90552M    978.165k   137.305M       470.289M/s   7.98746M    11.903M   936.559M         6.82101    3.59152/s 3.36367G/s     2.73768G               19.9386                2.92312   524.288k       1.88299M/s [BEST: throughput=  0.50 GB/s doc_throughput=     3 docs/s instructions=  2737673253 cycles=   933856747 branch_miss=  981086 cache_miss= 8290574 cache_ref=  12288391 items=    524288 avg_time= 278433681 ns]
kostya<rapidjson_lossless>/manual_time                 303803921 ns    314181591 ns            2         963.388k           455.603M        8.28782M       12.3229M    1030.28M              7.50361           3.31818       3.41867G          3.00662G                    21.8974                     2.91825           1.73968M    963.696k   137.305M       431.016M/s   8.06114M   12.0027M   1032.12M         7.51696     3.2916/s 3.39731G/s     3.00663G               21.8974                2.91307   524.288k       1.72574M/s [BEST: throughput=  0.46 GB/s doc_throughput=     3 docs/s instructions=  3006623686 cycles=  1030283331 branch_miss=  963388 cache_miss= 8287820 cache_ref=  12322887 items=    524288 avg_time= 303803921 ns]
kostya<rapidjson_insitu>/manual_time                   275743041 ns    286058452 ns            3         960.786k           503.566M        11.9376M       16.0385M    924.723M              6.73481            3.6675       3.39142G          2.21152G                    16.1067                     2.39155           1.92283M    961.201k   137.305M       474.878M/s   11.6422M   15.6973M   926.421M         6.74718    3.62656/s 3.35973G/s     2.21153G               16.1067                2.38717   524.288k       1.90136M/s [BEST: throughput=  0.50 GB/s doc_throughput=     3 docs/s instructions=  2211524948 cycles=   924723415 branch_miss=  960786 cache_miss=11937587 cache_ref=  16038482 items=    524288 avg_time= 275743041 ns]
kostya<nlohmann_json>/manual_time                     1937053907 ns   1947278503 ns            1         13.7647M           70.8834M        69.5087M       87.5694M    7.14554G              52.0414          0.516248       3.68887G          17.7606G                    129.351                     2.48555           270.663k    13.7647M   137.305M       67.5997M/s   69.5087M   87.5694M   7.14554G         52.0414   0.516248/s 3.68887G/s     17.7606G               129.351                2.48555   524.288k       270.663k/s [BEST: throughput=  0.07 GB/s doc_throughput=     0 docs/s instructions= 17760585384 cycles=  7145537858 branch_miss=13764729 cache_miss=69508705 cache_ref=  87569405 items=    524288 avg_time=1937053907 ns]
distinct_user_id<simdjson_dom>/manual_time                273200 ns       303768 ns         2562           3.683k           2.32374G               0        94.537k    1003.43k              1.58893          3.67962k       3.69226G          2.92855M                    4.63734                     2.91852           423.157k    3.80714k   631.515k        2.1528G/s   0.546448   94.5928k   1008.24k         1.59654   3.66032k/s 3.69049G/s     2.92855M               4.63734                2.90461        115       420.937k/s [BEST: throughput=  2.32 GB/s doc_throughput=  3679 docs/s instructions=     2928548 cycles=     1003435 branch_miss=    3683 cache_miss=       0 cache_ref=     94537 items=       115 avg_time=    273199 ns]
distinct_user_id<simdjson_ondemand>/manual_time           162480 ns       192193 ns         4310           2.125k           3.92838G               0        56.555k    593.698k             0.940117          6.22057k       3.69314G          1.89587M                    3.00209                     3.19332           715.365k    2.31509k   631.515k       3.61979G/s  0.0812065   56.7267k   599.628k        0.949507    6.1546k/s 3.69047G/s     1.89587M               3.00209                3.16174        115       707.779k/s [BEST: throughput=  3.93 GB/s doc_throughput=  6220 docs/s instructions=     1895867 cycles=      593698 branch_miss=    2125 cache_miss=       0 cache_ref=     56555 items=       115 avg_time=    162480 ns]
distinct_user_id<yyjson>/manual_time                      545963 ns       579561 ns         1000           6.808k           1.94592G          15.25k        76.573k    1.19841M              1.89768          3.08135k       3.69273G           2.8779M                    4.55714                     2.40142           354.355k    7.29731k   631.515k       1103.11M/s   7.42771k   58.0925k   1.42093M         2.25003   1.83163k/s 2.60261G/s      2.8781M               4.55745                2.02551        115       210.637k/s [BEST: throughput=  1.95 GB/s doc_throughput=  3081 docs/s instructions=     2877901 cycles=     1198414 branch_miss=    6808 cache_miss=   15250 cache_ref=     76573 items=       115 avg_time=    545962 ns]
distinct_user_id<yyjson_insitu>/manual_time               417843 ns       450452 ns         1677           6.901k           2.10241G             281        46.869k    1.10563M              1.75076          3.32915k       3.68081G          2.87739M                    4.55632                     2.60248           382.852k    7.34971k   631.515k       1.40757G/s    55.0244   32.3527k   1.20809M         1.91301   2.39324k/s 2.89126G/s     2.87765M               4.55674                2.38198        115       275.223k/s [BEST: throughput=  2.10 GB/s doc_throughput=  3329 docs/s instructions=     2877385 cycles=     1105631 branch_miss=    6901 cache_miss=     281 cache_ref=     46869 items=       115 avg_time=    417843 ns]
distinct_user_id<sajson>/manual_time                      593448 ns       624260 ns         1177          10.507k           1075.33M               0        47.898k    2.16819M              3.43332          1.70279k       3.69196G          5.81547M                    9.20876                     2.68218            195.82k    10.8144k   631.515k       1014.85M/s   0.833475   48.0168k   2.18973M         3.46742   1.68507k/s 3.68984G/s     5.81547M               9.20876                2.65579        115       193.783k/s [BEST: throughput=  1.08 GB/s doc_throughput=  1702 docs/s instructions=     5815469 cycles=     2168191 branch_miss=   10507 cache_miss=       0 cache_ref=     47898 items=       115 avg_time=    593447 ns]
distinct_user_id<rapidjson>/manual_time                  2334988 ns      2365304 ns          301          29.702k           293.416M          9.376k        56.016k    7.93155M              12.5596           464.622       3.68517G          21.8236M                    34.5576                      2.7515           53.4315k    29.8403k   631.515k       257.928M/s    1.2631k   35.9927k   8.06109M         12.7647    428.268/s  3.4523G/s     21.8243M               34.5586                2.70736        115       49.2508k/s [BEST: throughput=  0.29 GB/s doc_throughput=   464 docs/s instructions=    21823635 cycles=     7931551 branch_miss=   29702 cache_miss=    9376 cache_ref=     56016 items=       115 avg_time=   2334988 ns]
distinct_user_id<rapidjson_insitu>/manual_time           1551869 ns      1582517 ns          437          24.901k           441.917M              53        45.437k    5.27538M              8.35352           699.773       3.69157G           13.254M                    20.9876                     2.51243           80.4739k    30.9939k   631.515k       388.087M/s   2.92046k   38.3592k   5.46167M         8.64852    644.384/s 3.51941G/s     13.2543M               20.9881                2.42678        115       74.1042k/s [BEST: throughput=  0.44 GB/s doc_throughput=   699 docs/s instructions=    13254002 cycles=     5275375 branch_miss=   24901 cache_miss=      53 cache_ref=     45437 items=       115 avg_time=   1551869 ns]
distinct_user_id<nlohmann_json>/manual_time              8039211 ns      8071768 ns           90         127.152k           82.0047M          2.306k       221.602k    28.4026M              44.9754           129.854        3.6882G          75.7566M                     119.96                     2.66724           14.9332k    141.403k   631.515k       74.9153M/s    95.4556   483.552k   29.6481M         46.9476     124.39/s 3.68794G/s     74.3352M               117.709                2.50725        115       14.3049k/s [BEST: throughput=  0.08 GB/s doc_throughput=   129 docs/s instructions=    75756561 cycles=    28402642 branch_miss=  127152 cache_miss=    2306 cache_ref=    221602 items=       115 avg_time=   8039210 ns]
find_tweet<simdjson_dom>/manual_time                      263785 ns       293075 ns         2678           3.412k           2.40901G               0        84.177k    968.041k              1.53289          3.81465k       3.69274G          2.84337M                    4.50246                     2.93725           3.81465k    3.55605k   631.515k       2.22964G/s    2.87789   84.2985k   973.408k         1.54139   3.79097k/s 3.69016G/s     2.84337M               4.50246                2.92105          1       3.79097k/s [BEST: throughput=  2.41 GB/s doc_throughput=  3814 docs/s instructions=     2843374 cycles=      968041 branch_miss=    3412 cache_miss=       0 cache_ref=     84177 items=         1 avg_time=    263784 ns]
find_tweet<simdjson_ondemand>/manual_time                 117572 ns       146152 ns         5951           1.145k           5.39844G               0        32.906k     432.23k             0.684433           8.5484k       3.69487G          1.38727M                    2.19673                     3.20955            8.5484k    1.19839k   631.515k       5.00241G/s  0.0317594   32.9299k   434.057k        0.687326   8.50542k/s 3.69183G/s     1.38727M               2.19673                3.19605          1       8.50542k/s [BEST: throughput=  5.40 GB/s doc_throughput=  8548 docs/s instructions=     1387265 cycles=      432230 branch_miss=    1145 cache_miss=       0 cache_ref=     32906 items=         1 avg_time=    117572 ns]
find_tweet<yyjson>/manual_time                            609281 ns       640598 ns         1382           9.342k           1.89783G             299        69.115k    1.22878M              1.94576           3.0052k       3.69272G          2.81716M                    4.46095                     2.29265            3.0052k     7.2264k   631.515k       988.477M/s    1070.64   41.8476k   1.44454M         2.28742   1.64128k/s 2.37089G/s     2.81763M                4.4617                1.95054          1       1.64128k/s [BEST: throughput=  1.90 GB/s doc_throughput=  3005 docs/s instructions=     2817155 cycles=     1228777 branch_miss=    9342 cache_miss=     299 cache_ref=     69115 items=         1 avg_time=    609280 ns]
find_tweet<yyjson_insitu>/manual_time                     406941 ns       437213 ns         1721           6.519k           2.18378G             657        38.162k    1064.45k              1.68555          3.45801k       3.68088G          2.81683M                    4.46043                     2.64628           3.45801k    7.05585k   631.515k       1.44528G/s     19.129   23.5272k   1.16784M         1.84927   2.45736k/s 2.86981G/s     2.81709M               4.46085                2.41222          1       2.45736k/s [BEST: throughput=  2.18 GB/s doc_throughput=  3458 docs/s instructions=     2816831 cycles=     1064451 branch_miss=    6519 cache_miss=     657 cache_ref=     38162 items=         1 avg_time=    406940 ns]
find_tweet<sajson>/manual_time                            581416 ns       611408 ns         1204          10.329k           1098.59M               0        38.374k    2.12227M              3.36059          1.73961k       3.69192G          5.72035M                    9.05813                      2.6954           1.73961k    10.6833k   631.515k       1035.85M/s    1.69934   38.3906k   2.14503M         3.39664   1.71994k/s 3.68932G/s     5.72035M               9.05814                2.66679          1       1.71994k/s [BEST: throughput=  1.10 GB/s doc_throughput=  1739 docs/s instructions=     5720348 cycles=     2122266 branch_miss=   10329 cache_miss=       0 cache_ref=     38374 items=         1 avg_time=    581415 ns]
find_tweet<rapidjson>/manual_time                        2323632 ns      2352315 ns          303          29.591k           295.503M          9.359k        48.279k    7.88912M              12.4924           467.926       3.69153G          21.7396M                    34.4245                     2.75564            467.926    29.6815k   631.515k       259.189M/s    996.439   28.2851k   8.02093M         12.7011    430.361/s 3.45189G/s     21.7403M               34.4256                2.71045          1        430.361/s [BEST: throughput=  0.30 GB/s doc_throughput=   467 docs/s instructions=    21739579 cycles=     7889125 branch_miss=   29591 cache_miss=    9359 cache_ref=     48279 items=         1 avg_time=   2323632 ns]
find_tweet<rapidjson_insitu>/manual_time                 1545554 ns      1575544 ns          446          25.142k           444.418M              48        36.276k    5.24569M              8.30651           703.733       3.69156G          13.1752M                    20.8629                     2.51163            703.733    31.4209k   631.515k       389.672M/s   2.67165k   28.9896k   5.43771M         8.61058    647.017/s 3.51829G/s     13.1755M               20.8634                2.42299          1        647.017/s [BEST: throughput=  0.44 GB/s doc_throughput=   703 docs/s instructions=    13175244 cycles=     5245686 branch_miss=   25142 cache_miss=      48 cache_ref=     36276 items=         1 avg_time=   1545553 ns]
find_tweet<nlohmann_json>/manual_time                    6936669 ns      6967030 ns          105         101.552k           95.1939M          2.057k       168.573k     24.478M              38.7607           150.739       3.68978G          65.8721M                    104.308                     2.69108            150.739    115.793k   631.515k       86.8226M/s    110.219   386.378k   25.5889M         40.5199    144.161/s 3.68894G/s     64.4657M               102.081                2.51928          1        144.161/s [BEST: throughput=  0.10 GB/s doc_throughput=   150 docs/s instructions=    65872118 cycles=    24477968 branch_miss=  101552 cache_miss=    2057 cache_ref=    168573 items=         1 avg_time=   6936669 ns]
top_tweet<simdjson_dom>/manual_time                       267504 ns       296278 ns         2616           3.511k           2.37388G               0        92.218k    982.321k               1.5555          3.75902k       3.69256G          2.88026M                    4.56088                      2.9321           3.75902k    3.63187k   631.515k       2.19863G/s    5.80887   92.1786k   987.127k         1.56311   3.73826k/s 3.69013G/s     2.88026M               4.56088                2.91782          1       3.73826k/s [BEST: throughput=  2.37 GB/s doc_throughput=  3759 docs/s instructions=     2880261 cycles=      982321 branch_miss=    3511 cache_miss=       0 cache_ref=     92218 items=         1 avg_time=    267504 ns]
top_tweet<simdjson_ondemand>/manual_time                  178087 ns       206524 ns         3932           1.612k           3.57032G               0          57.4k     653.24k               1.0344          5.65358k       3.69315G          1.91005M                    3.02456                     2.92397           5.65358k    1.73374k   631.515k       3.30257G/s   0.309257   57.2748k   657.012k         1.04037   5.61524k/s 3.68928G/s     1.91005M               3.02456                2.90718          1       5.61524k/s [BEST: throughput=  3.57 GB/s doc_throughput=  5653 docs/s instructions=     1910054 cycles=      653240 branch_miss=    1612 cache_miss=       0 cache_ref=     57400 items=         1 avg_time=    178086 ns]
top_tweet<simdjson_ondemand_forward_only>/manual_time     172002 ns       200521 ns         4071           1.846k           3.70973G               0        57.771k    628.677k             0.995506          5.87434k       3.69306G          1.92496M                    3.04817                     3.06193           5.87434k    1.98611k   631.515k        3.4194G/s  0.0638664    57.878k   634.822k         1.00524   5.81389k/s 3.69078G/s     1.92497M               3.04817                3.03229          1       5.81389k/s [BEST: throughput=  3.71 GB/s doc_throughput=  5874 docs/s instructions=     1924965 cycles=      628677 branch_miss=    1846 cache_miss=       0 cache_ref=     57771 items=         1 avg_time=    172002 ns]
top_tweet<yyjson>/manual_time                             614466 ns       645105 ns         1147           9.565k           1.85835G             226        73.611k    1.25502M              1.98732          2.94268k       3.69313G          2.84443M                    4.50414                     2.26644           2.94268k    7.33984k   631.515k       980.135M/s    1030.16   46.9509k   1.46385M         2.31799   1.62743k/s 2.38231G/s     2.84491M               4.50489                1.94345          1       1.62743k/s [BEST: throughput=  1.86 GB/s doc_throughput=  2942 docs/s instructions=     2844430 cycles=     1255021 branch_miss=    9565 cache_miss=     226 cache_ref=     73611 items=         1 avg_time=    614466 ns]
top_tweet<yyjson_insitu>/manual_time                      412210 ns       441820 ns         1696           6.797k           2.12981G             336         42.96k    1091.52k              1.72841          3.37254k        3.6812G          2.84411M                    4.50362                     2.60564           3.37254k    7.16097k   631.515k       1.42681G/s    51.7494   28.7248k   1.18851M           1.882   2.42595k/s 2.88327G/s     2.84437M               4.50404                2.39322          1       2.42595k/s [BEST: throughput=  2.13 GB/s doc_throughput=  3372 docs/s instructions=     2844106 cycles=     1091519 branch_miss=    6797 cache_miss=     336 cache_ref=     42960 items=         1 avg_time=    412210 ns]
top_tweet<sajson>/manual_time                             586343 ns       615352 ns         1193          10.311k           1089.73M               0        43.769k    2.13948M              3.38786          1.72557k       3.69184G          5.75034M                    9.10563                     2.68772           1.72557k    10.8391k   631.515k       1027.15M/s   0.651299   43.5705k   2.16334M         3.42563   1.70549k/s 3.68955G/s     5.75034M               9.10563                2.65808          1       1.70549k/s [BEST: throughput=  1.09 GB/s doc_throughput=  1725 docs/s instructions=     5750340 cycles=     2139484 branch_miss=   10311 cache_miss=       0 cache_ref=     43769 items=         1 avg_time=    586343 ns]
top_tweet<rapidjson>/manual_time                         2334298 ns      2363750 ns          301          29.432k           294.866M            8.7k         52.06k    7.90612M              12.5193           466.918       3.69151G          21.7979M                    34.5168                     2.75709            466.918    29.8074k   631.515k       258.005M/s    1.1664k   32.8206k   8.05132M         12.7492    428.394/s 3.44914G/s     21.7986M               34.5179                2.70745          1        428.394/s [BEST: throughput=  0.29 GB/s doc_throughput=   466 docs/s instructions=    21797856 cycles=     7906120 branch_miss=   29432 cache_miss=    8700 cache_ref=     52060 items=         1 avg_time=   2334297 ns]
top_tweet<rapidjson_insitu>/manual_time                  1564433 ns      1593892 ns          437          25.356k           438.477M              24         41.73k    5.31679M               8.4191           694.325       3.69158G          13.2291M                    20.9482                     2.48818            694.325    31.4028k   631.515k        384.97M/s    2.9362k   34.5949k   5.50335M         8.71453    639.209/s 3.51779G/s     13.2296M                20.949                2.40392          1        639.209/s [BEST: throughput=  0.44 GB/s doc_throughput=   694 docs/s instructions=    13229131 cycles=     5316791 branch_miss=   25356 cache_miss=      24 cache_ref=     41730 items=         1 avg_time=   1564433 ns]
top_tweet<nlohmann_json>/manual_time                     9326769 ns      9355351 ns           75         188.543k            67.888M              34       400.095k    34.3237M              54.3514             107.5       3.68981G          87.6128M                    138.734                     2.55254              107.5    190.052k   631.515k       64.5732M/s    222.227   408.179k   34.3985M         54.4698    107.218/s 3.68815G/s     87.5989M               138.712                2.54659          1        107.218/s [BEST: throughput=  0.07 GB/s doc_throughput=   107 docs/s instructions=    87612811 cycles=    34323726 branch_miss=  188543 cache_miss=      34 cache_ref=    400095 items=         1 avg_time=   9326768 ns]
