run_benchmark: v0.8.0 /home/jkeiser/simdjson_benchmark_results/v0.8.0/skylake-clang11-native.json -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native
git reset --hard v0.8.0
HEAD is now at c96ff018 Version 0.8.
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The CXX compiler identification is Clang 11.0.0
-- The C compiler identification is Clang 11.0.0
-- Check for working CXX compiler: /usr/bin/clang++-11
-- Check for working CXX compiler: /usr/bin/clang++-11 -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Check for working C compiler: /usr/bin/clang-11
-- Check for working C compiler: /usr/bin/clang-11 -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed
-- Check if compiler accepts -pthread
-- Check if compiler accepts -pthread - yes
-- Found Threads: TRUE  
-- Looking for fork
-- Looking for fork - found
-- Looking for wait
-- Looking for wait - found
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- Found Git: /usr/bin/git (found version "2.27.0") 
-- git Version: v0.2.1-c96ff018
-- Version: 0.2.1
-- Performing Test HAVE_CXX_FLAG_STD_CXX11
-- Performing Test HAVE_CXX_FLAG_STD_CXX11 - Success
-- Performing Test HAVE_CXX_FLAG_WALL
-- Performing Test HAVE_CXX_FLAG_WALL - Success
-- Performing Test HAVE_CXX_FLAG_WEXTRA
-- Performing Test HAVE_CXX_FLAG_WEXTRA - Success
-- Performing Test HAVE_CXX_FLAG_WSHADOW
-- Performing Test HAVE_CXX_FLAG_WSHADOW - Success
-- Performing Test HAVE_CXX_FLAG_WERROR
-- Performing Test HAVE_CXX_FLAG_WERROR - Success
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32 - Success
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED - Success
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WD654
-- Performing Test HAVE_CXX_FLAG_WD654 - Failed
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY - Success
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES -- failed to compile
-- Performing Test HAVE_CXX_FLAG_COVERAGE
-- Performing Test HAVE_CXX_FLAG_COVERAGE - Success
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Performing Test USE_BOOST_JSON
-- Performing Test USE_BOOST_JSON - Failed
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Found Python3: /usr/bin/python3.8 (found version "3.8.6") found components: Interpreter 
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 10
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
Scanning dependencies of target benchmark
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_api_internal.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_name.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_name.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_register.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_register.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_runner.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_runner.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/colorprint.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/colorprint.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/commandlineflags.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/commandlineflags.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/complexity.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/complexity.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/console_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/console_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/counter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/counter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/csv_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/csv_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/json_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/json_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/sleep.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sleep.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/statistics.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/statistics.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/string_util.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/string_util.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/sysinfo.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sysinfo.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/timers.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/timers.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -P CMakeFiles/benchmark.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/benchmark.dir/link.txt --verbose=1
/usr/bin/ar qc libbenchmark.a  CMakeFiles/benchmark.dir/benchmark.cc.o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o CMakeFiles/benchmark.dir/benchmark_name.cc.o CMakeFiles/benchmark.dir/benchmark_register.cc.o CMakeFiles/benchmark.dir/benchmark_runner.cc.o CMakeFiles/benchmark.dir/colorprint.cc.o CMakeFiles/benchmark.dir/commandlineflags.cc.o CMakeFiles/benchmark.dir/complexity.cc.o CMakeFiles/benchmark.dir/console_reporter.cc.o CMakeFiles/benchmark.dir/counter.cc.o CMakeFiles/benchmark.dir/csv_reporter.cc.o CMakeFiles/benchmark.dir/json_reporter.cc.o CMakeFiles/benchmark.dir/reporter.cc.o CMakeFiles/benchmark.dir/sleep.cc.o CMakeFiles/benchmark.dir/statistics.cc.o CMakeFiles/benchmark.dir/string_util.cc.o CMakeFiles/benchmark.dir/sysinfo.cc.o CMakeFiles/benchmark.dir/timers.cc.o
/usr/bin/ranlib libbenchmark.a
[ 80%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
Scanning dependencies of target generated-data
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated && /usr/bin/ruby genfeaturejson.rb /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-miss.json ...
[ 80%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/clang++-11  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/include  -march=native -O3 -DNDEBUG -fPIC   -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -pthread -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/clang++-11 -fPIC -march=native -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.7 -o ../libsimdjson.so.7.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.7.0.0 ../libsimdjson.so.7 ../libsimdjson.so
[ 80%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
Scanning dependencies of target yyjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/clang-11  -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src  -O3 -DNDEBUG   -o CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o   -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src/yyjson.c
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -P CMakeFiles/yyjson.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -E cmake_link_script CMakeFiles/yyjson.dir/link.txt --verbose=1
/usr/bin/ar qc libyyjson.a  CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o
/usr/bin/ranlib libyyjson.a
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/clang++-11  -DRAPIDJSON_HAS_STDSTRING -DSAJSON_UNSORTED_OBJECT_KEYS -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_COMPETITION_NLOHMANN_JSON -DSIMDJSON_COMPETITION_RAPIDJSON -DSIMDJSON_COMPETITION_SAJSON -DSIMDJSON_COMPETITION_YYJSON -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/rapidjson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/sajson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/json  -march=native -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/clang++-11  -march=native -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.7.0.0 ../_deps/google_benchmarks/src/libbenchmark.a ../dependencies/libyyjson.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.8.0/skylake-clang11-native.json --benchmark_out_format=json
2021-01-25 02:50:04
Running benchmark/bench_ondemand
Run on (4 X 4000 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 256 KiB (x4)
  L3 Unified 8192 KiB (x1)
Load Average: 1.00, 0.96, 0.75
simdjson::dom implementation:      haswell
simdjson::ondemand implementation: haswell

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                  272427 ns       301191 ns         2513           3.594k           2.33001G               0        93.663k    1000.88k              1.58488          3.68956k       3.69279G          2.99337M                    4.73999                     2.99075           368.956k     3.7084k   631.515k        2.1589G/s    2.18743   93.5301k   1005.44k         1.59211    3.6707k/s 3.69068G/s     2.99337M               4.73999                2.97717        100        367.07k/s [BEST: throughput=  2.33 GB/s doc_throughput=  3689 docs/s instructions=     2993372 cycles=     1000876 branch_miss=    3594 cache_miss=       0 cache_ref=     93663 items=       100 avg_time=    272427 ns]
partial_tweets<simdjson_ondemand>/manual_time             174565 ns       203091 ns         4003           1.732k           3.64523G               0        59.178k     639.85k               1.0132          5.77221k       3.69335G          1.94668M                    3.08256                      3.0424           577.221k    1.86828k   631.515k       3.36919G/s  0.0632026    59.221k   644.373k         1.02036   5.72851k/s  3.6913G/s     1.94668M               3.08256                3.02105        100       572.851k/s [BEST: throughput=  3.65 GB/s doc_throughput=  5772 docs/s instructions=     1946680 cycles=      639850 branch_miss=    1732 cache_miss=       0 cache_ref=     59178 items=       100 avg_time=    174565 ns]
partial_tweets<yyjson>/manual_time                        636369 ns       667198 ns         1099           9.546k           1.82137G             206        79.085k    1.28041M              2.02751          2.88412k       3.69285G           2.9196M                    4.62317                     2.28022           288.412k    7.44209k   631.515k         946.4M/s    993.953   51.6458k   1.49805M         2.37215   1.57142k/s 2.35406G/s     2.92009M               4.62394                1.94926        100       157.142k/s [BEST: throughput=  1.82 GB/s doc_throughput=  2884 docs/s instructions=     2919603 cycles=     1280406 branch_miss=    9546 cache_miss=     206 cache_ref=     79085 items=       100 avg_time=    636368 ns]
partial_tweets<yyjson_insitu>/manual_time                 424888 ns       454300 ns         1647           6.777k           2.06598G             804         48.38k     1.1219M              1.77653          3.27147k       3.67028G          2.91929M                    4.62268                     2.60208           327.147k    7.20969k   631.515k       1.38423G/s    140.138   33.7353k    1.2225M         1.93582   2.35356k/s 2.87723G/s     2.91955M               4.62309                2.38818        100       235.356k/s [BEST: throughput=  2.07 GB/s doc_throughput=  3271 docs/s instructions=     2919289 cycles=     1121905 branch_miss=    6777 cache_miss=     804 cache_ref=     48380 items=       100 avg_time=    424888 ns]
partial_tweets<sajson>/manual_time                        597147 ns       625967 ns         1166          10.402k           1070.57M               0        48.562k    2.17789M              3.44868          1.69524k       3.69205G          5.87691M                    9.30604                     2.69844           169.524k    10.7786k   631.515k       1008.56M/s    1.80189   48.4875k   2.20352M         3.48926   1.67463k/s 3.69007G/s     5.87691M               9.30604                2.66706        100       167.463k/s [BEST: throughput=  1.07 GB/s doc_throughput=  1695 docs/s instructions=     5876906 cycles=     2177890 branch_miss=   10402 cache_miss=       0 cache_ref=     48562 items=       100 avg_time=    597147 ns]
partial_tweets<rapidjson>/manual_time                    2382308 ns      2411770 ns          295          31.573k           289.037M         10.216k        55.865k    8.05255M              12.7512           457.689       3.68556G          21.8947M                    34.6701                     2.71897           45.7689k    32.1285k   631.515k       252.805M/s    630.386   34.5749k   8.20079M         12.9859    419.761/s 3.44237G/s     21.8954M               34.6712                2.66991        100       41.9761k/s [BEST: throughput=  0.29 GB/s doc_throughput=   457 docs/s instructions=    21894675 cycles=     8052552 branch_miss=   31573 cache_miss=   10216 cache_ref=     55865 items=       100 avg_time=   2382308 ns]
partial_tweets<rapidjson_insitu>/manual_time             1542806 ns      1571849 ns          454          24.897k           440.881M              56        45.783k    5.28787M               8.3733           698.132       3.69163G          13.3204M                    21.0928                     2.51906           69.8132k     24.868k   631.515k       390.366M/s    278.368   35.4337k   5.34624M         8.46574     648.17/s 3.46527G/s     13.3208M               21.0935                2.49163        100        64.817k/s [BEST: throughput=  0.44 GB/s doc_throughput=   698 docs/s instructions=    13320434 cycles=     5287867 branch_miss=   24897 cache_miss=      56 cache_ref=     45783 items=       100 avg_time=   1542805 ns]
partial_tweets<nlohmann_json>/manual_time                8945500 ns      8980637 ns           79         150.365k           73.1826M              17       230.777k    31.8375M              50.4145           115.884       3.68946G          80.2681M                    127.104                     2.52118           11.5884k     170.05k   631.515k       67.3254M/s    316.494   367.175k   33.0038M         52.2613    111.788/s 3.68943G/s     80.7265M                127.83                2.44598        100       11.1788k/s [BEST: throughput=  0.07 GB/s doc_throughput=   115 docs/s instructions=    80268125 cycles=    31837500 branch_miss=  150365 cache_miss=      17 cache_ref=    230777 items=       100 avg_time=   8945499 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                  87676123 ns     91081566 ns            8         912.091k           525.803M        11.0803M       15.6272M    322.715M              7.01573           11.4308       3.68889G          1035.69M                    22.5155                     3.20929           11.4308M    918.266k   45.9988M        500.34M/s   11.1341M   15.6322M   323.404M         7.03072    11.4056/s 3.68863G/s     1035.69M               22.5155                3.20245      1000k       11.4056M/s [BEST: throughput=  0.53 GB/s doc_throughput=    11 docs/s instructions=  1035686042 cycles=   322714945 branch_miss=  912091 cache_miss=11080301 cache_ref=  15627238 items=   1000000 avg_time=  87676123 ns]
large_random<simdjson_ondemand>/manual_time             65704353 ns     69098409 ns           11         915.022k           701.418M        5.73909M       8.09692M    241.927M              5.25942           15.2486       3.68905G          670.142M                    14.5687                     2.77002           15.2486M    922.853k   45.9988M       667.655M/s   5.77087M   8.09819M   242.377M          5.2692    15.2197/s  3.6889G/s     670.142M               14.5687                2.76488      1000k       15.2197M/s [BEST: throughput=  0.70 GB/s doc_throughput=    15 docs/s instructions=   670141948 cycles=   241926755 branch_miss=  915022 cache_miss= 5739093 cache_ref=   8096916 items=   1000000 avg_time=  65704353 ns]
large_random<simdjson_ondemand_unordered>/manual_time   66436029 ns     69816144 ns           11         896.479k            692.66M        5.71633M       8.09601M    244.988M              5.32597           15.0582       3.68909G          674.142M                    14.6556                     2.75173           15.0582M    896.342k   45.9988M       660.302M/s   5.75734M   8.09762M   245.073M         5.32782    15.0521/s 3.68886G/s     674.142M               14.6556                2.75078      1000k       15.0521M/s [BEST: throughput=  0.69 GB/s doc_throughput=    15 docs/s instructions=   674141947 cycles=   244988036 branch_miss=  896479 cache_miss= 5716331 cache_ref=   8096008 items=   1000000 avg_time=  66436028 ns]
large_random<yyjson>/manual_time                       116097399 ns    119531118 ns            6         678.268k           396.424M        5.93059M       9.20387M    307.977M              6.69534           8.61815       2.65419G          855.681M                    18.6023                     2.77839           8.61815M      676.2k   45.9988M       377.854M/s   5.93831M   9.20486M   308.118M          6.6984    8.61346/s 2.65396G/s     855.681M               18.6023                2.77712      1000k       8.61346M/s [BEST: throughput=  0.40 GB/s doc_throughput=     8 docs/s instructions=   855680949 cycles=   307977236 branch_miss=  678268 cache_miss= 5930590 cache_ref=   9203866 items=   1000000 avg_time= 116097398 ns]
large_random<yyjson_insitu>/manual_time                 97765457 ns    101187561 ns            7          677.66k           470.696M        5.05041M       7.85863M    275.246M              5.98376           10.2328       2.81653G           849.56M                    18.4692                     3.08655           10.2328M    676.366k   45.9988M       448.705M/s   5.04522M   7.86226M   275.279M         5.98449    10.2286/s 2.81571G/s      849.56M               18.4692                3.08617      1000k       10.2286M/s [BEST: throughput=  0.47 GB/s doc_throughput=    10 docs/s instructions=   849560181 cycles=   275245743 branch_miss=  677660 cache_miss= 5050408 cache_ref=   7858626 items=   1000000 avg_time=  97765457 ns]
large_random<sajson>/manual_time                        88335935 ns     91746254 ns            8         577.386k           522.008M         8.3993M       12.3772M    325.065M              7.06681           11.3483       3.68893G             1087M                     23.631                     3.34394           11.3483M    577.358k   45.9988M       496.603M/s   8.44784M   12.3674M   325.873M         7.08439    11.3204/s 3.68902G/s        1087M                23.631                3.33564      1000k       11.3204M/s [BEST: throughput=  0.52 GB/s doc_throughput=    11 docs/s instructions=  1086995282 cycles=   325064645 branch_miss=  577386 cache_miss= 8399304 cache_ref=  12377230 items=   1000000 avg_time=  88335934 ns]
large_random<rapidjson>/manual_time                    214567114 ns    217993225 ns            3         602.442k           220.058M         7.1478M       10.9842M    712.732M              15.4946           4.78399       3.40971G          2.01014G                    43.6999                     2.82034           4.78399M    597.338k   45.9988M       204.448M/s   6.62793M   10.3128M   714.535M         15.5338    4.66055/s 3.33012G/s     2.01015G               43.7001                2.81323      1000k       4.66055M/s [BEST: throughput=  0.22 GB/s doc_throughput=     4 docs/s instructions=  2010143854 cycles=   712732108 branch_miss=  602442 cache_miss= 7147801 cache_ref=  10984182 items=   1000000 avg_time= 214567114 ns]
large_random<rapidjson_lossless>/manual_time           259685910 ns    263111306 ns            3         592.678k           181.015M        7.17215M       11.0275M    879.333M              19.1164           3.93522       3.46037G          2.47511G                    53.8082                     2.81476           3.93522M    587.752k   45.9988M       168.927M/s   6.65519M   10.3534M    881.33M         19.1599    3.85081/s 3.39383G/s     2.47512G               53.8084                2.80839      1000k       3.85081M/s [BEST: throughput=  0.18 GB/s doc_throughput=     3 docs/s instructions=  2475111297 cycles=   879332879 branch_miss=  592678 cache_miss= 7172148 cache_ref=  11027548 items=   1000000 avg_time= 259685910 ns]
large_random<rapidjson_insitu>/manual_time             238175000 ns    241595763 ns            3         587.254k           197.675M        8.26327M        12.641M    800.313M              17.3986            4.2974       3.43927G          1.72014G                    37.3954                     2.14934            4.2974M    587.097k   45.9988M       184.183M/s   7.77212M   11.9692M   801.961M         17.4344    4.19859/s 3.36711G/s     1.72015G               37.3956                2.14493      1000k       4.19859M/s [BEST: throughput=  0.20 GB/s doc_throughput=     4 docs/s instructions=  1720144015 cycles=   800313439 branch_miss=  587254 cache_miss= 8263268 cache_ref=  12640950 items=   1000000 avg_time= 238175000 ns]
large_random<nlohmann_json>/manual_time               1282263814 ns   1285704550 ns            1         4.10661M           35.8731M        48.2967M       62.7244M    4.71799G              102.568          0.779871       3.67943G          12.7456G                    277.085                     2.70148           779.871k    4.10661M   45.9988M       34.2113M/s   48.2967M   62.7244M   4.71799G         102.568   0.779871/s 3.67943G/s     12.7456G               277.085                2.70148      1000k       779.871k/s [BEST: throughput=  0.04 GB/s doc_throughput=     0 docs/s instructions= 12745552170 cycles=  4717994349 branch_miss= 4106614 cache_miss=48296736 cache_ref=  62724448 items=   1000000 avg_time=1282263814 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                        93933928 ns    104351647 ns            7         1.11193M           1.46511G        16.2088M       22.9127M    345.728M              2.51796           10.6705       3.68908G          985.796M                    7.17961                     2.85136           5.59439M    1.11227M   137.305M       1.36133G/s   16.2529M   22.8539M     346.5M         2.52358    10.6458/s 3.68876G/s     985.796M               7.17961                2.84501   524.288k       5.58146M/s [BEST: throughput=  1.47 GB/s doc_throughput=    10 docs/s instructions=   985795976 cycles=   345728500 branch_miss= 1111929 cache_miss=16208836 cache_ref=  22912691 items=    524288 avg_time=  93933927 ns]
kostya<simdjson_ondemand>/manual_time                   62755829 ns     73158629 ns           11         553.168k            2.1907G        10.3516M       14.3342M    231.215M              1.68395            15.955       3.68903G          652.062M                      4.749                     2.82016           8.36501M     553.74k   137.305M       2.03766G/s    10.362M   14.2762M   231.474M         1.68584    15.9348/s 3.68849G/s     652.062M                 4.749                2.81699   524.288k       8.35441M/s [BEST: throughput=  2.19 GB/s doc_throughput=    15 docs/s instructions=   652061660 cycles=   231214791 branch_miss=  553168 cache_miss=10351612 cache_ref=  14334169 items=    524288 avg_time=  62755828 ns]
kostya<yyjson>/manual_time                             174541631 ns    184977441 ns            4         420.089k           787.683M        11.5741M       16.6288M    446.681M               3.2532           5.73674       2.56249G          974.184M                    7.09504                     2.18094            3.0077M    419.914k   137.305M       750.218M/s   11.5732M   16.6487M   446.742M         3.25365    5.72929/s 2.55951G/s     974.185M               7.09504                2.18064   524.288k        3.0038M/s [BEST: throughput=  0.79 GB/s doc_throughput=     5 docs/s instructions=   974184490 cycles=   446681229 branch_miss=  420089 cache_miss=11574120 cache_ref=  16628759 items=    524288 avg_time= 174541631 ns]
kostya<yyjson_insitu>/manual_time                      120189264 ns    130615712 ns            6         418.814k           1.14346G        8.65116M       12.3663M    348.699M              2.53959           8.32791       2.90393G          955.915M                    6.96198                     2.74138           4.36622M    419.088k   137.305M       1089.48M/s   8.65128M    12.387M   348.644M          2.5392    8.32021/s  2.9008G/s     955.915M               6.96198                 2.7418   524.288k       4.36219M/s [BEST: throughput=  1.14 GB/s doc_throughput=     8 docs/s instructions=   955914813 cycles=   348698791 branch_miss=  418814 cache_miss= 8651162 cache_ref=  12366272 items=    524288 avg_time= 120189263 ns]
kostya<sajson>/manual_time                             137061633 ns    147464512 ns            5         356.201k           1002.31M        12.2989M       17.1458M    505.187M              3.67931           7.29988        3.6878G          1.51716G                    11.0496                     3.00317           3.82724M     356.29k   137.305M       955.368M/s   12.2959M    17.163M   505.547M         3.68193    7.29599/s 3.68847G/s     1.51716G               11.0496                3.00103   524.288k        3.8252M/s [BEST: throughput=  1.00 GB/s doc_throughput=     7 docs/s instructions=  1517163296 cycles=   505187232 branch_miss=  356201 cache_miss=12298945 cache_ref=  17145802 items=    524288 avg_time= 137061633 ns]
kostya<rapidjson>/manual_time                          281835557 ns    292242947 ns            3         977.871k           492.928M        8.32109M       12.2218M    946.099M              6.89049           3.59002       3.39651G          2.73767G                    19.9386                     2.89364            1.8822M    976.315k   137.305M       464.612M/s    8.0133M   11.8786M   948.767M         6.90992    3.54817/s 3.36639G/s     2.73768G               19.9386                2.88551   524.288k       1.86026M/s [BEST: throughput=  0.49 GB/s doc_throughput=     3 docs/s instructions=  2737673177 cycles=   946098551 branch_miss=  977871 cache_miss= 8321090 cache_ref=  12221764 items=    524288 avg_time= 281835557 ns]
kostya<rapidjson_lossless>/manual_time                 313777708 ns    324227591 ns            2         1001.34k           441.002M        8.32177M       12.3443M    1066.85M              7.76996           3.21184       3.42657G          3.00662G                    21.8974                     2.81821           1.68393M    1000.93k   137.305M       417.315M/s   8.09063M   12.0148M   1068.69M          7.7833    3.18697/s 3.40587G/s     3.00662G               21.8974                2.81339   524.288k       1.67089M/s [BEST: throughput=  0.44 GB/s doc_throughput=     3 docs/s instructions=  3006623618 cycles=  1066854376 branch_miss= 1001339 cache_miss= 8321767 cache_ref=  12344289 items=    524288 avg_time= 313777708 ns]
kostya<rapidjson_insitu>/manual_time                   275795103 ns    286250396 ns            3         966.499k           503.264M        12.0048M       16.1206M    925.017M              6.73695            3.6653       3.39047G          2.21152G                    16.1067                     2.39079           1.92167M    962.613k   137.305M       474.788M/s   11.6883M   15.7145M   926.601M         6.74849    3.62588/s 3.35975G/s     2.21153G               16.1067                2.38671   524.288k       1.90101M/s [BEST: throughput=  0.50 GB/s doc_throughput=     3 docs/s instructions=  2211524880 cycles=   925016671 branch_miss=  966499 cache_miss=12004753 cache_ref=  16120574 items=    524288 avg_time= 275795103 ns]
kostya<nlohmann_json>/manual_time                     1944157986 ns   1954456952 ns            1         14.3935M           70.6244M        69.7718M       87.4786M     7.1713G              52.2289          0.514361       3.68864G          17.7606G                    129.351                     2.47662           269.674k    14.3935M   137.305M       67.3527M/s   69.7718M   87.4786M    7.1713G         52.2289   0.514361/s 3.68864G/s     17.7606G               129.351                2.47662   524.288k       269.674k/s [BEST: throughput=  0.07 GB/s doc_throughput=     0 docs/s instructions= 17760585076 cycles=  7171295185 branch_miss=14393474 cache_miss=69771840 cache_ref=  87478582 items=    524288 avg_time=1944157986 ns]
distinct_user_id<simdjson_dom>/manual_time                272965 ns       303386 ns         2562            3.71k           2.32712G               0        94.616k    1002.07k              1.58677          3.68498k        3.6926G          2.92855M                    4.63734                      2.9225           423.773k    3.84507k   631.515k       2.15465G/s     1.0566   94.8321k   1007.34k         1.59511   3.66347k/s 3.69034G/s     2.92855M               4.63734                2.90722        115       421.299k/s [BEST: throughput=  2.33 GB/s doc_throughput=  3684 docs/s instructions=     2928548 cycles=     1002069 branch_miss=    3710 cache_miss=       0 cache_ref=     94616 items=       115 avg_time=    272965 ns]
distinct_user_id<simdjson_ondemand>/manual_time           161834 ns       191466 ns         4330           2.079k           3.93683G               0        56.865k    592.443k              0.93813          6.23395k       3.69326G          1.89587M                    3.00209                     3.20008           716.904k     2.2434k   631.515k       3.63424G/s   0.384065     56.77k   597.164k        0.945606   6.17916k/s 3.68998G/s     1.89587M               3.00209                3.17478        115       710.604k/s [BEST: throughput=  3.94 GB/s doc_throughput=  6233 docs/s instructions=     1895867 cycles=      592443 branch_miss=    2079 cache_miss=       0 cache_ref=     56865 items=       115 avg_time=    161834 ns]
distinct_user_id<yyjson>/manual_time                      546129 ns       579769 ns         1000           6.544k             1.924G         22.213k        76.376k    1.21188M                1.919          3.04664k       3.69215G          2.87761M                    4.55668                     2.37451           350.364k    7.32064k   631.515k       1102.78M/s   7.52359k   58.0583k   1.42257M         2.25262   1.83107k/s 2.60481G/s      2.8781M               4.55745                2.02317        115       210.573k/s [BEST: throughput=  1.92 GB/s doc_throughput=  3046 docs/s instructions=     2877611 cycles=     1211876 branch_miss=    6544 cache_miss=   22213 cache_ref=     76376 items=       115 avg_time=    546129 ns]
distinct_user_id<yyjson_insitu>/manual_time               417768 ns       450373 ns         1675           7.027k            2.0892G             412        46.956k     1.1121M                1.761          3.30823k       3.67909G          2.87739M                    4.55632                     2.58734           380.447k    7.35376k   631.515k       1.40782G/s     73.449   32.3129k   1.20836M         1.91344   2.39367k/s 2.89243G/s     2.87765M               4.55674                2.38144        115       275.272k/s [BEST: throughput=  2.09 GB/s doc_throughput=  3308 docs/s instructions=     2877385 cycles=     1112101 branch_miss=    7027 cache_miss=     412 cache_ref=     46956 items=       115 avg_time=    417768 ns]
distinct_user_id<sajson>/manual_time                      594866 ns       625688 ns         1179          10.507k           1074.63M               0         47.87k    2.16958M              3.43552          1.70167k       3.69191G          5.81547M                    9.20876                     2.68045           195.692k    10.9375k   631.515k       1012.43M/s   0.747243   47.9874k   2.19494M         3.47567   1.68105k/s  3.6898G/s     5.81547M               9.20876                2.64949        115       193.321k/s [BEST: throughput=  1.07 GB/s doc_throughput=  1701 docs/s instructions=     5815469 cycles=     2169583 branch_miss=   10507 cache_miss=       0 cache_ref=     47870 items=       115 avg_time=    594865 ns]
distinct_user_id<rapidjson>/manual_time                  2356469 ns      2387496 ns          298          31.677k           290.827M         15.333k        56.019k     8.0159M              12.6931           460.523       3.69151G          21.8234M                    34.5572                     2.72251           52.9602k    31.9826k   631.515k       255.577M/s   1.30083k   36.4275k   8.14546M         12.8983    424.364/s 3.45664G/s     21.8242M               34.5585                2.67931        115       48.8018k/s [BEST: throughput=  0.29 GB/s doc_throughput=   460 docs/s instructions=    21823364 cycles=     8015895 branch_miss=   31677 cache_miss=   15333 cache_ref=     56019 items=       115 avg_time=   2356469 ns]
distinct_user_id<rapidjson_insitu>/manual_time           1556001 ns      1586804 ns          439          25.415k           440.964M          3.322k        46.305k    5.28692M               8.3718           698.264       3.69166G          13.2545M                    20.9884                     2.50703           80.3004k    31.5646k   631.515k       387.056M/s   2.98309k   38.3983k   5.47761M         8.67377    642.673/s 3.52031G/s     13.2545M               20.9885                2.41977        115       73.9074k/s [BEST: throughput=  0.44 GB/s doc_throughput=   698 docs/s instructions=    13254481 cycles=     5286918 branch_miss=   25415 cache_miss=    3322 cache_ref=     46305 items=       115 avg_time=   1556001 ns]
distinct_user_id<nlohmann_json>/manual_time              8028044 ns      8062611 ns           89         125.299k           81.3892M             423       227.347k    28.6276M              45.3317           128.879       3.68951G           75.742M                    119.937                     2.64576           14.8211k    139.646k   631.515k       75.0195M/s   1.22006k   416.422k   29.6142M         46.8939    124.563/s 3.68884G/s     74.3643M               117.755                 2.5111        115       14.3248k/s [BEST: throughput=  0.08 GB/s doc_throughput=   128 docs/s instructions=    75741966 cycles=    28627629 branch_miss=  125299 cache_miss=     423 cache_ref=    227347 items=       115 avg_time=   8028043 ns]
find_tweet<simdjson_dom>/manual_time                      261587 ns       290788 ns         2678           3.411k           2.42721G               0        84.288k    960.714k              1.52128          3.84348k       3.69248G          2.84337M                    4.50246                     2.95965           3.84348k    3.55606k   631.515k       2.24837G/s   0.390963   84.2389k   965.284k         1.52852   3.82282k/s 3.69011G/s     2.84337M               4.50246                2.94563          1       3.82282k/s [BEST: throughput=  2.43 GB/s doc_throughput=  3843 docs/s instructions=     2843374 cycles=      960714 branch_miss=    3411 cache_miss=       0 cache_ref=     84288 items=         1 avg_time=    261587 ns]
find_tweet<simdjson_ondemand>/manual_time                 117410 ns       145907 ns         5956           1.124k           5.41149G               0         32.86k    431.122k             0.682679          8.56905k       3.69431G          1.38727M                    2.19673                      3.2178           8.56905k    1.17082k   631.515k       5.00933G/s   0.630121   32.9742k   433.445k        0.686357   8.51718k/s 3.69173G/s     1.38727M               2.19673                3.20056          1       8.51718k/s [BEST: throughput=  5.41 GB/s doc_throughput=  8569 docs/s instructions=     1387265 cycles=      431122 branch_miss=    1124 cache_miss=       0 cache_ref=     32860 items=         1 avg_time=    117409 ns]
find_tweet<yyjson>/manual_time                            608281 ns       639188 ns         1158           9.251k           1.90315G              91        68.662k    1.22546M               1.9405          3.01363k       3.69307G          2.81716M                    4.46095                     2.29886           3.01363k    7.23661k   631.515k       990.101M/s     1013.2   41.6831k   1.44354M         2.28583   1.64398k/s 2.37314G/s     2.81763M                4.4617                1.95189          1       1.64398k/s [BEST: throughput=  1.90 GB/s doc_throughput=  3013 docs/s instructions=     2817155 cycles=     1225456 branch_miss=    9251 cache_miss=      91 cache_ref=     68662 items=         1 avg_time=    608281 ns]
find_tweet<yyjson_insitu>/manual_time                     406183 ns       436571 ns         1723           6.899k           2.16684G               9        38.351k    1076.29k               1.7043          3.43118k       3.69294G          2.81683M                    4.46043                     2.61717           3.43118k    7.02804k   631.515k       1.44798G/s    17.1422   23.3772k   1.16684M         1.84769   2.46194k/s  2.8727G/s     2.81709M               4.46085                2.41429          1       2.46194k/s [BEST: throughput=  2.17 GB/s doc_throughput=  3431 docs/s instructions=     2816830 cycles=     1076288 branch_miss=    6899 cache_miss=       9 cache_ref=     38351 items=         1 avg_time=    406183 ns]
find_tweet<sajson>/manual_time                            580749 ns       610641 ns         1203          10.092k           1.10097G               0        38.406k    2.11764M              3.35327          1.74337k       3.69183G          5.72035M                    9.05813                     2.70128           1.74337k    10.5682k   631.515k       1037.04M/s      1.133   38.3765k   2.14229M          3.3923   1.72192k/s 3.68884G/s     5.72035M               9.05814                 2.6702          1       1.72192k/s [BEST: throughput=  1.10 GB/s doc_throughput=  1743 docs/s instructions=     5720348 cycles=     2117640 branch_miss=   10092 cache_miss=       0 cache_ref=     38406 items=         1 avg_time=    580748 ns]
find_tweet<rapidjson>/manual_time                        2346078 ns      2375371 ns          300          31.493k           292.771M            9.4k        47.901k    7.96259M              12.6087             463.6       3.69146G          21.7393M                    34.4241                     2.73019              463.6    31.8609k   631.515k       256.709M/s     1023.6   28.6888k   8.10686M         12.8372    426.243/s  3.4555G/s     21.7401M               34.4252                2.68169          1        426.243/s [BEST: throughput=  0.29 GB/s doc_throughput=   463 docs/s instructions=    21739347 cycles=     7962589 branch_miss=   31493 cache_miss=    9400 cache_ref=     47901 items=         1 avg_time=   2346077 ns]
find_tweet<rapidjson_insitu>/manual_time                 1541514 ns      1571139 ns          440          25.097k           444.362M              92        37.154k    5.23677M               8.2924           703.645       3.68483G          13.1753M                     20.863                     2.51592            703.645    30.9798k   631.515k       390.694M/s    2.7093k   28.8542k   5.42276M          8.5869    648.713/s 3.51781G/s     13.1758M               20.8638                2.42973          1        648.713/s [BEST: throughput=  0.44 GB/s doc_throughput=   703 docs/s instructions=    13175327 cycles=     5236773 branch_miss=   25097 cache_miss=      92 cache_ref=     37154 items=         1 avg_time=   1541513 ns]
find_tweet<nlohmann_json>/manual_time                    7133674 ns      7164739 ns          103            98.7k           94.3401M             938       167.914k    24.6872M              39.0919           149.387       3.68794G          65.8443M                    104.264                     2.66715            149.387    135.926k   631.515k       84.4249M/s   1.14879k   334.611k    26.317M         41.6728     140.18/s 3.68912G/s     64.5148M               102.159                2.45145          1         140.18/s [BEST: throughput=  0.09 GB/s doc_throughput=   149 docs/s instructions=    65844316 cycles=    24687152 branch_miss=   98700 cache_miss=     938 cache_ref=    167914 items=         1 avg_time=   7133673 ns]
top_tweet<simdjson_dom>/manual_time                       267322 ns       295982 ns         2617           3.521k           2.37831G               0        92.106k    980.539k              1.55268          3.76604k       3.69275G          2.88026M                    4.56088                     2.93743           3.76604k    3.66145k   631.515k       2.20013G/s    1.10699   92.0766k   986.244k         1.56171    3.7408k/s 3.68935G/s     2.88026M               4.56088                2.92043          1        3.7408k/s [BEST: throughput=  2.38 GB/s doc_throughput=  3766 docs/s instructions=     2880261 cycles=      980539 branch_miss=    3521 cache_miss=       0 cache_ref=     92106 items=         1 avg_time=    267322 ns]
top_tweet<simdjson_ondemand>/manual_time                  178600 ns       207015 ns         3919           1.661k           3.55986G               0        57.462k    655.163k              1.03745          5.63701k       3.69316G          1.91005M                    3.02456                     2.91539           5.63701k    1.79987k   631.515k       3.29309G/s   0.836183   57.2927k   659.155k         1.04377   5.59911k/s 3.69068G/s     1.91005M               3.02456                2.89773          1       5.59911k/s [BEST: throughput=  3.56 GB/s doc_throughput=  5637 docs/s instructions=     1910054 cycles=      655163 branch_miss=    1661 cache_miss=       0 cache_ref=     57462 items=         1 avg_time=    178599 ns]
top_tweet<simdjson_ondemand_forward_only>/manual_time     172309 ns       200759 ns         4065           1.854k           3.70316G               0        58.003k    629.774k             0.997243          5.86393k       3.69295G          1.92496M                    3.04817                      3.0566           5.86393k    2.00563k   631.515k       3.41332G/s  0.0787208   57.9505k   635.693k         1.00662   5.80354k/s 3.68927G/s     1.92497M               3.04817                3.02814          1       5.80354k/s [BEST: throughput=  3.70 GB/s doc_throughput=  5863 docs/s instructions=     1924965 cycles=      629774 branch_miss=    1854 cache_miss=       0 cache_ref=     58003 items=         1 avg_time=    172308 ns]
top_tweet<yyjson>/manual_time                             613364 ns       643751 ns         1149            9.52k           1.85812G             420        74.235k    1.25504M              1.98734          2.94232k       3.69272G          2.84443M                    4.50414                     2.26641           2.94232k    7.32491k   631.515k       981.896M/s    972.693   46.9743k   1.46241M         2.31572   1.63035k/s 2.38425G/s     2.84491M               4.50489                1.94535          1       1.63035k/s [BEST: throughput=  1.86 GB/s doc_throughput=  2942 docs/s instructions=     2844430 cycles=     1255038 branch_miss=    9520 cache_miss=     420 cache_ref=     74235 items=         1 avg_time=    613363 ns]
top_tweet<yyjson_insitu>/manual_time                      412109 ns       441591 ns         1699            6.67k           2.13103G             513        42.964k    1089.06k              1.72451          3.37448k         3.675G          2.84411M                    4.50362                     2.61153           3.37448k    7.14601k   631.515k       1.42716G/s    49.5274   28.6903k   1.18803M         1.88123   2.42654k/s 2.88279G/s     2.84437M               4.50404                 2.3942          1       2.42654k/s [BEST: throughput=  2.13 GB/s doc_throughput=  3374 docs/s instructions=     2844106 cycles=     1089057 branch_miss=    6670 cache_miss=     513 cache_ref=     42964 items=         1 avg_time=    412109 ns]
top_tweet<sajson>/manual_time                             585978 ns       614951 ns         1193          10.343k           1089.85M               0        43.429k    2.13925M              3.38749          1.72577k       3.69184G          5.75034M                    9.10563                     2.68802           1.72577k    10.6853k   631.515k       1027.79M/s     8.1886   43.4566k   2.16196M         3.42345   1.70655k/s 3.68949G/s     5.75034M               9.10563                2.65978          1       1.70655k/s [BEST: throughput=  1.09 GB/s doc_throughput=  1725 docs/s instructions=     5750340 cycles=     2139249 branch_miss=   10343 cache_miss=       0 cache_ref=     43429 items=         1 avg_time=    585977 ns]
top_tweet<rapidjson>/manual_time                         2356576 ns      2384908 ns          298          32.057k           291.179M             222        51.741k    8.00623M              12.6778            461.08       3.69151G          21.7976M                    34.5163                     2.72258             461.08    32.0144k   631.515k       255.566M/s   1.13166k   32.6402k   8.14389M         12.8958    424.345/s 3.45581G/s     21.7984M               34.5176                2.67666          1        424.345/s [BEST: throughput=  0.29 GB/s doc_throughput=   461 docs/s instructions=    21797585 cycles=     8006231 branch_miss=   32057 cache_miss=     222 cache_ref=     51741 items=         1 avg_time=   2356575 ns]
top_tweet<rapidjson_insitu>/manual_time                  1564435 ns      1593733 ns          436          25.036k           438.811M              68        41.776k    5.31282M              8.41282           694.854       3.69164G          13.2294M                    20.9486                     2.49009            694.854    31.7554k   631.515k       384.969M/s   2.86388k   34.7087k   5.50932M         8.72397    639.208/s  3.5216G/s     13.2297M               20.9491                2.40133          1        639.208/s [BEST: throughput=  0.44 GB/s doc_throughput=   694 docs/s instructions=    13229383 cycles=     5312821 branch_miss=   25036 cache_miss=      68 cache_ref=     41776 items=         1 avg_time=   1564435 ns]
top_tweet<nlohmann_json>/manual_time                     9471550 ns      9499294 ns           74         189.191k           67.2874M             179       395.749k    34.6297M              54.8359           106.549       3.68976G           87.701M                    138.874                     2.53254            106.549    194.543k   631.515k       63.5862M/s    669.541   407.458k   34.9199M         55.2954    105.579/s 3.68682G/s     88.1604M               139.601                2.52465          1        105.579/s [BEST: throughput=  0.07 GB/s doc_throughput=   106 docs/s instructions=    87701008 cycles=    34629665 branch_miss=  189191 cache_miss=     179 cache_ref=    395749 items=         1 avg_time=   9471549 ns]
