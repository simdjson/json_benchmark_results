run_benchmark: v0.8.0 /home/jkeiser/simdjson_benchmark_results/v0.8.0/ampere-clang11-debug.json -DCMAKE_BUILD_TYPE=Debug
git reset --hard v0.8.0
HEAD is now at c96ff018 Version 0.8.
cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The CXX compiler identification is Clang 11.0.0
-- The C compiler identification is Clang 11.0.0
-- Check for working CXX compiler: /usr/bin/clang++-11
-- Check for working CXX compiler: /usr/bin/clang++-11 -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Check for working C compiler: /usr/bin/clang-11
-- Check for working C compiler: /usr/bin/clang-11 -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed
-- Check if compiler accepts -pthread
-- Check if compiler accepts -pthread - yes
-- Found Threads: TRUE  
-- Looking for fork
-- Looking for fork - found
-- Looking for wait
-- Looking for wait - found
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Found Git: /usr/bin/git (found version "2.27.0") 
-- git Version: v0.2.1-c96ff018
-- Version: 0.2.1
-- Performing Test HAVE_CXX_FLAG_STD_CXX11
-- Performing Test HAVE_CXX_FLAG_STD_CXX11 - Success
-- Performing Test HAVE_CXX_FLAG_WALL
-- Performing Test HAVE_CXX_FLAG_WALL - Success
-- Performing Test HAVE_CXX_FLAG_WEXTRA
-- Performing Test HAVE_CXX_FLAG_WEXTRA - Success
-- Performing Test HAVE_CXX_FLAG_WSHADOW
-- Performing Test HAVE_CXX_FLAG_WSHADOW - Success
-- Performing Test HAVE_CXX_FLAG_WERROR
-- Performing Test HAVE_CXX_FLAG_WERROR - Success
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32 - Success
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED - Success
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WD654
-- Performing Test HAVE_CXX_FLAG_WD654 - Failed
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY - Success
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES -- failed to compile
-- Performing Test HAVE_CXX_FLAG_COVERAGE
-- Performing Test HAVE_CXX_FLAG_COVERAGE - Success
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Performing Test USE_BOOST_JSON
-- Performing Test USE_BOOST_JSON - Failed
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Found Python3: /usr/bin/python3.8 (found version "3.8.6") found components: Interpreter 
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 10
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
Scanning dependencies of target benchmark
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_api_internal.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_name.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_name.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_register.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_register.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_runner.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_runner.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/colorprint.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/colorprint.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/commandlineflags.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/commandlineflags.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/complexity.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/complexity.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/console_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/console_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/counter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/counter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/csv_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/csv_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/json_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/json_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/sleep.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sleep.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/statistics.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/statistics.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/string_util.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/string_util.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/sysinfo.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sysinfo.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/timers.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/timers.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -P CMakeFiles/benchmark.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/benchmark.dir/link.txt --verbose=1
/usr/bin/ar qc libbenchmarkd.a  CMakeFiles/benchmark.dir/benchmark.cc.o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o CMakeFiles/benchmark.dir/benchmark_name.cc.o CMakeFiles/benchmark.dir/benchmark_register.cc.o CMakeFiles/benchmark.dir/benchmark_runner.cc.o CMakeFiles/benchmark.dir/colorprint.cc.o CMakeFiles/benchmark.dir/commandlineflags.cc.o CMakeFiles/benchmark.dir/complexity.cc.o CMakeFiles/benchmark.dir/console_reporter.cc.o CMakeFiles/benchmark.dir/counter.cc.o CMakeFiles/benchmark.dir/csv_reporter.cc.o CMakeFiles/benchmark.dir/json_reporter.cc.o CMakeFiles/benchmark.dir/reporter.cc.o CMakeFiles/benchmark.dir/sleep.cc.o CMakeFiles/benchmark.dir/statistics.cc.o CMakeFiles/benchmark.dir/string_util.cc.o CMakeFiles/benchmark.dir/sysinfo.cc.o CMakeFiles/benchmark.dir/timers.cc.o
/usr/bin/ranlib libbenchmarkd.a
[ 80%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
Scanning dependencies of target generated-data
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated && /usr/bin/ruby genfeaturejson.rb /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-miss.json ...
[ 80%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/clang++-11  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/include  -g -fPIC   -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -pthread -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/clang++-11 -fPIC -g  -shared -Wl,-soname,libsimdjson.so.7 -o ../libsimdjson.so.7.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.7.0.0 ../libsimdjson.so.7 ../libsimdjson.so
[ 80%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
Scanning dependencies of target yyjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/clang-11  -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src  -g   -o CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o   -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src/yyjson.c
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -P CMakeFiles/yyjson.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -E cmake_link_script CMakeFiles/yyjson.dir/link.txt --verbose=1
/usr/bin/ar qc libyyjson.a  CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o
/usr/bin/ranlib libyyjson.a
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/clang++-11  -DRAPIDJSON_HAS_STDSTRING -DSAJSON_UNSORTED_OBJECT_KEYS -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_COMPETITION_NLOHMANN_JSON -DSIMDJSON_COMPETITION_RAPIDJSON -DSIMDJSON_COMPETITION_SAJSON -DSIMDJSON_COMPETITION_YYJSON -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/rapidjson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/sajson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/json  -g   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/clang++-11  -g   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.7.0.0 ../_deps/google_benchmarks/src/libbenchmarkd.a ../dependencies/libyyjson.a -pthread /usr/lib/aarch64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.8.0/ampere-clang11-debug.json --benchmark_out_format=json
2021-01-24 20:53:30
Running benchmark/bench_ondemand
Run on (32 X 3300 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x32)
  L1 Instruction 32 KiB (x32)
  L2 Unified 256 KiB (x16)
Load Average: 1.01, 0.92, 0.54
***WARNING*** Library was built as DEBUG. Timings may be affected.
simdjson::dom implementation:      arm64
simdjson::ondemand implementation: arm64

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                56877707 ns     56950574 ns           12          40.992k           11.1064M        1.46681M       93.7673M    181.808M              287.892           17.5868       3.19743G          80.2577M                    127.088                    0.441441           1.75868k    41.0093k   631.515k       10.5887M/s   1.46699M   93.7661M   181.818M         287.907    17.5816/s 3.19665G/s     80.2577M               127.088               0.441418        100       1.75816k/s [BEST: throughput=  0.01 GB/s doc_throughput=    17 docs/s instructions=    80257687 cycles=   181808237 branch_miss=   40992 cache_miss= 1466808 cache_ref=  93767333 items=       100 avg_time=  56877707 ns]
partial_tweets<simdjson_ondemand>/manual_time           46990580 ns     47065468 ns           15          29.361k           13.4476M        1.53628M       74.6265M    150.162M              237.781           21.2943       3.19759G          64.2284M                    101.705                    0.427727           2.12943k    29.6077k   631.515k       12.8166M/s   1.53643M    74.628M   150.226M         237.883    21.2809/s 3.19695G/s     64.2284M               101.705               0.427544        100       2.12809k/s [BEST: throughput=  0.01 GB/s doc_throughput=    21 docs/s instructions=    64228382 cycles=   150162165 branch_miss=   29361 cache_miss= 1536281 cache_ref=  74626545 items=       100 avg_time=  46990580 ns]
partial_tweets<yyjson>/manual_time                       4338493 ns      4413478 ns          161          50.958k           148.663M         24.813k       7.17358M    13.5484M              21.4538           235.406       3.18938G          11.3493M                    17.9716                    0.837689           23.5406k    50.8831k   631.515k       138.818M/s   24.7226k   7.17553M   13.6382M          21.596    230.495/s 3.14354G/s     11.3494M               17.9717               0.832176        100       23.0495k/s [BEST: throughput=  0.15 GB/s doc_throughput=   235 docs/s instructions=    11349335 cycles=    13548390 branch_miss=   50958 cache_miss=   24813 cache_ref=   7173581 items=       100 avg_time=   4338492 ns]
partial_tweets<yyjson_insitu>/manual_time                4256826 ns      4332191 ns          164          50.957k           151.069M         14.755k       7.01571M    13.3788M              21.1852           239.217       3.20042G          11.2503M                    17.8148                     0.84091           23.9217k    50.8546k   631.515k       141.481M/s   14.8296k   7.01622M   13.4874M         21.3573    234.917/s 3.16843G/s     11.2503M               17.8148               0.834133        100       23.4917k/s [BEST: throughput=  0.15 GB/s doc_throughput=   239 docs/s instructions=    11250332 cycles=    13378756 branch_miss=   50957 cache_miss=   14755 cache_ref=   7015711 items=       100 avg_time=   4256825 ns]
partial_tweets<sajson>/manual_time                       7679669 ns      7755881 ns           91          84.191k            82.797M         12.737k       11.8979M    24.3763M              38.5998           131.109       3.19595G          26.2094M                    41.5024                      1.0752           13.1109k    84.3233k   631.515k       78.4226M/s    12.786k   11.8984M   24.5525M         38.8787    130.214/s 3.19708G/s     26.2094M               41.5024                1.06748        100       13.0214k/s [BEST: throughput=  0.08 GB/s doc_throughput=   131 docs/s instructions=    26209392 cycles=    24376346 branch_miss=   84191 cache_miss=   12737 cache_ref=  11897873 items=       100 avg_time=   7679668 ns]
partial_tweets<rapidjson>/manual_time                   27743547 ns     27820165 ns           25         146.463k           22.8262M         13.341k       55.9618M    88.4405M              140.045           36.1451       3.19669G          103.357M                    163.666                     1.16867           3.61451k    146.455k   631.515k       21.7081M/s   13.5515k   55.9646M   88.4998M         140.139    36.0444/s 3.18992G/s     103.358M               163.666                1.16789        100       3.60444k/s [BEST: throughput=  0.02 GB/s doc_throughput=    36 docs/s instructions=   103357379 cycles=    88440474 branch_miss=  146463 cache_miss=   13341 cache_ref=  55961779 items=       100 avg_time=  27743547 ns]
partial_tweets<rapidjson_insitu>/manual_time            20955808 ns     21032686 ns           33         135.693k           30.2373M         13.848k       38.0199M    66.7724M              105.734           47.8806        3.1971G          72.7164M                    115.146                     1.08902           4.78806k    137.625k   631.515k       28.7395M/s   14.0616k   38.0265M    66.848M         105.853    47.7195/s 3.18995G/s     72.7167M               115.146                1.08779        100       4.77195k/s [BEST: throughput=  0.03 GB/s doc_throughput=    47 docs/s instructions=    72716432 cycles=    66772358 branch_miss=  135693 cache_miss=   13848 cache_ref=  38019937 items=       100 avg_time=  20955808 ns]
partial_tweets<nlohmann_json>/manual_time              114632189 ns    114733097 ns            6         1031.35k           5.55535M         237.86k       249.991M    363.347M              575.358           8.79686       3.19631G          420.095M                    665.218                     1.15618            879.686    1043.48k   631.515k       5.25384M/s   285.989k    250.02M   366.441M         580.256    8.72355/s 3.19666G/s     419.941M               664.973                  1.146        100        872.355/s [BEST: throughput=  0.01 GB/s doc_throughput=     8 docs/s instructions=   420095284 cycles=   363347401 branch_miss= 1031347 cache_miss=  237860 cache_ref= 249990951 items=       100 avg_time= 114632188 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                6774432337 ns   6778027121 ns            1         16.6056M           6.79006M        4.37261M       12.8097G    21.6597G              470.875          0.147614       3.19727G          15.3381G                    333.445                    0.708139           147.614k    16.6056M   45.9988M        6.4755M/s   4.37261M   12.8097G   21.6597G         470.875   0.147614/s 3.19727G/s     15.3381G               333.445               0.708139      1000k       147.614k/s [BEST: throughput=  0.01 GB/s doc_throughput=     0 docs/s instructions= 15338071592 cycles= 21659687176 branch_miss=16605639 cache_miss= 4372608 cache_ref=12809732606 items=   1000000 avg_time=6774432337 ns]
large_random<simdjson_ondemand>/manual_time           4767900783 ns   4771483244 ns            1         7.64019M            9.6476M        6.69165M       8.01038G    15.2429G              331.375          0.209736       3.19697G          9.68919G                     210.64                    0.635655           209.736k    7.64019M   45.9988M       9.20066M/s   6.69165M   8.01038G   15.2429G         331.375   0.209736/s 3.19697G/s     9.68919G                210.64               0.635655      1000k       209.736k/s [BEST: throughput=  0.01 GB/s doc_throughput=     0 docs/s instructions=  9689194002 cycles= 15242854756 branch_miss= 7640186 cache_miss= 6691645 cache_ref=8010382156 items=   1000000 avg_time=4767900783 ns]
large_random<simdjson_ondemand_unordered>/manual_time 4983948300 ns   4987539824 ns            1         6.79898M           9.22938M        9.76394M       8.14148G    15.9336G              346.392          0.200644       3.19698G           9.9672G                    216.684                    0.625546           200.644k    6.79898M   45.9988M       8.80183M/s   9.76394M   8.14148G   15.9336G         346.392   0.200644/s 3.19698G/s      9.9672G               216.684               0.625546      1000k       200.644k/s [BEST: throughput=  0.01 GB/s doc_throughput=     0 docs/s instructions=  9967197236 cycles= 15933593390 branch_miss= 6798982 cache_miss= 9763943 cache_ref=8141482922 items=   1000000 avg_time=4983948300 ns]
large_random<yyjson>/manual_time                       973661782 ns    977235694 ns            1         1.67868M           47.2431M        4.97053M       1.68528G    3.08739G               67.119           1.02705       3.17091G          3.08153G                    66.9915                      0.9981           1027.05k    1.67868M   45.9988M       45.0545M/s   4.97053M   1.68528G   3.08739G          67.119    1.02705/s 3.17091G/s     3.08153G               66.9915                 0.9981      1000k       1027.05k/s [BEST: throughput=  0.05 GB/s doc_throughput=     1 docs/s instructions=  3081526464 cycles=  3087393528 branch_miss= 1678685 cache_miss= 4970531 cache_ref=1685282333 items=   1000000 avg_time= 973661782 ns]
large_random<yyjson_insitu>/manual_time                967852229 ns    971405915 ns            1         1.68534M           47.5267M        4.24081M       1.67376G    3.07568G              66.8645           1.03322       3.17785G          3.07434G                    66.8352                    0.999562           1033.22k    1.68534M   45.9988M       45.3249M/s   4.24081M   1.67376G   3.07568G         66.8645    1.03322/s 3.17785G/s     3.07434G               66.8352               0.999562      1000k       1033.22k/s [BEST: throughput=  0.05 GB/s doc_throughput=     1 docs/s instructions=  3074338809 cycles=  3075684715 branch_miss= 1685344 cache_miss= 4240812 cache_ref=1673760373 items=   1000000 avg_time= 967852229 ns]
large_random<sajson>/manual_time                      2210695701 ns   2214274544 ns            1         12.5061M           20.8074M        3.47957M       3.71717G    7.06876G              153.673          0.452346       3.19753G          7.09295G                    154.199                     1.00342           452.346k    12.5061M   45.9988M       19.8435M/s   3.47957M   3.71717G   7.06876G         153.673   0.452346/s 3.19753G/s     7.09295G               154.199                1.00342      1000k       452.346k/s [BEST: throughput=  0.02 GB/s doc_throughput=     0 docs/s instructions=  7092954706 cycles=  7068760694 branch_miss=12506073 cache_miss= 3479570 cache_ref=3717168394 items=   1000000 avg_time=2210695701 ns]
large_random<rapidjson>/manual_time                   3930794968 ns   3934381642 ns            1         17.6598M           11.7022M        4.99784M       7.15678G    12.5376G              272.563          0.254401       3.18957G          13.3595G                    290.432                     1.06556           254.401k    17.6598M   45.9988M         11.16M/s   4.99784M   7.15678G   12.5376G         272.563   0.254401/s 3.18957G/s     13.3595G               290.432                1.06556      1000k       254.401k/s [BEST: throughput=  0.01 GB/s doc_throughput=     0 docs/s instructions= 13359534743 cycles= 12537553354 branch_miss=17659834 cache_miss= 4997844 cache_ref=7156776362 items=   1000000 avg_time=3930794968 ns]
large_random<rapidjson_lossless>/manual_time          4814413568 ns   4817996289 ns            1         21.6522M           9.55439M        5.00362M       9.11455G    15.3618G              333.962           0.20771        3.1908G          16.4643G                    357.928                     1.07176            207.71k    21.6522M   45.9988M       9.11177M/s   5.00362M   9.11455G   15.3618G         333.962    0.20771/s  3.1908G/s     16.4643G               357.928                1.07176      1000k        207.71k/s [BEST: throughput=  0.01 GB/s doc_throughput=     0 docs/s instructions= 16464271470 cycles= 15361841003 branch_miss=21652228 cache_miss= 5003616 cache_ref=9114545419 items=   1000000 avg_time=4814413568 ns]
large_random<rapidjson_insitu>/manual_time            3658501913 ns   3662050440 ns            1         12.3767M           12.5731M        5.72218M       6.73292G    11.6673G              253.644          0.273336        3.1891G          12.6145G                    274.236                     1.08118           273.336k    12.3767M   45.9988M       11.9907M/s   5.72218M   6.73292G   11.6673G         253.644   0.273336/s  3.1891G/s     12.6145G               274.236                1.08118      1000k       273.336k/s [BEST: throughput=  0.01 GB/s doc_throughput=     0 docs/s instructions= 12614535473 cycles= 11667325247 branch_miss=12376673 cache_miss= 5722182 cache_ref=6732922533 items=   1000000 avg_time=3658501913 ns]
large_random<nlohmann_json>/manual_time               21042138998 ns   21045833588 ns            1         149.967M           2.18603M        28.8778M       36.7303G    67.2646G             1.46231k         0.0475237       3.19666G          62.4237G                   1.35707k                    0.928032           47.5237k    149.967M   45.9988M       2.08476M/s   28.8778M   36.7303G   67.2646G        1.46231k  0.0475237/s 3.19666G/s     62.4237G              1.35707k               0.928032      1000k       47.5237k/s [BEST: throughput=  0.00 GB/s doc_throughput=     0 docs/s instructions= 62423688732 cycles= 67264620750 branch_miss=149966630 cache_miss=28877822 cache_ref=36730274276 items=   1000000 avg_time=21042138998 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                      10655946019 ns   10666643584 ns            1         15.6631M           12.8853M        7.75016M       18.6992G    34.0689G              248.125         0.0938443       3.19717G          18.5235G                    134.908                    0.543707           49.2015k    15.6631M   137.305M       12.2884M/s   7.75016M   18.6992G   34.0689G         248.125  0.0938443/s 3.19717G/s     18.5235G               134.908               0.543707   524.288k       49.2015k/s [BEST: throughput=  0.01 GB/s doc_throughput=     0 docs/s instructions= 18523497797 cycles= 34068868509 branch_miss=15663092 cache_miss= 7750158 cache_ref=18699198204 items=    524288 avg_time=10655946019 ns]
kostya<simdjson_ondemand>/manual_time                 8599685963 ns   8610415218 ns            1         10.0625M           15.9663M        9.22702M       14.2441G    27.4937G              200.238          0.116283       3.19706G          13.8789G                    101.081                    0.504802           60.9659k    10.0625M   137.305M       15.2266M/s   9.22702M   14.2441G   27.4937G         200.238   0.116283/s 3.19706G/s     13.8789G               101.081               0.504802   524.288k       60.9659k/s [BEST: throughput=  0.02 GB/s doc_throughput=     0 docs/s instructions= 13878882008 cycles= 27493688279 branch_miss=10062524 cache_miss= 9227024 cache_ref=14244146546 items=    524288 avg_time=8599685963 ns]
kostya<yyjson>/manual_time                            1207164828 ns   1217785783 ns            1         3.47375M           113.742M        8.04572M       2.08329G    3.81423G              27.7792          0.828387       3.15966G          3.44536G                    25.0927                    0.903292           434.314k    3.47375M   137.305M       108.473M/s   8.04572M   2.08329G   3.81423G         27.7792   0.828387/s 3.15966G/s     3.44536G               25.0927               0.903292   524.288k       434.314k/s [BEST: throughput=  0.11 GB/s doc_throughput=     0 docs/s instructions=  3445359196 cycles=  3814225559 branch_miss= 3473751 cache_miss= 8045717 cache_ref=2083288371 items=    524288 avg_time=1207164828 ns]
kostya<yyjson_insitu>/manual_time                     1190747621 ns   1201434539 ns            1         3.46961M            115.31M        5.89171M       2.04898G    3.78182G              27.5432          0.839809         3.176G           3.4239G                    24.9365                     0.90536           440.302k    3.46961M   137.305M       109.968M/s   5.89171M   2.04898G   3.78182G         27.5432   0.839809/s   3.176G/s      3.4239G               24.9365                0.90536   524.288k       440.302k/s [BEST: throughput=  0.12 GB/s doc_throughput=     0 docs/s instructions=  3423904943 cycles=  3781816497 branch_miss= 3469607 cache_miss= 5891713 cache_ref=2048977204 items=    524288 avg_time=1190747621 ns]
kostya<sajson>/manual_time                            2702454323 ns   2713086879 ns            1         26.7276M           50.8075M         4.6789M       4.01104G    8.64009G              62.9263          0.370034       3.19713G          8.63043G                    62.8559                    0.998881           194.004k    26.7276M   137.305M       48.4538M/s    4.6789M   4.01104G   8.64009G         62.9263   0.370034/s 3.19713G/s     8.63043G               62.8559               0.998881   524.288k       194.004k/s [BEST: throughput=  0.05 GB/s doc_throughput=     0 docs/s instructions=  8630425663 cycles=  8640094013 branch_miss=26727561 cache_miss= 4678901 cache_ref=4011036623 items=    524288 avg_time=2702454323 ns]
kostya<rapidjson>/manual_time                         4812835963 ns   4823474801 ns            1         38.8749M           28.5289M        5.38621M       8.46537G    15.3449G              111.758          0.207778       3.18834G          15.7877G                    114.983                     1.02885           108.935k    38.8749M   137.305M       27.2073M/s   5.38621M   8.46537G   15.3449G         111.758   0.207778/s 3.18834G/s     15.7877G               114.983                1.02885   524.288k       108.935k/s [BEST: throughput=  0.03 GB/s doc_throughput=     0 docs/s instructions= 15787706667 cycles= 15344943096 branch_miss=38874940 cache_miss= 5386205 cache_ref=8465370587 items=    524288 avg_time=4812835963 ns]
kostya<rapidjson_lossless>/manual_time                5369878993 ns   5380528270 ns            1          41.857M           25.5695M          5.397M       9.62327G    17.1257G              124.727          0.186224       3.18921G          17.5781G                    128.022                     1.02642            97.635k     41.857M   137.305M        24.385M/s     5.397M   9.62327G   17.1257G         124.727   0.186224/s 3.18921G/s     17.5781G               128.022                1.02642   524.288k        97.635k/s [BEST: throughput=  0.03 GB/s doc_throughput=     0 docs/s instructions= 17578076672 cycles= 17125680784 branch_miss=41856956 cache_miss= 5397002 cache_ref=9623269853 items=    524288 avg_time=5369878993 ns]
kostya<rapidjson_insitu>/manual_time                  4480839991 ns   4491456796 ns            1         31.7855M           30.6427M        6.24715M       7.59844G     14.284G              104.031          0.223172       3.18779G          14.2674G                     103.91                    0.998839           117.007k    31.7855M   137.305M       29.2231M/s   6.24715M   7.59844G    14.284G         104.031   0.223172/s 3.18779G/s     14.2674G                103.91               0.998839   524.288k       117.007k/s [BEST: throughput=  0.03 GB/s doc_throughput=     0 docs/s instructions= 14267400624 cycles= 14283990086 branch_miss=31785494 cache_miss= 6247155 cache_ref=7598440593 items=    524288 avg_time=4480839991 ns]
kostya<nlohmann_json>/manual_time                     31566729033 ns   31577592884 ns            1         232.239M           4.34967M        38.9622M       59.2225G    100.911G              734.941         0.0316789       3.19675G          98.9132G                    720.391                    0.980202           16.6089k    232.239M   137.305M       4.14817M/s   38.9622M   59.2225G   100.911G         734.941  0.0316789/s 3.19675G/s     98.9132G               720.391               0.980202   524.288k       16.6089k/s [BEST: throughput=  0.00 GB/s doc_throughput=     0 docs/s instructions= 98913234206 cycles=100911075919 branch_miss=232238610 cache_miss=38962223 cache_ref=59222485932 items=    524288 avg_time=31566729033 ns]
distinct_user_id<simdjson_dom>/manual_time              56542579 ns     56674582 ns           12          37.504k           11.1738M        1.45622M       92.6959M      180.7M              286.137           17.6937       3.19725G           78.499M                    124.303                    0.434416           2.03478k    37.5968k   631.515k       10.6514M/s   1.45684M   92.6986M   180.749M         286.215    17.6858/s 3.19669G/s      78.499M               124.303               0.434299        115       2.03387k/s [BEST: throughput=  0.01 GB/s doc_throughput=    17 docs/s instructions=    78499035 cycles=   180699958 branch_miss=   37504 cache_miss= 1456223 cache_ref=  92695926 items=       115 avg_time=  56542579 ns]
distinct_user_id<simdjson_ondemand>/manual_time         45617241 ns     45749676 ns           15          26.777k           13.8494M        1.46864M       73.4908M    145.807M              230.884           21.9305       3.19761G          64.2043M                    101.667                    0.440339           2.52201k    26.8205k   631.515k       13.2025M/s   1.46918M    73.492M   145.841M         230.938    21.9215/s 3.19705G/s     64.2043M               101.667               0.440236        115       2.52098k/s [BEST: throughput=  0.01 GB/s doc_throughput=    21 docs/s instructions=    64204319 cycles=   145806569 branch_miss=   26777 cache_miss= 1468639 cache_ref=  73490775 items=       115 avg_time=  45617241 ns]
distinct_user_id<yyjson>/manual_time                     4184626 ns      4315862 ns          167           50.22k           153.093M         24.624k       7.00611M    13.2019M              20.9052           242.422       3.20044G          11.0776M                    17.5413                    0.839088           27.8785k     50.289k   631.515k       143.922M/s   24.6559k   7.00682M   13.3776M         21.1833     238.97/s 3.19684G/s     11.0775M               17.5411               0.828061        115       27.4816k/s [BEST: throughput=  0.15 GB/s doc_throughput=   242 docs/s instructions=    11077592 cycles=    13201944 branch_miss=   50220 cache_miss=   24624 cache_ref=   7006109 items=       115 avg_time=   4184625 ns]
distinct_user_id<yyjson_insitu>/manual_time              4144808 ns      4275762 ns          169          50.352k           154.669M         14.775k       6.84886M    13.0674M              20.6922           244.917       3.20043G          10.9784M                    17.3843                    0.840138           28.1654k    50.2735k   631.515k       145.305M/s   14.7934k   6.84861M   13.1898M          20.886    241.266/s 3.18225G/s     10.9784M               17.3842               0.832336        115       27.7456k/s [BEST: throughput=  0.15 GB/s doc_throughput=   244 docs/s instructions=    10978438 cycles=    13067430 branch_miss=   50352 cache_miss=   14775 cache_ref=   6848865 items=       115 avg_time=   4144807 ns]
distinct_user_id<sajson>/manual_time                     7511164 ns      7642751 ns           93          81.686k           84.3617M         12.835k       11.6651M    23.9152M              37.8696           133.586       3.19474G          25.7917M                    40.8411                     1.07847           15.3624k    81.8718k   631.515k       80.1819M/s   12.8079k   11.6653M   24.0106M         38.0206    133.135/s 3.19665G/s     25.7917M               40.8411                1.07418        115       15.3105k/s [BEST: throughput=  0.08 GB/s doc_throughput=   133 docs/s instructions=    25791747 cycles=    23915203 branch_miss=   81686 cache_miss=   12835 cache_ref=  11665093 items=       115 avg_time=   7511163 ns]
distinct_user_id<rapidjson>/manual_time                 27463143 ns     27596533 ns           25         144.738k           23.0559M         14.137k       55.4687M    87.5957M              138.707           36.5088       3.19801G          102.354M                    162.077                     1.16848           4.19851k    144.935k   631.515k       21.9297M/s   14.3214k   55.4709M     87.66M         138.809    36.4124/s 3.19191G/s     102.354M               162.077                1.16763        115       4.18743k/s [BEST: throughput=  0.02 GB/s doc_throughput=    36 docs/s instructions=   102353917 cycles=    87595652 branch_miss=  144738 cache_miss=   14137 cache_ref=  55468659 items=       115 avg_time=  27463142 ns]
distinct_user_id<rapidjson_insitu>/manual_time          20646817 ns     20780189 ns           34         136.529k           30.6078M         14.422k       37.5356M    65.9673M              104.459           48.4672       3.19725G          71.7384M                    113.597                     1.08748           5.57373k    137.132k   631.515k       29.1696M/s   14.4553k   37.5373M   66.0031M         104.515    48.4336/s 3.19677G/s     71.7384M               113.597                1.08689        115       5.56987k/s [BEST: throughput=  0.03 GB/s doc_throughput=    48 docs/s instructions=    71738373 cycles=    65967269 branch_miss=  136529 cache_miss=   14422 cache_ref=  37535575 items=       115 avg_time=  20646817 ns]
distinct_user_id<nlohmann_json>/manual_time            109308414 ns    109444593 ns            6         927.867k           5.81733M         193.92k       239.712M    347.045M              549.544           9.21171       3.19688G          402.287M                    637.019                     1.15918            1059.35    935.795k   631.515k       5.50973M/s    230.22k   239.268M   349.426M         553.314    9.14843/s  3.1967G/s      400.86M               634.759                 1.1472        115        1052.07/s [BEST: throughput=  0.01 GB/s doc_throughput=     9 docs/s instructions=   402287131 cycles=   347045280 branch_miss=  927867 cache_miss=  193920 cache_ref= 239711750 items=       115 avg_time= 109308414 ns]
find_tweet<simdjson_dom>/manual_time                    56108196 ns     56194726 ns           12          34.302k           11.2613M        1.45178M       91.4377M      179.3M               283.92           17.8322       3.19731G           76.488M                    121.118                    0.426593            17.8322    34.4918k   631.515k       10.7339M/s   1.45257M     91.44M    179.35M             284    17.8227/s 3.19651G/s      76.488M               121.118               0.426473          1        17.8227/s [BEST: throughput=  0.01 GB/s doc_throughput=    17 docs/s instructions=    76487959 cycles=   179299795 branch_miss=   34302 cache_miss= 1451783 cache_ref=  91437729 items=         1 avg_time=  56108195 ns]
find_tweet<simdjson_ondemand>/manual_time               42743160 ns     42830217 ns           16          15.991k           14.7787M        1.43724M       68.0604M    136.631M              216.355           23.4019       3.19744G          54.8334M                    86.8283                    0.401324            23.4019    15.9921k   631.515k       14.0902M/s   1.43753M   68.0632M   136.653M          216.39    23.3956/s 3.19708G/s     54.8334M               86.8283               0.401259          1        23.3956/s [BEST: throughput=  0.01 GB/s doc_throughput=    23 docs/s instructions=    54833361 cycles=   136631230 branch_miss=   15991 cache_miss= 1437243 cache_ref=  68060446 items=         1 avg_time=  42743159 ns]
find_tweet<yyjson>/manual_time                           4104137 ns      4189463 ns          171          49.394k            157.35M         21.988k       6.82458M    12.8447M              20.3396           249.163       3.20043G          10.7769M                    17.0652                    0.839016            249.163    49.4689k   631.515k       146.745M/s    22.129k   6.83004M    12.888M          20.408    243.657/s 3.14024G/s     10.7772M               17.0656               0.836217          1        243.657/s [BEST: throughput=  0.16 GB/s doc_throughput=   249 docs/s instructions=    10776946 cycles=    12844738 branch_miss=   49394 cache_miss=   21988 cache_ref=   6824582 items=         1 avg_time=   4104137 ns]
find_tweet<yyjson_insitu>/manual_time                    4027276 ns      4113366 ns          174          49.544k           159.477M         12.103k       6.66921M    12.6734M              20.0683           252.531       3.20044G           10.678M                    16.9086                     0.84255            252.531    49.4597k   631.515k       149.545M/s   12.1753k   6.66992M   12.7536M         20.1952    248.307/s  3.1668G/s     10.6781M               16.9087               0.837261          1        248.307/s [BEST: throughput=  0.16 GB/s doc_throughput=   252 docs/s instructions=    10678015 cycles=    12673446 branch_miss=   49544 cache_miss=   12103 cache_ref=   6669208 items=         1 avg_time=   4027275 ns]
find_tweet<sajson>/manual_time                           7337825 ns      7424855 ns           95          80.807k           86.4066M         10.294k       11.4373M    23.3567M              36.9852           136.824       3.19577G           25.363M                    40.1622                      1.0859            136.824    80.7986k   631.515k        82.076M/s   10.2819k   11.4362M   23.4585M         37.1464     136.28/s 3.19693G/s      25.363M               40.1622                1.08119          1         136.28/s [BEST: throughput=  0.09 GB/s doc_throughput=   136 docs/s instructions=    25363010 cycles=    23356729 branch_miss=   80807 cache_miss=   10294 cache_ref=  11437280 items=         1 avg_time=   7337824 ns]
find_tweet<rapidjson>/manual_time                       28883218 ns     28972413 ns           26          141.34k           23.3792M         11.317k       54.8349M    86.3833M              136.787           37.0208       3.19798G          101.098M                    160.087                     1.17034            37.0208    141.471k   631.515k       20.8515M/s   11.5713k   54.8376M   86.4428M         136.882    34.6222/s 2.99284G/s     101.098M               160.088                1.16954          1        34.6222/s [BEST: throughput=  0.02 GB/s doc_throughput=    37 docs/s instructions=   101097620 cycles=    86383307 branch_miss=  141340 cache_miss=   11317 cache_ref=  54834888 items=         1 avg_time=  28883218 ns]
find_tweet<rapidjson_insitu>/manual_time                20267595 ns     20357015 ns           35         134.407k           31.1693M         11.135k       36.9135M    64.7794M              102.578           49.3564       3.19728G          70.5102M                    111.652                     1.08847            49.3564    134.653k   631.515k       29.7154M/s   11.1431k   36.9147M   64.7915M         102.597    49.3398/s  3.1968G/s     70.5103M               111.653                1.08826          1        49.3398/s [BEST: throughput=  0.03 GB/s doc_throughput=    49 docs/s instructions=    70510186 cycles=    64779409 branch_miss=  134407 cache_miss=   11135 cache_ref=  36913501 items=         1 avg_time=  20267594 ns]
find_tweet<nlohmann_json>/manual_time                   94010545 ns     94101639 ns            7         654.291k           6.76194M         96.829k         210.4M    298.584M              472.807           10.7075       3.19709G          352.815M                     558.68                     1.18162            10.7075    661.979k   631.515k        6.4063M/s   129.413k   209.936M   300.527M         475.883    10.6371/s 3.19674G/s     351.347M               556.355                 1.1691          1        10.6371/s [BEST: throughput=  0.01 GB/s doc_throughput=    10 docs/s instructions=   352814624 cycles=   298584439 branch_miss=  654291 cache_miss=   96829 cache_ref= 210399647 items=         1 avg_time=  94010544 ns]
top_tweet<simdjson_dom>/manual_time                     56311184 ns     56401763 ns           12          34.827k           11.2224M        1.45129M       91.8923M    179.921M              284.903           17.7706       3.19729G          77.2755M                    122.365                    0.429497            17.7706    34.8226k   631.515k       10.6952M/s   1.45237M   91.8944M   180.011M         285.047    17.7585/s 3.19673G/s     77.2755M               122.365               0.429281          1        17.7585/s [BEST: throughput=  0.01 GB/s doc_throughput=    17 docs/s instructions=    77275486 cycles=   179920747 branch_miss=   34827 cache_miss= 1451290 cache_ref=  91892293 items=         1 avg_time=  56311183 ns]
top_tweet<simdjson_ondemand>/manual_time                45360711 ns     45451396 ns           15          27.728k           13.9279M        1.48181M       73.2409M    144.978M              229.571           22.0548       3.19746G          63.0267M                    99.8023                    0.434733            22.0548    27.8994k   631.515k       13.2771M/s   1.48234M    73.244M    145.01M         229.623    22.0455/s 3.19683G/s     63.0267M               99.8023               0.434636          1        22.0455/s [BEST: throughput=  0.01 GB/s doc_throughput=    22 docs/s instructions=    63026675 cycles=   144977803 branch_miss=   27728 cache_miss= 1481805 cache_ref=  73240854 items=         1 avg_time=  45360710 ns]
top_tweet<simdjson_ondemand_forward_only>/manual_time   45769213 ns     45862824 ns           15          28.207k           13.8056M         1.4973M       73.8689M    146.262M              231.605           21.8611       3.19745G          63.4705M                    100.505                    0.433951            21.8611    28.2764k   631.515k       13.1586M/s   1.49762M    73.872M   146.319M         231.695    21.8487/s 3.19689G/s     63.4705M               100.505               0.433782          1        21.8487/s [BEST: throughput=  0.01 GB/s doc_throughput=    21 docs/s instructions=    63470500 cycles=   146261762 branch_miss=   28207 cache_miss= 1497297 cache_ref=  73868934 items=         1 avg_time=  45769212 ns]
top_tweet<yyjson>/manual_time                            4167126 ns      4259106 ns          168          49.687k           154.811M         23.518k       6.89324M    13.0243M               20.624           245.142       3.19282G          10.8849M                    17.2362                    0.835738            245.142    49.6777k   631.515k       144.526M/s   23.6096k   6.89628M   13.0899M         20.7277    239.974/s 3.14122G/s     10.8851M               17.2366                0.83157          1        239.974/s [BEST: throughput=  0.15 GB/s doc_throughput=   245 docs/s instructions=    10884938 cycles=    13024337 branch_miss=   49687 cache_miss=   23518 cache_ref=   6893242 items=         1 avg_time=   4167126 ns]
top_tweet<yyjson_insitu>/manual_time                     4084487 ns      4177674 ns          171           49.66k           157.514M          13.58k       6.73259M    12.8319M              20.3192           249.422       3.20055G          10.7862M                    17.0799                    0.840581            249.422    49.6615k   631.515k        147.45M/s   13.6839k   6.73602M   12.9361M         20.4842    244.829/s 3.16713G/s     10.7864M               17.0801               0.833818          1        244.829/s [BEST: throughput=  0.16 GB/s doc_throughput=   249 docs/s instructions=    10786224 cycles=    12831869 branch_miss=   49660 cache_miss=   13580 cache_ref=   6732586 items=         1 avg_time=   4084487 ns]
top_tweet<sajson>/manual_time                            7426260 ns      7519229 ns           94          81.402k           85.2636M         11.864k       11.5688M    23.6598M              37.4651           135.014       3.19441G          25.5917M                    40.5243                     1.08166            135.014    81.4676k   631.515k       81.0987M/s   11.8473k   11.5687M   23.7425M         37.5961    134.657/s  3.1971G/s     25.5917M               40.5243                1.07789          1        134.657/s [BEST: throughput=  0.09 GB/s doc_throughput=   135 docs/s instructions=    25591730 cycles=    23659783 branch_miss=   81402 cache_miss=   11864 cache_ref=  11568845 items=         1 avg_time=   7426259 ns]
top_tweet<rapidjson>/manual_time                        27344926 ns     27444427 ns           26         143.362k           23.1541M         13.201k       55.2748M    87.2088M              138.095           36.6643       3.19745G          101.982M                    161.488                      1.1694            36.6643     143.31k   631.515k       22.0245M/s   13.4275k   55.2785M   87.2704M         138.192    36.5699/s 3.19147G/s     101.983M               161.489                1.16858          1        36.5699/s [BEST: throughput=  0.02 GB/s doc_throughput=    36 docs/s instructions=   101982285 cycles=    87208775 branch_miss=  143362 cache_miss=   13201 cache_ref=  55274776 items=         1 avg_time=  27344926 ns]
top_tweet<rapidjson_insitu>/manual_time                 20514807 ns     20612624 ns           34         134.828k           30.7996M         13.332k       37.3465M    65.5587M              103.812           48.7709       3.19736G          71.3724M                    113.018                     1.08868            48.7709    135.347k   631.515k       29.3573M/s   13.3559k   37.3488M   65.5852M         103.854    48.7453/s 3.19697G/s     71.3725M               113.018                1.08824          1        48.7453/s [BEST: throughput=  0.03 GB/s doc_throughput=    48 docs/s instructions=    71372414 cycles=    65558698 branch_miss=  134828 cache_miss=   13332 cache_ref=  37346522 items=         1 avg_time=  20514806 ns]
top_tweet<nlohmann_json>/manual_time                   121069124 ns    121168864 ns            6         1.16552M           5.22044M        394.279k       263.009M     386.73M              612.384           8.26653       3.19691G          442.938M                    701.389                     1.14534            8.26653    1.16494M   631.515k       4.97451M/s   394.423k   263.009M   387.009M         612.826    8.25974/s 3.19659G/s     442.937M               701.388                1.14452          1        8.25974/s [BEST: throughput=  0.01 GB/s doc_throughput=     8 docs/s instructions=   442937605 cycles=   386729972 branch_miss= 1165523 cache_miss=  394279 cache_ref= 263009246 items=         1 avg_time= 121069123 ns]
