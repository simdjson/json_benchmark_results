run_benchmark: v0.8.0 /home/jkeiser/simdjson_benchmark_results/v0.8.0/skylake-x-clang11-debug.json -DCMAKE_BUILD_TYPE=Debug
git reset --hard v0.8.0
HEAD is now at c96ff018 Version 0.8.
cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The CXX compiler identification is Clang 11.0.0
-- The C compiler identification is Clang 11.0.0
-- Check for working CXX compiler: /usr/bin/clang++-11
-- Check for working CXX compiler: /usr/bin/clang++-11 -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Check for working C compiler: /usr/bin/clang-11
-- Check for working C compiler: /usr/bin/clang-11 -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed
-- Check if compiler accepts -pthread
-- Check if compiler accepts -pthread - yes
-- Found Threads: TRUE  
-- Looking for fork
-- Looking for fork - found
-- Looking for wait
-- Looking for wait - found
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- Found Git: /usr/bin/git (found version "2.27.0") 
-- git Version: v0.2.1-c96ff018
-- Version: 0.2.1
-- Performing Test HAVE_CXX_FLAG_STD_CXX11
-- Performing Test HAVE_CXX_FLAG_STD_CXX11 - Success
-- Performing Test HAVE_CXX_FLAG_WALL
-- Performing Test HAVE_CXX_FLAG_WALL - Success
-- Performing Test HAVE_CXX_FLAG_WEXTRA
-- Performing Test HAVE_CXX_FLAG_WEXTRA - Success
-- Performing Test HAVE_CXX_FLAG_WSHADOW
-- Performing Test HAVE_CXX_FLAG_WSHADOW - Success
-- Performing Test HAVE_CXX_FLAG_WERROR
-- Performing Test HAVE_CXX_FLAG_WERROR - Success
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32 - Success
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED - Success
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WD654
-- Performing Test HAVE_CXX_FLAG_WD654 - Failed
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY - Success
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES -- failed to compile
-- Performing Test HAVE_CXX_FLAG_COVERAGE
-- Performing Test HAVE_CXX_FLAG_COVERAGE - Success
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Performing Test USE_BOOST_JSON
-- Performing Test USE_BOOST_JSON - Failed
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Found Python3: /usr/bin/python3.8 (found version "3.8.6") found components: Interpreter 
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 10
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
Scanning dependencies of target benchmark
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_api_internal.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_name.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_name.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_register.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_register.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_runner.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_runner.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/colorprint.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/colorprint.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/commandlineflags.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/commandlineflags.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/complexity.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/complexity.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/console_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/console_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/counter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/counter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/csv_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/csv_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/json_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/json_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/sleep.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sleep.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/statistics.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/statistics.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/string_util.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/string_util.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/sysinfo.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sysinfo.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/timers.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/timers.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -P CMakeFiles/benchmark.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/benchmark.dir/link.txt --verbose=1
/usr/bin/ar qc libbenchmarkd.a  CMakeFiles/benchmark.dir/benchmark.cc.o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o CMakeFiles/benchmark.dir/benchmark_name.cc.o CMakeFiles/benchmark.dir/benchmark_register.cc.o CMakeFiles/benchmark.dir/benchmark_runner.cc.o CMakeFiles/benchmark.dir/colorprint.cc.o CMakeFiles/benchmark.dir/commandlineflags.cc.o CMakeFiles/benchmark.dir/complexity.cc.o CMakeFiles/benchmark.dir/console_reporter.cc.o CMakeFiles/benchmark.dir/counter.cc.o CMakeFiles/benchmark.dir/csv_reporter.cc.o CMakeFiles/benchmark.dir/json_reporter.cc.o CMakeFiles/benchmark.dir/reporter.cc.o CMakeFiles/benchmark.dir/sleep.cc.o CMakeFiles/benchmark.dir/statistics.cc.o CMakeFiles/benchmark.dir/string_util.cc.o CMakeFiles/benchmark.dir/sysinfo.cc.o CMakeFiles/benchmark.dir/timers.cc.o
/usr/bin/ranlib libbenchmarkd.a
[ 80%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
Scanning dependencies of target generated-data
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated && /usr/bin/ruby genfeaturejson.rb /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-miss.json ...
[ 80%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/clang++-11  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/include  -g -fPIC   -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -pthread -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/clang++-11 -fPIC -g  -shared -Wl,-soname,libsimdjson.so.7 -o ../libsimdjson.so.7.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.7.0.0 ../libsimdjson.so.7 ../libsimdjson.so
[ 80%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
Scanning dependencies of target yyjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/clang-11  -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src  -g   -o CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o   -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src/yyjson.c
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -P CMakeFiles/yyjson.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -E cmake_link_script CMakeFiles/yyjson.dir/link.txt --verbose=1
/usr/bin/ar qc libyyjson.a  CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o
/usr/bin/ranlib libyyjson.a
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/clang++-11  -DRAPIDJSON_HAS_STDSTRING -DSAJSON_UNSORTED_OBJECT_KEYS -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_COMPETITION_NLOHMANN_JSON -DSIMDJSON_COMPETITION_RAPIDJSON -DSIMDJSON_COMPETITION_SAJSON -DSIMDJSON_COMPETITION_YYJSON -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/rapidjson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/sajson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/json  -g   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/clang++-11  -g   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.7.0.0 ../_deps/google_benchmarks/src/libbenchmarkd.a ../dependencies/libyyjson.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.8.0/skylake-x-clang11-debug.json --benchmark_out_format=json
2021-01-24 20:48:54
Running benchmark/bench_ondemand
Run on (4 X 3200 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 1024 KiB (x4)
  L3 Unified 8448 KiB (x1)
Load Average: 1.00, 0.91, 0.55
***WARNING*** CPU scaling is enabled, the benchmark real time measurements may be noisy and will incur extra overhead.
***WARNING*** Library was built as DEBUG. Timings may be affected.
simdjson::dom implementation:      haswell
simdjson::ondemand implementation: fallback

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                25327240 ns     25399589 ns           28          18.424k           24.9414M              29        47.933k    80.7784M              127.912           39.4946       3.19031G          78.2262M                    123.871                    0.968405           3.94946k    18.4593k   631.515k       23.7791M/s    73.6071   48.0479k   80.7998M         127.946    39.4832/s 3.19023G/s     78.2262M               123.871               0.968149        100       3.94832k/s [BEST: throughput=  0.02 GB/s doc_throughput=    39 docs/s instructions=    78226215 cycles=    80778416 branch_miss=   18424 cache_miss=      29 cache_ref=     47933 items=       100 avg_time=  25327239 ns]
partial_tweets<simdjson_ondemand>/manual_time           19426749 ns     19494256 ns           36           7.984k           32.5192M               5        36.737k    61.9604M              98.1139            51.494       3.19059G          63.7559M                    100.957                     1.02898            5.1494k    8.00275k   631.515k       31.0016M/s    20.9722   36.6419k   61.9739M         98.1353    51.4754/s 3.19013G/s     63.7559M               100.957                1.02875        100       5.14754k/s [BEST: throughput=  0.03 GB/s doc_throughput=    51 docs/s instructions=    63755877 cycles=    61960400 branch_miss=    7984 cache_miss=       5 cache_ref=     36737 items=       100 avg_time=  19426748 ns]
partial_tweets<yyjson>/manual_time                       2741843 ns      2820979 ns          255          12.556k            263.36M             270        29.381k    7.63998M              12.0979           417.029       3.18609G          10.5728M                     16.742                     1.38388           41.7029k    11.6442k   631.515k       219.655M/s    704.286   24.5707k   7.78834M         12.3328    364.718/s 2.84055G/s     10.5733M               16.7427                1.35758        100       36.4718k/s [BEST: throughput=  0.26 GB/s doc_throughput=   417 docs/s instructions=    10572819 cycles=     7639979 branch_miss=   12556 cache_miss=     270 cache_ref=     29381 items=       100 avg_time=   2741843 ns]
partial_tweets<yyjson_insitu>/manual_time                2465299 ns      2528626 ns          284          10.708k           273.609M          2.108k        15.457k    7.34726M              11.6343           433.259       3.18326G          10.5725M                    16.7414                     1.43897           43.3259k    11.3402k   631.515k       244.295M/s    107.208   10.4621k    7.4638M         11.8189     405.63/s 3.02754G/s     10.5727M               16.7418                1.41653        100        40.563k/s [BEST: throughput=  0.27 GB/s doc_throughput=   433 docs/s instructions=    10572452 cycles=     7347256 branch_miss=   10708 cache_miss=    2108 cache_ref=     15457 items=       100 avg_time=   2465298 ns]
partial_tweets<sajson>/manual_time                       3762353 ns      3826790 ns          186           42.29k           168.212M               2        14.015k    11.9861M              18.9799           266.362       3.19263G          26.9812M                    42.7245                     2.25105           26.6362k    42.3391k   631.515k       160.075M/s    13.6613   14.1558k   11.9997M         19.0015    265.791/s 3.18942G/s     26.9812M               42.7245                2.24848        100       26.5791k/s [BEST: throughput=  0.17 GB/s doc_throughput=   266 docs/s instructions=    26981170 cycles=    11986062 branch_miss=   42290 cache_miss=       2 cache_ref=     14015 items=       100 avg_time=   3762352 ns]
partial_tweets<rapidjson>/manual_time                   14506449 ns     14573619 ns           48          67.538k           44.3067M             149        23.612k     45.464M               71.992           70.1594       3.18973G          105.146M                    166.497                     2.31272           7.01594k    67.8288k   631.515k       41.5167M/s    255.271   12.9385k   45.6306M         72.2558    68.9349/s 3.14554G/s     105.146M               166.499                 2.3043        100       6.89349k/s [BEST: throughput=  0.04 GB/s doc_throughput=    70 docs/s instructions=   105145608 cycles=    45464041 branch_miss=   67538 cache_miss=     149 cache_ref=     23612 items=       100 avg_time=  14506448 ns]
partial_tweets<rapidjson_insitu>/manual_time            11137890 ns     11201041 ns           63          52.742k           57.4866M              60        15.728k    35.0469M              55.4966           91.0297       3.19031G          76.8333M                    121.665                      2.1923           9.10297k    52.9783k   631.515k        54.073M/s    141.048   10.8231k   35.1638M         55.6816    89.7836/s 3.15713G/s     76.8336M               121.666                2.18502        100       8.97836k/s [BEST: throughput=  0.06 GB/s doc_throughput=    91 docs/s instructions=    76833310 cycles=    35046912 branch_miss=   52742 cache_miss=      60 cache_ref=     15728 items=       100 avg_time=  11137889 ns]
partial_tweets<nlohmann_json>/manual_time               69823460 ns     69914786 ns           10         428.015k           9.09076M              66        101.67k    221.654M              350.987           14.3952       3.19074G           425.79M                    674.236                     1.92097           1.43952k    437.123k   631.515k       8.62546M/s      332.2   139.131k   222.776M         352.765    14.3218/s 3.19056G/s     426.135M               674.783                1.91284        100       1.43218k/s [BEST: throughput=  0.01 GB/s doc_throughput=    14 docs/s instructions=   425790238 cycles=   221653585 branch_miss=  428015 cache_miss=      66 cache_ref=    101670 items=       100 avg_time=  69823459 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                3341771737 ns   3347631983 ns            1         3.97895M           13.7648M        6.91802M       7.00742M     10.663G              231.811          0.299242       3.19083G          14.5572G                    316.468                      1.3652           299.242k    3.97895M   45.9988M       13.1271M/s   6.91802M   7.00742M    10.663G         231.811   0.299242/s 3.19083G/s     14.5572G               316.468                 1.3652      1000k       299.242k/s [BEST: throughput=  0.01 GB/s doc_throughput=     0 docs/s instructions= 14557150075 cycles= 10663010215 branch_miss= 3978948 cache_miss= 6918021 cache_ref=   7007419 items=   1000000 avg_time=3341771737 ns]
large_random<simdjson_ondemand>/manual_time           1921636555 ns   1927525458 ns            1         912.386k           23.9373M        3.57865M       3.63736M    6.13173G              133.302           0.52039       3.19089G          8.50871G                    184.977                     1.38765            520.39k    912.386k   45.9988M       22.8284M/s   3.57865M   3.63736M   6.13173G         133.302    0.52039/s 3.19089G/s     8.50871G               184.977                1.38765      1000k        520.39k/s [BEST: throughput=  0.02 GB/s doc_throughput=     0 docs/s instructions=  8508706035 cycles=  6131728005 branch_miss=  912386 cache_miss= 3578652 cache_ref=   3637361 items=   1000000 avg_time=1921636555 ns]
large_random<simdjson_ondemand_unordered>/manual_time 1941863248 ns   1947796588 ns            1         912.358k            23.688M        3.57767M       3.62616M    6.19637G              134.707          0.514969       3.19094G          8.57171G                    186.346                     1.38334           514.969k    912.358k   45.9988M       22.5906M/s   3.57767M   3.62616M   6.19637G         134.707   0.514969/s 3.19094G/s     8.57171G               186.346                1.38334      1000k       514.969k/s [BEST: throughput=  0.02 GB/s doc_throughput=     0 docs/s instructions=  8571706041 cycles=  6196370915 branch_miss=  912358 cache_miss= 3577668 cache_ref=   3626165 items=   1000000 avg_time=1941863248 ns]
large_random<yyjson>/manual_time                       425434948 ns    431356175 ns            2         667.808k           108.132M        4.21009M       4.34258M    1.21748G              26.4677           2.35075       2.86199G          2.94182G                    63.9542                     2.41632           2.35075M    668.678k   45.9988M       103.113M/s   4.21791M   4.34765M   1.21757G         26.4696    2.35054/s 2.86194G/s     2.94182G               63.9542                2.41614      1000k       2.35054M/s [BEST: throughput=  0.11 GB/s doc_throughput=     2 docs/s instructions=  2941817085 cycles=  1217480375 branch_miss=  667808 cache_miss= 4210089 cache_ref=   4342579 items=   1000000 avg_time= 425434948 ns]
large_random<yyjson_insitu>/manual_time                399597964 ns    405529811 ns            2         664.376k           115.118M        3.49445M       3.68811M    1.17543G              25.5536           2.50264       2.94169G           2.9357G                    63.8212                     2.49754           2.50264M    665.462k   45.9988M        109.78M/s   3.49409M   3.68819M   1.17555G         25.5562    2.50252/s 2.94184G/s      2.9357G               63.8212                2.49729      1000k       2.50252M/s [BEST: throughput=  0.12 GB/s doc_throughput=     2 docs/s instructions=  2935696265 cycles=  1175433106 branch_miss=  664376 cache_miss= 3494455 cache_ref=   3688111 items=   1000000 avg_time= 399597963 ns]
large_random<sajson>/manual_time                       919383105 ns    925308068 ns            1         1.74208M           50.0322M        5.55684M       5.58925M    2.93282G              63.7587           1.08769       3.18999G          7.02395G                    152.699                     2.39495           1087.69k    1.74208M   45.9988M       47.7144M/s   5.55684M   5.58925M   2.93282G         63.7587    1.08769/s 3.18999G/s     7.02395G               152.699                2.39495      1000k       1087.69k/s [BEST: throughput=  0.05 GB/s doc_throughput=     1 docs/s instructions=  7023953691 cycles=  2932821524 branch_miss= 1742076 cache_miss= 5556835 cache_ref=   5589253 items=   1000000 avg_time= 919383105 ns]
large_random<rapidjson>/manual_time                   2063744782 ns   2069644669 ns            1         6.35878M            22.289M        4.37197M        4.9377M    6.51672G              141.672          0.484556       3.15772G          14.2761G                    310.358                     2.19069           484.556k    6.35878M   45.9988M       21.2564M/s   4.37197M    4.9377M   6.51672G         141.672   0.484556/s 3.15772G/s     14.2761G               310.358                2.19069      1000k       484.556k/s [BEST: throughput=  0.02 GB/s doc_throughput=     0 docs/s instructions= 14276111004 cycles=  6516721518 branch_miss= 6358780 cache_miss= 4371967 cache_ref=   4937703 items=   1000000 avg_time=2063744782 ns]
large_random<rapidjson_lossless>/manual_time          2491294132 ns   2497148187 ns            1         7.35923M           18.4638M        4.39604M       4.96277M    7.88084G              171.327          0.401398       3.16335G          17.2519G                    375.051                     2.18909           401.398k    7.35923M   45.9988M       17.6085M/s   4.39604M   4.96277M   7.88084G         171.327   0.401398/s 3.16335G/s     17.2519G               375.051                2.18909      1000k       401.398k/s [BEST: throughput=  0.02 GB/s doc_throughput=     0 docs/s instructions= 17251864062 cycles=  7880837642 branch_miss= 7359226 cache_miss= 4396042 cache_ref=   4962772 items=   1000000 avg_time=2491294132 ns]
large_random<rapidjson_insitu>/manual_time            1981873539 ns   1987709185 ns            1         6.42348M           23.2097M        5.06777M       5.66082M     6.2552G              135.986          0.504573        3.1562G          13.5461G                    294.489                     2.16558           504.573k    6.42348M   45.9988M       22.1345M/s   5.06777M   5.66082M    6.2552G         135.986   0.504573/s  3.1562G/s     13.5461G               294.489                2.16558      1000k       504.573k/s [BEST: throughput=  0.02 GB/s doc_throughput=     0 docs/s instructions= 13546110573 cycles=  6255197051 branch_miss= 6423480 cache_miss= 5067765 cache_ref=   5660818 items=   1000000 avg_time=1981873539 ns]
large_random<nlohmann_json>/manual_time               10869417673 ns   10875091270 ns            1         37.4083M           4.23194M         30.497M       30.9922M     34.667G               753.65         0.0920012        3.1894G          63.4372G                   1.37911k                      1.8299           92.0012k    37.4083M   45.9988M        4.0359M/s    30.497M   30.9922M    34.667G          753.65  0.0920012/s  3.1894G/s     63.4372G              1.37911k                 1.8299      1000k       92.0012k/s [BEST: throughput=  0.00 GB/s doc_throughput=     0 docs/s instructions= 63437175399 cycles= 34666966058 branch_miss=37408295 cache_miss=30496999 cache_ref=  30992178 items=   1000000 avg_time=10869417673 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                      4710633219 ns   4728838026 ns            1         3.74447M           29.1479M        10.3405M       10.5087M    15.0306G              109.469          0.212286       3.19078G           17.133G                    124.781                     1.13987           111.299k    3.74447M   137.305M       27.7976M/s   10.3405M   10.5087M   15.0306G         109.469   0.212286/s 3.19078G/s      17.133G               124.781                1.13987   524.288k       111.299k/s [BEST: throughput=  0.03 GB/s doc_throughput=     0 docs/s instructions= 17133005748 cycles= 15030614879 branch_miss= 3744469 cache_miss=10340502 cache_ref=  10508696 items=    524288 avg_time=4710633219 ns]
kostya<simdjson_ondemand>/manual_time                 3352299771 ns   3370481671 ns            1         1.61476M           40.9584M        6.48008M       6.59862M    10.6964G              77.9025          0.298303       3.19076G          12.3057G                    89.6227                     1.15045           156.397k    1.61476M   137.305M        39.061M/s   6.48008M   6.59862M   10.6964G         77.9025   0.298303/s 3.19076G/s     12.3057G               89.6227                1.15045   524.288k       156.397k/s [BEST: throughput=  0.04 GB/s doc_throughput=     0 docs/s instructions= 12305650325 cycles= 10696398168 branch_miss= 1614758 cache_miss= 6480076 cache_ref=   6598618 items=    524288 avg_time=3352299771 ns]
kostya<yyjson>/manual_time                             561340808 ns    579533110 ns            1         971.508k           244.602M         8.5192M       8.83269M    1.55652G              11.3362           1.78145       2.77286G          3.23633G                    23.5704                     2.07921           933.992k    971.508k   137.305M        233.27M/s    8.5192M   8.83269M   1.55652G         11.3362    1.78145/s 2.77286G/s     3.23633G               23.5704                2.07921   524.288k       933.992k/s [BEST: throughput=  0.24 GB/s doc_throughput=     1 docs/s instructions=  3236330752 cycles=  1556517576 branch_miss=  971508 cache_miss= 8519196 cache_ref=   8832692 items=    524288 avg_time= 561340808 ns]
kostya<yyjson_insitu>/manual_time                      484180120 ns    502437050 ns            2         970.706k           283.604M        6.37942M         6.833M    1.42972G              10.4127            2.0655       2.95309G          3.21806G                    23.4373                     2.25083           1082.92k    970.933k   137.305M       270.445M/s   6.37811M    6.8045M   1.42988G         10.4139    2.06535/s  2.9532G/s     3.21806G               23.4373                2.25058   524.288k       1082.84k/s [BEST: throughput=  0.28 GB/s doc_throughput=     2 docs/s instructions=  3218061024 cycles=  1429719148 branch_miss=  970706 cache_miss= 6379423 cache_ref=   6832997 items=    524288 avg_time= 484180120 ns]
kostya<sajson>/manual_time                            1300183667 ns   1318461619 ns            1         11.8228M           105.604M        8.51814M       8.55306M    4.14813G              30.2111          0.769122       3.19042G          8.77973G                    63.9433                     2.11655           403.241k    11.8228M   137.305M       100.712M/s   8.51814M   8.55306M   4.14813G         30.2111   0.769122/s 3.19042G/s     8.77973G               63.9433                2.11655   524.288k       403.241k/s [BEST: throughput=  0.11 GB/s doc_throughput=     0 docs/s instructions=  8779729997 cycles=  4148131757 branch_miss=11822824 cache_miss= 8518144 cache_ref=   8553055 items=    524288 avg_time=1300183667 ns]
kostya<rapidjson>/manual_time                         2644872467 ns   2663085271 ns            1         16.9055M           51.9137M         5.2897M       5.81112M    8.34117G              60.7492           0.37809       3.15371G          16.8282G                    122.561                     2.01748           198.228k    16.9055M   137.305M       49.5087M/s    5.2897M   5.81112M   8.34117G         60.7492    0.37809/s 3.15371G/s     16.8282G               122.561                2.01748   524.288k       198.228k/s [BEST: throughput=  0.05 GB/s doc_throughput=     0 docs/s instructions= 16828189334 cycles=  8341172373 branch_miss=16905501 cache_miss= 5289702 cache_ref=   5811125 items=    524288 avg_time=2644872467 ns]
kostya<rapidjson_lossless>/manual_time                2888964198 ns   2907177159 ns            1         16.5442M           47.5274M        5.25409M        5.7917M    9.12098G              66.4286          0.346145       3.15718G           18.553G                    135.123                     2.03411            181.48k    16.5442M   137.305M       45.3257M/s   5.25409M    5.7917M   9.12098G         66.4286   0.346145/s 3.15718G/s      18.553G               135.123                2.03411   524.288k        181.48k/s [BEST: throughput=  0.05 GB/s doc_throughput=     0 docs/s instructions= 18553028665 cycles=  9120976673 branch_miss=16544230 cache_miss= 5254092 cache_ref=   5791704 items=    524288 avg_time=2888964198 ns]
kostya<rapidjson_insitu>/manual_time                  2439724125 ns   2457926774 ns            1          15.467M           56.2789M        7.34787M       7.89179M    7.68719G              55.9862          0.409882       3.15084G          15.3804G                    112.016                     2.00078           214.896k     15.467M   137.305M       53.6717M/s   7.34787M   7.89179M   7.68719G         55.9862   0.409882/s 3.15084G/s     15.3804G               112.016                2.00078   524.288k       214.896k/s [BEST: throughput=  0.06 GB/s doc_throughput=     0 docs/s instructions= 15380350411 cycles=  7687189081 branch_miss=15467014 cache_miss= 7347872 cache_ref=   7891790 items=    524288 avg_time=2439724125 ns]
kostya<nlohmann_json>/manual_time                     16860443104 ns   16878359736 ns            1         58.9695M           8.14362M        45.1963M        45.835M       53.8G              391.829         0.0593104        3.1909G          100.398G                    731.208                     1.86614           31.0957k    58.9695M   137.305M       7.76636M/s   45.1963M    45.835M      53.8G         391.829  0.0593104/s  3.1909G/s     100.398G               731.208                1.86614   524.288k       31.0957k/s [BEST: throughput=  0.01 GB/s doc_throughput=     0 docs/s instructions=100398446683 cycles= 53800048060 branch_miss=58969486 cache_miss=45196302 cache_ref=  45834951 items=    524288 avg_time=16860443104 ns]
distinct_user_id<simdjson_dom>/manual_time              25020779 ns     25127095 ns           28          17.112k           25.2487M             200        48.371k    79.7994M              126.362           39.9811       3.19047G          76.3623M                    120.919                    0.956929           4.59783k    17.1184k   631.515k       24.0704M/s    215.607   48.5067k   79.8233M           126.4    39.9668/s 3.19028G/s     76.3623M               120.919               0.956642        115       4.59618k/s [BEST: throughput=  0.03 GB/s doc_throughput=    39 docs/s instructions=    76362314 cycles=    79799369 branch_miss=   17112 cache_miss=     200 cache_ref=     48371 items=       115 avg_time=  25020778 ns]
distinct_user_id<simdjson_ondemand>/manual_time         19276825 ns     19373213 ns           36           7.494k           32.7716M              24        33.298k    61.4842M              97.3599           51.8936       3.19064G          62.4741M                    98.9274                      1.0161           5.96776k    7.52467k   631.515k       31.2427M/s    29.1944   33.1234k   61.4981M         97.3818    51.8758/s 3.19026G/s     62.4741M               98.9274                1.01587        115       5.96571k/s [BEST: throughput=  0.03 GB/s doc_throughput=    51 docs/s instructions=    62474138 cycles=    61484244 branch_miss=    7494 cache_miss=      24 cache_ref=     33298 items=       115 avg_time=  19276824 ns]
distinct_user_id<yyjson>/manual_time                     2373035 ns      2485028 ns          300          10.634k           272.222M          7.294k        28.345k    7.40675M              11.7285           431.061       3.19276G          10.3045M                     16.317                     1.39123            49.572k     10.952k   631.515k       253.793M/s   6.52685k    28.022k   7.46155M         11.8153    421.401/s 3.14431G/s     10.3045M               16.3171                1.38101        115       48.4611k/s [BEST: throughput=  0.27 GB/s doc_throughput=   431 docs/s instructions=    10304459 cycles=     7406751 branch_miss=   10634 cache_miss=    7294 cache_ref=     28345 items=       115 avg_time=   2373035 ns]
distinct_user_id<yyjson_insitu>/manual_time              2431568 ns      2528963 ns          288          11.104k            276.92M          1.496k        15.083k    7.26056M               11.497           438.501       3.18376G           10.304M                    16.3163                     1.41917           50.4277k    11.5054k   631.515k       247.684M/s     105.34   10.9337k   7.35753M         11.6506    411.257/s 3.02584G/s     10.3043M               16.3167                 1.4005        115       47.2946k/s [BEST: throughput=  0.28 GB/s doc_throughput=   438 docs/s instructions=    10303997 cycles=     7260555 branch_miss=   11104 cache_miss=    1496 cache_ref=     15083 items=       115 avg_time=   2431567 ns]
distinct_user_id<sajson>/manual_time                     3699364 ns      3795945 ns          189          42.198k           171.186M             103        13.974k    11.7779M              18.6502           271.072       3.19265G          26.5515M                    42.0442                     2.25435           31.1733k    42.3458k   631.515k       162.801M/s    130.011   14.1322k   11.7987M         18.6832    270.317/s 3.18938G/s     26.5515M               42.0442                2.25038        115       31.0864k/s [BEST: throughput=  0.17 GB/s doc_throughput=   271 docs/s instructions=    26551518 cycles=    11777884 branch_miss=   42198 cache_miss=     103 cache_ref=     13974 items=       115 avg_time=   3699364 ns]
distinct_user_id<rapidjson>/manual_time                 14305022 ns     14405120 ns           49          66.011k           44.8371M          4.273k        23.526k    44.9403M              71.1627           70.9992       3.19073G          104.008M                    164.696                     2.31435           8.16491k    66.1962k   631.515k       42.1013M/s   1.46035k   14.9902k   45.0902M            71.4    69.9055/s 3.15205G/s     104.008M               164.696                2.30667        115       8.03913k/s [BEST: throughput=  0.04 GB/s doc_throughput=    70 docs/s instructions=   104007723 cycles=    44940304 branch_miss=   66011 cache_miss=    4273 cache_ref=     23526 items=       115 avg_time=  14305021 ns]
distinct_user_id<rapidjson_insitu>/manual_time          10845395 ns     10942987 ns           65          51.582k           58.3039M          4.691k        15.866k    34.5545M              54.7168           92.3239       3.19021G          75.7255M                    119.911                     2.19148           10.6172k    51.7013k   631.515k       55.5314M/s   6.38755k   15.8178k   34.6005M         54.7897     92.205/s 3.19034G/s     75.7254M               119.911                2.18856        115       10.6036k/s [BEST: throughput=  0.06 GB/s doc_throughput=    92 docs/s instructions=    75725513 cycles=    34554499 branch_miss=   51582 cache_miss=    4691 cache_ref=     15866 items=       115 avg_time=  10845395 ns]
distinct_user_id<nlohmann_json>/manual_time             66493645 ns     66611901 ns           11         384.239k           9.53263M          2.278k       101.852k    211.388M              334.732           15.0949       3.19088G          407.785M                    645.724                     1.92908           1.73591k    387.066k   631.515k        9.0574M/s    264.364   110.779k   212.159M         335.952     15.039/s 3.19066G/s     406.473M               643.647                1.91589        115       1.72949k/s [BEST: throughput=  0.01 GB/s doc_throughput=    15 docs/s instructions=   407784534 cycles=   211388366 branch_miss=  384239 cache_miss=    2278 cache_ref=    101852 items=       115 avg_time=  66493644 ns]
find_tweet<simdjson_dom>/manual_time                    24689381 ns     24766877 ns           28          15.619k           25.5844M               1        45.617k    78.7488M              124.698           40.5127       3.19033G          74.2435M                    117.564                    0.942789            40.5127    15.6531k   631.515k       24.3935M/s    42.4643   45.6532k   78.7664M         124.726    40.5032/s 3.19029G/s     74.2435M               117.564               0.942579          1        40.5032/s [BEST: throughput=  0.03 GB/s doc_throughput=    40 docs/s instructions=    74243542 cycles=    78748811 branch_miss=   15619 cache_miss=       1 cache_ref=     45617 items=         1 avg_time=  24689380 ns]
find_tweet<simdjson_ondemand>/manual_time               18023315 ns     18099798 ns           39           3.252k           35.0461M              17        19.796k    57.4929M              91.0397           55.4953       3.19059G           54.934M                    86.9877                    0.955492            55.4953    3.28482k   631.515k       33.4156M/s    19.3333   20.0503k   57.4993M         91.0498    55.4837/s 3.19027G/s      54.934M               86.9877               0.955386          1        55.4837/s [BEST: throughput=  0.04 GB/s doc_throughput=    55 docs/s instructions=    54934024 cycles=    57492907 branch_miss=    3252 cache_miss=      17 cache_ref=     19796 items=         1 avg_time=  18023315 ns]
find_tweet<yyjson>/manual_time                           2651721 ns      2735346 ns          269          12.683k           272.601M             217        28.336k    7.39659M              11.7125           431.663       3.19283G          10.0177M                     15.863                     1.35437            431.663     11.197k   631.515k        227.12M/s    391.636   21.3888k   7.50543M         11.8848    377.114/s  2.8304G/s     10.0182M               15.8638                 1.3348          1        377.114/s [BEST: throughput=  0.27 GB/s doc_throughput=   431 docs/s instructions=    10017750 cycles=     7396593 branch_miss=   12683 cache_miss=     217 cache_ref=     28336 items=         1 avg_time=   2651720 ns]
find_tweet<yyjson_insitu>/manual_time                    2381476 ns      2445098 ns          294          11.071k           282.721M              14        15.292k     7.1166M              11.2691           447.687       3.18601G          10.0174M                    15.8624                     1.40761            447.687    11.0903k   631.515k       252.893M/s    20.1327   6.93962k   7.20003M         11.4012    419.908/s 3.02335G/s     10.0176M               15.8629                1.39133          1        419.908/s [BEST: throughput=  0.28 GB/s doc_throughput=   447 docs/s instructions=    10017373 cycles=     7116603 branch_miss=   11071 cache_miss=      14 cache_ref=     15292 items=         1 avg_time=   2381475 ns]
find_tweet<sajson>/manual_time                           3634385 ns      3702877 ns          193          42.153k           174.175M               0        13.489k    11.5758M              18.3302           275.805       3.19266G          26.1128M                    41.3495                     2.25581            275.805    42.2466k   631.515k       165.712M/s    16.8187   13.5705k   11.5921M          18.356     275.15/s 3.18957G/s     26.1128M               41.3495                2.25264          1         275.15/s [BEST: throughput=  0.17 GB/s doc_throughput=   275 docs/s instructions=    26112809 cycles=    11575800 branch_miss=   42153 cache_miss=       0 cache_ref=     13489 items=         1 avg_time=   3634385 ns]
find_tweet<rapidjson>/manual_time                       14100378 ns     14169593 ns           50          64.627k           45.4933M          5.003k        22.076k    44.2925M              70.1369           72.0384       3.19076G          102.589M                    162.449                     2.31618            72.0384    64.9514k   631.515k       42.7123M/s    1.4241k   11.7565k   44.4312M         70.3565    70.9201/s 3.15106G/s      102.59M                162.45                2.30896          1        70.9201/s [BEST: throughput=  0.05 GB/s doc_throughput=    72 docs/s instructions=   102589259 cycles=    44292487 branch_miss=   64627 cache_miss=    5003 cache_ref=     22076 items=         1 avg_time=  14100378 ns]
find_tweet<rapidjson_insitu>/manual_time                10642086 ns     10711617 ns           66          50.931k           59.4152M          6.891k        14.535k    33.9149M              53.7041           94.0836       3.19084G          74.3362M                    117.711                     2.19184            94.0836    51.2839k   631.515k       56.5923M/s    6.2048k   14.7075k   33.9481M         53.7565    93.9665/s 3.18998G/s     74.3364M               117.711                2.18971          1        93.9665/s [BEST: throughput=  0.06 GB/s doc_throughput=    94 docs/s instructions=    74336196 cycles=    33914914 branch_miss=   50931 cache_miss=    6891 cache_ref=     14535 items=         1 avg_time=  10642085 ns]
find_tweet<nlohmann_json>/manual_time                   57712865 ns     57801957 ns           12         291.264k           10.9936M          1.608k        80.205k    183.293M              290.243           17.4084       3.19083G          357.652M                     566.34                     1.95126            17.4084    295.436k   631.515k       10.4354M/s     212.75   87.4005k   184.139M         291.582    17.3272/s  3.1906G/s     356.327M               564.241                 1.9351          1        17.3272/s [BEST: throughput=  0.01 GB/s doc_throughput=    17 docs/s instructions=   357651895 cycles=   183292811 branch_miss=  291264 cache_miss=    1608 cache_ref=     80205 items=         1 avg_time=  57712865 ns]
top_tweet<simdjson_dom>/manual_time                     24852854 ns     24933544 ns           28          16.163k           25.4168M             224        47.324k    79.2685M              125.521           40.2474       3.19035G          75.0759M                    118.882                    0.947109            40.2474    16.2075k   631.515k        24.233M/s    128.143   47.2529k   79.2867M          125.55    40.2368/s 3.19024G/s     75.0759M               118.882               0.946891          1        40.2368/s [BEST: throughput=  0.03 GB/s doc_throughput=    40 docs/s instructions=    75075876 cycles=    79268453 branch_miss=   16163 cache_miss=     224 cache_ref=     47324 items=         1 avg_time=  24852854 ns]
top_tweet<simdjson_ondemand>/manual_time                19181888 ns     19253783 ns           36            7.68k           32.9373M               4        33.025k    61.1677M              96.8587            52.156       3.19026G          62.2624M                    98.5921                      1.0179             52.156      7.671k   631.515k       31.3973M/s    11.6944   33.1696k   61.1941M         96.9004    52.1325/s  3.1902G/s     62.2624M               98.5921                1.01746          1        52.1325/s [BEST: throughput=  0.03 GB/s doc_throughput=    52 docs/s instructions=    62262388 cycles=    61167713 branch_miss=    7680 cache_miss=       4 cache_ref=     33025 items=         1 avg_time=  19181887 ns]
top_tweet<simdjson_ondemand_forward_only>/manual_time   19290786 ns     19363077 ns           36           7.717k           32.7561M               5        33.604k     61.513M              97.4055           51.8691       3.19063G           63.043M                    99.8283                     1.02487            51.8691    7.81664k   631.515k       31.2201M/s    18.8889   33.6118k   61.5396M         97.4475    51.8382/s  3.1901G/s      63.043M               99.8283                1.02443          1        51.8382/s [BEST: throughput=  0.03 GB/s doc_throughput=    51 docs/s instructions=    63043046 cycles=    61513020 branch_miss=    7717 cache_miss=       5 cache_ref=     33604 items=         1 avg_time=  19290785 ns]
top_tweet<yyjson>/manual_time                            2674410 ns      2761867 ns          267          12.586k           270.413M             228        28.621k    7.45658M              11.8075           428.198       3.19289G          10.1204M                    16.0255                     1.35724            428.198    11.4642k   631.515k       225.193M/s    476.498   24.2095k   7.57823M         12.0001    373.914/s 2.83361G/s      10.121M               16.0266                1.33554          1        373.914/s [BEST: throughput=  0.27 GB/s doc_throughput=   428 docs/s instructions=    10120371 cycles=     7456582 branch_miss=   12586 cache_miss=     228 cache_ref=     28621 items=         1 avg_time=   2674410 ns]
top_tweet<yyjson_insitu>/manual_time                     2404425 ns      2475239 ns          292          10.858k           281.935M              57        15.789k    7.15167M              11.3246           446.442        3.1928G          10.1202M                    16.0253                     1.41508            446.442    11.3719k   631.515k        250.48M/s    90.0308   10.0996k   7.27276M         11.5164      415.9/s 3.02474G/s     10.1205M               16.0257                1.39156          1          415.9/s [BEST: throughput=  0.28 GB/s doc_throughput=   446 docs/s instructions=    10120200 cycles=     7151672 branch_miss=   10858 cache_miss=      57 cache_ref=     15789 items=         1 avg_time=   2404424 ns]
top_tweet<sajson>/manual_time                            3669779 ns      3742197 ns          191          42.247k           172.484M               0        13.491k    11.6893M              18.5099           273.127       3.19266G          26.3459M                    41.7185                     2.25385            273.127    42.2751k   631.515k       164.113M/s    11.2984   13.5788k   11.7045M         18.5341    272.496/s 3.18944G/s     26.3459M               41.7185                2.25091          1        272.496/s [BEST: throughput=  0.17 GB/s doc_throughput=   273 docs/s instructions=    26345867 cycles=    11689268 branch_miss=   42247 cache_miss=       0 cache_ref=     13491 items=         1 avg_time=   3669779 ns]
top_tweet<rapidjson>/manual_time                        14252872 ns     14326610 ns           49          65.527k           45.0043M             366        23.217k    44.7652M              70.8853           71.2641       3.19015G          103.591M                    164.036                     2.31411            71.2641    65.9541k   631.515k       42.2553M/s   1.69367k   13.5655k   44.9219M         71.1335    70.1613/s 3.15178G/s     103.592M               164.037                2.30605          1        70.1613/s [BEST: throughput=  0.05 GB/s doc_throughput=    71 docs/s instructions=   103591341 cycles=    44765154 branch_miss=   65527 cache_miss=     366 cache_ref=     23217 items=         1 avg_time=  14252872 ns]
top_tweet<rapidjson_insitu>/manual_time                 10789641 ns     10862949 ns           65           51.56k           58.6294M          4.251k        15.474k    34.3631M              54.4137           92.8394       3.19024G          75.3139M                    119.259                     2.19171            92.8394    51.6781k   631.515k       55.8183M/s   6.27552k   15.3724k   34.4228M         54.5082    92.6815/s 3.19035G/s     75.3141M               119.259                2.18792          1        92.6815/s [BEST: throughput=  0.06 GB/s doc_throughput=    92 docs/s instructions=    75313940 cycles=    34363062 branch_miss=   51560 cache_miss=    4251 cache_ref=     15474 items=         1 avg_time=  10789641 ns]
top_tweet<nlohmann_json>/manual_time                    73666890 ns     73759362 ns           10         484.314k            8.5779M             118       165.988k    234.913M              371.983           13.5831       3.19083G          449.455M                    711.709                     1.91328            13.5831    487.226k   631.515k       8.17545M/s      259.5   167.392k   235.053M         372.205    13.5746/s 3.19075G/s     449.675M               712.058                1.91308          1        13.5746/s [BEST: throughput=  0.01 GB/s doc_throughput=    13 docs/s instructions=   449455173 cycles=   234912910 branch_miss=  484314 cache_miss=     118 cache_ref=    165988 items=         1 avg_time=  73666889 ns]
