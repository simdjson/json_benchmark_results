run_benchmark: v0.8.0 /home/jkeiser/simdjson_benchmark_results/v0.8.0/skylake-x-clang11-debug.json -DCMAKE_BUILD_TYPE=Debug
git reset --hard v0.8.0
HEAD is now at c96ff018 Version 0.8.
cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The CXX compiler identification is Clang 11.0.0
-- The C compiler identification is Clang 11.0.0
-- Check for working CXX compiler: /usr/bin/clang++-11
-- Check for working CXX compiler: /usr/bin/clang++-11 -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Check for working C compiler: /usr/bin/clang-11
-- Check for working C compiler: /usr/bin/clang-11 -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed
-- Check if compiler accepts -pthread
-- Check if compiler accepts -pthread - yes
-- Found Threads: TRUE  
-- Looking for fork
-- Looking for fork - found
-- Looking for wait
-- Looking for wait - found
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- Found Git: /usr/bin/git (found version "2.27.0") 
-- git Version: v0.2.1-c96ff018
-- Version: 0.2.1
-- Performing Test HAVE_CXX_FLAG_STD_CXX11
-- Performing Test HAVE_CXX_FLAG_STD_CXX11 - Success
-- Performing Test HAVE_CXX_FLAG_WALL
-- Performing Test HAVE_CXX_FLAG_WALL - Success
-- Performing Test HAVE_CXX_FLAG_WEXTRA
-- Performing Test HAVE_CXX_FLAG_WEXTRA - Success
-- Performing Test HAVE_CXX_FLAG_WSHADOW
-- Performing Test HAVE_CXX_FLAG_WSHADOW - Success
-- Performing Test HAVE_CXX_FLAG_WERROR
-- Performing Test HAVE_CXX_FLAG_WERROR - Success
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32 - Success
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED - Success
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WD654
-- Performing Test HAVE_CXX_FLAG_WD654 - Failed
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY - Success
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES -- failed to compile
-- Performing Test HAVE_CXX_FLAG_COVERAGE
-- Performing Test HAVE_CXX_FLAG_COVERAGE - Success
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Performing Test USE_BOOST_JSON
-- Performing Test USE_BOOST_JSON - Failed
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Found Python3: /usr/bin/python3.8 (found version "3.8.6") found components: Interpreter 
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 10
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
Scanning dependencies of target benchmark
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_api_internal.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_name.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_name.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_register.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_register.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_runner.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_runner.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/colorprint.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/colorprint.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/commandlineflags.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/commandlineflags.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/complexity.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/complexity.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/console_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/console_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/counter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/counter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/csv_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/csv_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/json_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/json_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/sleep.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sleep.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/statistics.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/statistics.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/string_util.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/string_util.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/sysinfo.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sysinfo.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/timers.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/timers.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -P CMakeFiles/benchmark.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/benchmark.dir/link.txt --verbose=1
/usr/bin/ar qc libbenchmarkd.a  CMakeFiles/benchmark.dir/benchmark.cc.o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o CMakeFiles/benchmark.dir/benchmark_name.cc.o CMakeFiles/benchmark.dir/benchmark_register.cc.o CMakeFiles/benchmark.dir/benchmark_runner.cc.o CMakeFiles/benchmark.dir/colorprint.cc.o CMakeFiles/benchmark.dir/commandlineflags.cc.o CMakeFiles/benchmark.dir/complexity.cc.o CMakeFiles/benchmark.dir/console_reporter.cc.o CMakeFiles/benchmark.dir/counter.cc.o CMakeFiles/benchmark.dir/csv_reporter.cc.o CMakeFiles/benchmark.dir/json_reporter.cc.o CMakeFiles/benchmark.dir/reporter.cc.o CMakeFiles/benchmark.dir/sleep.cc.o CMakeFiles/benchmark.dir/statistics.cc.o CMakeFiles/benchmark.dir/string_util.cc.o CMakeFiles/benchmark.dir/sysinfo.cc.o CMakeFiles/benchmark.dir/timers.cc.o
/usr/bin/ranlib libbenchmarkd.a
[ 80%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
Scanning dependencies of target generated-data
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated && /usr/bin/ruby genfeaturejson.rb /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-miss.json ...
[ 80%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/clang++-11  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/include  -g -fPIC   -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -pthread -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/clang++-11 -fPIC -g  -shared -Wl,-soname,libsimdjson.so.7 -o ../libsimdjson.so.7.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.7.0.0 ../libsimdjson.so.7 ../libsimdjson.so
[ 80%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
Scanning dependencies of target yyjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/clang-11  -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src  -g   -o CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o   -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src/yyjson.c
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -P CMakeFiles/yyjson.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -E cmake_link_script CMakeFiles/yyjson.dir/link.txt --verbose=1
/usr/bin/ar qc libyyjson.a  CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o
/usr/bin/ranlib libyyjson.a
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/clang++-11  -DRAPIDJSON_HAS_STDSTRING -DSAJSON_UNSORTED_OBJECT_KEYS -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_COMPETITION_NLOHMANN_JSON -DSIMDJSON_COMPETITION_RAPIDJSON -DSIMDJSON_COMPETITION_SAJSON -DSIMDJSON_COMPETITION_YYJSON -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/rapidjson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/sajson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/json  -g   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/clang++-11  -g   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.7.0.0 ../_deps/google_benchmarks/src/libbenchmarkd.a ../dependencies/libyyjson.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.8.0/skylake-x-clang11-debug.json --benchmark_out_format=json
2021-01-25 01:06:32
Running benchmark/bench_ondemand
Run on (4 X 3200 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 1024 KiB (x4)
  L3 Unified 8448 KiB (x1)
Load Average: 1.01, 1.00, 0.77
***WARNING*** CPU scaling is enabled, the benchmark real time measurements may be noisy and will incur extra overhead.
***WARNING*** Library was built as DEBUG. Timings may be affected.
simdjson::dom implementation:      haswell
simdjson::ondemand implementation: fallback

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                25477039 ns     25552178 ns           27          18.229k           24.8006M              31        48.478k    81.2413M              128.645           39.2716       3.19047G          78.2262M                    123.871                    0.962888           3.92716k    18.2701k   631.515k       23.6393M/s    82.7037   48.4926k   81.2764M         128.701     39.251/s 3.19018G/s     78.2262M               123.871               0.962472        100        3.9251k/s [BEST: throughput=  0.02 GB/s doc_throughput=    39 docs/s instructions=    78226215 cycles=    81241276 branch_miss=   18229 cache_miss=      31 cache_ref=     48478 items=       100 avg_time=  25477039 ns]
partial_tweets<simdjson_ondemand>/manual_time           19516216 ns     19585164 ns           36            8.43k           32.3745M               3         36.23k    62.2444M              98.5636           51.2648       3.19095G          63.7559M                    100.957                     1.02428           5.12648k    8.32889k   631.515k       30.8594M/s    18.4167   36.4642k   62.2572M         98.5839    51.2394/s 3.19003G/s     63.7559M               100.957                1.02407        100       5.12394k/s [BEST: throughput=  0.03 GB/s doc_throughput=    51 docs/s instructions=    63755877 cycles=    62244405 branch_miss=    8430 cache_miss=       3 cache_ref=     36230 items=       100 avg_time=  19516215 ns]
partial_tweets<yyjson>/manual_time                       2762598 ns      2843816 ns          253          12.864k           261.327M             270        29.468k    7.69692M               12.188           413.809       3.18505G          10.5728M                     16.742                     1.37364           41.3809k    11.5803k   631.515k       218.005M/s    770.779   26.6893k   7.83906M         12.4131    361.978/s 2.83757G/s     10.5733M               16.7427                 1.3488        100       36.1978k/s [BEST: throughput=  0.26 GB/s doc_throughput=   413 docs/s instructions=    10572819 cycles=     7696916 branch_miss=   12864 cache_miss=     270 cache_ref=     29468 items=       100 avg_time=   2762598 ns]
partial_tweets<yyjson_insitu>/manual_time                2480666 ns      2549111 ns          282          10.723k           272.806M          1.837k         15.59k    7.38285M              11.6907           431.986       3.18929G          10.5725M                    16.7414                     1.43203           43.1986k    11.3836k   631.515k       242.781M/s    155.915   13.5044k   7.50665M         11.8867    403.118/s 3.02606G/s     10.5727M               16.7418                1.40844        100       40.3118k/s [BEST: throughput=  0.27 GB/s doc_throughput=   431 docs/s instructions=    10572451 cycles=     7382850 branch_miss=   10723 cache_miss=    1837 cache_ref=     15590 items=       100 avg_time=   2480665 ns]
partial_tweets<sajson>/manual_time                       3763480 ns      3830006 ns          186          42.286k           168.188M              88        14.522k    11.9881M              18.9831           266.324       3.19272G          26.9812M                    42.7245                     2.25067           26.6324k     42.384k   631.515k       160.027M/s     112.28   14.6388k   12.0012M         19.0039    265.712/s 3.18887G/s     26.9812M               42.7245                 2.2482        100       26.5712k/s [BEST: throughput=  0.17 GB/s doc_throughput=   266 docs/s instructions=    26981170 cycles=    11988086 branch_miss=   42286 cache_miss=      88 cache_ref=     14522 items=       100 avg_time=   3763479 ns]
partial_tweets<rapidjson>/manual_time                   14505136 ns     14577288 ns           48          67.355k           44.3287M             581        24.681k    45.4538M              71.9758           70.1942       3.19059G          105.146M                    166.498                     2.31325           7.01942k     68.097k   631.515k       41.5204M/s    360.167   17.3225k   45.6179M         72.2356    68.9411/s 3.14495G/s     105.146M               166.498                2.30493        100       6.89411k/s [BEST: throughput=  0.04 GB/s doc_throughput=    70 docs/s instructions=   105145922 cycles=    45453809 branch_miss=   67355 cache_miss=     581 cache_ref=     24681 items=       100 avg_time=  14505136 ns]
partial_tweets<rapidjson_insitu>/manual_time            11123129 ns     11188870 ns           63          52.909k           57.5218M              31        15.938k    35.0224M              55.4578           91.0855       3.19003G          76.8327M                    121.664                     2.19381           9.10855k    52.5792k   631.515k       54.1448M/s    186.952   11.7141k   35.1072M         55.5921    89.9028/s 3.15624G/s     76.8332M               121.665                2.18853        100       8.99028k/s [BEST: throughput=  0.06 GB/s doc_throughput=    91 docs/s instructions=    76832656 cycles=    35022433 branch_miss=   52909 cache_miss=      31 cache_ref=     15938 items=       100 avg_time=  11123129 ns]
partial_tweets<nlohmann_json>/manual_time               69633074 ns     69727755 ns           10         422.644k           9.12182M              50       101.915k    220.891M              349.779           14.4444       3.19062G            425.8M                    674.252                     1.92765           1.44444k    432.686k   631.515k       8.64905M/s      357.7   138.678k   222.165M         351.797     14.361/s 3.19051G/s     426.331M               675.092                1.91898        100        1.4361k/s [BEST: throughput=  0.01 GB/s doc_throughput=    14 docs/s instructions=   425800383 cycles=   220890639 branch_miss=  422644 cache_miss=      50 cache_ref=    101915 items=       100 avg_time=  69633073 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                3378935341 ns   3385034008 ns            1         3.98671M           13.6134M        6.91735M        7.0123M    10.7811G              234.377          0.295951       3.19067G          14.5572G                    316.468                     1.35025           295.951k    3.98671M   45.9988M       12.9827M/s   6.91735M    7.0123M   10.7811G         234.377   0.295951/s 3.19067G/s     14.5572G               316.468                1.35025      1000k       295.951k/s [BEST: throughput=  0.01 GB/s doc_throughput=     0 docs/s instructions= 14557150081 cycles= 10781076829 branch_miss= 3986709 cache_miss= 6917347 cache_ref=   7012302 items=   1000000 avg_time=3378935341 ns]
large_random<simdjson_ondemand>/manual_time           1928426538 ns   1934558460 ns            1           909.4k            23.853M        3.57707M        3.6352M    6.15331G              133.771          0.518557       3.19084G          8.50871G                    184.977                     1.38279           518.557k      909.4k   45.9988M        22.748M/s   3.57707M    3.6352M   6.15331G         133.771   0.518557/s 3.19084G/s     8.50871G               184.977                1.38279      1000k       518.557k/s [BEST: throughput=  0.02 GB/s doc_throughput=     0 docs/s instructions=  8508706039 cycles=  6153308116 branch_miss=  909400 cache_miss= 3577072 cache_ref=   3635200 items=   1000000 avg_time=1928426538 ns]
large_random<simdjson_ondemand_unordered>/manual_time 1936249638 ns   1942352593 ns            1         909.759k           23.7566M        3.57536M       3.63763M    6.17825G              134.313          0.516462       3.19083G          8.57171G                    186.346                      1.3874           516.462k    909.759k   45.9988M       22.6561M/s   3.57536M   3.63763M   6.17825G         134.313   0.516462/s 3.19083G/s     8.57171G               186.346                 1.3874      1000k       516.462k/s [BEST: throughput=  0.02 GB/s doc_throughput=     0 docs/s instructions=  8571706040 cycles=  6178247611 branch_miss=  909759 cache_miss= 3575365 cache_ref=   3637628 items=   1000000 avg_time=1936249638 ns]
large_random<yyjson>/manual_time                       426070578 ns    432219793 ns            2         667.935k           107.968M        4.21877M       5.44788M    1.21851G              26.4901            2.3472       2.86009G          2.94182G                    63.9542                     2.41427            2.3472M    669.028k   45.9988M       102.959M/s   4.21619M   5.44119M   1.21864G         26.4928    2.34703/s 2.86018G/s     2.94182G               63.9542                2.41402      1000k       2.34703M/s [BEST: throughput=  0.11 GB/s doc_throughput=     2 docs/s instructions=  2941817083 cycles=  1218513924 branch_miss=  667935 cache_miss= 4218775 cache_ref=   5447883 items=   1000000 avg_time= 426070578 ns]
large_random<yyjson_insitu>/manual_time                399896902 ns    406050349 ns            2         664.495k           115.034M        3.50323M       4.71839M    1.17544G              25.5537            2.5008       2.93953G           2.9357G                    63.8212                     2.49754            2.5008M    665.688k   45.9988M       109.698M/s   3.49971M   4.72242M   1.17558G         25.5567    2.50064/s  2.9397G/s      2.9357G               63.8212                2.49724      1000k       2.50064M/s [BEST: throughput=  0.12 GB/s doc_throughput=     2 docs/s instructions=  2935696265 cycles=  1175437063 branch_miss=  664495 cache_miss= 3503230 cache_ref=   4718393 items=   1000000 avg_time= 399896901 ns]
large_random<sajson>/manual_time                       921447480 ns    927607638 ns            1         1.74336M           49.9201M        5.55814M       5.58865M    2.93928G               63.899           1.08525       3.18985G          7.02395G                    152.699                     2.38969           1085.25k    1.74336M   45.9988M       47.6075M/s   5.55814M   5.58865M   2.93928G          63.899    1.08525/s 3.18985G/s     7.02395G               152.699                2.38969      1000k       1085.25k/s [BEST: throughput=  0.05 GB/s doc_throughput=     1 docs/s instructions=  7023953692 cycles=  2939276338 branch_miss= 1743360 cache_miss= 5558143 cache_ref=   5588649 items=   1000000 avg_time= 921447480 ns]
large_random<rapidjson>/manual_time                   2065247729 ns   2071377738 ns            1         6.35074M           22.2728M        4.35037M       5.23703M    6.52002G              141.743          0.484203       3.15701G          14.2761G                    310.358                     2.18958           484.203k    6.35074M   45.9988M        21.241M/s   4.35037M   5.23703M   6.52002G         141.743   0.484203/s 3.15701G/s     14.2761G               310.358                2.18958      1000k       484.203k/s [BEST: throughput=  0.02 GB/s doc_throughput=     0 docs/s instructions= 14276110636 cycles=  6520015306 branch_miss= 6350737 cache_miss= 4350365 cache_ref=   5237035 items=   1000000 avg_time=2065247729 ns]
large_random<rapidjson_lossless>/manual_time          2492189465 ns   2498312953 ns            1         7.35962M           18.4572M        4.38242M        5.2323M    7.88282G               171.37          0.401254       3.16301G          17.2519G                     375.05                     2.18854           401.254k    7.35962M   45.9988M       17.6021M/s   4.38242M    5.2323M   7.88282G          171.37   0.401254/s 3.16301G/s     17.2519G                375.05                2.18854      1000k       401.254k/s [BEST: throughput=  0.02 GB/s doc_throughput=     0 docs/s instructions= 17251863706 cycles=  7882817271 branch_miss= 7359617 cache_miss= 4382422 cache_ref=   5232298 items=   1000000 avg_time=2492189465 ns]
large_random<rapidjson_insitu>/manual_time            1982880200 ns   1989023041 ns            1         6.40344M            23.198M         5.0796M       5.93755M    6.25713G              136.028          0.504317       3.15558G          13.5461G                    294.488                     2.16491           504.317k    6.40344M   45.9988M       22.1233M/s    5.0796M   5.93755M   6.25713G         136.028   0.504317/s 3.15558G/s     13.5461G               294.488                2.16491      1000k       504.317k/s [BEST: throughput=  0.02 GB/s doc_throughput=     0 docs/s instructions= 13546110223 cycles=  6257129210 branch_miss= 6403442 cache_miss= 5079595 cache_ref=   5937547 items=   1000000 avg_time=1982880200 ns]
large_random<nlohmann_json>/manual_time               10920387401 ns   10926330080 ns            1         40.9429M           4.21219M        30.3998M       31.1325M    34.8284G              757.159         0.0915718        3.1893G          63.4372G                   1.37911k                     1.82142           91.5718k    40.9429M   45.9988M       4.01706M/s   30.3998M   31.1325M   34.8284G         757.159  0.0915718/s  3.1893G/s     63.4372G              1.37911k                1.82142      1000k       91.5718k/s [BEST: throughput=  0.00 GB/s doc_throughput=     0 docs/s instructions= 63437175850 cycles= 34828393571 branch_miss=40942882 cache_miss=30399818 cache_ref=  31132521 items=   1000000 avg_time=10920387401 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                      4745752871 ns   4764884763 ns            1         3.59272M           28.9322M        10.3444M       10.5159M    15.1415G              110.277          0.210715       3.19054G           17.133G                    124.781                     1.13152           110.475k    3.59272M   137.305M       27.5919M/s   10.3444M   10.5159M   15.1415G         110.277   0.210715/s 3.19054G/s      17.133G               124.781                1.13152   524.288k       110.475k/s [BEST: throughput=  0.03 GB/s doc_throughput=     0 docs/s instructions= 17133005755 cycles= 15141529636 branch_miss= 3592716 cache_miss=10344354 cache_ref=  10515896 items=    524288 avg_time=4745752871 ns]
kostya<simdjson_ondemand>/manual_time                 3356498900 ns   3375676905 ns            1          1.6179M           40.9072M        6.48072M       6.59721M    10.7094G              77.9972          0.297929       3.19065G          12.3057G                    89.6227                     1.14905           156.201k     1.6179M   137.305M       39.0122M/s   6.48072M   6.59721M   10.7094G         77.9972   0.297929/s 3.19065G/s     12.3057G               89.6227                1.14905   524.288k       156.201k/s [BEST: throughput=  0.04 GB/s doc_throughput=     0 docs/s instructions= 12305650328 cycles= 10709400847 branch_miss= 1617904 cache_miss= 6480717 cache_ref=   6597214 items=    524288 avg_time=3356498900 ns]
kostya<yyjson>/manual_time                             564405510 ns    583598819 ns            1         970.858k           243.274M        8.52236M       9.94468M    1.56453G              11.3945           1.77178       2.77199G          3.23633G                    23.5704                     2.06857           928.921k    970.858k   137.305M       232.004M/s   8.52236M   9.94468M   1.56453G         11.3945    1.77178/s 2.77199G/s     3.23633G               23.5704                2.06857   524.288k       928.921k/s [BEST: throughput=  0.24 GB/s doc_throughput=     1 docs/s instructions=  3236330750 cycles=  1564526350 branch_miss=  970858 cache_miss= 8522358 cache_ref=   9944676 items=    524288 avg_time= 564405510 ns]
kostya<yyjson_insitu>/manual_time                      485689116 ns    504896930 ns            2         971.171k           282.704M        6.37981M       7.79877M    1.43377G              10.4422           2.05895       2.95206G          3.21806G                    23.4373                     2.24448           1079.48k     971.04k   137.305M       269.605M/s   6.38422M   7.80065M   1.43384G         10.4427    2.05893/s 2.95218G/s     3.21806G               23.4373                2.24436   524.288k       1079.47k/s [BEST: throughput=  0.28 GB/s doc_throughput=     2 docs/s instructions=  3218061010 cycles=  1433768984 branch_miss=  971171 cache_miss= 6379814 cache_ref=   7798773 items=    524288 avg_time= 485689116 ns]
kostya<sajson>/manual_time                            1298522432 ns   1317722217 ns            1         11.6407M           105.739M        8.52076M       8.55075M    4.14249G                30.17          0.770106       3.19015G          8.77973G                    63.9433                     2.11943           403.757k    11.6407M   137.305M       100.841M/s   8.52076M   8.55075M   4.14249G           30.17   0.770106/s 3.19015G/s     8.77973G               63.9433                2.11943   524.288k       403.757k/s [BEST: throughput=  0.11 GB/s doc_throughput=     0 docs/s instructions=  8779729996 cycles=  4142487585 branch_miss=11640665 cache_miss= 8520759 cache_ref=   8550755 items=    524288 avg_time=1298522432 ns]
kostya<rapidjson>/manual_time                         2651253685 ns   2670405766 ns            1         16.9445M           51.7887M        5.23508M       6.49377M    8.36042G              60.8894           0.37718       3.15338G          16.8282G                    122.561                     2.01284           197.751k    16.9445M   137.305M       49.3896M/s   5.23508M   6.49377M   8.36042G         60.8894    0.37718/s 3.15338G/s     16.8282G               122.561                2.01284   524.288k       197.751k/s [BEST: throughput=  0.05 GB/s doc_throughput=     0 docs/s instructions= 16828189265 cycles=  8360423242 branch_miss=16944498 cache_miss= 5235075 cache_ref=   6493768 items=    524288 avg_time=2651253685 ns]
kostya<rapidjson_lossless>/manual_time                2892770803 ns   2911904235 ns            1         16.5583M           47.4649M        5.20322M        6.4938M    9.13176G              66.5071          0.345689       3.15675G           18.553G                    135.123                      2.0317           181.241k    16.5583M   137.305M        45.266M/s   5.20322M    6.4938M   9.13176G         66.5071   0.345689/s 3.15675G/s      18.553G               135.123                 2.0317   524.288k       181.241k/s [BEST: throughput=  0.05 GB/s doc_throughput=     0 docs/s instructions= 18553028598 cycles=  9131756854 branch_miss=16558333 cache_miss= 5203221 cache_ref=   6493800 items=    524288 avg_time=2892770803 ns]
kostya<rapidjson_insitu>/manual_time                  2440755851 ns   2459849579 ns            1         15.5427M           56.2551M        7.28988M       8.56153M    7.68893G              55.9989          0.409709       3.15023G          15.3804G                    112.016                     2.00032           214.806k    15.5427M   137.305M       53.6491M/s   7.28988M   8.56153M   7.68893G         55.9989   0.409709/s 3.15023G/s     15.3804G               112.016                2.00032   524.288k       214.806k/s [BEST: throughput=  0.06 GB/s doc_throughput=     0 docs/s instructions= 15380350349 cycles=  7688931917 branch_miss=15542720 cache_miss= 7289876 cache_ref=   8561535 items=    524288 avg_time=2440755851 ns]
kostya<nlohmann_json>/manual_time                     16949852695 ns   16968638774 ns            1         61.2437M           8.10066M        44.8022M       45.5554M     54.083G              393.889         0.0589976       3.19076G          100.398G                    731.208                     1.85638           30.9317k    61.2437M   137.305M       7.72539M/s   44.8022M   45.5554M    54.083G         393.889  0.0589976/s 3.19076G/s     100.398G               731.208                1.85638   524.288k       30.9317k/s [BEST: throughput=  0.01 GB/s doc_throughput=     0 docs/s instructions=100398447216 cycles= 54082971591 branch_miss=61243736 cache_miss=44802155 cache_ref=  45555425 items=    524288 avg_time=16949852695 ns]
distinct_user_id<simdjson_dom>/manual_time              25235206 ns     25343024 ns           28          16.852k           25.0355M              16        48.382k    80.4787M              127.438           39.6436       3.19047G          76.3623M                    120.919                    0.948851           4.55901k    17.0023k   631.515k       23.8658M/s      48.75   48.5203k   80.5035M         127.477    39.6272/s 3.19013G/s     76.3623M               120.919               0.948559        115       4.55713k/s [BEST: throughput=  0.03 GB/s doc_throughput=    39 docs/s instructions=    76362314 cycles=    80478741 branch_miss=   16852 cache_miss=      16 cache_ref=     48382 items=       115 avg_time=  25235205 ns]
distinct_user_id<simdjson_ondemand>/manual_time         19204533 ns     19303502 ns           36           7.665k           32.8953M               6        31.952k    61.2545M              96.9962           52.0895       3.19072G          62.4741M                    98.9274                     1.01991           5.99029k     7.6885k   631.515k       31.3603M/s    46.6667   32.1852k   61.2659M         97.0142     52.071/s 3.19018G/s     62.4741M               98.9274                1.01972        115       5.98817k/s [BEST: throughput=  0.03 GB/s doc_throughput=    52 docs/s instructions=    62474138 cycles=    61254530 branch_miss=    7665 cache_miss=       6 cache_ref=     31952 items=       115 avg_time=  19204533 ns]
distinct_user_id<yyjson>/manual_time                     2383296 ns      2496638 ns          299          10.548k           271.104M           7.22k        28.412k    7.43725M              11.7768           429.292       3.19275G          10.3044M                    16.3169                     1.38551           49.3686k    10.8554k   631.515k         252.7M/s   6.56557k   28.3048k   7.49473M         11.8679    419.587/s 3.14469G/s     10.3043M               16.3169                1.37488        115       48.2525k/s [BEST: throughput=  0.27 GB/s doc_throughput=   429 docs/s instructions=    10304358 cycles=     7437251 branch_miss=   10548 cache_miss=    7220 cache_ref=     28412 items=       115 avg_time=   2383296 ns]
distinct_user_id<yyjson_insitu>/manual_time              2442634 ns      2544177 ns          287           11.16k            276.51M              40        16.361k    7.29203M              11.5469           437.852       3.19283G          10.3038M                     16.316                     1.41302            50.353k    11.3259k   631.515k       246.562M/s    166.261    13.688k   7.38516M         11.6944    409.394/s 3.02344G/s      10.304M               16.3164                1.39524        115       47.0803k/s [BEST: throughput=  0.28 GB/s doc_throughput=   437 docs/s instructions=    10303788 cycles=     7292033 branch_miss=   11160 cache_miss=      40 cache_ref=     16361 items=       115 avg_time=   2442633 ns]
distinct_user_id<sajson>/manual_time                     3699480 ns      3797880 ns          189          42.235k           171.079M              10        14.267k    11.7854M               18.662           270.902       3.19268G          26.5515M                    42.0442                     2.25292           31.1537k    42.3151k   631.515k       162.796M/s    21.2593   14.4434k   11.7971M         18.6806    270.308/s 3.18885G/s     26.5515M               42.0442                2.25069        115       31.0854k/s [BEST: throughput=  0.17 GB/s doc_throughput=   270 docs/s instructions=    26551518 cycles=    11785360 branch_miss=   42235 cache_miss=      10 cache_ref=     14267 items=       115 avg_time=   3699480 ns]
distinct_user_id<rapidjson>/manual_time                 14302283 ns     14406126 ns           49          65.952k           44.8535M          9.206k        23.774k    44.9151M              71.1227           71.0252        3.1901G          104.008M                    164.696                     2.31565            8.1679k    66.2117k   631.515k       42.1093M/s   1.62369k    18.521k   45.0686M         71.3658    69.9189/s 3.15115G/s     104.008M               164.696                2.30778        115       8.04067k/s [BEST: throughput=  0.04 GB/s doc_throughput=    71 docs/s instructions=   104007746 cycles=    44915082 branch_miss=   65952 cache_miss=    9206 cache_ref=     23774 items=       115 avg_time=  14302282 ns]
distinct_user_id<rapidjson_insitu>/manual_time          10840219 ns     10938893 ns           65          51.721k           58.3843M          7.167k        16.112k    34.5041M              54.6371           92.4512       3.18995G          75.7253M                    119.911                     2.19467           10.6319k    52.2141k   631.515k       55.5579M/s   6.36523k   16.0997k   34.5812M         54.7591    92.2491/s 3.19008G/s     75.7252M                119.91                2.18978        115       10.6086k/s [BEST: throughput=  0.06 GB/s doc_throughput=    92 docs/s instructions=    75725282 cycles=    34504138 branch_miss=   51721 cache_miss=    7167 cache_ref=     16112 items=       115 avg_time=  10840218 ns]
distinct_user_id<nlohmann_json>/manual_time             66348545 ns     66468735 ns           11         379.683k           9.55141M          1.825k       102.489k    210.958M               334.05           15.1246       3.19065G          407.841M                    645.813                     1.93328           1.73933k     384.46k   631.515k       9.07721M/s    501.818   111.037k   211.681M         335.195    15.0719/s 3.19044G/s     406.515M               643.715                1.92042        115       1.73327k/s [BEST: throughput=  0.01 GB/s doc_throughput=    15 docs/s instructions=   407840634 cycles=   210957900 branch_miss=  379683 cache_miss=    1825 cache_ref=    102489 items=       115 avg_time=  66348544 ns]
find_tweet<simdjson_dom>/manual_time                    24768696 ns     24847512 ns           28          15.582k           25.5018M               8        45.415k    79.0069M              125.107            40.382       3.19046G          74.2435M                    117.564                     0.93971             40.382    15.5994k   631.515k       24.3154M/s    28.9286   45.5289k   79.0164M         125.122    40.3735/s 3.19017G/s     74.2435M               117.564               0.939597          1        40.3735/s [BEST: throughput=  0.03 GB/s doc_throughput=    40 docs/s instructions=    74243542 cycles=    79006893 branch_miss=   15582 cache_miss=       8 cache_ref=     45415 items=         1 avg_time=  24768696 ns]
find_tweet<simdjson_ondemand>/manual_time               18099528 ns     18178789 ns           39           3.261k           34.9011M              16        20.591k    57.7379M              91.4276           55.2657       3.19093G           54.934M                    86.9877                    0.951437            55.2657    3.28108k   631.515k       33.2749M/s    16.2308   20.2399k   57.7438M          91.437    55.2501/s 3.19035G/s      54.934M               86.9877                0.95134          1        55.2501/s [BEST: throughput=  0.03 GB/s doc_throughput=    55 docs/s instructions=    54934024 cycles=    57737932 branch_miss=    3261 cache_miss=      16 cache_ref=     20591 items=         1 avg_time=  18099527 ns]
find_tweet<yyjson>/manual_time                           2677966 ns      2765412 ns          267          12.962k           270.578M             231        28.318k    7.45226M              11.8006           428.459       3.19298G          10.0178M                    15.8631                     1.34426            428.459    11.3658k   631.515k       224.894M/s    497.652   25.2094k    7.5742M         11.9937    373.418/s 2.82834G/s     10.0184M               15.8641                 1.3227          1        373.418/s [BEST: throughput=  0.27 GB/s doc_throughput=   428 docs/s instructions=    10017771 cycles=     7452259 branch_miss=   12962 cache_miss=     231 cache_ref=     28318 items=         1 avg_time=   2677966 ns]
find_tweet<yyjson_insitu>/manual_time                    2396265 ns      2467312 ns          293           10.65k           282.301M          2.003k        14.507k    7.13422M               11.297           447.022       3.18915G          10.0174M                    15.8624                     1.40413            447.022    11.0645k   631.515k       251.333M/s    19.8157   11.6481k   7.23846M         11.4621    417.316/s 3.02073G/s     10.0176M               15.8629                1.38395          1        417.316/s [BEST: throughput=  0.28 GB/s doc_throughput=   447 docs/s instructions=    10017373 cycles=     7134219 branch_miss=   10650 cache_miss=    2003 cache_ref=     14507 items=         1 avg_time=   2396265 ns]
find_tweet<sajson>/manual_time                           3636345 ns      3706964 ns          193          42.196k           174.069M             221        13.632k    11.5828M              18.3413           275.637       3.19265G          26.1128M                    41.3495                     2.25445            275.637    42.2431k   631.515k       165.622M/s    197.301    13.802k    11.597M         18.3638    275.001/s 3.18919G/s     26.1128M               41.3495                2.25169          1        275.001/s [BEST: throughput=  0.17 GB/s doc_throughput=   275 docs/s instructions=    26112809 cycles=    11582789 branch_miss=   42196 cache_miss=     221 cache_ref=     13632 items=         1 avg_time=   3636345 ns]
find_tweet<rapidjson>/manual_time                       14089046 ns     14164070 ns           50          65.464k            45.535M         10.116k        22.077k    44.2433M               70.059           72.1044       3.19014G          102.589M                    162.449                     2.31874            72.1044    65.4267k   631.515k       42.7467M/s    1.4366k   16.0677k   44.3866M         70.2858    70.9771/s 3.15043G/s      102.59M                162.45                2.31128          1        70.9771/s [BEST: throughput=  0.05 GB/s doc_throughput=    72 docs/s instructions=   102588915 cycles=    44243312 branch_miss=   65464 cache_miss=   10116 cache_ref=     22077 items=         1 avg_time=  14089045 ns]
find_tweet<rapidjson_insitu>/manual_time                10632211 ns     10703216 ns           66          50.903k           59.5002M          6.903k         14.68k    33.8577M              53.6134           94.2182       3.19001G           74.336M                    117.711                     2.19554            94.2182    50.9997k   631.515k       56.6448M/s   6.22542k   14.8795k    33.917M         53.7073    94.0538/s 3.19002G/s     74.3362M               117.711                2.19171          1        94.0538/s [BEST: throughput=  0.06 GB/s doc_throughput=    94 docs/s instructions=    74336033 cycles=    33857692 branch_miss=   50903 cache_miss=    6903 cache_ref=     14680 items=         1 avg_time=  10632210 ns]
find_tweet<nlohmann_json>/manual_time                   57559160 ns     57650272 ns           12         286.524k           11.0232M           1.87k        80.587k    182.793M              289.451           17.4551       3.19068G          357.653M                    566.342                      1.9566            17.4551    293.234k   631.515k       10.4633M/s    218.917   88.1653k   183.636M         290.786    17.3734/s 3.19039G/s     356.329M               564.244                1.94041          1        17.3734/s [BEST: throughput=  0.01 GB/s doc_throughput=    17 docs/s instructions=   357653487 cycles=   182792932 branch_miss=  286524 cache_miss=    1870 cache_ref=     80587 items=         1 avg_time=  57559160 ns]
top_tweet<simdjson_dom>/manual_time                     24928265 ns     25010962 ns           28          16.068k           25.3405M               5        47.399k    79.5104M              125.904           40.1266       3.19048G          75.0759M                    118.882                    0.944227            40.1266    16.0563k   631.515k       24.1597M/s    26.0357   47.4953k   79.5264M          125.93    40.1151/s 3.19021G/s     75.0759M               118.882               0.944037          1        40.1151/s [BEST: throughput=  0.03 GB/s doc_throughput=    40 docs/s instructions=    75075876 cycles=    79510386 branch_miss=   16068 cache_miss=       5 cache_ref=     47399 items=         1 avg_time=  24928265 ns]
top_tweet<simdjson_ondemand>/manual_time                19186847 ns     19261740 ns           36           7.659k           32.9265M              21        31.575k    61.1973M              96.9056            52.139       3.19077G          62.2624M                    98.5921                      1.0174             52.139    7.67722k   631.515k       31.3892M/s    32.1111   31.8852k   61.2115M          96.928     52.119/s 3.19028G/s     62.2624M               98.5921                1.01717          1         52.119/s [BEST: throughput=  0.03 GB/s doc_throughput=    52 docs/s instructions=    62262387 cycles=    61197340 branch_miss=    7659 cache_miss=      21 cache_ref=     31575 items=         1 avg_time=  19186846 ns]
top_tweet<simdjson_ondemand_forward_only>/manual_time   19351296 ns     19426623 ns           36           7.791k           32.6469M               3        32.382k    61.7223M              97.7369           51.6962       3.19081G           63.043M                    99.8283                      1.0214            51.6962    7.79483k   631.515k       31.1224M/s    10.3056    32.629k   61.7354M         97.7576    51.6761/s 3.19025G/s      63.043M               99.8283                1.02118          1        51.6761/s [BEST: throughput=  0.03 GB/s doc_throughput=    51 docs/s instructions=    63043046 cycles=    61722319 branch_miss=    7791 cache_miss=       3 cache_ref=     32382 items=         1 avg_time=  19351296 ns]
top_tweet<yyjson>/manual_time                            2697735 ns      2787378 ns          265          12.596k           268.584M             248        28.901k    7.48801M              11.8572           425.301       3.18466G          10.1204M                    16.0256                     1.35155            425.301    11.5006k   631.515k       223.246M/s    512.143   26.1476k   7.63812M         12.0949    370.681/s 2.83131G/s     10.1208M               16.0263                1.32504          1        370.681/s [BEST: throughput=  0.27 GB/s doc_throughput=   425 docs/s instructions=    10120399 cycles=     7488009 branch_miss=   12596 cache_miss=     248 cache_ref=     28901 items=         1 avg_time=   2697734 ns]
top_tweet<yyjson_insitu>/manual_time                     2417722 ns      2494058 ns          290          10.966k           278.924M          1.747k        15.764k    7.20894M              11.4153           441.675         3.184G          10.1202M                    16.0253                     1.40384            441.675    11.1768k   631.515k       249.102M/s    123.669   13.2828k   7.30723M          11.571    413.612/s 3.02236G/s     10.1205M               16.0257                1.38499          1        413.612/s [BEST: throughput=  0.28 GB/s doc_throughput=   441 docs/s instructions=    10120202 cycles=     7208937 branch_miss=   10966 cache_miss=    1747 cache_ref=     15764 items=         1 avg_time=   2417722 ns]
top_tweet<sajson>/manual_time                            3669827 ns      3744493 ns          191          42.191k           172.442M               0         13.92k    11.6921M              18.5144            273.06       3.19265G          26.3459M                    41.7185                     2.25331             273.06     42.218k   631.515k       164.111M/s    11.7016   14.0906k    11.703M         18.5317    272.492/s 3.18899G/s     26.3459M               41.7185                 2.2512          1        272.492/s [BEST: throughput=  0.17 GB/s doc_throughput=   273 docs/s instructions=    26345867 cycles=    11692098 branch_miss=   42191 cache_miss=       0 cache_ref=     13920 items=         1 avg_time=   3669827 ns]
top_tweet<rapidjson>/manual_time                        14243256 ns     14322862 ns           49          65.961k           45.0618M             149        23.202k    44.7143M              70.8049            71.355       3.19059G          103.591M                    164.036                     2.31674             71.355    66.4335k   631.515k       42.2838M/s   1.58267k   17.4932k   44.8798M         71.0668    70.2087/s 3.15095G/s     103.592M               164.037                2.30821          1        70.2087/s [BEST: throughput=  0.05 GB/s doc_throughput=    71 docs/s instructions=   103591473 cycles=    44714328 branch_miss=   65961 cache_miss=     149 cache_ref=     23202 items=         1 avg_time=  14243256 ns]
top_tweet<rapidjson_insitu>/manual_time                 10771875 ns     10846469 ns           65          51.683k           58.7107M          7.048k        15.632k    34.3142M              54.3363            92.968       3.19012G           75.314M                    119.259                     2.19484             92.968    51.6986k   631.515k       55.9104M/s   6.27577k   15.6726k    34.363M         54.4136    92.8343/s 3.19007G/s     75.3142M                119.26                2.19172          1        92.8343/s [BEST: throughput=  0.06 GB/s doc_throughput=    92 docs/s instructions=    75314000 cycles=    34314188 branch_miss=   51683 cache_miss=    7048 cache_ref=     15632 items=         1 avg_time=  10771875 ns]
top_tweet<nlohmann_json>/manual_time                    73449990 ns     73543670 ns           10         484.874k            8.6014M          2.334k       169.375k    234.262M              370.953           13.6203       3.19071G          449.891M                      712.4                     1.92046            13.6203    486.225k   631.515k       8.19959M/s      372.2   168.665k   234.345M         371.084    13.6147/s 3.19054G/s     449.834M                712.31                1.91954          1        13.6147/s [BEST: throughput=  0.01 GB/s doc_throughput=    13 docs/s instructions=   449891029 cycles=   234262175 branch_miss=  484874 cache_miss=    2334 cache_ref=    169375 items=         1 avg_time=  73449990 ns]
