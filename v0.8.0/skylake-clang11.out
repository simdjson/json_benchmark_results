run_benchmark: v0.8.0 /home/jkeiser/simdjson_benchmark_results/v0.8.0/skylake-clang11.json 
git reset --hard v0.8.0
HEAD is now at c96ff018 Version 0.8.
cmake ..
-- The CXX compiler identification is Clang 11.0.0
-- The C compiler identification is Clang 11.0.0
-- Check for working CXX compiler: /usr/bin/clang++-11
-- Check for working CXX compiler: /usr/bin/clang++-11 -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Check for working C compiler: /usr/bin/clang-11
-- Check for working C compiler: /usr/bin/clang-11 -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- No build type selected, default to Release
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed
-- Check if compiler accepts -pthread
-- Check if compiler accepts -pthread - yes
-- Found Threads: TRUE  
-- Looking for fork
-- Looking for fork - found
-- Looking for wait
-- Looking for wait - found
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- Found Git: /usr/bin/git (found version "2.27.0") 
-- git Version: v0.2.1-c96ff018
-- Version: 0.2.1
-- Performing Test HAVE_CXX_FLAG_STD_CXX11
-- Performing Test HAVE_CXX_FLAG_STD_CXX11 - Success
-- Performing Test HAVE_CXX_FLAG_WALL
-- Performing Test HAVE_CXX_FLAG_WALL - Success
-- Performing Test HAVE_CXX_FLAG_WEXTRA
-- Performing Test HAVE_CXX_FLAG_WEXTRA - Success
-- Performing Test HAVE_CXX_FLAG_WSHADOW
-- Performing Test HAVE_CXX_FLAG_WSHADOW - Success
-- Performing Test HAVE_CXX_FLAG_WERROR
-- Performing Test HAVE_CXX_FLAG_WERROR - Success
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32 - Success
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED - Success
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WD654
-- Performing Test HAVE_CXX_FLAG_WD654 - Failed
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY - Success
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES -- failed to compile
-- Performing Test HAVE_CXX_FLAG_COVERAGE
-- Performing Test HAVE_CXX_FLAG_COVERAGE - Success
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Performing Test USE_BOOST_JSON
-- Performing Test USE_BOOST_JSON - Failed
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Found Python3: /usr/bin/python3.8 (found version "3.8.6") found components: Interpreter 
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
make[1]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[2]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
Scanning dependencies of target benchmark
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[  0%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/benchmark.cc.o
[ 10%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o
[ 10%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/benchmark_name.cc.o
[ 10%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/benchmark_register.cc.o
[ 20%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/benchmark_runner.cc.o
[ 20%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/colorprint.cc.o
[ 30%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/commandlineflags.cc.o
[ 30%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/complexity.cc.o
[ 30%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/console_reporter.cc.o
[ 40%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/counter.cc.o
[ 40%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/csv_reporter.cc.o
[ 50%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/json_reporter.cc.o
[ 50%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/reporter.cc.o
[ 60%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/sleep.cc.o
[ 60%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/statistics.cc.o
[ 60%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/string_util.cc.o
[ 70%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/sysinfo.cc.o
[ 70%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/timers.cc.o
[ 80%] Linking CXX static library libbenchmark.a
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 80%] Built target benchmark
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
Scanning dependencies of target generated-data
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 80%] Generating utf-8.json, escape.json, 0-structurals.json, 7-structurals.json, 15-structurals.json, 23-structurals.json
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-miss.json ...
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 80%] Built target generated-data
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
Scanning dependencies of target simdjson
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 80%] Building CXX object src/CMakeFiles/simdjson.dir/simdjson.cpp.o
[ 80%] Linking CXX shared library ../libsimdjson.so
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 80%] Built target simdjson
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
Scanning dependencies of target yyjson
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 80%] Building C object dependencies/CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o
[ 90%] Linking C static library libyyjson.a
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 90%] Built target yyjson
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
Scanning dependencies of target bench_ondemand
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[100%] Building CXX object benchmark/CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o
[100%] Linking CXX executable bench_ondemand
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[100%] Built target bench_ondemand
make[2]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[1]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.8.0/skylake-clang11.json --benchmark_out_format=json
2021-01-23 04:12:44
Running benchmark/bench_ondemand
Run on (4 X 4000 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 256 KiB (x4)
  L3 Unified 8192 KiB (x1)
Load Average: 1.02, 0.72, 0.38
simdjson::dom implementation:      haswell
simdjson::ondemand implementation: fallback

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
partial_tweets<simdjson_dom>/manual_time                  274220 ns       302528 ns         2611           3.397k           2.31829G               0        87.268k     1005.8k              1.59269            3.671k       3.69231G           2.9828M                    4.72325                     2.96559             367.1k    3.54127k   631.515k       2.14479G/s    2.86212   87.2589k   1012.03k         1.60255    3.6467k/s 3.69058G/s      2.9828M               4.72325                2.94734        100        364.67k/s [BEST: throughput=  2.32 GB/s doc_throughput=  3671 docs/s instructions=     2982801 cycles=     1005805 branch_miss=    3397 cache_miss=       0 cache_ref=     87268 items=       100 avg_time=    274220 ns]
partial_tweets<simdjson_ondemand>/manual_time             201261 ns       229202 ns         3479           2.071k           3.16018G               0         55.45k    737.959k              1.16855          5.00413k       3.69284G          2.26558M                    3.58753                     3.07006           500.413k    2.24004k   631.515k       2.92229G/s   0.075309   55.5738k   742.885k         1.17635   4.96866k/s 3.69114G/s     2.26558M               3.58753                 3.0497        100       496.866k/s [BEST: throughput=  3.16 GB/s doc_throughput=  5004 docs/s instructions=     2265576 cycles=      737959 branch_miss=    2071 cache_miss=       0 cache_ref=     55450 items=       100 avg_time=    201261 ns]
partial_tweets<yyjson>/manual_time                        646894 ns       677174 ns         1086           9.619k           1.77899G             443        75.076k    1.31105M              2.07603          2.81702k       3.69324G           2.9199M                    4.62365                     2.22716           281.702k    7.48807k   631.515k       931.002M/s    936.978   49.1854k   1.52773M         2.41915   1.54585k/s 2.36164G/s     2.92039M               4.62442                1.91159        100       154.585k/s [BEST: throughput=  1.78 GB/s doc_throughput=  2817 docs/s instructions=     2919902 cycles=     1311045 branch_miss=    9619 cache_miss=     443 cache_ref=     75076 items=       100 avg_time=    646893 ns]
partial_tweets<yyjson_insitu>/manual_time                 433009 ns       461966 ns         1616            6.92k           2.00375G          1.623k        45.488k    1.15578M              1.83018          3.17292k       3.66721G          2.91959M                    4.62315                     2.52607           317.292k    7.32536k   631.515k       1.35827G/s    169.361   31.8478k   1.25585M         1.98863   2.30942k/s 2.90029G/s     2.91985M               4.62356                2.32499        100       230.942k/s [BEST: throughput=  2.00 GB/s doc_throughput=  3172 docs/s instructions=     2919588 cycles=     1155783 branch_miss=    6920 cache_miss=    1623 cache_ref=     45488 items=       100 avg_time=    433009 ns]
partial_tweets<sajson>/manual_time                        598192 ns       626553 ns         1169          10.155k           1062.72M               0        45.968k    2.19383M              3.47391          1.68281k        3.6918G          5.87949M                    9.31013                     2.68002           168.281k    10.5771k   631.515k        1006.8M/s    1.28914   46.0069k   2.20737M         3.49536   1.67171k/s 3.69008G/s     5.87949M               9.31013                2.66357        100       167.171k/s [BEST: throughput=  1.06 GB/s doc_throughput=  1682 docs/s instructions=     5879487 cycles=     2193826 branch_miss=   10155 cache_miss=       0 cache_ref=     45968 items=       100 avg_time=    598191 ns]
partial_tweets<rapidjson>/manual_time                    2394868 ns      2423796 ns          292          30.366k           287.001M         10.108k        52.844k     8.1084M              12.8396           454.464       3.68498G          21.8955M                    34.6713                     2.70034           45.4464k    30.8601k   631.515k       251.479M/s    643.459   32.6158k   8.25332M         13.0691     417.56/s 3.44625G/s     21.8962M               34.6725                2.65302        100        41.756k/s [BEST: throughput=  0.29 GB/s doc_throughput=   454 docs/s instructions=    21895452 cycles=     8108405 branch_miss=   30366 cache_miss=   10108 cache_ref=     52844 items=       100 avg_time=   2394867 ns]
partial_tweets<rapidjson_insitu>/manual_time             1523695 ns      1552254 ns          461          25.805k           446.893M             181        43.022k    5.21665M              8.26054           707.652       3.69158G          13.3567M                    21.1502                     2.56039           70.7652k    25.9022k   631.515k       395.263M/s    277.751   33.4504k   5.27406M         8.35144    656.299/s 3.46136G/s     13.3573M               21.1512                2.53264        100       65.6299k/s [BEST: throughput=  0.45 GB/s doc_throughput=   707 docs/s instructions=    13356691 cycles=     5216655 branch_miss=   25805 cache_miss=     181 cache_ref=     43022 items=       100 avg_time=   1523695 ns]
partial_tweets<nlohmann_json>/manual_time                8506965 ns      8541802 ns           83         151.266k           76.3045M              26       229.058k    30.5365M              48.3543           120.828       3.68965G          80.2736M                    127.113                     2.62878           12.0828k    162.196k   631.515k       70.7961M/s    199.988   358.005k   31.3865M         49.7003    117.551/s  3.6895G/s     80.6675M               127.736                2.57013        100       11.7551k/s [BEST: throughput=  0.08 GB/s doc_throughput=   120 docs/s instructions=    80273647 cycles=    30536475 branch_miss=  151266 cache_miss=      26 cache_ref=    229058 items=       100 avg_time=   8506964 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                  89422755 ns     92808991 ns            8         960.739k           514.742M        10.9563M       15.2392M    329.676M              7.16705           11.1903       3.68918G          1038.74M                    22.5819                     3.15079           11.1903M    959.341k   45.9988M       490.567M/s   10.9703M   15.2356M   329.877M         7.17142    11.1828/s 3.68896G/s     1038.74M               22.5819                3.14887      1000k       11.1828M/s [BEST: throughput=  0.51 GB/s doc_throughput=    11 docs/s instructions=  1038738106 cycles=   329675735 branch_miss=  960739 cache_miss=10956324 cache_ref=  15239218 items=   1000000 avg_time=  89422754 ns]
large_random<simdjson_ondemand>/manual_time             65334753 ns     68688153 ns           11         922.469k           704.682M        5.65902M       7.88886M    240.811M              5.23515           15.3196       3.68912G          672.195M                    14.6133                     2.79138           15.3196M    925.106k   45.9988M       671.432M/s   5.70202M   7.89228M   241.011M          5.2395    15.3058/s 3.68886G/s     672.195M               14.6133                2.78907      1000k       15.3058M/s [BEST: throughput=  0.70 GB/s doc_throughput=    15 docs/s instructions=   672194575 cycles=   240810566 branch_miss=  922469 cache_miss= 5659020 cache_ref=   7888857 items=   1000000 avg_time=  65334753 ns]
large_random<simdjson_ondemand_unordered>/manual_time   65489574 ns     68843383 ns           11         994.236k           702.766M        5.65502M        7.8911M    241.461M               5.2493           15.2779       3.68903G          669.195M                    14.5481                     2.77143           15.2779M     998.57k   45.9988M       669.845M/s   5.69901M   7.89128M   241.584M         5.25196    15.2696/s 3.68889G/s     669.195M               14.5481                2.77003      1000k       15.2696M/s [BEST: throughput=  0.70 GB/s doc_throughput=    15 docs/s instructions=   669194589 cycles=   241461419 branch_miss=  994236 cache_miss= 5655024 cache_ref=   7891104 items=   1000000 avg_time=  65489574 ns]
large_random<yyjson>/manual_time                       124476065 ns    127895266 ns            6         734.613k           369.737M        5.86321M        8.9965M     340.45M              7.40128           8.03798       2.73653G          855.681M                    18.6023                     2.51338           8.03798M    733.701k   45.9988M        352.42M/s   5.85192M   8.96333M     340.4M          7.4002    8.03367/s 2.73466G/s     855.681M               18.6023                2.51375      1000k       8.03367M/s [BEST: throughput=  0.37 GB/s doc_throughput=     8 docs/s instructions=   855680740 cycles=   340449633 branch_miss=  734613 cache_miss= 5863213 cache_ref=   8996497 items=   1000000 avg_time= 124476064 ns]
large_random<yyjson_insitu>/manual_time                106636905 ns    110058130 ns            7         737.023k             431.5M        5.01895M       7.68471M    308.239M              6.70103           9.38068        2.8915G           849.56M                    18.4692                     2.75617           9.38068M    734.948k   45.9988M       411.376M/s   5.01418M   7.66884M   308.209M         6.70038    9.37762/s 2.89027G/s      849.56M               18.4692                2.75644      1000k       9.37762M/s [BEST: throughput=  0.43 GB/s doc_throughput=     9 docs/s instructions=   849559977 cycles=   308239398 branch_miss=  737023 cache_miss= 5018949 cache_ref=   7684709 items=   1000000 avg_time= 106636905 ns]
large_random<sajson>/manual_time                        92374673 ns     95774001 ns            8         589.047k           498.461M        8.23496M       12.1328M    340.453M              7.40134           10.8364       3.68928G          1.12599G                    24.4787                     3.30733           10.8364M    589.114k   45.9988M        474.89M/s   8.24907M   12.0505M   340.792M         7.40871    10.8255/s 3.68923G/s     1.12599G               24.4787                3.30404      1000k       10.8255M/s [BEST: throughput=  0.50 GB/s doc_throughput=    10 docs/s instructions=  1125990565 cycles=   340452614 branch_miss=  589047 cache_miss= 8234961 cache_ref=  12132792 items=   1000000 avg_time=  92374672 ns]
large_random<rapidjson>/manual_time                    216037037 ns    219462788 ns            3         590.936k           218.956M         7.0221M       10.6991M    717.162M              15.5909           4.76004       3.41372G          2.01514G                    43.8086                     2.80989           4.76004M    591.709k   45.9988M       203.057M/s   6.52028M   10.0345M   720.522M         15.6639    4.62884/s 3.33518G/s     2.01515G               43.8088                2.79679      1000k       4.62884M/s [BEST: throughput=  0.22 GB/s doc_throughput=     4 docs/s instructions=  2015143875 cycles=   717161775 branch_miss=  590936 cache_miss= 7022104 cache_ref=  10699081 items=   1000000 avg_time= 216037037 ns]
large_random<rapidjson_lossless>/manual_time           245033850 ns    248457559 ns            3         592.432k           192.006M        7.02782M       10.7018M    825.914M              17.9551           4.17416        3.4475G          2.48011G                    53.9169                     3.00287           4.17416M    592.152k   45.9988M       179.028M/s   6.51564M   10.0557M   827.569M         17.9911    4.08107/s 3.37737G/s     2.48012G               53.9171                2.99687      1000k       4.08107M/s [BEST: throughput=  0.19 GB/s doc_throughput=     4 docs/s instructions=  2480111253 cycles=   825913869 branch_miss=  592432 cache_miss= 7027816 cache_ref=  10701832 items=   1000000 avg_time= 245033849 ns]
large_random<rapidjson_insitu>/manual_time             230357038 ns    233770715 ns            3         582.029k           204.395M        8.12608M       12.2699M    772.326M              16.7901           4.44349       3.43182G          1.73714G                     37.765                     2.24924           4.44349M    581.291k   45.9988M       190.434M/s   7.63617M   11.6383M   773.351M         16.8124    4.34109/s 3.35718G/s     1.73715G               37.7652                2.24627      1000k       4.34109M/s [BEST: throughput=  0.20 GB/s doc_throughput=     4 docs/s instructions=  1737143974 cycles=   772325717 branch_miss=  582029 cache_miss= 8126083 cache_ref=  12269929 items=   1000000 avg_time= 230357038 ns]
large_random<nlohmann_json>/manual_time               1260475564 ns   1263908463 ns            1         4.11632M           36.4932M        46.8995M       60.4716M    4.63778G              100.824          0.793351       3.67939G          12.7486G                     277.15                     2.74885           793.351k    4.11632M   45.9988M       34.8026M/s   46.8995M   60.4716M   4.63778G         100.824   0.793351/s 3.67939G/s     12.7486G                277.15                2.74885      1000k       793.351k/s [BEST: throughput=  0.04 GB/s doc_throughput=     0 docs/s instructions= 12748552850 cycles=  4637780450 branch_miss= 4116325 cache_miss=46899458 cache_ref=  60471618 items=   1000000 avg_time=1260475564 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                        92161055 ns    102261411 ns            8          1021.9k            1.4914G        15.8257M       22.0725M    339.633M              2.47356            10.862       3.68908G          984.675M                    7.17144                     2.89924           5.69481M    1021.84k   137.305M       1.38752G/s   15.8569M   22.1754M   339.973M         2.47604    10.8506/s  3.6889G/s     984.675M               7.17144                2.89633   524.288k       5.68882M/s [BEST: throughput=  1.49 GB/s doc_throughput=    10 docs/s instructions=   984674891 cycles=   339632568 branch_miss= 1021897 cache_miss=15825676 cache_ref=  22072475 items=    524288 avg_time=  92161055 ns]
kostya<simdjson_ondemand>/manual_time                   60968876 ns     71023405 ns           11         460.159k           2.25398G        10.0974M       13.9237M    224.724M              1.63668           16.4159       3.68904G          650.941M                    4.74084                     2.89662           8.60663M    460.339k   137.305M       2.09739G/s   10.1192M   13.8333M   224.898M         1.63795    16.4018/s 3.68874G/s     650.941M               4.74084                2.89438   524.288k       8.59927M/s [BEST: throughput=  2.25 GB/s doc_throughput=    16 docs/s instructions=   650940574 cycles=   224723954 branch_miss=  460159 cache_miss=10097429 cache_ref=  13923673 items=    524288 avg_time=  60968876 ns]
kostya<yyjson>/manual_time                             176352491 ns    186494676 ns            4         414.619k           779.495M         11.333M       16.2724M    454.563M              3.31061           5.67711        2.5806G          974.185M                    7.09504                     2.14312           2.97644M    413.454k   137.305M       742.514M/s   11.3322M   16.3338M   454.516M         3.31027    5.67046/s 2.57732G/s     974.185M               7.09504                2.14334   524.288k       2.97295M/s [BEST: throughput=  0.78 GB/s doc_throughput=     5 docs/s instructions=   974184694 cycles=   454563295 branch_miss=  414619 cache_miss=11333029 cache_ref=  16272444 items=    524288 avg_time= 176352490 ns]
kostya<yyjson_insitu>/manual_time                      123164668 ns    133305314 ns            6         412.254k           1.11572G         8.7317M       12.3109M    360.063M              2.62236           8.12582       2.92581G          955.915M                    6.96198                     2.65485           4.26027M     412.46k   137.305M       1063.16M/s   8.73089M   12.3335M   360.128M         2.62283    8.11921/s 2.92395G/s     955.915M               6.96198                2.65438   524.288k       4.25681M/s [BEST: throughput=  1.12 GB/s doc_throughput=     8 docs/s instructions=   955915023 cycles=   360063221 branch_miss=  412254 cache_miss= 8731703 cache_ref=  12310917 items=    524288 avg_time= 123164667 ns]
kostya<sajson>/manual_time                             148025080 ns    158151219 ns            5         419.269k           930.221M        12.3765M        17.145M     544.54M              3.96591           6.77485       3.68918G          1.53761G                    11.1985                     2.82369           3.55197M    417.051k   137.305M       884.609M/s   12.3708M   17.1656M   546.068M         3.97704    6.75561/s 3.68902G/s     1.53761G               11.1985                2.81578   524.288k       3.54189M/s [BEST: throughput=  0.93 GB/s doc_throughput=     6 docs/s instructions=  1537609229 cycles=   544539690 branch_miss=  419269 cache_miss=12376532 cache_ref=  17144971 items=    524288 avg_time= 148025080 ns]
kostya<rapidjson>/manual_time                          283141119 ns    293316604 ns            2         970.534k           489.223M        8.31574M       12.2059M    954.805M               6.9539           3.56304       3.40201G          2.73925G                    19.9501                     2.86891           1.86806M    973.392k   137.305M        462.47M/s   8.09533M   11.9384M   956.789M         6.96835    3.53181/s 3.37919G/s     2.73925G               19.9501                2.86296   524.288k       1.85168M/s [BEST: throughput=  0.49 GB/s doc_throughput=     3 docs/s instructions=  2739245974 cycles=   954804576 branch_miss=  970534 cache_miss= 8315736 cache_ref=  12205897 items=    524288 avg_time= 283141119 ns]
kostya<rapidjson_lossless>/manual_time                 297766010 ns    307912252 ns            2          959.28k           464.858M        8.32015M       12.2182M    1008.77M              7.34695           3.38558       3.41528G           3.0082G                    21.9089                     2.98204           1.77502M    959.574k   137.305M       439.756M/s   8.09796M   11.9516M   1010.38M         7.35868    3.35834/s 3.39321G/s      3.0082G               21.9089                2.97728   524.288k       1.76074M/s [BEST: throughput=  0.46 GB/s doc_throughput=     3 docs/s instructions=  3008196412 cycles=  1008772713 branch_miss=  959280 cache_miss= 8320148 cache_ref=  12218213 items=    524288 avg_time= 297766010 ns]
kostya<rapidjson_insitu>/manual_time                   264319408 ns    274477731 ns            3          962.29k           525.495M        12.0255M       16.0668M    883.309M              6.43319           3.82721        3.3806G          2.22201G                     16.183                     2.51555           2.00656M    962.163k   137.305M       495.402M/s   11.7332M   15.7015M   885.015M         6.44561     3.7833/s 3.34828G/s     2.22201G                16.183                2.51071   524.288k       1.98354M/s [BEST: throughput=  0.53 GB/s doc_throughput=     3 docs/s instructions=  2222010565 cycles=   883308561 branch_miss=  962290 cache_miss=12025542 cache_ref=  16066771 items=    524288 avg_time= 264319408 ns]
kostya<nlohmann_json>/manual_time                     1949061775 ns   1959244314 ns            1         14.1639M           70.4467M         69.964M       86.8611M    7.19104G              52.3728          0.513067       3.68949G          17.7632G                     129.37                     2.47018           268.995k    14.1639M   137.305M       67.1832M/s    69.964M   86.8611M   7.19104G         52.3728   0.513067/s 3.68949G/s     17.7632G                129.37                2.47018   524.288k       268.995k/s [BEST: throughput=  0.07 GB/s doc_throughput=     0 docs/s instructions= 17763205734 cycles=  7191043731 branch_miss=14163935 cache_miss=69963951 cache_ref=  86861109 items=    524288 avg_time=1949061775 ns]
distinct_user_id<simdjson_dom>/manual_time                264278 ns       294591 ns         2650           3.544k           2.40874G               0        88.611k    968.083k              1.53295          3.81422k       3.69248G          2.91782M                    4.62036                     3.01402           438.635k    3.78847k   631.515k       2.22548G/s    1.00679   88.6298k   975.363k         1.54448    3.7839k/s 3.69067G/s     2.91782M               4.62036                2.99153        115       435.148k/s [BEST: throughput=  2.41 GB/s doc_throughput=  3814 docs/s instructions=     2917824 cycles=      968083 branch_miss=    3544 cache_miss=       0 cache_ref=     88611 items=       115 avg_time=    264277 ns]
distinct_user_id<simdjson_ondemand>/manual_time           153359 ns       183009 ns         4559           1.644k            4.1587G               0        52.972k    560.856k             0.888112          6.58527k       3.69339G          1.88383M                    2.98303                     3.35885           757.306k     1.6719k   631.515k       3.83509G/s  0.0144769   53.0463k   566.103k        0.896421   6.52066k/s 3.69136G/s     1.88383M               2.98303                3.32771        115       749.876k/s [BEST: throughput=  4.16 GB/s doc_throughput=  6585 docs/s instructions=     1883829 cycles=      560856 branch_miss=    1644 cache_miss=       0 cache_ref=     52972 items=       115 avg_time=    153358 ns]
distinct_user_id<yyjson>/manual_time                      552368 ns       585315 ns         1000           6.485k           1.88455G         21.811k        73.335k    1.23732M              1.95929          2.98417k       3.69237G          2.87805M                    4.55737                     2.32603           343.179k    7.32039k   631.515k       1090.32M/s   7.17302k   55.2899k   1.44696M         2.29125   1.81039k/s 2.61955G/s     2.87824M               4.55768                1.98917        115       208.194k/s [BEST: throughput=  1.88 GB/s doc_throughput=  2984 docs/s instructions=     2878046 cycles=     1237319 branch_miss=    6485 cache_miss=   21811 cache_ref=     73335 items=       115 avg_time=    552368 ns]
distinct_user_id<yyjson_insitu>/manual_time               425625 ns       458229 ns         1645           6.835k           2.04747G             465        44.179k    1.13566M              1.79832          3.24215k       3.68199G          2.87774M                    4.55688                     2.53397           372.848k    7.38657k   631.515k       1.38184G/s    58.1374   30.3932k   1.23852M         1.96118   2.34948k/s 2.90987G/s       2.878M               4.55729                2.32375        115       270.191k/s [BEST: throughput=  2.05 GB/s doc_throughput=  3242 docs/s instructions=     2877737 cycles=     1135663 branch_miss=    6835 cache_miss=     465 cache_ref=     44179 items=       115 avg_time=    425625 ns]
distinct_user_id<sajson>/manual_time                      594746 ns       624876 ns         1177           10.23k           1069.02M               0        45.399k      2.181M               3.4536          1.69279k       3.69197G          5.81792M                    9.21265                     2.66755           194.671k     10.647k   631.515k       1012.63M/s   0.702634    45.483k   2.19453M         3.47503   1.68139k/s 3.68986G/s     5.81792M               9.21265                 2.6511        115        193.36k/s [BEST: throughput=  1.07 GB/s doc_throughput=  1692 docs/s instructions=     5817924 cycles=     2181001 branch_miss=   10230 cache_miss=       0 cache_ref=     45399 items=       115 avg_time=    594746 ns]
distinct_user_id<rapidjson>/manual_time                  2379951 ns      2410272 ns          295          30.049k           289.052M          9.032k        53.573k    8.06511M              12.7711           457.712        3.6915G           21.823M                    34.5566                     2.70585           52.6369k    30.8669k   631.515k       253.055M/s   1.29948k    34.126k   8.23367M          13.038    420.177/s 3.45959G/s     21.8237M               34.5576                2.65054        115       48.3203k/s [BEST: throughput=  0.29 GB/s doc_throughput=   457 docs/s instructions=    21823027 cycles=     8065114 branch_miss=   30049 cache_miss=    9032 cache_ref=     53573 items=       115 avg_time=   2379951 ns]
distinct_user_id<rapidjson_insitu>/manual_time           1539211 ns      1569475 ns          439          26.075k            447.13M             226        43.968k     5.2012M              8.23607           708.027       3.68259G          13.2899M                    21.0445                     2.55516           81.4231k    32.5062k   631.515k       391.278M/s   2.92183k   36.3003k   5.41345M         8.57216    649.684/s 3.51703G/s     13.2902M                21.045                2.45504        115       74.7136k/s [BEST: throughput=  0.45 GB/s doc_throughput=   708 docs/s instructions=    13289923 cycles=     5201200 branch_miss=   26075 cache_miss=     226 cache_ref=     43968 items=       115 avg_time=   1539210 ns]
distinct_user_id<nlohmann_json>/manual_time              8885281 ns      8919106 ns           90         125.725k            82.224M           2.48k        220.05k    28.3275M              44.8564           130.201       3.68827G          75.7179M                    119.899                     2.67295           14.9731k     250.34k   631.515k       67.7817M/s      186.5    418.94k   32.7807M         51.9081    112.546/s 3.68933G/s     74.3659M               117.758                2.26859        115       12.9428k/s [BEST: throughput=  0.08 GB/s doc_throughput=   130 docs/s instructions=    75717877 cycles=    28327468 branch_miss=  125725 cache_miss=    2480 cache_ref=    220050 items=       115 avg_time=   8885280 ns]
find_tweet<simdjson_dom>/manual_time                      251324 ns       280088 ns         2785           3.243k           2.53036G              48        78.624k    921.569k               1.4593          4.00681k       3.69255G           2.8325M                    4.48525                     3.07357           4.00681k    3.39534k   631.515k       2.34018G/s    21.8962    78.515k   927.567k          1.4688   3.97892k/s 3.69072G/s      2.8325M               4.48525                3.05369          1       3.97892k/s [BEST: throughput=  2.53 GB/s doc_throughput=  4006 docs/s instructions=     2832504 cycles=      921569 branch_miss=    3243 cache_miss=      48 cache_ref=     78624 items=         1 avg_time=    251324 ns]
find_tweet<simdjson_ondemand>/manual_time                 107589 ns       135605 ns         6509              777           5.89364G               0        30.415k    395.857k             0.626837          9.33254k       3.69435G          1.37796M                    2.18199                     3.48095           9.33254k     815.001   631.515k       5.46657G/s  0.0351821   30.5075k   397.242k         0.62903    9.2946k/s  3.6922G/s     1.37796M               2.18199                3.46882          1        9.2946k/s [BEST: throughput=  5.89 GB/s doc_throughput=  9332 docs/s instructions=     1377960 cycles=      395857 branch_miss=     777 cache_miss=       0 cache_ref=     30415 items=         1 avg_time=    107589 ns]
find_tweet<yyjson>/manual_time                            616695 ns       646936 ns         1143           9.236k           1.86464G             265        64.091k    1.25078M               1.9806          2.95265k       3.69311G          2.81716M                    4.46095                     2.25232           2.95265k    7.31384k   631.515k       976.592M/s    1029.62   39.4019k   1.47527M         2.33608   1.62155k/s 2.39222G/s     2.81763M                4.4617                1.90991          1       1.62155k/s [BEST: throughput=  1.86 GB/s doc_throughput=  2952 docs/s instructions=     2817155 cycles=     1250779 branch_miss=    9236 cache_miss=     265 cache_ref=     64091 items=         1 avg_time=    616695 ns]
find_tweet<yyjson_insitu>/manual_time                     415366 ns       445177 ns         1685           6.619k           2.11433G             845        35.847k    1099.45k              1.74097          3.34803k       3.68099G          2.81683M                    4.46043                     2.56204           3.34803k    7.14356k   631.515k       1.41596G/s    15.3282   21.8679k   1.20104M         1.90185   2.40751k/s 2.89153G/s     2.81709M               4.46085                2.34554          1       2.40751k/s [BEST: throughput=  2.11 GB/s doc_throughput=  3348 docs/s instructions=     2816831 cycles=     1099450 branch_miss=    6619 cache_miss=     845 cache_ref=     35847 items=         1 avg_time=    415366 ns]
find_tweet<sajson>/manual_time                            582166 ns       611622 ns         1200           9.893k           1093.67M               0        36.208k    2.13182M              3.37572          1.73183k       3.69194G          5.72273M                    9.06191                     2.68443           1.73183k    10.3885k   631.515k       1034.52M/s   0.800833   36.1597k   2.14815M         3.40159   1.71772k/s 3.68993G/s     5.72273M               9.06191                2.66402          1       1.71772k/s [BEST: throughput=  1.09 GB/s doc_throughput=  1731 docs/s instructions=     5722731 cycles=     2131820 branch_miss=    9893 cache_miss=       0 cache_ref=     36208 items=         1 avg_time=    582166 ns]
find_tweet<rapidjson>/manual_time                        2368776 ns      2397306 ns          297          30.663k           289.354M          9.257k        46.173k    8.05665M              12.7577            458.19       3.69148G          21.7391M                    34.4238                     2.69828             458.19    30.8059k   631.515k       254.249M/s    1000.18   26.4309k   8.19322M         12.9739    422.159/s 3.45884G/s     21.7398M               34.4248                2.65338          1        422.159/s [BEST: throughput=  0.29 GB/s doc_throughput=   458 docs/s instructions=    21739132 cycles=     8056653 branch_miss=   30663 cache_miss=    9257 cache_ref=     46173 items=         1 avg_time=   2368775 ns]
find_tweet<rapidjson_insitu>/manual_time                 1524366 ns      1553838 ns          441          25.425k           452.946M              44        34.062k    5.14701M              8.15026           717.238       3.69163G          13.2114M                    20.9201                     2.56681            717.238    31.8087k   631.515k       395.089M/s   2.69485k   27.0223k   5.35895M         8.48587     656.01/s 3.51553G/s     13.2117M               20.9206                2.46535          1         656.01/s [BEST: throughput=  0.45 GB/s doc_throughput=   717 docs/s instructions=    13211388 cycles=     5147010 branch_miss=   25425 cache_miss=      44 cache_ref=     34062 items=         1 avg_time=   1524366 ns]
find_tweet<nlohmann_json>/manual_time                    7272500 ns      7302467 ns          105          99.811k           95.3075M          1.488k       163.723k    24.4369M              38.6956           150.919       3.68799G          65.8419M                     104.26                     2.69437            150.919    164.258k   631.515k       82.8133M/s    162.181   333.833k   26.8309M         42.4865    137.504/s 3.68936G/s      64.481M               102.105                2.40324          1        137.504/s [BEST: throughput=  0.10 GB/s doc_throughput=   150 docs/s instructions=    65841932 cycles=    24436877 branch_miss=   99811 cache_miss=    1488 cache_ref=    163723 items=         1 avg_time=   7272499 ns]
top_tweet<simdjson_dom>/manual_time                       258696 ns       286907 ns         2706           3.342k           2.46086G               0        86.028k    947.574k              1.50048          3.89675k       3.69246G          2.86939M                    4.54366                     3.02814           3.89675k     3.5493k   631.515k        2.2735G/s   0.307465   86.0797k   954.718k         1.51179   3.86554k/s  3.6905G/s     2.86939M               4.54366                3.00549          1       3.86554k/s [BEST: throughput=  2.46 GB/s doc_throughput=  3896 docs/s instructions=     2869391 cycles=      947574 branch_miss=    3342 cache_miss=       0 cache_ref=     86028 items=         1 avg_time=    258695 ns]
top_tweet<simdjson_ondemand>/manual_time                  150066 ns       177975 ns         4664           1.424k           4.23557G               0        52.874k    550.608k             0.871884            6.707k       3.69293G          1.90456M                    3.01585                     3.45901             6.707k    1.52239k   631.515k       3.91925G/s  0.0488851   53.0642k   553.969k        0.877207   6.66375k/s 3.69152G/s     1.90456M               3.01585                3.43802          1       6.66375k/s [BEST: throughput=  4.24 GB/s doc_throughput=  6706 docs/s instructions=     1904556 cycles=      550608 branch_miss=    1424 cache_miss=       0 cache_ref=     52874 items=         1 avg_time=    150065 ns]
top_tweet<simdjson_ondemand_forward_only>/manual_time     168646 ns       196637 ns         4144           1.707k           3.77204G               0        54.093k    618.339k             0.979136            5.973k       3.69334G          2.13001M                    3.37286                     3.44474             5.973k    1.85584k   631.515k       3.48745G/s  0.0120656   53.9959k   622.597k        0.985879   5.92959k/s 3.69175G/s     2.13001M               3.37286                3.42118          1       5.92959k/s [BEST: throughput=  3.77 GB/s doc_throughput=  5973 docs/s instructions=     2130014 cycles=      618339 branch_miss=    1707 cache_miss=       0 cache_ref=     54093 items=         1 avg_time=    168645 ns]
top_tweet<yyjson>/manual_time                             621487 ns       651050 ns         1133           9.701k           1.76042G             103        68.934k    1.28393M               2.0331          2.78761k        3.5791G          2.84443M                    4.50414                     2.21541           2.78761k    7.39546k   631.515k       969.062M/s    1003.31   44.3874k   1.49318M         2.36444   1.60904k/s 2.40259G/s     2.84491M               4.50489                1.90527          1       1.60904k/s [BEST: throughput=  1.76 GB/s doc_throughput=  2787 docs/s instructions=     2844431 cycles=     1283932 branch_miss=    9701 cache_miss=     103 cache_ref=     68934 items=         1 avg_time=    621487 ns]
top_tweet<yyjson_insitu>/manual_time                      420773 ns       449940 ns         1663           6.915k           2.06871G             474        40.344k    1.12384M               1.7796          3.27579k       3.68148G          2.84431M                    4.50395                     2.53088           3.27579k    7.23796k   631.515k       1.39777G/s    51.3674   26.9275k   1.22102M         1.93347   2.37658k/s 2.90184G/s     2.84458M               4.50437                2.32968          1       2.37658k/s [BEST: throughput=  2.07 GB/s doc_throughput=  3275 docs/s instructions=     2844313 cycles=     1123845 branch_miss=    6915 cache_miss=     474 cache_ref=     40344 items=         1 avg_time=    420773 ns]
top_tweet<sajson>/manual_time                             587113 ns       615650 ns         1190          10.118k           1081.58M               0        41.105k    2.15566M              3.41347          1.71267k       3.69193G          5.75272M                     9.1094                     2.66866           1.71267k    10.5198k   631.515k        1025.8M/s   0.813445   41.1856k   2.16657M         3.43075   1.70325k/s 3.69021G/s     5.75272M                9.1094                2.65522          1       1.70325k/s [BEST: throughput=  1.08 GB/s doc_throughput=  1712 docs/s instructions=     5752722 cycles=     2155656 branch_miss=   10118 cache_miss=       0 cache_ref=     41105 items=         1 avg_time=    587113 ns]
top_tweet<rapidjson>/manual_time                         2378718 ns      2407490 ns          295          31.165k           287.576M              64        48.485k    8.10665M              12.8368           455.375       3.69156G          21.7983M                    34.5174                     2.68894            455.375     31.104k   631.515k       253.187M/s   1.16486k   30.5756k   8.22983M         13.0319    420.394/s 3.45977G/s     21.7992M               34.5188                 2.6488          1        420.394/s [BEST: throughput=  0.29 GB/s doc_throughput=   455 docs/s instructions=    21798255 cycles=     8106648 branch_miss=   31165 cache_miss=      64 cache_ref=     48485 items=         1 avg_time=   2378718 ns]
top_tweet<rapidjson_insitu>/manual_time                  1549469 ns      1578261 ns          438          25.863k           445.431M              86        39.351k    5.23392M              8.28788           705.338       3.69168G           13.266M                    21.0066                     2.53461            705.338    32.7909k   631.515k       388.688M/s   2.85607k   32.4135k    5.4525M           8.634    645.382/s 3.51895G/s     13.2665M               21.0074                 2.4331          1        645.382/s [BEST: throughput=  0.45 GB/s doc_throughput=   705 docs/s instructions=    13265962 cycles=     5233918 branch_miss=   25863 cache_miss=      86 cache_ref=     39351 items=         1 avg_time=   1549469 ns]
top_tweet<nlohmann_json>/manual_time                     9410025 ns      9440107 ns           74         191.886k           67.5263M             172       395.336k    34.4999M              54.6303           106.927       3.68898G          87.8574M                    139.122                      2.5466            106.927    196.611k   631.515k       64.0019M/s    309.243   398.126k   34.7185M         54.9765     106.27/s 3.68952G/s     88.1906M               139.649                2.54016          1         106.27/s [BEST: throughput=  0.07 GB/s doc_throughput=   106 docs/s instructions=    87857428 cycles=    34499881 branch_miss=  191886 cache_miss=     172 cache_ref=    395336 items=         1 avg_time=   9410024 ns]
