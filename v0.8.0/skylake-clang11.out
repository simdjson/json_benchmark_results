run_benchmark: v0.8.0 /home/jkeiser/simdjson_benchmark_results/v0.8.0/skylake-clang11.json -DCMAKE_BUILD_TYPE=Release
git reset --hard v0.8.0
HEAD is now at c96ff018 Version 0.8.
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The CXX compiler identification is Clang 11.0.0
-- The C compiler identification is Clang 11.0.0
-- Check for working CXX compiler: /usr/bin/clang++-11
-- Check for working CXX compiler: /usr/bin/clang++-11 -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Check for working C compiler: /usr/bin/clang-11
-- Check for working C compiler: /usr/bin/clang-11 -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed
-- Check if compiler accepts -pthread
-- Check if compiler accepts -pthread - yes
-- Found Threads: TRUE  
-- Looking for fork
-- Looking for fork - found
-- Looking for wait
-- Looking for wait - found
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- Found Git: /usr/bin/git (found version "2.27.0") 
-- git Version: v0.2.1-c96ff018
-- Version: 0.2.1
-- Performing Test HAVE_CXX_FLAG_STD_CXX11
-- Performing Test HAVE_CXX_FLAG_STD_CXX11 - Success
-- Performing Test HAVE_CXX_FLAG_WALL
-- Performing Test HAVE_CXX_FLAG_WALL - Success
-- Performing Test HAVE_CXX_FLAG_WEXTRA
-- Performing Test HAVE_CXX_FLAG_WEXTRA - Success
-- Performing Test HAVE_CXX_FLAG_WSHADOW
-- Performing Test HAVE_CXX_FLAG_WSHADOW - Success
-- Performing Test HAVE_CXX_FLAG_WERROR
-- Performing Test HAVE_CXX_FLAG_WERROR - Success
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32 - Success
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED - Success
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WD654
-- Performing Test HAVE_CXX_FLAG_WD654 - Failed
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY - Success
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES -- failed to compile
-- Performing Test HAVE_CXX_FLAG_COVERAGE
-- Performing Test HAVE_CXX_FLAG_COVERAGE - Success
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Performing Test USE_BOOST_JSON
-- Performing Test USE_BOOST_JSON - Failed
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Found Python3: /usr/bin/python3.8 (found version "3.8.6") found components: Interpreter 
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 10
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
Scanning dependencies of target benchmark
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_api_internal.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_name.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_name.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_register.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_register.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_runner.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_runner.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/colorprint.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/colorprint.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/commandlineflags.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/commandlineflags.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/complexity.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/complexity.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/console_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/console_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/counter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/counter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/csv_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/csv_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/json_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/json_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/sleep.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sleep.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/statistics.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/statistics.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/string_util.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/string_util.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/sysinfo.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sysinfo.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/timers.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/timers.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -P CMakeFiles/benchmark.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/benchmark.dir/link.txt --verbose=1
/usr/bin/ar qc libbenchmark.a  CMakeFiles/benchmark.dir/benchmark.cc.o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o CMakeFiles/benchmark.dir/benchmark_name.cc.o CMakeFiles/benchmark.dir/benchmark_register.cc.o CMakeFiles/benchmark.dir/benchmark_runner.cc.o CMakeFiles/benchmark.dir/colorprint.cc.o CMakeFiles/benchmark.dir/commandlineflags.cc.o CMakeFiles/benchmark.dir/complexity.cc.o CMakeFiles/benchmark.dir/console_reporter.cc.o CMakeFiles/benchmark.dir/counter.cc.o CMakeFiles/benchmark.dir/csv_reporter.cc.o CMakeFiles/benchmark.dir/json_reporter.cc.o CMakeFiles/benchmark.dir/reporter.cc.o CMakeFiles/benchmark.dir/sleep.cc.o CMakeFiles/benchmark.dir/statistics.cc.o CMakeFiles/benchmark.dir/string_util.cc.o CMakeFiles/benchmark.dir/sysinfo.cc.o CMakeFiles/benchmark.dir/timers.cc.o
/usr/bin/ranlib libbenchmark.a
[ 80%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
Scanning dependencies of target generated-data
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated && /usr/bin/ruby genfeaturejson.rb /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-miss.json ...
[ 80%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/clang++-11  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/include  -O3 -DNDEBUG -fPIC   -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -pthread -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/clang++-11 -fPIC -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.7 -o ../libsimdjson.so.7.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.7.0.0 ../libsimdjson.so.7 ../libsimdjson.so
[ 80%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
Scanning dependencies of target yyjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/clang-11  -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src  -O3 -DNDEBUG   -o CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o   -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src/yyjson.c
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -P CMakeFiles/yyjson.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -E cmake_link_script CMakeFiles/yyjson.dir/link.txt --verbose=1
/usr/bin/ar qc libyyjson.a  CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o
/usr/bin/ranlib libyyjson.a
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/clang++-11  -DRAPIDJSON_HAS_STDSTRING -DSAJSON_UNSORTED_OBJECT_KEYS -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_COMPETITION_NLOHMANN_JSON -DSIMDJSON_COMPETITION_RAPIDJSON -DSIMDJSON_COMPETITION_SAJSON -DSIMDJSON_COMPETITION_YYJSON -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/rapidjson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/sajson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/json  -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/clang++-11  -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.7.0.0 ../_deps/google_benchmarks/src/libbenchmark.a ../dependencies/libyyjson.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.8.0/skylake-clang11.json --benchmark_out_format=json
2021-01-25 02:48:04
Running benchmark/bench_ondemand
Run on (4 X 4000 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 256 KiB (x4)
  L3 Unified 8192 KiB (x1)
Load Average: 1.05, 0.93, 0.70
simdjson::dom implementation:      haswell
simdjson::ondemand implementation: fallback

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                  277484 ns       306350 ns         2580           3.558k           2.29144G               0        93.503k    1017.69k               1.6115          3.62847k       3.69265G           2.9828M                    4.72325                     2.93096           362.847k    3.70339k   631.515k       2.11956G/s     7.1031   93.5983k   1023.94k         1.62141   3.60381k/s 3.69009G/s      2.9828M               4.72325                2.91306        100       360.381k/s [BEST: throughput=  2.29 GB/s doc_throughput=  3628 docs/s instructions=     2982801 cycles=     1017688 branch_miss=    3558 cache_miss=       0 cache_ref=     93503 items=       100 avg_time=    277484 ns]
partial_tweets<simdjson_ondemand>/manual_time             201895 ns       230483 ns         3465           2.141k           3.15359G               0        59.549k    739.517k              1.17102          4.99368k       3.69291G          2.26558M                    3.58753                     3.06359           499.368k    2.30566k   631.515k       2.91311G/s   0.211544   59.4531k   745.179k         1.17999   4.95306k/s 3.69092G/s     2.26558M               3.58753                3.04031        100       495.306k/s [BEST: throughput=  3.15 GB/s doc_throughput=  4993 docs/s instructions=     2265576 cycles=      739517 branch_miss=    2141 cache_miss=       0 cache_ref=     59549 items=       100 avg_time=    201895 ns]
partial_tweets<yyjson>/manual_time                        646279 ns       677255 ns         1082           9.848k           1.76387G             332        78.696k    1.32209M              2.09353          2.79308k       3.69271G           2.9199M                    4.62365                     2.20854           279.308k    7.50972k   631.515k       931.888M/s    981.619   51.6594k   1.53021M         2.42307   1.54732k/s 2.36772G/s      2.9206M               4.62474                1.90863        100       154.732k/s [BEST: throughput=  1.76 GB/s doc_throughput=  2793 docs/s instructions=     2919902 cycles=     1322094 branch_miss=    9848 cache_miss=     332 cache_ref=     78696 items=       100 avg_time=    646278 ns]
partial_tweets<yyjson_insitu>/manual_time                 434388 ns       463841 ns         1611           7.049k           1.99936G             753        49.014k    1.15999M              1.83684          3.16597k       3.67249G          2.91959M                    4.62315                     2.51691           316.597k    7.30826k   631.515k       1.35396G/s     142.97   33.8907k   1.25589M         1.98869   2.30209k/s 2.89116G/s     2.91985M               4.62356                2.32493        100       230.209k/s [BEST: throughput=  2.00 GB/s doc_throughput=  3165 docs/s instructions=     2919588 cycles=     1159989 branch_miss=    7049 cache_miss=     753 cache_ref=     49014 items=       100 avg_time=    434388 ns]
partial_tweets<sajson>/manual_time                        598077 ns       626963 ns         1168          10.098k           1063.76M             126        48.229k    2.19186M               3.4708          1.68446k        3.6921G          5.87949M                    9.31013                     2.68242           168.446k    10.5564k   631.515k       1006.99M/s    11.3613   48.4324k   2.20667M         3.49425   1.67203k/s 3.68962G/s     5.87949M               9.31013                2.66441        100       167.203k/s [BEST: throughput=  1.06 GB/s doc_throughput=  1684 docs/s instructions=     5879487 cycles=     2191861 branch_miss=   10098 cache_miss=     126 cache_ref=     48229 items=       100 avg_time=    598076 ns]
partial_tweets<rapidjson>/manual_time                    2391026 ns      2420491 ns          293          29.651k           288.334M         10.979k        55.009k    8.08538M              12.8032           456.574       3.69158G          21.8954M                    34.6713                     2.70803           45.6574k    30.2287k   631.515k       251.883M/s    641.106   34.8636k   8.23336M         13.0375    418.231/s 3.44344G/s     21.8962M               34.6725                2.65945        100       41.8231k/s [BEST: throughput=  0.29 GB/s doc_throughput=   456 docs/s instructions=    21895441 cycles=     8085382 branch_miss=   29651 cache_miss=   10979 cache_ref=     55009 items=       100 avg_time=   2391025 ns]
partial_tweets<rapidjson_insitu>/manual_time             1526367 ns      1555526 ns          460          25.379k           448.467M             181        45.287k     5.1984M              8.23163           710.145       3.69162G          13.3568M                    21.1504                     2.56941           71.0145k    26.0076k   631.515k       394.571M/s    287.978   35.6714k   5.27992M         8.36071     655.15/s 3.45914G/s     13.3574M               21.1513                2.52985        100        65.515k/s [BEST: throughput=  0.45 GB/s doc_throughput=   710 docs/s instructions=    13356793 cycles=     5198397 branch_miss=   25379 cache_miss=     181 cache_ref=     45287 items=       100 avg_time=   1526367 ns]
partial_tweets<nlohmann_json>/manual_time                8960522 ns      8994348 ns           83           150.2k           76.4319M              11       233.135k    30.4841M              48.2714           121.029       3.68947G          80.3052M                    127.163                     2.63433           12.1029k    215.566k   631.515k       67.2126M/s     368.94   370.228k   33.0495M         52.3336    111.601/s 3.68834G/s     80.6462M               127.703                2.44016        100       11.1601k/s [BEST: throughput=  0.08 GB/s doc_throughput=   121 docs/s instructions=    80305154 cycles=    30484082 branch_miss=  150200 cache_miss=      11 cache_ref=    233135 items=       100 avg_time=   8960522 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                  89216264 ns     92608693 ns            8         935.438k           515.984M        10.9273M       15.4396M    328.876M              7.14968           11.2173       3.68912G          1038.74M                    22.5819                     3.15845           11.2173M    937.895k   45.9988M       491.702M/s   10.9432M   15.4392M   329.043M         7.15329    11.2087/s 3.68815G/s     1038.74M               22.5819                3.15685      1000k       11.2087M/s [BEST: throughput=  0.52 GB/s doc_throughput=    11 docs/s instructions=  1038738106 cycles=   328876303 branch_miss=  935438 cache_miss=10927263 cache_ref=  15439554 items=   1000000 avg_time=  89216263 ns]
large_random<simdjson_ondemand>/manual_time             65415676 ns     68781872 ns           11         924.839k           704.122M         5.6737M       8.02017M    241.003M              5.23934           15.3074       3.68914G          672.195M                    14.6133                     2.78915           15.3074M    928.068k   45.9988M       670.602M/s   5.70434M   8.02049M    241.21M         5.24383    15.2869/s 3.68734G/s     672.195M               14.6133                2.78677      1000k       15.2869M/s [BEST: throughput=  0.70 GB/s doc_throughput=    15 docs/s instructions=   672194575 cycles=   241003398 branch_miss=  924839 cache_miss= 5673698 cache_ref=   8020165 items=   1000000 avg_time=  65415675 ns]
large_random<simdjson_ondemand_unordered>/manual_time   65561228 ns     68919004 ns           11         997.519k            702.35M        5.66062M       8.01595M    241.608M              5.25249           15.2689       3.68909G          669.195M                    14.5481                     2.76975           15.2689M    999.533k   45.9988M       669.113M/s   5.69878M   8.01597M   241.748M         5.25554    15.2529/s 3.68737G/s     669.195M               14.5481                2.76814      1000k       15.2529M/s [BEST: throughput=  0.70 GB/s doc_throughput=    15 docs/s instructions=   669194589 cycles=   241608078 branch_miss=  997519 cache_miss= 5660622 cache_ref=   8015947 items=   1000000 avg_time=  65561227 ns]
large_random<yyjson>/manual_time                       124642314 ns    128067002 ns            6         735.027k           369.372M        5.83519M       9.05189M    340.004M               7.3916           8.03004       2.73025G          855.681M                    18.6023                     2.51668           8.03004M    734.999k   45.9988M        351.95M/s   5.83508M   9.06395M   340.085M         7.39335    8.02296/s 2.72849G/s     855.681M               18.6023                2.51608      1000k       8.02296M/s [BEST: throughput=  0.37 GB/s doc_throughput=     8 docs/s instructions=   855680947 cycles=   340004352 branch_miss=  735027 cache_miss= 5835186 cache_ref=   9051885 items=   1000000 avg_time= 124642314 ns]
large_random<yyjson_insitu>/manual_time                106795173 ns    110218926 ns            7         734.778k           430.958M        4.96869M       7.72923M    308.267M              6.70163           9.36891       2.88812G           849.56M                    18.4692                     2.75593           9.36891M    734.998k   45.9988M       410.766M/s   4.97346M   7.73355M    308.25M         6.70127    9.36372/s 2.88637G/s      849.56M               18.4692                2.75607      1000k       9.36372M/s [BEST: throughput=  0.43 GB/s doc_throughput=     9 docs/s instructions=   849560186 cycles=   308266569 branch_miss=  734778 cache_miss= 4968694 cache_ref=   7729234 items=   1000000 avg_time= 106795173 ns]
large_random<sajson>/manual_time                        92563584 ns     95968417 ns            8         588.526k           497.869M        8.16652M        11.962M    340.853M              7.41005           10.8235       3.68923G          1.12599G                    24.4787                     3.30345           10.8235M    589.302k   45.9988M       473.921M/s   8.20563M   12.0658M   341.342M         7.42067    10.8034/s 3.68765G/s     1.12599G               24.4787                3.29872      1000k       10.8034M/s [BEST: throughput=  0.50 GB/s doc_throughput=    10 docs/s instructions=  1125990565 cycles=   340853046 branch_miss=  588526 cache_miss= 8166523 cache_ref=  11961979 items=   1000000 avg_time=  92563584 ns]
large_random<rapidjson>/manual_time                    216256174 ns    219653697 ns            3         602.856k           218.756M        7.04008M       10.8971M    717.398M               15.596           4.75569       3.41172G          2.01514G                    43.8086                     2.80896           4.75569M    602.394k   45.9988M       202.851M/s    6.5262M   10.2416M   720.537M         15.6643    4.62415/s 3.33187G/s     2.01515G               43.8088                2.79674      1000k       4.62415M/s [BEST: throughput=  0.22 GB/s doc_throughput=     4 docs/s instructions=  2015143857 cycles=   717398009 branch_miss=  602856 cache_miss= 7040084 cache_ref=  10897119 items=   1000000 avg_time= 216256174 ns]
large_random<rapidjson_lossless>/manual_time           245215473 ns    248581247 ns            3         580.914k           192.176M        7.03097M       10.9263M     824.89M              17.9329           4.17785       3.44627G          2.48011G                    53.9169                     3.00659           4.17785M    580.657k   45.9988M       178.895M/s   6.52669M   10.2612M    827.37M         17.9868    4.07805/s 3.37405G/s     2.48012G               53.9171                2.99759      1000k       4.07805M/s [BEST: throughput=  0.19 GB/s doc_throughput=     4 docs/s instructions=  2480110819 cycles=   824890433 branch_miss=  580914 cache_miss= 7030965 cache_ref=  10926320 items=   1000000 avg_time= 245215473 ns]
large_random<rapidjson_insitu>/manual_time             236325551 ns    239695081 ns            3         586.135k           199.309M        8.11147M       12.4959M    793.051M              17.2407           4.33291       3.43622G          1.73714G                     37.765                     2.19046           4.33291M    584.703k   45.9988M       185.625M/s   7.62427M   11.8452M   794.601M         17.2744    4.23145/s 3.36232G/s     1.73715G               37.7652                2.18619      1000k       4.23145M/s [BEST: throughput=  0.20 GB/s doc_throughput=     4 docs/s instructions=  1737143540 cycles=   793050963 branch_miss=  586135 cache_miss= 8111474 cache_ref=  12495898 items=   1000000 avg_time= 236325551 ns]
large_random<nlohmann_json>/manual_time               1257935833 ns   1261220139 ns            1         4.11122M           36.5669M         46.814M       61.0466M    4.62708G              100.591          0.794953       3.67831G          12.7485G                     277.15                      2.7552           794.953k    4.11122M   45.9988M       34.8729M/s    46.814M   61.0466M   4.62708G         100.591   0.794953/s 3.67831G/s     12.7485G                277.15                 2.7552      1000k       794.953k/s [BEST: throughput=  0.04 GB/s doc_throughput=     0 docs/s instructions= 12748548991 cycles=  4627079401 branch_miss= 4111217 cache_miss=46813956 cache_ref=  61046593 items=   1000000 avg_time=1257935833 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                        92104516 ns    102560074 ns            8         1018.01k           1.49251G        15.7184M       22.3863M     339.36M              2.47157             10.87       3.68885G          984.675M                    7.17144                     2.90157           5.69902M    1017.43k   137.305M       1.38837G/s   15.7718M   22.3473M   339.694M         2.47401    10.8572/s 3.68813G/s     984.675M               7.17144                2.89871   524.288k       5.69232M/s [BEST: throughput=  1.49 GB/s doc_throughput=    10 docs/s instructions=   984674891 cycles=   339359561 branch_miss= 1018014 cache_miss=15718412 cache_ref=  22386338 items=    524288 avg_time=  92104516 ns]
kostya<simdjson_ondemand>/manual_time                   60951172 ns     71351155 ns           11         460.337k           2.25426G        10.0562M         14.03M    224.665M              1.63625           16.4179       3.68854G          650.941M                    4.74084                     2.89738           8.60772M    460.815k   137.305M       2.09799G/s   10.0647M   13.9534M   224.819M         1.63737    16.4066/s 3.68851G/s     650.941M               4.74084                 2.8954   524.288k       8.60177M/s [BEST: throughput=  2.25 GB/s doc_throughput=    16 docs/s instructions=   650940573 cycles=   224665448 branch_miss=  460337 cache_miss=10056204 cache_ref=  14030036 items=    524288 avg_time=  60951172 ns]
kostya<yyjson>/manual_time                             177099136 ns    187566587 ns            4         412.494k           775.981M        11.2388M       16.4291M    455.927M              3.32054           5.65151       2.57668G          974.184M                    7.09504                     2.13671           2.96302M    413.116k   137.305M       739.384M/s   11.2459M   16.4239M   455.703M         3.31891    5.64655/s 2.57315G/s     974.185M               7.09504                2.13776   524.288k       2.96042M/s [BEST: throughput=  0.78 GB/s doc_throughput=     5 docs/s instructions=   974184491 cycles=   455926953 branch_miss=  412494 cache_miss=11238816 cache_ref=  16429091 items=    524288 avg_time= 177099136 ns]
kostya<yyjson_insitu>/manual_time                      123222674 ns    133711448 ns            6         415.201k           1.11466G        8.67017M       12.3702M    360.189M              2.62328           8.11811       2.92406G          955.915M                    6.96198                     2.65392           4.25623M    414.773k   137.305M       1062.66M/s   8.67205M   12.4078M   360.219M         2.62349    8.11539/s 2.92332G/s     955.915M               6.96198                2.65371   524.288k        4.2548M/s [BEST: throughput=  1.11 GB/s doc_throughput=     8 docs/s instructions=   955914817 cycles=   360189088 branch_miss=  415201 cache_miss= 8670167 cache_ref=  12370215 items=    524288 avg_time= 123222674 ns]
kostya<sajson>/manual_time                             148134754 ns    158607792 ns            5         418.582k           929.055M         12.324M       17.2024M    545.163M              3.97045           6.76636       3.68877G          1.53761G                    11.1985                     2.82046           3.54752M    417.852k   137.305M       883.954M/s   12.3308M   17.1961M   546.404M         3.97949    6.75061/s 3.68856G/s     1.53761G               11.1985                2.81405   524.288k       3.53926M/s [BEST: throughput=  0.93 GB/s doc_throughput=     6 docs/s instructions=  1537609230 cycles=   545163168 branch_miss=  418582 cache_miss=12323992 cache_ref=  17202435 items=    524288 avg_time= 148134753 ns]
kostya<rapidjson>/manual_time                          283458528 ns    293966282 ns            2         978.602k           488.558M        8.30527M       12.3187M    955.432M              6.95847            3.5582       3.39962G          2.73925G                    19.9501                     2.86702           1.86552M    979.577k   137.305M       461.952M/s   8.07248M   11.9836M   957.348M         6.97242    3.52785/s 3.37738G/s     2.73925G               19.9501                2.86129   524.288k       1.84961M/s [BEST: throughput=  0.49 GB/s doc_throughput=     3 docs/s instructions=  2739246047 cycles=   955432242 branch_miss=  978602 cache_miss= 8305266 cache_ref=  12318651 items=    524288 avg_time= 283458528 ns]
kostya<rapidjson_lossless>/manual_time                 297856430 ns    308363177 ns            2          960.04k           464.708M        8.30432M       12.2434M    1008.17M              7.34253           3.38449       3.41213G           3.0082G                    21.9089                     2.98383           1.77445M    961.319k   137.305M       439.622M/s   8.07386M   12.0229M    1009.9M         7.35518    3.35732/s 3.39057G/s      3.0082G               21.9089                 2.9787   524.288k        1.7602M/s [BEST: throughput=  0.46 GB/s doc_throughput=     3 docs/s instructions=  3008196483 cycles=  1008166547 branch_miss=  960040 cache_miss= 8304323 cache_ref=  12243360 items=    524288 avg_time= 297856429 ns]
kostya<rapidjson_insitu>/manual_time                   273136413 ns    283623831 ns            3         962.488k           509.636M        11.9729M       16.0991M    912.332M              6.64456           3.71171       3.38631G          2.22201G                     16.183                     2.43553             1.946M    1071.67k   137.305M        479.41M/s   11.6843M   15.7298M   916.691M         6.67632    3.66117/s 3.35617G/s     2.22201G                16.183                2.42395   524.288k       1.91951M/s [BEST: throughput=  0.51 GB/s doc_throughput=     3 docs/s instructions=  2222010644 cycles=   912331500 branch_miss=  962488 cache_miss=11972901 cache_ref=  16099109 items=    524288 avg_time= 273136413 ns]
kostya<nlohmann_json>/manual_time                     1945065570 ns   1955423228 ns            1         14.2255M           70.5914M        68.6976M       86.6515M    7.17493G              52.2554          0.514121       3.68879G          17.7632G                     129.37                     2.47573           269.548k    14.2255M   137.305M       67.3213M/s   68.6976M   86.6515M   7.17493G         52.2554   0.514121/s 3.68879G/s     17.7632G                129.37                2.47573   524.288k       269.548k/s [BEST: throughput=  0.07 GB/s doc_throughput=     0 docs/s instructions= 17763207423 cycles=  7174932265 branch_miss=14225516 cache_miss=68697551 cache_ref=  86651542 items=    524288 avg_time=1945065570 ns]
distinct_user_id<simdjson_dom>/manual_time                265438 ns       296086 ns         2636           3.769k           2.39469G               0        94.572k    973.814k              1.54203          3.79197k       3.69268G          2.91782M                    4.62036                     2.99628           436.077k    3.89002k   631.515k       2.21575G/s    1.31184   94.6011k   979.266k         1.55066   3.76736k/s 3.68925G/s     2.91782M               4.62036                 2.9796        115       433.247k/s [BEST: throughput=  2.39 GB/s doc_throughput=  3791 docs/s instructions=     2917824 cycles=      973814 branch_miss=    3769 cache_miss=       0 cache_ref=     94572 items=       115 avg_time=    265437 ns]
distinct_user_id<simdjson_ondemand>/manual_time           154221 ns       184347 ns         4538           1.693k           4.13433G               0        56.282k    564.187k             0.893387          6.54669k       3.69356G          1.88383M                    2.98303                     3.33902           752.869k    1.70589k   631.515k       3.81364G/s   0.922212   56.0383k   569.171k        0.901279   6.48419k/s 3.69061G/s     1.88383M               2.98303                3.30978        115       745.682k/s [BEST: throughput=  4.13 GB/s doc_throughput=  6546 docs/s instructions=     1883829 cycles=      564187 branch_miss=    1693 cache_miss=       0 cache_ref=     56282 items=       115 avg_time=    154221 ns]
distinct_user_id<yyjson>/manual_time                      554694 ns       588291 ns         1000           6.587k           1.87842G         22.021k        76.153k    1.24131M               1.9656          2.97447k       3.69224G          2.87805M                    4.55737                     2.31856           342.064k    7.32852k   631.515k       1085.75M/s   7.29246k   57.7775k    1.4515M         2.29844    1.8028k/s 2.61675G/s     2.87824M               4.55768                1.98295        115       207.321k/s [BEST: throughput=  1.88 GB/s doc_throughput=  2974 docs/s instructions=     2878046 cycles=     1241308 branch_miss=    6587 cache_miss=   22021 cache_ref=     76153 items=       115 avg_time=    554694 ns]
distinct_user_id<yyjson_insitu>/manual_time               426131 ns       459165 ns         1642           7.405k           2.02487G              34        47.084k    1.15159M              1.82354          3.20636k       3.69243G          2.87753M                    4.55655                     2.49873           368.732k    7.36517k   631.515k        1.3802G/s    75.9379   32.3304k    1.2384M         1.96099    2.3467k/s 2.90614G/s     2.87779M               4.55697                2.32381        115        269.87k/s [BEST: throughput=  2.02 GB/s doc_throughput=  3206 docs/s instructions=     2877529 cycles=     1151595 branch_miss=    7405 cache_miss=      34 cache_ref=     47084 items=       115 avg_time=    426130 ns]
distinct_user_id<sajson>/manual_time                      594824 ns       625370 ns         1176          10.327k           1067.99M               0        47.982k    2.18312M              3.45696          1.69116k       3.69201G          5.81792M                    9.21265                     2.66495           194.483k    10.6093k   631.515k        1012.5M/s    0.94898   48.1335k   2.19421M         3.47452   1.68117k/s 3.68884G/s     5.81792M               9.21265                2.65149        115       193.335k/s [BEST: throughput=  1.07 GB/s doc_throughput=  1691 docs/s instructions=     5817924 cycles=     2183125 branch_miss=   10327 cache_miss=       0 cache_ref=     47982 items=       115 avg_time=    594823 ns]
distinct_user_id<rapidjson>/manual_time                  2371360 ns      2402248 ns          296          29.538k           289.728M          9.146k        55.848k    8.04629M              12.7412           458.782       3.69149G          21.8229M                    34.5564                     2.71217           52.7599k    30.1946k   631.515k       253.972M/s   1.31912k   36.5326k   8.19609M         12.9785    421.699/s 3.45628G/s     21.8236M               34.5576                2.66269        115       48.4954k/s [BEST: throughput=  0.29 GB/s doc_throughput=   458 docs/s instructions=    21822906 cycles=     8046286 branch_miss=   29538 cache_miss=    9146 cache_ref=     55848 items=       115 avg_time=   2371359 ns]
distinct_user_id<rapidjson_insitu>/manual_time           1541975 ns      1572326 ns          438          30.265k           436.498M         13.025k        47.112k      5.333M              8.44477           691.192       3.68613G          13.2898M                    21.0444                       2.492           79.4871k    32.7944k   631.515k       390.577M/s    2.9785k   38.5995k   5.42002M         8.58256    648.519/s 3.51498G/s     13.2901M               21.0448                2.45204        115       74.5797k/s [BEST: throughput=  0.44 GB/s doc_throughput=   691 docs/s instructions=    13289826 cycles=     5332996 branch_miss=   30265 cache_miss=   13025 cache_ref=     47112 items=       115 avg_time=   1541975 ns]
distinct_user_id<nlohmann_json>/manual_time              8033171 ns      8067466 ns           89         125.736k           81.1348M              87       227.188k    28.7153M              45.4705           128.476       3.68924G          75.7432M                    119.939                     2.63773           14.7748k    139.668k   631.515k       74.9716M/s    189.775   419.881k   29.6329M         46.9236    124.484/s 3.68882G/s     74.3611M                117.75                2.50941        115       14.3156k/s [BEST: throughput=  0.08 GB/s doc_throughput=   128 docs/s instructions=    75743217 cycles=    28715279 branch_miss=  125736 cache_miss=      87 cache_ref=    227188 items=       115 avg_time=   8033170 ns]
find_tweet<simdjson_dom>/manual_time                      252666 ns       281834 ns         2769           3.435k           2.51536G               0        83.668k    927.078k              1.46802          3.98306k       3.69261G           2.8325M                    4.48525                      3.0553           3.98306k    3.58696k   631.515k       2.32775G/s    2.93463   83.7247k   932.207k         1.47614   3.95779k/s 3.68948G/s      2.8325M               4.48525                3.03849          1       3.95779k/s [BEST: throughput=  2.52 GB/s doc_throughput=  3983 docs/s instructions=     2832504 cycles=      927078 branch_miss=    3435 cache_miss=       0 cache_ref=     83668 items=         1 avg_time=    252666 ns]
find_tweet<simdjson_ondemand>/manual_time                 108102 ns       136535 ns         6459              783           5.86953G               0        32.588k    397.442k             0.629347          9.29437k       3.69397G          1.37796M                    2.18199                     3.46707           9.29437k     814.333   631.515k       5.44062G/s    1.38582   32.5823k   399.101k        0.631975   9.25048k/s 3.69188G/s     1.37796M               2.18199                3.45266          1       9.25048k/s [BEST: throughput=  5.87 GB/s doc_throughput=  9294 docs/s instructions=     1377960 cycles=      397442 branch_miss=     783 cache_miss=       0 cache_ref=     32588 items=         1 avg_time=    108102 ns]
find_tweet<yyjson>/manual_time                            617855 ns       648467 ns         1141           9.299k           1.85275G             364         68.67k    1.25879M              1.99329          2.93382k       3.69307G          2.81716M                    4.46095                     2.23798           2.93382k    7.26043k   631.515k       974.758M/s    1003.44   41.5836k   1.47563M         2.33665    1.6185k/s 2.38831G/s     2.81763M                4.4617                1.90944          1        1.6185k/s [BEST: throughput=  1.85 GB/s doc_throughput=  2933 docs/s instructions=     2817155 cycles=     1258794 branch_miss=    9299 cache_miss=     364 cache_ref=     68670 items=         1 avg_time=    617855 ns]
find_tweet<yyjson_insitu>/manual_time                     415801 ns       446135 ns         1686           6.791k           2.10491G             554        38.262k    1.10458M               1.7491          3.33311k       3.68169G          2.81683M                    4.46043                     2.55013           3.33311k    7.16618k   631.515k       1.41448G/s    15.6435   23.5165k   1.20154M         1.90264     2.405k/s 2.88971G/s     2.81709M               4.46085                2.34456          1         2.405k/s [BEST: throughput=  2.10 GB/s doc_throughput=  3333 docs/s instructions=     2816831 cycles=     1104582 branch_miss=    6791 cache_miss=     554 cache_ref=     38262 items=         1 avg_time=    415801 ns]
find_tweet<sajson>/manual_time                            583100 ns       612987 ns         1201          10.049k           1091.47M               0        38.415k    2.13611M              3.38251          1.72833k        3.6919G          5.72273M                    9.06191                     2.67905           1.72833k    10.4759k   631.515k       1032.86M/s    1.09242   38.3535k   2.15089M         3.40592   1.71497k/s 3.68871G/s     5.72273M               9.06191                2.66064          1       1.71497k/s [BEST: throughput=  1.09 GB/s doc_throughput=  1728 docs/s instructions=     5722731 cycles=     2136108 branch_miss=   10049 cache_miss=       0 cache_ref=     38415 items=         1 avg_time=    583100 ns]
find_tweet<rapidjson>/manual_time                        2358638 ns      2387672 ns          298          29.869k            290.25M         16.138k        48.421k    8.03186M              12.7184           459.608       3.69151G          21.7395M                    34.4243                     2.70665            459.608    30.0655k   631.515k       255.342M/s    989.044   28.7166k   8.15403M         12.9118    423.974/s 3.45709G/s     21.7402M               34.4254                2.66619          1        423.974/s [BEST: throughput=  0.29 GB/s doc_throughput=   459 docs/s instructions=    21739463 cycles=     8031858 branch_miss=   29869 cache_miss=   16138 cache_ref=     48421 items=         1 avg_time=   2358637 ns]
find_tweet<rapidjson_insitu>/manual_time                 1531061 ns      1560496 ns          445          25.247k           421.069M              12        27.042k    5.19918M              8.23286            666.76        3.4666G           13.212M                    20.9211                     2.54117             666.76    32.5925k   631.515k       393.361M/s   2.68288k   29.2279k   5.37951M         8.51843    653.142/s 3.51359G/s     13.2118M               20.9209                2.45596          1        653.142/s [BEST: throughput=  0.42 GB/s doc_throughput=   666 docs/s instructions=    13211968 cycles=     5199176 branch_miss=   25247 cache_miss=      12 cache_ref=     27042 items=         1 avg_time=   1531061 ns]
find_tweet<nlohmann_json>/manual_time                    6962230 ns      6992814 ns          103          99.883k           94.0516M              67       169.541k    24.7784M              39.2364            148.93       3.69025G          65.8679M                    104.301                     2.65828             148.93    113.818k   631.515k       86.5038M/s    147.961   347.755k   25.6856M         40.6729    143.632/s 3.68927G/s     64.4847M               102.111                2.51054          1        143.632/s [BEST: throughput=  0.09 GB/s doc_throughput=   148 docs/s instructions=    65867855 cycles=    24778382 branch_miss=   99883 cache_miss=      67 cache_ref=    169541 items=         1 avg_time=   6962230 ns]
top_tweet<simdjson_dom>/manual_time                       259391 ns       288131 ns         2696           3.502k            2.4516G               0        91.718k    951.163k              1.50616          3.88209k        3.6925G          2.86939M                    4.54366                     3.01672           3.88209k     3.6692k   631.515k        2.2674G/s    9.10237   91.5911k   956.939k         1.51531   3.85518k/s 3.68917G/s     2.86939M               4.54366                2.99851          1       3.85518k/s [BEST: throughput=  2.45 GB/s doc_throughput=  3882 docs/s instructions=     2869391 cycles=      951163 branch_miss=    3502 cache_miss=       0 cache_ref=     91718 items=         1 avg_time=    259391 ns]
top_tweet<simdjson_ondemand>/manual_time                  150394 ns       178871 ns         4647           1.451k             4.228G               0        56.457k    551.615k             0.873479          6.69501k       3.69307G          1.90456M                    3.01585                     3.45269           6.69501k    1.53318k   631.515k        3.9107G/s   0.107166   56.2771k   555.161k        0.879094   6.64922k/s 3.69139G/s     1.90456M               3.01585                3.43064          1       6.64922k/s [BEST: throughput=  4.23 GB/s doc_throughput=  6695 docs/s instructions=     1904556 cycles=      551615 branch_miss=    1451 cache_miss=       0 cache_ref=     56457 items=         1 avg_time=    150393 ns]
top_tweet<simdjson_ondemand_forward_only>/manual_time     169131 ns       197524 ns         4137           1.744k            3.7646G               0        56.913k    619.467k             0.980922          5.96122k       3.69278G          2.13001M                    3.37286                     3.43846           5.96122k    1.88634k   631.515k       3.47746G/s   0.974136   57.0323k   624.053k        0.988184   5.91259k/s 3.68977G/s     2.13001M               3.37286                3.41319          1       5.91259k/s [BEST: throughput=  3.76 GB/s doc_throughput=  5961 docs/s instructions=     2130014 cycles=      619467 branch_miss=    1744 cache_miss=       0 cache_ref=     56913 items=         1 avg_time=    169130 ns]
top_tweet<yyjson>/manual_time                             622759 ns       653016 ns         1131            9.59k           1.81753G             182        73.775k    1.28317M               2.0319          2.87805k       3.69303G          2.84442M                    4.50412                     2.21671           2.87805k    7.38917k   631.515k       967.083M/s    994.142   46.8864k   1.49564M         2.36834   1.60576k/s 2.40164G/s     2.84491M               4.50489                1.90213          1       1.60576k/s [BEST: throughput=  1.82 GB/s doc_throughput=  2878 docs/s instructions=     2844421 cycles=     1283173 branch_miss=    9590 cache_miss=     182 cache_ref=     73775 items=         1 avg_time=    622758 ns]
top_tweet<yyjson_insitu>/manual_time                      420980 ns       450489 ns         1663           6.601k           2.08314G             585        42.821k    1.11602M              1.76721          3.29864k       3.68135G          2.84411M                    4.50362                     2.54843           3.29864k    7.20129k   631.515k       1.39708G/s    48.8863   28.7471k   1.21991M         1.93173   2.37541k/s 2.89779G/s     2.84437M               4.50404                2.33161          1       2.37541k/s [BEST: throughput=  2.08 GB/s doc_throughput=  3298 docs/s instructions=     2844106 cycles=     1116021 branch_miss=    6601 cache_miss=     585 cache_ref=     42821 items=         1 avg_time=    420980 ns]
top_tweet<sajson>/manual_time                             587376 ns       616455 ns         1191          10.086k           1082.86M               0        43.581k    2.15316M              3.40952           1.7147k       3.69203G          5.75272M                     9.1094                     2.67176            1.7147k    10.5098k   631.515k       1025.34M/s    1.05877    43.743k   2.16733M         3.43196   1.70249k/s 3.68986G/s     5.75272M                9.1094                2.65428          1       1.70249k/s [BEST: throughput=  1.08 GB/s doc_throughput=  1714 docs/s instructions=     5752722 cycles=     2153161 branch_miss=   10086 cache_miss=       0 cache_ref=     43581 items=         1 avg_time=    587376 ns]
top_tweet<rapidjson>/manual_time                         2370063 ns      2399254 ns          297          29.702k           290.235M              64        51.108k    8.03247M              12.7194           459.585        3.6916G          21.7979M                    34.5168                     2.71372            459.585    30.2703k   631.515k       254.111M/s   1.16259k   32.8823k   8.19531M         12.9772     421.93/s 3.45784G/s     21.7987M                34.518                 2.6599          1         421.93/s [BEST: throughput=  0.29 GB/s doc_throughput=   459 docs/s instructions=    21797854 cycles=     8032467 branch_miss=   29702 cache_miss=      64 cache_ref=     51108 items=         1 avg_time=   2370062 ns]
top_tweet<rapidjson_insitu>/manual_time                  1535720 ns      1564867 ns          441          25.711k           448.097M           12.7k        42.883k    5.20271M              8.23846           709.559       3.69163G          13.2661M                    21.0068                     2.54985            709.559    32.6173k   631.515k       392.168M/s   2.85386k   34.5792k   5.39977M          8.5505     651.16/s 3.51611G/s     13.2664M               21.0073                2.45685          1         651.16/s [BEST: throughput=  0.45 GB/s doc_throughput=   709 docs/s instructions=    13266115 cycles=     5202714 branch_miss=   25711 cache_miss=   12700 cache_ref=     42883 items=         1 avg_time=   1535720 ns]
top_tweet<nlohmann_json>/manual_time                     9409375 ns      9440548 ns           75         191.311k            67.637M             111       402.157k    34.4511M              54.5531           107.103       3.68981G           87.837M                    139.089                     2.54961            107.103     195.25k   631.515k       64.0063M/s   2.50373k   408.366k   34.7074M          54.959    106.277/s  3.6886G/s     88.2158M               139.689                 2.5417          1        106.277/s [BEST: throughput=  0.07 GB/s doc_throughput=   107 docs/s instructions=    87837014 cycles=    34451125 branch_miss=  191311 cache_miss=     111 cache_ref=    402157 items=         1 avg_time=   9409375 ns]
