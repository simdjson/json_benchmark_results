run_benchmark: v0.8.0 /home/jkeiser/simdjson_benchmark_results/v0.8.0/skylake-x-clang11-native.json -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native
git reset --hard v0.8.0
HEAD is now at c96ff018 Version 0.8.
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The CXX compiler identification is Clang 11.0.0
-- The C compiler identification is Clang 11.0.0
-- Check for working CXX compiler: /usr/bin/clang++-11
-- Check for working CXX compiler: /usr/bin/clang++-11 -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Check for working C compiler: /usr/bin/clang-11
-- Check for working C compiler: /usr/bin/clang-11 -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed
-- Check if compiler accepts -pthread
-- Check if compiler accepts -pthread - yes
-- Found Threads: TRUE  
-- Looking for fork
-- Looking for fork - found
-- Looking for wait
-- Looking for wait - found
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- Found Git: /usr/bin/git (found version "2.27.0") 
-- git Version: v0.2.1-c96ff018
-- Version: 0.2.1
-- Performing Test HAVE_CXX_FLAG_STD_CXX11
-- Performing Test HAVE_CXX_FLAG_STD_CXX11 - Success
-- Performing Test HAVE_CXX_FLAG_WALL
-- Performing Test HAVE_CXX_FLAG_WALL - Success
-- Performing Test HAVE_CXX_FLAG_WEXTRA
-- Performing Test HAVE_CXX_FLAG_WEXTRA - Success
-- Performing Test HAVE_CXX_FLAG_WSHADOW
-- Performing Test HAVE_CXX_FLAG_WSHADOW - Success
-- Performing Test HAVE_CXX_FLAG_WERROR
-- Performing Test HAVE_CXX_FLAG_WERROR - Success
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32 - Success
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED - Success
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WD654
-- Performing Test HAVE_CXX_FLAG_WD654 - Failed
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY - Success
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES -- failed to compile
-- Performing Test HAVE_CXX_FLAG_COVERAGE
-- Performing Test HAVE_CXX_FLAG_COVERAGE - Success
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Performing Test USE_BOOST_JSON
-- Performing Test USE_BOOST_JSON - Failed
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Found Python3: /usr/bin/python3.8 (found version "3.8.6") found components: Interpreter 
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 10
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
Scanning dependencies of target benchmark
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_api_internal.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_name.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_name.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_register.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_register.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_runner.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_runner.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/colorprint.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/colorprint.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/commandlineflags.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/commandlineflags.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/complexity.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/complexity.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/console_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/console_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/counter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/counter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/csv_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/csv_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/json_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/json_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/sleep.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sleep.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/statistics.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/statistics.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/string_util.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/string_util.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/sysinfo.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sysinfo.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/timers.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/timers.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -P CMakeFiles/benchmark.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/benchmark.dir/link.txt --verbose=1
/usr/bin/ar qc libbenchmark.a  CMakeFiles/benchmark.dir/benchmark.cc.o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o CMakeFiles/benchmark.dir/benchmark_name.cc.o CMakeFiles/benchmark.dir/benchmark_register.cc.o CMakeFiles/benchmark.dir/benchmark_runner.cc.o CMakeFiles/benchmark.dir/colorprint.cc.o CMakeFiles/benchmark.dir/commandlineflags.cc.o CMakeFiles/benchmark.dir/complexity.cc.o CMakeFiles/benchmark.dir/console_reporter.cc.o CMakeFiles/benchmark.dir/counter.cc.o CMakeFiles/benchmark.dir/csv_reporter.cc.o CMakeFiles/benchmark.dir/json_reporter.cc.o CMakeFiles/benchmark.dir/reporter.cc.o CMakeFiles/benchmark.dir/sleep.cc.o CMakeFiles/benchmark.dir/statistics.cc.o CMakeFiles/benchmark.dir/string_util.cc.o CMakeFiles/benchmark.dir/sysinfo.cc.o CMakeFiles/benchmark.dir/timers.cc.o
/usr/bin/ranlib libbenchmark.a
[ 80%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
Scanning dependencies of target generated-data
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated && /usr/bin/ruby genfeaturejson.rb /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-miss.json ...
[ 80%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/clang++-11  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/include  -march=native -O3 -DNDEBUG -fPIC   -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -pthread -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/clang++-11 -fPIC -march=native -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.7 -o ../libsimdjson.so.7.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.7.0.0 ../libsimdjson.so.7 ../libsimdjson.so
[ 80%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
Scanning dependencies of target yyjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/clang-11  -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src  -O3 -DNDEBUG   -o CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o   -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src/yyjson.c
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -P CMakeFiles/yyjson.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -E cmake_link_script CMakeFiles/yyjson.dir/link.txt --verbose=1
/usr/bin/ar qc libyyjson.a  CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o
/usr/bin/ranlib libyyjson.a
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/clang++-11  -DRAPIDJSON_HAS_STDSTRING -DSAJSON_UNSORTED_OBJECT_KEYS -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_COMPETITION_NLOHMANN_JSON -DSIMDJSON_COMPETITION_RAPIDJSON -DSIMDJSON_COMPETITION_SAJSON -DSIMDJSON_COMPETITION_YYJSON -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/rapidjson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/sajson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/json  -march=native -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/clang++-11  -march=native -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.7.0.0 ../_deps/google_benchmarks/src/libbenchmark.a ../dependencies/libyyjson.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.8.0/skylake-x-clang11-native.json --benchmark_out_format=json
2021-01-25 01:02:21
Running benchmark/bench_ondemand
Run on (4 X 3200 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 1024 KiB (x4)
  L3 Unified 8448 KiB (x1)
Load Average: 1.16, 1.00, 0.68
***WARNING*** CPU scaling is enabled, the benchmark real time measurements may be noisy and will incur extra overhead.
simdjson::dom implementation:      haswell
simdjson::ondemand implementation: haswell

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                  323646 ns       394781 ns         2169           3.695k           1.96385G               2        34.231k    1027.01k              1.62627          3.10974k       3.19374G          2.93219M                     4.6431                     2.85507           310.974k    3.84535k   631.515k       1.81724G/s    2.50669   34.2795k   1032.56k         1.63504   3.08979k/s 3.19038G/s     2.93219M                4.6431                2.83974        100       308.979k/s [BEST: throughput=  1.96 GB/s doc_throughput=  3109 docs/s instructions=     2932189 cycles=     1027011 branch_miss=    3695 cache_miss=       2 cache_ref=     34231 items=       100 avg_time=    323646 ns]
partial_tweets<simdjson_ondemand>/manual_time             205166 ns       262279 ns         3408           1.921k           3.10187G               0        11.184k    650.319k              1.02978          4.91178k       3.19423G          1.88084M                     2.9783                     2.89218           491.178k    2.04835k   631.515k       2.86667G/s  0.0513498   11.2964k   654.697k         1.03671    4.8741k/s 3.19106G/s     1.88084M                2.9783                2.87284        100        487.41k/s [BEST: throughput=  3.10 GB/s doc_throughput=  4911 docs/s instructions=     1880838 cycles=      650319 branch_miss=    1921 cache_miss=       0 cache_ref=     11184 items=       100 avg_time=    205166 ns]
partial_tweets<yyjson>/manual_time                        790356 ns       870352 ns          884           9.672k           1.44707G             211        28.495k    1.39376M              2.20701          2.29142k        3.1937G          2.91951M                    4.62303                      2.0947           229.142k    7.54068k   631.515k        762.01M/s    654.178   26.0699k   1.55474M         2.46192   1.26525k/s 1.96714G/s      2.9202M               4.62412                1.87826        100       126.525k/s [BEST: throughput=  1.45 GB/s doc_throughput=  2291 docs/s instructions=     2919511 cycles=     1393762 branch_miss=    9672 cache_miss=     211 cache_ref=     28495 items=       100 avg_time=    790356 ns]
partial_tweets<yyjson_insitu>/manual_time                 510097 ns       576051 ns         1384           7.359k           1.78646G             107        15.091k    1.12921M               1.7881          2.82885k       3.19438G           2.9194M                    4.62285                     2.58534           282.885k    7.31613k   631.515k         1.153G/s    116.341   12.4579k   1.22882M         1.94582   1.96041k/s 2.40898G/s     2.91967M               4.62327                  2.376        100       196.041k/s [BEST: throughput=  1.79 GB/s doc_throughput=  2828 docs/s instructions=     2919402 cycles=     1129212 branch_miss=    7359 cache_miss=     107 cache_ref=     15091 items=       100 avg_time=    510097 ns]
partial_tweets<sajson>/manual_time                        691068 ns       755788 ns         1011          10.692k           923.334M               1        13.656k    2.18381M              3.45806          1.46209k       3.19294G          5.87892M                    9.30924                     2.69204           146.209k    10.9622k   631.515k       871.491M/s    3.44906     13.73k   2.20455M          3.4909   1.44704k/s 3.19007G/s     5.87892M               9.30924                2.66672        100       144.704k/s [BEST: throughput=  0.92 GB/s doc_throughput=  1462 docs/s instructions=     5878924 cycles=     2183814 branch_miss=   10692 cache_miss=       1 cache_ref=     13656 items=       100 avg_time=    691067 ns]
partial_tweets<rapidjson>/manual_time                    2538322 ns      2607140 ns          275          31.502k           278.735M          7.276k        22.773k    7.23346M              11.4541           441.375       3.19267G          21.8954M                    34.6712                     3.02696           44.1375k    33.0014k   631.515k       237.267M/s    477.407   16.2343k   7.41686M         11.7445    393.961/s 2.92195G/s     21.8962M               34.6724                2.95221        100       39.3961k/s [BEST: throughput=  0.28 GB/s doc_throughput=   441 docs/s instructions=    21895411 cycles=     7233463 branch_miss=   31502 cache_miss=    7276 cache_ref=     22773 items=       100 avg_time=   2538321 ns]
partial_tweets<rapidjson_insitu>/manual_time             1851655 ns      1915374 ns          376          24.945k           374.586M             236        15.019k    5.36335M              8.49283           593.155        3.1813G            13.32M                    21.0921                     2.48352           59.3155k    28.0894k   631.515k       325.255M/s    248.043   10.6068k   5.50854M         8.72274    540.057/s 2.97493G/s     13.3203M               21.0927                2.41813        100       54.0057k/s [BEST: throughput=  0.37 GB/s doc_throughput=   593 docs/s instructions=    13319966 cycles=     5363348 branch_miss=   24945 cache_miss=     236 cache_ref=     15019 items=       100 avg_time=   1851654 ns]
partial_tweets<nlohmann_json>/manual_time               10422850 ns     10511463 ns           70         155.293k           65.4514M              27        98.726k    30.7773M              48.7357           103.642       3.18982G          80.9155M                    128.129                     2.62906           10.3642k    205.052k   631.515k       57.7826M/s      112.9   139.811k     33.24M         52.6353     95.943/s 3.18914G/s     81.5744M               129.173                2.45411        100        9.5943k/s [BEST: throughput=  0.07 GB/s doc_throughput=   103 docs/s instructions=    80915484 cycles=    30777299 branch_miss=  155293 cache_miss=      27 cache_ref=     98726 items=       100 avg_time=  10422849 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                 102150589 ns    108274925 ns            7         900.568k           451.998M        6.77288M       6.89572M    324.492M              7.05436            9.8263       3.18856G          1020.45M                    22.1843                     3.14477            9.8263M     901.78k   45.9988M       429.443M/s   6.81445M    6.8956M   325.693M         7.08047    9.78947/s 3.18836G/s     1020.45M               22.1843                3.13317      1000k       9.78947M/s [BEST: throughput=  0.45 GB/s doc_throughput=     9 docs/s instructions=  1020451781 cycles=   324492113 branch_miss=  900568 cache_miss= 6772878 cache_ref=   6895720 items=   1000000 avg_time= 102150589 ns]
large_random<simdjson_ondemand>/manual_time             72259193 ns     78350830 ns           10         918.207k           637.509M        3.48814M       3.57252M    230.084M              5.00196           13.8593        3.1888G          654.908M                    14.2375                     2.84638           13.8593M    924.675k   45.9988M        607.09M/s   3.51848M   3.57256M   230.395M         5.00872    13.8391/s 3.18845G/s     654.908M               14.2375                2.84254      1000k       13.8391M/s [BEST: throughput=  0.64 GB/s doc_throughput=    13 docs/s instructions=   654907679 cycles=   230084213 branch_miss=  918207 cache_miss= 3488142 cache_ref=   3572520 items=   1000000 avg_time=  72259192 ns]
large_random<simdjson_ondemand_unordered>/manual_time   73369095 ns     79483692 ns           10         905.226k           627.287M        3.49595M       3.57309M    233.835M               5.0835            13.637       3.18881G          658.908M                    14.3245                     2.81784            13.637M    904.792k   45.9988M       597.906M/s   3.51755M    3.5731M   233.947M         5.08594    13.6297/s 3.18863G/s     658.908M               14.3245                2.81649      1000k       13.6297M/s [BEST: throughput=  0.63 GB/s doc_throughput=    13 docs/s instructions=   658907678 cycles=   233834695 branch_miss=  905226 cache_miss= 3495950 cache_ref=   3573091 items=   1000000 avg_time=  73369095 ns]
large_random<yyjson>/manual_time                       145247248 ns    151437397 ns            5         676.157k           316.796M        4.20997M       5.36522M    323.474M              7.03222           6.88705       2.22778G          855.681M                    18.6023                     2.64529           6.88705M     676.28k   45.9988M       302.022M/s   4.20991M   5.36321M   323.664M         7.03637    6.88481/s 2.22837G/s     855.681M               18.6023                2.64373      1000k       6.88481M/s [BEST: throughput=  0.32 GB/s doc_throughput=     6 docs/s instructions=   855680752 cycles=   323473704 branch_miss=  676157 cache_miss= 4209967 cache_ref=   5365218 items=   1000000 avg_time= 145247247 ns]
large_random<yyjson_insitu>/manual_time                119242594 ns    125425011 ns            6         677.493k           386.499M         3.4927M       4.64508M    280.539M              6.09883           8.40238       2.35719G           849.56M                    18.4692                     3.02832           8.40238M     677.03k   45.9988M       367.887M/s   3.49436M   4.64305M   281.199M         6.11319    8.38627/s 2.35821G/s      849.56M               18.4692                 3.0212      1000k       8.38627M/s [BEST: throughput=  0.39 GB/s doc_throughput=     8 docs/s instructions=   849559983 cycles=   280538678 branch_miss=  677493 cache_miss= 3492699 cache_ref=   4645082 items=   1000000 avg_time= 119242593 ns]
large_random<sajson>/manual_time                       106248591 ns    112446764 ns            7         584.231k           433.599M        5.40679M       5.57626M    338.295M              7.35443           9.42632       3.18887G             1093M                    23.7614                      3.2309           9.42632M    584.432k   45.9988M       412.879M/s   5.46202M   5.57633M   338.771M         7.36477    9.41189/s 3.18847G/s        1093M               23.7614                3.22636      1000k       9.41189M/s [BEST: throughput=  0.43 GB/s doc_throughput=     9 docs/s instructions=  1092995860 cycles=   338294576 branch_miss=  584231 cache_miss= 5406790 cache_ref=   5576264 items=   1000000 avg_time= 106248590 ns]
large_random<rapidjson>/manual_time                    252499018 ns    258619537 ns            3         598.329k           188.353M        4.34046M       5.20894M    710.891M              15.4546           4.09474       2.91091G          2.00013G                    43.4822                     2.81355           4.09474M     601.09k   45.9988M       173.735M/s   4.07193M   5.14487M   715.403M         15.5526    3.96041/s 2.83329G/s     2.00014G               43.4824                2.79582      1000k       3.96041M/s [BEST: throughput=  0.19 GB/s doc_throughput=     4 docs/s instructions=  2000126835 cycles=   710890892 branch_miss=  598329 cache_miss= 4340461 cache_ref=   5208935 items=   1000000 avg_time= 252499017 ns]
large_random<rapidjson_lossless>/manual_time           286850018 ns    293008644 ns            2         584.119k           163.782M        4.32861M       5.21198M    827.742M              17.9949           3.56056       2.94723G          2.47709G                    53.8513                     2.99259           3.56056M    584.268k   45.9988M        152.93M/s    4.1292M   5.16025M   830.431M         18.0533    3.48614/s   2.895G/s      2.4771G               53.8515                2.98291      1000k       3.48614M/s [BEST: throughput=  0.16 GB/s doc_throughput=     3 docs/s instructions=  2477094748 cycles=   827741688 branch_miss=  584119 cache_miss= 4328607 cache_ref=   5211981 items=   1000000 avg_time= 286850018 ns]
large_random<rapidjson_insitu>/manual_time             278433676 ns    284567994 ns            3         584.291k           170.106M        5.02019M       5.93713M    794.331M              17.2685           3.69805       2.93748G          1.72813G                     37.569                     2.17557           3.69805M    594.138k   45.9988M       157.552M/s    4.7631M   5.87358M   798.008M         17.3485    3.59152/s 2.86606G/s     1.72814G               37.5692                2.16556      1000k       3.59152M/s [BEST: throughput=  0.17 GB/s doc_throughput=     3 docs/s instructions=  1728126833 cycles=   794331438 branch_miss=  584291 cache_miss= 5020186 cache_ref=   5937131 items=   1000000 avg_time= 278433676 ns]
large_random<nlohmann_json>/manual_time               1488327572 ns   1494447327 ns            1         4.04203M           30.9064M        30.1964M       31.0003M    4.73206G              102.874          0.671895       3.17945G          12.7845G                    277.932                     2.70169           671.895k    4.04203M   45.9988M       29.4746M/s   30.1964M   31.0003M   4.73206G         102.874   0.671895/s 3.17945G/s     12.7845G               277.932                2.70169      1000k       671.895k/s [BEST: throughput=  0.03 GB/s doc_throughput=     0 docs/s instructions= 12784549734 cycles=  4732057832 branch_miss= 4042026 cache_miss=30196420 cache_ref=  31000289 items=   1000000 avg_time=1488327572 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                       109237457 ns    128098811 ns            6         1033.25k           1.25818G        10.2115M       10.3201M    347.952M              2.53415            9.1634       3.18842G          971.996M                     7.0791                     2.79348           4.80426M    1034.32k   137.305M       1.17062G/s   10.2496M   10.3197M   348.286M         2.53659    9.15437/s 3.18834G/s     971.996M                7.0791                 2.7908   524.288k       4.79953M/s [BEST: throughput=  1.26 GB/s doc_throughput=     9 docs/s instructions=   971995679 cycles=   347951744 branch_miss= 1033252 cache_miss=10211469 cache_ref=  10320105 items=    524288 avg_time= 109237457 ns]
kostya<simdjson_ondemand>/manual_time                   70477307 ns     89289069 ns           10         468.787k           1.94946G        6.42177M       6.47021M    224.559M              1.63548            14.198        3.1883G          638.786M                    4.65231                     2.84462           7.44386M     468.72k   137.305M       1.81442G/s   6.43228M    6.4701M    224.69M         1.63643     14.189/s 3.18812G/s     638.786M               4.65231                2.84296   524.288k        7.4391M/s [BEST: throughput=  1.95 GB/s doc_throughput=    14 docs/s instructions=   638785640 cycles=   224559353 branch_miss=  468787 cache_miss= 6421775 cache_ref=   6470212 items=    524288 avg_time=  70477306 ns]
kostya<yyjson>/manual_time                             226520658 ns    245388698 ns            3         428.776k           606.597M        8.49445M       9.75148M    490.567M              3.57283           4.41788       2.16727G          974.185M                    7.09504                     1.98583           2.31624M    427.812k   137.305M       578.068M/s   8.50269M   9.75388M   490.756M          3.5742    4.41461/s 2.16649G/s     974.185M               7.09504                1.98507   524.288k       2.31453M/s [BEST: throughput=  0.61 GB/s doc_throughput=     4 docs/s instructions=   974184816 cycles=   490567474 branch_miss=  428776 cache_miss= 8494449 cache_ref=   9751478 items=    524288 avg_time= 226520658 ns]
kostya<yyjson_insitu>/manual_time                      148776200 ns    167678885 ns            5         421.462k            923.41M        6.35809M       7.60286M    362.856M               2.6427           6.72525       2.44029G          955.915M                    6.96198                     2.63442           3.52597M    421.481k   137.305M       880.142M/s   6.35883M   7.60219M   363.001M         2.64376    6.72151/s 2.43991G/s     955.915M               6.96198                2.63337   524.288k         3.524M/s [BEST: throughput=  0.92 GB/s doc_throughput=     6 docs/s instructions=   955915133 cycles=   362855624 branch_miss=  421462 cache_miss= 6358092 cache_ref=   7602864 items=    524288 avg_time= 148776200 ns]
kostya<sajson>/manual_time                             164297998 ns    183175526 ns            4         358.894k           836.335M        8.49969M       8.54246M    523.415M              3.81206           6.09107       3.18816G          1.52083G                    11.0763                      2.9056           3.19348M    359.396k   137.305M       796.992M/s   8.49287M   8.54232M   523.886M         3.81549     6.0865/s 3.18864G/s     1.52083G               11.0763                2.90298   524.288k       3.19108M/s [BEST: throughput=  0.84 GB/s doc_throughput=     6 docs/s instructions=  1520833626 cycles=   523415065 branch_miss=  358894 cache_miss= 8499689 cache_ref=   8542455 items=    524288 avg_time= 164297997 ns]
kostya<rapidjson>/manual_time                          318984350 ns    337886544 ns            2         963.199k           435.342M        5.19411M       6.47541M    908.907M              6.61962           3.17062        2.8818G          2.73082G                    19.8887                     3.00451           1.66232M    1003.32k   137.305M       410.504M/s   5.07089M   6.44409M   911.835M         6.64095    3.13495/s 2.85856G/s     2.73082G               19.8888                2.99487   524.288k       1.64362M/s [BEST: throughput=  0.44 GB/s doc_throughput=     3 docs/s instructions=  2730823241 cycles=   908907032 branch_miss=  963199 cache_miss= 5194110 cache_ref=   6475412 items=    524288 avg_time= 318984350 ns]
kostya<rapidjson_lossless>/manual_time                 336721656 ns    355547159 ns            2         983.317k           411.771M         5.1978M       6.47752M    966.022M              7.03559           2.99895       2.89705G          3.00711G                     21.901                     3.11288           1.57232M    974.302k   137.305M        388.88M/s     5.074M   6.44446M   967.968M         7.04977    2.96981/s 2.87468G/s     3.00712G                21.901                3.10663   524.288k       1.55704M/s [BEST: throughput=  0.41 GB/s doc_throughput=     2 docs/s instructions=  3007114001 cycles=   966021558 branch_miss=  983317 cache_miss= 5197803 cache_ref=   6477525 items=    524288 avg_time= 336721656 ns]
kostya<rapidjson_insitu>/manual_time                   311942252 ns    330826199 ns            2         534.795k           444.953M        7.32703M       8.62967M    887.366M              6.46274           3.24062       2.87562G          2.21411G                    16.1255                     2.49515           1.69902M    550.443k   137.305M       419.771M/s   7.20509M   8.59451M   889.565M         6.47875    3.20572/s  2.8517G/s     2.21411G               16.1255                2.48898   524.288k       1.68072M/s [BEST: throughput=  0.44 GB/s doc_throughput=     3 docs/s instructions=  2214112108 cycles=   887366414 branch_miss=  534795 cache_miss= 7327027 cache_ref=   8629668 items=    524288 avg_time= 311942252 ns]
kostya<nlohmann_json>/manual_time                     2283778423 ns   2302615054 ns            1         13.7785M           60.1219M        45.9311M       46.5898M    7.28389G               53.049          0.437871        3.1894G          17.8932G                    130.317                     2.45654            229.57k    13.7785M   137.305M       57.3367M/s   45.9311M   46.5898M   7.28389G          53.049   0.437871/s  3.1894G/s     17.8932G               130.317                2.45654   524.288k        229.57k/s [BEST: throughput=  0.06 GB/s doc_throughput=     0 docs/s instructions= 17893172375 cycles=  7283889942 branch_miss=13778517 cache_miss=45931085 cache_ref=  46589767 items=    524288 avg_time=2283778423 ns]
distinct_user_id<simdjson_dom>/manual_time                323078 ns       402495 ns         2165           3.908k           1.96921G               1        33.964k    1024.22k              1.62184          3.11823k       3.19374G          2.86747M                    4.54061                     2.79966           358.596k    3.96764k   631.515k       1.82044G/s    2.38291   33.9623k   1030.84k         1.63232   3.09523k/s 3.19067G/s     2.86747M               4.54061                2.78168        115       355.951k/s [BEST: throughput=  1.97 GB/s doc_throughput=  3118 docs/s instructions=     2867465 cycles=     1024218 branch_miss=    3908 cache_miss=       1 cache_ref=     33964 items=       115 avg_time=    323078 ns]
distinct_user_id<simdjson_ondemand>/manual_time           199066 ns       262230 ns         3517           2.021k           3.20377G               0         7.553k    629.618k             0.996996          5.07315k       3.19415G          1.82938M                    2.89681                     2.90554           583.413k    2.18714k   631.515k       2.95452G/s   0.500995   7.71747k   635.249k         1.00591   5.02346k/s 3.19115G/s     1.82938M               2.89681                2.87979        115       577.697k/s [BEST: throughput=  3.20 GB/s doc_throughput=  5073 docs/s instructions=     1829381 cycles=      629618 branch_miss=    2021 cache_miss=       0 cache_ref=      7553 items=       115 avg_time=    199066 ns]
distinct_user_id<yyjson>/manual_time                      684256 ns       774013 ns         1000           6.464k           1.57044G          7.067k        27.389k    1.28418M              2.03349          2.48678k       3.19347G          2.87801M                    4.55731                     2.24113            285.98k    7.38694k   631.515k       880.168M/s   2.27717k   26.2726k   1.47514M         2.33587   1.46144k/s 2.15583G/s     2.87829M               4.55775                 1.9512        115       168.066k/s [BEST: throughput=  1.57 GB/s doc_throughput=  2486 docs/s instructions=     2878010 cycles=     1284178 branch_miss=    6464 cache_miss=    7067 cache_ref=     27389 items=       115 avg_time=    684255 ns]
distinct_user_id<yyjson_insitu>/manual_time               505399 ns       580762 ns         1399           7.361k           1.81205G              80        14.969k    1.11316M              1.76268          2.86937k       3.19408G          2.87739M                    4.55633                     2.58488           329.978k    7.40888k   631.515k       1.16372G/s    109.746    12.277k   1.21375M         1.92196   1.97863k/s 2.40156G/s     2.87766M               4.55675                2.37089        115       227.543k/s [BEST: throughput=  1.81 GB/s doc_throughput=  2869 docs/s instructions=     2877392 cycles=     1113162 branch_miss=    7361 cache_miss=      80 cache_ref=     14969 items=       115 avg_time=    505399 ns]
distinct_user_id<sajson>/manual_time                      686386 ns       758441 ns         1017          10.745k           929.591M               0        13.166k    2.16914M              3.43482            1.472k       3.19298G          5.81759M                    9.21211                     2.68198            169.28k    10.9593k   631.515k       877.435M/s    1.67552   13.1981k   2.18957M         3.46717   1.45691k/s    3.19G/s     5.81759M               9.21211                2.65695        115       167.544k/s [BEST: throughput=  0.93 GB/s doc_throughput=  1472 docs/s instructions=     5817587 cycles=     2169138 branch_miss=   10745 cache_miss=       0 cache_ref=     13166 items=       115 avg_time=    686386 ns]
distinct_user_id<rapidjson>/manual_time                  2527661 ns      2604838 ns          278          31.336k           279.041M         10.481k        23.175k    7.22551M              11.4416            441.86       3.19267G          21.8232M                    34.5568                     3.02029           50.8139k    33.3605k   631.515k       238.268M/s    883.417   16.8527k   7.40304M         11.7227    395.623/s 2.92881G/s     21.8239M               34.5579                2.94796        115       45.4966k/s [BEST: throughput=  0.28 GB/s doc_throughput=   441 docs/s instructions=    21823168 cycles=     7225513 branch_miss=   31336 cache_miss=   10481 cache_ref=     23175 items=       115 avg_time=   2527660 ns]
distinct_user_id<rapidjson_insitu>/manual_time           1862776 ns      1935386 ns          381          24.891k           377.517M             995        15.041k    5.34102M              8.45747           597.795       3.19284G           13.254M                    20.9876                     2.48155           68.7465k      34.41k   631.515k       323.313M/s   1.90815k   12.3029k    5.6392M         8.92963    536.833/s 3.02731G/s     13.2541M               20.9878                2.35036        115       61.7358k/s [BEST: throughput=  0.38 GB/s doc_throughput=   597 docs/s instructions=    13254006 cycles=     5341021 branch_miss=   24891 cache_miss=     995 cache_ref=     15041 items=       115 avg_time=   1862776 ns]
distinct_user_id<nlohmann_json>/manual_time             10694541 ns     10786269 ns           76          130.88k           70.4185M          1.124k        98.825k    28.5937M              45.2779           111.507        3.1884G           76.334M                    120.874                     2.66961           12.8233k    272.221k   631.515k       56.3147M/s    87.3816   107.881k   34.1086M         54.0108    93.5056/s 3.18935G/s     75.0704M               118.874                2.20092        115       10.7531k/s [BEST: throughput=  0.07 GB/s doc_throughput=   111 docs/s instructions=    76333960 cycles=    28593688 branch_miss=  130880 cache_miss=    1124 cache_ref=     98825 items=       115 avg_time=  10694541 ns]
find_tweet<simdjson_dom>/manual_time                      307373 ns       383076 ns         2275           3.494k            2.0704G               2        29.618k    974.214k              1.54266          3.27846k       3.19392G          2.78229M                    4.40574                     2.85593           3.27846k    3.62818k   631.515k       1.91346G/s    2.10681   29.6735k   980.787k         1.55307   3.25338k/s 3.19087G/s     2.78229M               4.40574                2.83679          1       3.25338k/s [BEST: throughput=  2.07 GB/s doc_throughput=  3278 docs/s instructions=     2782291 cycles=      974214 branch_miss=    3494 cache_miss=       2 cache_ref=     29618 items=         1 avg_time=    307372 ns]
find_tweet<simdjson_ondemand>/manual_time                 133990 ns       199199 ns         5223             1034           4.75216G               0         7.525k    424.592k             0.672339          7.52502k       3.19506G          1.32079M                    2.09146                     3.11073           7.52502k      1088.4   631.515k       4.38948G/s   0.238369   7.60501k   427.693k         0.67725   7.46327k/s 3.19199G/s     1.32079M               2.09146                3.08817          1       7.46327k/s [BEST: throughput=  4.75 GB/s doc_throughput=  7525 docs/s instructions=     1320790 cycles=      424592 branch_miss=    1034 cache_miss=       0 cache_ref=      7525 items=         1 avg_time=    133989 ns]
find_tweet<yyjson>/manual_time                            773606 ns       861483 ns          984            9.44k           1.49537G             187        27.294k    1.34895M              2.13606          2.36791k        3.1942G          2.81716M                    4.46096                     2.08841           2.36791k    7.34426k   631.515k       778.509M/s    459.014   25.0413k   1.50567M         2.38422   1.29265k/s  1.9463G/s     2.81764M               4.46172                1.87136          1       1.29265k/s [BEST: throughput=  1.50 GB/s doc_throughput=  2367 docs/s instructions=     2817163 cycles=     1348954 branch_miss=    9440 cache_miss=     187 cache_ref=     27294 items=         1 avg_time=    773606 ns]
find_tweet<yyjson_insitu>/manual_time                     493898 ns       564878 ns         1418           6.776k           1.86837G           2.21k        13.393k    1074.47k              1.70142          2.95855k       3.17888G          2.81684M                    4.46045                      2.6216           2.95855k    7.15702k   631.515k       1.19082G/s    9.17278    10.733k   1.17751M         1.86458   2.02471k/s 2.38412G/s      2.8171M               4.46086                2.39242          1       2.02471k/s [BEST: throughput=  1.87 GB/s doc_throughput=  2958 docs/s instructions=     2816839 cycles=     1074472 branch_miss=    6776 cache_miss=    2210 cache_ref=     13393 items=         1 avg_time=    493897 ns]
find_tweet<sajson>/manual_time                            675135 ns       745339 ns         1036          10.433k           945.576M               0        12.636k    2.13252M              3.37683          1.49731k       3.19304G          5.72247M                    9.06149                     2.68343           1.49731k    10.8522k   631.515k       892.058M/s    3.08301   12.7644k   2.15377M         3.41048   1.48118k/s 3.19013G/s     5.72247M               9.06149                2.65695          1       1.48118k/s [BEST: throughput=  0.95 GB/s doc_throughput=  1497 docs/s instructions=     5722466 cycles=     2132516 branch_miss=   10433 cache_miss=       0 cache_ref=     12636 items=         1 avg_time=    675135 ns]
find_tweet<rapidjson>/manual_time                        2502130 ns      2575060 ns          281          31.448k           281.331M             593        21.528k     7.1667M              11.3484           445.486       3.19267G          21.7392M                    34.4238                     3.03336            445.486    32.4637k   631.515k       240.699M/s    596.783   13.9979k   7.32195M         11.5943    399.659/s 2.92629G/s     21.7401M               34.4253                2.96916          1        399.659/s [BEST: throughput=  0.28 GB/s doc_throughput=   445 docs/s instructions=    21739156 cycles=     7166701 branch_miss=   31448 cache_miss=     593 cache_ref=     21528 items=         1 avg_time=   2502130 ns]
find_tweet<rapidjson_insitu>/manual_time                 1839088 ns      1907392 ns          378          24.452k           380.764M          6.711k         13.36k    5.29528M              8.38505           602.937       3.19272G          13.1753M                     20.863                     2.48811            602.937    33.0694k   631.515k       327.477M/s   1.72961k   9.71159k   5.56506M         8.81224    543.748/s 3.02599G/s     13.1755M               20.8634                2.36755          1        543.748/s [BEST: throughput=  0.38 GB/s doc_throughput=   602 docs/s instructions=    13175269 cycles=     5295284 branch_miss=   24452 cache_miss=    6711 cache_ref=     13360 items=         1 avg_time=   1839088 ns]
find_tweet<nlohmann_json>/manual_time                    8118125 ns      8206890 ns           80         101.371k           82.2904M              22         76.09k    24.4758M              38.7573           130.306       3.18936G          66.4825M                    105.275                     2.71625            130.306    115.147k   631.515k        74.187M/s      68.45   82.2548k   25.8904M         40.9972    123.181/s  3.1892G/s     65.1017M               103.088                2.51452          1        123.181/s [BEST: throughput=  0.08 GB/s doc_throughput=   130 docs/s instructions=    66482522 cycles=    24475842 branch_miss=  101371 cache_miss=      22 cache_ref=     76090 items=         1 avg_time=   8118124 ns]
top_tweet<simdjson_dom>/manual_time                       316162 ns       397194 ns         2222            3.71k           2.01178G               0        32.514k    1002.58k              1.58758          3.18565k       3.19387G          2.81918M                    4.46415                     2.81192           3.18565k     3.7731k   631.515k       1.86026G/s  0.0711071   32.6055k   1008.77k         1.59737   3.16293k/s 3.19066G/s     2.81918M               4.46415                2.79468          1       3.16293k/s [BEST: throughput=  2.01 GB/s doc_throughput=  3185 docs/s instructions=     2819178 cycles=     1002581 branch_miss=    3710 cache_miss=       0 cache_ref=     32514 items=         1 avg_time=    316162 ns]
top_tweet<simdjson_ondemand>/manual_time                  184514 ns       250664 ns         3792           2.101k           3.45557G               9         9.182k    583.835k             0.924499          5.47187k       3.19467G          1.84358M                     2.9193                     3.15771           5.47187k    2.21821k   631.515k       3.18753G/s    9.49657   9.13343k   588.908k        0.932532   5.41964k/s 3.19167G/s     1.84358M                2.9193                 3.1305          1       5.41964k/s [BEST: throughput=  3.46 GB/s doc_throughput=  5471 docs/s instructions=     1843579 cycles=      583835 branch_miss=    2101 cache_miss=       9 cache_ref=      9182 items=         1 avg_time=    184514 ns]
top_tweet<simdjson_ondemand_forward_only>/manual_time     187464 ns       254980 ns         3741           2.157k           3.42268G               2         9.828k    589.422k             0.933346          5.41979k       3.19454G          1.85914M                    2.94394                     3.15418           5.41979k    2.37362k   631.515k       3.13737G/s    2.94921   9.88869k   598.225k        0.947286   5.33436k/s 3.19115G/s     1.85914M               2.94394                3.10777          1       5.33436k/s [BEST: throughput=  3.42 GB/s doc_throughput=  5419 docs/s instructions=     1859144 cycles=      589422 branch_miss=    2157 cache_miss=       2 cache_ref=      9828 items=         1 avg_time=    187464 ns]
top_tweet<yyjson>/manual_time                             779324 ns       869955 ns          973           9.746k           1.47221G             200        27.434k    1.37019M              2.16968          2.33123k       3.19422G          2.84446M                    4.50418                     2.07596           2.33123k    7.48578k   631.515k       772.797M/s    479.659   25.5038k    1.5239M         2.41309   1.28316k/s 1.95542G/s     2.84491M                4.5049                1.86686          1       1.28316k/s [BEST: throughput=  1.47 GB/s doc_throughput=  2331 docs/s instructions=     2844457 cycles=     1370186 branch_miss=    9746 cache_miss=     200 cache_ref=     27434 items=         1 avg_time=    779324 ns]
top_tweet<yyjson_insitu>/manual_time                      500091 ns       575487 ns         1000           6.778k           1.84369G          1.724k        14.002k    1089.06k              1.72453          2.91947k       3.17949G          2.84411M                    4.50364                     2.61152           2.91947k    7.25465k   631.515k       1.17607G/s     77.249   11.6074k   1.19803M         1.89708   1.99964k/s 2.39563G/s     2.84438M               4.50405                 2.3742          1       1.99964k/s [BEST: throughput=  1.84 GB/s doc_throughput=  2919 docs/s instructions=     2844114 cycles=     1089064 branch_miss=    6778 cache_miss=    1724 cache_ref=     14002 items=         1 avg_time=    500090 ns]
top_tweet<sajson>/manual_time                             678064 ns       752329 ns         1030          10.585k           940.659M              41         13.07k    2.14364M              3.39444          1.48953k       3.19301G          5.75246M                    9.10898                      2.6835           1.48953k    10.7945k   631.515k       888.205M/s    58.7214   13.0382k   2.16298M         3.42507   1.47479k/s 3.18994G/s     5.75246M               9.10898                 2.6595          1       1.47479k/s [BEST: throughput=  0.94 GB/s doc_throughput=  1489 docs/s instructions=     5752458 cycles=     2143638 branch_miss=   10585 cache_miss=      41 cache_ref=     13070 items=         1 avg_time=    678063 ns]
top_tweet<rapidjson>/manual_time                         2518737 ns      2596566 ns          279          31.274k           279.625M         12.345k        22.112k    7.21045M              11.4177           442.785       3.19268G          21.7975M                    34.5162                     3.02304            442.785    33.1108k   631.515k       239.112M/s     749.62   15.2567k    7.3755M         11.6791    397.024/s 2.92825G/s     21.7982M               34.5173                2.95549          1        397.024/s [BEST: throughput=  0.28 GB/s doc_throughput=   442 docs/s instructions=    21797505 cycles=     7210453 branch_miss=   31274 cache_miss=   12345 cache_ref=     22112 items=         1 avg_time=   2518736 ns]
top_tweet<rapidjson_insitu>/manual_time                  1847728 ns      1921195 ns          375          24.219k           378.744M          6.713k        13.851k    5.32357M              8.42984           599.738       3.19275G          13.2289M                    20.9479                     2.48497            599.738    33.1969k   631.515k       325.946M/s   1.86224k   11.1168k   5.59556M         8.86053    541.205/s 3.02835G/s     13.2294M               20.9486                2.36427          1        541.205/s [BEST: throughput=  0.38 GB/s doc_throughput=   599 docs/s instructions=    13228898 cycles=     5323571 branch_miss=   24219 cache_miss=    6713 cache_ref=     13851 items=         1 avg_time=   1847728 ns]
top_tweet<nlohmann_json>/manual_time                    11092863 ns     11184492 ns           63         197.158k           57.2617M              50       164.248k     35.183M              55.7121           90.6735       3.19017G          88.4681M                    140.089                     2.51451            90.6735    200.827k   631.515k       54.2925M/s    108.016    164.47k   35.3764M         56.0182    90.1481/s 3.18911G/s     88.8392M               140.676                2.51126          1        90.1481/s [BEST: throughput=  0.06 GB/s doc_throughput=    90 docs/s instructions=    88468062 cycles=    35183035 branch_miss=  197158 cache_miss=      50 cache_ref=    164248 items=         1 avg_time=  11092863 ns]
