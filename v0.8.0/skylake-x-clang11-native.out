run_benchmark: v0.8.0 /home/jkeiser/simdjson_benchmark_results/v0.8.0/skylake-x-clang11-native.json -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native
git reset --hard v0.8.0
HEAD is now at c96ff018 Version 0.8.
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-march=native -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The CXX compiler identification is Clang 11.0.0
-- The C compiler identification is Clang 11.0.0
-- Check for working CXX compiler: /usr/bin/clang++-11
-- Check for working CXX compiler: /usr/bin/clang++-11 -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Check for working C compiler: /usr/bin/clang-11
-- Check for working C compiler: /usr/bin/clang-11 -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed
-- Check if compiler accepts -pthread
-- Check if compiler accepts -pthread - yes
-- Found Threads: TRUE  
-- Looking for fork
-- Looking for fork - found
-- Looking for wait
-- Looking for wait - found
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- Found Git: /usr/bin/git (found version "2.27.0") 
-- git Version: v0.2.1-c96ff018
-- Version: 0.2.1
-- Performing Test HAVE_CXX_FLAG_STD_CXX11
-- Performing Test HAVE_CXX_FLAG_STD_CXX11 - Success
-- Performing Test HAVE_CXX_FLAG_WALL
-- Performing Test HAVE_CXX_FLAG_WALL - Success
-- Performing Test HAVE_CXX_FLAG_WEXTRA
-- Performing Test HAVE_CXX_FLAG_WEXTRA - Success
-- Performing Test HAVE_CXX_FLAG_WSHADOW
-- Performing Test HAVE_CXX_FLAG_WSHADOW - Success
-- Performing Test HAVE_CXX_FLAG_WERROR
-- Performing Test HAVE_CXX_FLAG_WERROR - Success
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32 - Success
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED - Success
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WD654
-- Performing Test HAVE_CXX_FLAG_WD654 - Failed
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY - Success
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES -- failed to compile
-- Performing Test HAVE_CXX_FLAG_COVERAGE
-- Performing Test HAVE_CXX_FLAG_COVERAGE - Success
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Performing Test USE_BOOST_JSON
-- Performing Test USE_BOOST_JSON - Failed
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Found Python3: /usr/bin/python3.8 (found version "3.8.6") found components: Interpreter 
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 10
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
Scanning dependencies of target benchmark
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_api_internal.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_name.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_name.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_register.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_register.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_runner.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_runner.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/colorprint.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/colorprint.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/commandlineflags.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/commandlineflags.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/complexity.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/complexity.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/console_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/console_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/counter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/counter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/csv_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/csv_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/json_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/json_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/sleep.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sleep.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/statistics.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/statistics.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/string_util.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/string_util.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/sysinfo.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sysinfo.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-11  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -march=native  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/timers.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/timers.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -P CMakeFiles/benchmark.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/benchmark.dir/link.txt --verbose=1
/usr/bin/ar qc libbenchmark.a  CMakeFiles/benchmark.dir/benchmark.cc.o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o CMakeFiles/benchmark.dir/benchmark_name.cc.o CMakeFiles/benchmark.dir/benchmark_register.cc.o CMakeFiles/benchmark.dir/benchmark_runner.cc.o CMakeFiles/benchmark.dir/colorprint.cc.o CMakeFiles/benchmark.dir/commandlineflags.cc.o CMakeFiles/benchmark.dir/complexity.cc.o CMakeFiles/benchmark.dir/console_reporter.cc.o CMakeFiles/benchmark.dir/counter.cc.o CMakeFiles/benchmark.dir/csv_reporter.cc.o CMakeFiles/benchmark.dir/json_reporter.cc.o CMakeFiles/benchmark.dir/reporter.cc.o CMakeFiles/benchmark.dir/sleep.cc.o CMakeFiles/benchmark.dir/statistics.cc.o CMakeFiles/benchmark.dir/string_util.cc.o CMakeFiles/benchmark.dir/sysinfo.cc.o CMakeFiles/benchmark.dir/timers.cc.o
/usr/bin/ranlib libbenchmark.a
[ 80%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
Scanning dependencies of target generated-data
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated && /usr/bin/ruby genfeaturejson.rb /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-miss.json ...
[ 80%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/clang++-11  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/include  -march=native -O3 -DNDEBUG -fPIC   -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -pthread -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/clang++-11 -fPIC -march=native -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.7 -o ../libsimdjson.so.7.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.7.0.0 ../libsimdjson.so.7 ../libsimdjson.so
[ 80%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
Scanning dependencies of target yyjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/clang-11  -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src  -O3 -DNDEBUG   -o CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o   -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src/yyjson.c
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -P CMakeFiles/yyjson.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -E cmake_link_script CMakeFiles/yyjson.dir/link.txt --verbose=1
/usr/bin/ar qc libyyjson.a  CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o
/usr/bin/ranlib libyyjson.a
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/clang++-11  -DRAPIDJSON_HAS_STDSTRING -DSAJSON_UNSORTED_OBJECT_KEYS -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_COMPETITION_NLOHMANN_JSON -DSIMDJSON_COMPETITION_RAPIDJSON -DSIMDJSON_COMPETITION_SAJSON -DSIMDJSON_COMPETITION_YYJSON -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/rapidjson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/sajson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/json  -march=native -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/clang++-11  -march=native -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.7.0.0 ../_deps/google_benchmarks/src/libbenchmark.a ../dependencies/libyyjson.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.8.0/skylake-x-clang11-native.json --benchmark_out_format=json
2021-01-24 20:46:31
Running benchmark/bench_ondemand
Run on (4 X 3200 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 1024 KiB (x4)
  L3 Unified 8448 KiB (x1)
Load Average: 1.00, 0.86, 0.46
***WARNING*** CPU scaling is enabled, the benchmark real time measurements may be noisy and will incur extra overhead.
simdjson::dom implementation:      haswell
simdjson::ondemand implementation: haswell

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                  320774 ns       388692 ns         2182           3.648k           1.98201G               0          33.4k    1017.69k               1.6115           3.1385k         3.194G          2.93219M                     4.6431                     2.88123            313.85k    3.82817k   631.515k       1.83351G/s    1.77819   33.2094k   1023.55k         1.62079   3.11746k/s 3.19089G/s     2.93219M                4.6431                2.86471        100       311.746k/s [BEST: throughput=  1.98 GB/s doc_throughput=  3138 docs/s instructions=     2932189 cycles=     1017686 branch_miss=    3648 cache_miss=       0 cache_ref=     33400 items=       100 avg_time=    320774 ns]
partial_tweets<simdjson_ondemand>/manual_time             205282 ns       258727 ns         3414           1.901k           3.10092G               0         13.58k    650.585k               1.0302          4.91029k       3.19456G          1.88084M                     2.9783                       2.891           491.029k    2.05523k   631.515k       2.86506G/s   0.765378   13.5956k   655.225k         1.03754   4.87135k/s 3.19183G/s     1.88084M                2.9783                2.87052        100       487.135k/s [BEST: throughput=  3.10 GB/s doc_throughput=  4910 docs/s instructions=     1880838 cycles=      650585 branch_miss=    1901 cache_miss=       0 cache_ref=     13580 items=       100 avg_time=    205281 ns]
partial_tweets<yyjson>/manual_time                        783059 ns       859284 ns          895           9.742k           1.45516G             314        28.248k    1.38615M              2.19496          2.30424k       3.19403G          2.91952M                    4.62304                     2.10621           230.424k    7.50392k   631.515k       769.111M/s    590.384   23.7742k   1.54106M         2.44026   1.27704k/s   1.968G/s      2.9202M               4.62412                1.89493        100       127.704k/s [BEST: throughput=  1.46 GB/s doc_throughput=  2304 docs/s instructions=     2919517 cycles=     1386150 branch_miss=    9742 cache_miss=     314 cache_ref=     28248 items=       100 avg_time=    783058 ns]
partial_tweets<yyjson_insitu>/manual_time                 510271 ns       569277 ns         1382           7.192k           1.79482G             130        14.671k    1.12386M              1.77963          2.84208k        3.1941G           2.9194M                    4.62285                     2.59766           284.208k    7.28335k   631.515k       1.15261G/s    63.7735   8.93869k   1.23257M         1.95176   1.95974k/s 2.41552G/s     2.91967M               4.62327                2.36877        100       195.974k/s [BEST: throughput=  1.79 GB/s doc_throughput=  2842 docs/s instructions=     2919402 cycles=     1123860 branch_miss=    7192 cache_miss=     130 cache_ref=     14671 items=       100 avg_time=    510270 ns]
partial_tweets<sajson>/manual_time                        690087 ns       750652 ns         1013           10.48k           926.829M               0        13.095k     2.1757M               3.4452          1.46763k       3.19311G          5.87892M                    9.30924                     2.70209           146.763k    10.8733k   631.515k       872.731M/s    2.36723   13.1555k   2.20148M         3.48602   1.44909k/s 3.19014G/s     5.87892M               9.30924                2.67045        100       144.909k/s [BEST: throughput=  0.93 GB/s doc_throughput=  1467 docs/s instructions=     5878924 cycles=     2175698 branch_miss=   10480 cache_miss=       0 cache_ref=     13095 items=       100 avg_time=    690086 ns]
partial_tweets<rapidjson>/manual_time                    2539369 ns      2600722 ns          276          32.589k           277.584M             406        22.636k    7.26355M              11.5018           439.553       3.19272G          21.8954M                    34.6712                     3.01442           43.9553k     33.441k   631.515k       237.169M/s    388.591   11.7123k   7.42712M         11.7608    393.799/s 2.92479G/s     21.8963M               34.6727                2.94815        100       39.3799k/s [BEST: throughput=  0.28 GB/s doc_throughput=   439 docs/s instructions=    21895374 cycles=     7263550 branch_miss=   32589 cache_miss=     406 cache_ref=     22636 items=       100 avg_time=   2539368 ns]
partial_tweets<rapidjson_insitu>/manual_time             1836282 ns      1895253 ns          381           26.44k           373.086M             682        17.307k     5.4044M              8.55783           590.779        3.1928G          13.3201M                    21.0922                     2.46467           59.0779k    26.4905k   631.515k       327.978M/s    205.118   9.39323k   5.46295M         8.65055    544.579/s 2.97501G/s     13.3205M               21.0929                2.43833        100       54.4579k/s [BEST: throughput=  0.37 GB/s doc_throughput=   590 docs/s instructions=    13320072 cycles=     5404397 branch_miss=   26440 cache_miss=     682 cache_ref=     17307 items=       100 avg_time=   1836281 ns]
partial_tweets<nlohmann_json>/manual_time               10044207 ns     10129549 ns           70         152.741k           65.6184M              28        98.295k    30.6912M              48.5994           103.906       3.18902G          80.9143M                    128.127                      2.6364           10.3906k    168.339k   631.515k       59.9609M/s    92.6429   135.665k   32.0326M         50.7235    99.5599/s 3.18916G/s     81.5992M               129.212                2.54738        100       9.95599k/s [BEST: throughput=  0.07 GB/s doc_throughput=   103 docs/s instructions=    80914316 cycles=    30691247 branch_miss=  152741 cache_miss=      28 cache_ref=     98295 items=       100 avg_time=  10044207 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                 102158701 ns    107992046 ns            7         897.989k           452.621M        6.77571M       6.89517M    324.052M              7.04479           9.83985       3.18862G          1020.45M                    22.1843                     3.14904           9.83985M    900.416k   45.9988M       429.409M/s   6.81186M   6.89526M   325.699M         7.08059    9.78869/s 3.18816G/s     1020.45M               22.1843                3.13312      1000k       9.78869M/s [BEST: throughput=  0.45 GB/s doc_throughput=     9 docs/s instructions=  1020451782 cycles=   324051803 branch_miss=  897989 cache_miss= 6775706 cache_ref=   6895166 items=   1000000 avg_time= 102158700 ns]
large_random<simdjson_ondemand>/manual_time             72227533 ns     78093440 ns           10         916.845k           637.499M        3.49843M       3.57325M    230.113M              5.00258            13.859       3.18914G          654.908M                    14.2375                     2.84603            13.859M    921.549k   45.9988M       607.356M/s   3.51097M   3.57326M   230.235M         5.00523    13.8451/s 3.18763G/s     654.908M               14.2375                2.84452      1000k       13.8451M/s [BEST: throughput=  0.64 GB/s doc_throughput=    13 docs/s instructions=   654907679 cycles=   230112648 branch_miss=  916845 cache_miss= 3498426 cache_ref=   3573248 items=   1000000 avg_time=  72227533 ns]
large_random<simdjson_ondemand_unordered>/manual_time   73405639 ns     79314443 ns           10         904.417k           627.453M        3.50324M       3.57321M    233.797M              5.08268           13.6407       3.18914G          658.908M                    14.3245                     2.81829           13.6407M    905.109k   45.9988M       597.609M/s   3.51452M   3.57325M   234.023M         5.08759    13.6229/s 3.18808G/s     658.908M               14.3245                2.81557      1000k       13.6229M/s [BEST: throughput=  0.63 GB/s doc_throughput=    13 docs/s instructions=   658907678 cycles=   233796921 branch_miss=  904417 cache_miss= 3503245 cache_ref=   3573210 items=   1000000 avg_time=  73405639 ns]
large_random<yyjson>/manual_time                       144874679 ns    150795062 ns            5         679.047k           317.781M        4.20479M       4.35469M    322.353M              7.00787           6.90847       2.22697G          855.681M                    18.6023                     2.65448           6.90847M    676.925k   45.9988M       302.799M/s   4.20207M   4.35755M   322.902M         7.01979    6.90252/s 2.22884G/s     855.681M               18.6023                2.64997      1000k       6.90252M/s [BEST: throughput=  0.32 GB/s doc_throughput=     6 docs/s instructions=   855680744 cycles=   322353360 branch_miss=  679047 cache_miss= 4204786 cache_ref=   4354695 items=   1000000 avg_time= 144874679 ns]
large_random<yyjson_insitu>/manual_time                118943082 ns    124915613 ns            6         674.782k           386.993M        3.48268M       3.64371M    280.225M              6.09201           8.41311       2.35756G           849.56M                    18.4692                     3.03171           8.41311M    676.227k   45.9988M       368.814M/s   3.48347M    3.6434M    280.39M         6.09559    8.40738/s 2.35734G/s      849.56M               18.4692                3.02993      1000k       8.40738M/s [BEST: throughput=  0.39 GB/s doc_throughput=     8 docs/s instructions=   849560188 cycles=   280225160 branch_miss=  674782 cache_miss= 3482676 cache_ref=   3643709 items=   1000000 avg_time= 118943081 ns]
large_random<sajson>/manual_time                       105932786 ns    111834071 ns            7         584.266k           434.741M        5.44852M       5.57648M    337.352M              7.33393           9.45115       3.18836G             1093M                    23.7614                     3.23993           9.45115M    584.662k   45.9988M        414.11M/s   5.46723M   5.57643M   337.805M         7.34378    9.43995/s 3.18886G/s        1093M               23.7614                3.23558      1000k       9.43995M/s [BEST: throughput=  0.43 GB/s doc_throughput=     9 docs/s instructions=  1092995861 cycles=   337351998 branch_miss=  584266 cache_miss= 5448517 cache_ref=   5576481 items=   1000000 avg_time= 105932786 ns]
large_random<rapidjson>/manual_time                    250783648 ns    256725212 ns            3         653.756k           189.044M        4.36148M       4.92905M     708.43M              15.4011           4.10976       2.91148G          2.00013G                    43.4822                     2.82333           4.10976M    632.853k   45.9988M       174.923M/s   4.09787M   4.74227M    710.51M         15.4463     3.9875/s 2.83316G/s     2.00014G               43.4824                2.81507      1000k        3.9875M/s [BEST: throughput=  0.19 GB/s doc_throughput=     4 docs/s instructions=  2000127810 cycles=   708429751 branch_miss=  653756 cache_miss= 4361483 cache_ref=   4929053 items=   1000000 avg_time= 250783647 ns]
large_random<rapidjson_lossless>/manual_time           287252255 ns    293207181 ns            3          647.34k           164.545M        4.36031M       4.91995M    824.096M              17.9156           3.57717       2.94793G           2.4771G                    53.8513                     3.00583           3.57717M    636.494k   45.9988M       152.715M/s   4.10334M   4.73324M   826.916M         17.9769    3.48126/s 2.87871G/s      2.4771G               53.8515                2.99559      1000k       3.48126M/s [BEST: throughput=  0.16 GB/s doc_throughput=     3 docs/s instructions=  2477095425 cycles=   824096380 branch_miss=  647340 cache_miss= 4360308 cache_ref=   4919953 items=   1000000 avg_time= 287252255 ns]
large_random<rapidjson_insitu>/manual_time             276439963 ns    282393796 ns            3         592.824k           171.165M        5.04575M       5.64117M    789.622M              17.1662           3.72108       2.93825G          1.72813G                     37.569                     2.18855           3.72108M    593.796k   45.9988M       158.689M/s   4.79234M   5.45763M   792.457M         17.2278    3.61742/s 2.86665G/s     1.72814G               37.5692                2.18073      1000k       3.61742M/s [BEST: throughput=  0.17 GB/s doc_throughput=     3 docs/s instructions=  1728127506 cycles=   789622213 branch_miss=  592824 cache_miss= 5045751 cache_ref=   5641174 items=   1000000 avg_time= 276439963 ns]
large_random<nlohmann_json>/manual_time               1483810500 ns   1489753478 ns            1         4.04763M           31.0004M        30.3531M       30.9124M    4.71787G              102.565          0.673941       3.17956G          12.7846G                    277.932                     2.70982           673.941k    4.04763M   45.9988M       29.5643M/s   30.3531M   30.9124M   4.71787G         102.565   0.673941/s 3.17956G/s     12.7846G               277.932                2.70982      1000k       673.941k/s [BEST: throughput=  0.03 GB/s doc_throughput=     0 docs/s instructions= 12784551993 cycles=  4717865813 branch_miss= 4047632 cache_miss=30353064 cache_ref=  30912368 items=   1000000 avg_time=1483810500 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                       108877901 ns    127465585 ns            6         1032.65k           1.26256G         10.207M       10.3192M    346.684M              2.52492           9.19526       3.18785G          971.996M                     7.0791                     2.80369           4.82097M    1033.46k   137.305M       1.17448G/s   10.2447M   10.3191M   347.163M          2.5284     9.1846/s 3.18855G/s     971.996M                7.0791                2.79983   524.288k       4.81538M/s [BEST: throughput=  1.26 GB/s doc_throughput=     9 docs/s instructions=   971995681 cycles=   346684369 branch_miss= 1032648 cache_miss=10207043 cache_ref=  10319230 items=    524288 avg_time= 108877901 ns]
kostya<simdjson_ondemand>/manual_time                   70374396 ns     88880931 ns           10         468.017k           1.95444G        6.42948M       6.46994M    224.034M              1.63165           14.2343       3.18897G          638.786M                    4.65231                     2.85129           7.46288M     468.18k   137.305M       1.81707G/s   6.43669M   6.47001M   224.387M         1.63422    14.2097/s 3.18848G/s     638.786M               4.65231                 2.8468   524.288k       7.44998M/s [BEST: throughput=  1.95 GB/s doc_throughput=    14 docs/s instructions=   638785639 cycles=   224033904 branch_miss=  468017 cache_miss= 6429483 cache_ref=   6469937 items=    524288 avg_time=  70374396 ns]
kostya<yyjson>/manual_time                             225224906 ns    243847112 ns            3         420.611k           609.961M        8.49115M       8.69705M    487.884M              3.55329           4.44238       2.16736G          974.185M                    7.09504                     1.99675           2.32908M    419.984k   137.305M       581.393M/s    8.4921M   8.70037M   487.855M         3.55307    4.44001/s 2.16608G/s     974.185M               7.09504                1.99687   524.288k       2.32784M/s [BEST: throughput=  0.61 GB/s doc_throughput=     4 docs/s instructions=   974184808 cycles=   487884021 branch_miss=  420611 cache_miss= 8491152 cache_ref=   8697052 items=    524288 avg_time= 225224906 ns]
kostya<yyjson_insitu>/manual_time                      147929040 ns    166584358 ns            5         419.082k           928.394M        6.35133M       6.56194M     360.59M               2.6262           6.76155       2.43815G          955.915M                    6.96198                     2.65097             3.545M    418.899k   137.305M       885.183M/s   6.35106M   6.56361M   360.654M         2.62666       6.76/s 2.43802G/s     955.915M               6.96198                2.65051   524.288k       3.54419M/s [BEST: throughput=  0.93 GB/s doc_throughput=     6 docs/s instructions=   955915225 cycles=   360590310 branch_miss=  419082 cache_miss= 6351325 cache_ref=   6561945 items=    524288 avg_time= 147929039 ns]
kostya<sajson>/manual_time                             163642893 ns    182273271 ns            4         356.211k           840.415M        8.46409M       8.54042M    521.031M              3.79469           6.12079       3.18912G          1.52083G                    11.0763                      2.9189           3.20906M     356.34k   137.305M       800.183M/s   8.49126M   8.54075M   521.803M         3.80032    6.11087/s 3.18867G/s     1.52083G               11.0763                2.91458   524.288k       3.20385M/s [BEST: throughput=  0.84 GB/s doc_throughput=     6 docs/s instructions=  1520833626 cycles=   521030551 branch_miss=  356211 cache_miss= 8464087 cache_ref=   8540416 items=    524288 avg_time= 163642893 ns]
kostya<rapidjson>/manual_time                          318352558 ns    337024646 ns            2         981.445k           435.784M        5.23541M       5.85829M    908.707M              6.61816           3.17384       2.88409G          2.73082G                    19.8887                     3.00518             1.664M    975.034k   137.305M       411.318M/s   5.11239M   5.73393M   910.648M          6.6323    3.14117/s  2.8605G/s     2.73083G               19.8888                2.99877   524.288k       1.64688M/s [BEST: throughput=  0.44 GB/s doc_throughput=     3 docs/s instructions=  2730823522 cycles=   908706815 branch_miss=  981445 cache_miss= 5235405 cache_ref=   5858293 items=    524288 avg_time= 318352558 ns]
kostya<rapidjson_lossless>/manual_time                 336533245 ns    355215431 ns            2         1031.48k           411.691M        5.23214M       5.83644M     967.42M              7.04577           2.99837       2.90068G          3.00711G                     21.901                     3.10839           1.57201M    1006.45k   137.305M       389.098M/s   5.11073M   5.73412M   968.519M         7.05378    2.97147/s 2.87793G/s     3.00712G                21.901                3.10486   524.288k       1.55791M/s [BEST: throughput=  0.41 GB/s doc_throughput=     2 docs/s instructions=  3007114292 cycles=   967419911 branch_miss= 1031485 cache_miss= 5232143 cache_ref=   5836442 items=    524288 avg_time= 336533245 ns]
kostya<rapidjson_insitu>/manual_time                   310994951 ns    329694791 ns            2         536.142k           446.076M        7.37462M       7.97821M    885.378M              6.44826            3.2488       2.87641G          2.21411G                    16.1255                     2.50075           1.70331M    539.427k   137.305M       421.049M/s    7.2521M     7.878M   887.224M         6.46171    3.21549/s 2.85286G/s     2.21411G               16.1255                2.49555   524.288k       1.68584M/s [BEST: throughput=  0.45 GB/s doc_throughput=     3 docs/s instructions=  2214112394 cycles=   885377694 branch_miss=  536142 cache_miss= 7374623 cache_ref=   7978209 items=    524288 avg_time= 310994950 ns]
kostya<nlohmann_json>/manual_time                     2292000903 ns   2310642545 ns            1          13.826M           59.9062M        45.2169M       45.8184M    7.30973G              53.2372            0.4363       3.18924G          17.8932G                    130.317                     2.44786           228.747k     13.826M   137.305M        57.131M/s   45.2169M   45.8184M   7.30973G         53.2372     0.4363/s 3.18924G/s     17.8932G               130.317                2.44786   524.288k       228.747k/s [BEST: throughput=  0.06 GB/s doc_throughput=     0 docs/s instructions= 17893172864 cycles=  7309732233 branch_miss=13826049 cache_miss=45216933 cache_ref=  45818405 items=    524288 avg_time=2292000903 ns]
distinct_user_id<simdjson_dom>/manual_time                322657 ns       398192 ns         2170            3.83k           1.97092G              20        33.759k    1023.35k              1.62047          3.12093k        3.1938G          2.86747M                    4.54061                     2.80204           358.907k    3.97682k   631.515k       1.82282G/s    36.0839   33.8121k   1029.48k         1.63017   3.09927k/s 3.19063G/s     2.86747M               4.54061                2.78536        115       356.416k/s [BEST: throughput=  1.97 GB/s doc_throughput=  3120 docs/s instructions=     2867465 cycles=     1023348 branch_miss=    3830 cache_miss=      20 cache_ref=     33759 items=       115 avg_time=    322656 ns]
distinct_user_id<simdjson_ondemand>/manual_time           198819 ns       257822 ns         3520            2.04k           3.20625G               1         7.864k    629.149k             0.996253          5.07707k       3.19423G          1.82938M                    2.89681                     2.90771           583.863k    2.19206k   631.515k       2.95819G/s   0.949432    7.8981k   634.615k         1.00491    5.0297k/s 3.19192G/s     1.82938M               2.89681                2.88266        115       578.415k/s [BEST: throughput=  3.21 GB/s doc_throughput=  5077 docs/s instructions=     1829381 cycles=      629149 branch_miss=    2040 cache_miss=       1 cache_ref=      7864 items=       115 avg_time=    198819 ns]
distinct_user_id<yyjson>/manual_time                      679535 ns       765276 ns         1000           6.356k           1.57987G           7.15k        27.396k    1.27649M              2.02132          2.50172k       3.19343G          2.87791M                    4.55715                     2.25455           287.698k     7.4016k   631.515k       886.282M/s    2.2618k   24.7286k    1.4665M         2.32219   1.47159k/s 2.15809G/s     2.87811M               4.55746                1.96257        115       169.233k/s [BEST: throughput=  1.58 GB/s doc_throughput=  2501 docs/s instructions=     2877909 cycles=     1276492 branch_miss=    6356 cache_miss=    7150 cache_ref=     27396 items=       115 avg_time=    679535 ns]
distinct_user_id<yyjson_insitu>/manual_time               506843 ns       574466 ns         1394           7.147k           1.80818G          1.211k        13.213k    1.11026M              1.75809          2.86325k       3.17895G          2.87739M                    4.55633                     2.59163           329.273k    7.44911k   631.515k       1.16041G/s    68.6994   8.89915k   1.22201M         1.93505     1.973k/s 2.41102G/s     2.87766M               4.55675                2.35485        115       226.895k/s [BEST: throughput=  1.81 GB/s doc_throughput=  2863 docs/s instructions=     2877393 cycles=     1110262 branch_miss=    7147 cache_miss=    1211 cache_ref=     13213 items=       115 avg_time=    506842 ns]
distinct_user_id<sajson>/manual_time                      687768 ns       755560 ns         1017          10.577k            931.64M               3        12.911k    2.16435M              3.42724          1.47525k       3.19295G          5.81759M                    9.21211                     2.68791           169.653k    11.0282k   631.515k       875.673M/s     5.3353   12.9725k   2.19412M         3.47438   1.45398k/s 3.19021G/s     5.81759M               9.21211                2.65144        115       167.208k/s [BEST: throughput=  0.93 GB/s doc_throughput=  1475 docs/s instructions=     5817587 cycles=     2164353 branch_miss=   10577 cache_miss=       3 cache_ref=     12911 items=       115 avg_time=    687767 ns]
distinct_user_id<rapidjson>/manual_time                  2528787 ns      2598748 ns          278          32.257k           278.643M             722        23.145k    7.23583M              11.4579            441.23       3.19267G          21.8233M                     34.557                       3.016           50.7415k      33.54k   631.515k       238.162M/s    787.968   12.5948k   7.41299M         11.7384    395.447/s 2.93144G/s     21.8242M               34.5585                2.94405        115       45.4764k/s [BEST: throughput=  0.28 GB/s doc_throughput=   441 docs/s instructions=    21823291 cycles=     7235832 branch_miss=   32257 cache_miss=     722 cache_ref=     23145 items=       115 avg_time=   2528786 ns]
distinct_user_id<rapidjson_insitu>/manual_time           1841817 ns      1910111 ns          376           24.38k            378.35M          4.637k        14.278k    5.32919M              8.43873           599.114       3.19279G          13.2542M                     20.988                      2.4871           68.8981k    31.9736k   631.515k       326.992M/s   1.90013k   11.5532k    5.5763M         8.83004    542.942/s 3.02761G/s     13.2545M               20.9884                2.37693        115       62.4383k/s [BEST: throughput=  0.38 GB/s doc_throughput=   599 docs/s instructions=    13254214 cycles=     5329187 branch_miss=   24380 cache_miss=    4637 cache_ref=     14278 items=       115 avg_time=   1841816 ns]
distinct_user_id<nlohmann_json>/manual_time             10605659 ns     10693686 ns           77         129.885k           70.5581M            1012        99.687k    28.5408M              45.1942           111.728       3.18881G          76.3713M                    120.933                     2.67586           12.8488k    247.524k   631.515k       56.7866M/s    45.5065    106.69k   33.8268M         53.5646    94.2893/s 3.18951G/s     74.9524M               118.687                2.21577        115       10.8433k/s [BEST: throughput=  0.07 GB/s doc_throughput=   111 docs/s instructions=    76371259 cycles=    28540785 branch_miss=  129885 cache_miss=    1012 cache_ref=     99687 items=       115 avg_time=  10605658 ns]
find_tweet<simdjson_dom>/manual_time                      306805 ns       378948 ns         2281           3.468k           2.07488G               0        29.443k    972.186k              1.53945          3.28556k       3.19418G          2.78229M                    4.40574                     2.86189           3.28556k     3.6164k   631.515k       1.91699G/s   0.202104   29.5196k   978.962k         1.55018   3.25939k/s 3.19082G/s     2.78229M               4.40574                2.84208          1       3.25939k/s [BEST: throughput=  2.07 GB/s doc_throughput=  3285 docs/s instructions=     2782291 cycles=      972186 branch_miss=    3468 cache_miss=       0 cache_ref=     29443 items=         1 avg_time=    306805 ns]
find_tweet<simdjson_ondemand>/manual_time                 133289 ns       194532 ns         5248             1031           4.77076G               0         7.399k    423.087k             0.669956          7.55447k        3.1962G          1.32079M                    2.09146                     3.12179           7.55447k     1059.79   631.515k       4.41255G/s   0.033346   7.33064k   425.565k        0.673879    7.5025k/s  3.1928G/s     1.32079M               2.09146                3.10362          1        7.5025k/s [BEST: throughput=  4.77 GB/s doc_throughput=  7554 docs/s instructions=     1320790 cycles=      423087 branch_miss=    1031 cache_miss=       0 cache_ref=      7399 items=         1 avg_time=    133288 ns]
find_tweet<yyjson>/manual_time                            762623 ns       844877 ns          990           9.373k           1.50817G             209        27.274k    1.33766M              2.11818          2.38819k       3.19458G          2.81716M                    4.46096                     2.10604           2.38819k    7.36097k   631.515k       789.722M/s    351.626   20.0657k   1.48009M         2.34371   1.31126k/s 1.94079G/s     2.81785M               4.46204                1.90383          1       1.31126k/s [BEST: throughput=  1.51 GB/s doc_throughput=  2388 docs/s instructions=     2817163 cycles=     1337662 branch_miss=    9373 cache_miss=     209 cache_ref=     27274 items=         1 avg_time=    762622 ns]
find_tweet<yyjson_insitu>/manual_time                     492311 ns       552460 ns         1422           6.705k           1.87048G          1.123k         12.53k    1073.29k              1.69955          2.96189k       3.17898G          2.81684M                    4.46045                     2.62449           2.96189k    7.13494k   631.515k       1.19466G/s    7.57806   5.12379k   1.17583M         1.86192   2.03124k/s 2.38839G/s      2.8171M               4.46086                2.39584          1       2.03124k/s [BEST: throughput=  1.87 GB/s doc_throughput=  2961 docs/s instructions=     2816839 cycles=     1073292 branch_miss=    6705 cache_miss=    1123 cache_ref=     12530 items=         1 avg_time=    492311 ns]
find_tweet<sajson>/manual_time                            674344 ns       739984 ns         1038          10.531k           946.166M               0        12.218k    2.13123M              3.37479          1.49825k       3.19312G          5.72247M                    9.06149                     2.68505           1.49825k    10.7842k   631.515k       893.104M/s    3.11175   12.3168k   2.15147M         3.40683   1.48292k/s 3.19046G/s     5.72247M               9.06149                 2.6598          1       1.48292k/s [BEST: throughput=  0.95 GB/s doc_throughput=  1498 docs/s instructions=     5722466 cycles=     2131233 branch_miss=   10531 cache_miss=       0 cache_ref=     12218 items=         1 avg_time=    674344 ns]
find_tweet<rapidjson>/manual_time                        2507977 ns      2572445 ns          280          31.899k           280.051M         11.923k        21.123k    7.19955M              11.4004           443.459        3.1927G          21.7397M                    34.4247                      3.0196            443.459    33.1564k   631.515k       240.138M/s    606.121   9.11374k   7.34709M         11.6341    398.728/s 2.92949G/s     21.7406M               34.4261                2.95908          1        398.728/s [BEST: throughput=  0.28 GB/s doc_throughput=   443 docs/s instructions=    21739743 cycles=     7199546 branch_miss=   31899 cache_miss=   11923 cache_ref=     21123 items=         1 avg_time=   2507976 ns]
find_tweet<rapidjson_insitu>/manual_time                 1827498 ns      1890628 ns          379          24.015k           380.677M          6.127k        12.781k     5.2968M              8.38746             602.8       3.19291G          13.1754M                    20.8632                     2.48743              602.8    32.0698k   631.515k       329.554M/s   1.72907k   8.48432k   5.53237M         8.76047    547.196/s 3.02729G/s     13.1759M               20.8639                 2.3816          1        547.196/s [BEST: throughput=  0.38 GB/s doc_throughput=   602 docs/s instructions=    13175407 cycles=     5296805 branch_miss=   24015 cache_miss=    6127 cache_ref=     12781 items=         1 avg_time=   1827497 ns]
find_tweet<nlohmann_json>/manual_time                    9185979 ns      9271831 ns           89         101.136k           81.7724M          1.423k        78.067k    24.4826M               38.768           129.486       3.17015G          66.4873M                    105.282                      2.7157            129.486    215.588k   631.515k       65.5629M/s    89.7978   83.0059k   29.2943M         46.3874    108.862/s 3.18903G/s     65.0771M               103.049                2.22149          1        108.862/s [BEST: throughput=  0.08 GB/s doc_throughput=   129 docs/s instructions=    66487297 cycles=    24482587 branch_miss=  101136 cache_miss=    1423 cache_ref=     78067 items=         1 avg_time=   9185978 ns]
top_tweet<simdjson_dom>/manual_time                       314676 ns       391857 ns         2224           3.671k           2.02116G               1        31.657k     997.92k               1.5802           3.2005k       3.19384G          2.81918M                    4.46415                     2.82505            3.2005k    3.80443k   631.515k       1.86905G/s    2.09173   31.8969k   1004.14k         1.59005   3.17787k/s 3.19103G/s     2.81918M               4.46415                2.80755          1       3.17787k/s [BEST: throughput=  2.02 GB/s doc_throughput=  3200 docs/s instructions=     2819178 cycles=      997920 branch_miss=    3671 cache_miss=       1 cache_ref=     31657 items=         1 avg_time=    314676 ns]
top_tweet<simdjson_ondemand>/manual_time                  183988 ns       246368 ns         3806           2.077k           3.47125G               1         8.058k    581.213k             0.920347          5.49671k       3.19476G          1.84358M                     2.9193                     3.17195           5.49671k    2.23057k   631.515k       3.19665G/s   0.396742   8.04738k   587.327k        0.930028   5.43514k/s  3.1922G/s     1.84358M                2.9193                3.13893          1       5.43514k/s [BEST: throughput=  3.47 GB/s doc_throughput=  5496 docs/s instructions=     1843579 cycles=      581213 branch_miss=    2077 cache_miss=       1 cache_ref=      8058 items=         1 avg_time=    183987 ns]
top_tweet<simdjson_ondemand_forward_only>/manual_time     186097 ns       249331 ns         3750            2.06k           3.44651G               0         8.645k    585.364k              0.92692          5.45753k       3.19464G          1.85914M                    2.94394                     3.17605           5.45753k    2.30473k   631.515k       3.16041G/s  0.0154667   8.64921k   593.995k        0.940587   5.37353k/s 3.19185G/s     1.85914M               2.94394                 3.1299          1       5.37353k/s [BEST: throughput=  3.45 GB/s doc_throughput=  5457 docs/s instructions=     1859144 cycles=      585364 branch_miss=    2060 cache_miss=       0 cache_ref=      8645 items=         1 avg_time=    186097 ns]
top_tweet<yyjson>/manual_time                             772880 ns       859259 ns          982           9.906k           1.47846G             262        27.447k    1.36444M              2.16058          2.34113k       3.19433G          2.84444M                    4.50415                     2.08469           2.34113k    7.50241k   631.515k       779.241M/s    414.055   22.6487k   1.51183M         2.39398   1.29386k/s 1.95611G/s     2.84491M                4.5049                1.88176          1       1.29386k/s [BEST: throughput=  1.48 GB/s doc_throughput=  2341 docs/s instructions=     2844438 cycles=     1364440 branch_miss=    9906 cache_miss=     262 cache_ref=     27447 items=         1 avg_time=    772879 ns]
top_tweet<yyjson_insitu>/manual_time                      500917 ns       567823 ns         1000           6.822k           1.84369G           1.35k         12.88k    1088.57k              1.72375          2.91947k       3.17805G          2.84411M                    4.50364                      2.6127           2.91947k    7.25086k   631.515k       1.17413G/s      50.96   7.64721k    1.2039M         1.90637   1.99634k/s  2.4034G/s     2.84438M               4.50405                2.36263          1       1.99634k/s [BEST: throughput=  1.84 GB/s doc_throughput=  2919 docs/s instructions=     2844114 cycles=     1088572 branch_miss=    6822 cache_miss=    1350 cache_ref=     12880 items=         1 avg_time=    500917 ns]
top_tweet<sajson>/manual_time                             676921 ns       746753 ns         1030          10.473k           942.364M               2        12.359k    2.13978M              3.38834          1.49223k       3.19305G          5.75246M                    9.10898                     2.68833           1.49223k    10.7263k   631.515k       889.704M/s    4.23204   12.3965k   2.15947M          3.4195   1.47728k/s 3.19013G/s     5.75246M               9.10898                2.66383          1       1.47728k/s [BEST: throughput=  0.94 GB/s doc_throughput=  1492 docs/s instructions=     5752458 cycles=     2139785 branch_miss=   10473 cache_miss=       2 cache_ref=     12359 items=         1 avg_time=    676921 ns]
top_tweet<rapidjson>/manual_time                         2519942 ns      2589254 ns          279          32.349k            279.22M          6.985k         22.07k    7.22103M              11.4345           442.143       3.19273G          21.7983M                    34.5175                     3.01873            442.143    33.4648k   631.515k       238.997M/s    698.588   10.5863k   7.38571M         11.6952    396.834/s  2.9309G/s      21.799M               34.5185                2.95151          1        396.834/s [BEST: throughput=  0.28 GB/s doc_throughput=   442 docs/s instructions=    21798344 cycles=     7221033 branch_miss=   32349 cache_miss=    6985 cache_ref=     22070 items=         1 avg_time=   2519942 ns]
top_tweet<rapidjson_insitu>/manual_time                  1844228 ns      1912978 ns          382          24.511k           378.909M             371        14.415k    5.32146M               8.4265               600       3.19288G          13.2296M                    20.9489                     2.48608                600    32.7181k   631.515k       326.565M/s   1.81183k   10.2089k   5.58414M         8.84245    542.232/s  3.0279G/s     13.2298M               20.9494                2.36918          1        542.232/s [BEST: throughput=  0.38 GB/s doc_throughput=   600 docs/s instructions=    13229564 cycles=     5321459 branch_miss=   24511 cache_miss=     371 cache_ref=     14415 items=         1 avg_time=   1844228 ns]
top_tweet<nlohmann_json>/manual_time                    10963393 ns     11051757 ns           64         191.036k           57.7728M              78       165.128k    34.8748M              55.2241           91.4828       3.19045G           88.187M                    139.644                     2.52867            91.4828    192.896k   631.515k       54.9337M/s    76.9062   164.916k   34.9642M         55.3655    91.2126/s 3.18917G/s     88.2464M               139.738                2.52391          1        91.2126/s [BEST: throughput=  0.06 GB/s doc_throughput=    91 docs/s instructions=    88187047 cycles=    34874831 branch_miss=  191036 cache_miss=      78 cache_ref=    165128 items=         1 avg_time=  10963392 ns]
