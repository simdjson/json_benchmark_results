run_benchmark: v0.8.0 /home/jkeiser/simdjson_benchmark_results/v0.8.0/skylake-x-clang10-debug.json -DCMAKE_BUILD_TYPE=Debug
git reset --hard v0.8.0
HEAD is now at c96ff018 Version 0.8.
cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The CXX compiler identification is Clang 10.0.1
-- The C compiler identification is Clang 10.0.1
-- Check for working CXX compiler: /usr/bin/clang++-10
-- Check for working CXX compiler: /usr/bin/clang++-10 -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Check for working C compiler: /usr/bin/clang-10
-- Check for working C compiler: /usr/bin/clang-10 -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed
-- Check if compiler accepts -pthread
-- Check if compiler accepts -pthread - yes
-- Found Threads: TRUE  
-- Looking for fork
-- Looking for fork - found
-- Looking for wait
-- Looking for wait - found
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- Found Git: /usr/bin/git (found version "2.27.0") 
-- git Version: v0.2.1-c96ff018
-- Version: 0.2.1
-- Performing Test HAVE_CXX_FLAG_STD_CXX11
-- Performing Test HAVE_CXX_FLAG_STD_CXX11 - Success
-- Performing Test HAVE_CXX_FLAG_WALL
-- Performing Test HAVE_CXX_FLAG_WALL - Success
-- Performing Test HAVE_CXX_FLAG_WEXTRA
-- Performing Test HAVE_CXX_FLAG_WEXTRA - Success
-- Performing Test HAVE_CXX_FLAG_WSHADOW
-- Performing Test HAVE_CXX_FLAG_WSHADOW - Success
-- Performing Test HAVE_CXX_FLAG_WERROR
-- Performing Test HAVE_CXX_FLAG_WERROR - Success
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32 - Success
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED - Success
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WD654
-- Performing Test HAVE_CXX_FLAG_WD654 - Failed
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY - Success
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES -- failed to compile
-- Performing Test HAVE_CXX_FLAG_COVERAGE
-- Performing Test HAVE_CXX_FLAG_COVERAGE - Success
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Performing Test USE_BOOST_JSON
-- Performing Test USE_BOOST_JSON - Failed
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Found Python3: /usr/bin/python3.8 (found version "3.8.6") found components: Interpreter 
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 10
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
Scanning dependencies of target benchmark
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_api_internal.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_name.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_name.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_register.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_register.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_runner.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_runner.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/colorprint.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/colorprint.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/commandlineflags.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/commandlineflags.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/complexity.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/complexity.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/console_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/console_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/counter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/counter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/csv_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/csv_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/json_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/json_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/sleep.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sleep.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/statistics.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/statistics.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/string_util.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/string_util.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/sysinfo.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sysinfo.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/timers.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/timers.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -P CMakeFiles/benchmark.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/benchmark.dir/link.txt --verbose=1
/usr/bin/ar qc libbenchmarkd.a  CMakeFiles/benchmark.dir/benchmark.cc.o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o CMakeFiles/benchmark.dir/benchmark_name.cc.o CMakeFiles/benchmark.dir/benchmark_register.cc.o CMakeFiles/benchmark.dir/benchmark_runner.cc.o CMakeFiles/benchmark.dir/colorprint.cc.o CMakeFiles/benchmark.dir/commandlineflags.cc.o CMakeFiles/benchmark.dir/complexity.cc.o CMakeFiles/benchmark.dir/console_reporter.cc.o CMakeFiles/benchmark.dir/counter.cc.o CMakeFiles/benchmark.dir/csv_reporter.cc.o CMakeFiles/benchmark.dir/json_reporter.cc.o CMakeFiles/benchmark.dir/reporter.cc.o CMakeFiles/benchmark.dir/sleep.cc.o CMakeFiles/benchmark.dir/statistics.cc.o CMakeFiles/benchmark.dir/string_util.cc.o CMakeFiles/benchmark.dir/sysinfo.cc.o CMakeFiles/benchmark.dir/timers.cc.o
/usr/bin/ranlib libbenchmarkd.a
[ 80%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
Scanning dependencies of target generated-data
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated && /usr/bin/ruby genfeaturejson.rb /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-miss.json ...
[ 80%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/clang++-10  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/include  -g -fPIC   -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -pthread -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/clang++-10 -fPIC -g  -shared -Wl,-soname,libsimdjson.so.7 -o ../libsimdjson.so.7.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.7.0.0 ../libsimdjson.so.7 ../libsimdjson.so
[ 80%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
Scanning dependencies of target yyjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/clang-10  -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src  -g   -o CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o   -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src/yyjson.c
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -P CMakeFiles/yyjson.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -E cmake_link_script CMakeFiles/yyjson.dir/link.txt --verbose=1
/usr/bin/ar qc libyyjson.a  CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o
/usr/bin/ranlib libyyjson.a
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/clang++-10  -DRAPIDJSON_HAS_STDSTRING -DSAJSON_UNSORTED_OBJECT_KEYS -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_COMPETITION_NLOHMANN_JSON -DSIMDJSON_COMPETITION_RAPIDJSON -DSIMDJSON_COMPETITION_SAJSON -DSIMDJSON_COMPETITION_YYJSON -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/rapidjson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/sajson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/json  -g   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/clang++-10  -g   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.7.0.0 ../_deps/google_benchmarks/src/libbenchmarkd.a ../dependencies/libyyjson.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.8.0/skylake-x-clang10-debug.json --benchmark_out_format=json
2021-01-24 20:41:13
Running benchmark/bench_ondemand
Run on (4 X 3200 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 1024 KiB (x4)
  L3 Unified 8448 KiB (x1)
Load Average: 1.02, 0.55, 0.22
***WARNING*** CPU scaling is enabled, the benchmark real time measurements may be noisy and will incur extra overhead.
***WARNING*** Library was built as DEBUG. Timings may be affected.
simdjson::dom implementation:      haswell
simdjson::ondemand implementation: fallback

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                25372303 ns     25444361 ns           28          18.103k           24.9055M              13        48.217k    80.9036M               128.11           39.4376       3.19064G          78.2256M                     123.87                      0.9669           3.94376k    18.2853k   631.515k       23.7369M/s    84.1786   48.1969k   80.9464M         128.178    39.4131/s 3.19034G/s     78.2256M                123.87               0.966388        100       3.94131k/s [BEST: throughput=  0.02 GB/s doc_throughput=    39 docs/s instructions=    78225617 cycles=    80903552 branch_miss=   18103 cache_miss=      13 cache_ref=     48217 items=       100 avg_time=  25372302 ns]
partial_tweets<simdjson_ondemand>/manual_time           19525809 ns     19592625 ns           36           8.228k           32.3548M               6        36.008k    62.2783M              98.6173           51.2336       3.19074G          63.9481M                    101.261                     1.02681           5.12336k    8.37292k   631.515k       30.8443M/s    20.8889   36.1629k    62.292M          98.639    51.2143/s 3.19024G/s     63.9481M               101.261                1.02659        100       5.12143k/s [BEST: throughput=  0.03 GB/s doc_throughput=    51 docs/s instructions=    63948115 cycles=    62278315 branch_miss=    8228 cache_miss=       6 cache_ref=     36008 items=       100 avg_time=  19525808 ns]
partial_tweets<yyjson>/manual_time                       2732344 ns      2811781 ns          256          12.925k           264.561M             281        29.261k    7.62148M              12.0686            418.93       3.19287G          10.5728M                     16.742                     1.38724            41.893k    11.6089k   631.515k       220.419M/s     696.34   24.7984k   7.75961M         12.2873    365.986/s 2.83991G/s     10.5733M               16.7427                1.36261        100       36.5986k/s [BEST: throughput=  0.26 GB/s doc_throughput=   418 docs/s instructions=    10572818 cycles=     7621482 branch_miss=   12925 cache_miss=     281 cache_ref=     29261 items=       100 avg_time=   2732344 ns]
partial_tweets<yyjson_insitu>/manual_time                2458039 ns      2521233 ns          285          11.032k           273.626M              42        16.723k     7.3552M              11.6469           433.284       3.18689G          10.5725M                    16.7415                     1.43742           43.3284k    11.2641k   631.515k       245.016M/s    101.712   10.2697k   7.44364M          11.787    406.828/s 3.02828G/s     10.5727M               16.7418                1.42037        100       40.6828k/s [BEST: throughput=  0.27 GB/s doc_throughput=   433 docs/s instructions=    10572524 cycles=     7355196 branch_miss=   11032 cache_miss=      42 cache_ref=     16723 items=       100 avg_time=   2458038 ns]
partial_tweets<sajson>/manual_time                       3761403 ns      3824828 ns          186          42.264k             168.3M               0         14.27k      11.98M              18.9702           266.503        3.1927G          26.9812M                    42.7245                     2.25219           26.6503k    42.3984k   631.515k       160.116M/s    14.5108   14.6334k   11.9962M          18.996    265.858/s  3.1893G/s     26.9812M               42.7245                2.24914        100       26.5858k/s [BEST: throughput=  0.17 GB/s doc_throughput=   266 docs/s instructions=    26981170 cycles=    11979989 branch_miss=   42264 cache_miss=       0 cache_ref=     14270 items=       100 avg_time=   3761402 ns]
partial_tweets<rapidjson>/manual_time                   14495720 ns     14561783 ns           48          68.103k           44.3031M             505        24.495k    45.4772M              72.0128           70.1537       3.19039G          105.146M                    166.498                     2.31206           7.01537k    67.6115k   631.515k       41.5474M/s    264.188   13.0276k   45.6015M         72.2098    68.9859/s 3.14586G/s     105.147M               166.499                2.30577        100       6.89859k/s [BEST: throughput=  0.04 GB/s doc_throughput=    70 docs/s instructions=   105146076 cycles=    45477182 branch_miss=   68103 cache_miss=     505 cache_ref=     24495 items=       100 avg_time=  14495720 ns]
partial_tweets<rapidjson_insitu>/manual_time            11149104 ns     11212134 ns           63          53.289k           57.3945M              30        16.177k    35.1028M               55.585           90.8838       3.19027G           76.833M                    121.665                      2.1888           9.08838k    53.8692k   631.515k       54.0187M/s    142.317    10.683k   35.1977M         55.7354    89.6933/s   3.157G/s     76.8332M               121.665                 2.1829        100       8.96933k/s [BEST: throughput=  0.06 GB/s doc_throughput=    90 docs/s instructions=    76832970 cycles=    35102752 branch_miss=   53289 cache_miss=      30 cache_ref=     16177 items=       100 avg_time=  11149104 ns]
partial_tweets<nlohmann_json>/manual_time               69527566 ns     69619287 ns           10         422.242k            9.1339M          2.216k       102.603k    220.613M               349.34           14.4635       3.19083G          425.777M                    674.215                     1.92997           1.44635k    434.135k   631.515k       8.66217M/s      307.3   134.027k   221.834M         351.272    14.3828/s 3.19059G/s      425.75M               674.172                1.91923        100       1.43828k/s [BEST: throughput=  0.01 GB/s doc_throughput=    14 docs/s instructions=   425776930 cycles=   220613289 branch_miss=  422242 cache_miss=    2216 cache_ref=    102603 items=       100 avg_time=  69527565 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                3362327091 ns   3368176826 ns            1         3.98182M           13.6806M        6.96001M       7.04353M    10.7287G              233.239          0.297413       3.19086G          14.5492G                    316.294                     1.35609           297.413k    3.98182M   45.9988M       13.0469M/s   6.96001M   7.04353M   10.7287G         233.239   0.297413/s 3.19086G/s     14.5492G               316.294                1.35609      1000k       297.413k/s [BEST: throughput=  0.01 GB/s doc_throughput=     0 docs/s instructions= 14549150080 cycles= 10728711643 branch_miss= 3981817 cache_miss= 6960009 cache_ref=   7043527 items=   1000000 avg_time=3362327091 ns]
large_random<simdjson_ondemand>/manual_time           1926902239 ns   1932802893 ns            1          910.62k           23.8719M        3.57471M       3.63481M    6.14869G              133.671          0.518968       3.19097G          8.52071G                    185.238                     1.38578           518.968k     910.62k   45.9988M        22.766M/s   3.57471M   3.63481M   6.14869G         133.671   0.518968/s 3.19097G/s     8.52071G               185.238                1.38578      1000k       518.968k/s [BEST: throughput=  0.02 GB/s doc_throughput=     0 docs/s instructions=  8520706049 cycles=  6148688014 branch_miss=  910620 cache_miss= 3574710 cache_ref=   3634810 items=   1000000 avg_time=1926902239 ns]
large_random<simdjson_ondemand_unordered>/manual_time 1934819807 ns   1940676242 ns            1         910.814k           23.7742M        3.57246M       3.64189M    6.17361G              134.212          0.516844       3.19079G          8.58371G                    186.607                     1.39039           516.844k    910.814k   45.9988M       22.6728M/s   3.57246M   3.64189M   6.17361G         134.212   0.516844/s 3.19079G/s     8.58371G               186.607                1.39039      1000k       516.844k/s [BEST: throughput=  0.02 GB/s doc_throughput=     0 docs/s instructions=  8583706055 cycles=  6173609806 branch_miss=  910814 cache_miss= 3572458 cache_ref=   3641887 items=   1000000 avg_time=1934819807 ns]
large_random<yyjson>/manual_time                       424432563 ns    430307772 ns            2         660.099k           108.394M        4.20826M       4.43262M    1.21434G              26.3993           2.35645       2.86152G          2.93382G                    63.7803                     2.41598           2.35645M    660.567k   45.9988M       103.356M/s   4.20737M   4.43153M   1.21455G          26.404    2.35609/s 2.86159G/s     2.93382G               63.7803                2.41555      1000k       2.35609M/s [BEST: throughput=  0.11 GB/s doc_throughput=     2 docs/s instructions=  2933817093 cycles=  1214335822 branch_miss=  660099 cache_miss= 4208264 cache_ref=   4432624 items=   1000000 avg_time= 424432563 ns]
large_random<yyjson_insitu>/manual_time                398674978 ns    404582926 ns            2         658.914k           115.427M        3.49967M       4.85277M    1.17242G               25.488           2.50934         2.942G           2.9277G                    63.6473                     2.49714           2.50934M    659.381k   45.9988M       110.034M/s   3.50091M   4.85745M   1.17287G         25.4978    2.50831/s 2.94191G/s      2.9277G               63.6473                2.49619      1000k       2.50831M/s [BEST: throughput=  0.12 GB/s doc_throughput=     2 docs/s instructions=  2927696374 cycles=  1172417722 branch_miss=  658914 cache_miss= 3499669 cache_ref=   4852767 items=   1000000 avg_time= 398674978 ns]
large_random<sajson>/manual_time                       920250300 ns    926131430 ns            1         1.64829M           49.9851M        5.55694M        5.5872M    2.93538G              63.8143           1.08666       3.18976G          7.01595G                    152.525                     2.39014           1086.66k    1.64829M   45.9988M       47.6695M/s   5.55694M    5.5872M   2.93538G         63.8143    1.08666/s 3.18976G/s     7.01595G               152.525                2.39014      1000k       1086.66k/s [BEST: throughput=  0.05 GB/s doc_throughput=     1 docs/s instructions=  7015953695 cycles=  2935378930 branch_miss= 1648294 cache_miss= 5556936 cache_ref=   5587200 items=   1000000 avg_time= 920250300 ns]
large_random<rapidjson>/manual_time                   2060807125 ns   2066639935 ns            1          6.3567M           22.3208M        4.36924M       4.92968M    6.50714G              141.463          0.485247       3.15757G          14.2601G                    310.011                     2.19146           485.247k     6.3567M   45.9988M       21.2867M/s   4.36924M   4.92968M   6.50714G         141.463   0.485247/s 3.15757G/s     14.2601G               310.011                2.19146      1000k       485.247k/s [BEST: throughput=  0.02 GB/s doc_throughput=     0 docs/s instructions= 14260110671 cycles=  6507136723 branch_miss= 6356699 cache_miss= 4369240 cache_ref=   4929679 items=   1000000 avg_time=2060807125 ns]
large_random<rapidjson_lossless>/manual_time          2487873330 ns   2493749331 ns            1         7.36488M           18.4892M        4.38478M        4.9457M    7.87039G                171.1           0.40195        3.1635G          17.2359G                    374.703                     2.18996            401.95k    7.36488M   45.9988M       17.6327M/s   4.38478M    4.9457M   7.87039G           171.1    0.40195/s  3.1635G/s     17.2359G               374.703                2.18996      1000k        401.95k/s [BEST: throughput=  0.02 GB/s doc_throughput=     0 docs/s instructions= 17235863721 cycles=  7870392545 branch_miss= 7364877 cache_miss= 4384784 cache_ref=   4945699 items=   1000000 avg_time=2487873330 ns]
large_random<rapidjson_insitu>/manual_time            2013091213 ns   2018966529 ns            1          6.4447M           22.8498M        5.07868M       5.64726M    6.35493G              138.154          0.496748        3.1568G          13.5301G                    294.141                     2.12907           496.748k     6.4447M   45.9988M       21.7913M/s   5.07868M   5.64726M   6.35493G         138.154   0.496748/s  3.1568G/s     13.5301G               294.141                2.12907      1000k       496.748k/s [BEST: throughput=  0.02 GB/s doc_throughput=     0 docs/s instructions= 13530110244 cycles=  6354930481 branch_miss= 6444696 cache_miss= 5078677 cache_ref=   5647259 items=   1000000 avg_time=2013091213 ns]
large_random<nlohmann_json>/manual_time               10729904466 ns   10735549917 ns            1         36.8752M           4.28697M        30.4487M         31.02M    34.2218G              743.971         0.0931975       3.18938G          63.4292G                   1.37893k                     1.85348           93.1975k    36.8752M   45.9988M       4.08837M/s   30.4487M     31.02M   34.2218G         743.971  0.0931975/s 3.18938G/s     63.4292G              1.37893k                1.85348      1000k       93.1975k/s [BEST: throughput=  0.00 GB/s doc_throughput=     0 docs/s instructions= 63429176552 cycles= 34221756810 branch_miss=36875238 cache_miss=30448716 cache_ref=  31020019 items=   1000000 avg_time=10729904466 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                      4706579259 ns   4724700690 ns            1         3.64655M            29.173M        10.3846M       10.5608M    15.0177G              109.374          0.212469       3.19078G          17.1288G                     124.75                     1.14058           111.395k    3.64655M   137.305M       27.8215M/s   10.3846M   10.5608M   15.0177G         109.374   0.212469/s 3.19078G/s     17.1288G                124.75                1.14058   524.288k       111.395k/s [BEST: throughput=  0.03 GB/s doc_throughput=     0 docs/s instructions= 17128811440 cycles= 15017651948 branch_miss= 3646552 cache_miss=10384583 cache_ref=  10560758 items=    524288 avg_time=4706579259 ns]
kostya<simdjson_ondemand>/manual_time                 3349821529 ns   3367982201 ns            1         1.61712M           40.9887M        6.48121M       6.59235M    10.6882G              77.8426          0.298523       3.19067G          12.3455G                    89.9129                     1.15506           156.512k    1.61712M   137.305M       39.0899M/s   6.48121M   6.59235M   10.6882G         77.8426   0.298523/s 3.19067G/s     12.3455G               89.9129                1.15506   524.288k       156.512k/s [BEST: throughput=  0.04 GB/s doc_throughput=     0 docs/s instructions= 12345496229 cycles= 10688184171 branch_miss= 1617118 cache_miss= 6481210 cache_ref=   6592352 items=    524288 avg_time=3349821529 ns]
kostya<yyjson>/manual_time                             556003324 ns    574207304 ns            1         971.437k            246.95M        8.52074M       8.73153M    1.54086G              11.2222           1.79855       2.77131G          3.23214G                    23.5398                     2.09762           942.958k    971.437k   137.305M        235.51M/s   8.52074M   8.73153M   1.54086G         11.2222    1.79855/s 2.77131G/s     3.23214G               23.5398                2.09762   524.288k       942.958k/s [BEST: throughput=  0.25 GB/s doc_throughput=     1 docs/s instructions=  3232136457 cycles=  1540859502 branch_miss=  971437 cache_miss= 8520741 cache_ref=   8731531 items=    524288 avg_time= 556003324 ns]
kostya<yyjson_insitu>/manual_time                      478295751 ns    496487396 ns            2         971.345k           287.075M        6.38851M       7.82969M    1.41335G              10.2935           2.09078       2.95501G          3.21387G                    23.4068                     2.27393           1096.17k     971.02k   137.305M       273.773M/s   6.38726M   7.83483M   1.41333G         10.2934    2.09076/s 2.95493G/s     3.21387G               23.4068                2.27397   524.288k       1096.16k/s [BEST: throughput=  0.29 GB/s doc_throughput=     2 docs/s instructions=  3213866727 cycles=  1413350327 branch_miss=  971345 cache_miss= 6388505 cache_ref=   7829685 items=    524288 avg_time= 478295751 ns]
kostya<sajson>/manual_time                            1301760152 ns   1319959182 ns            1         11.7466M           105.476M        8.51725M       8.55768M    4.15295G              30.2462          0.768191       3.19026G          8.77554G                    63.9127                     2.11309           402.753k    11.7466M   137.305M        100.59M/s   8.51725M   8.55768M   4.15295G         30.2462   0.768191/s 3.19026G/s     8.77554G               63.9127                2.11309   524.288k       402.753k/s [BEST: throughput=  0.11 GB/s doc_throughput=     0 docs/s instructions=  8775535694 cycles=  4152949129 branch_miss=11746616 cache_miss= 8517249 cache_ref=   8557676 items=    524288 avg_time=1301760152 ns]
kostya<rapidjson>/manual_time                         2638554447 ns   2656655855 ns            1         16.3991M            52.038M        5.24831M       5.88985M    8.32101G              60.6024          0.378995       3.15362G          16.8198G                      122.5                     2.02137           198.703k    16.3991M   137.305M       49.6273M/s   5.24831M   5.88985M   8.32101G         60.6024   0.378995/s 3.15362G/s     16.8198G                 122.5                2.02137   524.288k       198.703k/s [BEST: throughput=  0.05 GB/s doc_throughput=     0 docs/s instructions= 16819800653 cycles=  8321008463 branch_miss=16399126 cache_miss= 5248308 cache_ref=   5889845 items=    524288 avg_time=2638554447 ns]
kostya<rapidjson_lossless>/manual_time                2890350642 ns   2908507914 ns            1         16.6026M           47.5046M        5.25523M       5.87559M    9.12548G              66.4614          0.345979       3.15722G          18.5446G                    135.062                     2.03218           181.393k    16.6026M   137.305M       45.3039M/s   5.25523M   5.87559M   9.12548G         66.4614   0.345979/s 3.15722G/s     18.5446G               135.062                2.03218   524.288k       181.393k/s [BEST: throughput=  0.05 GB/s doc_throughput=     0 docs/s instructions= 18544639989 cycles=  9125476911 branch_miss=16602597 cache_miss= 5255235 cache_ref=   5875586 items=    524288 avg_time=2890350642 ns]
kostya<rapidjson_insitu>/manual_time                  2480404311 ns   2498554778 ns            1         16.6608M           55.3559M        7.33866M       7.92864M    7.81672G              56.9296           0.40316       3.15139G           15.372G                    111.955                     1.96655           211.372k    16.6608M   137.305M       52.7915M/s   7.33866M   7.92864M   7.81672G         56.9296    0.40316/s 3.15139G/s      15.372G               111.955                1.96655   524.288k       211.372k/s [BEST: throughput=  0.06 GB/s doc_throughput=     0 docs/s instructions= 15371961747 cycles=  7816720117 branch_miss=16660804 cache_miss= 7338656 cache_ref=   7928638 items=    524288 avg_time=2480404311 ns]
kostya<nlohmann_json>/manual_time                     16758556259 ns   16776471771 ns            1         58.7361M           8.19313M        45.0495M       45.8109M    53.4753G              389.464          0.059671       3.19093G          100.394G                    731.177                     1.87739           31.2848k    58.7361M   137.305M       7.81358M/s   45.0495M   45.8109M   53.4753G         389.464   0.059671/s 3.19093G/s     100.394G               731.177                1.87739   524.288k       31.2848k/s [BEST: throughput=  0.01 GB/s doc_throughput=     0 docs/s instructions=100394254375 cycles= 53475324644 branch_miss=58736103 cache_miss=45049549 cache_ref=  45810887 items=    524288 avg_time=16758556258 ns]
distinct_user_id<simdjson_dom>/manual_time              25057600 ns     25164074 ns           28          16.916k            25.209M             142        49.047k    79.9285M              126.566           39.9183       3.19061G          76.3621M                    120.919                     0.95538            4.5906k    16.9651k   631.515k        24.035M/s    147.643   49.1557k   79.9456M         126.593    39.9081/s 3.19048G/s     76.3621M               120.919               0.955175        115       4.58943k/s [BEST: throughput=  0.03 GB/s doc_throughput=    39 docs/s instructions=    76362116 cycles=    79928486 branch_miss=   16916 cache_miss=     142 cache_ref=     49047 items=       115 avg_time=  25057599 ns]
distinct_user_id<simdjson_ondemand>/manual_time         19412545 ns     19507979 ns           36           7.573k           32.5427M               2         33.78k    61.9137M              98.0399           51.5312       3.19048G           62.659M                    99.2202                     1.01204           5.92608k    7.66203k   631.515k       31.0242M/s    11.9444   33.7808k   61.9334M         98.0712    51.5131/s 3.19038G/s      62.659M               99.2202                1.01172        115         5.924k/s [BEST: throughput=  0.03 GB/s doc_throughput=    51 docs/s instructions=    62659045 cycles=    61913653 branch_miss=    7573 cache_miss=       2 cache_ref=     33780 items=       115 avg_time=  19412544 ns]
distinct_user_id<yyjson>/manual_time                     2363837 ns      2475649 ns          302          10.396k           273.576M          7.188k        28.219k    7.37005M              11.6704           433.206       3.19275G          10.3045M                    16.3171                     1.39815           49.8187k    10.8623k   631.515k        254.78M/s   6.47625k   28.0468k    7.4268M         11.7603    423.041/s 3.14184G/s     10.3047M               16.3175                1.38751        115       48.6497k/s [BEST: throughput=  0.27 GB/s doc_throughput=   433 docs/s instructions=    10304468 cycles=     7370048 branch_miss=   10396 cache_miss=    7188 cache_ref=     28219 items=       115 avg_time=   2363837 ns]
distinct_user_id<yyjson_insitu>/manual_time              2420891 ns      2517473 ns          289          11.081k           279.341M              31        16.381k    7.21793M              11.4296           442.335       3.19275G          10.3044M                    16.3169                     1.42761           50.8686k    11.2879k   631.515k       248.776M/s    105.567   10.7716k   7.32461M         11.5985    413.071/s 3.02558G/s     10.3047M               16.3174                1.40685        115       47.5032k/s [BEST: throughput=  0.28 GB/s doc_throughput=   442 docs/s instructions=    10304395 cycles=     7217934 branch_miss=   11081 cache_miss=      31 cache_ref=     16381 items=       115 avg_time=   2420890 ns]
distinct_user_id<sajson>/manual_time                     3716919 ns      3812534 ns          188           42.37k           170.271M               0        14.333k    11.8412M              18.7505           269.623       3.19266G          26.5515M                    42.0442                      2.2423           31.0066k    42.3801k   631.515k       162.032M/s     9.5266   14.4821k   11.8527M         18.7686     269.04/s 3.18884G/s     26.5515M               42.0442                2.24013        115       30.9396k/s [BEST: throughput=  0.17 GB/s doc_throughput=   269 docs/s instructions=    26551518 cycles=    11841209 branch_miss=   42370 cache_miss=       0 cache_ref=     14333 items=       115 avg_time=   3716919 ns]
distinct_user_id<rapidjson>/manual_time                 14321480 ns     14421746 ns           49          65.745k           44.8279M          7.958k        24.054k    44.9495M              71.1773           70.9847       3.19073G          104.008M                    164.697                     2.31389           8.16324k    67.0686k   631.515k       42.0529M/s   1.51253k   15.1552k   45.1391M         71.4775    69.8252/s 3.15185G/s     104.009M               164.697                2.30418        115        8.0299k/s [BEST: throughput=  0.04 GB/s doc_throughput=    70 docs/s instructions=   104008316 cycles=    44949516 branch_miss=   65745 cache_miss=    7958 cache_ref=     24054 items=       115 avg_time=  14321479 ns]
distinct_user_id<rapidjson_insitu>/manual_time          10859533 ns     10956021 ns           64          53.107k            58.214M          7.174k        16.156k    34.5987M              54.7868           92.1815       3.18936G          75.7257M                    119.911                     2.18869           10.6009k    53.1851k   631.515k       55.4591M/s   6.35534k   16.1324k   34.6447M         54.8596     92.085/s 3.19026G/s     75.7256M               119.911                2.18578        115       10.5898k/s [BEST: throughput=  0.06 GB/s doc_throughput=    92 docs/s instructions=    75725708 cycles=    34598694 branch_miss=   53107 cache_miss=    7174 cache_ref=     16156 items=       115 avg_time=  10859533 ns]
distinct_user_id<nlohmann_json>/manual_time             66273790 ns     66389871 ns           11         379.282k           9.56988M          1.507k       102.918k    210.542M              333.392           15.1538       3.19052G          407.785M                    645.726                     1.93683           1.74269k     387.05k   631.515k       9.08745M/s    201.818   110.265k   211.443M         334.818    15.0889/s 3.19044G/s     406.477M               643.654                 1.9224        115       1.73523k/s [BEST: throughput=  0.01 GB/s doc_throughput=    15 docs/s instructions=   407785354 cycles=   210542196 branch_miss=  379282 cache_miss=    1507 cache_ref=    102918 items=       115 avg_time=  66273789 ns]
find_tweet<simdjson_dom>/manual_time                    24575891 ns     24651911 ns           28          15.385k            25.704M               0        45.931k    78.3886M              124.128           40.7022       3.19058G          74.2429M                    117.563                    0.947115            40.7022    15.4625k   631.515k       24.5061M/s    23.6071   46.0291k   78.4074M         124.158    40.6903/s 3.19042G/s     74.2429M               117.563               0.946888          1        40.6903/s [BEST: throughput=  0.03 GB/s doc_throughput=    40 docs/s instructions=    74242948 cycles=    78388559 branch_miss=   15385 cache_miss=       0 cache_ref=     45931 items=         1 avg_time=  24575890 ns]
find_tweet<simdjson_ondemand>/manual_time               18135434 ns     18212651 ns           39           3.332k           34.8399M               4        19.938k    57.8306M              91.5744           55.1687       3.19044G          54.9617M                    87.0316                    0.950391            55.1687    3.34133k   631.515k        33.209M/s    9.05128   20.1927k   57.8609M         91.6223    55.1407/s 3.19049G/s     54.9617M               87.0316               0.949894          1        55.1407/s [BEST: throughput=  0.03 GB/s doc_throughput=    55 docs/s instructions=    54961731 cycles=    57830633 branch_miss=    3332 cache_miss=       4 cache_ref=     19938 items=         1 avg_time=  18135434 ns]
find_tweet<yyjson>/manual_time                           2644417 ns      2728962 ns          270          12.603k           272.313M             204        28.297k    7.38929M              11.7009           431.205        3.1863G          10.0178M                     15.863                     1.35571            431.205    11.1449k   631.515k       227.748M/s    382.548   21.7296k   7.48422M         11.8512    378.155/s 2.83019G/s     10.0182M               15.8638                1.33858          1        378.155/s [BEST: throughput=  0.27 GB/s doc_throughput=   431 docs/s instructions=    10017751 cycles=     7389293 branch_miss=   12603 cache_miss=     204 cache_ref=     28297 items=         1 avg_time=   2644417 ns]
find_tweet<yyjson_insitu>/manual_time                    2372643 ns      2435947 ns          295          10.663k           284.363M          2.055k        14.216k    7.07265M              11.1995           450.287       3.18472G          10.0174M                    15.8624                     1.41635            450.287    10.9786k   631.515k       253.835M/s    18.0542   6.90049k   7.17288M         11.3582    421.471/s 3.02316G/s     10.0176M               15.8629                 1.3966          1        421.471/s [BEST: throughput=  0.28 GB/s doc_throughput=   450 docs/s instructions=    10017374 cycles=     7072652 branch_miss=   10663 cache_miss=    2055 cache_ref=     14216 items=         1 avg_time=   2372642 ns]
find_tweet<sajson>/manual_time                           3634957 ns      3701930 ns          193          42.108k            174.15M             213        13.866k    11.5773M              18.3327           275.766       3.19264G          26.1128M                    41.3495                     2.25551            275.766    42.2161k   631.515k       165.686M/s    237.238   13.9654k   11.5939M         18.3589    275.106/s 3.18956G/s     26.1128M               41.3495                2.25229          1        275.106/s [BEST: throughput=  0.17 GB/s doc_throughput=   275 docs/s instructions=    26112809 cycles=    11577346 branch_miss=   42108 cache_miss=     213 cache_ref=     13866 items=         1 avg_time=   3634956 ns]
find_tweet<rapidjson>/manual_time                       14086980 ns     14156236 ns           50          64.806k           45.5634M          8.806k        22.323k    44.2243M              70.0289           72.1493       3.19075G          102.589M                    162.449                     2.31974            72.1493    65.0276k   631.515k       42.7529M/s    1.4235k   12.2713k   44.3852M         70.2836    70.9875/s 3.15079G/s      102.59M                162.45                2.31135          1        70.9875/s [BEST: throughput=  0.05 GB/s doc_throughput=    72 docs/s instructions=   102588829 cycles=    44224290 branch_miss=   64806 cache_miss=    8806 cache_ref=     22323 items=         1 avg_time=  14086980 ns]
find_tweet<rapidjson_insitu>/manual_time                10655272 ns     10723694 ns           66          52.349k            59.354M          6.703k        14.815k    33.9498M              53.7592           93.9867       3.19083G          74.3362M                    117.711                      2.1896            93.9867    52.1961k   631.515k       56.5222M/s   6.14995k   14.8327k   33.9945M         53.8301    93.8503/s  3.1904G/s     74.3362M               117.711                2.18671          1        93.8503/s [BEST: throughput=  0.06 GB/s doc_throughput=    93 docs/s instructions=    74336233 cycles=    33949752 branch_miss=   52349 cache_miss=    6703 cache_ref=     14815 items=         1 avg_time=  10655271 ns]
find_tweet<nlohmann_json>/manual_time                   57493344 ns     57583305 ns           12         288.083k           11.0249M          1.752k        80.383k    182.763M              289.405           17.4579       3.19066G          357.652M                    566.339                     1.95691            17.4579    294.138k   631.515k       10.4753M/s    204.417   87.2692k   183.442M         290.479    17.3933/s 3.19066G/s     356.326M               564.239                1.94245          1        17.3933/s [BEST: throughput=  0.01 GB/s doc_throughput=    17 docs/s instructions=   357651574 cycles=   182763498 branch_miss=  288083 cache_miss=    1752 cache_ref=     80383 items=         1 avg_time=  57493343 ns]
top_tweet<simdjson_dom>/manual_time                     24733626 ns     24813138 ns           28          15.846k           25.5415M               9         47.61k    78.8882M              124.919           40.4448       3.19062G          75.0753M                    118.881                    0.951667            40.4448    15.8879k   631.515k       24.3498M/s    22.8571   47.7856k   78.9122M         124.957    40.4308/s 3.19048G/s     75.0753M               118.881               0.951378          1        40.4308/s [BEST: throughput=  0.03 GB/s doc_throughput=    40 docs/s instructions=    75075278 cycles=    78888180 branch_miss=   15846 cache_miss=       9 cache_ref=     47610 items=         1 avg_time=  24733625 ns]
top_tweet<simdjson_ondemand>/manual_time                19248121 ns     19318422 ns           36           7.641k           32.8175M               3        33.306k    61.3976M              97.2227           51.9663       3.19061G          62.4558M                    98.8984                     1.01724            51.9663    7.72981k   631.515k       31.2893M/s    40.4167     33.63k   61.4096M         97.2418    51.9531/s 3.19042G/s     62.4558M               98.8984                1.01704          1        51.9531/s [BEST: throughput=  0.03 GB/s doc_throughput=    51 docs/s instructions=    62455809 cycles=    61397607 branch_miss=    7641 cache_miss=       3 cache_ref=     33306 items=         1 avg_time=  19248121 ns]
top_tweet<simdjson_ondemand_forward_only>/manual_time   19353707 ns     19424753 ns           36           7.772k           32.6415M               8        33.889k    61.7308M              97.7503           51.6876       3.19071G          63.2369M                    100.135                      1.0244            51.6876    7.88897k   631.515k       31.1186M/s    8.86111   33.8579k   61.7477M         97.7771    51.6697/s 3.19048G/s     63.2369M               100.135                1.02412          1        51.6697/s [BEST: throughput=  0.03 GB/s doc_throughput=    51 docs/s instructions=    63236948 cycles=    61730770 branch_miss=    7772 cache_miss=       8 cache_ref=     33889 items=         1 avg_time=  19353707 ns]
top_tweet<yyjson>/manual_time                            2665877 ns      2754004 ns          268           12.62k            271.24M             268        28.824k    7.41949M              11.7487           429.507       3.18673G          10.1204M                    16.0256                     1.36403            429.507    11.4519k   631.515k       225.914M/s    469.623    24.298k   7.55174M         11.9581    375.111/s 2.83274G/s      10.121M               16.0266                1.34023          1        375.111/s [BEST: throughput=  0.27 GB/s doc_throughput=   429 docs/s instructions=    10120387 cycles=     7419493 branch_miss=   12620 cache_miss=     268 cache_ref=     28824 items=         1 avg_time=   2665876 ns]
top_tweet<yyjson_insitu>/manual_time                     2394465 ns      2465478 ns          293          10.862k           282.701M          1.743k        14.822k     7.1271M              11.2857           447.655       3.19048G          10.1202M                    16.0253                     1.41996            447.655    11.2591k   631.515k       251.522M/s    88.8532   10.2958k   7.24165M         11.4671     417.63/s 3.02433G/s     10.1205M               16.0257                1.39753          1         417.63/s [BEST: throughput=  0.28 GB/s doc_throughput=   447 docs/s instructions=    10120201 cycles=     7127096 branch_miss=   10862 cache_miss=    1743 cache_ref=     14822 items=         1 avg_time=   2394465 ns]
top_tweet<sajson>/manual_time                            3668820 ns      3740516 ns          191          42.123k           172.597M               2        14.063k    11.6817M              18.4978           273.306       3.19267G          26.3459M                    41.7185                     2.25532            273.306    42.2399k   631.515k       164.156M/s    41.1675   14.1888k      11.7M         18.5268    272.567/s 3.18903G/s     26.3459M               41.7185                2.25179          1        272.567/s [BEST: throughput=  0.17 GB/s doc_throughput=   273 docs/s instructions=    26345867 cycles=    11681665 branch_miss=   42123 cache_miss=       2 cache_ref=     14063 items=         1 avg_time=   3668820 ns]
top_tweet<rapidjson>/manual_time                        14228026 ns     14301243 ns           49          65.781k            45.064M          9.564k         23.22k    44.7144M               70.805           71.3585       3.19076G          103.591M                    164.036                     2.31673            71.3585    65.8594k   631.515k       42.3291M/s   1.43704k    13.752k   44.8424M         71.0077    70.2838/s 3.15169G/s     103.592M               164.038                2.31014          1        70.2838/s [BEST: throughput=  0.05 GB/s doc_throughput=    71 docs/s instructions=   103591462 cycles=    44714449 branch_miss=   65781 cache_miss=    9564 cache_ref=     23220 items=         1 avg_time=  14228026 ns]
top_tweet<rapidjson_insitu>/manual_time                 10797867 ns     10870131 ns           65          52.794k            58.567M          7.025k        15.451k    34.4083M              54.4853           92.7405       3.19104G          75.3141M                    119.259                     2.18883            92.7405    52.8256k   631.515k       55.7758M/s   6.28058k   15.5849k   34.4484M         54.5488    92.6109/s  3.1903G/s     75.3141M               119.259                2.18629          1        92.6109/s [BEST: throughput=  0.06 GB/s doc_throughput=    92 docs/s instructions=    75314118 cycles=    34408315 branch_miss=   52794 cache_miss=    7025 cache_ref=     15451 items=         1 avg_time=  10797866 ns]
top_tweet<nlohmann_json>/manual_time                    73408266 ns     73500572 ns           10         481.986k           8.61119M             204        167.21k    234.004M              370.544           13.6358       3.19083G          449.725M                    712.136                     1.92186            13.6358    485.349k   631.515k       8.20425M/s      349.3   168.264k   234.222M         370.888    13.6224/s 3.19067G/s     449.719M               712.127                1.92006          1        13.6224/s [BEST: throughput=  0.01 GB/s doc_throughput=    13 docs/s instructions=   449724513 cycles=   234004286 branch_miss=  481986 cache_miss=     204 cache_ref=    167210 items=         1 avg_time=  73408265 ns]
