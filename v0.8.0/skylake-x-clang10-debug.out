run_benchmark: v0.8.0 /home/jkeiser/simdjson_benchmark_results/v0.8.0/skylake-x-clang10-debug.json -DCMAKE_BUILD_TYPE=Debug
git reset --hard v0.8.0
HEAD is now at c96ff018 Version 0.8.
cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The CXX compiler identification is Clang 10.0.1
-- The C compiler identification is Clang 10.0.1
-- Check for working CXX compiler: /usr/bin/clang++-10
-- Check for working CXX compiler: /usr/bin/clang++-10 -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Check for working C compiler: /usr/bin/clang-10
-- Check for working C compiler: /usr/bin/clang-10 -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed
-- Check if compiler accepts -pthread
-- Check if compiler accepts -pthread - yes
-- Found Threads: TRUE  
-- Looking for fork
-- Looking for fork - found
-- Looking for wait
-- Looking for wait - found
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- Found Git: /usr/bin/git (found version "2.27.0") 
-- git Version: v0.2.1-c96ff018
-- Version: 0.2.1
-- Performing Test HAVE_CXX_FLAG_STD_CXX11
-- Performing Test HAVE_CXX_FLAG_STD_CXX11 - Success
-- Performing Test HAVE_CXX_FLAG_WALL
-- Performing Test HAVE_CXX_FLAG_WALL - Success
-- Performing Test HAVE_CXX_FLAG_WEXTRA
-- Performing Test HAVE_CXX_FLAG_WEXTRA - Success
-- Performing Test HAVE_CXX_FLAG_WSHADOW
-- Performing Test HAVE_CXX_FLAG_WSHADOW - Success
-- Performing Test HAVE_CXX_FLAG_WERROR
-- Performing Test HAVE_CXX_FLAG_WERROR - Success
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32 - Success
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED - Success
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WD654
-- Performing Test HAVE_CXX_FLAG_WD654 - Failed
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY - Success
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES -- failed to compile
-- Performing Test HAVE_CXX_FLAG_COVERAGE
-- Performing Test HAVE_CXX_FLAG_COVERAGE - Success
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Performing Test USE_BOOST_JSON
-- Performing Test USE_BOOST_JSON - Failed
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Found Python3: /usr/bin/python3.8 (found version "3.8.6") found components: Interpreter 
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 10
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
Scanning dependencies of target benchmark
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_api_internal.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_name.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_name.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_register.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_register.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_runner.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_runner.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/colorprint.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/colorprint.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/commandlineflags.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/commandlineflags.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/complexity.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/complexity.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/console_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/console_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/counter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/counter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/csv_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/csv_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/json_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/json_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/sleep.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sleep.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/statistics.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/statistics.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/string_util.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/string_util.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/sysinfo.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sysinfo.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -g   -std=c++17 -o CMakeFiles/benchmark.dir/timers.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/timers.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -P CMakeFiles/benchmark.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/benchmark.dir/link.txt --verbose=1
/usr/bin/ar qc libbenchmarkd.a  CMakeFiles/benchmark.dir/benchmark.cc.o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o CMakeFiles/benchmark.dir/benchmark_name.cc.o CMakeFiles/benchmark.dir/benchmark_register.cc.o CMakeFiles/benchmark.dir/benchmark_runner.cc.o CMakeFiles/benchmark.dir/colorprint.cc.o CMakeFiles/benchmark.dir/commandlineflags.cc.o CMakeFiles/benchmark.dir/complexity.cc.o CMakeFiles/benchmark.dir/console_reporter.cc.o CMakeFiles/benchmark.dir/counter.cc.o CMakeFiles/benchmark.dir/csv_reporter.cc.o CMakeFiles/benchmark.dir/json_reporter.cc.o CMakeFiles/benchmark.dir/reporter.cc.o CMakeFiles/benchmark.dir/sleep.cc.o CMakeFiles/benchmark.dir/statistics.cc.o CMakeFiles/benchmark.dir/string_util.cc.o CMakeFiles/benchmark.dir/sysinfo.cc.o CMakeFiles/benchmark.dir/timers.cc.o
/usr/bin/ranlib libbenchmarkd.a
[ 80%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
Scanning dependencies of target generated-data
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated && /usr/bin/ruby genfeaturejson.rb /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-miss.json ...
[ 80%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/clang++-10  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/include  -g -fPIC   -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -pthread -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/clang++-10 -fPIC -g  -shared -Wl,-soname,libsimdjson.so.7 -o ../libsimdjson.so.7.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.7.0.0 ../libsimdjson.so.7 ../libsimdjson.so
[ 80%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
Scanning dependencies of target yyjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/clang-10  -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src  -g   -o CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o   -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src/yyjson.c
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -P CMakeFiles/yyjson.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -E cmake_link_script CMakeFiles/yyjson.dir/link.txt --verbose=1
/usr/bin/ar qc libyyjson.a  CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o
/usr/bin/ranlib libyyjson.a
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/clang++-10  -DRAPIDJSON_HAS_STDSTRING -DSAJSON_UNSORTED_OBJECT_KEYS -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_COMPETITION_NLOHMANN_JSON -DSIMDJSON_COMPETITION_RAPIDJSON -DSIMDJSON_COMPETITION_SAJSON -DSIMDJSON_COMPETITION_YYJSON -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/rapidjson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/sajson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/json  -g   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/clang++-10  -g   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.7.0.0 ../_deps/google_benchmarks/src/libbenchmarkd.a ../dependencies/libyyjson.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.8.0/skylake-x-clang10-debug.json --benchmark_out_format=json
2021-01-25 00:54:44
Running benchmark/bench_ondemand
Run on (4 X 3200 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 1024 KiB (x4)
  L3 Unified 8448 KiB (x1)
Load Average: 1.00, 0.81, 0.44
***WARNING*** CPU scaling is enabled, the benchmark real time measurements may be noisy and will incur extra overhead.
***WARNING*** Library was built as DEBUG. Timings may be affected.
simdjson::dom implementation:      haswell
simdjson::ondemand implementation: fallback

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
partial_tweets<simdjson_dom>/manual_time                25375003 ns     25447164 ns           28          18.164k              24.9M              38        47.794k    80.9194M              128.135            39.429       3.19057G          78.2256M                     123.87                    0.966711            3.9429k    18.1625k   631.515k       23.7344M/s    117.143   47.7482k   80.9456M         128.177    39.4089/s 3.18998G/s     78.2256M                123.87               0.966397        100       3.94089k/s [BEST: throughput=  0.02 GB/s doc_throughput=    39 docs/s instructions=    78225617 cycles=    80919382 branch_miss=   18164 cache_miss=      38 cache_ref=     47794 items=       100 avg_time=  25375002 ns]
partial_tweets<simdjson_ondemand>/manual_time           19512015 ns     19580875 ns           36           7.927k           32.3809M               7        35.815k    62.2281M              98.5377           51.2749       3.19074G          63.9481M                    101.261                     1.02764           5.12749k    8.01022k   631.515k       30.8661M/s       29.5   35.9541k   62.2456M         98.5655    51.2505/s 3.19012G/s     63.9481M               101.261                1.02735        100       5.12505k/s [BEST: throughput=  0.03 GB/s doc_throughput=    51 docs/s instructions=    63948115 cycles=    62228061 branch_miss=    7927 cache_miss=       7 cache_ref=     35815 items=       100 avg_time=  19512014 ns]
partial_tweets<yyjson>/manual_time                       2744194 ns      2824876 ns          255          12.549k           264.008M             323        29.699k    7.62143M              12.0685           418.055       3.18618G          10.5728M                     16.742                     1.38725           41.8055k    11.4253k   631.515k       219.467M/s    800.675   26.9969k   7.77306M         12.3086    364.406/s 2.83255G/s     10.5733M               16.7427                1.36025        100       36.4406k/s [BEST: throughput=  0.26 GB/s doc_throughput=   418 docs/s instructions=    10572819 cycles=     7621435 branch_miss=   12549 cache_miss=     323 cache_ref=     29699 items=       100 avg_time=   2744193 ns]
partial_tweets<yyjson_insitu>/manual_time                2460311 ns      2528462 ns          285           10.97k           273.896M          2.247k         15.97k    7.33824M              11.6201           433.713       3.18269G          10.5725M                    16.7414                     1.44073           43.3713k    11.3193k   631.515k        244.79M/s    163.674   13.6357k    7.4407M         11.7823    406.453/s 3.02429G/s     10.5727M               16.7418                1.42093        100       40.6453k/s [BEST: throughput=  0.27 GB/s doc_throughput=   433 docs/s instructions=    10572452 cycles=     7338237 branch_miss=   10970 cache_miss=    2247 cache_ref=     15970 items=       100 avg_time=   2460311 ns]
partial_tweets<sajson>/manual_time                       3762973 ns      3829043 ns          186          42.297k           168.236M               2        14.328k    11.9844M              18.9772           266.401       3.19266G          26.9812M                    42.7245                     2.25136           26.6401k    42.3889k   631.515k       160.049M/s    17.1398    14.332k   11.9998M         19.0017    265.747/s 3.18892G/s     26.9812M               42.7245                2.24846        100       26.5747k/s [BEST: throughput=  0.17 GB/s doc_throughput=   266 docs/s instructions=    26981170 cycles=    11984402 branch_miss=   42297 cache_miss=       2 cache_ref=     14328 items=       100 avg_time=   3762973 ns]
partial_tweets<rapidjson>/manual_time                   14494679 ns     14566400 ns           48          67.264k           44.3302M              90        23.547k    45.4303M              71.9385           70.1966       3.18905G          105.146M                    166.497                     2.31444           7.01966k    67.3446k   631.515k       41.5504M/s    359.875   17.3389k   45.5814M         72.1779    68.9908/s  3.1447G/s     105.146M               166.499                2.30678        100       6.89908k/s [BEST: throughput=  0.04 GB/s doc_throughput=    70 docs/s instructions=   105145609 cycles=    45430257 branch_miss=   67264 cache_miss=      90 cache_ref=     23547 items=       100 avg_time=  14494678 ns]
partial_tweets<rapidjson_insitu>/manual_time            11235650 ns     11301043 ns           63          54.003k           56.9744M              45        15.881k    35.3603M              55.9928           90.2186       3.19016G          76.8333M                    121.665                     2.17287           9.02186k    54.1027k   631.515k       53.6026M/s    212.048   11.4795k   35.4604M         56.1513    89.0024/s 3.15606G/s     76.8336M               121.666                2.16674        100       8.90024k/s [BEST: throughput=  0.06 GB/s doc_throughput=    90 docs/s instructions=    76833310 cycles=    35360293 branch_miss=   54003 cache_miss=      45 cache_ref=     15881 items=       100 avg_time=  11235649 ns]
partial_tweets<nlohmann_json>/manual_time               69601971 ns     69696179 ns           10           426.8k           9.12173M              59       101.442k    220.902M              349.797           14.4442       3.19075G          425.796M                    674.246                     1.92753           1.44442k     433.87k   631.515k       8.65291M/s        541   139.062k   222.058M         351.627    14.3674/s 3.19039G/s     426.135M               674.783                1.91903        100       1.43674k/s [BEST: throughput=  0.01 GB/s doc_throughput=    14 docs/s instructions=   425796360 cycles=   220902116 branch_miss=  426800 cache_miss=      59 cache_ref=    101442 items=       100 avg_time=  69601971 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                3374101295 ns   3380222578 ns            1         3.97832M           13.6329M        6.91489M       7.00251M    10.7663G              234.056          0.296375       3.19086G          14.5492G                    316.294                     1.35136           296.375k    3.97832M   45.9988M       13.0013M/s   6.91489M   7.00251M   10.7663G         234.056   0.296375/s 3.19086G/s     14.5492G               316.294                1.35136      1000k       296.375k/s [BEST: throughput=  0.01 GB/s doc_throughput=     0 docs/s instructions= 14549150084 cycles= 10766273308 branch_miss= 3978321 cache_miss= 6914890 cache_ref=   7002509 items=   1000000 avg_time=3374101295 ns]
large_random<simdjson_ondemand>/manual_time           1927197956 ns   1933346487 ns            1         908.485k           23.8682M        3.57556M       3.63924M     6.1493G              133.684          0.518888        3.1908G          8.52071G                    185.238                     1.38564           518.888k    908.485k   45.9988M       22.7625M/s   3.57556M   3.63924M    6.1493G         133.684   0.518888/s  3.1908G/s     8.52071G               185.238                1.38564      1000k       518.888k/s [BEST: throughput=  0.02 GB/s doc_throughput=     0 docs/s instructions=  8520706053 cycles=  6149298447 branch_miss=  908485 cache_miss= 3575562 cache_ref=   3639242 items=   1000000 avg_time=1927197956 ns]
large_random<simdjson_ondemand_unordered>/manual_time 1933287442 ns   1939444661 ns            1         908.648k            23.793M        3.57519M       3.64504M    6.16866G              134.105          0.517254       3.19076G          8.58371G                    186.607                      1.3915           517.254k    908.648k   45.9988M       22.6908M/s   3.57519M   3.64504M   6.16866G         134.105   0.517254/s 3.19076G/s     8.58371G               186.607                 1.3915      1000k       517.254k/s [BEST: throughput=  0.02 GB/s doc_throughput=     0 docs/s instructions=  8583706055 cycles=  6168662411 branch_miss=  908648 cache_miss= 3575194 cache_ref=   3645039 items=   1000000 avg_time=1933287442 ns]
large_random<yyjson>/manual_time                       426624462 ns    432839754 ns            2         660.953k            107.83M        4.21891M       5.38423M    1.21904G              26.5015            2.3442       2.85767G          2.93382G                    63.7803                     2.40667            2.3442M    660.355k   45.9988M       102.825M/s   4.21752M   5.37177M   1.21907G         26.5022    2.34398/s 2.85748G/s     2.93382G               63.7803                 2.4066      1000k       2.34398M/s [BEST: throughput=  0.11 GB/s doc_throughput=     2 docs/s instructions=  2933817183 cycles=  1219037285 branch_miss=  660953 cache_miss= 4218906 cache_ref=   5384226 items=   1000000 avg_time= 426624462 ns]
large_random<yyjson_insitu>/manual_time                401383958 ns    407619772 ns            2         658.938k           114.601M        3.49771M       4.69037M    1.17937G              25.6392           2.49139       2.93828G           2.9277G                    63.6473                     2.48242           2.49139M    659.538k   45.9988M       109.291M/s   3.49876M   4.69069M   1.17942G         25.6403    2.49138/s 2.93839G/s      2.9277G               63.6473                2.48231      1000k       2.49138M/s [BEST: throughput=  0.11 GB/s doc_throughput=     2 docs/s instructions=  2927696060 cycles=  1179373348 branch_miss=  658938 cache_miss= 3497708 cache_ref=   4690370 items=   1000000 avg_time= 401383958 ns]
large_random<sajson>/manual_time                       916422771 ns    922597610 ns            1         1.65933M           50.1938M        5.55863M       5.58768M    2.92298G              63.5448            1.0912       3.18956G          7.01595G                    152.525                     2.40027            1091.2k    1.65933M   45.9988M       47.8686M/s   5.55863M   5.58768M   2.92298G         63.5448     1.0912/s 3.18956G/s     7.01595G               152.525                2.40027      1000k        1091.2k/s [BEST: throughput=  0.05 GB/s doc_throughput=     1 docs/s instructions=  7015953695 cycles=  2922983952 branch_miss= 1659334 cache_miss= 5558628 cache_ref=   5587678 items=   1000000 avg_time= 916422771 ns]
large_random<rapidjson>/manual_time                   2061551856 ns   2067749155 ns            1         6.48324M           22.3127M        4.35337M       5.25251M    6.50796G              141.481          0.485071       3.15682G          14.2601G                    310.011                     2.19118           485.071k    6.48324M   45.9988M        21.279M/s   4.35337M   5.25251M   6.50796G         141.481   0.485071/s 3.15682G/s     14.2601G               310.011                2.19118      1000k       485.071k/s [BEST: throughput=  0.02 GB/s doc_throughput=     0 docs/s instructions= 14260111012 cycles=  6507956318 branch_miss= 6483241 cache_miss= 4353373 cache_ref=   5252508 items=   1000000 avg_time=2061551856 ns]
large_random<rapidjson_lossless>/manual_time          2486407880 ns   2492534576 ns            1         7.34498M           18.5001M        4.35088M       5.26163M    7.86386G              170.958          0.402187       3.16274G          17.2359G                    374.703                     2.19178           402.187k    7.34498M   45.9988M       17.6431M/s   4.35088M   5.26163M   7.86386G         170.958   0.402187/s 3.16274G/s     17.2359G               374.703                2.19178      1000k       402.187k/s [BEST: throughput=  0.02 GB/s doc_throughput=     0 docs/s instructions= 17235864066 cycles=  7863861748 branch_miss= 7344978 cache_miss= 4350880 cache_ref=   5261625 items=   1000000 avg_time=2486407880 ns]
large_random<rapidjson_insitu>/manual_time            1991048062 ns   1997209281 ns            1         6.39032M           23.1028M         5.0393M       5.97026M    6.28284G              136.587          0.502248       3.15554G          13.5301G                    294.141                      2.1535           502.248k    6.39032M   45.9988M       22.0325M/s    5.0393M   5.97026M   6.28284G         136.587   0.502248/s 3.15554G/s     13.5301G               294.141                 2.1535      1000k       502.248k/s [BEST: throughput=  0.02 GB/s doc_throughput=     0 docs/s instructions= 13530110582 cycles=  6282837919 branch_miss= 6390325 cache_miss= 5039295 cache_ref=   5970257 items=   1000000 avg_time=1991048062 ns]
large_random<nlohmann_json>/manual_time               10782233420 ns   10788043247 ns            1         38.0586M           4.26616M        30.5227M       31.1417M    34.3871G              747.566         0.0927452       3.18924G          63.4292G                   1.37893k                     1.84456           92.7452k    38.0586M   45.9988M       4.06853M/s   30.5227M   31.1417M   34.3871G         747.566  0.0927452/s 3.18924G/s     63.4292G              1.37893k                1.84456      1000k       92.7452k/s [BEST: throughput=  0.00 GB/s doc_throughput=     0 docs/s instructions= 63429175385 cycles= 34387135623 branch_miss=38058634 cache_miss=30522680 cache_ref=  31141693 items=   1000000 avg_time=10782233420 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                      4710274690 ns   4729496839 ns            1         3.46542M           29.1501M        10.3422M       10.5149M    15.0291G              109.458          0.212302       3.19071G          17.1288G                     124.75                     1.13971           111.307k    3.46542M   137.305M       27.7997M/s   10.3422M   10.5149M   15.0291G         109.458   0.212302/s 3.19071G/s     17.1288G                124.75                1.13971   524.288k       111.307k/s [BEST: throughput=  0.03 GB/s doc_throughput=     0 docs/s instructions= 17128811448 cycles= 15029110959 branch_miss= 3465423 cache_miss=10342187 cache_ref=  10514905 items=    524288 avg_time=4710274690 ns]
kostya<simdjson_ondemand>/manual_time                 3339558065 ns   3358771987 ns            1         1.62276M           41.1147M        6.47453M       6.60564M    10.6551G              77.6021          0.299441       3.19059G          12.3455G                    89.9129                     1.15864           156.993k    1.62276M   137.305M       39.2101M/s   6.47453M   6.60564M   10.6551G         77.6021   0.299441/s 3.19059G/s     12.3455G               89.9129                1.15864   524.288k       156.993k/s [BEST: throughput=  0.04 GB/s doc_throughput=     0 docs/s instructions= 12345496232 cycles= 10655149833 branch_miss= 1622761 cache_miss= 6474531 cache_ref=   6605639 items=    524288 avg_time=3339558065 ns]
kostya<yyjson>/manual_time                             558753449 ns    578109764 ns            1          971.03k           245.734M        8.52185M       9.95068M    1.54565G               11.257            1.7897       2.76624G          3.23214G                    23.5398                     2.09112           938.317k     971.03k   137.305M       234.351M/s   8.52185M   9.95068M   1.54565G          11.257     1.7897/s 2.76624G/s     3.23214G               23.5398                2.09112   524.288k       938.317k/s [BEST: throughput=  0.25 GB/s doc_throughput=     1 docs/s instructions=  3232136434 cycles=  1545648893 branch_miss=  971030 cache_miss= 8521853 cache_ref=   9950678 items=    524288 avg_time= 558753449 ns]
kostya<yyjson_insitu>/manual_time                      479888016 ns    499187770 ns            2           971.8k           286.134M        6.38951M       7.78242M    1.41587G              10.3119           2.08393       2.95057G          3.21387G                    23.4068                     2.26989           1092.58k    971.653k   137.305M       272.864M/s   6.40949M    7.7688M   1.41603G          10.313    2.08382/s 2.95075G/s     3.21387G               23.4068                2.26963   524.288k       1092.52k/s [BEST: throughput=  0.29 GB/s doc_throughput=     2 docs/s instructions=  3213866702 cycles=  1415868637 branch_miss=  971800 cache_miss= 6389512 cache_ref=   7782419 items=    524288 avg_time= 479888016 ns]
kostya<sajson>/manual_time                            1296403755 ns   1315635701 ns            1         11.5248M           105.912M        8.51739M       8.55716M    4.13548G              30.1189          0.771365       3.18996G          8.77554G                    63.9127                     2.12201           404.417k    11.5248M   137.305M       101.006M/s   8.51739M   8.55716M   4.13548G         30.1189   0.771365/s 3.18996G/s     8.77554G               63.9127                2.12201   524.288k       404.417k/s [BEST: throughput=  0.11 GB/s doc_throughput=     0 docs/s instructions=  8775535697 cycles=  4135479710 branch_miss=11524795 cache_miss= 8517392 cache_ref=   8557158 items=    524288 avg_time=1296403755 ns]
kostya<rapidjson>/manual_time                         2635961260 ns   2655174694 ns            1         16.3152M           52.0892M        5.20227M       6.53405M    8.31025G               60.524          0.379368       3.15265G          16.8198G                      122.5                     2.02398           198.898k    16.3152M   137.305M       49.6761M/s   5.20227M   6.53405M   8.31025G          60.524   0.379368/s 3.15265G/s     16.8198G                 122.5                2.02398   524.288k       198.898k/s [BEST: throughput=  0.05 GB/s doc_throughput=     0 docs/s instructions= 16819800723 cycles=  8310252584 branch_miss=16315232 cache_miss= 5202266 cache_ref=   6534054 items=    524288 avg_time=2635961260 ns]
kostya<rapidjson_lossless>/manual_time                2889062984 ns   2908306466 ns            1         16.6556M           47.5258M        5.22616M       6.53188M    9.11915G              66.4153          0.346133       3.15644G          18.5446G                    135.062                     2.03359           181.473k    16.6556M   137.305M       45.3241M/s   5.22616M   6.53188M   9.11915G         66.4153   0.346133/s 3.15644G/s     18.5446G               135.062                2.03359   524.288k       181.473k/s [BEST: throughput=  0.05 GB/s doc_throughput=     0 docs/s instructions= 18544640056 cycles=  9119153054 branch_miss=16655568 cache_miss= 5226165 cache_ref=   6531884 items=    524288 avg_time=2889062984 ns]
kostya<rapidjson_insitu>/manual_time                  2464142859 ns   2483437329 ns            1         16.7354M           55.7212M         7.2942M       8.61985M    7.76253G              56.5349          0.405821       3.15019G           15.372G                    111.955                     1.98028           212.767k    16.7354M   137.305M       53.1399M/s    7.2942M   8.61985M   7.76253G         56.5349   0.405821/s 3.15019G/s      15.372G               111.955                1.98028   524.288k       212.767k/s [BEST: throughput=  0.06 GB/s doc_throughput=     0 docs/s instructions= 15371961810 cycles=  7762527427 branch_miss=16735385 cache_miss= 7294198 cache_ref=   8619853 items=    524288 avg_time=2464142859 ns]
kostya<nlohmann_json>/manual_time                     16783877259 ns   16802512304 ns            1         58.0021M           8.18077M        45.1152M       45.7639M    53.5532G              390.031          0.059581       3.19075G          100.394G                    731.177                     1.87466           31.2376k    58.0021M   137.305M       7.80179M/s   45.1152M   45.7639M   53.5532G         390.031   0.059581/s 3.19075G/s     100.394G               731.177                1.87466   524.288k       31.2376k/s [BEST: throughput=  0.01 GB/s doc_throughput=     0 docs/s instructions=100394252388 cycles= 53553223919 branch_miss=58002051 cache_miss=45115182 cache_ref=  45763871 items=    524288 avg_time=16783877259 ns]
distinct_user_id<simdjson_dom>/manual_time              25100494 ns     25207717 ns           28          16.679k           25.1689M              20        49.236k    80.0558M              126.768           39.8548       3.19061G          76.3621M                    120.919                    0.953861            4.5833k    16.7201k   631.515k       23.9939M/s    52.4286   49.2551k   80.0796M         126.806    39.8399/s 3.19036G/s     76.3621M               120.919               0.953577        115       4.58158k/s [BEST: throughput=  0.03 GB/s doc_throughput=    39 docs/s instructions=    76362116 cycles=    80055798 branch_miss=   16679 cache_miss=      20 cache_ref=     49236 items=       115 avg_time=  25100494 ns]
distinct_user_id<simdjson_ondemand>/manual_time         19287803 ns     19385183 ns           36           7.684k           32.7616M               0        33.094k    61.4991M              97.3835           51.8778       3.19044G           62.659M                    99.2202                     1.01886           5.96595k    7.71633k   631.515k       31.2249M/s       9.25   33.2667k   61.5269M         97.4274    51.8462/s 3.18994G/s      62.659M               99.2202                 1.0184        115       5.96232k/s [BEST: throughput=  0.03 GB/s doc_throughput=    51 docs/s instructions=    62659045 cycles=    61499143 branch_miss=    7684 cache_miss=       0 cache_ref=     33094 items=       115 avg_time=  19287803 ns]
distinct_user_id<yyjson>/manual_time                     2365593 ns      2479168 ns          302           10.44k           273.661M           7.13k        28.326k    7.36807M              11.6673           433.341       3.19289G          10.3049M                    16.3177                     1.39858           49.8342k    10.7869k   631.515k       254.591M/s   6.50798k   28.3434k   7.42932M         11.7643    422.727/s 3.14057G/s     10.3049M               16.3177                1.38705        115       48.6136k/s [BEST: throughput=  0.27 GB/s doc_throughput=   433 docs/s instructions=    10304859 cycles=     7368071 branch_miss=   10440 cache_miss=    7130 cache_ref=     28326 items=       115 avg_time=   2365592 ns]
distinct_user_id<yyjson_insitu>/manual_time              2423993 ns      2525459 ns          289          10.932k           279.211M              23        16.209k    7.22138M               11.435           442.128       3.19278G          10.3044M                    16.3169                     1.42693           50.8448k    11.2681k   631.515k       248.458M/s    166.623   13.7065k   7.32375M         11.5971    412.542/s 3.02136G/s     10.3047M               16.3174                1.40702        115       47.4424k/s [BEST: throughput=  0.28 GB/s doc_throughput=   442 docs/s instructions=    10304395 cycles=     7221384 branch_miss=   10932 cache_miss=      23 cache_ref=     16209 items=       115 avg_time=   2423993 ns]
distinct_user_id<sajson>/manual_time                     3700555 ns      3798505 ns          189          42.238k           171.117M               3        14.154k    11.7825M              18.6575           270.963       3.19261G          26.5515M                    42.0442                     2.25347           31.1607k    42.3607k   631.515k       162.748M/s    14.0265   14.3188k   11.8007M         18.6863     270.23/s 3.18889G/s     26.5515M               42.0442                   2.25        115       31.0764k/s [BEST: throughput=  0.17 GB/s doc_throughput=   270 docs/s instructions=    26551518 cycles=    11782482 branch_miss=   42238 cache_miss=       3 cache_ref=     14154 items=       115 avg_time=   3700554 ns]
distinct_user_id<rapidjson>/manual_time                 14296719 ns     14401134 ns           49          65.501k           44.8625M             123        23.993k     44.913M              71.1194           71.0395        3.1906G          104.008M                    164.695                     2.31576           8.16955k    65.9992k   631.515k       42.1257M/s    1.7028k    18.609k   45.0469M         71.3314    69.9461/s 3.15085G/s     104.008M               164.697                2.30889        115        8.0438k/s [BEST: throughput=  0.04 GB/s doc_throughput=    71 docs/s instructions=   104007534 cycles=    44912986 branch_miss=   65501 cache_miss=     123 cache_ref=     23993 items=       115 avg_time=  14296719 ns]
distinct_user_id<rapidjson_insitu>/manual_time          10939727 ns     11039236 ns           64          53.177k           57.8444M          7.187k        15.819k     34.834M              55.1594           91.5962       3.19066G          75.7257M                    119.911                      2.1739           10.5336k    53.2252k   631.515k       55.0525M/s   6.50506k   15.9708k   34.8986M         55.2618      91.41/s 3.19008G/s     75.7256M               119.911                2.16987        115       10.5121k/s [BEST: throughput=  0.06 GB/s doc_throughput=    91 docs/s instructions=    75725704 cycles=    34834003 branch_miss=   53177 cache_miss=    7187 cache_ref=     15819 items=       115 avg_time=  10939726 ns]
distinct_user_id<nlohmann_json>/manual_time             66329021 ns     66447718 ns           11         377.865k           9.56376M          3.007k       101.882k    210.676M              333.604           15.1442       3.19051G          407.788M                     645.73                     1.93561           1.74158k     385.55k   631.515k       9.07988M/s    390.545   110.984k   211.605M         335.076    15.0764/s 3.19024G/s     406.474M               643.649                1.92091        115       1.73378k/s [BEST: throughput=  0.01 GB/s doc_throughput=    15 docs/s instructions=   407787965 cycles=   210676179 branch_miss=  377865 cache_miss=    3007 cache_ref=    101882 items=       115 avg_time=  66329021 ns]
find_tweet<simdjson_dom>/manual_time                    24627948 ns     24704680 ns           28          15.404k           25.6517M              18        45.877k    78.5489M              124.382           40.6194       3.19061G          74.2429M                    117.563                    0.945181            40.6194    15.4053k   631.515k       24.4543M/s    33.8929    46.069k   78.5707M         124.416    40.6043/s 3.19031G/s     74.2429M               117.563               0.944919          1        40.6043/s [BEST: throughput=  0.03 GB/s doc_throughput=    40 docs/s instructions=    74242948 cycles=    78548890 branch_miss=   15404 cache_miss=      18 cache_ref=     45877 items=         1 avg_time=  24627948 ns]
find_tweet<simdjson_ondemand>/manual_time               18142006 ns     18220480 ns           39           3.297k           34.8205M               7        20.256k    57.8743M              91.6436           55.1381       3.19108G          54.9617M                    87.0316                    0.949674            55.1381    3.29733k   631.515k        33.197M/s    12.8462   20.2072k   57.8816M         91.6551    55.1207/s 3.19047G/s     54.9617M               87.0316               0.949555          1        55.1207/s [BEST: throughput=  0.03 GB/s doc_throughput=    55 docs/s instructions=    54961730 cycles=    57874319 branch_miss=    3297 cache_miss=       7 cache_ref=     20256 items=         1 avg_time=  18142006 ns]
find_tweet<yyjson>/manual_time                           2659113 ns      2745516 ns          269          12.187k           273.346M             245        28.414k    7.36038M              11.6551           432.841       3.18587G          10.0178M                    15.8631                     1.36104            432.841     11.192k   631.515k       226.489M/s    513.171   25.5758k    7.5074M         11.8879    376.065/s 2.82327G/s     10.0182M               15.8638                1.33445          1        376.065/s [BEST: throughput=  0.27 GB/s doc_throughput=   432 docs/s instructions=    10017772 cycles=     7360376 branch_miss=   12187 cache_miss=     245 cache_ref=     28414 items=         1 avg_time=   2659113 ns]
find_tweet<yyjson_insitu>/manual_time                    2376901 ns      2448278 ns          295          10.638k            285.06M             144        15.137k     7.0733M              11.2005           451.391       3.19283G          10.0176M                    15.8628                     1.41625            451.391    11.0121k   631.515k        253.38M/s    21.7051    11.745k   7.17629M         11.3636    420.716/s 3.01918G/s     10.0178M               15.8632                1.39596          1        420.716/s [BEST: throughput=  0.29 GB/s doc_throughput=   451 docs/s instructions=    10017579 cycles=     7073299 branch_miss=   10638 cache_miss=     144 cache_ref=     15137 items=         1 avg_time=   2376901 ns]
find_tweet<sajson>/manual_time                           3636417 ns      3706520 ns          193          42.187k           174.129M               0        13.568k    11.5789M              18.3351           275.732       3.19267G          26.1128M                    41.3495                     2.25521            275.732    42.2264k   631.515k       165.619M/s    15.8446   13.6112k   11.5957M         18.3617    274.996/s 3.18877G/s     26.1128M               41.3495                2.25194          1        274.996/s [BEST: throughput=  0.17 GB/s doc_throughput=   275 docs/s instructions=    26112809 cycles=    11578899 branch_miss=   42187 cache_miss=       0 cache_ref=     13568 items=         1 avg_time=   3636417 ns]
find_tweet<rapidjson>/manual_time                       14079361 ns     14154545 ns           50          64.572k           45.5619M              83        22.359k    44.2225M              70.0261            72.147       3.19052G          102.589M                    162.448                     2.31983             72.147     64.818k   631.515k       42.7761M/s    1.4227k   16.2771k   44.3521M         70.2313     71.026/s 3.15015G/s     102.589M                162.45                2.31307          1         71.026/s [BEST: throughput=  0.05 GB/s doc_throughput=    72 docs/s instructions=   102588655 cycles=    44222503 branch_miss=   64572 cache_miss=      83 cache_ref=     22359 items=         1 avg_time=  14079360 ns]
find_tweet<rapidjson_insitu>/manual_time                10731353 ns     10802088 ns           65          51.959k           58.9278M          4.521k        14.665k    34.1866M              54.1343           93.3119       3.19002G          74.3363M                    117.711                     2.17443            93.3119    52.2711k   631.515k       56.1215M/s   6.13895k   14.6966k   34.2296M         54.2024    93.1849/s 3.18968G/s     74.3362M               117.711                2.17169          1        93.1849/s [BEST: throughput=  0.06 GB/s doc_throughput=    93 docs/s instructions=    74336282 cycles=    34186629 branch_miss=   51959 cache_miss=    4521 cache_ref=     14665 items=         1 avg_time=  10731352 ns]
find_tweet<nlohmann_json>/manual_time                   57549658 ns     57640969 ns           12         286.198k           11.0339M          1.758k        80.647k    182.621M              289.179           17.4721       3.19077G          357.653M                    566.341                     1.95845            17.4721    294.191k   631.515k        10.465M/s    661.083   87.7674k   183.609M         290.743    17.3763/s 3.19044G/s     356.327M               564.241                1.94068          1        17.3763/s [BEST: throughput=  0.01 GB/s doc_throughput=    17 docs/s instructions=   357652855 cycles=   182620628 branch_miss=  286198 cache_miss=    1758 cache_ref=     80647 items=         1 avg_time=  57549658 ns]
top_tweet<simdjson_dom>/manual_time                     24796108 ns     24875910 ns           28          15.999k           25.4793M               6        47.579k    79.0799M              125.223           40.3463       3.19058G          75.0753M                    118.881                     0.94936            40.3463    15.9378k   631.515k       24.2885M/s    83.1429   47.6523k   79.0967M         125.249    40.3289/s 3.18988G/s     75.0753M               118.881               0.949159          1        40.3289/s [BEST: throughput=  0.03 GB/s doc_throughput=    40 docs/s instructions=    75075278 cycles=    79079917 branch_miss=   15999 cache_miss=       6 cache_ref=     47579 items=         1 avg_time=  24796108 ns]
top_tweet<simdjson_ondemand>/manual_time                19251337 ns     19324816 ns           36           7.727k           32.8101M              25        32.915k    61.4191M              97.2567           51.9546         3.191G          62.4558M                    98.8984                     1.01688            51.9546    7.77194k   631.515k        31.284M/s    13.1389   33.1036k   61.4209M         97.2595    51.9444/s 3.19047G/s     62.4558M               98.8984                1.01685          1        51.9444/s [BEST: throughput=  0.03 GB/s doc_throughput=    51 docs/s instructions=    62455809 cycles=    61419062 branch_miss=    7727 cache_miss=      25 cache_ref=     32915 items=         1 avg_time=  19251337 ns]
top_tweet<simdjson_ondemand_forward_only>/manual_time   19350482 ns     19423091 ns           36           7.722k           32.6516M               8        33.641k    61.7129M              97.7219           51.7036       3.19078G          63.2369M                    100.135                      1.0247            51.7036    7.80458k   631.515k       31.1238M/s    17.3889    33.706k   61.7284M         97.7465    51.6783/s 3.19002G/s     63.2369M               100.135                1.02444          1        51.6783/s [BEST: throughput=  0.03 GB/s doc_throughput=    51 docs/s instructions=    63236948 cycles=    61712864 branch_miss=    7722 cache_miss=       8 cache_ref=     33641 items=         1 avg_time=  19350481 ns]
top_tweet<yyjson>/manual_time                            2675938 ns      2765045 ns          268          12.557k           270.875M             465        28.911k    7.42332M              11.7548           428.928       3.18407G          10.1204M                    16.0255                     1.36332            428.928    11.3992k   631.515k       225.065M/s    539.649   26.3676k    7.5615M         11.9736    373.701/s 2.82574G/s      10.121M               16.0266                 1.3385          1        373.701/s [BEST: throughput=  0.27 GB/s doc_throughput=   428 docs/s instructions=    10120372 cycles=     7423320 branch_miss=   12557 cache_miss=     465 cache_ref=     28911 items=         1 avg_time=   2675937 ns]
top_tweet<yyjson_insitu>/manual_time                     2392646 ns      2468642 ns          293          10.923k           282.814M              18         15.92k    7.12947M              11.2895           447.834       3.19282G          10.1202M                    16.0253                     1.41949            447.834    11.1102k   631.515k       251.713M/s    131.048   13.2704k   7.22457M         11.4401    417.947/s 3.01949G/s     10.1205M               16.0257                1.40084          1        417.947/s [BEST: throughput=  0.28 GB/s doc_throughput=   447 docs/s instructions=    10120200 cycles=     7129471 branch_miss=   10923 cache_miss=      18 cache_ref=     15920 items=         1 avg_time=   2392645 ns]
top_tweet<sajson>/manual_time                            3670509 ns      3745012 ns          191          42.119k           172.493M               0        13.727k    11.6889M              18.5093           273.141       3.19272G          26.3459M                    41.7185                     2.25392            273.141    42.2717k   631.515k       164.081M/s     13.534   13.8874k   11.7061M         18.5365    272.442/s 3.18922G/s     26.3459M               41.7185                2.25062          1        272.442/s [BEST: throughput=  0.17 GB/s doc_throughput=   273 docs/s instructions=    26345867 cycles=    11688885 branch_miss=   42119 cache_miss=       0 cache_ref=     13727 items=         1 avg_time=   3670509 ns]
top_tweet<rapidjson>/manual_time                        14244764 ns     14323980 ns           49          65.688k           45.0137M         10.117k        23.122k    44.7567M              70.8719           71.2789       3.19021G          103.591M                    164.036                     2.31454            71.2789    65.7845k   631.515k       42.2794M/s   1.58618k    17.675k   44.8775M         71.0632    70.2012/s 3.15045G/s     103.592M               164.037                2.30833          1        70.2012/s [BEST: throughput=  0.05 GB/s doc_throughput=    71 docs/s instructions=   103591325 cycles=    44756679 branch_miss=   65688 cache_miss=   10117 cache_ref=     23122 items=         1 avg_time=  14244764 ns]
top_tweet<rapidjson_insitu>/manual_time                 10877008 ns     10951903 ns           64          52.973k           58.1232M           7.06k        15.146k    34.6598M              54.8836           92.0377       3.19001G          75.3142M                     119.26                     2.17295            92.0377    53.0742k   631.515k         55.37M/s   6.27983k   15.2932k   34.6981M         54.9442     91.937/s 3.19004G/s     75.3141M               119.259                2.17056          1         91.937/s [BEST: throughput=  0.06 GB/s doc_throughput=    92 docs/s instructions=    75314209 cycles=    34659827 branch_miss=   52973 cache_miss=    7060 cache_ref=     15146 items=         1 avg_time=  10877007 ns]
top_tweet<nlohmann_json>/manual_time                    73399144 ns     73493087 ns           10         479.786k           8.61208M              79       168.174k    233.969M              370.489           13.6372       3.19068G          449.469M                    711.732                     1.92106            13.6372    483.163k   631.515k       8.20527M/s      758.4   167.857k   234.173M         370.812    13.6241/s 3.19041G/s     449.677M               712.061                1.92028          1        13.6241/s [BEST: throughput=  0.01 GB/s doc_throughput=    13 docs/s instructions=   449469246 cycles=   233969185 branch_miss=  479786 cache_miss=      79 cache_ref=    168174 items=         1 avg_time=  73399144 ns]
