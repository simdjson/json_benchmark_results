run_benchmark: v0.8.0 /home/jkeiser/simdjson_benchmark_results/v0.8.0/skylake-clang10.json -DCMAKE_BUILD_TYPE=Release
git reset --hard v0.8.0
HEAD is now at c96ff018 Version 0.8.
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_RULE_MESSAGES:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
-- The CXX compiler identification is Clang 10.0.1
-- The C compiler identification is Clang 10.0.1
-- Check for working CXX compiler: /usr/bin/clang++-10
-- Check for working CXX compiler: /usr/bin/clang++-10 -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Check for working C compiler: /usr/bin/clang-10
-- Check for working C compiler: /usr/bin/clang-10 -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed
-- Check if compiler accepts -pthread
-- Check if compiler accepts -pthread - yes
-- Found Threads: TRUE  
-- Looking for fork
-- Looking for fork - found
-- Looking for wait
-- Looking for wait - found
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- Found Git: /usr/bin/git (found version "2.27.0") 
-- git Version: v0.2.1-c96ff018
-- Version: 0.2.1
-- Performing Test HAVE_CXX_FLAG_STD_CXX11
-- Performing Test HAVE_CXX_FLAG_STD_CXX11 - Success
-- Performing Test HAVE_CXX_FLAG_WALL
-- Performing Test HAVE_CXX_FLAG_WALL - Success
-- Performing Test HAVE_CXX_FLAG_WEXTRA
-- Performing Test HAVE_CXX_FLAG_WEXTRA - Success
-- Performing Test HAVE_CXX_FLAG_WSHADOW
-- Performing Test HAVE_CXX_FLAG_WSHADOW - Success
-- Performing Test HAVE_CXX_FLAG_WERROR
-- Performing Test HAVE_CXX_FLAG_WERROR - Success
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32 - Success
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED - Success
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WD654
-- Performing Test HAVE_CXX_FLAG_WD654 - Failed
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY - Success
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES -- failed to compile
-- Performing Test HAVE_CXX_FLAG_COVERAGE
-- Performing Test HAVE_CXX_FLAG_COVERAGE - Success
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Performing Test USE_BOOST_JSON
-- Performing Test USE_BOOST_JSON - Failed
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Found Python3: /usr/bin/python3.8 (found version "3.8.6") found components: Interpreter 
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 bench_ondemand
/usr/bin/cmake -S/home/jkeiser/simdjson_benchmark_results/simdjson -B/home/jkeiser/simdjson_benchmark_results/simdjson/build --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 10
make -f CMakeFiles/Makefile2 benchmark/CMakeFiles/bench_ondemand.dir/all
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src/CMakeFiles/benchmark.dir/DependInfo.cmake --color=
Scanning dependencies of target benchmark
make -f _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build.make _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_api_internal.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_name.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_name.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_register.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_register.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/benchmark_runner.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/benchmark_runner.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/colorprint.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/colorprint.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/commandlineflags.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/commandlineflags.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/complexity.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/complexity.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/console_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/console_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/counter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/counter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/csv_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/csv_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/json_reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/json_reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/reporter.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/reporter.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/sleep.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sleep.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/statistics.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/statistics.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/string_util.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/string_util.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/sysinfo.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/sysinfo.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/clang++-10  -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include  -std=c++11  -Wall  -Wextra  -Wshadow  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG  -Werror  -Wno-deprecated   -std=c++17 -o CMakeFiles/benchmark.dir/timers.cc.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/timers.cc
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -P CMakeFiles/benchmark.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/_deps/google_benchmarks/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/benchmark.dir/link.txt --verbose=1
/usr/bin/ar qc libbenchmark.a  CMakeFiles/benchmark.dir/benchmark.cc.o CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o CMakeFiles/benchmark.dir/benchmark_name.cc.o CMakeFiles/benchmark.dir/benchmark_register.cc.o CMakeFiles/benchmark.dir/benchmark_runner.cc.o CMakeFiles/benchmark.dir/colorprint.cc.o CMakeFiles/benchmark.dir/commandlineflags.cc.o CMakeFiles/benchmark.dir/complexity.cc.o CMakeFiles/benchmark.dir/console_reporter.cc.o CMakeFiles/benchmark.dir/counter.cc.o CMakeFiles/benchmark.dir/csv_reporter.cc.o CMakeFiles/benchmark.dir/json_reporter.cc.o CMakeFiles/benchmark.dir/reporter.cc.o CMakeFiles/benchmark.dir/sleep.cc.o CMakeFiles/benchmark.dir/statistics.cc.o CMakeFiles/benchmark.dir/string_util.cc.o CMakeFiles/benchmark.dir/sysinfo.cc.o CMakeFiles/benchmark.dir/timers.cc.o
/usr/bin/ranlib libbenchmark.a
[ 80%] Built target benchmark
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/CMakeFiles/generated-data.dir/DependInfo.cmake --color=
Scanning dependencies of target generated-data
make -f jsonexamples/generated/CMakeFiles/generated-data.dir/build.make jsonexamples/generated/CMakeFiles/generated-data.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/jsonexamples/generated && /usr/bin/ruby genfeaturejson.rb /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-miss.json ...
[ 80%] Built target generated-data
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/src /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/src /home/jkeiser/simdjson_benchmark_results/simdjson/build/src/CMakeFiles/simdjson.dir/DependInfo.cmake --color=
Scanning dependencies of target simdjson
make -f src/CMakeFiles/simdjson.dir/build.make src/CMakeFiles/simdjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/clang++-10  -DSIMDJSON_THREADS_ENABLED=1 -Dsimdjson_EXPORTS -I/home/jkeiser/simdjson_benchmark_results/simdjson/src -I/home/jkeiser/simdjson_benchmark_results/simdjson/include  -O3 -DNDEBUG -fPIC   -fPIC -Werror -Wall -Wextra -Weffc++ -Wsign-compare -Wshadow -Wwrite-strings -Wpointer-arith -Winit-self -Wconversion -Wno-sign-conversion -pthread -std=c++17 -o CMakeFiles/simdjson.dir/simdjson.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/src/simdjson.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/simdjson.dir/link.txt --verbose=1
/usr/bin/clang++-10 -fPIC -O3 -DNDEBUG  -shared -Wl,-soname,libsimdjson.so.7 -o ../libsimdjson.so.7.0.0 CMakeFiles/simdjson.dir/simdjson.cpp.o  -pthread 
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/src && /usr/bin/cmake -E cmake_symlink_library ../libsimdjson.so.7.0.0 ../libsimdjson.so.7 ../libsimdjson.so
[ 80%] Built target simdjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies/CMakeFiles/yyjson.dir/DependInfo.cmake --color=
Scanning dependencies of target yyjson
make -f dependencies/CMakeFiles/yyjson.dir/build.make dependencies/CMakeFiles/yyjson.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/clang-10  -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src  -O3 -DNDEBUG   -o CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o   -c /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src/yyjson.c
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -P CMakeFiles/yyjson.dir/cmake_clean_target.cmake
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/dependencies && /usr/bin/cmake -E cmake_link_script CMakeFiles/yyjson.dir/link.txt --verbose=1
/usr/bin/ar qc libyyjson.a  CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o
/usr/bin/ranlib libyyjson.a
[ 90%] Built target yyjson
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/depend
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/jkeiser/simdjson_benchmark_results/simdjson /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark/CMakeFiles/bench_ondemand.dir/DependInfo.cmake --color=
Scanning dependencies of target bench_ondemand
make -f benchmark/CMakeFiles/bench_ondemand.dir/build.make benchmark/CMakeFiles/bench_ondemand.dir/build
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/clang++-10  -DRAPIDJSON_HAS_STDSTRING -DSAJSON_UNSORTED_OBJECT_KEYS -DSIMDJSON_BENCHMARK_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/\" -DSIMDJSON_COMPETITION_NLOHMANN_JSON -DSIMDJSON_COMPETITION_RAPIDJSON -DSIMDJSON_COMPETITION_SAJSON -DSIMDJSON_COMPETITION_YYJSON -DSIMDJSON_MINEFIELD_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/minefield/\" -DSIMDJSON_TEST_DATA_DIR=\"/home/jkeiser/simdjson_benchmark_results/simdjson/jsonchecker/\" -DSIMDJSON_THREADS_ENABLED=1 -DSIMDJSON_USING_LIBRARY=1 -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/. -I/home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/linux -I/home/jkeiser/simdjson_benchmark_results/simdjson/include -I/home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/google_benchmarks/src/../include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/yyjson/src -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/rapidjson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/sajson/include -isystem /home/jkeiser/simdjson_benchmark_results/simdjson/dependencies/.cache/json  -O3 -DNDEBUG   -pthread -std=c++17 -o CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o -c /home/jkeiser/simdjson_benchmark_results/simdjson/benchmark/bench_ondemand.cpp
cd /home/jkeiser/simdjson_benchmark_results/simdjson/build/benchmark && /usr/bin/cmake -E cmake_link_script CMakeFiles/bench_ondemand.dir/link.txt --verbose=1
/usr/bin/clang++-10  -O3 -DNDEBUG   CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o  -o bench_ondemand  -Wl,-rpath,/home/jkeiser/simdjson_benchmark_results/simdjson/build ../libsimdjson.so.7.0.0 ../_deps/google_benchmarks/src/libbenchmark.a ../dependencies/libyyjson.a -pthread /usr/lib/x86_64-linux-gnu/librt.so 
[100%] Built target bench_ondemand
/usr/bin/cmake -E cmake_progress_start /home/jkeiser/simdjson_benchmark_results/simdjson/build/CMakeFiles 0
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.8.0/skylake-clang10.json --benchmark_out_format=json
2021-01-25 02:37:39
Running benchmark/bench_ondemand
Run on (4 X 4000 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 256 KiB (x4)
  L3 Unified 8192 KiB (x1)
Load Average: 0.57, 0.18, 0.36
simdjson::dom implementation:      haswell
simdjson::ondemand implementation: fallback

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                  283587 ns       311806 ns         2524           4.134k           2.24223G               0        88.029k    1039.97k              1.64678          3.55056k       3.69246G          3.01555M                     4.7751                     2.89966           355.056k    4.32381k   631.515k       2.07394G/s    1.45365   87.9361k   1046.63k         1.65733   3.52625k/s 3.69068G/s     3.01555M                4.7751                2.88119        100       352.625k/s [BEST: throughput=  2.24 GB/s doc_throughput=  3550 docs/s instructions=     3015548 cycles=     1039966 branch_miss=    4134 cache_miss=       0 cache_ref=     88029 items=       100 avg_time=    283587 ns]
partial_tweets<simdjson_ondemand>/manual_time             184702 ns       212663 ns         3792           2.698k           3.44529G               0        54.948k    676.951k              1.07195           5.4556k       3.69317G          2.29928M                    3.64089                     3.39652            545.56k    2.84067k   631.515k       3.18429G/s   0.383966   54.9894k   681.769k         1.07958   5.41413k/s 3.69119G/s     2.29928M               3.64089                3.37252        100       541.413k/s [BEST: throughput=  3.45 GB/s doc_throughput=  5455 docs/s instructions=     2299278 cycles=      676951 branch_miss=    2698 cache_miss=       0 cache_ref=     54948 items=       100 avg_time=    184701 ns]
partial_tweets<yyjson>/manual_time                        636296 ns       666861 ns         1098           9.622k           1.81688G             273        74.223k    1.28351M              2.03243          2.87702k       3.69268G          2.90333M                    4.59741                     2.26203           287.702k    7.51085k   631.515k       946.508M/s    964.281   49.2908k   1.50072M         2.37639    1.5716k/s 2.35853G/s     2.90403M               4.59851                1.93508        100        157.16k/s [BEST: throughput=  1.82 GB/s doc_throughput=  2877 docs/s instructions=     2903333 cycles=     1283510 branch_miss=    9622 cache_miss=     273 cache_ref=     74223 items=       100 avg_time=    636296 ns]
partial_tweets<yyjson_insitu>/manual_time                 426372 ns       455403 ns         1642           6.911k           2.05822G             746         45.51k    1.12659M              1.78395          3.25918k       3.67177G          2.90323M                    4.59724                       2.577           325.918k    7.31817k   631.515k       1.37942G/s    128.815   31.9146k   1.22858M         1.94544   2.34537k/s 2.88147G/s     2.90349M               4.59766                 2.3633        100       234.537k/s [BEST: throughput=  2.06 GB/s doc_throughput=  3259 docs/s instructions=     2903229 cycles=     1126593 branch_miss=    6911 cache_miss=     746 cache_ref=     45510 items=       100 avg_time=    426371 ns]
partial_tweets<sajson>/manual_time                        589483 ns       617823 ns         1184          10.384k           1080.24M               0        45.839k     2.1582M              3.41749          1.71056k       3.69172G          5.87178M                    9.29793                     2.72069           171.056k    10.7769k   631.515k       1021.67M/s    1.96959   45.8477k   2.17523M         3.44447    1.6964k/s 3.69007G/s     5.87178M               9.29793                2.69938        100        169.64k/s [BEST: throughput=  1.08 GB/s doc_throughput=  1710 docs/s instructions=     5871783 cycles=     2158198 branch_miss=   10384 cache_miss=       0 cache_ref=     45839 items=       100 avg_time=    589482 ns]
partial_tweets<rapidjson>/manual_time                    2429377 ns      2458344 ns          288           30.03k           284.501M          1.266k        51.756k    8.19406M              12.9752           450.506       3.69148G          21.9147M                    34.7018                     2.67446           45.0506k    30.6094k   631.515k       247.907M/s    639.663   33.7623k   8.37357M         13.2595    411.628/s  3.4468G/s     21.9156M               34.7033                2.61724        100       41.1628k/s [BEST: throughput=  0.28 GB/s doc_throughput=   450 docs/s instructions=    21914708 cycles=     8194062 branch_miss=   30030 cache_miss=    1266 cache_ref=     51756 items=       100 avg_time=   2429376 ns]
partial_tweets<rapidjson_insitu>/manual_time             1512920 ns      1541443 ns          464          26.711k            449.49M              87        42.895k    5.18647M              8.21274           711.765       3.69155G          13.3444M                    21.1308                     2.57293           71.1765k    26.1962k   631.515k       398.078M/s    270.647   34.3976k   5.23829M          8.2948    660.973/s 3.46237G/s     13.3448M               21.1314                2.54755        100       66.0973k/s [BEST: throughput=  0.45 GB/s doc_throughput=   711 docs/s instructions=    13344398 cycles=     5186468 branch_miss=   26711 cache_miss=      87 cache_ref=     42895 items=       100 avg_time=   1512920 ns]
partial_tweets<nlohmann_json>/manual_time                8009796 ns      8045307 ns           88         152.126k           81.3264M             109         223.5k    28.6549M              45.3748            128.78       3.69017G          78.2568M                    123.919                     2.73101            12.878k    164.195k   631.515k       75.1904M/s   1.37133k   358.172k   29.5508M         46.7934    124.847/s 3.68933G/s     78.7041M               124.627                2.66335        100       12.4847k/s [BEST: throughput=  0.08 GB/s doc_throughput=   128 docs/s instructions=    78256777 cycles=    28654864 branch_miss=  152126 cache_miss=     109 cache_ref=    223500 items=       100 avg_time=   8009795 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                  89670142 ns     93059884 ns            8         903.896k           513.433M        10.9387M       15.2601M    330.421M              7.18325           11.1619       3.68811G          1038.51M                     22.577                     3.14301           11.1619M    907.757k   45.9988M       489.214M/s   10.9706M   15.2532M   330.783M         7.19112     11.152/s 3.68888G/s     1038.51M                22.577                3.13956      1000k        11.152M/s [BEST: throughput=  0.51 GB/s doc_throughput=    11 docs/s instructions=  1038513485 cycles=   330420520 branch_miss=  903896 cache_miss=10938692 cache_ref=  15260141 items=   1000000 avg_time=  89670142 ns]
large_random<simdjson_ondemand>/manual_time             64541351 ns     67931345 ns           11         907.144k           713.411M        5.69496M       7.90984M    237.834M              5.17044           15.5094       3.68865G          676.969M                    14.7171                     2.84639           15.5094M    907.802k   45.9988M       679.686M/s   5.71956M   7.90971M   238.065M         5.17547    15.4939/s 3.68857G/s     676.969M               14.7171                2.84363      1000k       15.4939M/s [BEST: throughput=  0.71 GB/s doc_throughput=    15 docs/s instructions=   676969394 cycles=   237834095 branch_miss=  907144 cache_miss= 5694960 cache_ref=   7909838 items=   1000000 avg_time=  64541350 ns]
large_random<simdjson_ondemand_unordered>/manual_time   64868209 ns     68230453 ns           11         932.188k           709.812M        5.67634M       7.89859M    239.075M              5.19743           15.4311        3.6892G          675.969M                    14.6954                     2.82743           15.4311M    937.234k   45.9988M       676.261M/s   5.70625M   7.90234M   239.287M         5.20204    15.4159/s 3.68882G/s     675.969M               14.6954                2.82493      1000k       15.4159M/s [BEST: throughput=  0.71 GB/s doc_throughput=    15 docs/s instructions=   675969389 cycles=   239075282 branch_miss=  932188 cache_miss= 5676340 cache_ref=   7898594 items=   1000000 avg_time=  64868208 ns]
large_random<yyjson>/manual_time                       121185350 ns    124607767 ns            6          663.95k           379.766M          5.772M       8.91367M    327.602M              7.12198           8.25601       2.70469G           866.68M                    18.8414                     2.64553           8.25601M    664.147k   45.9988M        361.99M/s   5.77292M   8.92533M   327.542M         7.12068    8.25182/s 2.70282G/s      866.68M               18.8414                2.64601      1000k       8.25182M/s [BEST: throughput=  0.38 GB/s doc_throughput=     8 docs/s instructions=   866680090 cycles=   327602190 branch_miss=  663950 cache_miss= 5771998 cache_ref=   8913666 items=   1000000 avg_time= 121185349 ns]
large_random<yyjson_insitu>/manual_time                103320571 ns    106732481 ns            7         663.714k           445.296M        4.89963M       7.56334M    295.814M              6.43092            9.6806       2.86366G          860.559M                    18.7083                     2.90912            9.6806M    663.766k   45.9988M        424.58M/s   4.91098M   7.58895M   295.946M         6.43379    9.67861/s 2.86435G/s     860.559M               18.7083                2.90782      1000k       9.67861M/s [BEST: throughput=  0.45 GB/s doc_throughput=     9 docs/s instructions=   860559124 cycles=   295814491 branch_miss=  663714 cache_miss= 4899627 cache_ref=   7563341 items=   1000000 avg_time= 103320570 ns]
large_random<sajson>/manual_time                        91793157 ns     95216305 ns            8         581.738k           501.835M        8.37147M       12.0985M    338.149M              7.35126           10.9097       3.68912G          1.13399G                    24.6526                     3.35352           10.9097M    581.876k   45.9988M       477.899M/s     8.431M   12.1622M   338.618M         7.36146    10.8941/s 3.68893G/s     1.13399G               24.6526                3.34887      1000k       10.8941M/s [BEST: throughput=  0.50 GB/s doc_throughput=    10 docs/s instructions=  1133989145 cycles=   338149036 branch_miss=  581738 cache_miss= 8371466 cache_ref=  12098488 items=   1000000 avg_time=  91793157 ns]
large_random<rapidjson>/manual_time                    211095326 ns    214509948 ns            3         583.444k           223.958M        7.05974M       10.6962M    699.791M              15.2133           4.86878       3.40713G          2.02114G                    43.9391                     2.88821           4.86878M     583.43k   45.9988M       207.811M/s   6.56191M   10.0496M    701.99M         15.2611     4.7372/s 3.32547G/s     2.02115G               43.9393                2.87918      1000k        4.7372M/s [BEST: throughput=  0.22 GB/s doc_throughput=     4 docs/s instructions=  2021144315 cycles=   699791414 branch_miss=  583444 cache_miss= 7059743 cache_ref=  10696241 items=   1000000 avg_time= 211095326 ns]
large_random<rapidjson_lossless>/manual_time           245956331 ns    249369872 ns            3         582.065k           191.873M        7.03312M       10.7192M    826.371M              17.9651           4.17126       3.44701G          2.48311G                    53.9821                     3.00484           4.17126M    581.609k   45.9988M       178.356M/s   6.57092M   10.0669M   830.409M         18.0529    4.06576/s 3.37625G/s     2.48312G               53.9823                2.99024      1000k       4.06576M/s [BEST: throughput=  0.19 GB/s doc_throughput=     4 docs/s instructions=  2483111419 cycles=   826370647 branch_miss=  582065 cache_miss= 7033118 cache_ref=  10719203 items=   1000000 avg_time= 245956331 ns]
large_random<rapidjson_insitu>/manual_time             235953263 ns    239364723 ns            3         584.983k           199.662M        8.12132M       12.2492M    792.025M              17.2184           4.34059       3.43786G          1.75214G                    38.0911                     2.21223           4.34059M    584.088k   45.9988M       185.918M/s   7.66875M   11.5957M   793.709M          17.255    4.23813/s 3.36384G/s     1.75215G               38.0913                2.20755      1000k       4.23813M/s [BEST: throughput=  0.20 GB/s doc_throughput=     4 docs/s instructions=  1752144157 cycles=   792025096 branch_miss=  584983 cache_miss= 8121317 cache_ref=  12249203 items=   1000000 avg_time= 235953263 ns]
large_random<nlohmann_json>/manual_time               1241650280 ns   1245067494 ns            1         4.11267M           37.0465M        47.1408M       60.7099M    4.56813G              99.3097           0.80538       3.67908G          12.3806G                     269.15                      2.7102            805.38k    4.11267M   45.9988M       35.3303M/s   47.1408M   60.7099M   4.56813G         99.3097    0.80538/s 3.67908G/s     12.3806G                269.15                 2.7102      1000k        805.38k/s [BEST: throughput=  0.04 GB/s doc_throughput=     0 docs/s instructions= 12380552782 cycles=  4568126643 branch_miss= 4112672 cache_miss=47140798 cache_ref=  60709944 items=   1000000 avg_time=1241650280 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                        93694318 ns    104094924 ns            7         1033.45k           1.46667G        15.8687M       22.2826M     345.36M              2.51528           10.6818       3.68908G          991.684M                    7.22249                     2.87145           5.60037M    1034.08k   137.305M       1.36481G/s   15.8916M   22.2054M   345.627M         2.51722     10.673/s 3.68888G/s     991.684M               7.22249                2.86923   524.288k       5.59573M/s [BEST: throughput=  1.47 GB/s doc_throughput=    10 docs/s instructions=   991683884 cycles=   345359835 branch_miss= 1033453 cache_miss=15868705 cache_ref=  22282563 items=    524288 avg_time=  93694318 ns]
kostya<simdjson_ondemand>/manual_time                   64801588 ns     75145816 ns           11         476.995k           2.12099G        10.1252M       13.9448M    238.818M              1.73933           15.4473       3.68909G          660.046M                    4.80716                      2.7638           8.09882M    477.734k   137.305M       1.97333G/s   10.1399M   13.8783M   239.046M         1.74099    15.4317/s 3.68889G/s     660.046M               4.80716                2.76117   524.288k       8.09067M/s [BEST: throughput=  2.12 GB/s doc_throughput=    15 docs/s instructions=   660046421 cycles=   238818184 branch_miss=  476995 cache_miss=10125196 cache_ref=  13944766 items=    524288 avg_time=  64801588 ns]
kostya<yyjson>/manual_time                             176567484 ns    187004689 ns            4         416.221k            778.47M        11.3089M       16.2989M    454.898M              3.31305           5.66964       2.57911G          978.903M                     7.1294                     2.15192           2.97252M    416.181k   137.305M        741.61M/s   11.3119M   16.3256M   454.915M         3.31317    5.66356/s 2.57644G/s     978.903M                7.1294                2.15184   524.288k       2.96933M/s [BEST: throughput=  0.78 GB/s doc_throughput=     5 docs/s instructions=   978902589 cycles=   454898172 branch_miss=  416221 cache_miss=11308937 cache_ref=  16298868 items=    524288 avg_time= 176567484 ns]
kostya<yyjson_insitu>/manual_time                      123410365 ns    133849094 ns            6         413.379k           1.11348G        8.67226M        12.362M    360.533M              2.62578           8.10956       2.92377G          960.633M                    6.99634                     2.66448           4.25175M    413.966k   137.305M       1061.05M/s   8.67541M   12.3685M   360.613M         2.62637    8.10305/s 2.92207G/s     960.633M               6.99634                2.66389   524.288k       4.24833M/s [BEST: throughput=  1.11 GB/s doc_throughput=     8 docs/s instructions=   960632916 cycles=   360533089 branch_miss=  413379 cache_miss= 8672260 cache_ref=  12361962 items=    524288 avg_time= 123410364 ns]
kostya<sajson>/manual_time                             137808775 ns    148277620 ns            5         354.991k           996.937M         12.275M       17.1584M    508.025M              3.69997           7.26075       3.68864G          1.54442G                    11.2481                     3.04006           3.80672M    355.171k   137.305M       950.188M/s   12.3007M    17.166M   508.355M         3.70238    7.25643/s 3.68884G/s     1.54442G               11.2481                3.03808   524.288k       3.80446M/s [BEST: throughput=  1.00 GB/s doc_throughput=     7 docs/s instructions=  1544424212 cycles=   508024829 branch_miss=  354991 cache_miss=12274967 cache_ref=  17158421 items=    524288 avg_time= 137808775 ns]
kostya<rapidjson>/manual_time                          280593044 ns    291032114 ns            3         1013.16k           495.284M        8.35426M       12.3314M    941.511M              6.85708           3.60718       3.39621G          2.74501G                    19.9921                     2.91554            1.8912M    1009.06k   137.305M        466.67M/s    8.0505M   11.9946M   944.206M         6.87671    3.56388/s 3.36504G/s     2.74502G               19.9921                2.90722   524.288k        1.8685M/s [BEST: throughput=  0.50 GB/s doc_throughput=     3 docs/s instructions=  2745013948 cycles=   941511325 branch_miss= 1013159 cache_miss= 8354262 cache_ref=  12331398 items=    524288 avg_time= 280593043 ns]
kostya<rapidjson_lossless>/manual_time                 302168467 ns    312573128 ns            2         960.588k           458.409M        8.35566M       12.4431M    1023.02M              7.45068           3.33862       3.41545G          3.01187G                    21.9356                     2.94411            1.7504M    961.105k   137.305M       433.348M/s   8.13705M   12.1123M   1025.18M         7.46644    3.30941/s 3.39274G/s     3.01187G               21.9356                2.93789   524.288k       1.73509M/s [BEST: throughput=  0.46 GB/s doc_throughput=     3 docs/s instructions=  3011867234 cycles=  1023015295 branch_miss=  960588 cache_miss= 8355659 cache_ref=  12443107 items=    524288 avg_time= 302168467 ns]
kostya<rapidjson_insitu>/manual_time                   270145209 ns    280529597 ns            3         1063.49k           514.187M        11.9608M       16.0935M    903.439M               6.5798           3.74486       3.38325G          2.22935G                    16.2365                     2.46763           1.96338M    1062.63k   137.305M       484.718M/s   11.6566M   15.7388M   905.164M         6.59236    3.70171/s 3.35066G/s     2.22935G               16.2365                2.46293   524.288k       1.94076M/s [BEST: throughput=  0.51 GB/s doc_throughput=     3 docs/s instructions=  2229351385 cycles=   903439307 branch_miss= 1063490 cache_miss=11960807 cache_ref=  16093515 items=    524288 avg_time= 270145208 ns]
kostya<nlohmann_json>/manual_time                     1837375222 ns   1847676856 ns            1         14.9297M           74.7289M         69.586M       86.6757M    6.77743G              49.3604          0.544255       3.68865G          17.2831G                    125.874                     2.55009           285.346k    14.9297M   137.305M        71.267M/s    69.586M   86.6757M   6.77743G         49.3604   0.544255/s 3.68865G/s     17.2831G               125.874                2.55009   524.288k       285.346k/s [BEST: throughput=  0.07 GB/s doc_throughput=     0 docs/s instructions= 17283074461 cycles=  6777430699 branch_miss=14929681 cache_miss=69586030 cache_ref=  86675653 items=    524288 avg_time=1837375222 ns]
distinct_user_id<simdjson_dom>/manual_time                284188 ns       314055 ns         2465            4.11k            2.2382G               0        94.815k    1041.88k              1.64982          3.54418k       3.69262G          2.94967M                    4.67078                      2.8311            407.58k     4.3178k   631.515k       2.06956G/s    8.88235   94.7951k   1048.72k         1.66065    3.5188k/s 3.69024G/s     2.94967M               4.67078                2.81263        115       404.662k/s [BEST: throughput=  2.24 GB/s doc_throughput=  3544 docs/s instructions=     2949670 cycles=     1041883 branch_miss=    4110 cache_miss=       0 cache_ref=     94815 items=       115 avg_time=    284188 ns]
distinct_user_id<simdjson_ondemand>/manual_time           166904 ns       196245 ns         4194           2.185k           3.81582G               0        57.046k     611.22k             0.967863          6.04233k       3.69319G          1.91823M                     3.0375                     3.13836           694.868k    2.33727k   631.515k       3.52384G/s  0.0948975   56.8216k   615.956k        0.975363   5.99146k/s 3.69048G/s     1.91823M                3.0375                3.11423        115       689.018k/s [BEST: throughput=  3.82 GB/s doc_throughput=  6042 docs/s instructions=     1918227 cycles=      611220 branch_miss=    2185 cache_miss=       0 cache_ref=     57046 items=       115 avg_time=    166904 ns]
distinct_user_id<yyjson>/manual_time                      546900 ns       580801 ns         1000           6.874k           1.92321G         15.951k        76.919k    1.21252M              1.92001          3.04539k       3.69259G          2.86148M                    4.53113                     2.35995            350.22k    7.34136k   631.515k       1101.23M/s   7.26163k   57.8137k   1.42554M         2.25733   1.82849k/s 2.60658G/s     2.86167M               4.53144                2.00743        115       210.276k/s [BEST: throughput=  1.92 GB/s doc_throughput=  3045 docs/s instructions=     2861478 cycles=     1212517 branch_miss=    6874 cache_miss=   15951 cache_ref=     76919 items=       115 avg_time=    546899 ns]
distinct_user_id<yyjson_insitu>/manual_time               419369 ns       452153 ns         1669           6.961k           2.09263G             415         46.71k    1.11099M              1.75925          3.31367k       3.68147G          2.86097M                    4.53032                     2.57514           381.072k    7.39883k   631.515k       1.40245G/s    69.9197   32.2454k   1.21441M           1.923   2.38454k/s  2.8958G/s     2.86123M               4.53074                2.35607        115       274.222k/s [BEST: throughput=  2.09 GB/s doc_throughput=  3313 docs/s instructions=     2860965 cycles=     1110993 branch_miss=    6961 cache_miss=     415 cache_ref=     46710 items=       115 avg_time=    419368 ns]
distinct_user_id<sajson>/manual_time                      584269 ns       614971 ns         1195          10.193k            1091.2M              13        47.823k    2.13666M              3.38338          1.72791k       3.69195G          5.81022M                    9.20044                      2.7193            198.71k    10.6009k   631.515k       1030.79M/s    10.3004   47.8324k   2.15577M         3.41364   1.71154k/s 3.68968G/s     5.81022M               9.20045                 2.6952        115       196.827k/s [BEST: throughput=  1.09 GB/s doc_throughput=  1727 docs/s instructions=     5810219 cycles=     2136656 branch_miss=   10193 cache_miss=      13 cache_ref=     47823 items=       115 avg_time=    584268 ns]
distinct_user_id<rapidjson>/manual_time                  2415520 ns      2446188 ns          291          30.668k           284.144M             370        55.499k     8.2044M              12.9916           449.941        3.6915G          21.8428M                    34.5879                     2.66232           51.7432k    30.5183k   631.515k       249.329M/s   1.32035k   37.7767k   8.35551M         13.2309     413.99/s  3.4591G/s      21.844M               34.5898                2.61432        115       47.6088k/s [BEST: throughput=  0.28 GB/s doc_throughput=   449 docs/s instructions=    21842751 cycles=     8204404 branch_miss=   30668 cache_miss=     370 cache_ref=     55499 items=       115 avg_time=   2415520 ns]
distinct_user_id<rapidjson_insitu>/manual_time           1509997 ns      1540513 ns          462          26.039k           452.888M             134        46.236k    5.14766M              8.15128           717.145       3.69161G           13.278M                    21.0256                     2.57942           82.4716k    30.2522k   631.515k       398.848M/s   2.82262k    39.312k   5.30397M         8.39881    662.253/s 3.51257G/s     13.2783M               21.0261                2.50346        115       76.1591k/s [BEST: throughput=  0.45 GB/s doc_throughput=   717 docs/s instructions=    13277971 cycles=     5147656 branch_miss=   26039 cache_miss=     134 cache_ref=     46236 items=       115 avg_time=   1509996 ns]
distinct_user_id<nlohmann_json>/manual_time              7412701 ns      7445526 ns           97          128.49k           88.1506M              29       223.906k    26.4273M              41.8475           139.586       3.68888G          73.6552M                    116.633                     2.78709           16.0524k     142.91k   631.515k        81.247M/s    68.9588   417.913k   27.3392M         43.2914    134.904/s 3.68815G/s     72.3032M               114.492                2.64467        115       15.5139k/s [BEST: throughput=  0.09 GB/s doc_throughput=   139 docs/s instructions=    73655235 cycles=    26427298 branch_miss=  128490 cache_miss=      29 cache_ref=    223906 items=       115 avg_time=   7412700 ns]
find_tweet<simdjson_dom>/manual_time                      260457 ns       289670 ns         2687           4.026k           2.44588G               0         83.85k    953.378k              1.50967          3.87304k       3.69247G          2.86435M                    4.53568                     3.00442           3.87304k     4.1836k   631.515k       2.25812G/s    10.2289    83.984k    961.21k         1.52207    3.8394k/s 3.69047G/s     2.86435M               4.53568                2.97994          1        3.8394k/s [BEST: throughput=  2.45 GB/s doc_throughput=  3873 docs/s instructions=     2864350 cycles=      953378 branch_miss=    4026 cache_miss=       0 cache_ref=     83850 items=         1 avg_time=    260457 ns]
find_tweet<simdjson_ondemand>/manual_time                 112642 ns       141050 ns         6218           1.285k           5.63807G               0        32.543k    413.807k             0.655261          8.92785k       3.69441G          1.41246M                    2.23662                     3.41333           8.92785k     1.3491k   631.515k       5.22135G/s  0.0283049   32.6393k   415.727k        0.658301   8.87767k/s 3.69069G/s     1.41246M               2.23662                3.39756          1       8.87767k/s [BEST: throughput=  5.64 GB/s doc_throughput=  8927 docs/s instructions=     1412458 cycles=      413807 branch_miss=    1285 cache_miss=       0 cache_ref=     32543 items=         1 avg_time=    112642 ns]
find_tweet<yyjson>/manual_time                            610374 ns       641359 ns         1154           9.384k             1.896G             437        68.064k     1.2302M              1.94801          3.00231k       3.69343G          2.80059M                    4.43472                     2.27654           3.00231k    7.31409k   631.515k       986.707M/s    1021.09   41.5704k   1.45115M         2.29789   1.63834k/s 2.37748G/s     2.80107M               4.43547                1.93024          1       1.63834k/s [BEST: throughput=  1.90 GB/s doc_throughput=  3002 docs/s instructions=     2800590 cycles=     1230196 branch_miss=    9384 cache_miss=     437 cache_ref=     68064 items=         1 avg_time=    610373 ns]
find_tweet<yyjson_insitu>/manual_time                     408751 ns       438932 ns         1713           6.688k            2.1653G             569        38.402k    1073.65k              1.70012          3.42873k       3.68127G          2.80027M                    4.43421                     2.60817           3.42873k    7.17653k   631.515k       1.43888G/s    13.5954    23.422k   1.17622M         1.86253   2.44648k/s 2.87759G/s     2.80053M               4.43462                2.38096          1       2.44648k/s [BEST: throughput=  2.17 GB/s doc_throughput=  3428 docs/s instructions=     2800269 cycles=     1073652 branch_miss=    6688 cache_miss=     569 cache_ref=     38402 items=         1 avg_time=    408750 ns]
find_tweet<sajson>/manual_time                            571652 ns       601558 ns         1221          10.009k           1.11421G               0        38.356k    2.09253M              3.31351          1.76434k       3.69194G          5.71503M                    9.04971                     2.73116           1.76434k    10.3374k   631.515k       1053.54M/s    13.8092   38.3731k   2.10908M         3.33971   1.74932k/s 3.68944G/s     5.71503M               9.04971                2.70973          1       1.74932k/s [BEST: throughput=  1.11 GB/s doc_throughput=  1764 docs/s instructions=     5715026 cycles=     2092529 branch_miss=   10009 cache_miss=       0 cache_ref=     38356 items=         1 avg_time=    571651 ns]
find_tweet<rapidjson>/manual_time                        2404028 ns      2432638 ns          293          30.019k            285.75M         21.301k        50.338k    8.15832M              12.9186           452.483        3.6915G          21.7595M                     34.456                     2.66715            452.483    30.4957k   631.515k       250.521M/s    1015.41   30.2834k   8.31427M         13.1656    415.969/s 3.45847G/s     21.7603M               34.4573                2.61723          1        415.969/s [BEST: throughput=  0.29 GB/s doc_throughput=   452 docs/s instructions=    21759456 cycles=     8158317 branch_miss=   30019 cache_miss=   21301 cache_ref=     50338 items=         1 avg_time=   2404028 ns]
find_tweet<rapidjson_insitu>/manual_time                 1511452 ns      1541253 ns          462          25.923k           454.414M              13        36.437k    5.13033M              8.12384           719.562       3.69159G          13.1993M                    20.9011                      2.5728            719.562    31.7252k   631.515k       398.464M/s   2.58116k   29.4625k   5.31048M         8.40911    661.616/s  3.5135G/s     13.1998M               20.9019                2.48562          1        661.616/s [BEST: throughput=  0.45 GB/s doc_throughput=   719 docs/s instructions=    13199330 cycles=     5130329 branch_miss=   25923 cache_miss=      13 cache_ref=     36437 items=         1 avg_time=   1511451 ns]
find_tweet<nlohmann_json>/manual_time                    6831818 ns      6862350 ns          113         102.152k           104.067M          4.986k       168.397k    22.3881M              35.4515            164.79       3.68934G          63.6623M                    100.809                     2.84358             164.79    184.182k   631.515k       88.1551M/s    76.6372   338.488k   25.2024M         39.9078    146.374/s 3.68897G/s     62.3254M               98.6919                  2.473          1        146.374/s [BEST: throughput=  0.10 GB/s doc_throughput=   164 docs/s instructions=    63662329 cycles=    22388125 branch_miss=  102152 cache_miss=    4986 cache_ref=    168397 items=         1 avg_time=   6831818 ns]
top_tweet<simdjson_dom>/manual_time                       275114 ns       303806 ns         2544           4.122k           2.31069G               0        91.828k    1009.15k              1.59799          3.65897k       3.69246G          2.90124M                    4.59409                     2.87493           3.65897k    4.28416k   631.515k       2.13782G/s    3.52594   91.9957k   1015.18k         1.60753   3.63486k/s 3.69004G/s     2.90124M               4.59409                2.85785          1       3.63486k/s [BEST: throughput=  2.31 GB/s doc_throughput=  3658 docs/s instructions=     2901238 cycles=     1009152 branch_miss=    4122 cache_miss=       0 cache_ref=     91828 items=         1 avg_time=    275114 ns]
top_tweet<simdjson_ondemand>/manual_time                  164345 ns       192726 ns         4260           2.127k           3.87818G               0        56.896k    601.361k             0.952251          6.14107k         3.693G          1.93826M                    3.06922                     3.22312           6.14107k    2.28497k   631.515k       3.57872G/s    0.63662   56.7025k   606.364k        0.960174   6.08477k/s 3.68959G/s     1.93826M               3.06922                3.19653          1       6.08477k/s [BEST: throughput=  3.88 GB/s doc_throughput=  6141 docs/s instructions=     1938258 cycles=      601361 branch_miss=    2127 cache_miss=       0 cache_ref=     56896 items=         1 avg_time=    164344 ns]
top_tweet<simdjson_ondemand_forward_only>/manual_time     173097 ns       201604 ns         4042           2.318k           3.68192G               0         57.47k    633.424k              1.00302          5.83029k       3.69305G          2.16394M                    3.42658                     3.41625           5.83029k    2.47983k   631.515k       3.39777G/s   0.390401   57.3414k   638.843k          1.0116   5.77711k/s 3.69067G/s     2.16394M               3.42658                3.38727          1       5.77711k/s [BEST: throughput=  3.68 GB/s doc_throughput=  5830 docs/s instructions=     2163936 cycles=      633424 branch_miss=    2318 cache_miss=       0 cache_ref=     57470 items=         1 avg_time=    173096 ns]
top_tweet<yyjson>/manual_time                             615709 ns       646178 ns         1144            9.01k           1.88532G             349        74.396k    1.23714M              1.95901          2.98539k       3.69335G          2.82786M                     4.4779                      2.2858           2.98539k    7.46906k   631.515k       978.157M/s    964.223   46.8886k    1.4716M         2.33027   1.62414k/s 2.39009G/s     2.82855M               4.47898                1.92209          1       1.62414k/s [BEST: throughput=  1.89 GB/s doc_throughput=  2985 docs/s instructions=     2827861 cycles=     1237142 branch_miss=    9010 cache_miss=     349 cache_ref=     74396 items=         1 avg_time=    615708 ns]
top_tweet<yyjson_insitu>/manual_time                      414463 ns       444002 ns         1688           6.685k           2.12819G             393        42.884k     1090.6k              1.72696          3.36998k       3.67531G          2.82754M                    4.47739                     2.59264           3.36998k    7.28216k   631.515k       1.41905G/s    47.6842   28.7145k   1.19697M         1.89539   2.41276k/s   2.888G/s      2.8278M               4.47781                2.36247          1       2.41276k/s [BEST: throughput=  2.13 GB/s doc_throughput=  3369 docs/s instructions=     2827540 cycles=     1090604 branch_miss=    6685 cache_miss=     393 cache_ref=     42884 items=         1 avg_time=    414462 ns]
top_tweet<sajson>/manual_time                             578650 ns       607618 ns         1212          10.166k           1.10225G               0        43.348k    2.11516M              3.34935          1.74541k       3.69183G          5.74502M                     9.0972                     2.71611           1.74541k    10.6903k   631.515k        1040.8M/s   0.668317    43.637k   2.13507M         3.38087   1.72816k/s 3.68974G/s     5.74502M                9.0972                2.69079          1       1.72816k/s [BEST: throughput=  1.10 GB/s doc_throughput=  1745 docs/s instructions=     5745018 cycles=     2115162 branch_miss=   10166 cache_miss=       0 cache_ref=     43348 items=         1 avg_time=    578650 ns]
top_tweet<rapidjson>/manual_time                         2408074 ns      2437189 ns          292          30.006k           285.602M         14.934k        53.217k    8.16252M              12.9253           452.248       3.69149G          21.8182M                     34.549                     2.67297            452.248    30.6916k   631.515k         250.1M/s   1.17323k   34.1894k   8.33109M         13.1922     415.27/s 3.45965G/s     21.8191M               34.5503                2.61899          1         415.27/s [BEST: throughput=  0.29 GB/s doc_throughput=   452 docs/s instructions=    21818219 cycles=     8162524 branch_miss=   30006 cache_miss=   14934 cache_ref=     53217 items=         1 avg_time=   2408073 ns]
top_tweet<rapidjson_insitu>/manual_time                  1524849 ns      1554138 ns          449          26.085k           448.229M          1.191k        41.831k    5.20122M              8.23609           709.768       3.69166G           13.254M                    20.9876                     2.54824            709.768    31.0655k   631.515k       394.964M/s   2.83014k   35.2471k   5.36125M         8.48951    655.803/s 3.51592G/s     13.2543M                20.988                2.47223          1        655.803/s [BEST: throughput=  0.45 GB/s doc_throughput=   709 docs/s instructions=    13253960 cycles=     5201217 branch_miss=   26085 cache_miss=    1191 cache_ref=     41831 items=         1 avg_time=   1524848 ns]
top_tweet<nlohmann_json>/manual_time                     8932002 ns      8960150 ns           78         192.082k           71.3751M             191       403.082k    32.6452M              51.6935           113.022       3.68963G          85.7782M                    135.829                     2.62759            113.022    198.379k   631.515k       67.4272M/s    98.8462   405.551k   32.9402M         52.1605    111.957/s 3.68788G/s     86.1454M               136.411                2.61521          1        111.957/s [BEST: throughput=  0.07 GB/s doc_throughput=   113 docs/s instructions=    85778187 cycles=    32645225 branch_miss=  192082 cache_miss=     191 cache_ref=    403082 items=         1 avg_time=   8932002 ns]
