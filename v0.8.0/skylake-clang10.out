run_benchmark: v0.8.0 /home/jkeiser/simdjson_benchmark_results/v0.8.0/skylake-clang10.json 
git reset --hard v0.8.0
HEAD is now at c96ff018 Version 0.8.
cmake ..
-- The CXX compiler identification is Clang 10.0.1
-- The C compiler identification is Clang 10.0.1
-- Check for working CXX compiler: /usr/bin/clang++-10
-- Check for working CXX compiler: /usr/bin/clang++-10 -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Check for working C compiler: /usr/bin/clang-10
-- Check for working C compiler: /usr/bin/clang-10 -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- The simdjson repository appears to be standalone.
-- By default, we attempt to build everything.
-- No build type selected, default to Release
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed
-- Check if compiler accepts -pthread
-- Check if compiler accepts -pthread - yes
-- Found Threads: TRUE  
-- Looking for fork
-- Looking for fork - found
-- Looking for wait
-- Looking for wait - found
-- Building a dynamic library.
-- Library output directory: /home/jkeiser/simdjson_benchmark_results/simdjson/build
-- Importing google_benchmarks (google/benchmark@8982e1e)
-- Failed to find LLVM FileCheck
-- Found Git: /usr/bin/git (found version "2.27.0") 
-- git Version: v0.2.1-c96ff018
-- Version: 0.2.1
-- Performing Test HAVE_CXX_FLAG_STD_CXX11
-- Performing Test HAVE_CXX_FLAG_STD_CXX11 - Success
-- Performing Test HAVE_CXX_FLAG_WALL
-- Performing Test HAVE_CXX_FLAG_WALL - Success
-- Performing Test HAVE_CXX_FLAG_WEXTRA
-- Performing Test HAVE_CXX_FLAG_WEXTRA - Success
-- Performing Test HAVE_CXX_FLAG_WSHADOW
-- Performing Test HAVE_CXX_FLAG_WSHADOW - Success
-- Performing Test HAVE_CXX_FLAG_WERROR
-- Performing Test HAVE_CXX_FLAG_WERROR - Success
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32 - Success
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED - Success
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WD654
-- Performing Test HAVE_CXX_FLAG_WD654 - Failed
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY - Success
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES
-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES -- failed to compile
-- Performing Test HAVE_CXX_FLAG_COVERAGE
-- Performing Test HAVE_CXX_FLAG_COVERAGE - Success
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Performing Test USE_BOOST_JSON
-- Performing Test USE_BOOST_JSON - Failed
-- Importing cjson (DaveGamble/cJSON@c69134d)
-- Importing fastjson (mikeando/fastjson@485f994)
-- Importing gason (vivkin/gason@7aee524)
-- Importing jsmn (zserge/jsmn@18e9fe4)
-- Importing json (nlohmann/json@v3.9.1)
-- Importing json11 (dropbox/json11@ec4e452)
-- Importing rapidjson (Tencent/rapidjson@b32cd94)
-- Importing sajson (chadaustin/sajson@2dcfd35)
-- Importing ujson4c (esnme/ujson4c@e14f3fd)
-- Importing yyjson (ibireme/yyjson@aa33ec5)
-- Importing cxxopts (jarro2783/cxxopts@794c975)
-- cxxopts version 2.2.0
-- We have cxxopts as a dependency and we are buiding the tools (e.g., json2json).
-- Found Python3: /usr/bin/python3.8 (found version "3.8.6") found components: Interpreter 
-- Git is available and it is recent. We are enabling checkperf targets.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jkeiser/simdjson_benchmark_results/simdjson/build
make bench_ondemand
make[1]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[2]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
Scanning dependencies of target benchmark
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[  0%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/benchmark.cc.o
[ 10%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/benchmark_api_internal.cc.o
[ 10%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/benchmark_name.cc.o
[ 10%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/benchmark_register.cc.o
[ 20%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/benchmark_runner.cc.o
[ 20%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/colorprint.cc.o
[ 30%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/commandlineflags.cc.o
[ 30%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/complexity.cc.o
[ 30%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/console_reporter.cc.o
[ 40%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/counter.cc.o
[ 40%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/csv_reporter.cc.o
[ 50%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/json_reporter.cc.o
[ 50%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/reporter.cc.o
[ 60%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/sleep.cc.o
[ 60%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/statistics.cc.o
[ 60%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/string_util.cc.o
[ 70%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/sysinfo.cc.o
[ 70%] Building CXX object _deps/google_benchmarks/src/CMakeFiles/benchmark.dir/timers.cc.o
[ 80%] Linking CXX static library libbenchmark.a
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 80%] Built target benchmark
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
Scanning dependencies of target generated-data
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 80%] Generating utf-8.json, escape.json, 0-structurals.json, 7-structurals.json, 15-structurals.json, 23-structurals.json
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/utf-8-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/escape-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/0-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/7-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/15-structurals-miss.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-full.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals.json ...
Writing /home/jkeiser/simdjson_benchmark_results/simdjson/build/jsonexamples/generated/23-structurals-miss.json ...
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 80%] Built target generated-data
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
Scanning dependencies of target simdjson
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 80%] Building CXX object src/CMakeFiles/simdjson.dir/simdjson.cpp.o
[ 80%] Linking CXX shared library ../libsimdjson.so
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 80%] Built target simdjson
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
Scanning dependencies of target yyjson
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 80%] Building C object dependencies/CMakeFiles/yyjson.dir/.cache/yyjson/src/yyjson.c.o
[ 90%] Linking C static library libyyjson.a
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[ 90%] Built target yyjson
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
Scanning dependencies of target bench_ondemand
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[3]: Entering directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[100%] Building CXX object benchmark/CMakeFiles/bench_ondemand.dir/bench_ondemand.cpp.o
[100%] Linking CXX executable bench_ondemand
make[3]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
[100%] Built target bench_ondemand
make[2]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
make[1]: Leaving directory '/home/jkeiser/simdjson_benchmark_results/simdjson/build'
benchmark/bench_ondemand --benchmark_counters_tabular=true --benchmark_out=/home/jkeiser/simdjson_benchmark_results/v0.8.0/skylake-clang10.json --benchmark_out_format=json
2021-01-23 04:08:41
Running benchmark/bench_ondemand
Run on (4 X 4000 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x4)
  L1 Instruction 32 KiB (x4)
  L2 Unified 256 KiB (x4)
  L3 Unified 8192 KiB (x1)
Load Average: 0.80, 0.32, 0.18
simdjson::dom implementation:      haswell
simdjson::ondemand implementation: fallback

Benchmark                                                      Time             CPU   Iterations best_branch_miss best_bytes_per_sec best_cache_miss best_cache_ref best_cycles best_cycles_per_byte best_docs_per_sec best_frequency best_instructions best_instructions_per_byte best_instructions_per_cycle best_items_per_sec branch_miss      bytes bytes_per_second cache_miss  cache_ref     cycles cycles_per_byte docs_per_sec  frequency instructions instructions_per_byte instructions_per_cycle      items items_per_second

partial_tweets<simdjson_dom>/manual_time                  282253 ns       310968 ns         2526            4.02k           2.25219G               0        93.517k     1035.3k              1.63938          3.56632k        3.6922G          3.01555M                     4.7751                     2.91274           356.632k    4.18008k   631.515k       2.08375G/s    1.22051   93.4738k   1041.68k          1.6495   3.54292k/s  3.6906G/s     3.01555M                4.7751                2.89488        100       354.292k/s [BEST: throughput=  2.25 GB/s doc_throughput=  3566 docs/s instructions=     3015548 cycles=     1035296 branch_miss=    4020 cache_miss=       0 cache_ref=     93517 items=       100 avg_time=    282253 ns]
partial_tweets<simdjson_ondemand>/manual_time             185907 ns       214494 ns         3764           2.709k            3.4199G               0        58.566k    681.945k              1.07986          5.41539k         3.693G          2.29928M                    3.64089                     3.37165           541.539k     2.8265k   631.515k       3.16364G/s   0.146918   58.7492k    686.22k         1.08663   5.37902k/s  3.6912G/s     2.29928M               3.64089                3.35064        100       537.902k/s [BEST: throughput=  3.42 GB/s doc_throughput=  5415 docs/s instructions=     2299278 cycles=      681945 branch_miss=    2709 cache_miss=       0 cache_ref=     58566 items=       100 avg_time=    185907 ns]
partial_tweets<yyjson>/manual_time                        641811 ns       672903 ns         1094           9.442k           1.81727G             350        78.849k    1.28323M              2.03199          2.87764k       3.69269G          2.90333M                    4.59741                     2.26251           287.764k    7.52646k   631.515k       938.376M/s    974.687   51.7461k   1.50672M         2.38589   1.55809k/s 2.34762G/s     2.90403M               4.59851                1.92738        100       155.809k/s [BEST: throughput=  1.82 GB/s doc_throughput=  2877 docs/s instructions=     2903333 cycles=     1283234 branch_miss=    9442 cache_miss=     350 cache_ref=     78849 items=       100 avg_time=    641810 ns]
partial_tweets<yyjson_insitu>/manual_time                 426517 ns       456103 ns         1642            6.82k            2.0615G          1.478k        48.512k    1.12456M              1.78073          3.26438k       3.67098G          2.90323M                    4.59724                     2.58167           326.438k    7.31591k   631.515k       1.37895G/s    171.483   33.9307k   1.23085M         1.94904   2.34457k/s 2.88582G/s     2.90349M               4.59766                2.35893        100       234.457k/s [BEST: throughput=  2.06 GB/s doc_throughput=  3264 docs/s instructions=     2903229 cycles=     1124556 branch_miss=    6820 cache_miss=    1478 cache_ref=     48512 items=       100 avg_time=    426516 ns]
partial_tweets<sajson>/manual_time                        588791 ns       617716 ns         1185          10.258k           1081.49M               0        48.373k    2.15586M              3.41379          1.71254k       3.69199G          5.87179M                    9.29794                     2.72364           171.254k    10.6631k   631.515k       1022.87M/s     2.0346   48.2637k   2.17269M         3.44044    1.6984k/s 3.69008G/s     5.87178M               9.29793                2.70255        100        169.84k/s [BEST: throughput=  1.08 GB/s doc_throughput=  1712 docs/s instructions=     5871789 cycles=     2155859 branch_miss=   10258 cache_miss=       0 cache_ref=     48373 items=       100 avg_time=    588791 ns]
partial_tweets<rapidjson>/manual_time                    2429373 ns      2458778 ns          288          30.611k           283.921M         10.471k        55.003k     8.2108M              13.0017           449.587       3.69146G          21.9149M                    34.7021                     2.66903           44.9587k    30.9403k   631.515k       247.907M/s    653.396   34.4582k   8.37477M         13.2614    411.629/s  3.4473G/s     21.9156M               34.7033                2.61687        100       41.1629k/s [BEST: throughput=  0.28 GB/s doc_throughput=   449 docs/s instructions=    21914910 cycles=     8210800 branch_miss=   30611 cache_miss=   10471 cache_ref=     55003 items=       100 avg_time=   2429372 ns]
partial_tweets<rapidjson_insitu>/manual_time             1519317 ns      1548480 ns          462          26.565k           448.301M             101        45.268k    5.20025M              8.23456           709.881       3.69156G          13.3442M                    21.1304                     2.56607           70.9881k    26.5432k   631.515k       396.401M/s    278.667    35.882k   5.26228M         8.33278     658.19/s 3.46358G/s     13.3448M               21.1314                2.53593        100        65.819k/s [BEST: throughput=  0.45 GB/s doc_throughput=   709 docs/s instructions=    13344189 cycles=     5200248 branch_miss=   26565 cache_miss=     101 cache_ref=     45268 items=       100 avg_time=   1519317 ns]
partial_tweets<nlohmann_json>/manual_time                8026660 ns      8061748 ns           88         154.567k           81.0501M               0       242.132k    28.7477M              45.5219           128.342       3.68955G          78.2568M                    123.919                     2.72219           12.8342k    165.667k   631.515k       75.0324M/s    65.7727   373.824k   29.6144M         46.8943    124.585/s 3.68951G/s     78.7041M               124.627                2.65763        100       12.4585k/s [BEST: throughput=  0.08 GB/s doc_throughput=   128 docs/s instructions=    78256778 cycles=    28747750 branch_miss=  154567 cache_miss=       0 cache_ref=    242132 items=       100 avg_time=   8026659 ns]
Creating a source file spanning 44921 KB 
large_random<simdjson_dom>/manual_time                  89758029 ns     93159952 ns            8         903.946k           512.665M        11.0489M       15.6448M    331.018M              7.19622           11.1452       3.68925G          1038.51M                     22.577                     3.13734           11.1452M    903.311k   45.9988M       488.735M/s   11.0911M   15.6452M    331.12M         7.19845    11.1411/s 3.68903G/s     1038.51M                22.577                3.13637      1000k       11.1411M/s [BEST: throughput=  0.51 GB/s doc_throughput=    11 docs/s instructions=  1038513484 cycles=   331017536 branch_miss=  903946 cache_miss=11048907 cache_ref=  15644756 items=   1000000 avg_time=  89758029 ns]
large_random<simdjson_ondemand>/manual_time             64570988 ns     67934050 ns           11         909.592k           712.809M        5.69152M       8.10783M    238.071M              5.17559           15.4963       3.68921G          676.969M                    14.7171                     2.84356           15.4963M    909.316k   45.9988M       679.374M/s   5.73328M   8.10954M   238.207M         5.17855    15.4868/s 3.68907G/s     676.969M               14.7171                2.84194      1000k       15.4868M/s [BEST: throughput=  0.71 GB/s doc_throughput=    15 docs/s instructions=   676969390 cycles=   238070888 branch_miss=  909592 cache_miss= 5691519 cache_ref=   8107832 items=   1000000 avg_time=  64570987 ns]
large_random<simdjson_ondemand_unordered>/manual_time   64966106 ns     68337736 ns           11         945.021k           708.239M        5.70964M       8.10586M    239.604M              5.20892           15.3969       3.68916G          675.969M                    14.6954                      2.8212           15.3969M    944.687k   45.9988M       675.242M/s   5.73414M   8.10664M   239.667M         5.21029    15.3926/s 3.68911G/s     675.969M               14.6954                2.82045      1000k       15.3926M/s [BEST: throughput=  0.71 GB/s doc_throughput=    15 docs/s instructions=   675969389 cycles=   239603892 branch_miss=  945021 cache_miss= 5709635 cache_ref=   8105861 items=   1000000 avg_time=  64966105 ns]
large_random<yyjson>/manual_time                       121052227 ns    124475505 ns            6         664.119k           380.212M        5.93531M        9.2371M    327.891M              7.12826            8.2657       2.71025G           866.68M                    18.8414                     2.64319            8.2657M    663.888k   45.9988M       362.388M/s   5.94171M   9.23912M   327.957M         7.12969     8.2609/s 2.70922G/s      866.68M               18.8414                2.64266      1000k        8.2609M/s [BEST: throughput=  0.38 GB/s doc_throughput=     8 docs/s instructions=   866679883 cycles=   327891125 branch_miss=  664119 cache_miss= 5935313 cache_ref=   9237097 items=   1000000 avg_time= 121052227 ns]
large_random<yyjson_insitu>/manual_time                103378280 ns    106807650 ns            7         664.794k           445.229M        5.05972M       7.86909M    296.309M              6.44167           9.67914       2.86802G          860.559M                    18.7083                     2.90427           9.67914M    663.674k   45.9988M       424.343M/s   5.05212M   7.86607M   296.335M         6.44223    9.67321/s 2.86651G/s     860.559M               18.7083                2.90401      1000k       9.67321M/s [BEST: throughput=  0.45 GB/s doc_throughput=     9 docs/s instructions=   860559333 cycles=   296308816 branch_miss=  664794 cache_miss= 5059722 cache_ref=   7869087 items=   1000000 avg_time= 103378279 ns]
large_random<sajson>/manual_time                        91724999 ns     95132024 ns            8         581.913k           502.011M        8.49165M       12.4954M    338.039M              7.34887           10.9136       3.68921G          1.13399G                    24.6526                     3.35461           10.9136M    581.898k   45.9988M       478.254M/s   8.53969M   12.3734M   338.396M         7.35664    10.9022/s 3.68925G/s     1.13399G               24.6526                3.35107      1000k       10.9022M/s [BEST: throughput=  0.50 GB/s doc_throughput=    10 docs/s instructions=  1133989144 cycles=   338038875 branch_miss=  581913 cache_miss= 8491647 cache_ref=  12495448 items=   1000000 avg_time=  91724998 ns]
large_random<rapidjson>/manual_time                    213318929 ns    216752117 ns            3         588.235k           221.185M        7.12916M       10.9952M    709.241M              15.4187            4.8085       3.41038G          2.02114G                    43.9391                     2.84973            4.8085M    585.782k   45.9988M       205.644M/s   6.61508M   10.3101M   710.282M         15.4413    4.68782/s 3.32967G/s     2.02115G               43.9393                2.84556      1000k       4.68782M/s [BEST: throughput=  0.22 GB/s doc_throughput=     4 docs/s instructions=  2021144309 cycles=   709241140 branch_miss=  588235 cache_miss= 7129161 cache_ref=  10995231 items=   1000000 avg_time= 213318929 ns]
large_random<rapidjson_lossless>/manual_time           246824692 ns    250260246 ns            3         581.075k           190.889M        7.12747M        11.015M    830.872M              18.0629           4.14987       3.44801G          2.48311G                    53.9821                     2.98856           4.14987M    580.893k   45.9988M       177.729M/s   6.61236M   10.3438M   833.674M         18.1238    4.05146/s  3.3776G/s     2.48312G               53.9823                2.97852      1000k       4.05146M/s [BEST: throughput=  0.19 GB/s doc_throughput=     4 docs/s instructions=  2483111576 cycles=   830871742 branch_miss=  581075 cache_miss= 7127466 cache_ref=  11015039 items=   1000000 avg_time= 246824692 ns]
large_random<rapidjson_insitu>/manual_time             237213860 ns    240635341 ns            3         585.024k           198.483M         8.2411M       12.6187M     796.84M              17.3231           4.31497       3.43834G          1.75214G                    38.0911                     2.19886           4.31497M    583.881k   45.9988M        184.93M/s   7.74736M   11.9549M   798.341M         17.3557    4.21561/s 3.36549G/s     1.75215G               38.0913                2.19474      1000k       4.21561M/s [BEST: throughput=  0.20 GB/s doc_throughput=     4 docs/s instructions=  1752144314 cycles=   796840477 branch_miss=  585024 cache_miss= 8241096 cache_ref=  12618656 items=   1000000 avg_time= 237213860 ns]
large_random<nlohmann_json>/manual_time               1243158003 ns   1246622672 ns            1         4.11322M           37.0016M        48.3151M       62.7366M    4.57392G              99.4357          0.804403       3.67928G          12.3806G                     269.15                     2.70677           804.403k    4.11322M   45.9988M       35.2874M/s   48.3151M   62.7366M   4.57392G         99.4357   0.804403/s 3.67928G/s     12.3806G                269.15                2.70677      1000k       804.403k/s [BEST: throughput=  0.04 GB/s doc_throughput=     0 docs/s instructions= 12380552776 cycles=  4573921653 branch_miss= 4113221 cache_miss=48315052 cache_ref=  62736614 items=   1000000 avg_time=1243158003 ns]
Creating a source file spanning 134087 KB 
kostya<simdjson_dom>/manual_time                        94115045 ns    104389010 ns            7         1036.57k           1.45991G        16.1654M       22.9045M    346.972M              2.52702           10.6326       3.68922G          991.684M                    7.22249                     2.85811           5.57454M    1035.24k   137.305M       1.35871G/s   16.2078M   22.8302M   347.182M         2.52854    10.6253/s 3.68891G/s     991.684M               7.22249                2.85638   524.288k       5.57071M/s [BEST: throughput=  1.46 GB/s doc_throughput=    10 docs/s instructions=   991683883 cycles=   346972211 branch_miss= 1036572 cache_miss=16165367 cache_ref=  22904483 items=    524288 avg_time=  94115044 ns]
kostya<simdjson_ondemand>/manual_time                   64947224 ns     75188671 ns           11         476.431k           2.11668G         10.338M        14.353M    239.306M              1.74288           15.4159       3.68912G          660.046M                    4.80716                     2.75817           8.08238M    476.968k   137.305M       1.96891G/s   10.3429M   14.2877M   239.592M         1.74497    15.3971/s 3.68903G/s     660.046M               4.80716                2.75487   524.288k       8.07252M/s [BEST: throughput=  2.12 GB/s doc_throughput=    15 docs/s instructions=   660046421 cycles=   239305840 branch_miss=  476431 cache_miss=10337987 cache_ref=  14352993 items=    524288 avg_time=  64947224 ns]
kostya<yyjson>/manual_time                             176758826 ns    187080495 ns            4         411.755k           777.415M        11.6585M       16.8399M    455.301M              3.31598           5.66196       2.57789G          978.903M                     7.1294                     2.15001            2.9685M     411.82k   137.305M       740.807M/s   11.6613M   16.8234M   455.162M         3.31497    5.65743/s 2.57504G/s     978.903M                7.1294                2.15067   524.288k       2.96612M/s [BEST: throughput=  0.78 GB/s doc_throughput=     5 docs/s instructions=   978902584 cycles=   455300682 branch_miss=  411755 cache_miss=11658504 cache_ref=  16839910 items=    524288 avg_time= 176758826 ns]
kostya<yyjson_insitu>/manual_time                      123712242 ns    134031842 ns            6          416.75k           1.11038G        8.99462M       12.6906M    362.105M              2.63723           8.08697       2.92833G          960.633M                    6.99634                     2.65291            4.2399M    416.942k   137.305M       1058.46M/s   8.99617M   12.7246M   362.025M         2.63665    8.08327/s 2.92635G/s     960.633M               6.99634                 2.6535   524.288k       4.23796M/s [BEST: throughput=  1.11 GB/s doc_throughput=     8 docs/s instructions=   960632918 cycles=   362105365 branch_miss=  416750 cache_miss= 8994622 cache_ref=  12690554 items=    524288 avg_time= 123712242 ns]
kostya<sajson>/manual_time                             137943743 ns    148257032 ns            5         355.082k           996.181M        12.5975M       17.5121M    508.491M              3.70337           7.25524       3.68923G          1.54442G                    11.2481                     3.03727           3.80384M    355.184k   137.305M       949.258M/s   12.6193M    17.524M   508.898M         3.70634    7.24933/s 3.68917G/s     1.54442G               11.2481                3.03484   524.288k       3.80074M/s [BEST: throughput=  1.00 GB/s doc_throughput=     7 docs/s instructions=  1544424211 cycles=   508491020 branch_miss=  355082 cache_miss=12597468 cache_ref=  17512105 items=    524288 avg_time= 137943742 ns]
kostya<rapidjson>/manual_time                          281119032 ns    291474636 ns            3         1010.84k           494.058M         8.5016M       12.4478M    944.282M              6.87726           3.59825       3.39777G          2.74501G                    19.9921                     2.90699           1.88652M    1004.59k   137.305M       465.796M/s   8.20086M   12.0779M   946.659M         6.89457    3.55721/s 3.36747G/s     2.74502G               19.9921                2.89969   524.288k         1.865M/s [BEST: throughput=  0.49 GB/s doc_throughput=     3 docs/s instructions=  2745013783 cycles=   944281903 branch_miss= 1010838 cache_miss= 8501600 cache_ref=  12447828 items=    524288 avg_time= 281119032 ns]
kostya<rapidjson_lossless>/manual_time                 302522492 ns    312886647 ns            2         962.791k           457.697M        8.50392M       12.6032M    1025.02M              7.46524           3.33343       3.41682G          3.01187G                    21.9356                     2.93836           1.74768M     962.44k   137.305M       432.841M/s    8.2756M   12.2875M   1027.16M         7.48087    3.30554/s 3.39532G/s     3.01187G               21.9356                2.93223   524.288k       1.73305M/s [BEST: throughput=  0.46 GB/s doc_throughput=     3 docs/s instructions=  3011867072 cycles=  1025015273 branch_miss=  962791 cache_miss= 8503922 cache_ref=  12603226 items=    524288 avg_time= 302522492 ns]
kostya<rapidjson_insitu>/manual_time                   272285476 ns    282637383 ns            3         1009.19k            510.11M        12.2911M       16.5643M    911.589M              6.63916           3.71516        3.3867G          2.22935G                    16.2365                     2.44557           1.94781M    1008.37k   137.305M       480.908M/s   11.9939M   16.1892M   913.515M         6.65318    3.67262/s 3.35499G/s     2.22935G               16.2365                2.44041   524.288k       1.92551M/s [BEST: throughput=  0.51 GB/s doc_throughput=     3 docs/s instructions=  2229351224 cycles=   911589226 branch_miss= 1009187 cache_miss=12291140 cache_ref=  16564324 items=    524288 avg_time= 272285475 ns]
kostya<nlohmann_json>/manual_time                     1832143898 ns   1842557273 ns            1         14.8018M           74.9423M        71.1599M       87.8955M    6.75986G              49.2324          0.545809       3.68959G          17.2831G                    125.874                     2.55672           286.161k    14.8018M   137.305M       71.4705M/s   71.1599M   87.8955M   6.75986G         49.2324   0.545809/s 3.68959G/s     17.2831G               125.874                2.55672   524.288k       286.161k/s [BEST: throughput=  0.07 GB/s doc_throughput=     0 docs/s instructions= 17283074447 cycles=  6759858659 branch_miss=14801797 cache_miss=71159888 cache_ref=  87895471 items=    524288 avg_time=1832143898 ns]
distinct_user_id<simdjson_dom>/manual_time                271606 ns       301451 ns         2576           4.053k           2.34288G               0        94.182k    995.382k              1.57618          3.70994k       3.69281G          2.94967M                    4.67078                     2.96335           426.643k    4.23984k   631.515k       2.16543G/s   0.781056   94.3406k   1002.46k         1.58738   3.68181k/s 3.69085G/s     2.94967M               4.67078                2.94244        115       423.408k/s [BEST: throughput=  2.34 GB/s doc_throughput=  3709 docs/s instructions=     2949670 cycles=      995382 branch_miss=    4053 cache_miss=       0 cache_ref=     94182 items=       115 avg_time=    271605 ns]
distinct_user_id<simdjson_ondemand>/manual_time           166923 ns       196380 ns         4192            2.15k           3.81278G               0        56.981k    611.732k             0.968674          6.03752k       3.69334G          1.91823M                     3.0375                     3.13573           694.314k    2.28657k   631.515k       3.52345G/s   0.133349   56.7515k   616.198k        0.975746   5.99078k/s 3.69151G/s     1.91823M                3.0375                  3.113        115        688.94k/s [BEST: throughput=  3.81 GB/s doc_throughput=  6037 docs/s instructions=     1918227 cycles=      611732 branch_miss=    2150 cache_miss=       0 cache_ref=     56981 items=       115 avg_time=    166923 ns]
distinct_user_id<yyjson>/manual_time                      546658 ns       580289 ns         1000           6.752k           1.94844G         15.265k        76.877k    1.19667M              1.89492          3.08534k       3.69214G          2.86148M                    4.53113                      2.3912           354.815k    7.28789k   631.515k       1101.71M/s   7.34283k   58.1433k   1.42438M         2.25549    1.8293k/s 2.60561G/s     2.86167M               4.53144                2.00907        115       210.369k/s [BEST: throughput=  1.95 GB/s doc_throughput=  3085 docs/s instructions=     2861478 cycles=     1196669 branch_miss=    6752 cache_miss=   15265 cache_ref=     76877 items=       115 avg_time=    546658 ns]
distinct_user_id<yyjson_insitu>/manual_time               419627 ns       452603 ns         1668           6.794k           2.10158G             384        46.963k    1.10641M              1.75199          3.32784k       3.68195G          2.86117M                    4.53065                       2.586           382.702k    7.39238k   631.515k       1.40159G/s    51.8519   32.5021k   1.21502M         1.92397   2.38307k/s 2.89547G/s     2.86143M               4.53106                2.35506        115       274.053k/s [BEST: throughput=  2.10 GB/s doc_throughput=  3327 docs/s instructions=     2861172 cycles=     1106409 branch_miss=    6794 cache_miss=     384 cache_ref=     46963 items=       115 avg_time=    419626 ns]
distinct_user_id<sajson>/manual_time                      584858 ns       615561 ns         1198          10.017k           1089.41M               0        47.952k    2.14012M              3.38887          1.72507k       3.69186G          5.81022M                    9.20044                      2.7149           198.383k    10.6435k   631.515k       1029.75M/s   0.788815   47.9652k   2.15811M         3.41735   1.70982k/s 3.68997G/s     5.81022M               9.20045                2.69228        115       196.629k/s [BEST: throughput=  1.09 GB/s doc_throughput=  1725 docs/s instructions=     5810219 cycles=     2140122 branch_miss=   10017 cache_miss=       0 cache_ref=     47952 items=       115 avg_time=    584857 ns]
distinct_user_id<rapidjson>/manual_time                  2413607 ns      2444810 ns          291          30.907k           284.386M             316        55.388k     8.1862M              12.9628           450.323       3.68643G           21.843M                    34.5882                     2.66827           51.7871k    30.9726k   631.515k       249.527M/s   1.32686k   36.2341k   8.35196M         13.2253    414.318/s 3.46036G/s     21.8439M               34.5897                2.61542        115       47.6465k/s [BEST: throughput=  0.28 GB/s doc_throughput=   450 docs/s instructions=    21842994 cycles=     8186203 branch_miss=   30907 cache_miss=     316 cache_ref=     55388 items=       115 avg_time=   2413607 ns]
distinct_user_id<rapidjson_insitu>/manual_time           1509541 ns      1539997 ns          459          26.353k           448.898M          7.605k        47.048k    5.19336M              8.22365           710.827       3.69158G           13.278M                    21.0256                     2.55672           81.7451k    29.7184k   631.515k       398.969M/s   2.80557k   38.6415k   5.30371M         8.39839    662.453/s 3.51346G/s     13.2783M               21.0261                2.50358        115       76.1821k/s [BEST: throughput=  0.45 GB/s doc_throughput=   710 docs/s instructions=    13277971 cycles=     5193358 branch_miss=   26353 cache_miss=    7605 cache_ref=     47048 items=       115 avg_time=   1509541 ns]
distinct_user_id<nlohmann_json>/manual_time              7430792 ns      7465143 ns           96         129.209k            87.478M               6       228.846k    26.6341M              42.1749           138.521       3.68938G           73.649M                    116.623                     2.76521           15.9299k     142.37k   631.515k       81.0492M/s    232.271   394.053k   27.4146M         43.4109    134.575/s 3.68933G/s     72.3325M               114.538                2.63846        115       15.4761k/s [BEST: throughput=  0.09 GB/s doc_throughput=   138 docs/s instructions=    73648973 cycles=    26634109 branch_miss=  129209 cache_miss=       6 cache_ref=    228846 items=       115 avg_time=   7430791 ns]
find_tweet<simdjson_dom>/manual_time                      259917 ns       289073 ns         2699            3.94k           2.45306G               0         83.85k    950.578k              1.50523           3.8844k       3.69243G          2.86435M                    4.53568                     3.01327            3.8844k    4.05324k   631.515k       2.26281G/s    6.86514   83.8302k   959.192k         1.51887   3.84738k/s 3.69037G/s     2.86435M               4.53568                2.98621          1       3.84738k/s [BEST: throughput=  2.45 GB/s doc_throughput=  3884 docs/s instructions=     2864350 cycles=      950578 branch_miss=    3940 cache_miss=       0 cache_ref=     83850 items=         1 avg_time=    259917 ns]
find_tweet<simdjson_ondemand>/manual_time                 114078 ns       142525 ns         6128           1.273k           5.56141G               0        32.412k    419.465k              0.66422          8.80646k         3.694G          1.41246M                    2.23662                     3.36728           8.80646k    1.31199k   631.515k       5.15562G/s   0.229928   32.5803k   421.168k        0.666917   8.76591k/s 3.69192G/s     1.41246M               2.23662                3.35367          1       8.76591k/s [BEST: throughput=  5.56 GB/s doc_throughput=  8806 docs/s instructions=     1412458 cycles=      419465 branch_miss=    1273 cache_miss=       0 cache_ref=     32412 items=         1 avg_time=    114078 ns]
find_tweet<yyjson>/manual_time                            611326 ns       642334 ns         1153           9.186k           1.90267G             165        68.259k    1.22574M              1.94095          3.01286k         3.693G          2.80059M                    4.43472                     2.28481           3.01286k    7.31554k   631.515k       985.169M/s    1089.05   41.7904k   1.45323M         2.30118   1.63579k/s 2.37718G/s     2.80107M               4.43547                1.92748          1       1.63579k/s [BEST: throughput=  1.90 GB/s doc_throughput=  3012 docs/s instructions=     2800590 cycles=     1225742 branch_miss=    9186 cache_miss=     165 cache_ref=     68259 items=         1 avg_time=    611326 ns]
find_tweet<yyjson_insitu>/manual_time                     409106 ns       439412 ns         1711            6.41k           2.18208G             679        38.225k    1065.41k              1.68707          3.45531k       3.68132G          2.80027M                    4.43421                     2.62835           3.45531k    7.17814k   631.515k       1.43763G/s    17.4629    23.489k   1.17705M         1.86386   2.44435k/s 2.87714G/s     2.80053M               4.43462                2.37927          1       2.44435k/s [BEST: throughput=  2.18 GB/s doc_throughput=  3455 docs/s instructions=     2800269 cycles=     1065411 branch_miss=    6410 cache_miss=     679 cache_ref=     38225 items=         1 avg_time=    409106 ns]
find_tweet<sajson>/manual_time                            572747 ns       602730 ns         1217           9.999k           1.11452G               0         38.14k    2.09191M              3.31252          1.76484k       3.69188G          5.71503M                    9.04971                     2.73197           1.76484k    10.4864k   631.515k       1051.53M/s   0.879211   38.3004k   2.11339M         3.34654   1.74597k/s 3.68992G/s     5.71503M               9.04971                 2.7042          1       1.74597k/s [BEST: throughput=  1.11 GB/s doc_throughput=  1764 docs/s instructions=     5715026 cycles=     2091908 branch_miss=    9999 cache_miss=       0 cache_ref=     38140 items=         1 avg_time=    572747 ns]
find_tweet<rapidjson>/manual_time                        2402577 ns      2431774 ns          292          30.807k           285.698M             245        47.937k    8.15073M              12.9066             452.4       3.68739G           21.759M                    34.4553                     2.66958              452.4    30.8993k   631.515k       250.672M/s     1020.7   28.9742k    8.3124M         13.1626     416.22/s 3.45978G/s     21.7599M               34.4567                2.61777          1         416.22/s [BEST: throughput=  0.29 GB/s doc_throughput=   452 docs/s instructions=    21759038 cycles=     8150732 branch_miss=   30807 cache_miss=     245 cache_ref=     47937 items=         1 avg_time=   2402576 ns]
find_tweet<rapidjson_insitu>/manual_time                 1526177 ns      1556157 ns          450          26.376k            449.12M              31        36.397k    5.19083M              8.21965           711.178       3.69161G          13.1994M                    20.9012                     2.54283            711.178    31.7716k   631.515k        394.62M/s   2.65874k   29.5204k   5.36738M         8.49921    655.232/s 3.51688G/s     13.1997M               20.9017                2.45925          1        655.232/s [BEST: throughput=  0.45 GB/s doc_throughput=   711 docs/s instructions=    13199414 cycles=     5190832 branch_miss=   26376 cache_miss=      31 cache_ref=     36397 items=         1 avg_time=   1526177 ns]
find_tweet<nlohmann_json>/manual_time                    6347009 ns      6377480 ns          113         108.135k           102.998M               0       234.804k    22.6184M              35.8161           163.097         3.689G          62.1938M                    98.4835                      2.7497            163.097    117.346k   631.515k       94.8887M/s    35.1681   340.175k   23.4174M         37.0813    157.555/s 3.68952G/s     62.2997M               98.6512                 2.6604          1        157.555/s [BEST: throughput=  0.10 GB/s doc_throughput=   163 docs/s instructions=    62193781 cycles=    22618373 branch_miss=  108135 cache_miss=       0 cache_ref=    234804 items=         1 avg_time=   6347009 ns]
top_tweet<simdjson_dom>/manual_time                       265804 ns       294436 ns         2633           4.131k           2.39312G               0        91.715k    974.421k              1.54299          3.78949k       3.69256G          2.90124M                    4.59409                      2.9774           3.78949k    4.17923k   631.515k        2.2127G/s   0.452716   91.8192k   980.967k         1.55336   3.76216k/s 3.69056G/s     2.90124M               4.59409                2.95753          1       3.76216k/s [BEST: throughput=  2.39 GB/s doc_throughput=  3789 docs/s instructions=     2901238 cycles=      974421 branch_miss=    4131 cache_miss=       0 cache_ref=     91715 items=         1 avg_time=    265804 ns]
top_tweet<simdjson_ondemand>/manual_time                  167196 ns       195625 ns         4188           2.141k           3.81313G               0        56.639k     611.68k             0.968591          6.03806k       3.69336G          1.93826M                    3.06922                     3.16875           6.03806k    2.28366k   631.515k       3.51769G/s  0.0159981   56.5976k   617.179k          0.9773   5.98101k/s 3.69135G/s     1.93826M               3.06922                3.14051          1       5.98101k/s [BEST: throughput=  3.81 GB/s doc_throughput=  6038 docs/s instructions=     1938258 cycles=      611680 branch_miss=    2141 cache_miss=       0 cache_ref=     56639 items=         1 avg_time=    167195 ns]
top_tweet<simdjson_ondemand_forward_only>/manual_time     173196 ns       201650 ns         4042           2.386k            3.6738G               0        57.289k    634.763k              1.00514          5.81744k       3.69269G          2.16394M                    3.42658                     3.40905           5.81744k    2.49501k   631.515k       3.39583G/s  0.0170708   57.2637k   639.314k         1.01235   5.77381k/s 3.69128G/s     2.16394M               3.42658                3.38478          1       5.77381k/s [BEST: throughput=  3.67 GB/s doc_throughput=  5817 docs/s instructions=     2163936 cycles=      634763 branch_miss=    2386 cache_miss=       0 cache_ref=     57289 items=         1 avg_time=    173195 ns]
top_tweet<yyjson>/manual_time                             616623 ns       646927 ns         1143            9.25k           1.87654G             105        72.723k    1.24261M              1.96767          2.97149k        3.6924G          2.82786M                     4.4779                     2.27574           2.97149k    7.44041k   631.515k       976.706M/s    1025.69   47.0205k   1.47294M          2.3324   1.62174k/s 2.38872G/s     2.82834M               4.47866                 1.9202          1       1.62174k/s [BEST: throughput=  1.88 GB/s doc_throughput=  2971 docs/s instructions=     2827861 cycles=     1242612 branch_miss=    9250 cache_miss=     105 cache_ref=     72723 items=         1 avg_time=    616623 ns]
top_tweet<yyjson_insitu>/manual_time                      414729 ns       444325 ns         1688           6.705k            2.1319G             584        43.002k     1090.5k               1.7268          3.37586k       3.68137G          2.82754M                    4.47739                     2.59289           3.37586k    7.27133k   631.515k       1.41814G/s    47.4893   28.8523k   1.19759M         1.89637   2.41121k/s 2.88764G/s      2.8278M               4.47781                2.36125          1       2.41121k/s [BEST: throughput=  2.13 GB/s doc_throughput=  3375 docs/s instructions=     2827540 cycles=     1090499 branch_miss=    6705 cache_miss=     584 cache_ref=     43002 items=         1 avg_time=    414728 ns]
top_tweet<sajson>/manual_time                             577013 ns       606078 ns         1209          10.219k           1.10304G               0         43.56k    2.11368M                3.347          1.74665k       3.69186G          5.74502M                     9.0972                     2.71802           1.74665k    10.5277k   631.515k       1043.75M/s   0.689826   43.6588k    2.1293M         3.37173   1.73306k/s  3.6902G/s     5.74502M                9.0972                2.69808          1       1.73306k/s [BEST: throughput=  1.10 GB/s doc_throughput=  1746 docs/s instructions=     5745018 cycles=     2113678 branch_miss=   10219 cache_miss=       0 cache_ref=     43560 items=         1 avg_time=    577012 ns]
top_tweet<rapidjson>/manual_time                         2408881 ns      2438092 ns          292          30.893k           285.374M              61        51.286k    8.16908M              12.9357           451.888        3.6915G          21.8178M                    34.5484                     2.67078            451.888    30.9358k   631.515k       250.016M/s   1.16813k   32.9116k   8.33607M         13.2001     415.13/s 3.46056G/s     21.8187M               34.5498                2.61739          1         415.13/s [BEST: throughput=  0.29 GB/s doc_throughput=   451 docs/s instructions=    21817814 cycles=     8169079 branch_miss=   30893 cache_miss=      61 cache_ref=     51286 items=         1 avg_time=   2408881 ns]
top_tweet<rapidjson_insitu>/manual_time                  1511678 ns      1540934 ns          458          26.063k           452.084M              25         41.52k    5.15671M              8.16562           715.871       3.69154G          13.2539M                    20.9874                     2.57022            715.871    30.8654k   631.515k       398.405M/s    2.7371k   34.6155k   5.31211M          8.4117    661.517/s 3.51405G/s     13.2542M               20.9879                2.49509          1        661.517/s [BEST: throughput=  0.45 GB/s doc_throughput=   715 docs/s instructions=    13253886 cycles=     5156710 branch_miss=   26063 cache_miss=      25 cache_ref=     41520 items=         1 avg_time=   1511677 ns]
top_tweet<nlohmann_json>/manual_time                     8942943 ns      8972937 ns           78         196.322k           71.0912M               0       398.769k    32.7762M              51.9009           112.573        3.6897G          85.8318M                    135.914                     2.61872            112.573    199.997k   631.515k       67.3447M/s    59.0769   415.641k   32.9927M         52.2438     111.82/s 3.68925G/s     86.1721M               136.453                2.61185          1         111.82/s [BEST: throughput=  0.07 GB/s doc_throughput=   112 docs/s instructions=    85831778 cycles=    32776206 branch_miss=  196322 cache_miss=       0 cache_ref=    398769 items=         1 avg_time=   8942943 ns]
